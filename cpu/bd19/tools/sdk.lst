
sdk.elf:	file format ELF32-q32s

Disassembly of section .text:
text_begin:
 1e00120:    ee ff 50 18 00 00 	sp = 6224			  ## startup.S:25:0
 1e00126:    ed ff 50 18 00 00 	ssp = 6224			  ## startup.S:26:0
 1e0012c:    80 f3 2e 6f       	call 56924 <boot_info_init : 1e0df8c >			  ## startup.S:28:0
 1e00130:    00 70             	r0 = 0			  ## startup.S:30:0
 1e00132:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## startup.S:31:0
 1e00138:    c2 ff 94 19 00 00 	r2 = 6548 <report_bss_size : 1994 >			  ## startup.S:32:0
 1e0013e:    92 d0             	r2 = r2 >> 2			  ## startup.S:33:0
 1e00140:    02 18             	goto 4 <text_begin+0x26 : 1e00146 >			  ## startup.S:35:0
 1e00142:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:37:0
 1e00146:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:39:0
 1e0014a:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x22 : 1e00142 >			  ## startup.S:40:0
 1e0014e:    00 70             	r0 = 0			  ## startup.S:42:0
 1e00150:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## startup.S:43:0
 1e00156:    c2 ff 40 73 00 00 	r2 = 29504 <nvbss_size : 7340 >			  ## startup.S:44:0
 1e0015c:    92 d0             	r2 = r2 >> 2			  ## startup.S:45:0
 1e0015e:    02 18             	goto 4 <text_begin+0x44 : 1e00164 >			  ## startup.S:47:0
 1e00160:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:49:0
 1e00164:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:51:0
 1e00168:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x40 : 1e00160 >			  ## startup.S:52:0
 1e0016c:    c0 ff 40 08 00 00 	r0 = 2112 <set_charge_mA.charge_mA_old : 840 >			  ## startup.S:54:0
 1e00172:    c1 ff 6c 8c e1 01 	r1 = 31558764 <text_end : 1e18c6c >			  ## startup.S:55:0
 1e00178:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:56:0
 1e0017e:    92 d0             	r2 = r2 >> 2			  ## startup.S:57:0
 1e00180:    04 18             	goto 8 <text_begin+0x6A : 1e0018a >			  ## startup.S:59:0
 1e00182:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:61:0
 1e00186:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:62:0
 1e0018a:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:64:0
 1e0018e:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x62 : 1e00182 >			  ## startup.S:65:0
 1e00192:    c0 ff 00 32 00 00 	r0 = 12800 <report_data_code_begin : 3200 >			  ## startup.S:67:0
 1e00198:    c1 ff 6c 94 e1 01 	r1 = 31560812 <data_code_begin : 1e1946c >			  ## startup.S:68:0
 1e0019e:    c2 ff b8 15 00 00 	r2 = 5560 <report_data_code_size : 15b8 >			  ## startup.S:69:0
 1e001a4:    92 d0             	r2 = r2 >> 2			  ## startup.S:70:0
 1e001a6:    04 18             	goto 8 <text_begin+0x90 : 1e001b0 >			  ## startup.S:72:0
 1e001a8:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:74:0
 1e001ac:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:75:0
 1e001b0:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:77:0
 1e001b4:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x88 : 1e001a8 >			  ## startup.S:78:0
 1e001b8:    28 fb 00 2b       	r2 = icfg			  ## startup.S:79:0
 1e001bc:    32 fd 03 2a       	r2 = r2 & 4294966527			  ## startup.S:80:0
 1e001c0:    29 fb 00 2b       	icfg = r2			  ## startup.S:81:0
 1e001c4:    80 f3 ff 5c       	call 47614 <maskrom_init : 1e0bbc6 >			  ## startup.S:87:0
 1e001c8:    c0 f3 f5 6e       	goto 56810 <main : 1e0dfb6 >			  ## startup.S:90:0


__BT_UPDATA_JUMP:
 1e001cc:    00 70             	r0 = 0			  ## startup.S:94:0
 1e001ce:    01 fb 20 08       	r1 = 2080 <report_irq_stack_size : 820 >			  ## startup.S:95:0
 1e001d2:    02 fb 00 08       	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:96:0
 1e001d6:    92 d0             	r2 = r2 >> 2			  ## startup.S:97:0
 1e001d8:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x12 : 1e001de >			  ## startup.S:99:0
 1e001da:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:101:0
 1e001de:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:103:0
 1e001e2:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0xE : 1e001da >			  ## startup.S:104:0
 1e001e6:    00 70             	r0 = 0			  ## startup.S:106:0
 1e001e8:    01 fb c0 13       	r1 = 5056 <UPDATE_CODE_TOTAL_SIZE+0x17E : 13c0 >			  ## startup.S:107:0
 1e001ec:    02 fb 08 01       	r2 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## startup.S:108:0
 1e001f0:    92 d0             	r2 = r2 >> 2			  ## startup.S:109:0
 1e001f2:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x2C : 1e001f8 >			  ## startup.S:110:0
 1e001f4:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:112:0
 1e001f8:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:114:0
 1e001fc:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0x28 : 1e001f4 >			  ## startup.S:115:0
 1e00200:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## startup.S:118:0
 1e00206:    c0 ff 04 fc 00 00 	r0 = 64516 <boot_arg_list+0x4 : fc04 >			  ## startup.S:119:0
 1e0020c:    09 40             	[r0 + 0] = r1			  ## startup.S:120:0
 1e0020e:    ed ff 20 0c 00 00 	ssp = 3104			  ## startup.S:122:0
 1e00214:    3d 00             	sp = ssp			  ## startup.S:123:0
 1e00216:    ec ff 20 10 00 00 	usp = 4128			  ## startup.S:124:0
 1e0021c:    00 70             	r0 = 0			  ## startup.S:125:0
 1e0021e:    01 70             	r1 = 0			  ## startup.S:126:0
 1e00220:    02 70             	r2 = 0			  ## startup.S:127:0
 1e00222:    03 70             	r3 = 0			  ## startup.S:128:0
 1e00224:    04 70             	r4 = 0			  ## startup.S:129:0
 1e00226:    05 70             	r5 = 0			  ## startup.S:130:0
 1e00228:    06 70             	r6 = 0			  ## startup.S:131:0
 1e0022a:    07 70             	r7 = 0			  ## startup.S:132:0
 1e0022c:    08 70             	r8 = 0			  ## startup.S:133:0
 1e0022e:    09 70             	r9 = 0			  ## startup.S:134:0
 1e00230:    0a 70             	r10 = 0			  ## startup.S:135:0
 1e00232:    0b 70             	r11 = 0			  ## startup.S:136:0
 1e00234:    0c 70             	r12 = 0			  ## startup.S:137:0
 1e00236:    0d 70             	r13 = 0			  ## startup.S:138:0
 1e00238:    0e 70             	r14 = 0			  ## startup.S:139:0
 1e0023a:    0f 70             	r15 = 0			  ## startup.S:140:0
 1e0023c:    29 fb 00 05       	psr = r0			  ## startup.S:141:0
 1e00240:    29 fb 00 01       	rete = r0			  ## startup.S:142:0
 1e00244:    29 fb 00 02       	retx = r0			  ## startup.S:143:0
 1e00248:    29 fb 00 03       	rets = r0			  ## startup.S:144:0
 1e0024c:    29 fb 00 00       	reti = r0			  ## startup.S:145:0
 1e00250:    e0 ff 60 60 10 00 	reti = 1073248			  ## startup.S:146:0
 1e00256:    22 00             	rti			  ## startup.S:147:0


adc_value_push:
 1e00258:    02 50             	r2 = h[r0 + 0] (u)			  ## adc_api.c:111:0
 1e0025a:    51 f8 00 02       	h[r0+r2<<1] = r1			  ## adc_api.c:113:16
 1e0025e:    12 80             	r2 += 1			  ## adc_api.c:114:8
 1e00260:    01 70             	r1 = 0			  ## adc_api.c:118:16
 1e00262:    92 e0 01 00       	if (r2 == 9) goto 2 <adc_value_push+0x10 : 1e00268 >
 1e00266:    21 08             	r1 = r2			  ## adc_api.c:118:16
 1e00268:    09 50             	h[r0 + 0] = r1			  ## adc_api.c:118:14
 1e0026a:    20 00             	rts			  ## adc_api.c:119:1


adc_pmu_ch_select:
 1e0026c:    c1 ff 94 18 1a 00 	r1 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:101:0
 1e00272:    02 62             	r2 = b[r1 + 0] (u)			  ## p33.c:101:0
 1e00274:    32 fd 1e 29       	r2 = r2 & 4294967265			  ## p33.c:101:0
 1e00278:    06 20             	if (r0 == 0) goto 12 <adc_pmu_ch_select+0x1A : 1e00286 >			  ## p33.c:101:0
 1e0027a:    40 c0             	r0 = r0 << 1			  ## p33.c:108:9
 1e0027c:    03 fb 1e e0       	r3 = -8162 <bank_code_load_addr+0x1E35FA : 1ffe01e >			  ## p33.c:108:9
 1e00280:    50 b7             	r0 &= r3			  ## p33.c:108:9
 1e00282:    50 b4             	r0 |= r2			  ## p33.c:108:9
 1e00284:    0a 18             	goto 20 <adc_pmu_ch_select+0x2E : 1e0029a >			  ## p33.c:108:9
 1e00286:    0a 62             	b[r1 + 0] = r2			  ## p33.c:103:9
 1e00288:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:104:9
 1e0028a:    90 b2             	r0 |= 32			  ## p33.c:104:9
 1e0028c:    08 62             	b[r1 + 0] = r0			  ## p33.c:104:9
 1e0028e:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:105:9
 1e00290:    10 b3             	r0 |= 64			  ## p33.c:105:9
 1e00292:    08 62             	b[r1 + 0] = r0			  ## p33.c:105:9
 1e00294:    90 62             	r0 = b[r1 + 9] (u)			  ## p33.c:106:9
 1e00296:    91 80             	r1 += 9			  ## p33.c:106:9
 1e00298:    90 b2             	r0 |= 32			  ## p33.c:106:9
 1e0029a:    08 62             	b[r1 + 0] = r0
 1e0029c:    20 00             	rts			  ## p33.c:110:1


adc_sample:
 1e0029e:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:263:0
 1e002a0:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## adc_api.c:264:29
 1e002a6:    22 53             	r2 = h[r1 + 36] (u)			  ## adc_api.c:264:29
 1e002a8:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## adc_api.c:264:29
 1e002ae:    2a 53             	h[r1 + 36] = r2			  ## adc_api.c:265:14
 1e002b0:    01 c2             	r1 = r0 << 8			  ## adc_api.c:275:5
 1e002b2:    21 fd 0f 1a       	r1 = r1 & 3840			  ## adc_api.c:275:5
 1e002b6:    22 fc 6f f0       	r2 = r2 + -3985			  ## adc_api.c:275:5
 1e002ba:    23 04             	r3 = r0.l (u)			  ## adc_api.c:277:13
 1e002bc:    e0 fd 20 41       	r4 = r1 | r2			  ## adc_api.c:275:5
 1e002c0:    d3 e0 02 10       	if (r3 != 13) goto 4 <adc_sample+0x2A : 1e002c8 >
 1e002c4:    00 d4             	r0 = r0 >> 16			  ## adc_api.c:278:30
 1e002c6:    d2 17             	call -92 <adc_pmu_ch_select : 1e0026c >			  ## adc_api.c:278:9
 1e002c8:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >
 1e002ce:    0c 40             	[r0 + 0] = r4			  ## adc_api.c:281:17
 1e002d0:    00 f4 10 09       	[r0 + 0] |= 16			  ## adc_api.c:282:17
 1e002d4:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:283:17
 1e002d8:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:283:17


adc_scan:
 1e002da:    77 01             	[--sp] = {rets, r7-r4}			  ## adc_api.c:294:0
 1e002dc:    c3 ff 80 27 00 00 	r3 = 10112 <lrc.7 : 2780 >			  ## adc_api.c:294:0
 1e002e2:    00 f6 40 31       	r0 = [r3 + 320]			  ## adc_api.c:297:31
 1e002e6:    f0 ef 55 10       	if (r0 != -1) goto 170 <adc_scan+0xBA : 1e00394 >
 1e002ea:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:301:17
 1e002f0:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:301:17
 1e002f2:    24 f3 4f 00       	if ((r0 & 16) != 0) goto 158 <adc_scan+0xBA : 1e00394 >			  ## adc_api.c:301:17
 1e002f6:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e002fc:    00 f9 48 40       	r0 = b[r4 + 72] (u)
 1e00300:    13 20             	if (r0 == 0) goto 38 <adc_scan+0x4E : 1e00328 >
 1e00302:    20 59             	r0 = h[r4 + 36] (u)			  ## adc_api.c:306:35
 1e00304:    05 68             	r5 = b[r4 + 0] (u)			  ## adc_api.c:306:19
 1e00306:    29 c1             	r1 = r5 << 4			  ## adc_api.c:306:27
 1e00308:    31 09             	r1 += r3			  ## adc_api.c:306:27
 1e0030a:    10 f7 a4 10       	h[r1 + 164] = r0			  ## adc_api.c:306:33
 1e0030e:    00 f6 a0 10       	r0 = [r1 + 160]			  ## adc_api.c:307:31
 1e00312:    d0 e0 0b 00       	if (r0 == 13) goto 22 <adc_scan+0x52 : 1e0032c >			  ## adc_api.c:307:13
 1e00316:    c1 ff 0d 00 05 00 	r1 = 327693 <text_size+0x374C1 : 5000d >
 1e0031c:    10 f2 0a 10       	if (r0 != r1) goto 20 <adc_scan+0x5A : 1e00334 >
 1e00320:    21 59             	r1 = h[r4 + 36] (u)			  ## adc_api.c:308:13
 1e00322:    40 fc 88 01       	r0 = r4 + 392			  ## adc_api.c:308:13
 1e00326:    05 18             	goto 10 <adc_scan+0x58 : 1e00332 >			  ## adc_api.c:308:13
 1e00328:    05 68             	r5 = b[r4 + 0] (u)
 1e0032a:    07 18             	goto 14 <adc_scan+0x60 : 1e0033a >
 1e0032c:    21 59             	r1 = h[r4 + 36] (u)			  ## adc_api.c:311:13
 1e0032e:    40 fc 9c 01       	r0 = r4 + 412			  ## adc_api.c:311:13
 1e00332:    92 17             	call -220 <adc_value_push : 1e00258 >
 1e00334:    00 70             	r0 = 0
 1e00336:    10 f9 48 40       	b[r4 + 72] = r0
 1e0033a:    28 c1             	r0 = r5 << 4			  ## adc_api.c:95:10
 1e0033c:    30 09             	r0 += r3			  ## adc_api.c:95:10
 1e0033e:    00 fc b0 00       	r0 = r0 + 176			  ## adc_api.c:95:10
 1e00342:    15 80             	r5 += 1
 1e00344:    95 e0 05 c0       	ifs (r5 > 9) goto 10 <adc_scan+0x78 : 1e00352 >
 1e00348:    41 f6 10 00       	r1 = [r0 ++= 16]			  ## adc_api.c:96:26
 1e0034c:    f1 ef f9 0f       	if (r1 == -1) goto -14 <adc_scan+0x68 : 1e00342 >			  ## adc_api.c:96:26
 1e00350:    01 18             	goto 2 <adc_scan+0x7A : 1e00354 >			  ## adc_api.c:96:26
 1e00352:    05 70             	r5 = 0
 1e00354:    40 05             	r0 = r5.b0 (u)			  ## adc_api.c:327:9
 1e00356:    00 c1             	r0 = r0 << 4			  ## adc_api.c:327:9
 1e00358:    30 09             	r0 += r3			  ## adc_api.c:327:9
 1e0035a:    06 fc a0 00       	r6 = r0 + 160			  ## adc_api.c:327:9
 1e0035e:    31 4c             	r1 = [r6 + 12]			  ## adc_api.c:327:28
 1e00360:    13 22             	if (r1 == 0) goto 38 <adc_scan+0xAE : 1e00388 >			  ## adc_api.c:327:9
 1e00362:    07 fc a8 00       	r7 = r0 + 168
 1e00366:    00 4e             	r0 = [r7 + 0]			  ## adc_api.c:328:13
 1e00368:    c1 ff ac 08 00 00 	r1 = 2220 <jiffies : 8ac >			  ## adc_api.c:328:13
 1e0036e:    01 42             	r1 = [r1 + 0]			  ## adc_api.c:328:13
 1e00370:    10 f2 0f a0       	ifs (r0 >= r1) goto 30 <adc_scan+0xB8 : 1e00392 >			  ## adc_api.c:328:13
 1e00374:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:329:43
 1e00376:    93 17             	call -218 <adc_sample : 1e0029e >			  ## adc_api.c:329:13
 1e00378:    30 4c             	r0 = [r6 + 12]			  ## adc_api.c:331:62
 1e0037a:    01 4e             	r1 = [r7 + 0]			  ## adc_api.c:331:40
 1e0037c:    12 70             	r2 = 1			  ## adc_api.c:331:40
 1e0037e:    12 f9 48 40       	b[r4 + 72] = r2			  ## adc_api.c:331:40
 1e00382:    10 09             	r0 += r1			  ## adc_api.c:331:40
 1e00384:    08 4e             	[r7 + 0] = r0			  ## adc_api.c:331:40
 1e00386:    05 18             	goto 10 <adc_scan+0xB8 : 1e00392 >			  ## adc_api.c:331:40
 1e00388:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:334:39
 1e0038a:    89 17             	call -238 <adc_sample : 1e0029e >			  ## adc_api.c:334:9
 1e0038c:    10 70             	r0 = 1			  ## adc_api.c:334:9
 1e0038e:    10 f9 48 40       	b[r4 + 72] = r0			  ## adc_api.c:334:9
 1e00392:    0d 68             	b[r4 + 0] = r5			  ## adc_api.c:338:12
 1e00394:    57 01             	{pc, r7-r4} = [sp++]			  ## adc_api.c:346:1


adc_isr:
 1e00396:    e9 01             	[--sp] = {psr, rets, reti}			  ## adc_api.c:253:0
 1e00398:    78 f3 1f 00       	[--sp] = {r4-r0}			  ## adc_api.c:253:0
 1e0039c:    c4 ff 00 31 1e 00 	r4 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:253:0
 1e003a2:    10 48             	r0 = [r4 + 4]			  ## adc_api.c:254:24
 1e003a4:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## adc_api.c:254:14
 1e003aa:    28 53             	h[r1 + 36] = r0			  ## adc_api.c:254:14
 1e003ac:    98 f3 f6 34       	call 3172844 <local_irq_disable : 106d9c >			  ## adc_api.c:257:5
 1e003b0:    c0 f4 40 49       	[r4 + 0] = 64			  ## adc_api.c:258:17
 1e003b4:    98 f3 f0 34       	call 3172832 <local_irq_enable : 106d98 >			  ## adc_api.c:259:5
 1e003b8:    70 f3 1f 00       	{r4-r0} = [sp++]			  ## adc_api.c:260:1
 1e003bc:    a9 01             	{psr, rets, reti} = [sp++]			  ## adc_api.c:260:1
 1e003be:    22 00             	rti			  ## adc_api.c:260:1


adc_get_value:
 1e003c0:    c1 ff 48 25 00 00 	r1 = 9544 <vbat_value_array : 2548 >			  ## adc_api.c:131:0
 1e003c6:    d0 e0 14 00       	if (r0 == 13) goto 40 <adc_get_value+0x32 : 1e003f2 >			  ## adc_api.c:131:0
 1e003ca:    c2 ff 0d 00 05 00 	r2 = 327693 <text_size+0x374C1 : 5000d >			  ## adc_api.c:131:0
 1e003d0:    20 f2 10 00       	if (r0 == r2) goto 32 <adc_get_value+0x34 : 1e003f4 >			  ## adc_api.c:131:0
 1e003d4:    c1 ff 24 28 00 00 	r1 = 10276 <adc_queue+0x4 : 2824 >			  ## adc_api.c:131:0
 1e003da:    02 70             	r2 = 0			  ## adc_api.c:131:0
 1e003dc:    06 18             	goto 12 <adc_get_value+0x2A : 1e003ea >			  ## adc_api.c:131:0
 1e003de:    03 f6 fc 1f       	r3 = [r1 + -4]			  ## adc_api.c:139:26
 1e003e2:    03 f2 14 00       	if (r3 == r0) goto 40 <adc_get_value+0x4E : 1e0040e >			  ## adc_api.c:139:13
 1e003e6:    01 81             	r1 += 16			  ## adc_api.c:138:5
 1e003e8:    12 80             	r2 += 1			  ## adc_api.c:138:38
 1e003ea:    92 e0 f8 df       	ifs (r2 <= 9) goto -16 <adc_get_value+0x1E : 1e003de >
 1e003ee:    10 70             	r0 = 1
 1e003f0:    20 00             	rts
 1e003f2:    41 81             	r1 += 20
 1e003f4:    20 92             	r0 = r1 + 2			  ## adc_api.c:124:10
 1e003f6:    01 70             	r1 = 0
 1e003f8:    02 70             	r2 = 0
 1e003fa:    04 18             	goto 8 <adc_get_value+0x44 : 1e00404 >
 1e003fc:    03 f8 00 01       	r3 = h[r0+r1] (u)			  ## adc_api.c:125:16
 1e00400:    32 09             	r2 += r3			  ## adc_api.c:125:13
 1e00402:    21 80             	r1 += 2			  ## adc_api.c:124:5
 1e00404:    01 e1 fa 1f       	if (r1 != 16) goto -12 <adc_get_value+0x3C : 1e003fc >
 1e00408:    90 fd 18 02       	r0 = uextra(r2, p:3, l:16)
 1e0040c:    20 00             	rts			  ## adc_api.c:144:1
 1e0040e:    00 52             	r0 = h[r1 + 0] (u)			  ## adc_api.c:140:20
 1e00410:    20 00             	rts


adc_value_to_voltage:
 1e00412:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:148:0
 1e00414:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e0041a:    f2 54             	r2 = h[r2 + 30] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e0041c:    14 d1             	r4 = r2 >> 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:34
 1e0041e:    22 fd 0f 49       	r2 = r4 & 15			  ## adc_api.c:153:21
 1e00422:    03 fe 03 29       	r3 = r2 * 3
 1e00426:    62 fb 00 39       	r2 = 0 - r3			  ## adc_api.c:154:11
 1e0042a:    24 f3 01 40       	if ((r4 & 16) != 0) goto 2 <adc_value_to_voltage+0x1E : 1e00430 >
 1e0042e:    32 08             	r2 = r3			  ## adc_api.c:154:11
 1e00430:    22 fc 21 03       	r2 = r2 + 801			  ## adc_api.c:154:11
 1e00434:    51 0e             	r1 = r2 * r1			  ## adc_api.c:155:23
 1e00436:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## adc_api.c:155:29
 1e0043a:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:157:5


adc_get_voltage:
 1e0043c:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:161:0
 1e0043e:    04 08             	r4 = r0			  ## adc_api.c:161:0
 1e00440:    d0 70             	r0 = 13			  ## adc_api.c:166:19
 1e00442:    be 17             	call -132 <adc_get_value : 1e003c0 >			  ## adc_api.c:166:19
 1e00444:    05 08             	r5 = r0			  ## adc_api.c:166:19
 1e00446:    40 08             	r0 = r4			  ## adc_api.c:167:19
 1e00448:    bb 17             	call -138 <adc_get_value : 1e003c0 >			  ## adc_api.c:167:19
 1e0044a:    01 08             	r1 = r0			  ## adc_api.c:167:19
 1e0044c:    50 08             	r0 = r5			  ## adc_api.c:168:12
 1e0044e:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:168:12
 1e00450:    e0 1f             	goto -64 <adc_value_to_voltage : 1e00412 >			  ## adc_api.c:168:12


set_charge_mA:
 1e00452:    c1 ff 40 08 00 00 	r1 = 2112 <set_charge_mA.charge_mA_old : 840 >			  ## charge.c:329:0
 1e00458:    02 62             	r2 = b[r1 + 0] (u)			  ## charge.c:331:9
 1e0045a:    02 f2 0a 00       	if (r2 == r0) goto 20 <set_charge_mA+0x20 : 1e00472 >			  ## charge.c:331:9
 1e0045e:    08 62             	b[r1 + 0] = r0			  ## charge.c:332:23
 1e00460:    c1 ff 1b 18 1a 00 	r1 = 1710107 <uECC_vli_cmp_unsafe+0x9A81F : 1a181b >			  ## charge.c:332:23
 1e00466:    02 62             	r2 = b[r1 + 0] (u)			  ## charge.c:333:9
 1e00468:    22 fd 0f 29       	r2 = r2 & 15			  ## charge.c:333:9
 1e0046c:    c8 fd 20 20       	r2 <= insert(r0, p:4, l:8)			  ## charge.c:333:9
 1e00470:    0a 62             	b[r1 + 0] = r2			  ## charge.c:333:9
 1e00472:    20 00             	rts			  ## charge.c:335:1


charge_cc_check:
 1e00474:    74 01             	[--sp] = {rets, r4}			  ## charge.c:155:0
 1e00476:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x374C1 : 5000d >			  ## charge.c:156:10
 1e0047c:    df 17             	call -66 <adc_get_voltage : 1e0043c >			  ## charge.c:156:10
 1e0047e:    80 c0             	r0 = r0 << 2			  ## charge.c:156:38
 1e00480:    40 d0             	r0 = r0 >> 1			  ## charge.c:156:9
 1e00482:    03 ff e1 05 0c 00 	if (r0 < 1505) goto 24 <charge_cc_check+0x2C : 1e004a0 >			  ## charge.c:156:9
 1e00488:    c4 ff 70 25 00 00 	r4 = 9584 <charge_var : 2570 >			  ## charge.c:158:31
 1e0048e:    00 48             	r0 = [r4 + 0]			  ## charge.c:157:31
 1e00490:    40 60             	r0 = b[r0 + 4] (u)			  ## charge.c:157:9
 1e00492:    df 17             	call -66 <set_charge_mA : 1e00452 >			  ## charge.c:157:9
 1e00494:    40 48             	r0 = [r4 + 16]			  ## charge.c:158:31
 1e00496:    20 04             	r0 = r0.l (u)			  ## charge.c:158:9
 1e00498:    80 f3 31 56       	call 44130 <sys_timer_del : 1e0b0fe >			  ## charge.c:158:9
 1e0049c:    c4 f4 00 49       	[r4 + 16] = 0			  ## charge.c:159:26
 1e004a0:    54 01             	{pc, r4} = [sp++]			  ## charge.c:161:1


power_set_charge_mode:
 1e004a2:    c1 ff f0 20 00 00 	r1 = 8432 <charge_mode : 20f0 >			  ## power_hw.c:1402:0
 1e004a8:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:1403:17
 1e004aa:    20 00             	rts			  ## power_hw.c:1404:1


dcdc13_on_common:
 1e004ac:    c0 ff 97 18 1a 00 	r0 = 1710231 <uECC_vli_cmp_unsafe+0x9A89B : 1a1897 >			  ## pmu_analog.c:28:0
 1e004b2:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:29:5
 1e004b4:    21 fd f3 19       	r1 = r1 & 243			  ## pmu_analog.c:29:5
 1e004b8:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:29:5
 1e004ba:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:30:5
 1e004bc:    21 fd f3 19       	r1 = r1 & 243			  ## pmu_analog.c:30:5
 1e004c0:    11 b1             	r1 |= 4			  ## pmu_analog.c:30:5
 1e004c2:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:30:5
 1e004c4:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:31:5
 1e004c6:    71 b2             	r1 &= 4294967279			  ## pmu_analog.c:31:5
 1e004c8:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:31:5
 1e004ca:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:32:5
 1e004cc:    21 fd cf 19       	r1 = r1 & 207			  ## pmu_analog.c:32:5
 1e004d0:    91 b2             	r1 |= 32			  ## pmu_analog.c:32:5
 1e004d2:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:32:5
 1e004d4:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:33:5
 1e004d6:    21 fd fc 19       	r1 = r1 & 252			  ## pmu_analog.c:33:5
 1e004da:    91 b0             	r1 |= 2			  ## pmu_analog.c:33:5
 1e004dc:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:33:5
 1e004de:    11 60             	r1 = b[r0 + 1] (u)			  ## pmu_analog.c:34:5
 1e004e0:    21 fd 3f 19       	r1 = r1 & 63			  ## pmu_analog.c:34:5
 1e004e4:    19 60             	b[r0 + 1] = r1			  ## pmu_analog.c:34:5
 1e004e6:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:35:5
 1e004e8:    21 fd 1f 19       	r1 = r1 & 31			  ## pmu_analog.c:35:5
 1e004ec:    11 b3             	r1 |= 64			  ## pmu_analog.c:35:5
 1e004ee:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:35:5
 1e004f0:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:36:5
 1e004f2:    21 fd e7 19       	r1 = r1 & 231			  ## pmu_analog.c:36:5
 1e004f6:    11 b2             	r1 |= 16			  ## pmu_analog.c:36:5
 1e004f8:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:36:5
 1e004fa:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:37:5
 1e004fc:    11 b0             	r1 |= 1			  ## pmu_analog.c:37:5
 1e004fe:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:37:5
 1e00500:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:38:5
 1e00502:    f1 b0             	r1 &= 4294967293			  ## pmu_analog.c:38:5
 1e00504:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:38:5
 1e00506:    21 60             	r1 = b[r0 + 2] (u)			  ## pmu_analog.c:39:5
 1e00508:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:39:5
 1e0050c:    01 fd 07 19       	r1 = r1 | 7			  ## pmu_analog.c:39:5
 1e00510:    29 60             	b[r0 + 2] = r1			  ## pmu_analog.c:39:5
 1e00512:    21 60             	r1 = b[r0 + 2] (u)			  ## pmu_analog.c:40:5
 1e00514:    21 fd 0f 19       	r1 = r1 & 15			  ## pmu_analog.c:40:5
 1e00518:    01 fd 70 19       	r1 = r1 | 112			  ## pmu_analog.c:40:5
 1e0051c:    29 60             	b[r0 + 2] = r1			  ## pmu_analog.c:40:5
 1e0051e:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:41:5
 1e00520:    71 b1             	r1 &= 4294967291			  ## pmu_analog.c:41:5
 1e00522:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:41:5
 1e00524:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:42:5
 1e00526:    11 b0             	r1 |= 1			  ## pmu_analog.c:42:5
 1e00528:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:42:5
 1e0052a:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:43:5
 1e0052c:    f1 b0             	r1 &= 4294967293			  ## pmu_analog.c:43:5
 1e0052e:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:43:5
 1e00530:    20 00             	rts			  ## pmu_analog.c:44:1


power_set_mode:
 1e00532:    34 00             	[--sp] = rets			  ## power_hw.c:1373:0
 1e00534:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:1373:0
 1e0053a:    82 63             	r2 = b[r1 + 24] (u)			  ## power_hw.c:1375:17
 1e0053c:    02 f2 39 00       	if (r2 == r0) goto 114 <power_set_mode+0x80 : 1e005b2 >			  ## power_hw.c:1375:17
 1e00540:    40 e0 05 00       	if (r0 == 4) goto 10 <power_set_mode+0x1C : 1e0054e >
 1e00544:    c2 ff f0 20 00 00 	r2 = 8432 <charge_mode : 20f0 >			  ## power_hw.c:1380:9
 1e0054a:    02 64             	r2 = b[r2 + 0] (u)			  ## power_hw.c:1380:9
 1e0054c:    32 34             	if (r2 != 0) goto 100 <power_set_mode+0x80 : 1e005b2 >			  ## power_hw.c:1380:9
 1e0054e:    88 63             	b[r1 + 24] = r0			  ## power_hw.c:1386:18
 1e00550:    c2 ff 90 18 1a 00 	r2 = 1710224 <uECC_vli_cmp_unsafe+0x9A894 : 1a1890 >			  ## power_hw.c:1386:18
 1e00556:    20 e0 13 00       	if (r0 == 2) goto 38 <power_set_mode+0x4E : 1e00580 >			  ## power_hw.c:1388:9
 1e0055a:    40 e0 1c 00       	if (r0 == 4) goto 56 <power_set_mode+0x64 : 1e00596 >
 1e0055e:    30 e0 28 10       	if (r0 != 3) goto 80 <power_set_mode+0x80 : 1e005b2 >
 1e00562:    a4 17             	call -184 <dcdc13_on_common : 1e004ac >			  ## pmu_analog.c:48:5
 1e00564:    60 64             	r0 = b[r2 + 6] (u)			  ## pmu_analog.c:51:5
 1e00566:    10 b3             	r0 |= 64			  ## pmu_analog.c:51:5
 1e00568:    68 64             	b[r2 + 6] = r0			  ## pmu_analog.c:51:5
 1e0056a:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:54:5
 1e0056c:    90 b1             	r0 |= 8			  ## pmu_analog.c:54:5
 1e0056e:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:54:5
 1e00570:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## pmu_analog.c:56:5
 1e00574:    90 f3 44 17       	call 2109064 <delay_nus : 3400 >			  ## pmu_analog.c:56:5
 1e00578:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:57:5
 1e0057a:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:57:5
 1e0057c:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:57:5
 1e0057e:    30 00             	pc = [sp++]			  ## power_hw.c:1399:1
 1e00580:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:81:5
 1e00582:    10 b1             	r0 |= 4			  ## pmu_analog.c:81:5
 1e00584:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:81:5
 1e00586:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:82:5
 1e00588:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:82:5
 1e0058a:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:82:5
 1e0058c:    60 64             	r0 = b[r2 + 6] (u)			  ## pmu_analog.c:84:5
 1e0058e:    70 b3             	r0 &= 4294967231			  ## pmu_analog.c:84:5
 1e00590:    68 64             	b[r2 + 6] = r0			  ## pmu_analog.c:84:5
 1e00592:    10 70             	r0 = 1			  ## pmu_analog.c:86:5
 1e00594:    0c 18             	goto 24 <power_set_mode+0x7C : 1e005ae >			  ## pmu_analog.c:86:5
 1e00596:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:64:5
 1e00598:    10 b1             	r0 |= 4			  ## pmu_analog.c:64:5
 1e0059a:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:64:5
 1e0059c:    87 17             	call -242 <dcdc13_on_common : 1e004ac >			  ## pmu_analog.c:66:5
 1e0059e:    60 64             	r0 = b[r2 + 6] (u)			  ## pmu_analog.c:69:5
 1e005a0:    10 b3             	r0 |= 64			  ## pmu_analog.c:69:5
 1e005a2:    68 64             	b[r2 + 6] = r0			  ## pmu_analog.c:69:5
 1e005a4:    00 64             	r0 = b[r2 + 0] (u)			  ## pmu_analog.c:72:5
 1e005a6:    90 b1             	r0 |= 8			  ## pmu_analog.c:72:5
 1e005a8:    08 64             	b[r2 + 0] = r0			  ## pmu_analog.c:72:5
 1e005aa:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## pmu_analog.c:74:5
 1e005ae:    90 f3 27 17       	call 2109006 <delay_nus : 3400 >
 1e005b2:    30 00             	pc = [sp++]			  ## power_hw.c:1399:1


power_enter_charge_mode:
 1e005b4:    34 00             	[--sp] = rets			  ## charge.c:139:0
 1e005b6:    10 70             	r0 = 1			  ## charge.c:141:9
 1e005b8:    74 17             	call -280 <power_set_charge_mode : 1e004a2 >			  ## charge.c:141:9
 1e005ba:    40 70             	r0 = 4			  ## charge.c:142:9
 1e005bc:    88 01             	{rets} = [sp++]			  ## charge.c:142:9
 1e005be:    b9 1f             	goto -142 <power_set_mode : 1e00532 >			  ## charge.c:142:9


charge_event_to_user:
 1e005c0:    34 00             	[--sp] = rets			  ## charge.c:129:0
 1e005c2:    f4 0b             	sp += -24			  ## charge.c:129:0
 1e005c4:    41 70             	r1 = 4			  ## charge.c:129:0
 1e005c6:    91 f5 00 00       	h[sp] = r1			  ## charge.c:131:12
 1e005ca:    c1 ff 00 47 48 43 	r1 = 1128810240 <uECC_vli_cmp_unsafe+0x137D704 : 1484700 >			  ## charge.c:132:12
 1e005d0:    19 02             	[sp+4] = r1			  ## charge.c:132:12
 1e005d2:    d0 f5 08 00       	b[sp+8] = r0			  ## charge.c:133:19
 1e005d6:    00 70             	r0 = 0			  ## charge.c:133:19
 1e005d8:    38 02             	[sp+12] = r0			  ## charge.c:134:19
 1e005da:    00 a0             	r0 = sp + 0			  ## charge.c:134:19
 1e005dc:    80 f3 9a 61       	call 49972 <sys_event_notify : 1e0c914 >			  ## charge.c:135:5
 1e005e0:    0c 0a             	sp += 24
 1e005e2:    30 00             	pc = [sp++]			  ## charge.c:136:1


power_exit_charge_mode:
 1e005e4:    34 00             	[--sp] = rets			  ## charge.c:147:0
 1e005e6:    00 70             	r0 = 0			  ## charge.c:149:9
 1e005e8:    5c 17             	call -328 <power_set_charge_mode : 1e004a2 >			  ## charge.c:149:9
 1e005ea:    30 70             	r0 = 3			  ## charge.c:150:9
 1e005ec:    88 01             	{rets} = [sp++]			  ## charge.c:150:9
 1e005ee:    a1 1f             	goto -190 <power_set_mode : 1e00532 >			  ## charge.c:150:9


ldo5v_detect:
 1e005f0:    77 01             	[--sp] = {rets, r7-r4}			  ## charge.c:234:0
 1e005f2:    c0 ff 19 18 1a 00 	r0 = 1710105 <uECC_vli_cmp_unsafe+0x9A81D : 1a1819 >			  ## charge.c:234:0
 1e005f8:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:241:9
 1e005fa:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## charge.c:241:9
 1e00600:    22 f3 0d 10       	if ((r1 & 4) != 0) goto 26 <ldo5v_detect+0x2E : 1e0061e >			  ## charge.c:241:9
 1e00604:    00 60             	r0 = b[r0 + 0] (u)			  ## charge.c:259:16
 1e00606:    23 f3 13 00       	if ((r0 & 8) != 0) goto 38 <ldo5v_detect+0x40 : 1e00630 >			  ## charge.c:259:16
 1e0060a:    00 f6 b0 41       	r0 = [r4 + 432]			  ## charge.c:261:38
 1e0060e:    41 50             	r1 = h[r0 + 8] (u)			  ## charge.c:261:30
 1e00610:    40 59             	r0 = h[r4 + 40] (u)			  ## charge.c:261:13
 1e00612:    a1 80             	r1 += 10			  ## charge.c:261:61
 1e00614:    10 f2 29 20       	if (r0 >= r1) goto 82 <ldo5v_detect+0x7A : 1e0066a >			  ## charge.c:261:13
 1e00618:    10 80             	r0 += 1			  ## charge.c:262:26
 1e0061a:    48 59             	h[r4 + 40] = r0			  ## charge.c:262:26
 1e0061c:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1
 1e0061e:    01 f6 b0 41       	r1 = [r4 + 432]			  ## charge.c:243:36
 1e00622:    30 59             	r0 = h[r4 + 38] (u)			  ## charge.c:243:13
 1e00624:    51 52             	r1 = h[r1 + 10] (u)			  ## charge.c:243:42
 1e00626:    10 f2 0c 20       	if (r0 >= r1) goto 24 <ldo5v_detect+0x52 : 1e00642 >			  ## charge.c:243:13
 1e0062a:    10 80             	r0 += 1			  ## charge.c:244:25
 1e0062c:    38 59             	h[r4 + 38] = r0			  ## charge.c:244:25
 1e0062e:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1
 1e00630:    01 f6 b0 41       	r1 = [r4 + 432]			  ## charge.c:279:38
 1e00634:    50 59             	r0 = h[r4 + 42] (u)			  ## charge.c:279:13
 1e00636:    61 52             	r1 = h[r1 + 12] (u)			  ## charge.c:279:44
 1e00638:    10 f2 2b 20       	if (r0 >= r1) goto 86 <ldo5v_detect+0xA2 : 1e00692 >			  ## charge.c:279:13
 1e0063c:    10 80             	r0 += 1			  ## charge.c:280:27
 1e0063e:    58 59             	h[r4 + 42] = r0			  ## charge.c:280:27
 1e00640:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1
 1e00642:    15 70             	r5 = 1
 1e00644:    46 fc b4 01       	r6 = r4 + 436
 1e00648:    0d 6c             	b[r6 + 0] = r5			  ## charge.c:91:32
 1e0064a:    07 70             	r7 = 0			  ## charge.c:91:32
 1e0064c:    4f 59             	h[r4 + 40] = r7			  ## charge.c:248:27
 1e0064e:    3f 59             	h[r4 + 38] = r7			  ## charge.c:249:26
 1e00650:    5f 59             	h[r4 + 42] = r7			  ## charge.c:250:28
 1e00652:    10 4c             	r0 = [r6 + 4]			  ## charge.c:251:35
 1e00654:    20 04             	r0 = r0.l (u)			  ## charge.c:251:13
 1e00656:    80 f3 53 55       	call 43686 <usr_timer_del : 1e0b100 >			  ## charge.c:251:13
 1e0065a:    1f 4c             	[r6 + 4] = r7			  ## charge.c:252:33
 1e0065c:    ab 17             	call -170 <power_enter_charge_mode : 1e005b4 >			  ## charge.c:253:13
 1e0065e:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:254:18
 1e00660:    20 f3 30 00       	if ((r0 & 1) != 0) goto 96 <ldo5v_detect+0xD4 : 1e006c4 >			  ## charge.c:254:18
 1e00664:    1d 68             	b[r4 + 1] = r5			  ## charge.c:255:29
 1e00666:    40 70             	r0 = 4			  ## charge.c:256:17
 1e00668:    2c 18             	goto 88 <ldo5v_detect+0xD2 : 1e006c2 >			  ## charge.c:256:17
 1e0066a:    05 70             	r5 = 0
 1e0066c:    46 fc b4 01       	r6 = r4 + 436
 1e00670:    0d 6c             	b[r6 + 0] = r5			  ## charge.c:91:32
 1e00672:    4d 59             	h[r4 + 40] = r5			  ## charge.c:266:27
 1e00674:    3d 59             	h[r4 + 38] = r5			  ## charge.c:267:26
 1e00676:    5d 59             	h[r4 + 42] = r5			  ## charge.c:268:28
 1e00678:    10 4c             	r0 = [r6 + 4]			  ## charge.c:269:35
 1e0067a:    20 04             	r0 = r0.l (u)			  ## charge.c:269:13
 1e0067c:    80 f3 40 55       	call 43648 <usr_timer_del : 1e0b100 >			  ## charge.c:269:13
 1e00680:    1d 4c             	[r6 + 4] = r5			  ## charge.c:270:33
 1e00682:    b0 17             	call -160 <power_exit_charge_mode : 1e005e4 >			  ## charge.c:271:13
 1e00684:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:272:18
 1e00686:    21 f3 1d 00       	if ((r0 & 2) != 0) goto 58 <ldo5v_detect+0xD4 : 1e006c4 >			  ## charge.c:272:18
 1e0068a:    20 70             	r0 = 2			  ## charge.c:273:29
 1e0068c:    18 68             	b[r4 + 1] = r0			  ## charge.c:273:29
 1e0068e:    50 70             	r0 = 5			  ## charge.c:274:17
 1e00690:    18 18             	goto 48 <ldo5v_detect+0xD2 : 1e006c2 >			  ## charge.c:274:17
 1e00692:    10 70             	r0 = 1
 1e00694:    45 fc b4 01       	r5 = r4 + 436
 1e00698:    08 6a             	b[r5 + 0] = r0			  ## charge.c:91:32
 1e0069a:    06 70             	r6 = 0			  ## charge.c:91:32
 1e0069c:    4e 59             	h[r4 + 40] = r6			  ## charge.c:284:27
 1e0069e:    3e 59             	h[r4 + 38] = r6			  ## charge.c:285:26
 1e006a0:    5e 59             	h[r4 + 42] = r6			  ## charge.c:286:28
 1e006a2:    10 4a             	r0 = [r5 + 4]			  ## charge.c:287:35
 1e006a4:    20 04             	r0 = r0.l (u)			  ## charge.c:287:13
 1e006a6:    80 f3 2b 55       	call 43606 <usr_timer_del : 1e0b100 >			  ## charge.c:287:13
 1e006aa:    9c 17             	call -200 <power_exit_charge_mode : 1e005e4 >			  ## charge.c:288:13
 1e006ac:    1e 4a             	[r5 + 4] = r6			  ## charge.c:289:33
 1e006ae:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:290:18
 1e006b0:    22 f3 08 00       	if ((r0 & 4) != 0) goto 16 <ldo5v_detect+0xD4 : 1e006c4 >			  ## charge.c:290:18
 1e006b4:    40 70             	r0 = 4			  ## charge.c:291:29
 1e006b6:    18 68             	b[r4 + 1] = r0			  ## charge.c:291:29
 1e006b8:    00 f6 b0 41       	r0 = [r4 + 432]			  ## charge.c:292:29
 1e006bc:    40 50             	r0 = h[r0 + 8] (u)			  ## charge.c:292:35
 1e006be:    02 20             	if (r0 == 0) goto 4 <ldo5v_detect+0xD4 : 1e006c4 >			  ## charge.c:292:35
 1e006c0:    30 70             	r0 = 3			  ## charge.c:293:21
 1e006c2:    7e 17             	call -260 <charge_event_to_user : 1e005c0 >
 1e006c4:    57 01             	{pc, r7-r4} = [sp++]			  ## charge.c:298:1


power_wakeup_enable_with_port:
 1e006c6:    7a 01             	[--sp] = {rets, r10-r4}			  ## power_wakeup.c:896:0
 1e006c8:    04 70             	r4 = 0			  ## power_wakeup.c:896:0
 1e006ca:    c9 ff f4 20 00 00 	r9 = 8436 <power_wakeup_param : 20f4 >			  ## power_wakeup.c:896:0
 1e006d0:    18 70             	r8 = 1			  ## power_wakeup.c:896:0
 1e006d2:    ca ff 50 18 1a 00 	r10 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >			  ## power_wakeup.c:896:0
 1e006d8:    06 70             	r6 = 0			  ## power_wakeup.c:896:0
 1e006da:    00 f6 00 90       	r0 = [r9 + 0]			  ## power_wakeup.c:899:16
 1e006de:    80 f6 00 04       	r0 = [r0+r4]			  ## power_wakeup.c:899:16
 1e006e2:    40 60             	r0 = b[r0 + 4] (u)			  ## power_wakeup.c:900:19
 1e006e4:    50 e3 16 10       	if (r0 != 53) goto 44 <power_wakeup_enable_with_port+0x4E : 1e00714 >
 1e006e8:    f8 fd 60 58       	r5 = r8 << r6			  ## power_wakeup.c:863:23
 1e006ec:    2f d2             	r7 = r5 >> 8			  ## power_wakeup.c:99:1
 1e006ee:    98 f3 55 33       	call 3172010 <local_irq_disable : 106d9c >			  ## power_wakeup.c:862:5
 1e006f2:    08 00             	csync			  ## power_wakeup.c:862:5
 1e006f4:    17 f9 09 a0       	b[r10 + 9] = r7			  ## power_wakeup.c:101:1
 1e006f8:    15 f9 08 a0       	b[r10 + 8] = r5			  ## power_wakeup.c:101:1
 1e006fc:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## power_wakeup.c:99:1
 1e00700:    50 be             	r0 |= r7			  ## power_wakeup.c:99:1
 1e00702:    10 f9 01 a0       	b[r10 + 1] = r0			  ## power_wakeup.c:99:1
 1e00706:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## power_wakeup.c:99:1
 1e0070a:    50 ba             	r0 |= r5			  ## power_wakeup.c:99:1
 1e0070c:    10 f9 00 a0       	b[r10 + 0] = r0			  ## power_wakeup.c:99:1
 1e00710:    98 f3 42 33       	call 3171972 <local_irq_enable : 106d98 >			  ## power_wakeup.c:865:5
 1e00714:    16 80             	r6 += 1			  ## power_wakeup.c:898:42
 1e00716:    44 80             	r4 += 4			  ## power_wakeup.c:898:22
 1e00718:    c6 e0 df 1f       	if (r6 != 12) goto -66 <power_wakeup_enable_with_port+0x14 : 1e006da >			  ## power_wakeup.c:898:22
 1e0071c:    5a 01             	{pc, r10-r4} = [sp++]			  ## power_wakeup.c:904:1


charge_full_detect:
 1e0071e:    75 01             	[--sp] = {rets, r5, r4}			  ## charge.c:211:0
 1e00720:    c0 ff 19 18 1a 00 	r0 = 1710105 <uECC_vli_cmp_unsafe+0x9A81D : 1a1819 >			  ## charge.c:211:0
 1e00726:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:214:9
 1e00728:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## charge.c:214:9
 1e0072e:    00 f3 03 10       	if ((r1 & 1) == 0) goto 6 <charge_full_detect+0x1A : 1e00738 >			  ## charge.c:214:9
 1e00732:    00 60             	r0 = b[r0 + 0] (u)			  ## charge.c:214:35
 1e00734:    22 f3 0b 00       	if ((r0 & 4) != 0) goto 22 <charge_full_detect+0x30 : 1e0074e >			  ## charge.c:214:35
 1e00738:    05 70             	r5 = 0
 1e0073a:    6d 59             	h[r4 + 44] = r5			  ## charge.c:226:25
 1e0073c:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:227:31
 1e00740:    20 04             	r0 = r0.l (u)			  ## charge.c:227:9
 1e00742:    80 f3 dd 54       	call 43450 <usr_timer_del : 1e0b100 >			  ## charge.c:227:9
 1e00746:    15 f6 bc 41       	[r4 + 444] = r5			  ## charge.c:228:30
 1e0074a:    15 01             	{rets, r5, r4} = [sp++]			  ## charge.c:229:9
 1e0074c:    bc 1f             	goto -136 <power_wakeup_enable_with_port : 1e006c6 >			  ## charge.c:229:9
 1e0074e:    60 59             	r0 = h[r4 + 44] (u)			  ## charge.c:216:13
 1e00750:    40 e0 03 80       	if (r0 > 4) goto 6 <charge_full_detect+0x3C : 1e0075a >			  ## charge.c:216:13
 1e00754:    10 80             	r0 += 1			  ## charge.c:217:28
 1e00756:    68 59             	h[r4 + 44] = r0			  ## charge.c:217:28
 1e00758:    55 01             	{pc, r5, r4} = [sp++]			  ## charge.c:231:1
 1e0075a:    05 70             	r5 = 0
 1e0075c:    6d 59             	h[r4 + 44] = r5			  ## charge.c:219:29
 1e0075e:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:220:35
 1e00762:    20 04             	r0 = r0.l (u)			  ## charge.c:220:13
 1e00764:    80 f3 cc 54       	call 43416 <usr_timer_del : 1e0b100 >			  ## charge.c:220:13
 1e00768:    15 f6 bc 41       	[r4 + 444] = r5			  ## charge.c:221:34
 1e0076c:    20 70             	r0 = 2			  ## charge.c:222:13
 1e0076e:    15 01             	{rets, r5, r4} = [sp++]			  ## charge.c:222:13
 1e00770:    27 1f             	goto -434 <charge_event_to_user : 1e005c0 >			  ## charge.c:222:13


cpu_reset:
 1e00772:    d0 f3 50 16       	goto 2108576 <p33_soft_reset : 3416 >			  ## cpu.h:146:0


power_wakeup_disable_with_port:
 1e00776:    7a 01             	[--sp] = {rets, r10-r4}			  ## power_wakeup.c:918:0
 1e00778:    04 70             	r4 = 0			  ## power_wakeup.c:918:0
 1e0077a:    c9 ff f4 20 00 00 	r9 = 8436 <power_wakeup_param : 20f4 >			  ## power_wakeup.c:918:0
 1e00780:    18 70             	r8 = 1			  ## power_wakeup.c:918:0
 1e00782:    ca ff 50 18 1a 00 	r10 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >			  ## power_wakeup.c:918:0
 1e00788:    06 70             	r6 = 0			  ## power_wakeup.c:918:0
 1e0078a:    00 f6 00 90       	r0 = [r9 + 0]			  ## power_wakeup.c:921:16
 1e0078e:    80 f6 00 04       	r0 = [r0+r4]			  ## power_wakeup.c:921:16
 1e00792:    40 60             	r0 = b[r0 + 4] (u)			  ## power_wakeup.c:922:19
 1e00794:    50 e3 18 10       	if (r0 != 53) goto 48 <power_wakeup_disable_with_port+0x52 : 1e007c8 >
 1e00798:    f8 fd 60 58       	r5 = r8 << r6			  ## power_wakeup.c:881:23
 1e0079c:    2f d2             	r7 = r5 >> 8			  ## power_wakeup.c:99:1
 1e0079e:    98 f3 fd 32       	call 3171834 <local_irq_disable : 106d9c >			  ## power_wakeup.c:880:5
 1e007a2:    08 00             	csync			  ## power_wakeup.c:880:5
 1e007a4:    17 f9 09 a0       	b[r10 + 9] = r7			  ## power_wakeup.c:101:1
 1e007a8:    15 f9 08 a0       	b[r10 + 8] = r5			  ## power_wakeup.c:101:1
 1e007ac:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## power_wakeup.c:99:1
 1e007b0:    e3 fd 70 00       	r0 = r0 & ~r7			  ## power_wakeup.c:99:1
 1e007b4:    10 f9 01 a0       	b[r10 + 1] = r0			  ## power_wakeup.c:99:1
 1e007b8:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## power_wakeup.c:99:1
 1e007bc:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:99:1
 1e007c0:    10 f9 00 a0       	b[r10 + 0] = r0			  ## power_wakeup.c:99:1
 1e007c4:    98 f3 e8 32       	call 3171792 <local_irq_enable : 106d98 >			  ## power_wakeup.c:883:5
 1e007c8:    16 80             	r6 += 1			  ## power_wakeup.c:920:42
 1e007ca:    44 80             	r4 += 4			  ## power_wakeup.c:920:22
 1e007cc:    c6 e0 dd 1f       	if (r6 != 12) goto -70 <power_wakeup_disable_with_port+0x14 : 1e0078a >			  ## power_wakeup.c:920:22
 1e007d0:    5a 01             	{pc, r10-r4} = [sp++]			  ## power_wakeup.c:926:1


timer1_resume:
 1e007d2:    76 01             	[--sp] = {rets, r6-r4}			  ## timer.c:142:0
 1e007d4:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:142:0
 1e007da:    01 f9 a4 00       	r1 = b[r0 + 164] (u)			  ## timer.c:142:0
 1e007de:    22 22             	if (r1 == 0) goto 68 <timer1_resume+0x52 : 1e00824 >			  ## timer.c:142:0
 1e007e0:    01 f6 98 00       	r1 = [r0 + 152]			  ## timer.c:142:0
 1e007e4:    02 fb e0 2e       	r2 = 12000 <pEvent_buf_static+0x150 : 2ee0 >			  ## timer.c:142:0
 1e007e8:    8a 0e             	r2 = r1 * r2			  ## timer.c:142:0
 1e007ea:    01 70             	r1 = 0			  ## timer.c:142:0
 1e007ec:    c3 ff a4 eb e0 01 	r3 = 31517604 <timer_div : 1e0eba4 >			  ## timer.c:142:0
 1e007f2:    04 fb fd 7e       	r4 = 32509 <nvbss_size+0xBBD : 7efd >			  ## timer.c:142:0
 1e007f6:    45 f6 04 30       	r5 = [r3 ++= 4]			  ## timer.c:151:64
 1e007fa:    c0 fe 50 52       	r5 = r2 / r5 (u)			  ## timer.c:151:62
 1e007fe:    56 fc ff fe       	r6 = r5 + -257			  ## timer.c:152:36
 1e00802:    46 f2 03 90       	if (r6 <= r4) goto 6 <timer1_resume+0x3A : 1e0080c >			  ## timer.c:152:36
 1e00806:    11 80             	r1 += 1			  ## timer.c:150:78
 1e00808:    f1 e0 f5 9f       	if (r1 <= 15) goto -22 <timer1_resume+0x24 : 1e007f6 >			  ## timer.c:150:78
 1e0080c:    00 f6 a8 00       	r0 = [r0 + 168]			  ## timer.c:159:30
 1e00810:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:159:30
 1e00816:    18 44             	[r2 + 4] = r0			  ## timer.c:159:20
 1e00818:    2d 44             	[r2 + 8] = r5			  ## timer.c:161:20
 1e0081a:    08 c1             	r0 = r1 << 4			  ## timer.c:165:41
 1e0081c:    01 fb 01 14       	r1 = 5121 <UPDATE_CODE_TOTAL_SIZE+0x1BF : 1401 >			  ## timer.c:165:47
 1e00820:    50 b2             	r0 |= r1			  ## timer.c:165:47
 1e00822:    08 44             	[r2 + 0] = r0			  ## timer.c:165:20
 1e00824:    56 01             	{pc, r6-r4} = [sp++]			  ## timer.c:169:1


timer1_run:
 1e00826:    34 00             	[--sp] = rets			  ## timer.c:221:0
 1e00828:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## timer.c:221:0
 1e0082e:    02 f6 98 10       	r2 = [r1 + 152]			  ## timer.c:222:17
 1e00832:    02 f2 0d 00       	if (r2 == r0) goto 26 <timer1_run+0x2A : 1e00850 >			  ## timer.c:222:17
 1e00836:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:228:20
 1e0083c:    c0 f4 40 2a       	[r2 + 0] = 16384			  ## timer.c:228:20
 1e00840:    11 fc 98 00       	r1 = r1 + 152			  ## timer.c:228:20
 1e00844:    08 42             	[r1 + 0] = r0			  ## timer.c:230:25
 1e00846:    10 70             	r0 = 1			  ## timer.c:230:25
 1e00848:    c8 62             	b[r1 + 12] = r0
 1e0084a:    c4 f4 00 19       	[r1 + 16] = 0			  ## timer.c:234:25
 1e0084e:    c1 17             	call -126 <timer1_resume : 1e007d2 >			  ## timer.c:236:5
 1e00850:    30 00             	pc = [sp++]			  ## timer.c:237:1


charge_init:
 1e00852:    78 01             	[--sp] = {rets, r8-r4}			  ## charge.c:387:0
 1e00854:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## charge.c:387:0
 1e0085a:    11 f6 b0 81       	[r8 + 432] = r1			  ## charge.c:390:18
 1e0085e:    01 32             	if (r1 != 0) goto 2 <charge_init+0x10 : 1e00862 >			  ## charge.c:390:18
 1e00860:    88 17             	call -240 <cpu_reset : 1e00772 >			  ## charge.c:392:5
 1e00862:    00 70             	r0 = 0
 1e00864:    85 fc b0 01       	r5 = r8 + 432
 1e00868:    58 6a             	b[r5 + 5] = r0			  ## charge.c:394:21
 1e0086a:    48 6a             	b[r5 + 4] = r0			  ## charge.c:395:32
 1e0086c:    84 17             	call -248 <power_wakeup_disable_with_port : 1e00776 >			  ## charge.c:398:5
 1e0086e:    c0 ff 19 18 1a 00 	r0 = 1710105 <uECC_vli_cmp_unsafe+0x9A81D : 1a1819 >			  ## charge.c:398:5
 1e00874:    11 60             	r1 = b[r0 + 1] (u)			  ## charge.c:399:5
 1e00876:    71 b0             	r1 &= 4294967294			  ## charge.c:399:5
 1e00878:    19 60             	b[r0 + 1] = r1			  ## charge.c:399:5
 1e0087a:    01 fc 88 00       	r1 = r0 + 136			  ## charge.c:399:5
 1e0087e:    12 62             	r2 = b[r1 + 1] (u)			  ## charge.c:402:5
 1e00880:    03 4a             	r3 = [r5 + 0]			  ## charge.c:402:5
 1e00882:    63 66             	r3 = b[r3 + 6] (u)			  ## charge.c:402:5
 1e00884:    22 fd fc 29       	r2 = r2 & 252			  ## charge.c:402:5
 1e00888:    23 fd 03 39       	r3 = r3 & 3			  ## charge.c:402:5
 1e0088c:    52 b6             	r2 |= r3			  ## charge.c:402:5
 1e0088e:    1a 62             	b[r1 + 1] = r2			  ## charge.c:402:5
 1e00890:    02 62             	r2 = b[r1 + 0] (u)			  ## charge.c:403:5
 1e00892:    03 4a             	r3 = [r5 + 0]			  ## charge.c:403:5
 1e00894:    53 66             	r3 = b[r3 + 5] (u)			  ## charge.c:403:5
 1e00896:    72 b0             	r2 &= 4294967294			  ## charge.c:403:5
 1e00898:    23 fd 01 39       	r3 = r3 & 1			  ## charge.c:403:5
 1e0089c:    52 b6             	r2 |= r3			  ## charge.c:403:5
 1e0089e:    0a 62             	b[r1 + 0] = r2			  ## charge.c:403:5
 1e008a0:    c1 ff 00 08 00 00 	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:22
 1e008a6:    f1 52             	r1 = h[r1 + 30] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:22
 1e008a8:    22 fd 0f 19       	r2 = r1 & 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:33
 1e008ac:    61 70             	r1 = 6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:33
 1e008ae:    f2 e0 01 00       	if (r2 == 15) goto 2 <charge_init+0x62 : 1e008b4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:15:33
 1e008b2:    21 08             	r1 = r2			  ## charge.c:354:9
 1e008b4:    02 4a             	r2 = [r5 + 0]			  ## charge.c:362:17
 1e008b6:    22 64             	r2 = b[r2 + 2] (u)			  ## charge.c:362:23
 1e008b8:    62 e0 0a 30       	if (r2 < 6) goto 20 <charge_init+0x7E : 1e008d0 >			  ## charge.c:362:9
 1e008bc:    a2 8f             	r2 += -6			  ## charge.c:363:46
 1e008be:    82 04             	r2 = r2.b0 (u)			  ## charge.c:364:52
 1e008c0:    21 09             	r1 += r2			  ## charge.c:364:50
 1e008c2:    23 fd f0 19       	r3 = r1 & 240			  ## charge.c:365:13
 1e008c6:    f2 70             	r2 = 15			  ## charge.c:365:13
 1e008c8:    f3 e0 09 80       	if (r3 > 15) goto 18 <charge_init+0x8C : 1e008de >			  ## charge.c:365:13
 1e008cc:    12 08             	r2 = r1			  ## charge.c:365:13
 1e008ce:    07 18             	goto 14 <charge_init+0x8C : 1e008de >			  ## charge.c:365:13
 1e008d0:    62 fb 06 29       	r2 = 6 - r2			  ## charge.c:369:37
 1e008d4:    83 04             	r3 = r2.b0 (u)			  ## charge.c:370:37
 1e008d6:    02 70             	r2 = 0			  ## charge.c:370:37
 1e008d8:    31 f2 01 30       	if (r1 < r3) goto 2 <charge_init+0x8C : 1e008de >			  ## charge.c:370:37
 1e008dc:    e2 b2             	r2 = r1 - r3			  ## charge.c:371:54
 1e008de:    21 60             	r1 = b[r0 + 2] (u)			  ## charge.c:379:5
 1e008e0:    22 fd 0f 29       	r2 = r2 & 15			  ## charge.c:379:5
 1e008e4:    21 fd f0 19       	r1 = r1 & 240			  ## charge.c:379:5
 1e008e8:    51 b4             	r1 |= r2			  ## charge.c:379:5
 1e008ea:    29 60             	b[r0 + 2] = r1			  ## charge.c:379:5
 1e008ec:    31 60             	r1 = b[r0 + 3] (u)			  ## charge.c:380:5
 1e008ee:    02 f6 b0 81       	r2 = [r8 + 432]			  ## charge.c:380:5
 1e008f2:    32 64             	r2 = b[r2 + 3] (u)			  ## charge.c:380:5
 1e008f4:    21 fd 8f 19       	r1 = r1 & 143			  ## charge.c:380:5
 1e008f8:    12 c1             	r2 = r2 << 4			  ## charge.c:380:5
 1e008fa:    22 fd 70 29       	r2 = r2 & 112			  ## charge.c:380:5
 1e008fe:    51 b4             	r1 |= r2			  ## charge.c:380:5
 1e00900:    39 60             	b[r0 + 3] = r1			  ## charge.c:380:5
 1e00902:    21 60             	r1 = b[r0 + 2] (u)			  ## charge.c:382:5
 1e00904:    21 fd 0f 19       	r1 = r1 & 15			  ## charge.c:382:5
 1e00908:    29 60             	b[r0 + 2] = r1			  ## charge.c:382:5
 1e0090a:    01 70             	r1 = 0			  ## charge.c:382:5
 1e0090c:    11 f9 b4 81       	b[r8 + 436] = r1			  ## charge.c:73:32
 1e00910:    02 fb 00 40       	r2 = 16384 <low_power_system_down+0x194 : 4000 >			  ## charge.c:73:32
 1e00914:    c3 ff 00 04 1e 00 	r3 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## charge.c:73:32
 1e0091a:    06 fb e0 2e       	r6 = 12000 <pEvent_buf_static+0x150 : 2ee0 >			  ## charge.c:73:32
 1e0091e:    05 70             	r5 = 0			  ## charge.c:73:32
 1e00920:    07 70             	r7 = 0			  ## charge.c:73:32
 1e00922:    12 18             	goto 36 <charge_init+0xF6 : 1e00948 >			  ## charge.c:73:32
 1e00924:    04 60             	r4 = b[r0 + 0] (u)			  ## charge.c:76:13
 1e00926:    22 f3 03 40       	if ((r4 & 4) != 0) goto 6 <charge_init+0xDE : 1e00930 >			  ## charge.c:76:13
 1e0092a:    04 60             	r4 = b[r0 + 0] (u)			  ## charge.c:76:32
 1e0092c:    03 f3 01 40       	if ((r4 & 8) == 0) goto 2 <charge_init+0xE0 : 1e00932 >			  ## charge.c:76:32
 1e00930:    15 80             	r5 += 1			  ## charge.c:77:23
 1e00932:    0a 46             	[r3 + 0] = r2			  ## charge.c:60:20
 1e00934:    19 46             	[r3 + 4] = r1			  ## charge.c:61:20
 1e00936:    2e 46             	[r3 + 8] = r6			  ## charge.c:62:20
 1e00938:    c0 f4 45 39       	[r3 + 0] = 69			  ## charge.c:63:20
 1e0093c:    04 46             	r4 = [r3 + 0]			  ## charge.c:64:24
 1e0093e:    34 05             	r4 = r4.l (s)			  ## charge.c:64:39
 1e00940:    f4 ef fc cf       	ifs (r4 > -1) goto -8 <charge_init+0xEA : 1e0093c >			  ## charge.c:64:5
 1e00944:    0a 46             	[r3 + 0] = r2			  ## charge.c:65:20
 1e00946:    17 80             	r7 += 1			  ## charge.c:75:26
 1e00948:    c4 05             	r4 = r7.b0 (u)			  ## charge.c:75:19
 1e0094a:    44 e1 eb 1f       	if (r4 != 20) goto -42 <charge_init+0xD2 : 1e00924 >			  ## charge.c:75:19
 1e0094e:    40 05             	r0 = r5.b0 (u)			  ## charge.c:82:20
 1e00950:    60 e0 03 30       	if (r0 < 6) goto 6 <charge_init+0x108 : 1e0095a >			  ## charge.c:82:20
 1e00954:    10 70             	r0 = 1			  ## charge.c:83:36
 1e00956:    10 f9 b4 81       	b[r8 + 436] = r0			  ## charge.c:83:36
 1e0095a:    00 f9 b4 81       	r0 = b[r8 + 436] (u)			  ## charge.c:86:20
 1e0095e:    0e 20             	if (r0 == 0) goto 28 <charge_init+0x12A : 1e0097c >			  ## charge.c:407:9
 1e00960:    00 f6 b8 81       	r0 = [r8 + 440]			  ## charge.c:408:21
 1e00964:    0e 30             	if (r0 != 0) goto 28 <charge_init+0x130 : 1e00982 >			  ## charge.c:408:21
 1e00966:    c1 ff f0 05 e0 01 	r1 = 31458800 <ldo5v_detect : 1e005f0 >			  ## charge.c:409:35
 1e0096c:    00 70             	r0 = 0			  ## charge.c:409:35
 1e0096e:    22 70             	r2 = 2			  ## charge.c:409:35
 1e00970:    13 70             	r3 = 1			  ## charge.c:409:35
 1e00972:    80 f3 a6 54       	call 43340 <usr_timer_add : 1e0b2c2 >			  ## charge.c:409:35
 1e00976:    10 f6 b8 81       	[r8 + 440] = r0			  ## charge.c:409:33
 1e0097a:    03 18             	goto 6 <charge_init+0x130 : 1e00982 >			  ## charge.c:409:33
 1e0097c:    20 70             	r0 = 2			  ## charge.c:412:21
 1e0097e:    10 f9 01 80       	b[r8 + 1] = r0			  ## charge.c:412:21
 1e00982:    11 70             	r1 = 1			  ## charge.c:415:21
 1e00984:    00 70             	r0 = 0			  ## charge.c:417:5
 1e00986:    11 f9 b5 81       	b[r8 + 437] = r1			  ## charge.c:415:21
 1e0098a:    58 01             	{pc, r8-r4} = [sp++]			  ## charge.c:417:5


log_putbyte:
 1e0098c:    20 00             	rts			  ## debug.c:51:0


assert_printf:
 1e0098e:    34 00             	[--sp] = rets			  ## debug.c:57:0
 1e00990:    90 f3 41 15       	call 2108034 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e00994:    00 70             	r0 = 0			  ## debug.c:60:5
 1e00996:    30 00             	pc = [sp++]			  ## debug.c:60:5


ad_get_key_value:
 1e00998:    74 01             	[--sp] = {rets, r4}			  ## adkey.c:25:0
 1e0099a:    b0 70             	r0 = 11			  ## adkey.c:34:15
 1e0099c:    b4 70             	r4 = 11			  ## adkey.c:34:15
 1e0099e:    10 15             	call -1504 <adc_get_value : 1e003c0 >			  ## adkey.c:34:15
 1e009a0:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## adkey.c:34:15
 1e009a6:    31 43             	r1 = [r1 + 76]			  ## adkey.c:34:15
 1e009a8:    20 04             	r0 = r0.l (u)
 1e009aa:    82 70             	r2 = 8
 1e009ac:    43 fc f5 ff       	r3 = r4 + -11			  ## adkey.c:36:19
 1e009b0:    13 e0 0c 80       	if (r3 > 1) goto 24 <ad_get_key_value+0x34 : 1e009cc >			  ## adkey.c:36:19
 1e009b4:    03 f8 00 12       	r3 = h[r1+r2] (u)			  ## adkey.c:37:25
 1e009b8:    22 80             	r2 += 2			  ## adkey.c:37:46
 1e009ba:    14 80             	r4 += 1			  ## adkey.c:37:46
 1e009bc:    08 ff fe 33 f5 ff 	if (r3 > 1022) goto -22 <ad_get_key_value+0x14 : 1e009ac >			  ## adkey.c:37:46
 1e009c2:    30 f2 f3 8f       	if (r0 > r3) goto -26 <ad_get_key_value+0x14 : 1e009ac >
 1e009c6:    00 fa 00 14       	r0 = b[r1+r4] (u)			  ## adkey.c:39:20
 1e009ca:    54 01             	{pc, r4} = [sp++]			  ## adkey.c:43:1
 1e009cc:    f0 7f             	r0 = 255
 1e009ce:    54 01             	{pc, r4} = [sp++]			  ## adkey.c:43:1


key_idle_query:
 1e009d0:    c0 ff 40 1d 00 00 	r0 = 7488 <is_key_active : 1d40 >			  ## key_driver.c:321:0
 1e009d6:    01 60             	r1 = b[r0 + 0] (u)			  ## key_driver.c:322:13
 1e009d8:    10 70             	r0 = 1			  ## key_driver.c:322:12
 1e009da:    01 22             	if (r1 == 0) goto 2 <key_idle_query+0xE : 1e009de >			  ## key_driver.c:322:12
 1e009dc:    00 70             	r0 = 0			  ## key_driver.c:322:12
 1e009de:    20 00             	rts			  ## key_driver.c:322:5


timer_get_ms:
 1e009e0:    c0 ff ac 08 00 00 	r0 = 2220 <jiffies : 8ac >			  ## timer.c:86:0
 1e009e6:    00 40             	r0 = [r0 + 0]			  ## timer.c:87:12
 1e009e8:    00 fe 0a 09       	r0 = r0 * 10			  ## timer.c:87:12
 1e009ec:    20 00             	rts			  ## timer.c:87:5


key_driver_scan:
 1e009ee:    75 01             	[--sp] = {rets, r5, r4}			  ## key_driver.c:61:0
 1e009f0:    f4 0b             	sp += -24			  ## key_driver.c:61:0
 1e009f2:    04 08             	r4 = r0			  ## key_driver.c:61:0
 1e009f4:    40 48             	r0 = [r4 + 16]			  ## key_driver.c:76:32
 1e009f6:    80 00             	call r0			  ## key_driver.c:76:21
 1e009f8:    05 08             	r5 = r0			  ## key_driver.c:76:21
 1e009fa:    31 72             	r1 = 35			  ## key_driver.c:76:21
 1e009fc:    c0 ff 40 1d 00 00 	r0 = 7488 <is_key_active : 1d40 >			  ## key_driver.c:76:21
 1e00a02:    01 ff ff 50 04 00 	if (r5 != 255) goto 8 <key_driver_scan+0x22 : 1e00a10 >			  ## key_driver.c:76:21
 1e00a08:    01 60             	r1 = b[r0 + 0] (u)			  ## key_driver.c:83:16
 1e00a0a:    03 22             	if (r1 == 0) goto 6 <key_driver_scan+0x24 : 1e00a12 >			  ## key_driver.c:83:16
 1e00a0c:    01 60             	r1 = b[r0 + 0] (u)			  ## key_driver.c:84:23
 1e00a0e:    f1 8f             	r1 += -1			  ## key_driver.c:84:23
 1e00a10:    09 60             	b[r0 + 0] = r1
 1e00a12:    51 68             	r1 = b[r4 + 5] (u)			  ## key_driver.c:87:37
 1e00a14:    70 68             	r0 = b[r4 + 7] (u)			  ## key_driver.c:87:37
 1e00a16:    15 f2 06 00       	if (r5 == r1) goto 12 <key_driver_scan+0x38 : 1e00a26 >			  ## key_driver.c:87:37
 1e00a1a:    04 20             	if (r0 == 0) goto 8 <key_driver_scan+0x36 : 1e00a24 >
 1e00a1c:    00 70             	r0 = 0			  ## key_driver.c:88:31
 1e00a1e:    68 68             	b[r4 + 6] = r0			  ## key_driver.c:88:31
 1e00a20:    5d 68             	b[r4 + 5] = r5			  ## key_driver.c:89:33
 1e00a22:    69 18             	goto 210 <key_driver_scan+0x108 : 1e00af6 >			  ## key_driver.c:89:33
 1e00a24:    00 70             	r0 = 0
 1e00a26:    61 68             	r1 = b[r4 + 6] (u)			  ## key_driver.c:92:20
 1e00a28:    01 f2 03 20       	if (r1 >= r0) goto 6 <key_driver_scan+0x44 : 1e00a32 >			  ## key_driver.c:92:9
 1e00a2c:    10 92             	r0 = r1 + 1			  ## key_driver.c:93:30
 1e00a2e:    68 68             	b[r4 + 6] = r0			  ## key_driver.c:93:30
 1e00a30:    62 18             	goto 196 <key_driver_scan+0x108 : 1e00af6 >			  ## key_driver.c:93:30
 1e00a32:    40 68             	r0 = b[r4 + 4] (u)			  ## key_driver.c:101:37
 1e00a34:    05 f2 13 10       	if (r5 != r0) goto 38 <key_driver_scan+0x70 : 1e00a5e >			  ## key_driver.c:101:37
 1e00a38:    00 ff ff 50 1c 00 	if (r5 == 255) goto 56 <key_driver_scan+0x88 : 1e00a76 >
 1e00a3e:    a0 68             	r0 = b[r4 + 10] (u)			  ## key_driver.c:170:33
 1e00a40:    10 80             	r0 += 1			  ## key_driver.c:170:33
 1e00a42:    a8 68             	b[r4 + 10] = r0			  ## key_driver.c:170:33
 1e00a44:    82 68             	r2 = b[r4 + 8] (u)			  ## key_driver.c:171:52
 1e00a46:    03 04             	r3 = r0.b0 (u)			  ## key_driver.c:170:33
 1e00a48:    11 70             	r1 = 1			  ## key_driver.c:170:33
 1e00a4a:    50 08             	r0 = r5			  ## key_driver.c:170:33
 1e00a4c:    23 f2 38 00       	if (r3 == r2) goto 112 <key_driver_scan+0xD2 : 1e00ac0 >			  ## key_driver.c:170:33
 1e00a50:    90 68             	r0 = b[r4 + 9] (u)			  ## key_driver.c:173:59
 1e00a52:    03 f2 4f 10       	if (r3 != r0) goto 158 <key_driver_scan+0x106 : 1e00af4 >			  ## key_driver.c:173:59
 1e00a56:    aa 68             	b[r4 + 10] = r2			  ## key_driver.c:175:38
 1e00a58:    21 70             	r1 = 2			  ## key_driver.c:175:38
 1e00a5a:    50 08             	r0 = r5			  ## key_driver.c:175:38
 1e00a5c:    31 18             	goto 98 <key_driver_scan+0xD2 : 1e00ac0 >			  ## key_driver.c:175:38
 1e00a5e:    00 ff ff 50 22 00 	if (r5 == 255) goto 68 <key_driver_scan+0xBA : 1e00aa8 >
 1e00a64:    10 70             	r0 = 1
 1e00a66:    a8 68             	b[r4 + 10] = r0			  ## key_driver.c:120:34
 1e00a68:    e1 68             	r1 = b[r4 + 14] (u)			  ## key_driver.c:121:45
 1e00a6a:    15 f2 25 10       	if (r5 != r1) goto 74 <key_driver_scan+0xCA : 1e00ab8 >			  ## key_driver.c:121:45
 1e00a6e:    b0 68             	r0 = b[r4 + 11] (u)			  ## key_driver.c:125:37
 1e00a70:    10 80             	r0 += 1			  ## key_driver.c:125:37
 1e00a72:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:125:37
 1e00a74:    3f 18             	goto 126 <key_driver_scan+0x106 : 1e00af4 >			  ## key_driver.c:125:37
 1e00a76:    b2 68             	r2 = b[r4 + 11] (u)			  ## key_driver.c:131:28
 1e00a78:    3d 24             	if (r2 == 0) goto 122 <key_driver_scan+0x106 : 1e00af4 >			  ## key_driver.c:131:28
 1e00a7a:    20 f9 0e 40       	r0 = b[r4 + 14] (s)			  ## key_driver.c:141:32
 1e00a7e:    00 e0 1e b0       	ifs (r0 < 0) goto 60 <key_driver_scan+0xD0 : 1e00abe >			  ## key_driver.c:141:32
 1e00a82:    c1 68             	r1 = b[r4 + 12] (u)			  ## key_driver.c:147:32
 1e00a84:    d3 68             	r3 = b[r4 + 13] (u)			  ## key_driver.c:147:61
 1e00a86:    31 f2 38 90       	if (r1 <= r3) goto 112 <key_driver_scan+0x10C : 1e00afa >			  ## key_driver.c:147:21
 1e00a8a:    71 70             	r1 = 7
 1e00a8c:    42 e0 18 80       	if (r2 > 4) goto 48 <key_driver_scan+0xD2 : 1e00ac0 >
 1e00a90:    61 70             	r1 = 6
 1e00a92:    42 e0 15 00       	if (r2 == 4) goto 42 <key_driver_scan+0xD2 : 1e00ac0 >
 1e00a96:    51 70             	r1 = 5
 1e00a98:    22 e0 12 80       	if (r2 > 2) goto 36 <key_driver_scan+0xD2 : 1e00ac0 >
 1e00a9c:    11 70             	r1 = 1			  ## key_driver.c:155:53
 1e00a9e:    22 e0 01 00       	if (r2 == 2) goto 2 <key_driver_scan+0xB6 : 1e00aa4 >			  ## key_driver.c:155:53
 1e00aa2:    01 70             	r1 = 0			  ## key_driver.c:155:53
 1e00aa4:    89 c0             	r1 = r1 << 2			  ## key_driver.c:157:21
 1e00aa6:    0c 18             	goto 24 <key_driver_scan+0xD2 : 1e00ac0 >			  ## key_driver.c:157:21
 1e00aa8:    82 68             	r2 = b[r4 + 8] (u)			  ## key_driver.c:111:52
 1e00aaa:    a3 68             	r3 = b[r4 + 10] (u)			  ## key_driver.c:111:28
 1e00aac:    31 70             	r1 = 3			  ## key_driver.c:111:28
 1e00aae:    23 f2 07 20       	if (r3 >= r2) goto 14 <key_driver_scan+0xD2 : 1e00ac0 >			  ## key_driver.c:111:28
 1e00ab2:    10 70             	r0 = 1			  ## key_driver.c:118:40
 1e00ab4:    c8 68             	b[r4 + 12] = r0			  ## key_driver.c:118:40
 1e00ab6:    1e 18             	goto 60 <key_driver_scan+0x106 : 1e00af4 >			  ## key_driver.c:118:40
 1e00ab8:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:122:38
 1e00aba:    ed 68             	b[r4 + 14] = r5			  ## key_driver.c:123:41
 1e00abc:    1b 18             	goto 54 <key_driver_scan+0x106 : 1e00af4 >			  ## key_driver.c:123:41
 1e00abe:    01 70             	r1 = 0
 1e00ac0:    12 70             	r2 = 1
 1e00ac2:    92 f5 00 00       	h[sp] = r2			  ## key_driver.c:192:12
 1e00ac6:    d2 f5 08 00       	b[sp+8] = r2			  ## key_driver.c:193:18
 1e00aca:    f2 68             	r2 = b[r4 + 15] (u)			  ## key_driver.c:194:31
 1e00acc:    d2 f5 09 00       	b[sp+9] = r2			  ## key_driver.c:194:18
 1e00ad0:    91 f5 0a 00       	h[sp+10] = r1			  ## key_driver.c:195:19
 1e00ad4:    20 fd 7f 09       	r0 = r0 & 127			  ## key_driver.c:196:21
 1e00ad8:    38 02             	[sp+12] = r0			  ## key_driver.c:196:19
 1e00ada:    82 17             	call -252 <timer_get_ms : 1e009e0 >			  ## key_driver.c:197:19
 1e00adc:    48 02             	[sp+16] = r0			  ## key_driver.c:197:17
 1e00ade:    00 70             	r0 = 0			  ## key_driver.c:200:26
 1e00ae0:    b8 68             	b[r4 + 11] = r0			  ## key_driver.c:200:26
 1e00ae2:    f0 7f             	r0 = 255			  ## key_driver.c:201:29
 1e00ae4:    e8 68             	b[r4 + 14] = r0			  ## key_driver.c:201:29
 1e00ae6:    c0 ff 00 59 45 4b 	r0 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## key_driver.c:203:12
 1e00aec:    18 02             	[sp+4] = r0			  ## key_driver.c:203:12
 1e00aee:    00 a0             	r0 = sp + 0			  ## key_driver.c:203:12
 1e00af0:    80 f3 10 5f       	call 48672 <sys_event_notify : 1e0c914 >			  ## key_driver.c:206:9
 1e00af4:    4d 68             	b[r4 + 4] = r5			  ## key_driver.c:212:25
 1e00af6:    0c 0a             	sp += 24
 1e00af8:    55 01             	{pc, r5, r4} = [sp++]			  ## key_driver.c:214:1
 1e00afa:    10 92             	r0 = r1 + 1			  ## key_driver.c:163:47
 1e00afc:    c8 68             	b[r4 + 12] = r0			  ## key_driver.c:163:47
 1e00afe:    fa 1f             	goto -12 <key_driver_scan+0x106 : 1e00af4 >			  ## key_driver.c:163:47


att_read_callback:
 1e00b00:    00 70             	r0 = 0			  ## le_trans_data.c:634:0
 1e00b02:    20 00             	rts			  ## le_trans_data.c:685:5


set_ble_work_state:
 1e00b04:    c1 ff 41 1d 00 00 	r1 = 7489 <ble_work_state : 1d41 >			  ## le_trans_data.c:300:0
 1e00b0a:    02 62             	r2 = b[r1 + 0] (u)			  ## le_trans_data.c:301:18
 1e00b0c:    02 f2 01 00       	if (r2 == r0) goto 2 <set_ble_work_state+0xE : 1e00b12 >			  ## le_trans_data.c:301:18
 1e00b10:    08 62             	b[r1 + 0] = r0			  ## le_trans_data.c:303:24
 1e00b12:    20 00             	rts			  ## le_trans_data.c:308:1


check_connetion_updata_deal:
 1e00b14:    34 00             	[--sp] = rets			  ## le_trans_data.c:276:0
 1e00b16:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:276:0
 1e00b1c:    21 60             	r1 = b[r0 + 2] (u)			  ## le_trans_data.c:278:13
 1e00b1e:    21 e0 0c 80       	if (r1 > 2) goto 24 <check_connetion_updata_deal+0x26 : 1e00b3a >			  ## le_trans_data.c:278:13
 1e00b22:    72 51             	r2 = h[r0 + 46] (u)			  ## le_trans_data.c:270:9
 1e00b24:    0a 24             	if (r2 == 0) goto 20 <check_connetion_updata_deal+0x26 : 1e00b3a >			  ## le_trans_data.c:270:9
 1e00b26:    72 51             	r2 = h[r0 + 46] (u)			  ## le_trans_data.c:271:9
 1e00b28:    c8 c0             	r0 = r1 << 3			  ## le_trans_data.c:267:50
 1e00b2a:    c1 ff 50 ea e0 01 	r1 = 31517264 <connection_param_table : 1e0ea50 >			  ## le_trans_data.c:267:50
 1e00b30:    43 b0             	r3 = r0 + r1			  ## le_trans_data.c:267:50
 1e00b32:    b0 70             	r0 = 11			  ## le_trans_data.c:271:9
 1e00b34:    21 70             	r1 = 2			  ## le_trans_data.c:271:9
 1e00b36:    80 f3 15 32       	call 25642 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:271:9
 1e00b3a:    30 00             	pc = [sp++]			  ## le_trans_data.c:282:1


get_vbat_level:
 1e00b3c:    34 00             	[--sp] = rets			  ## app_power_manage.c:97:0
 1e00b3e:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x374C1 : 5000d >			  ## app_power_manage.c:99:13
 1e00b44:    7b 14             	call -1802 <adc_get_voltage : 1e0043c >			  ## app_power_manage.c:99:13
 1e00b46:    80 c0             	r0 = r0 << 2			  ## app_power_manage.c:99:41
 1e00b48:    a1 70             	r1 = 10			  ## app_power_manage.c:99:45
 1e00b4a:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## app_power_manage.c:99:45
 1e00b4e:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:99:5
 1e00b50:    30 00             	pc = [sp++]			  ## app_power_manage.c:99:5


app_send_user_data_check:
 1e00b52:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:1210:0
 1e00b54:    fe 0b             	sp += -4			  ## le_trans_data.c:1210:0
 1e00b56:    00 70             	r0 = 0			  ## le_trans_data.c:1210:0
 1e00b58:    08 02             	[sp] = r0			  ## le_trans_data.c:1191:9
 1e00b5a:    02 a0             	r2 = sp + 0			  ## le_trans_data.c:1191:9
 1e00b5c:    90 70             	r0 = 9			  ## le_trans_data.c:1192:5
 1e00b5e:    11 70             	r1 = 1			  ## le_trans_data.c:1192:5
 1e00b60:    14 70             	r4 = 1			  ## le_trans_data.c:1192:5
 1e00b62:    80 f3 ff 31       	call 25598 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:1192:5
 1e00b66:    00 02             	r0 = [sp]			  ## le_trans_data.c:1193:12
 1e00b68:    50 e0 01 80       	if (r0 > 5) goto 2 <app_send_user_data_check+0x1C : 1e00b6e >
 1e00b6c:    04 70             	r4 = 0			  ## le_trans_data.c:1215:5
 1e00b6e:    40 08             	r0 = r4			  ## le_trans_data.c:1216:1
 1e00b70:    02 0a             	sp += 4
 1e00b72:    54 01             	{pc, r4} = [sp++]			  ## le_trans_data.c:1216:1


app_send_user_data:
 1e00b74:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:850:0
 1e00b76:    fc 0b             	sp += -8			  ## le_trans_data.c:850:0
 1e00b78:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:853:10
 1e00b7e:    71 53             	r1 = h[r1 + 46] (u)			  ## le_trans_data.c:853:10
 1e00b80:    03 08             	r3 = r0			  ## le_trans_data.c:853:10
 1e00b82:    0c 22             	if (r1 == 0) goto 24 <app_send_user_data+0x28 : 1e00b9c >
 1e00b84:    80 f3 e2 32       	call 26052 <att_get_ccc_config : 1e0714c >			  ## le_trans_data.c:857:10
 1e00b88:    09 20             	if (r0 == 0) goto 18 <app_send_user_data+0x28 : 1e00b9c >			  ## le_trans_data.c:857:10
 1e00b8a:    00 70             	r0 = 0			  ## le_trans_data.c:862:11
 1e00b8c:    18 02             	[sp+4] = r0			  ## le_trans_data.c:862:11
 1e00b8e:    64 70             	r4 = 6			  ## le_trans_data.c:862:11
 1e00b90:    a0 70             	r0 = 10			  ## le_trans_data.c:862:11
 1e00b92:    41 70             	r1 = 4			  ## le_trans_data.c:862:11
 1e00b94:    92 70             	r2 = 9			  ## le_trans_data.c:862:11
 1e00b96:    0c 02             	[sp] = r4			  ## le_trans_data.c:862:11
 1e00b98:    80 f3 e4 31       	call 25544 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:862:11
 1e00b9c:    04 0a             	sp += 8
 1e00b9e:    54 01             	{pc, r4} = [sp++]


Send_SKIP_ROPE_NUM_BLE:
 1e00ba0:    34 00             	[--sp] = rets			  ## le_trans_data.c:717:0
 1e00ba2:    fa 0b             	sp += -12			  ## le_trans_data.c:717:0
 1e00ba4:    d1 f5 00 00       	b[sp] = r1			  ## le_trans_data.c:721:13
 1e00ba8:    61 70             	r1 = 6			  ## le_trans_data.c:722:13
 1e00baa:    d1 f5 01 00       	b[sp+1] = r1			  ## le_trans_data.c:722:13
 1e00bae:    01 d4             	r1 = r0 >> 16			  ## le_trans_data.c:723:22
 1e00bb0:    d1 f5 02 00       	b[sp+2] = r1			  ## le_trans_data.c:723:13
 1e00bb4:    01 d2             	r1 = r0 >> 8			  ## le_trans_data.c:724:25
 1e00bb6:    d1 f5 03 00       	b[sp+3] = r1			  ## le_trans_data.c:724:16
 1e00bba:    d0 f5 04 00       	b[sp+4] = r0			  ## le_trans_data.c:725:13
 1e00bbe:    be 17             	call -132 <get_vbat_level : 1e00b3c >			  ## le_trans_data.c:726:15
 1e00bc0:    11 70             	r1 = 1
 1e00bc2:    03 ff 36 01 01 00 	if (r0 < 310) goto 2 <Send_SKIP_ROPE_NUM_BLE+0x2A : 1e00bca >
 1e00bc8:    51 70             	r1 = 5
 1e00bca:    d1 f5 05 00       	b[sp+5] = r1			  ## le_trans_data.c:726:13
 1e00bce:    c1 17             	call -126 <app_send_user_data_check : 1e00b52 >			  ## le_trans_data.c:728:7
 1e00bd0:    02 20             	if (r0 == 0) goto 4 <Send_SKIP_ROPE_NUM_BLE+0x36 : 1e00bd6 >			  ## le_trans_data.c:728:7
 1e00bd2:    00 a0             	r0 = sp + 0
 1e00bd4:    cf 17             	call -98 <app_send_user_data : 1e00b74 >			  ## le_trans_data.c:730:3
 1e00bd6:    06 0a             	sp += 12
 1e00bd8:    30 00             	pc = [sp++]			  ## le_trans_data.c:733:1


SET_COUNTDOWN_MODE:
 1e00bda:    34 00             	[--sp] = rets			  ## le_trans_data.c:696:0
 1e00bdc:    f4 0b             	sp += -24			  ## le_trans_data.c:696:0
 1e00bde:    13 70             	r3 = 1			  ## le_trans_data.c:696:0
 1e00be0:    93 f5 00 00       	h[sp] = r3			  ## le_trans_data.c:700:19
 1e00be4:    d3 f5 08 00       	b[sp+8] = r3			  ## le_trans_data.c:701:20
 1e00be8:    b3 70             	r3 = 11			  ## le_trans_data.c:703:10
 1e00bea:    01 30             	if (r0 != 0) goto 2 <SET_COUNTDOWN_MODE+0x14 : 1e00bee >			  ## le_trans_data.c:703:10
 1e00bec:    a3 70             	r3 = 10
 1e00bee:    93 f5 0a 00       	h[sp+10] = r3
 1e00bf2:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## le_trans_data.c:710:21
 1e00bf6:    3a 02             	[sp+12] = r2			  ## le_trans_data.c:710:21
 1e00bf8:    c0 ff 00 59 45 4b 	r0 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## le_trans_data.c:712:14
 1e00bfe:    18 02             	[sp+4] = r0			  ## le_trans_data.c:712:14
 1e00c00:    00 a0             	r0 = sp + 0			  ## le_trans_data.c:712:14
 1e00c02:    80 f3 87 5e       	call 48398 <sys_event_notify : 1e0c914 >			  ## le_trans_data.c:713:10
 1e00c06:    0c 0a             	sp += 24
 1e00c08:    30 00             	pc = [sp++]			  ## le_trans_data.c:715:1


att_write_callback:
 1e00c0a:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:768:0
 1e00c0c:    24 02             	r4 = [sp+8]			  ## le_trans_data.c:768:0
 1e00c0e:    71 e0 0a 00       	if (r1 == 7) goto 20 <att_write_callback+0x1C : 1e00c26 >			  ## le_trans_data.c:777:5
 1e00c12:    a1 e0 06 10       	if (r1 != 10) goto 12 <att_write_callback+0x18 : 1e00c22 >
 1e00c16:    10 72             	r0 = 33			  ## le_trans_data.c:781:9
 1e00c18:    75 17             	call -278 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:781:9
 1e00c1a:    7c 17             	call -264 <check_connetion_updata_deal : 1e00b14 >			  ## le_trans_data.c:782:9
 1e00c1c:    00 68             	r0 = b[r4 + 0] (u)			  ## le_trans_data.c:784:36
 1e00c1e:    80 f3 73 32       	call 25830 <att_set_ccc_config : 1e07108 >			  ## le_trans_data.c:784:9
 1e00c22:    00 70             	r0 = 0			  ## le_trans_data.c:839:5
 1e00c24:    54 01             	{pc, r4} = [sp++]			  ## le_trans_data.c:839:5
 1e00c26:    00 68             	r0 = b[r4 + 0] (u)
 1e00c28:    c0 8a             	r0 += -84			  ## le_trans_data.c:796:3
 1e00c2a:    40 e0 fa 8f       	if (r0 > 4) goto -12 <att_write_callback+0x18 : 1e00c22 >			  ## le_trans_data.c:796:3
 1e00c2e:    a0 00             	tbb [r0]


.GJTIS69_0_0_:
 1e00c30:    04     < 4 : 0x4 >
 1e00c31:    0b     < 11 : 0xB >
 1e00c32:    10     < 16 : 0x10 >
 1e00c33:    03     < 3 : 0x3 >
 1e00c34:    15     < 21 : 0x15 >
 1e00c35:    00     < 0 : 0x0 >
 1e00c36:    f5 1f             	goto -22 <att_write_callback+0x18 : 1e00c22 >
 1e00c38:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:801:30
 1e00c3e:    b0 41             	r0 = [r0 + 108]			  ## le_trans_data.c:801:30
 1e00c40:    41 75             	r1 = 84			  ## le_trans_data.c:801:7
 1e00c42:    ae 17             	call -164 <Send_SKIP_ROPE_NUM_BLE : 1e00ba0 >			  ## le_trans_data.c:801:7
 1e00c44:    ee 1f             	goto -36 <att_write_callback+0x18 : 1e00c22 >
 1e00c46:    22 68             	r2 = b[r4 + 2] (u)			  ## le_trans_data.c:805:7
 1e00c48:    11 68             	r1 = b[r4 + 1] (u)			  ## le_trans_data.c:805:7
 1e00c4a:    10 70             	r0 = 1			  ## le_trans_data.c:805:7
 1e00c4c:    c6 17             	call -116 <SET_COUNTDOWN_MODE : 1e00bda >			  ## le_trans_data.c:805:7
 1e00c4e:    e9 1f             	goto -46 <att_write_callback+0x18 : 1e00c22 >
 1e00c50:    22 68             	r2 = b[r4 + 2] (u)			  ## le_trans_data.c:809:7
 1e00c52:    11 68             	r1 = b[r4 + 1] (u)			  ## le_trans_data.c:809:7
 1e00c54:    00 70             	r0 = 0			  ## le_trans_data.c:809:7
 1e00c56:    c1 17             	call -126 <SET_COUNTDOWN_MODE : 1e00bda >			  ## le_trans_data.c:809:7
 1e00c58:    e4 1f             	goto -56 <att_write_callback+0x18 : 1e00c22 >
 1e00c5a:    40 76             	r0 = 100			  ## le_trans_data.c:824:9
 1e00c5c:    98 f3 ac 30       	call 3170648 <os_time_dly : 106db8 >			  ## le_trans_data.c:824:9
 1e00c60:    a0 70             	r0 = 10			  ## le_trans_data.c:826:9
 1e00c62:    98 f3 a9 30       	call 3170642 <os_time_dly : 106db8 >			  ## le_trans_data.c:826:9
 1e00c66:    dd 1f             	goto -70 <att_write_callback+0x18 : 1e00c22 >			  ## le_trans_data.c:826:9


server_profile_start:
 1e00c68:    74 01             	[--sp] = {rets, r4}			  ## le_trans_data.c:445:0
 1e00c6a:    fc 0b             	sp += -8			  ## le_trans_data.c:445:0
 1e00c6c:    02 08             	r2 = r0			  ## le_trans_data.c:445:0
 1e00c6e:    80 7c             	r0 = 200			  ## le_trans_data.c:449:5
 1e00c70:    18 02             	[sp+4] = r0			  ## le_trans_data.c:449:5
 1e00c72:    04 fb 52 03       	r4 = 850 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x4A : 352 >			  ## le_trans_data.c:449:5
 1e00c76:    c3 ff 44 1d 00 00 	r3 = 7492 <att_ram_buffer : 1d44 >			  ## le_trans_data.c:449:5
 1e00c7c:    70 70             	r0 = 7			  ## le_trans_data.c:449:5
 1e00c7e:    41 70             	r1 = 4			  ## le_trans_data.c:449:5
 1e00c80:    0c 02             	[sp] = r4			  ## le_trans_data.c:449:5
 1e00c82:    80 f3 6f 31       	call 25310 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:449:5
 1e00c86:    30 70             	r0 = 3			  ## le_trans_data.c:450:5
 1e00c88:    3d 17             	call -390 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:450:5
 1e00c8a:    04 0a             	sp += 8			  ## le_trans_data.c:450:5
 1e00c8c:    54 01             	{pc, r4} = [sp++]			  ## le_trans_data.c:454:1


DISPLAY_STATE_DATA_UPDATE:
 1e00c8e:    40 e0 2f 80       	if (r0 > 4) goto 94 <.GJTIE72_0_0_+0x50 : 1e00cf0 >			  ## 7PIN_led8888.c:754:0
 1e00c92:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## 7PIN_led8888.c:754:0
 1e00c98:    a0 00             	tbb [r0]			  ## 7PIN_led8888.c:754:0


.GJTIS72_0_0_:
 1e00c9a:    03     < 3 : 0x3 >
 1e00c9b:    13     < 19 : 0x13 >
 1e00c9c:    19     < 25 : 0x19 >
 1e00c9d:    1e     < 30 : 0x1E >
 1e00c9e:    07     < 7 : 0x7 >
 1e00c9f:    00     < 0 : 0x0 >
 1e00ca0:    70 64             	r0 = b[r2 + 7] (u)			  ## 7PIN_led8888.c:780:32
 1e00ca2:    20 fd ec 09       	r0 = r0 & 236			  ## 7PIN_led8888.c:780:32
 1e00ca6:    23 18             	goto 70 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:780:32
 1e00ca8:    73 64             	r3 = b[r2 + 7] (u)			  ## 7PIN_led8888.c:759:32
 1e00caa:    20 fd d3 39       	r0 = r3 & 211			  ## 7PIN_led8888.c:759:54
 1e00cae:    78 64             	b[r2 + 7] = r0			  ## 7PIN_led8888.c:759:28
 1e00cb0:    31 e0 18 00       	if (r1 == 3) goto 48 <.GJTIE72_0_0_+0x44 : 1e00ce4 >			  ## 7PIN_led8888.c:760:8
 1e00cb4:    21 e0 19 00       	if (r1 == 2) goto 50 <.GJTIE72_0_0_+0x4A : 1e00cea >
 1e00cb8:    11 e0 1a 10       	if (r1 != 1) goto 52 <.GJTIE72_0_0_+0x50 : 1e00cf0 >
 1e00cbc:    90 b1             	r0 |= 8			  ## 7PIN_led8888.c:761:26
 1e00cbe:    17 18             	goto 46 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:761:26
 1e00cc0:    70 64             	r0 = b[r2 + 7] (u)			  ## 7PIN_led8888.c:769:34
 1e00cc2:    20 fd ec 09       	r0 = r0 & 236			  ## 7PIN_led8888.c:769:56
 1e00cc6:    00 fd 11 09       	r0 = r0 | 17			  ## 7PIN_led8888.c:769:69
 1e00cca:    11 18             	goto 34 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:769:69
 1e00ccc:    70 64             	r0 = b[r2 + 7] (u)			  ## 7PIN_led8888.c:774:38
 1e00cce:    20 fd ec 09       	r0 = r0 & 236			  ## 7PIN_led8888.c:774:60
 1e00cd2:    90 b0             	r0 |= 2			  ## 7PIN_led8888.c:774:66
 1e00cd4:    0c 18             	goto 24 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:774:66
 1e00cd6:    70 64             	r0 = b[r2 + 7] (u)
 1e00cd8:    33 fd 40 09       	r3 = r0 & 4294967231			  ## 7PIN_led8888.c:787:27
 1e00cdc:    10 b3             	r0 |= 64			  ## 7PIN_led8888.c:785:32
 1e00cde:    07 32             	if (r1 != 0) goto 14 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:785:32
 1e00ce0:    30 08             	r0 = r3			  ## 7PIN_led8888.c:784:9
 1e00ce2:    05 18             	goto 10 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:784:9
 1e00ce4:    00 fd 2c 39       	r0 = r3 | 44			  ## 7PIN_led8888.c:765:63
 1e00ce8:    02 18             	goto 4 <.GJTIE72_0_0_+0x4E : 1e00cee >			  ## 7PIN_led8888.c:765:63
 1e00cea:    00 fd 0c 09       	r0 = r0 | 12			  ## 7PIN_led8888.c:763:56
 1e00cee:    78 64             	b[r2 + 7] = r0
 1e00cf0:    20 00             	rts			  ## 7PIN_led8888.c:790:1


get_ble_work_state:
 1e00cf2:    c0 ff 41 1d 00 00 	r0 = 7489 <ble_work_state : 1d41 >			  ## le_trans_data.c:311:0
 1e00cf8:    00 60             	r0 = b[r0 + 0] (u)			  ## le_trans_data.c:312:12
 1e00cfa:    20 00             	rts			  ## le_trans_data.c:312:5


make_eir_packet_val:
 1e00cfc:    76 01             	[--sp] = {rets, r6-r4}			  ## le_common.h:126:0
 1e00cfe:    fe 0b             	sp += -4			  ## le_common.h:126:0
 1e00d00:    54 02             	r4 = [sp+20]			  ## le_common.h:126:0
 1e00d02:    25 98             	r5 = r4 + 2			  ## le_common.h:127:48
 1e00d04:    66 fb 1f 19       	r6 = 31 - r1			  ## le_common.h:127:28
 1e00d08:    0b 02             	[sp] = r3			  ## le_common.h:127:28
 1e00d0a:    56 f2 03 a0       	ifs (r6 >= r5) goto 6 <make_eir_packet_val+0x18 : 1e00d14 >			  ## le_common.h:127:9
 1e00d0e:    00 b3             	r0 = r1 + r4			  ## le_common.h:128:23
 1e00d10:    25 90             	r5 = r0 + 2			  ## le_common.h:128:34
 1e00d12:    08 18             	goto 16 <make_eir_packet_val+0x28 : 1e00d24 >			  ## le_common.h:128:34
 1e00d14:    11 98             	r1 = r4 + 1			  ## le_common.h:131:23
 1e00d16:    09 60             	b[r0 + 0] = r1			  ## le_common.h:131:12
 1e00d18:    1a 60             	b[r0 + 1] = r2			  ## le_common.h:132:12
 1e00d1a:    20 80             	r0 += 2			  ## le_common.h:133:16
 1e00d1c:    01 a0             	r1 = sp + 0
 1e00d1e:    42 08             	r2 = r4			  ## le_common.h:133:5
 1e00d20:    98 f3 e0 30       	call 3170752 <memcpy : 106ee4 >			  ## le_common.h:133:5
 1e00d24:    40 05             	r0 = r5.b0 (u)			  ## le_common.h:135:1
 1e00d26:    02 0a             	sp += 4			  ## le_common.h:135:1
 1e00d28:    56 01             	{pc, r6-r4} = [sp++]			  ## le_common.h:135:1


bt_ble_adv_enable:
 1e00d2a:    78 01             	[--sp] = {rets, r8-r4}			  ## le_trans_data.c:1269:0
 1e00d2c:    fe 0b             	sp += -4			  ## le_trans_data.c:1269:0
 1e00d2e:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:1269:0
 1e00d34:    01 f9 50 70       	r1 = b[r7 + 80] (u)			  ## le_trans_data.c:1269:0
 1e00d38:    04 08             	r4 = r0			  ## le_trans_data.c:1269:0
 1e00d3a:    02 22             	if (r1 == 0) goto 4 <bt_ble_adv_enable+0x16 : 1e00d40 >			  ## le_trans_data.c:1269:0
 1e00d3c:    70 5f             	r0 = h[r7 + 46] (u)			  ## le_trans_data.c:1122:9
 1e00d3e:    02 20             	if (r0 == 0) goto 4 <bt_ble_adv_enable+0x1A : 1e00d44 >			  ## le_trans_data.c:1122:9
 1e00d40:    02 0a             	sp += 4
 1e00d42:    58 01             	{pc, r8-r4} = [sp++]			  ## le_trans_data.c:1271:1
 1e00d44:    01 72             	r1 = 32			  ## le_trans_data.c:1128:5
 1e00d46:    01 38             	if (r4 != 0) goto 2 <bt_ble_adv_enable+0x20 : 1e00d4a >			  ## le_trans_data.c:1128:5
 1e00d48:    21 70             	r1 = 2
 1e00d4a:    d3 17             	call -90 <get_ble_work_state : 1e00cf2 >			  ## le_trans_data.c:1132:18
 1e00d4c:    30 e0 04 30       	if (r0 < 3) goto 8 <bt_ble_adv_enable+0x2E : 1e00d58 >
 1e00d50:    00 e2 02 00       	if (r0 == 32) goto 4 <bt_ble_adv_enable+0x2E : 1e00d58 >
 1e00d54:    50 e0 f4 1f       	if (r0 != 5) goto -24 <bt_ble_adv_enable+0x16 : 1e00d40 >
 1e00d58:    10 f2 f2 0f       	if (r0 == r1) goto -28 <bt_ble_adv_enable+0x16 : 1e00d40 >
 1e00d5c:    10 08             	r0 = r1			  ## le_trans_data.c:1149:5
 1e00d5e:    d2 16             	call -604 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:1149:5
 1e00d60:    43 28             	if (r4 == 0) goto 134 <bt_ble_adv_enable+0xBE : 1e00de8 >			  ## le_trans_data.c:1149:5
 1e00d62:    70 70             	r0 = 7			  ## le_trans_data.c:951:5
 1e00d64:    08 02             	[sp] = r0			  ## le_trans_data.c:951:5
 1e00d66:    20 70             	r0 = 2			  ## le_trans_data.c:951:5
 1e00d68:    31 70             	r1 = 3			  ## le_trans_data.c:951:5
 1e00d6a:    02 fb 20 03       	r2 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x18 : 320 >			  ## le_trans_data.c:951:5
 1e00d6e:    03 70             	r3 = 0			  ## le_trans_data.c:951:5
 1e00d70:    28 70             	r8 = 2			  ## le_trans_data.c:951:5
 1e00d72:    80 f3 f7 30       	call 25070 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:951:5
 1e00d76:    10 70             	r0 = 1			  ## le_trans_data.c:951:5
 1e00d78:    c5 ff b0 25 00 00 	r5 = 9648 <adv_data : 25b0 >			  ## le_trans_data.c:951:5
 1e00d7e:    01 70             	r1 = 0			  ## le_trans_data.c:887:15
 1e00d80:    12 70             	r2 = 1			  ## le_trans_data.c:887:15
 1e00d82:    63 70             	r3 = 6			  ## le_trans_data.c:887:15
 1e00d84:    08 02             	[sp] = r0			  ## le_trans_data.c:887:15
 1e00d86:    50 08             	r0 = r5			  ## le_trans_data.c:887:15
 1e00d88:    b9 17             	call -142 <make_eir_packet_val : 1e00cfc >			  ## le_trans_data.c:887:15
 1e00d8a:    06 08             	r6 = r0			  ## le_trans_data.c:887:15
 1e00d8c:    40 bd             	r0 = r6 + r5			  ## le_trans_data.c:890:36
 1e00d8e:    c3 ff 30 af 00 00 	r3 = 44848 <BTCTLER_CODE_TOTAL+0x2C74 : af30 >			  ## le_trans_data.c:890:15
 1e00d94:    32 70             	r2 = 3			  ## le_trans_data.c:890:15
 1e00d96:    18 f5 00 00       	[sp] = r8			  ## le_trans_data.c:890:15
 1e00d9a:    61 08             	r1 = r6			  ## le_trans_data.c:890:15
 1e00d9c:    af 17             	call -162 <make_eir_packet_val : 1e00cfc >			  ## le_trans_data.c:890:15
 1e00d9e:    60 09             	r0 += r6			  ## le_trans_data.c:890:12
 1e00da0:    02 04             	r2 = r0.b0 (u)			  ## le_trans_data.c:890:12
 1e00da2:    f2 e1 05 80       	if (r2 > 31) goto 10 <bt_ble_adv_enable+0x86 : 1e00db0 >			  ## le_trans_data.c:890:12
 1e00da6:    30 70             	r0 = 3			  ## le_trans_data.c:909:5
 1e00da8:    21 70             	r1 = 2			  ## le_trans_data.c:909:5
 1e00daa:    53 08             	r3 = r5			  ## le_trans_data.c:909:5
 1e00dac:    80 f3 da 30       	call 25012 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:909:5
 1e00db0:    32 6e             	r2 = b[r7 + 3] (u)			  ## le_trans_data.c:925:19
 1e00db2:    d2 e1 01 30       	if (r2 < 29) goto 2 <bt_ble_adv_enable+0x8E : 1e00db8 >
 1e00db6:    d2 71             	r2 = 29			  ## le_trans_data.c:927:9
 1e00db8:    26 94             	r6 = r2 + 2			  ## le_common.h:114:48
 1e00dba:    f6 e1 0c 80       	if (r6 > 31) goto 24 <bt_ble_adv_enable+0xAC : 1e00dd6 >
 1e00dbe:    10 94             	r0 = r2 + 1			  ## le_common.h:118:23
 1e00dc0:    f8 6b             	b[r5 + 31] = r0			  ## le_common.h:118:12
 1e00dc2:    90 70             	r0 = 9			  ## le_common.h:119:12
 1e00dc4:    10 f9 20 50       	b[r5 + 32] = r0			  ## le_common.h:119:12
 1e00dc8:    50 fc 21 00       	r0 = r5 + 33			  ## le_common.h:120:5
 1e00dcc:    c1 ff f0 08 00 00 	r1 = 2288 <gap_device_name : 8f0 >			  ## le_common.h:120:5
 1e00dd2:    98 f3 87 30       	call 3170574 <memcpy : 106ee4 >			  ## le_common.h:120:5
 1e00dd6:    80 05             	r0 = r6.b0 (u)
 1e00dd8:    f0 e1 06 80       	if (r0 > 31) goto 12 <bt_ble_adv_enable+0xBE : 1e00de8 >
 1e00ddc:    f3 9b             	r3 = r5 + 31			  ## le_trans_data.c:940:5
 1e00dde:    40 70             	r0 = 4			  ## le_trans_data.c:940:5
 1e00de0:    21 70             	r1 = 2			  ## le_trans_data.c:940:5
 1e00de2:    62 08             	r2 = r6			  ## le_trans_data.c:940:5
 1e00de4:    80 f3 be 30       	call 24956 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:940:5
 1e00de8:    10 70             	r0 = 1			  ## le_trans_data.c:1166:5
 1e00dea:    11 70             	r1 = 1			  ## le_trans_data.c:1166:5
 1e00dec:    42 08             	r2 = r4			  ## le_trans_data.c:1166:5
 1e00dee:    80 f3 b9 30       	call 24946 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:1166:5
 1e00df2:    a6 1f             	goto -180 <bt_ble_adv_enable+0x16 : 1e00d40 >			  ## le_trans_data.c:1166:5


cbk_packet_handler:
 1e00df4:    75 01             	[--sp] = {rets, r5, r4}			  ## le_trans_data.c:471:0
 1e00df6:    fc 0b             	sp += -8			  ## le_trans_data.c:471:0
 1e00df8:    40 e0 5a 10       	if (r0 != 4) goto 180 <cbk_packet_handler+0xBC : 1e00eb0 >			  ## le_trans_data.c:471:0
 1e00dfc:    00 64             	r0 = b[r2 + 0] (u)			  ## btstack_event.h:40:16
 1e00dfe:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e00e04:    50 e0 11 00       	if (r0 == 5) goto 34 <cbk_packet_handler+0x36 : 1e00e2a >			  ## le_trans_data.c:479:9
 1e00e08:    00 ff b5 00 24 00 	if (r0 == 181) goto 72 <cbk_packet_handler+0x62 : 1e00e56 >
 1e00e0e:    70 e7 2d 00       	if (r0 == 119) goto 90 <cbk_packet_handler+0x78 : 1e00e6c >
 1e00e12:    e0 e3 4d 10       	if (r0 != 62) goto 154 <cbk_packet_handler+0xBC : 1e00eb0 >
 1e00e16:    20 64             	r0 = b[r2 + 2] (u)			  ## btstack_event.h:122:16
 1e00e18:    10 e0 35 00       	if (r0 == 1) goto 106 <cbk_packet_handler+0x92 : 1e00e86 >			  ## le_trans_data.c:490:13
 1e00e1c:    a0 e0 48 10       	if (r0 != 10) goto 144 <cbk_packet_handler+0xBC : 1e00eb0 >
 1e00e20:    30 64             	r0 = b[r2 + 3] (u)			  ## btstack_event.h:3699:16
 1e00e22:    3e 20             	if (r0 == 0) goto 124 <cbk_packet_handler+0xAC : 1e00ea0 >			  ## le_trans_data.c:493:21
 1e00e24:    50 70             	r0 = 5			  ## le_trans_data.c:495:21
 1e00e26:    6e 16             	call -804 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:495:21
 1e00e28:    43 18             	goto 134 <cbk_packet_handler+0xBC : 1e00eb0 >
 1e00e2a:    05 70             	r5 = 0
 1e00e2c:    7d 59             	h[r4 + 46] = r5			  ## le_trans_data.c:546:24
 1e00e2e:    72 59             	r2 = h[r4 + 46] (u)			  ## le_trans_data.c:547:13
 1e00e30:    1d 02             	[sp+4] = r5			  ## le_trans_data.c:547:13
 1e00e32:    70 70             	r0 = 7			  ## le_trans_data.c:547:13
 1e00e34:    41 70             	r1 = 4			  ## le_trans_data.c:547:13
 1e00e36:    03 70             	r3 = 0			  ## le_trans_data.c:547:13
 1e00e38:    0d 02             	[sp] = r5			  ## le_trans_data.c:547:13
 1e00e3a:    80 f3 93 30       	call 24870 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:547:13
 1e00e3e:    30 70             	r0 = 3			  ## le_trans_data.c:548:5
 1e00e40:    01 70             	r1 = 0			  ## le_trans_data.c:548:5
 1e00e42:    25 17             	call -438 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## le_trans_data.c:548:5
 1e00e44:    50 70             	r0 = 5			  ## le_trans_data.c:549:13
 1e00e46:    5e 16             	call -836 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:549:13
 1e00e48:    00 f9 54 40       	r0 = b[r4 + 84] (u)			  ## le_trans_data.c:549:13
 1e00e4c:    02 30             	if (r0 != 0) goto 4 <cbk_packet_handler+0x5E : 1e00e52 >			  ## le_trans_data.c:549:13
 1e00e4e:    10 70             	r0 = 1			  ## le_trans_data.c:552:17
 1e00e50:    6c 17             	call -296 <bt_ble_adv_enable : 1e00d2a >			  ## le_trans_data.c:552:17
 1e00e52:    2d 68             	b[r4 + 2] = r5			  ## le_trans_data.c:554:35
 1e00e54:    2d 18             	goto 90 <cbk_packet_handler+0xBC : 1e00eb0 >			  ## le_trans_data.c:554:35
 1e00e56:    41 70             	r1 = 4			  ## btstack_event.h:2313:16
 1e00e58:    20 08             	r0 = r2			  ## btstack_event.h:2313:16
 1e00e5a:    80 f3 8a 31       	call 25364 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:2313:16
 1e00e5e:    02 fc fd ff       	r2 = r0 + -3			  ## le_trans_data.c:562:67
 1e00e62:    80 70             	r0 = 8			  ## le_trans_data.c:564:13
 1e00e64:    11 70             	r1 = 1			  ## le_trans_data.c:564:13
 1e00e66:    80 f3 7d 30       	call 24826 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:564:13
 1e00e6a:    22 18             	goto 68 <cbk_packet_handler+0xBC : 1e00eb0 >
 1e00e6c:    41 70             	r1 = 4			  ## le_trans_data.c:573:19
 1e00e6e:    20 08             	r0 = r2			  ## le_trans_data.c:573:19
 1e00e70:    80 f3 7f 31       	call 25342 <little_endian_read_16 : 1e07172 >			  ## le_trans_data.c:573:19
 1e00e74:    05 20             	if (r0 == 0) goto 10 <cbk_packet_handler+0x8C : 1e00e80 >			  ## le_trans_data.c:575:17
 1e00e76:    20 68             	r0 = b[r4 + 2] (u)			  ## le_trans_data.c:576:38
 1e00e78:    10 80             	r0 += 1			  ## le_trans_data.c:576:38
 1e00e7a:    28 68             	b[r4 + 2] = r0			  ## le_trans_data.c:576:38
 1e00e7c:    4b 16             	call -874 <check_connetion_updata_deal : 1e00b14 >			  ## le_trans_data.c:578:17
 1e00e7e:    18 18             	goto 48 <cbk_packet_handler+0xBC : 1e00eb0 >
 1e00e80:    30 70             	r0 = 3			  ## le_trans_data.c:580:39
 1e00e82:    28 68             	b[r4 + 2] = r0			  ## le_trans_data.c:580:39
 1e00e84:    15 18             	goto 42 <cbk_packet_handler+0xBC : 1e00eb0 >			  ## le_trans_data.c:580:39
 1e00e86:    41 70             	r1 = 4			  ## btstack_event.h:3351:16
 1e00e88:    20 08             	r0 = r2			  ## btstack_event.h:3351:16
 1e00e8a:    80 f3 72 31       	call 25316 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:3351:16
 1e00e8e:    78 59             	h[r4 + 46] = r0			  ## le_trans_data.c:507:28
 1e00e90:    70 59             	r0 = h[r4 + 46] (u)			  ## le_trans_data.c:508:17
 1e00e92:    70 59             	r0 = h[r4 + 46] (u)			  ## le_trans_data.c:510:17
 1e00e94:    e9 16             	call -558 <server_profile_start : 1e00c68 >			  ## le_trans_data.c:510:17
 1e00e96:    30 70             	r0 = 3			  ## le_trans_data.c:512:8
 1e00e98:    11 70             	r1 = 1			  ## le_trans_data.c:512:8
 1e00e9a:    f9 16             	call -526 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## le_trans_data.c:512:8
 1e00e9c:    70 59             	r0 = h[r4 + 46] (u)			  ## le_trans_data.c:521:17
 1e00e9e:    08 18             	goto 16 <cbk_packet_handler+0xBC : 1e00eb0 >			  ## le_trans_data.c:521:17
 1e00ea0:    41 70             	r1 = 4			  ## btstack_event.h:3709:16
 1e00ea2:    20 08             	r0 = r2			  ## btstack_event.h:3709:16
 1e00ea4:    80 f3 65 31       	call 25290 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:3709:16
 1e00ea8:    78 59             	h[r4 + 46] = r0			  ## le_trans_data.c:498:28
 1e00eaa:    70 59             	r0 = h[r4 + 46] (u)			  ## le_trans_data.c:499:17
 1e00eac:    70 59             	r0 = h[r4 + 46] (u)			  ## le_trans_data.c:503:17
 1e00eae:    dc 16             	call -584 <server_profile_start : 1e00c68 >			  ## le_trans_data.c:503:17
 1e00eb0:    04 0a             	sp += 8
 1e00eb2:    55 01             	{pc, r5, r4} = [sp++]			  ## le_trans_data.c:613:1


norflash_origin_read:
 1e00eb4:    d0 f3 91 14       	goto 2107682 <_norflash_read : 37da >			  ## vm_sfc.c:557:0


doe:
 1e00eb8:    76 01             	[--sp] = {rets, r6-r4}			  ## encryption.c:68:0
 1e00eba:    03 62             	r3 = b[r1 + 0] (u)			  ## encryption.c:68:0
 1e00ebc:    d3 b0             	r3 ^= r0			  ## encryption.c:68:0
 1e00ebe:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e00ec0:    93 f9 01 10       	b[r1 ++= 1] = r3			  ## encryption.c:75:12
 1e00ec4:    1a 24             	if (r2 == 0) goto 52 <doe+0x42 : 1e00efa >			  ## encryption.c:75:12
 1e00ec6:    03 fb de ef       	r3 = -4130 <bank_code_load_addr+0x1E45BA : 1ffefde >
 1e00eca:    44 c0             	r4 = r0 << 1			  ## encryption.c:57:24
 1e00ecc:    54 b7             	r4 &= r3			  ## encryption.c:58:19
 1e00ece:    20 04             	r0 = r0.l (u)			  ## encryption.c:55:33
 1e00ed0:    c5 d3             	r5 = r0 >> 15			  ## encryption.c:55:33
 1e00ed2:    54 ba             	r4 |= r5			  ## encryption.c:58:19
 1e00ed4:    c6 d2             	r6 = r0 >> 11			  ## encryption.c:58:31
 1e00ed6:    d6 ba             	r6 ^= r5			  ## encryption.c:58:35
 1e00ed8:    36 c3             	r6 = r6 << 12			  ## encryption.c:58:19
 1e00eda:    26 fd 10 6a       	r6 = r6 & 4096			  ## encryption.c:58:19
 1e00ede:    54 bc             	r4 |= r6			  ## encryption.c:59:18
 1e00ee0:    00 d1             	r0 = r0 >> 4			  ## encryption.c:59:29
 1e00ee2:    d0 ba             	r0 ^= r5			  ## encryption.c:59:32
 1e00ee4:    05 62             	r5 = b[r1 + 0] (u)			  ## encryption.c:59:32
 1e00ee6:    40 c1             	r0 = r0 << 5			  ## encryption.c:59:18
 1e00ee8:    20 fd 20 09       	r0 = r0 & 32			  ## encryption.c:59:18
 1e00eec:    50 b8             	r0 |= r4			  ## encryption.c:60:18
 1e00eee:    e1 fd 00 45       	r4 = r5 ^ r0			  ## encryption.c:60:18
 1e00ef2:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e00ef4:    94 f9 01 10       	b[r1 ++= 1] = r4
 1e00ef8:    e8 35             	if (r2 != 0) goto -48 <doe+0x12 : 1e00eca >
 1e00efa:    56 01             	{pc, r6-r4} = [sp++]			  ## encryption.c:78:1


CRC16:
 1e00efc:    77 01             	[--sp] = {rets, r7-r4}			  ## crc16.c:21:0
 1e00efe:    15 08             	r5 = r1			  ## crc16.c:21:0
 1e00f00:    06 08             	r6 = r0			  ## crc16.c:21:0
 1e00f02:    c4 ff a0 20 00 00 	r4 = 8352 <mutex : 20a0 >			  ## crc16.c:21:0
 1e00f08:    01 70             	r1 = 0			  ## crc16.c:25:5
 1e00f0a:    07 70             	r7 = 0			  ## crc16.c:25:5
 1e00f0c:    40 08             	r0 = r4			  ## crc16.c:25:5
 1e00f0e:    98 f3 89 2f       	call 3170066 <os_mutex_pend : 106e24 >			  ## crc16.c:25:5
 1e00f12:    c0 ff 00 35 1e 00 	r0 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## crc16.c:25:5
 1e00f18:    1f 40             	[r0 + 4] = r7			  ## crc16.c:27:17
 1e00f1a:    05 2a             	if (r5 == 0) goto 10 <CRC16+0x2A : 1e00f26 >			  ## crc16.c:27:17
 1e00f1c:    81 f9 01 60       	r1 = b[r6 ++= 1] (u)			  ## crc16.c:29:24
 1e00f20:    f5 8f             	r5 += -1			  ## crc16.c:28:15
 1e00f22:    09 40             	[r0 + 0] = r1			  ## crc16.c:29:22
 1e00f24:    fb 3b             	if (r5 != 0) goto -10 <CRC16+0x20 : 1e00f1c >
 1e00f26:    08 00             	csync			  ## crc16.c:31:5
 1e00f28:    15 40             	r5 = [r0 + 4]			  ## crc16.c:32:19
 1e00f2a:    40 08             	r0 = r4			  ## crc16.c:35:5
 1e00f2c:    98 f3 7c 2f       	call 3170040 <os_mutex_post : 106e28 >			  ## crc16.c:35:5
 1e00f30:    60 05             	r0 = r5.l (u)			  ## crc16.c:37:5
 1e00f32:    57 01             	{pc, r7-r4} = [sp++]			  ## crc16.c:37:5


norflash_read:
 1e00f34:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:620:0
 1e00f36:    c3 ff b0 25 00 00 	r3 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:620:0
 1e00f3c:    07 f6 98 30       	r7 = [r3 + 152]			  ## vm_sfc.c:623:33
 1e00f40:    26 08             	r6 = r2			  ## vm_sfc.c:623:33
 1e00f42:    14 08             	r4 = r1			  ## vm_sfc.c:623:33
 1e00f44:    05 08             	r5 = r0			  ## vm_sfc.c:623:33
 1e00f46:    67 f2 15 90       	if (r7 <= r6) goto 42 <norflash_read+0x40 : 1e00f74 >			  ## vm_sfc.c:623:9
 1e00f4a:    37 fc f0 00       	r7 = r3 + 240			  ## vm_sfc.c:624:9
 1e00f4e:    f1 07             	r1 = -1			  ## vm_sfc.c:624:9
 1e00f50:    70 08             	r0 = r7			  ## vm_sfc.c:624:9
 1e00f52:    98 f3 67 2f       	call 3169998 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:624:9
 1e00f56:    50 08             	r0 = r5			  ## vm_sfc.c:625:9
 1e00f58:    61 08             	r1 = r6			  ## vm_sfc.c:625:9
 1e00f5a:    42 08             	r2 = r4			  ## vm_sfc.c:625:9
 1e00f5c:    90 f3 3d 14       	call 2107514 <_norflash_read : 37da >			  ## vm_sfc.c:625:9
 1e00f60:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## vm_sfc.c:626:9
 1e00f66:    51 08             	r1 = r5			  ## vm_sfc.c:626:9
 1e00f68:    42 08             	r2 = r4			  ## vm_sfc.c:626:9
 1e00f6a:    a6 17             	call -180 <doe : 1e00eb8 >			  ## vm_sfc.c:626:9
 1e00f6c:    70 08             	r0 = r7			  ## vm_sfc.c:627:9
 1e00f6e:    98 f3 5b 2f       	call 3169974 <os_mutex_post : 106e28 >			  ## vm_sfc.c:627:9
 1e00f72:    08 18             	goto 16 <norflash_read+0x50 : 1e00f84 >			  ## vm_sfc.c:627:9
 1e00f74:    60 08             	r0 = r6			  ## vm_sfc.c:629:35
 1e00f76:    90 f3 54 14       	call 2107560 <flash_addr2cpu_addr : 3822 >			  ## vm_sfc.c:629:35
 1e00f7a:    01 08             	r1 = r0			  ## vm_sfc.c:629:35
 1e00f7c:    50 08             	r0 = r5			  ## vm_sfc.c:629:9
 1e00f7e:    42 08             	r2 = r4			  ## vm_sfc.c:629:9
 1e00f80:    98 f3 b0 2f       	call 3170144 <memcpy : 106ee4 >			  ## vm_sfc.c:629:9
 1e00f84:    40 08             	r0 = r4			  ## vm_sfc.c:632:5
 1e00f86:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:632:5


jl_file_head_valid_check:
 1e00f88:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:36:0
 1e00f8a:    04 08             	r4 = r0			  ## flash_fs_api.c:36:0
 1e00f8c:    0a 28             	if (r4 == 0) goto 20 <jl_file_head_valid_check+0x1A : 1e00fa2 >			  ## flash_fs_api.c:39:9
 1e00f8e:    20 98             	r0 = r4 + 2			  ## flash_fs_api.c:44:42
 1e00f90:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e00f92:    b4 17             	call -152 <CRC16 : 1e00efc >			  ## flash_fs_api.c:44:20
 1e00f94:    02 58             	r2 = h[r4 + 0] (u)			  ## flash_fs_api.c:45:15
 1e00f96:    01 08             	r1 = r0			  ## flash_fs_api.c:44:20
 1e00f98:    f0 07             	r0 = -1			  ## flash_fs_api.c:45:9
 1e00f9a:    12 f2 01 10       	if (r2 != r1) goto 2 <jl_file_head_valid_check+0x18 : 1e00fa0 >
 1e00f9e:    00 70             	r0 = 0
 1e00fa0:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:45:9
 1e00fa2:    e0 07             	r0 = -2			  ## flash_fs_api.c:51:5
 1e00fa4:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:51:5


norflash_ioctl:
 1e00fa6:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:888:0
 1e00fa8:    16 08             	r6 = r1			  ## vm_sfc.c:888:0
 1e00faa:    07 08             	r7 = r0			  ## vm_sfc.c:888:0
 1e00fac:    c8 ff b0 25 00 00 	r8 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:888:0
 1e00fb2:    84 fc f0 00       	r4 = r8 + 240			  ## vm_sfc.c:889:5
 1e00fb6:    f1 07             	r1 = -1			  ## vm_sfc.c:889:5
 1e00fb8:    40 08             	r0 = r4			  ## vm_sfc.c:889:5
 1e00fba:    98 f3 33 2f       	call 3169894 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:889:5
 1e00fbe:    05 70             	r5 = 0
 1e00fc0:    0c ff ca 70 19 00 	ifs (r7 > 202) goto 50 <.GJTIE102_0_0_+0x24 : 1e00ff8 >			  ## vm_sfc.c:892:5
 1e00fc6:    70 fc 9c ff       	r0 = r7 + -100
 1e00fca:    30 e0 21 80       	if (r0 > 3) goto 66 <.GJTIE102_0_0_+0x3C : 1e01010 >
 1e00fce:    a0 00             	tbb [r0]


.GJTIS102_0_0_:
 1e00fd0:    02     < 2 : 0x2 >
 1e00fd1:    37     < 55 : 0x37 >
 1e00fd2:    3a     < 58 : 0x3A >
 1e00fd3:    3d     < 61 : 0x3D >
 1e00fd4:    00 f6 84 80       	r0 = [r8 + 132]			  ## vm_sfc.c:909:24
 1e00fd8:    77 30             	if (r0 != 0) goto 238 <.GJTIE102_0_0_+0xF4 : 1e010c8 >			  ## vm_sfc.c:909:24
 1e00fda:    90 f3 62 14       	call 2107588 <read_flash_id : 38a2 >			  ## vm_sfc.c:910:13
 1e00fde:    00 f6 84 80       	r0 = [r8 + 132]			  ## vm_sfc.c:911:66
 1e00fe2:    01 04             	r1 = r0.b0 (u)			  ## vm_sfc.c:911:75
 1e00fe4:    01 8f             	r1 += -16			  ## vm_sfc.c:911:83
 1e00fe6:    11 e0 66 b0       	ifs (r1 < 1) goto 204 <.GJTIE102_0_0_+0xE2 : 1e010b6 >
 1e00fea:    13 70             	r3 = 1
 1e00fec:    32 08             	r2 = r3
 1e00fee:    53 c0             	r3 = r2 << 1			  ## vm_sfc.c:859:16
 1e00ff0:    51 f3 fc ff       	if (--r1 != 0) goto -8 <.GJTIE102_0_0_+0x18 : 1e00fec >			  ## vm_sfc.c:858:5
 1e00ff4:    51 c4             	r1 = r2 << 17			  ## vm_sfc.c:911:91
 1e00ff6:    61 18             	goto 194 <.GJTIE102_0_0_+0xE6 : 1e010ba >			  ## vm_sfc.c:911:91
 1e00ff8:    c0 ff 00 56 04 40 	r0 = 1074025984 <text_size+0x2CAB4 : 45600 >
 1e00ffe:    07 f2 11 c0       	ifs (r7 > r0) goto 34 <.GJTIE102_0_0_+0x50 : 1e01024 >
 1e01002:    00 ff cb 70 61 00 	if (r7 == 203) goto 194 <.GJTIE102_0_0_+0xF6 : 1e010ca >
 1e01008:    00 ff cc 70 05 00 	if (r7 == 204) goto 10 <.GJTIE102_0_0_+0x44 : 1e01018 >
 1e0100e:    51 18             	goto 162 <.GJTIE102_0_0_+0xDE : 1e010b2 >
 1e01010:    70 fc 38 ff       	r0 = r7 + -200
 1e01014:    20 e0 4d 20       	if (r0 >= 2) goto 154 <.GJTIE102_0_0_+0xDE : 1e010b2 >
 1e01018:    70 08             	r0 = r7			  ## vm_sfc.c:919:15
 1e0101a:    61 08             	r1 = r6			  ## vm_sfc.c:919:15
 1e0101c:    90 f3 e8 14       	call 2107856 <norflash_erase : 39f0 >			  ## vm_sfc.c:919:15
 1e01020:    05 08             	r5 = r0			  ## vm_sfc.c:919:15
 1e01022:    53 18             	goto 166 <.GJTIE102_0_0_+0xF6 : 1e010ca >
 1e01024:    10 80             	r0 += 1
 1e01026:    07 f2 21 00       	if (r7 == r0) goto 66 <.GJTIE102_0_0_+0x98 : 1e0106c >
 1e0102a:    10 80             	r0 += 1
 1e0102c:    07 f2 41 10       	if (r7 != r0) goto 130 <.GJTIE102_0_0_+0xDE : 1e010b2 >
 1e01030:    81 fc 88 00       	r1 = r8 + 136			  ## vm_sfc.c:936:9
 1e01034:    02 71             	r2 = 16			  ## vm_sfc.c:936:9
 1e01036:    60 08             	r0 = r6			  ## vm_sfc.c:936:9
 1e01038:    98 f3 54 2f       	call 3169960 <memcpy : 106ee4 >			  ## vm_sfc.c:936:9
 1e0103c:    46 18             	goto 140 <.GJTIE102_0_0_+0xF6 : 1e010ca >			  ## vm_sfc.c:936:9
 1e0103e:    c0 f4 01 6a       	[r6 + 0] = 256			  ## vm_sfc.c:894:23
 1e01042:    43 18             	goto 134 <.GJTIE102_0_0_+0xF6 : 1e010ca >			  ## vm_sfc.c:894:23
 1e01044:    c0 f4 01 6b       	[r6 + 0] = 65536			  ## vm_sfc.c:897:23
 1e01048:    40 18             	goto 128 <.GJTIE102_0_0_+0xF6 : 1e010ca >			  ## vm_sfc.c:897:23
 1e0104a:    00 f6 80 80       	r0 = [r8 + 128]			  ## vm_sfc.c:901:24
 1e0104e:    3c 30             	if (r0 != 0) goto 120 <.GJTIE102_0_0_+0xF4 : 1e010c8 >			  ## vm_sfc.c:901:24
 1e01050:    90 f3 27 14       	call 2107470 <read_flash_id : 38a2 >			  ## vm_sfc.c:902:13
 1e01054:    00 f9 84 80       	r0 = b[r8 + 132] (u)			  ## vm_sfc.c:903:66
 1e01058:    00 8f             	r0 += -16			  ## vm_sfc.c:903:83
 1e0105a:    10 e0 31 b0       	ifs (r0 < 1) goto 98 <.GJTIE102_0_0_+0xEC : 1e010c0 >
 1e0105e:    12 70             	r2 = 1
 1e01060:    21 08             	r1 = r2
 1e01062:    4a c0             	r2 = r1 << 1			  ## vm_sfc.c:859:16
 1e01064:    50 f3 fc ff       	if (--r0 != 0) goto -8 <.GJTIE102_0_0_+0x8C : 1e01060 >			  ## vm_sfc.c:858:5
 1e01068:    48 c4             	r0 = r1 << 17			  ## vm_sfc.c:903:91
 1e0106a:    2c 18             	goto 88 <.GJTIE102_0_0_+0xF0 : 1e010c4 >			  ## vm_sfc.c:903:91
 1e0106c:    02 3c             	if (r6 != 0) goto 4 <.GJTIE102_0_0_+0x9E : 1e01072 >
 1e0106e:    90 f3 d2 11       	call 2106276 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e01072:    87 fc 7c 00       	r7 = r8 + 124
 1e01076:    c0 9e             	r0 = r7 + 12			  ## vm_sfc.c:870:5
 1e01078:    02 71             	r2 = 16			  ## vm_sfc.c:870:5
 1e0107a:    61 08             	r1 = r6			  ## vm_sfc.c:870:5
 1e0107c:    98 f3 32 2f       	call 3169892 <memcpy : 106ee4 >			  ## vm_sfc.c:870:5
 1e01080:    50 4c             	r0 = [r6 + 20]			  ## vm_sfc.c:871:5
 1e01082:    41 4c             	r1 = [r6 + 16]			  ## vm_sfc.c:871:5
 1e01084:    88 4e             	[r7 + 32] = r0			  ## vm_sfc.c:871:5
 1e01086:    79 4e             	[r7 + 28] = r1			  ## vm_sfc.c:871:5
 1e01088:    60 4c             	r0 = [r6 + 24]			  ## vm_sfc.c:873:35
 1e0108a:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:873:27
 1e0108c:    43 4e             	r3 = [r7 + 16]			  ## vm_sfc.c:875:60
 1e0108e:    30 08             	r0 = r3			  ## vm_sfc.c:875:26
 1e01090:    90 f3 c7 13       	call 2107278 <flash_addr2cpu_addr : 3822 >			  ## vm_sfc.c:875:26
 1e01094:    c1 ff 14 02 1f 00 	r1 = 2032148 <uECC_vli_cmp_unsafe+0xE9218 : 1f0214 >			  ## vm_sfc.c:875:26
 1e0109a:    38 42             	[r1 + 12] = r0			  ## vm_sfc.c:875:24
 1e0109c:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1E55DB : 1ffffff >			  ## vm_sfc.c:876:24
 1e010a2:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:876:24
 1e010a4:    00 f4 02 19       	[r1 + 0] |= 2			  ## vm_sfc.c:881:21
 1e010a8:    01 72             	r1 = 32			  ## vm_sfc.c:883:5
 1e010aa:    30 08             	r0 = r3			  ## vm_sfc.c:883:5
 1e010ac:    90 f3 0a 15       	call 2107924 <flushinv_dcache_api : 3ac4 >			  ## vm_sfc.c:883:5
 1e010b0:    0c 18             	goto 24 <.GJTIE102_0_0_+0xF6 : 1e010ca >			  ## vm_sfc.c:883:5
 1e010b2:    75 06             	r5 = -25
 1e010b4:    0a 18             	goto 20 <.GJTIE102_0_0_+0xF6 : 1e010ca >
 1e010b6:    20 fb 01 1b       	r1 = 65536
 1e010ba:    11 f6 80 80       	[r8 + 128] = r1			  ## vm_sfc.c:911:39
 1e010be:    04 18             	goto 8 <.GJTIE102_0_0_+0xF4 : 1e010c8 >			  ## vm_sfc.c:911:39
 1e010c0:    20 fb 01 0b       	r0 = 65536
 1e010c4:    10 f6 80 80       	[r8 + 128] = r0			  ## vm_sfc.c:903:39
 1e010c8:    08 4c             	[r6 + 0] = r0
 1e010ca:    40 08             	r0 = r4			  ## vm_sfc.c:944:5
 1e010cc:    98 f3 ac 2e       	call 3169624 <os_mutex_post : 106e28 >			  ## vm_sfc.c:944:5
 1e010d0:    50 08             	r0 = r5			  ## vm_sfc.c:945:5
 1e010d2:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:945:5


__jl_fs_sector_align:
 1e010d4:    34 00             	[--sp] = rets			  ## flash_fs_api.c:636:0
 1e010d6:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## flash_fs_api.c:636:0
 1e010dc:    03 f9 23 10       	r3 = b[r1 + 35] (u)			  ## flash_fs_api.c:636:0
 1e010e0:    02 08             	r2 = r0			  ## flash_fs_api.c:636:0
 1e010e2:    02 36             	if (r3 != 0) goto 4 <__jl_fs_sector_align+0x14 : 1e010e8 >			  ## flash_fs_api.c:636:0
 1e010e4:    90 f3 97 11       	call 2106158 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e010e8:    10 70             	r0 = 1			  ## flash_fs_api.c:641:9
 1e010ea:    03 e1 01 00       	if (r3 == 16) goto 2 <__jl_fs_sector_align+0x1C : 1e010f0 >			  ## flash_fs_api.c:641:9
 1e010ee:    00 70             	r0 = 0			  ## flash_fs_api.c:641:9
 1e010f0:    01 c3             	r1 = r0 << 12			  ## flash_fs_api.c:641:9
 1e010f2:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:641:9
 1e010f6:    13 e0 01 00       	if (r3 == 1) goto 2 <__jl_fs_sector_align+0x28 : 1e010fc >			  ## flash_fs_api.c:641:9
 1e010fa:    10 08             	r0 = r1			  ## flash_fs_api.c:641:9
 1e010fc:    06 20             	if (r0 == 0) goto 12 <__jl_fs_sector_align+0x36 : 1e0110a >
 1e010fe:    01 b4             	r1 = r2 + r0			  ## flash_fs_api.c:650:27
 1e01100:    f1 8f             	r1 += -1			  ## flash_fs_api.c:650:41
 1e01102:    60 fb 00 09       	r0 = 0 - r0			  ## flash_fs_api.c:650:61
 1e01106:    e2 fd 00 21       	r2 = r1 & r0			  ## flash_fs_api.c:650:61
 1e0110a:    20 08             	r0 = r2			  ## flash_fs_api.c:655:5
 1e0110c:    30 00             	pc = [sp++]			  ## flash_fs_api.c:655:5


clr_wdt:
 1e0110e:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:34:0
 1e01114:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:30:18
 1e01116:    11 b3             	r1 |= 64			  ## wdt.c:30:18
 1e01118:    09 60             	b[r0 + 0] = r1			  ## wdt.c:30:18
 1e0111a:    20 00             	rts			  ## wdt.c:36:1


sfc_erase:
 1e0111c:    34 00             	[--sp] = rets			  ## vm.c:1395:0
 1e0111e:    02 fc ff ff       	r2 = r0 + -1			  ## vm.c:1401:9
 1e01122:    00 70             	r0 = 0			  ## vm.c:1401:9
 1e01124:    22 e0 0d 80       	if (r2 > 2) goto 26 <sfc_erase+0x26 : 1e01142 >
 1e01128:    c0 ff 2c f0 e0 01 	r0 = 31518764 <bluetooth_base_uuid+0x22 : 1e0f02c >			  ## vm.c:1401:9
 1e0112e:    c3 ff 20 f0 e0 01 	r3 = 31518752 <bluetooth_base_uuid+0x16 : 1e0f020 >			  ## vm.c:1401:9
 1e01134:    a3 f6 00 32       	r3 = [r3+r2<<2]			  ## vm.c:1401:9
 1e01138:    a0 f6 00 02       	r0 = [r0+r2<<2]			  ## vm.c:1401:9
 1e0113c:    51 b7             	r1 &= r3
 1e0113e:    33 17             	call -410 <norflash_ioctl : 1e00fa6 >			  ## vm.c:1423:5
 1e01140:    10 70             	r0 = 1
 1e01142:    30 00             	pc = [sp++]			  ## vm.c:1426:1


flash_erase_by_blcok_n_sector:
 1e01144:    7a 01             	[--sp] = {rets, r10-r4}			  ## flash_fs_api.c:149:0
 1e01146:    15 08             	r5 = r1			  ## flash_fs_api.c:149:0
 1e01148:    04 08             	r4 = r0			  ## flash_fs_api.c:149:0
 1e0114a:    84 fd 60 84       	r8 = uextra(r4, p:12, l:4)			  ## flash_fs_api.c:156:41
 1e0114e:    03 ff 00 51 20 00 	if (r5 < 256) goto 64 <flash_erase_by_blcok_n_sector+0x50 : 1e01194 >
 1e01154:    84 fd 40 04       	r0 = uextra(r4, p:8, l:4)			  ## flash_fs_api.c:162:39
 1e01158:    1d 20             	if (r0 == 0) goto 58 <flash_erase_by_blcok_n_sector+0x50 : 1e01194 >
 1e0115a:    69 fb 10 09       	r9 = 16 - r0			  ## flash_fs_api.c:165:44
 1e0115e:    09 e0 18 00       	if (r9 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x4E : 1e01192 >
 1e01162:    07 70             	r7 = 0
 1e01164:    46 08             	r6 = r4
 1e01166:    54 08             	r4 = r5
 1e01168:    d2 17             	call -92 <clr_wdt : 1e0110e >			  ## flash_fs_api.c:171:13
 1e0116a:    30 70             	r0 = 3			  ## flash_fs_api.c:173:17
 1e0116c:    61 08             	r1 = r6			  ## flash_fs_api.c:173:17
 1e0116e:    d6 17             	call -84 <sfc_erase : 1e0111c >			  ## flash_fs_api.c:173:17
 1e01170:    45 fc 00 ff       	r5 = r4 + -256			  ## flash_fs_api.c:176:50
 1e01174:    50 08             	r0 = r5			  ## flash_fs_api.c:176:19
 1e01176:    f4 ef 01 80       	if (r4 > 255) goto 2 <flash_erase_by_blcok_n_sector+0x38 : 1e0117c >			  ## flash_fs_api.c:176:19
 1e0117a:    00 70             	r0 = 0			  ## flash_fs_api.c:176:19
 1e0117c:    f0 ef 06 90       	if (r0 <= 255) goto 12 <flash_erase_by_blcok_n_sector+0x48 : 1e0118c >
 1e01180:    17 80             	r7 += 1			  ## flash_fs_api.c:170:42
 1e01182:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:175:24
 1e01186:    50 08             	r0 = r5
 1e01188:    97 f2 ec 3f       	if (r7 < r9) goto -40 <flash_erase_by_blcok_n_sector+0x20 : 1e01164 >
 1e0118c:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:148:56
 1e01190:    05 08             	r5 = r0			  ## flash_fs_api.c:148:56
 1e01192:    18 80             	r8 += 1			  ## flash_fs_api.c:182:25
 1e01194:    08 e0 1f 00       	if (r8 == 0) goto 62 <flash_erase_by_blcok_n_sector+0x92 : 1e011d6 >
 1e01198:    23 ff 10 5a 1c 00 	if (r5 < 4096) goto 56 <flash_erase_by_blcok_n_sector+0x92 : 1e011d6 >
 1e0119e:    68 fb 10 89       	r8 = 16 - r8			  ## flash_fs_api.c:188:48
 1e011a2:    08 e0 18 00       	if (r8 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x92 : 1e011d6 >
 1e011a6:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:195:13
 1e011aa:    07 70             	r7 = 0			  ## flash_fs_api.c:195:13
 1e011ac:    46 08             	r6 = r4
 1e011ae:    05 08             	r5 = r0
 1e011b0:    ae 17             	call -164 <clr_wdt : 1e0110e >			  ## flash_fs_api.c:195:13
 1e011b2:    20 70             	r0 = 2			  ## flash_fs_api.c:197:17
 1e011b4:    61 08             	r1 = r6			  ## flash_fs_api.c:197:17
 1e011b6:    b2 17             	call -156 <sfc_erase : 1e0111c >			  ## flash_fs_api.c:197:17
 1e011b8:    23 ff 10 5a 0a 00 	if (r5 < 4096) goto 20 <flash_erase_by_blcok_n_sector+0x8E : 1e011d2 >			  ## flash_fs_api.c:197:17
 1e011be:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:199:24
 1e011c2:    10 70             	r0 = 1			  ## flash_fs_api.c:204:13
 1e011c4:    98 f3 f8 2d       	call 3169264 <os_time_dly : 106db8 >			  ## flash_fs_api.c:204:13
 1e011c8:    17 80             	r7 += 1			  ## flash_fs_api.c:194:44
 1e011ca:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:194:23
 1e011ce:    87 f2 ed 3f       	if (r7 < r8) goto -38 <flash_erase_by_blcok_n_sector+0x68 : 1e011ac >			  ## flash_fs_api.c:194:23
 1e011d2:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:148:56
 1e011d6:    19 70             	r9 = 1			  ## flash_fs_api.c:134:9
 1e011d8:    61 ff ff 59 01 00 	if ((r5 & 255) != 0) goto 2 <flash_erase_by_blcok_n_sector+0x9C : 1e011e0 >			  ## flash_fs_api.c:134:9
 1e011de:    09 70             	r9 = 0			  ## flash_fs_api.c:134:9
 1e011e0:    84 fd 40 85       	r8 = uextra(r5, p:8, l:4)			  ## flash_fs_api.c:133:30
 1e011e4:    2f d4             	r7 = r5 >> 16			  ## flash_fs_api.c:123:22
 1e011e6:    84 fd 60 a5       	r10 = uextra(r5, p:12, l:4)			  ## flash_fs_api.c:125:32
 1e011ea:    12 2e             	if (r7 == 0) goto 36 <flash_erase_by_blcok_n_sector+0xCC : 1e01210 >
 1e011ec:    06 70             	r6 = 0
 1e011ee:    45 08             	r5 = r4
 1e011f0:    8e 17             	call -228 <clr_wdt : 1e0110e >			  ## flash_fs_api.c:220:9
 1e011f2:    10 70             	r0 = 1			  ## flash_fs_api.c:222:13
 1e011f4:    51 08             	r1 = r5			  ## flash_fs_api.c:222:13
 1e011f6:    92 17             	call -220 <sfc_erase : 1e0111c >			  ## flash_fs_api.c:222:13
 1e011f8:    16 80             	r6 += 1			  ## flash_fs_api.c:225:15
 1e011fa:    76 f2 03 20       	if (r6 >= r7) goto 6 <flash_erase_by_blcok_n_sector+0xC0 : 1e01204 >
 1e011fe:    10 70             	r0 = 1			  ## flash_fs_api.c:226:13
 1e01200:    98 f3 da 2d       	call 3169204 <os_time_dly : 106db8 >			  ## flash_fs_api.c:226:13
 1e01204:    45 fb 01 5b       	r5 = r5 + 65536			  ## flash_fs_api.c:224:20
 1e01208:    67 f2 f2 1f       	if (r7 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xAC : 1e011f0 >
 1e0120c:    38 c4             	r0 = r7 << 16			  ## flash_fs_api.c:219:5
 1e0120e:    04 09             	r4 += r0			  ## flash_fs_api.c:219:5
 1e01210:    80 fb 80 79       	r7 = r9 + r8			  ## flash_fs_api.c:134:9
 1e01214:    0a e0 13 00       	if (r10 == 0) goto 38 <flash_erase_by_blcok_n_sector+0xFA : 1e0123e >
 1e01218:    06 70             	r6 = 0
 1e0121a:    45 08             	r5 = r4
 1e0121c:    78 17             	call -272 <clr_wdt : 1e0110e >			  ## flash_fs_api.c:235:9
 1e0121e:    20 70             	r0 = 2			  ## flash_fs_api.c:237:13
 1e01220:    51 08             	r1 = r5			  ## flash_fs_api.c:237:13
 1e01222:    7c 17             	call -264 <sfc_erase : 1e0111c >			  ## flash_fs_api.c:237:13
 1e01224:    16 80             	r6 += 1			  ## flash_fs_api.c:240:15
 1e01226:    a6 f2 03 20       	if (r6 >= r10) goto 6 <flash_erase_by_blcok_n_sector+0xEC : 1e01230 >
 1e0122a:    10 70             	r0 = 1			  ## flash_fs_api.c:241:13
 1e0122c:    98 f3 c4 2d       	call 3169160 <os_time_dly : 106db8 >			  ## flash_fs_api.c:241:13
 1e01230:    55 fc 00 10       	r5 = r5 + 4096			  ## flash_fs_api.c:239:20
 1e01234:    6a f2 f2 1f       	if (r10 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xD8 : 1e0121c >
 1e01238:    f0 fd 60 0a       	r0 = r10 << 12			  ## flash_fs_api.c:234:5
 1e0123c:    04 09             	r4 += r0			  ## flash_fs_api.c:234:5
 1e0123e:    08 2e             	if (r7 == 0) goto 16 <flash_erase_by_blcok_n_sector+0x10C : 1e01250 >
 1e01240:    66 17             	call -308 <clr_wdt : 1e0110e >			  ## flash_fs_api.c:250:9
 1e01242:    30 70             	r0 = 3			  ## flash_fs_api.c:252:13
 1e01244:    41 08             	r1 = r4			  ## flash_fs_api.c:252:13
 1e01246:    6a 17             	call -300 <sfc_erase : 1e0111c >			  ## flash_fs_api.c:252:13
 1e01248:    44 fc 00 01       	r4 = r4 + 256			  ## flash_fs_api.c:254:20
 1e0124c:    57 f3 f8 ff       	if (--r7 != 0) goto -16 <flash_erase_by_blcok_n_sector+0xFC : 1e01240 >
 1e01250:    5a 01             	{pc, r10-r4} = [sp++]			  ## flash_fs_api.c:257:1


flash_erase_by_first_unit:
 1e01252:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:664:0
 1e01254:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## flash_fs_api.c:660:12
 1e0125a:    01 f9 23 10       	r1 = b[r1 + 35] (u)			  ## flash_fs_api.c:660:12
 1e0125e:    12 70             	r2 = 1			  ## flash_fs_api.c:660:12
 1e01260:    01 e1 01 00       	if (r1 == 16) goto 2 <flash_erase_by_first_unit+0x14 : 1e01266 >			  ## flash_fs_api.c:660:12
 1e01264:    02 70             	r2 = 0			  ## flash_fs_api.c:660:12
 1e01266:    12 c3             	r2 = r2 << 12			  ## flash_fs_api.c:669:16
 1e01268:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:667:9
 1e0126c:    11 e0 01 00       	if (r1 == 1) goto 2 <flash_erase_by_first_unit+0x20 : 1e01272 >			  ## flash_fs_api.c:667:9
 1e01270:    24 08             	r4 = r2			  ## flash_fs_api.c:667:9
 1e01272:    41 08             	r1 = r4			  ## flash_fs_api.c:674:5
 1e01274:    67 17             	call -306 <flash_erase_by_blcok_n_sector : 1e01144 >			  ## flash_fs_api.c:674:5
 1e01276:    40 08             	r0 = r4			  ## flash_fs_api.c:676:5
 1e01278:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:676:5


norflash_write:
 1e0127a:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:673:0
 1e0127c:    c3 ff b0 25 00 00 	r3 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:673:0
 1e01282:    04 f6 80 30       	r4 = [r3 + 128]			  ## vm_sfc.c:676:37
 1e01286:    26 08             	r6 = r2			  ## vm_sfc.c:676:37
 1e01288:    19 08             	r9 = r1			  ## vm_sfc.c:676:37
 1e0128a:    07 08             	r7 = r0			  ## vm_sfc.c:676:37
 1e0128c:    61 09             	r1 += r6			  ## vm_sfc.c:676:17
 1e0128e:    00 70             	r0 = 0			  ## vm_sfc.c:676:17
 1e01290:    41 f2 29 80       	if (r1 > r4) goto 82 <norflash_write+0x6C : 1e012e6 >			  ## vm_sfc.c:676:17
 1e01294:    38 fc f0 00       	r8 = r3 + 240			  ## vm_sfc.c:687:5
 1e01298:    f1 07             	r1 = -1			  ## vm_sfc.c:687:5
 1e0129a:    80 08             	r0 = r8			  ## vm_sfc.c:687:5
 1e0129c:    98 f3 c2 2d       	call 3169156 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:687:5
 1e012a0:    80 05             	r0 = r6.b0 (u)			  ## vm_sfc.c:690:40
 1e012a2:    64 fb 01 0a       	r4 = 256 - r0			  ## vm_sfc.c:690:30
 1e012a6:    94 f2 01 30       	if (r4 < r9) goto 2 <norflash_write+0x32 : 1e012ac >
 1e012aa:    94 08             	r4 = r9			  ## vm_sfc.c:692:22
 1e012ac:    70 08             	r0 = r7			  ## vm_sfc.c:693:5
 1e012ae:    61 08             	r1 = r6			  ## vm_sfc.c:693:5
 1e012b0:    42 08             	r2 = r4			  ## vm_sfc.c:693:5
 1e012b2:    90 f3 30 14       	call 2107488 <_norflash_write : 3b16 >			  ## vm_sfc.c:693:5
 1e012b6:    90 fb 40 59       	r5 = r9 - r4			  ## vm_sfc.c:695:10
 1e012ba:    11 2a             	if (r5 == 0) goto 34 <norflash_write+0x64 : 1e012de >
 1e012bc:    47 09             	r7 += r4			  ## vm_sfc.c:696:10
 1e012be:    46 09             	r6 += r4			  ## vm_sfc.c:697:12
 1e012c0:    54 08             	r4 = r5			  ## vm_sfc.c:700:19
 1e012c2:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <norflash_write+0x52 : 1e012cc >
 1e012c8:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:700:19
 1e012cc:    70 08             	r0 = r7			  ## vm_sfc.c:701:9
 1e012ce:    61 08             	r1 = r6			  ## vm_sfc.c:701:9
 1e012d0:    42 08             	r2 = r4			  ## vm_sfc.c:701:9
 1e012d2:    90 f3 20 14       	call 2107456 <_norflash_write : 3b16 >			  ## vm_sfc.c:701:9
 1e012d6:    47 09             	r7 += r4			  ## vm_sfc.c:704:14
 1e012d8:    25 bb             	r5 = r5 - r4			  ## vm_sfc.c:702:14
 1e012da:    46 09             	r6 += r4			  ## vm_sfc.c:703:16
 1e012dc:    f1 3b             	if (r5 != 0) goto -30 <norflash_write+0x46 : 1e012c0 >
 1e012de:    80 08             	r0 = r8			  ## vm_sfc.c:706:5
 1e012e0:    98 f3 a2 2d       	call 3169092 <os_mutex_post : 106e28 >			  ## vm_sfc.c:706:5
 1e012e4:    90 08             	r0 = r9			  ## vm_sfc.c:706:5
 1e012e6:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:708:1


sfc_write:
 1e012e8:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1438:0
 1e012ea:    24 08             	r4 = r2			  ## vm.c:1438:0
 1e012ec:    12 08             	r2 = r1			  ## vm.c:1438:0
 1e012ee:    41 08             	r1 = r4			  ## vm.c:1448:5
 1e012f0:    c4 17             	call -120 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e012f2:    40 08             	r0 = r4			  ## vm.c:1451:1
 1e012f4:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1451:1


sfc_read:
 1e012f6:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1463:0
 1e012f8:    24 08             	r4 = r2			  ## vm.c:1463:0
 1e012fa:    12 08             	r2 = r1			  ## vm.c:1463:0
 1e012fc:    41 08             	r1 = r4			  ## vm.c:1466:5
 1e012fe:    1a 16             	call -972 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e01300:    40 08             	r0 = r4			  ## vm.c:1467:5
 1e01302:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1467:5


testbox_update_msg_handle:
 1e01304:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:153:0
 1e01306:    f0 0b             	sp += -32			  ## testbox_update.c:153:0
 1e01308:    c1 ff 0b 00 40 00 	r1 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## testbox_update.c:156:5
 1e0130e:    10 f2 08 00       	if (r0 == r1) goto 16 <testbox_update_msg_handle+0x1E : 1e01322 >			  ## testbox_update.c:156:5
 1e01312:    e1 8f             	r1 += -2
 1e01314:    10 f2 10 10       	if (r0 != r1) goto 32 <testbox_update_msg_handle+0x34 : 1e01338 >
 1e01318:    04 a1             	r4 = sp + 16
 1e0131a:    c1 ff 68 ea e0 01 	r1 = 31517288 <connection_param_table+0x18 : 1e0ea68 >			  ## testbox_update.c:162:32
 1e01320:    04 18             	goto 8 <testbox_update_msg_handle+0x26 : 1e0132a >			  ## testbox_update.c:162:32
 1e01322:    04 a0             	r4 = sp + 0
 1e01324:    c1 ff 78 ea e0 01 	r1 = 31517304 <connection_param_table+0x28 : 1e0ea78 >			  ## testbox_update.c:174:32
 1e0132a:    02 71             	r2 = 16
 1e0132c:    40 08             	r0 = r4
 1e0132e:    98 f3 d9 2d       	call 3169202 <memcpy : 106ee4 >
 1e01332:    40 08             	r0 = r4
 1e01334:    80 f3 90 b6       	call 93472 <app_active_update_task_init : 1e18058 >
 1e01338:    10 0a             	sp += 32
 1e0133a:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:189:1


ble_disconnect:
 1e0133c:    34 00             	[--sp] = rets			  ## le_trans_data.c:1173:0
 1e0133e:    c3 ff c0 23 00 00 	r3 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:1173:0
 1e01344:    70 57             	r0 = h[r3 + 46] (u)			  ## le_trans_data.c:1174:9
 1e01346:    0b 20             	if (r0 == 0) goto 22 <ble_disconnect+0x22 : 1e0135e >			  ## le_trans_data.c:1174:9
 1e01348:    d4 14             	call -1624 <get_ble_work_state : 1e00cf2 >			  ## le_trans_data.c:1175:36
 1e0134a:    40 e0 08 00       	if (r0 == 4) goto 16 <ble_disconnect+0x22 : 1e0135e >			  ## le_trans_data.c:1175:36
 1e0134e:    40 70             	r0 = 4			  ## le_trans_data.c:1177:13
 1e01350:    bf f3 d8 fb       	call -2128 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:1177:13
 1e01354:    72 57             	r2 = h[r3 + 46] (u)			  ## le_trans_data.c:1178:13
 1e01356:    50 70             	r0 = 5			  ## le_trans_data.c:1178:13
 1e01358:    11 70             	r1 = 1			  ## le_trans_data.c:1178:13
 1e0135a:    80 f3 03 2e       	call 23558 <ble_user_cmd_prepare : 1e06f64 >			  ## le_trans_data.c:1178:13
 1e0135e:    30 00             	pc = [sp++]


update_mode_api_v2:
 1e01360:    79 01             	[--sp] = {rets, r9-r4}			  ## update.c:567:0
 1e01362:    28 08             	r8 = r2			  ## update.c:567:0
 1e01364:    17 08             	r7 = r1			  ## update.c:567:0
 1e01366:    09 08             	r9 = r0			  ## update.c:567:0
 1e01368:    00 77             	r0 = 112			  ## update.c:570:22
 1e0136a:    80 f3 19 53       	call 42546 <malloc : 1e0b9a0 >			  ## update.c:570:22
 1e0136e:    06 08             	r6 = r0			  ## update.c:570:22
 1e01370:    36 2c             	if (r6 == 0) goto 108 <update_mode_api_v2+0x7E : 1e013de >			  ## update.c:572:9
 1e01372:    01 70             	r1 = 0			  ## update.c:542:5
 1e01374:    02 75             	r2 = 80			  ## update.c:542:5
 1e01376:    98 f3 bb 2d       	call 3169142 <memset : 106ef0 >			  ## update.c:542:5
 1e0137a:    19 f7 02 60       	h[r6 + 2] = r9			  ## update.c:543:18
 1e0137e:    00 fb 01 5a       	r0 = 23041 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEEB : 5a01 >			  ## update.c:544:20
 1e01382:    28 5c             	h[r6 + 4] = r0			  ## update.c:544:20
 1e01384:    00 fb 41 54       	r0 = 21569 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x92B : 5441 >			  ## update.c:545:14
 1e01388:    38 5c             	h[r6 + 6] = r0			  ## update.c:545:14
 1e0138a:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## update.c:545:14
 1e01390:    00 f6 50 51       	r0 = [r5 + 336]			  ## update.c:546:31
 1e01394:    28 4d             	[r6 + 72] = r0			  ## update.c:546:17
 1e01396:    08 20             	if (r0 == 0) goto 16 <update_mode_api_v2+0x48 : 1e013a8 >			  ## update.c:546:17
 1e01398:    24 9c             	r4 = r6 + 2			  ## update.c:543:8
 1e0139a:    02 2e             	if (r7 == 0) goto 4 <update_mode_api_v2+0x40 : 1e013a0 >
 1e0139c:    60 08             	r0 = r6			  ## update.c:554:9
 1e0139e:    87 00             	call r7			  ## update.c:554:9
 1e013a0:    e1 74             	r1 = 78			  ## update.c:557:19
 1e013a2:    40 08             	r0 = r4			  ## update.c:557:19
 1e013a4:    ab 15             	call -1194 <CRC16 : 1e00efc >			  ## update.c:557:19
 1e013a6:    08 5c             	h[r6 + 0] = r0			  ## update.c:557:17
 1e013a8:    03 f6 58 51       	r3 = [r5 + 344]			  ## update.c:575:25
 1e013ac:    05 26             	if (r3 == 0) goto 10 <update_mode_api_v2+0x58 : 1e013b8 >			  ## update.c:575:25
 1e013ae:    00 f6 54 51       	r0 = [r5 + 340]			  ## update.c:576:60
 1e013b2:    02 77             	r2 = 112			  ## update.c:576:13
 1e013b4:    61 08             	r1 = r6			  ## update.c:576:13
 1e013b6:    83 00             	call r3			  ## update.c:576:13
 1e013b8:    98 f3 f0 2c       	call 3168736 <local_irq_disable : 106d9c >			  ## update.c:359:5
 1e013bc:    80 f3 7e 53       	call 42748 <hwi_all_close : 1e0babc >			  ## update.c:360:5
 1e013c0:    c0 ff 68 fb 00 00 	r0 = 64360 <report_heap_end+0x8 : fb68 >			  ## update.c:563:5
 1e013c6:    02 77             	r2 = 112			  ## update.c:563:5
 1e013c8:    61 08             	r1 = r6			  ## update.c:563:5
 1e013ca:    98 f3 8b 2d       	call 3169046 <memcpy : 106ee4 >			  ## update.c:563:5
 1e013ce:    08 e0 02 00       	if (r8 == 0) goto 4 <update_mode_api_v2+0x76 : 1e013d6 >
 1e013d2:    90 08             	r0 = r9			  ## update.c:587:13
 1e013d4:    88 00             	call r8			  ## update.c:587:13
 1e013d6:    60 08             	r0 = r6			  ## update.c:590:9
 1e013d8:    19 01             	{rets, r9-r4} = [sp++]			  ## update.c:590:9
 1e013da:    c0 f3 e6 52       	goto 42444 <free : 1e0b9aa >			  ## update.c:590:9
 1e013de:    19 01             	{rets, r9-r4} = [sp++]			  ## cpu.h:148:5
 1e013e0:    d0 f3 19 10       	goto 2105394 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


testbox_ble_update_state_cbk:
 1e013e4:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:111:0
 1e013e6:    31 e0 1f 10       	if (r1 != 3) goto 62 <testbox_ble_update_state_cbk+0x44 : 1e01428 >			  ## testbox_update.c:111:0
 1e013ea:    00 44             	r0 = [r2 + 0]			  ## testbox_update.c:111:0
 1e013ec:    1d 30             	if (r0 != 0) goto 58 <testbox_ble_update_state_cbk+0x44 : 1e01428 >			  ## testbox_update.c:111:0
 1e013ee:    40 64             	r0 = b[r2 + 4] (u)			  ## testbox_update.c:125:57
 1e013f0:    1b 30             	if (r0 != 0) goto 54 <testbox_ble_update_state_cbk+0x44 : 1e01428 >			  ## testbox_update.c:125:57
 1e013f2:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e013f8:    11 70             	r1 = 1
 1e013fa:    11 f9 54 00       	b[r0 + 84] = r1
 1e013fe:    9e 17             	call -196 <ble_disconnect : 1e0133c >			  ## le_trans_data.c:1403:5
 1e01400:    f4 7f             	r4 = 255
 1e01402:    80 f3 f2 2e       	call 24036 <check_le_conn_disconnet_flag : 1e071ea >			  ## testbox_update.c:133:25
 1e01406:    07 30             	if (r0 != 0) goto 14 <testbox_ble_update_state_cbk+0x32 : 1e01416 >			  ## testbox_update.c:133:25
 1e01408:    20 70             	r0 = 2			  ## testbox_update.c:135:21
 1e0140a:    98 f3 d5 2c       	call 3168682 <os_time_dly : 106db8 >			  ## testbox_update.c:135:21
 1e0140e:    14 80             	r4 += 1			  ## testbox_update.c:136:31
 1e01410:    00 05             	r0 = r4.b0 (u)			  ## testbox_update.c:136:31
 1e01412:    60 e0 f6 3f       	if (r0 < 6) goto -20 <testbox_ble_update_state_cbk+0x1E : 1e01402 >			  ## testbox_update.c:136:31
 1e01416:    c1 ff 2a 14 e0 01 	r1 = 31462442 <testbox_ble_update_private_param_fill : 1e0142a >			  ## testbox_update.c:142:17
 1e0141c:    c2 ff 42 15 e0 01 	r2 = 31462722 <testbox_ble_update_before_jump_handle : 1e01542 >			  ## testbox_update.c:142:17
 1e01422:    00 fb 09 5a       	r0 = 23049 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEF3 : 5a09 >			  ## testbox_update.c:142:17
 1e01426:    9c 17             	call -200 <update_mode_api_v2 : 1e01360 >			  ## testbox_update.c:142:17
 1e01428:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:150:1


testbox_ble_update_private_param_fill:
 1e0142a:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:88:0
 1e0142c:    fc 0b             	sp += -8			  ## testbox_update.c:88:0
 1e0142e:    04 08             	r4 = r0			  ## testbox_update.c:88:0
 1e01430:    25 a0             	r5 = sp + 2			  ## testbox_update.c:88:0
 1e01432:    50 08             	r0 = r5			  ## testbox_update.c:92:9
 1e01434:    80 f3 80 a6       	call 85248 <le_controller_get_mac : 1e16138 >			  ## testbox_update.c:92:9
 1e01438:    40 fc 28 00       	r0 = r4 + 40			  ## testbox_update.c:93:16
 1e0143c:    62 70             	r2 = 6			  ## testbox_update.c:93:9
 1e0143e:    51 08             	r1 = r5			  ## testbox_update.c:93:9
 1e01440:    98 f3 50 2d       	call 3168928 <memcpy : 106ee4 >			  ## testbox_update.c:93:9
 1e01444:    04 0a             	sp += 8			  ## testbox_update.c:93:9
 1e01446:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:97:1


lbuf_free_btctrler:
 1e01448:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:273:0
 1e0144a:    04 08             	r4 = r0			  ## lbuf.c:273:0
 1e0144c:    39 28             	if (r4 == 0) goto 114 <lbuf_free_btctrler+0x78 : 1e014c0 >			  ## lbuf.c:273:0
 1e0144e:    98 f3 a5 2c       	call 3168586 <local_irq_disable : 106d9c >			  ## lbuf.c:287:5
 1e01452:    41 fc f0 ff       	r1 = r4 + -16			  ## lbuf.c:287:5
 1e01456:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e01458:    12 42             	r2 = [r1 + 4]			  ## list.h:165:23
 1e0145a:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:299:19
 1e0145c:    1a 40             	[r0 + 4] = r2			  ## list.h:159:16
 1e0145e:    08 44             	[r2 + 0] = r0			  ## list.h:160:16
 1e01460:    60 52             	r0 = h[r1 + 12] (u)			  ## lbuf.c:303:23
 1e01462:    48 52             	h[r1 + 8] = r0			  ## lbuf.c:303:14
 1e01464:    22 46             	r2 = [r3 + 8]			  ## lbuf.c:303:14
 1e01466:    80 96             	r0 = r3 + 8			  ## lbuf.c:307:5
 1e01468:    02 f2 09 00       	if (r2 == r0) goto 18 <lbuf_free_btctrler+0x36 : 1e0147e >
 1e0146c:    12 f2 0a 80       	if (r2 > r1) goto 20 <lbuf_free_btctrler+0x3C : 1e01484 >			  ## lbuf.c:308:24
 1e01470:    44 54             	r4 = h[r2 + 8] (u)			  ## lbuf.c:308:38
 1e01472:    24 09             	r4 += r2			  ## lbuf.c:308:36
 1e01474:    14 f2 22 80       	if (r4 > r1) goto 68 <lbuf_free_btctrler+0x74 : 1e014bc >			  ## lbuf.c:308:36
 1e01478:    02 44             	r2 = [r2 + 0]
 1e0147a:    02 f2 f7 1f       	if (r2 != r0) goto -18 <lbuf_free_btctrler+0x24 : 1e0146c >
 1e0147e:    c3 80             	r3 += 12			  ## list.h:154:28
 1e01480:    02 08             	r2 = r0
 1e01482:    01 18             	goto 2 <lbuf_free_btctrler+0x3E : 1e01486 >
 1e01484:    43 94             	r3 = r2 + 4			  ## lbuf.c:313:46
 1e01486:    04 46             	r4 = [r3 + 0]
 1e01488:    09 46             	[r3 + 0] = r1			  ## list.h:137:16
 1e0148a:    0a 42             	[r1 + 0] = r2			  ## list.h:138:16
 1e0148c:    1c 42             	[r1 + 4] = r4			  ## list.h:139:16
 1e0148e:    09 48             	[r4 + 0] = r1			  ## list.h:140:16
 1e01490:    01 40             	r1 = [r0 + 0]			  ## list.h:140:16
 1e01492:    01 f2 13 00       	if (r1 == r0) goto 38 <lbuf_free_btctrler+0x74 : 1e014bc >
 1e01496:    02 70             	r2 = 0
 1e01498:    13 08             	r3 = r1
 1e0149a:    0c 24             	if (r2 == 0) goto 24 <lbuf_free_btctrler+0x6C : 1e014b4 >
 1e0149c:    44 54             	r4 = h[r2 + 8] (u)			  ## lbuf.c:328:31
 1e0149e:    85 b8             	r5 = r4 + r2			  ## lbuf.c:328:23
 1e014a0:    15 f2 08 10       	if (r5 != r1) goto 16 <lbuf_free_btctrler+0x6C : 1e014b4 >			  ## lbuf.c:328:23
 1e014a4:    43 52             	r3 = h[r1 + 8] (u)			  ## lbuf.c:330:29
 1e014a6:    43 09             	r3 += r4			  ## lbuf.c:330:23
 1e014a8:    4b 54             	h[r2 + 8] = r3			  ## lbuf.c:330:23
 1e014aa:    03 42             	r3 = [r1 + 0]			  ## list.h:165:36
 1e014ac:    14 42             	r4 = [r1 + 4]			  ## list.h:165:23
 1e014ae:    1c 46             	[r3 + 4] = r4			  ## list.h:159:16
 1e014b0:    0b 48             	[r4 + 0] = r3			  ## list.h:160:16
 1e014b2:    23 08             	r3 = r2			  ## list.h:160:16
 1e014b4:    01 42             	r1 = [r1 + 0]
 1e014b6:    32 08             	r2 = r3
 1e014b8:    01 f2 ee 1f       	if (r1 != r0) goto -36 <lbuf_free_btctrler+0x50 : 1e01498 >
 1e014bc:    98 f3 6c 2c       	call 3168472 <local_irq_enable : 106d98 >			  ## lbuf.c:339:5
 1e014c0:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:340:1


hw_dma_free:
 1e014c2:    c2 1f             	goto -124 <lbuf_free_btctrler : 1e01448 >			  ## hw_dma.c:62:0


hw_dma_clear:
 1e014c4:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:98:0
 1e014c6:    04 08             	r4 = r0			  ## hw_dma.c:98:0
 1e014c8:    00 48             	r0 = [r4 + 0]			  ## hw_dma.c:101:5
 1e014ca:    40 f2 0a 00       	if (r0 == r4) goto 20 <hw_dma_clear+0x1E : 1e014e2 >
 1e014ce:    11 40             	r1 = [r0 + 4]			  ## list.h:171:23
 1e014d0:    05 40             	r5 = [r0 + 0]
 1e014d2:    19 4a             	[r5 + 4] = r1			  ## list.h:159:16
 1e014d4:    0d 42             	[r1 + 0] = r5			  ## list.h:160:16
 1e014d6:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e014d8:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e014da:    b6 17             	call -148 <lbuf_free_btctrler : 1e01448 >			  ## hw_dma.c:103:9
 1e014dc:    50 08             	r0 = r5
 1e014de:    45 f2 f6 1f       	if (r5 != r4) goto -20 <hw_dma_clear+0xA : 1e014ce >
 1e014e2:    55 01             	{pc, r5, r4} = [sp++]			  ## hw_dma.c:105:1


btctler_nv_memory_free:
 1e014e4:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:244:0
 1e014e6:    02 20             	if (r0 == 0) goto 4 <btctler_nv_memory_free+0x8 : 1e014ec >			  ## btcontroller_heap.c:244:0
 1e014e8:    80 f3 5f 52       	call 42174 <free : 1e0b9aa >			  ## btcontroller_heap.c:249:9
 1e014ec:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:251:1


sys_timer_remove:
 1e014ee:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:40:0
 1e014f0:    c0 f3 f2 4e       	goto 40420 <sys_timeout_del : 1e0b2d8 >			  ## sys_timer.c:43:5


__bt_free:
 1e014f4:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:269:0
 1e014f6:    02 20             	if (r0 == 0) goto 4 <__bt_free+0x8 : 1e014fc >			  ## btcontroller_heap.c:269:0
 1e014f8:    80 f3 57 52       	call 42158 <free : 1e0b9aa >			  ## btcontroller_heap.c:249:9
 1e014fc:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:271:1


thread_delete:
 1e014fe:    34 00             	[--sp] = rets			  ## thread.c:161:0
 1e01500:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e01502:    13 40             	r3 = [r0 + 4]			  ## list.h:171:23
 1e01504:    22 40             	r2 = [r0 + 8]			  ## thread.c:163:35
 1e01506:    1b 42             	[r1 + 4] = r3			  ## list.h:159:16
 1e01508:    09 46             	[r3 + 0] = r1			  ## list.h:160:16
 1e0150a:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e0150c:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e0150e:    03 44             	r3 = [r2 + 0]			  ## list.h:124:18
 1e01510:    01 70             	r1 = 0
 1e01512:    23 f2 04 10       	if (r3 != r2) goto 8 <thread_delete+0x20 : 1e0151e >
 1e01516:    40 61             	r0 = b[r0 + 20] (u)			  ## thread.c:168:15
 1e01518:    31 44             	r1 = [r2 + 12]			  ## thread.c:168:26
 1e0151a:    81 00             	call r1			  ## thread.c:168:15
 1e0151c:    01 08             	r1 = r0			  ## thread.c:168:15
 1e0151e:    10 08             	r0 = r1			  ## thread.c:171:5
 1e01520:    30 00             	pc = [sp++]			  ## thread.c:171:5


lbuf_clear_btctrler:
 1e01522:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:182:0
 1e01524:    04 08             	r4 = r0			  ## lbuf.c:182:0
 1e01526:    98 f3 39 2c       	call 3168370 <local_irq_disable : 106d9c >			  ## lbuf.c:186:5
 1e0152a:    00 48             	r0 = [r4 + 0]			  ## lbuf.c:188:5
 1e0152c:    40 f2 06 00       	if (r0 == r4) goto 12 <lbuf_clear_btctrler+0x1A : 1e0153c >
 1e01530:    45 f6 10 00       	r5 = [r0 ++= 16]
 1e01534:    89 17             	call -238 <lbuf_free_btctrler : 1e01448 >			  ## lbuf.c:189:9
 1e01536:    50 08             	r0 = r5			  ## lbuf.c:189:9
 1e01538:    45 f2 fa 1f       	if (r5 != r4) goto -12 <lbuf_clear_btctrler+0xE : 1e01530 >
 1e0153c:    15 01             	{rets, r5, r4} = [sp++]			  ## lbuf.c:192:5
 1e0153e:    d8 f3 2b 2c       	goto 3168342 <local_irq_enable : 106d98 >			  ## lbuf.c:192:5


testbox_ble_update_before_jump_handle:
 1e01542:    34 00             	[--sp] = rets			  ## testbox_update.c:100:0
 1e01544:    80 f3 fe a5       	call 84988 <ll_hci_destory : 1e16144 >			  ## testbox_update.c:102:9
 1e01548:    88 01             	{rets} = [sp++]			  ## cpu.h:148:5
 1e0154a:    d0 f3 64 0f       	goto 2105032 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


testbox_bt_classic_update_state_cbk:
 1e0154e:    34 00             	[--sp] = rets			  ## testbox_update.c:55:0
 1e01550:    31 e0 0d 10       	if (r1 != 3) goto 26 <testbox_bt_classic_update_state_cbk+0x20 : 1e0156e >			  ## testbox_update.c:55:0
 1e01554:    00 44             	r0 = [r2 + 0]			  ## testbox_update.c:55:0
 1e01556:    0b 30             	if (r0 != 0) goto 22 <testbox_bt_classic_update_state_cbk+0x20 : 1e0156e >			  ## testbox_update.c:55:0
 1e01558:    40 64             	r0 = b[r2 + 4] (u)			  ## testbox_update.c:70:57
 1e0155a:    09 30             	if (r0 != 0) goto 18 <testbox_bt_classic_update_state_cbk+0x20 : 1e0156e >			  ## testbox_update.c:70:57
 1e0155c:    c1 ff 70 15 e0 01 	r1 = 31462768 <testbox_bt_classic_update_private_param_fill : 1e01570 >			  ## testbox_update.c:72:17
 1e01562:    c2 ff d2 15 e0 01 	r2 = 31462866 <testbox_bt_classic_update_before_jump_handle : 1e015d2 >			  ## testbox_update.c:72:17
 1e01568:    00 fb 05 5a       	r0 = 23045 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEEF : 5a05 >			  ## testbox_update.c:72:17
 1e0156c:    f9 16             	call -526 <update_mode_api_v2 : 1e01360 >			  ## testbox_update.c:72:17
 1e0156e:    30 00             	pc = [sp++]			  ## testbox_update.c:79:1


testbox_bt_classic_update_private_param_fill:
 1e01570:    20 00             	rts			  ## testbox_update.c:30:0


ram_protect_close:
 1e01572:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1568:0
 1e01574:    02 70             	r2 = 0			  ## debug.c:1568:0
 1e01576:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## debug.c:1568:0
 1e0157c:    7a 40             	[r0 + 28] = r2			  ## debug.c:586:19
 1e0157e:    c1 ff ff ff ff 01 	r1 = 33554431 <bank_code_load_addr+0x1E55DB : 1ffffff >			  ## debug.c:587:19
 1e01584:    69 40             	[r0 + 24] = r1			  ## debug.c:587:19
 1e01586:    9a 40             	[r0 + 36] = r2			  ## debug.c:592:19
 1e01588:    89 40             	[r0 + 32] = r1			  ## debug.c:593:19
 1e0158a:    c1 ff fc 03 1b 00 	r1 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:593:19
 1e01590:    02 18             	goto 4 <ram_protect_close+0x24 : 1e01596 >			  ## debug.c:593:19
 1e01592:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:573:9
 1e01596:    03 42             	r3 = [r1 + 0]
 1e01598:    00 f3 fb 3f       	if ((r3 & 1) == 0) goto -10 <ram_protect_close+0x20 : 1e01592 >
 1e0159c:    c3 ff c0 c0 06 00 	r3 = 442560 <text_size+0x53574 : 6c0c0 >
 1e015a2:    04 97             	r4 = r3 + 16
 1e015a4:    05 99             	r5 = r4 + 16
 1e015a6:    06 9b             	r6 = r5 + 16
 1e015a8:    07 70             	r7 = 0
 1e015aa:    b2 f6 00 73       	[r7+r3<<2] = r2			  ## debug.c:1551:26
 1e015ae:    b2 f6 00 74       	[r7+r4<<2] = r2			  ## debug.c:1552:26
 1e015b2:    b2 f6 00 75       	[r7+r5<<2] = r2			  ## debug.c:1554:26
 1e015b6:    b2 f6 00 76       	[r7+r6<<2] = r2			  ## debug.c:1555:26
 1e015ba:    47 80             	r7 += 4			  ## debug.c:1550:23
 1e015bc:    c7 e0 f5 1f       	if (r7 != 12) goto -22 <ram_protect_close+0x38 : 1e015aa >			  ## debug.c:1550:23
 1e015c0:    02 18             	goto 4 <ram_protect_close+0x54 : 1e015c6 >			  ## debug.c:1550:23
 1e015c2:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:580:9
 1e015c6:    02 42             	r2 = [r1 + 0]
 1e015c8:    20 f3 fb 2f       	if ((r2 & 1) != 0) goto -10 <ram_protect_close+0x50 : 1e015c2 >
 1e015cc:    c0 f4 03 09       	[r0 + 0] = 3			  ## debug.c:1582:14
 1e015d0:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1584:1


testbox_bt_classic_update_before_jump_handle:
 1e015d2:    34 00             	[--sp] = rets			  ## testbox_update.c:37:0
 1e015d4:    80 f3 b6 a5       	call 84844 <ll_hci_destory : 1e16144 >			  ## testbox_update.c:41:9
 1e015d8:    80 f3 a2 a8       	call 86340 <__bt_updata_save_connection_info : 1e16720 >			  ## testbox_update.c:43:13
 1e015dc:    03 30             	if (r0 != 0) goto 6 <testbox_bt_classic_update_before_jump_handle+0x12 : 1e015e4 >			  ## testbox_update.c:43:13
 1e015de:    c9 17             	call -110 <ram_protect_close : 1e01572 >			  ## testbox_update.c:48:9
 1e015e0:    80 f3 5a ae       	call 89268 <update_code_start : 1e17298 >			  ## testbox_update.c:50:9
 1e015e4:    30 00             	pc = [sp++]			  ## testbox_update.c:52:1


ota_idle_query:
 1e015e6:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update.c:623:0
 1e015ec:    41 60             	r1 = b[r0 + 4] (u)			  ## update.c:624:13
 1e015ee:    10 70             	r0 = 1			  ## update.c:624:12
 1e015f0:    01 22             	if (r1 == 0) goto 2 <ota_idle_query+0xE : 1e015f4 >			  ## update.c:624:12
 1e015f2:    00 70             	r0 = 0			  ## update.c:624:12
 1e015f4:    20 00             	rts			  ## update.c:624:5


app_update_init:
 1e015f6:    34 00             	[--sp] = rets			  ## update.c:707:0
 1e015f8:    80 f3 53 b5       	call 92838 <update_module_init : 1e180a2 >			  ## update.c:708:5
 1e015fc:    88 01             	{rets} = [sp++]			  ## testbox_update.c:195:9
 1e015fe:    c0 f3 3f 81       	goto 66174 <btctrler_testbox_update_msg_handle_register : 1e11880 >			  ## testbox_update.c:195:9


update_common_state_cbk:
 1e01602:    78 01             	[--sp] = {rets, r8-r4}			  ## update.c:676:0
 1e01604:    07 08             	r7 = r0			  ## update.c:676:0
 1e01606:    06 4e             	r6 = [r7 + 0]			  ## update.c:677:22
 1e01608:    25 08             	r5 = r2
 1e0160a:    14 08             	r4 = r1
 1e0160c:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >
 1e01612:    24 e0 0c 00       	if (r4 == 2) goto 24 <update_common_state_cbk+0x2C : 1e0162e >			  ## update.c:681:5
 1e01616:    14 e0 10 10       	if (r4 != 1) goto 32 <update_common_state_cbk+0x38 : 1e0163a >
 1e0161a:    80 fc 50 01       	r0 = r8 + 336			  ## update.c:683:9
 1e0161e:    01 70             	r1 = 0			  ## update.c:683:9
 1e01620:    c2 70             	r2 = 12			  ## update.c:683:9
 1e01622:    98 f3 65 2c       	call 3168458 <memset : 106ef0 >			  ## update.c:683:9
 1e01626:    10 70             	r0 = 1			  ## update.c:644:16
 1e01628:    10 f9 04 80       	b[r8 + 4] = r0			  ## update.c:644:16
 1e0162c:    06 18             	goto 12 <update_common_state_cbk+0x38 : 1e0163a >			  ## update.c:644:16
 1e0162e:    80 fc 50 01       	r0 = r8 + 336			  ## update.c:689:9
 1e01632:    c2 70             	r2 = 12			  ## update.c:689:9
 1e01634:    51 08             	r1 = r5			  ## update.c:689:9
 1e01636:    98 f3 55 2c       	call 3168426 <memcpy : 106ee4 >			  ## update.c:689:9
 1e0163a:    13 4e             	r3 = [r7 + 4]			  ## update.c:693:15
 1e0163c:    04 26             	if (r3 == 0) goto 8 <update_common_state_cbk+0x44 : 1e01646 >			  ## update.c:693:15
 1e0163e:    60 08             	r0 = r6			  ## update.c:694:9
 1e01640:    41 08             	r1 = r4			  ## update.c:694:9
 1e01642:    52 08             	r2 = r5			  ## update.c:694:9
 1e01644:    83 00             	call r3			  ## update.c:694:9
 1e01646:    34 e0 03 10       	if (r4 != 3) goto 6 <update_common_state_cbk+0x4E : 1e01650 >
 1e0164a:    00 70             	r0 = 0			  ## update.c:672:16
 1e0164c:    10 f9 04 80       	b[r8 + 4] = r0			  ## update.c:672:16
 1e01650:    58 01             	{pc, r8-r4} = [sp++]			  ## update.c:702:1


usb_set_pull_down:
 1e01652:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:160:0
 1e01658:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_down+0x1A : 1e0166c >			  ## gpio.c:161:9
 1e0165c:    40 80             	r0 += 4
 1e0165e:    13 70             	r3 = 1
 1e01660:    f8 fd 00 03       	r0 = r3 << r0
 1e01664:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_down+0x2A : 1e0167c >			  ## gpio.c:163:13
 1e01666:    91 44             	r1 = [r2 + 36]			  ## gpio.c:164:30
 1e01668:    50 b2             	r0 |= r1			  ## gpio.c:164:30
 1e0166a:    0b 18             	goto 22 <usb_set_pull_down+0x30 : 1e01682 >			  ## gpio.c:164:30
 1e0166c:    60 80             	r0 += 6
 1e0166e:    13 70             	r3 = 1
 1e01670:    f8 fd 00 03       	r0 = r3 << r0
 1e01674:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_down+0x34 : 1e01686 >			  ## gpio.c:170:13
 1e01676:    01 44             	r1 = [r2 + 0]			  ## gpio.c:171:29
 1e01678:    50 b2             	r0 |= r1			  ## gpio.c:171:29
 1e0167a:    08 18             	goto 16 <usb_set_pull_down+0x3A : 1e0168c >			  ## gpio.c:171:29
 1e0167c:    91 44             	r1 = [r2 + 36]			  ## gpio.c:166:30
 1e0167e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:166:30
 1e01682:    98 44             	[r2 + 36] = r0
 1e01684:    20 00             	rts
 1e01686:    01 44             	r1 = [r2 + 0]			  ## gpio.c:173:29
 1e01688:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:173:29
 1e0168c:    08 44             	[r2 + 0] = r0
 1e0168e:    20 00             	rts


gpio_set_pull_down:
 1e01690:    10 e3 03 30       	if (r0 < 49) goto 6 <gpio_set_pull_down+0xA : 1e0169a >			  ## gpio.c:653:0
 1e01694:    f0 8c             	r0 += -49			  ## gpio.c:659:36
 1e01696:    01 70             	r1 = 0			  ## gpio.c:659:13
 1e01698:    dc 1f             	goto -72 <usb_set_pull_down : 1e01652 >			  ## gpio.c:659:13
 1e0169a:    81 d0             	r1 = r0 >> 2			  ## gpio.c:49:31
 1e0169c:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e016a2:    51 b5             	r1 &= r2			  ## gpio.c:49:46
 1e016a4:    c2 ff 3c f2 e0 01 	r2 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e016aa:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:49:31
 1e016ae:    09 22             	if (r1 == 0) goto 18 <gpio_set_pull_down+0x32 : 1e016c2 >
 1e016b0:    52 42             	r2 = [r1 + 20]			  ## gpio.c:676:15
 1e016b2:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:671:12
 1e016b6:    13 70             	r3 = 1			  ## gpio.c:671:12
 1e016b8:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:671:12
 1e016bc:    e3 fd 00 02       	r0 = r2 & ~r0			  ## gpio.c:676:15
 1e016c0:    58 42             	[r1 + 20] = r0			  ## gpio.c:676:15
 1e016c2:    20 00             	rts


gpio_set_pull_up:
 1e016c4:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE171_0_0_+0xA : 1e016e6 >			  ## gpio.c:567:0
 1e016c8:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:573:13
 1e016cc:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE171_0_0_+0x3A : 1e01716 >			  ## gpio.c:573:13
 1e016d0:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e016d6:    a2 00             	tbb [r2]


.GJTIS171_0_0_:
 1e016d8:    02     < 2 : 0x2 >
 1e016d9:    20     < 32 : 0x20 >
 1e016da:    25     < 37 : 0x25 >
 1e016db:    2a     < 42 : 0x2A >
 1e016dc:    02 40             	r2 = [r0 + 0]			  ## gpio.c:573:13
 1e016de:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:573:13
 1e016e2:    0a 40             	[r0 + 0] = r2			  ## gpio.c:573:13
 1e016e4:    20 00             	rts			  ## gpio.c:573:13
 1e016e6:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e016e8:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e016ee:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e016f0:    c3 ff 3c f2 e0 01 	r3 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e016f6:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e016fa:    0d 24             	if (r2 == 0) goto 26 <.GJTIE171_0_0_+0x3A : 1e01716 >
 1e016fc:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:585:12
 1e01700:    13 70             	r3 = 1			  ## gpio.c:585:12
 1e01702:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:585:12
 1e01706:    03 22             	if (r1 == 0) goto 6 <.GJTIE171_0_0_+0x32 : 1e0170e >			  ## gpio.c:587:9
 1e01708:    41 44             	r1 = [r2 + 16]			  ## gpio.c:588:15
 1e0170a:    50 b2             	r0 |= r1			  ## gpio.c:588:15
 1e0170c:    03 18             	goto 6 <.GJTIE171_0_0_+0x38 : 1e01714 >
 1e0170e:    41 44             	r1 = [r2 + 16]			  ## gpio.c:590:15
 1e01710:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:590:15
 1e01714:    48 44             	[r2 + 16] = r0
 1e01716:    20 00             	rts
 1e01718:    02 40             	r2 = [r0 + 0]			  ## gpio.c:573:13
 1e0171a:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:573:13
 1e0171e:    0a 40             	[r0 + 0] = r2			  ## gpio.c:573:13
 1e01720:    20 00             	rts			  ## gpio.c:573:13
 1e01722:    92 40             	r2 = [r0 + 36]			  ## gpio.c:573:13
 1e01724:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:573:13
 1e01728:    9a 40             	[r0 + 36] = r2			  ## gpio.c:573:13
 1e0172a:    20 00             	rts			  ## gpio.c:573:13
 1e0172c:    92 40             	r2 = [r0 + 36]			  ## gpio.c:573:13
 1e0172e:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:573:13
 1e01732:    9a 40             	[r0 + 36] = r2			  ## gpio.c:573:13
 1e01734:    20 00             	rts			  ## gpio.c:573:13


usb_set_direction:
 1e01736:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:98:0
 1e01738:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:98:0
 1e0173e:    20 e0 0e 30       	if (r0 < 2) goto 28 <usb_set_direction+0x28 : 1e0175e >			  ## gpio.c:99:9
 1e01742:    03 f6 00 26       	r3 = [r2 + 1536]			  ## gpio.c:245:23
 1e01746:    73 b0             	r3 &= 4294967294			  ## gpio.c:245:23
 1e01748:    13 f6 00 26       	[r2 + 1536] = r3			  ## gpio.c:245:23
 1e0174c:    09 f4 50 2a       	[r2 + 36] |= 20480			  ## gpio.c:245:23
 1e01750:    13 70             	r3 = 1			  ## gpio.c:245:23
 1e01752:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:245:23
 1e01756:    12 22             	if (r1 == 0) goto 36 <usb_set_direction+0x46 : 1e0177c >			  ## gpio.c:102:13
 1e01758:    91 44             	r1 = [r2 + 36]			  ## gpio.c:103:30
 1e0175a:    50 b2             	r0 |= r1			  ## gpio.c:103:30
 1e0175c:    12 18             	goto 36 <usb_set_direction+0x4C : 1e01782 >			  ## gpio.c:103:30
 1e0175e:    23 fc 00 c4       	r3 = r2 + -15360
 1e01762:    04 46             	r4 = [r3 + 0]			  ## gpio.c:235:22
 1e01764:    74 b0             	r4 &= 4294967294			  ## gpio.c:235:22
 1e01766:    0c 46             	[r3 + 0] = r4			  ## gpio.c:235:22
 1e01768:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## gpio.c:235:22
 1e0176c:    20 80             	r0 += 2			  ## gpio.c:235:22
 1e0176e:    13 70             	r3 = 1			  ## gpio.c:235:22
 1e01770:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:235:22
 1e01774:    08 22             	if (r1 == 0) goto 16 <usb_set_direction+0x50 : 1e01786 >			  ## gpio.c:110:13
 1e01776:    01 44             	r1 = [r2 + 0]			  ## gpio.c:111:29
 1e01778:    50 b2             	r0 |= r1			  ## gpio.c:111:29
 1e0177a:    08 18             	goto 16 <usb_set_direction+0x56 : 1e0178c >			  ## gpio.c:111:29
 1e0177c:    91 44             	r1 = [r2 + 36]			  ## gpio.c:105:30
 1e0177e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:105:30
 1e01782:    98 44             	[r2 + 36] = r0
 1e01784:    54 01             	{pc, r4} = [sp++]
 1e01786:    01 44             	r1 = [r2 + 0]			  ## gpio.c:113:29
 1e01788:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:113:29
 1e0178c:    08 44             	[r2 + 0] = r0
 1e0178e:    54 01             	{pc, r4} = [sp++]


gpio_set_direction:
 1e01790:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_direction+0x8 : 1e01798 >			  ## gpio.c:255:0
 1e01794:    f0 8c             	r0 += -49			  ## gpio.c:261:36
 1e01796:    cf 1f             	goto -98 <usb_set_direction : 1e01736 >			  ## gpio.c:261:13
 1e01798:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e0179a:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e017a0:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e017a2:    c3 ff 3c f2 e0 01 	r3 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e017a8:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e017ac:    0d 24             	if (r2 == 0) goto 26 <gpio_set_direction+0x38 : 1e017c8 >
 1e017ae:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:273:12
 1e017b2:    13 70             	r3 = 1			  ## gpio.c:273:12
 1e017b4:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:273:12
 1e017b8:    03 22             	if (r1 == 0) goto 6 <gpio_set_direction+0x30 : 1e017c0 >			  ## gpio.c:276:9
 1e017ba:    21 44             	r1 = [r2 + 8]			  ## gpio.c:277:16
 1e017bc:    50 b2             	r0 |= r1			  ## gpio.c:277:16
 1e017be:    03 18             	goto 6 <gpio_set_direction+0x36 : 1e017c6 >
 1e017c0:    21 44             	r1 = [r2 + 8]			  ## gpio.c:279:16
 1e017c2:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:279:16
 1e017c6:    28 44             	[r2 + 8] = r0
 1e017c8:    20 00             	rts


gpio_set_hd:
 1e017ca:    00 e3 18 80       	if (r0 > 48) goto 48 <gpio_set_hd+0x34 : 1e017fe >			  ## gpio.c:769:0
 1e017ce:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e017d0:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e017d6:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e017d8:    c3 ff 3c f2 e0 01 	r3 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e017de:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e017e2:    0d 24             	if (r2 == 0) goto 26 <gpio_set_hd+0x34 : 1e017fe >
 1e017e4:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:787:12
 1e017e8:    13 70             	r3 = 1			  ## gpio.c:787:12
 1e017ea:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:787:12
 1e017ee:    03 22             	if (r1 == 0) goto 6 <gpio_set_hd+0x2C : 1e017f6 >			  ## gpio.c:789:9
 1e017f0:    71 44             	r1 = [r2 + 28]			  ## gpio.c:790:15
 1e017f2:    50 b2             	r0 |= r1			  ## gpio.c:790:15
 1e017f4:    03 18             	goto 6 <gpio_set_hd+0x32 : 1e017fc >
 1e017f6:    71 44             	r1 = [r2 + 28]			  ## gpio.c:792:15
 1e017f8:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:792:15
 1e017fc:    78 44             	[r2 + 28] = r0
 1e017fe:    20 00             	rts


LED8888_close_init:
 1e01800:    76 01             	[--sp] = {rets, r6-r4}			  ## 7PIN_led8888.c:37:0
 1e01802:    05 70             	r5 = 0			  ## 7PIN_led8888.c:37:0
 1e01804:    c6 ff 88 ea e0 01 	r6 = 31517320 <led_port : 1e0ea88 >			  ## 7PIN_led8888.c:37:0
 1e0180a:    0e 18             	goto 28 <LED8888_close_init+0x28 : 1e01828 >			  ## 7PIN_led8888.c:37:0
 1e0180c:    04 fa 00 56       	r4 = b[r5+r6] (u)			  ## 7PIN_led8888.c:41:28
 1e01810:    40 08             	r0 = r4			  ## 7PIN_led8888.c:41:9
 1e01812:    3e 17             	call -388 <gpio_set_pull_down : 1e01690 >			  ## 7PIN_led8888.c:41:9
 1e01814:    01 70             	r1 = 0			  ## 7PIN_led8888.c:42:9
 1e01816:    40 08             	r0 = r4			  ## 7PIN_led8888.c:42:9
 1e01818:    55 17             	call -342 <gpio_set_pull_up : 1e016c4 >			  ## 7PIN_led8888.c:42:9
 1e0181a:    11 70             	r1 = 1			  ## 7PIN_led8888.c:43:9
 1e0181c:    40 08             	r0 = r4			  ## 7PIN_led8888.c:43:9
 1e0181e:    b8 17             	call -144 <gpio_set_direction : 1e01790 >			  ## 7PIN_led8888.c:43:9
 1e01820:    01 70             	r1 = 0			  ## 7PIN_led8888.c:44:3
 1e01822:    40 08             	r0 = r4			  ## 7PIN_led8888.c:44:3
 1e01824:    d2 17             	call -92 <gpio_set_hd : 1e017ca >			  ## 7PIN_led8888.c:44:3
 1e01826:    15 80             	r5 += 1			  ## 7PIN_led8888.c:38:21
 1e01828:    75 e0 f0 1f       	if (r5 != 7) goto -32 <LED8888_close_init+0xC : 1e0180c >			  ## 7PIN_led8888.c:38:5
 1e0182c:    56 01             	{pc, r6-r4} = [sp++]			  ## 7PIN_led8888.c:47:1


led8888_scan:
 1e0182e:    75 01             	[--sp] = {rets, r5, r4}			  ## 7PIN_led8888.c:401:0
 1e01830:    e7 17             	call -50 <LED8888_close_init : 1e01800 >			  ## 7PIN_led8888.c:422:2
 1e01832:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## 7PIN_led8888.c:422:2
 1e01838:    61 60             	r1 = b[r0 + 6] (u)			  ## 7PIN_led8888.c:423:9
 1e0183a:    61 e0 6b 81       	if (r1 > 6) goto 726 <.GJTIE176_0_0_+0x2BA : 1e01b14 >			  ## 7PIN_led8888.c:423:9
 1e0183e:    4c c0             	r4 = r1 << 1
 1e01840:    c2 ff 00 50 1e 00 	r2 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e01846:    23 fc 00 01       	r3 = r2 + 256
 1e0184a:    b4 00             	tbh [r4]


.GJTIL176_0_0_:
 1e0184c:    07 00     < 7 : 0x7 >
 1e0184e:    33 00     < 51 : 0x33 >
 1e01850:    64 00     < 100 : 0x64 >
 1e01852:    9f 00     < 159 : 0x9F >
 1e01854:    d2 00     < 210 : 0xD2 >
 1e01856:    0d 01     < 269 : 0x10D >
 1e01858:    42 01     < 322 : 0x142 >
 1e0185a:    00 f4 10 39       	[r3 + 0] |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e0185e:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01860:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01862:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01864:    07 f4 10 39       	[r3 + 28] |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01868:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:428:6
 1e0186a:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE176_0_0_+0x20 : 1e0187a >			  ## 7PIN_led8888.c:428:6
 1e0186e:    05 44             	r5 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01870:    f5 b3             	r5 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01872:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01874:    25 44             	r5 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01876:    f5 b3             	r5 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01878:    2d 44             	[r2 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0187a:    01 f3 06 40       	if ((r4 & 2) == 0) goto 12 <.GJTIE176_0_0_+0x30 : 1e0188a >
 1e0187e:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01880:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01882:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01884:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01886:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01888:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0188a:    04 f3 06 40       	if ((r4 & 16) == 0) goto 12 <.GJTIE176_0_0_+0x40 : 1e0189a >
 1e0188e:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01890:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01892:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01894:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01896:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01898:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0189a:    73 60             	r3 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:439:6
 1e0189c:    03 f3 06 30       	if ((r3 & 8) == 0) goto 12 <.GJTIE176_0_0_+0x52 : 1e018ac >			  ## 7PIN_led8888.c:439:6
 1e018a0:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018a2:    f4 b4             	r4 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018a4:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018a6:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018a8:    f4 b4             	r4 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018aa:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018ac:    25 f3 9a 30       	if ((r3 & 32) != 0) goto 308 <.GJTIE176_0_0_+0x18A : 1e019e4 >
 1e018b0:    31 19             	goto 610 <.GJTIE176_0_0_+0x2BA : 1e01b14 >
 1e018b2:    00 f4 80 29       	[r2 + 0] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e018b6:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018b8:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018ba:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018bc:    07 f4 80 29       	[r2 + 28] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e018c0:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:461:6
 1e018c2:    05 f3 06 40       	if ((r4 & 32) == 0) goto 12 <.GJTIE176_0_0_+0x78 : 1e018d2 >			  ## 7PIN_led8888.c:461:6
 1e018c6:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018c8:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018ca:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018cc:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018ce:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018d0:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018d2:    84 60             	r4 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:464:6
 1e018d4:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE176_0_0_+0x8A : 1e018e4 >			  ## 7PIN_led8888.c:464:6
 1e018d8:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018da:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018dc:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018de:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018e0:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018e2:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018e4:    01 f3 06 40       	if ((r4 & 2) == 0) goto 12 <.GJTIE176_0_0_+0x9A : 1e018f4 >
 1e018e8:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018ea:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018ec:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018ee:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018f0:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018f2:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e018f4:    03 f3 06 40       	if ((r4 & 8) == 0) goto 12 <.GJTIE176_0_0_+0xAA : 1e01904 >
 1e018f8:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018fa:    f3 b0             	r3 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018fc:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e018fe:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01900:    f3 b0             	r3 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01902:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01904:    04 f3 06 41       	if ((r4 & 16) == 0) goto 524 <.GJTIE176_0_0_+0x2BA : 1e01b14 >
 1e01908:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0190a:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0190c:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0190e:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01910:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01912:    ff 18             	goto 510 <.GJTIE176_0_0_+0x2B8 : 1e01b12 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01914:    00 f4 40 39       	[r3 + 0] |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01918:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0191a:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0191c:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0191e:    07 f4 40 39       	[r3 + 28] |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01922:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:498:6
 1e01924:    06 f3 06 40       	if ((r4 & 64) == 0) goto 12 <.GJTIE176_0_0_+0xDA : 1e01934 >			  ## 7PIN_led8888.c:498:6
 1e01928:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0192a:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0192c:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0192e:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01930:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01932:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01934:    83 60             	r3 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:501:6
 1e01936:    05 f3 06 30       	if ((r3 & 32) == 0) goto 12 <.GJTIE176_0_0_+0xEC : 1e01946 >			  ## 7PIN_led8888.c:501:6
 1e0193a:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0193c:    f3 b3             	r3 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0193e:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01940:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01942:    f3 b3             	r3 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01944:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01946:    93 60             	r3 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:504:6
 1e01948:    01 f3 06 30       	if ((r3 & 2) == 0) goto 12 <.GJTIE176_0_0_+0xFE : 1e01958 >			  ## 7PIN_led8888.c:504:6
 1e0194c:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e0194e:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01950:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01952:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01954:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01956:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01958:    73 60             	r3 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:509:6
 1e0195a:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <.GJTIE176_0_0_+0x110 : 1e0196a >			  ## 7PIN_led8888.c:509:6
 1e0195e:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01960:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01962:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01964:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01966:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01968:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0196a:    06 f3 06 30       	if ((r3 & 64) == 0) goto 12 <.GJTIE176_0_0_+0x120 : 1e0197a >
 1e0196e:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01970:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01972:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01974:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01976:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01978:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0197a:    04 f3 cb 30       	if ((r3 & 16) == 0) goto 406 <.GJTIE176_0_0_+0x2BA : 1e01b14 >
 1e0197e:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01980:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01982:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01984:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01986:    73 b4             	r3 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01988:    c4 18             	goto 392 <.GJTIE176_0_0_+0x2B8 : 1e01b12 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e0198a:    00 f4 01 2a       	[r2 + 0] |= 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e0198e:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01990:    74 b4             	r4 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01992:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01994:    07 f4 01 2a       	[r2 + 28] |= 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01998:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:539:6
 1e0199a:    02 f3 06 40       	if ((r4 & 4) == 0) goto 12 <.GJTIE176_0_0_+0x150 : 1e019aa >			  ## 7PIN_led8888.c:539:6
 1e0199e:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019a0:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019a2:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019a4:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019a6:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019a8:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019aa:    84 60             	r4 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:542:6
 1e019ac:    06 f3 06 40       	if ((r4 & 64) == 0) goto 12 <.GJTIE176_0_0_+0x162 : 1e019bc >			  ## 7PIN_led8888.c:542:6
 1e019b0:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019b2:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019b4:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019b6:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019b8:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019ba:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019bc:    94 60             	r4 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:545:6
 1e019be:    02 f3 06 40       	if ((r4 & 4) == 0) goto 12 <.GJTIE176_0_0_+0x174 : 1e019ce >			  ## 7PIN_led8888.c:545:6
 1e019c2:    05 44             	r5 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019c4:    f5 b4             	r5 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019c6:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019c8:    25 44             	r5 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019ca:    f5 b4             	r5 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019cc:    2d 44             	[r2 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019ce:    05 f3 06 40       	if ((r4 & 32) == 0) goto 12 <.GJTIE176_0_0_+0x184 : 1e019de >
 1e019d2:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019d4:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019d6:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e019d8:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019da:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019dc:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019de:    a3 60             	r3 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:551:6
 1e019e0:    04 f3 98 30       	if ((r3 & 16) == 0) goto 304 <.GJTIE176_0_0_+0x2BA : 1e01b14 >			  ## 7PIN_led8888.c:551:6
 1e019e4:    03 44             	r3 = [r2 + 0]
 1e019e6:    f3 b0             	r3 &= 4294967293
 1e019e8:    0b 44             	[r2 + 0] = r3
 1e019ea:    23 44             	r3 = [r2 + 8]
 1e019ec:    f3 b0             	r3 &= 4294967293
 1e019ee:    91 18             	goto 290 <.GJTIE176_0_0_+0x2B8 : 1e01b12 >
 1e019f0:    00 f4 02 2a       	[r2 + 0] |= 512			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e019f4:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019f6:    f4 b4             	r4 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019f8:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e019fa:    07 f4 02 2a       	[r2 + 28] |= 512			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e019fe:    54 60             	r4 = b[r0 + 5] (u)			  ## 7PIN_led8888.c:558:6
 1e01a00:    03 f3 06 40       	if ((r4 & 8) == 0) goto 12 <.GJTIE176_0_0_+0x1B6 : 1e01a10 >			  ## 7PIN_led8888.c:558:6
 1e01a04:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a06:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a08:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a0a:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a0c:    74 b2             	r4 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a0e:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a10:    84 60             	r4 = b[r0 + 8] (u)			  ## 7PIN_led8888.c:561:6
 1e01a12:    02 f3 06 40       	if ((r4 & 4) == 0) goto 12 <.GJTIE176_0_0_+0x1C8 : 1e01a22 >			  ## 7PIN_led8888.c:561:6
 1e01a16:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a18:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a1a:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a1c:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a1e:    f4 b3             	r4 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a20:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a22:    94 60             	r4 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:564:6
 1e01a24:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE176_0_0_+0x1DA : 1e01a34 >			  ## 7PIN_led8888.c:564:6
 1e01a28:    05 44             	r5 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a2a:    75 b4             	r5 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a2c:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a2e:    25 44             	r5 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a30:    75 b4             	r5 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a32:    2d 44             	[r2 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a34:    06 f3 06 40       	if ((r4 & 64) == 0) goto 12 <.GJTIE176_0_0_+0x1EA : 1e01a44 >
 1e01a38:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a3a:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a3c:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a3e:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a40:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a42:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a44:    a3 60             	r3 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:570:8
 1e01a46:    02 f3 06 30       	if ((r3 & 4) == 0) goto 12 <.GJTIE176_0_0_+0x1FC : 1e01a56 >			  ## 7PIN_led8888.c:570:8
 1e01a4a:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a4c:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a4e:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a50:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a52:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a54:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a56:    06 f3 5d 30       	if ((r3 & 64) == 0) goto 186 <.GJTIE176_0_0_+0x2BA : 1e01b14 >
 1e01a5a:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a5c:    73 b1             	r3 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a5e:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a60:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a62:    73 b1             	r3 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a64:    56 18             	goto 172 <.GJTIE176_0_0_+0x2B8 : 1e01b12 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a66:    00 f4 02 29       	[r2 + 0] |= 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01a6a:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a6c:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a6e:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a70:    07 f4 02 29       	[r2 + 28] |= 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01a74:    94 60             	r4 = b[r0 + 9] (u)			  ## 7PIN_led8888.c:595:6
 1e01a76:    03 f3 06 40       	if ((r4 & 8) == 0) goto 12 <.GJTIE176_0_0_+0x22C : 1e01a86 >			  ## 7PIN_led8888.c:595:6
 1e01a7a:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a7c:    75 b2             	r5 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a7e:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a80:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a82:    75 b2             	r5 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a84:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a86:    04 f3 06 40       	if ((r4 & 16) == 0) goto 12 <.GJTIE176_0_0_+0x23C : 1e01a96 >
 1e01a8a:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a8c:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a8e:    0c 46             	[r3 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a90:    24 46             	r4 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a92:    74 b3             	r4 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a94:    2c 46             	[r3 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01a96:    a3 60             	r3 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:601:6
 1e01a98:    01 f3 06 30       	if ((r3 & 2) == 0) goto 12 <.GJTIE176_0_0_+0x24E : 1e01aa8 >			  ## 7PIN_led8888.c:601:6
 1e01a9c:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01a9e:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01aa0:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01aa2:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01aa4:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01aa6:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01aa8:    03 f3 06 30       	if ((r3 & 8) == 0) goto 12 <.GJTIE176_0_0_+0x25E : 1e01ab8 >
 1e01aac:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01aae:    74 b4             	r4 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ab0:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ab2:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ab4:    74 b4             	r4 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ab6:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ab8:    05 f3 06 30       	if ((r3 & 32) == 0) goto 12 <.GJTIE176_0_0_+0x26E : 1e01ac8 >
 1e01abc:    03 44             	r3 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01abe:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ac0:    0b 44             	[r2 + 0] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ac2:    23 44             	r3 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ac4:    f3 b4             	r3 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ac6:    2b 44             	[r2 + 8] = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ac8:    73 60             	r3 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:611:6
 1e01aca:    22 f3 1d 30       	if ((r3 & 4) != 0) goto 58 <.GJTIE176_0_0_+0x2AE : 1e01b08 >			  ## 7PIN_led8888.c:611:6
 1e01ace:    22 18             	goto 68 <.GJTIE176_0_0_+0x2BA : 1e01b14 >			  ## 7PIN_led8888.c:611:6
 1e01ad0:    00 f4 04 29       	[r2 + 0] |= 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:428:16
 1e01ad4:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ad6:    74 b1             	r4 &= 4294967291			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ad8:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01ada:    07 f4 04 29       	[r2 + 28] |= 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:790:15
 1e01ade:    a4 60             	r4 = b[r0 + 10] (u)			  ## 7PIN_led8888.c:621:6
 1e01ae0:    00 f3 06 40       	if ((r4 & 1) == 0) goto 12 <.GJTIE176_0_0_+0x296 : 1e01af0 >			  ## 7PIN_led8888.c:621:6
 1e01ae4:    04 44             	r4 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ae6:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01ae8:    0c 44             	[r2 + 0] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01aea:    24 44             	r4 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01aec:    f4 b0             	r4 &= 4294967293			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01aee:    2c 44             	[r2 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01af0:    75 60             	r5 = b[r0 + 7] (u)			  ## 7PIN_led8888.c:639:6
 1e01af2:    54 05             	r4 = r5.b0 (s)			  ## 7PIN_led8888.c:639:6
 1e01af4:    01 f3 06 50       	if ((r5 & 2) == 0) goto 12 <.GJTIE176_0_0_+0x2AA : 1e01b04 >			  ## 7PIN_led8888.c:639:6
 1e01af8:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01afa:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01afc:    0d 46             	[r3 + 0] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:430:16
 1e01afe:    25 46             	r5 = [r3 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01b00:    75 b3             	r5 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01b02:    2d 46             	[r3 + 8] = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:432:12
 1e01b04:    f4 ef 06 c0       	ifs (r4 > -1) goto 12 <.GJTIE176_0_0_+0x2BA : 1e01b14 >
 1e01b08:    03 44             	r3 = [r2 + 0]
 1e01b0a:    f3 b3             	r3 &= 4294967167
 1e01b0c:    0b 44             	[r2 + 0] = r3
 1e01b0e:    23 44             	r3 = [r2 + 8]
 1e01b10:    f3 b3             	r3 &= 4294967167
 1e01b12:    2b 44             	[r2 + 8] = r3
 1e01b14:    12 92             	r2 = r1 + 1			  ## 7PIN_led8888.c:654:6
 1e01b16:    83 04             	r3 = r2.b0 (u)			  ## 7PIN_led8888.c:654:6
 1e01b18:    01 70             	r1 = 0			  ## 7PIN_led8888.c:655:5
 1e01b1a:    83 e0 01 00       	if (r3 == 8) goto 2 <.GJTIE176_0_0_+0x2C6 : 1e01b20 >			  ## 7PIN_led8888.c:655:5
 1e01b1e:    21 08             	r1 = r2			  ## 7PIN_led8888.c:655:5
 1e01b20:    69 60             	b[r0 + 6] = r1			  ## 7PIN_led8888.c:656:7
 1e01b22:    55 01             	{pc, r5, r4} = [sp++]			  ## 7PIN_led8888.c:659:1


update_charge_ui:
 1e01b24:    74 01             	[--sp] = {rets, r4}			  ## app_charge.c:28:0
 1e01b26:    c4 ff 44 08 00 00 	r4 = 2116 <update_charge_ui.var : 844 >			  ## app_charge.c:30:44
 1e01b2c:    01 68             	r1 = b[r4 + 0] (u)			  ## app_charge.c:30:5
 1e01b2e:    40 70             	r0 = 4			  ## app_charge.c:30:5
 1e01b30:    bf f3 ad f8       	call -3750 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_charge.c:30:5
 1e01b34:    00 48             	r0 = [r4 + 0]			  ## app_charge.c:31:8
 1e01b36:    11 90             	r1 = r0 + 1			  ## app_charge.c:31:8
 1e01b38:    10 70             	r0 = 1			  ## app_charge.c:31:8
 1e01b3a:    41 e0 01 c0       	ifs (r1 > 4) goto 2 <update_charge_ui+0x1C : 1e01b40 >			  ## app_charge.c:31:8
 1e01b3e:    10 08             	r0 = r1			  ## app_charge.c:31:8
 1e01b40:    08 48             	[r4 + 0] = r0			  ## app_charge.c:32:12
 1e01b42:    54 01             	{pc, r4} = [sp++]			  ## app_charge.c:33:1


app_idle_query:
 1e01b44:    c0 ff 98 20 00 00 	r0 = 8344 <is_idle_active : 2098 >			  ## app_idle.c:84:0
 1e01b4a:    01 60             	r1 = b[r0 + 0] (u)			  ## app_idle.c:85:13
 1e01b4c:    10 70             	r0 = 1			  ## app_idle.c:85:12
 1e01b4e:    01 22             	if (r1 == 0) goto 2 <app_idle_query+0xE : 1e01b52 >			  ## app_idle.c:85:12
 1e01b50:    00 70             	r0 = 0			  ## app_idle.c:85:12
 1e01b52:    20 00             	rts			  ## app_idle.c:85:5


idle_state_machine:
 1e01b54:    34 00             	[--sp] = rets			  ## app_idle.c:54:0
 1e01b56:    11 e0 10 10       	if (r1 != 1) goto 32 <idle_state_machine+0x26 : 1e01b7a >			  ## app_idle.c:54:0
 1e01b5a:    0f 24             	if (r2 == 0) goto 30 <idle_state_machine+0x26 : 1e01b7a >			  ## app_idle.c:54:0
 1e01b5c:    10 44             	r0 = [r2 + 4]			  ## app_idle.c:62:21
 1e01b5e:    20 e0 0c 10       	if (r0 != 2) goto 24 <idle_state_machine+0x26 : 1e01b7a >
 1e01b62:    98 f3 3f 29       	call 3166846 <os_taskq_flush : 106de4 >			  ## app_idle.c:65:13
 1e01b66:    c0 ff fc f0 e0 01 	r0 = 31518972 <bluetooth_base_uuid+0xF2 : 1e0f0fc >			  ## app_idle.c:26:5
 1e01b6c:    80 f3 16 b7       	call 93740 <clk_set : 1e1899c >			  ## app_idle.c:26:5
 1e01b70:    c0 ff 98 20 00 00 	r0 = 8344 <is_idle_active : 2098 >			  ## app_idle.c:27:20
 1e01b76:    11 70             	r1 = 1			  ## app_idle.c:27:20
 1e01b78:    09 60             	b[r0 + 0] = r1			  ## app_idle.c:27:20
 1e01b7a:    00 70             	r0 = 0			  ## app_idle.c:80:5
 1e01b7c:    30 00             	pc = [sp++]			  ## app_idle.c:80:5


led_8888_init:
 1e01b7e:    74 01             	[--sp] = {rets, r4}			  ## 7PIN_led8888.c:793:0
 1e01b80:    3f 16             	call -898 <LED8888_close_init : 1e01800 >			  ## 7PIN_led8888.c:794:2
 1e01b82:    c4 ff 96 20 00 00 	r4 = 8342 <led8888_scan_t : 2096 >			  ## 7PIN_led8888.c:794:2
 1e01b88:    00 58             	r0 = h[r4 + 0] (u)			  ## 7PIN_led8888.c:797:5
 1e01b8a:    09 30             	if (r0 != 0) goto 18 <led_8888_init+0x20 : 1e01b9e >			  ## 7PIN_led8888.c:797:5
 1e01b8c:    c1 ff 2e 18 e0 01 	r1 = 31463470 <led8888_scan : 1e0182e >			  ## 7PIN_led8888.c:798:20
 1e01b92:    00 70             	r0 = 0			  ## 7PIN_led8888.c:798:20
 1e01b94:    22 70             	r2 = 2			  ## 7PIN_led8888.c:798:20
 1e01b96:    13 70             	r3 = 1			  ## 7PIN_led8888.c:798:20
 1e01b98:    80 f3 93 4b       	call 38694 <usr_timer_add : 1e0b2c2 >			  ## 7PIN_led8888.c:798:20
 1e01b9c:    08 58             	h[r4 + 0] = r0			  ## 7PIN_led8888.c:798:18
 1e01b9e:    54 01             	{pc, r4} = [sp++]			  ## 7PIN_led8888.c:816:1


ble_module_enable:
 1e01ba0:    75 01             	[--sp] = {rets, r5, r4}			  ## le_trans_data.c:1279:0
 1e01ba2:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## le_trans_data.c:1279:0
 1e01ba8:    06 20             	if (r0 == 0) goto 12 <ble_module_enable+0x16 : 1e01bb6 >			  ## le_trans_data.c:1281:9
 1e01baa:    10 70             	r0 = 1
 1e01bac:    10 f9 50 40       	b[r4 + 80] = r0
 1e01bb0:    15 01             	{rets, r5, r4} = [sp++]			  ## le_trans_data.c:1283:9
 1e01bb2:    ff f3 ba f8       	goto -3724 <bt_ble_adv_enable : 1e00d2a >			  ## le_trans_data.c:1283:9
 1e01bb6:    70 59             	r0 = h[r4 + 46] (u)			  ## le_trans_data.c:1285:13
 1e01bb8:    06 20             	if (r0 == 0) goto 12 <ble_module_enable+0x26 : 1e01bc6 >			  ## le_trans_data.c:1285:13
 1e01bba:    00 70             	r0 = 0
 1e01bbc:    10 f9 50 40       	b[r4 + 80] = r0
 1e01bc0:    15 01             	{rets, r5, r4} = [sp++]			  ## le_trans_data.c:1287:13
 1e01bc2:    ff f3 bb fb       	goto -2186 <ble_disconnect : 1e0133c >			  ## le_trans_data.c:1287:13
 1e01bc6:    00 70             	r0 = 0			  ## le_trans_data.c:1289:13
 1e01bc8:    05 70             	r5 = 0			  ## le_trans_data.c:1289:13
 1e01bca:    bf f3 ae f8       	call -3748 <bt_ble_adv_enable : 1e00d2a >			  ## le_trans_data.c:1289:13
 1e01bce:    15 f9 50 40       	b[r4 + 80] = r5			  ## le_trans_data.c:1289:13
 1e01bd2:    55 01             	{pc, r5, r4} = [sp++]			  ## le_trans_data.c:1293:1


Report_SKIP_ROPE_MODE:
 1e01bd4:    34 00             	[--sp] = rets			  ## le_trans_data.c:735:0
 1e01bd6:    fc 0b             	sp += -8			  ## le_trans_data.c:735:0
 1e01bd8:    d0 f5 00 00       	b[sp] = r0			  ## le_trans_data.c:740:13
 1e01bdc:    60 70             	r0 = 6			  ## le_trans_data.c:741:13
 1e01bde:    d0 f5 01 00       	b[sp+1] = r0			  ## le_trans_data.c:741:13
 1e01be2:    d2 f5 02 00       	b[sp+2] = r2			  ## le_trans_data.c:742:14
 1e01be6:    08 d4             	r0 = r1 >> 16			  ## le_trans_data.c:743:29
 1e01be8:    d0 f5 03 00       	b[sp+3] = r0			  ## le_trans_data.c:743:13
 1e01bec:    08 d2             	r0 = r1 >> 8			  ## le_trans_data.c:744:32
 1e01bee:    d0 f5 04 00       	b[sp+4] = r0			  ## le_trans_data.c:744:16
 1e01bf2:    bf f3 a3 f7       	call -4282 <get_vbat_level : 1e00b3c >			  ## le_trans_data.c:745:15
 1e01bf6:    11 70             	r1 = 1
 1e01bf8:    03 ff 36 01 01 00 	if (r0 < 310) goto 2 <Report_SKIP_ROPE_MODE+0x2C : 1e01c00 >
 1e01bfe:    51 70             	r1 = 5
 1e01c00:    d1 f5 05 00       	b[sp+5] = r1			  ## le_trans_data.c:745:13
 1e01c04:    bf f3 a5 f7       	call -4278 <app_send_user_data_check : 1e00b52 >			  ## le_trans_data.c:749:6
 1e01c08:    03 20             	if (r0 == 0) goto 6 <Report_SKIP_ROPE_MODE+0x3C : 1e01c10 >			  ## le_trans_data.c:749:6
 1e01c0a:    00 a0             	r0 = sp + 0
 1e01c0c:    bf f3 b2 f7       	call -4252 <app_send_user_data : 1e00b74 >			  ## le_trans_data.c:751:6
 1e01c10:    04 0a             	sp += 8
 1e01c12:    30 00             	pc = [sp++]			  ## le_trans_data.c:754:2


DISPLAY_NUM_DATA_UPDATE:
 1e01c14:    76 01             	[--sp] = {rets, r6-r4}			  ## 7PIN_led8888.c:668:0
 1e01c16:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## 7PIN_led8888.c:668:0
 1e01c1c:    f2 5d             	r2 = h[r6 + 62] (u)			  ## 7PIN_led8888.c:676:9
 1e01c1e:    15 08             	r5 = r1			  ## 7PIN_led8888.c:676:9
 1e01c20:    04 08             	r4 = r0
 1e01c22:    c1 ff 20 bf 02 00 	r1 = 180000 <text_size+0x133D4 : 2bf20 >			  ## 7PIN_led8888.c:676:9
 1e01c28:    20 08             	r0 = r2			  ## 7PIN_led8888.c:676:9
 1e01c2a:    80 f3 57 4b       	call 38574 <sys_timer_modify : 1e0b2dc >			  ## 7PIN_led8888.c:676:9
 1e01c2e:    00 ff ff 50 11 00 	if (r5 == 255) goto 34 <DISPLAY_NUM_DATA_UPDATE+0x42 : 1e01c56 >			  ## 7PIN_led8888.c:680:5
 1e01c34:    c0 ff 8f ea e0 01 	r0 = 31517327 <LED_NUMBER : 1e0ea8f >
 1e01c3a:    15 e0 13 10       	if (r5 != 1) goto 38 <DISPLAY_NUM_DATA_UPDATE+0x50 : 1e01c64 >
 1e01c3e:    c1 73             	r1 = 60			  ## 7PIN_led8888.c:682:11
 1e01c40:    c0 fe 10 24       	r2 = r4 / r1 (u)			  ## 7PIN_led8888.c:682:11
 1e01c44:    a2 04             	r2 = r2.l (u)			  ## 7PIN_led8888.c:684:7
 1e01c46:    d0 fe 10 14       	r1 = r4 % r1 (u)			  ## 7PIN_led8888.c:683:11
 1e01c4a:    a2 e0 16 20       	if (r2 >= 10) goto 44 <DISPLAY_NUM_DATA_UPDATE+0x66 : 1e01c7a >			  ## 7PIN_led8888.c:683:11
 1e01c4e:    03 70             	r3 = 0
 1e01c50:    5b 6c             	b[r6 + 5] = r3
 1e01c52:    1b 34             	if (r2 != 0) goto 54 <DISPLAY_NUM_DATA_UPDATE+0x76 : 1e01c8a >
 1e01c54:    1f 18             	goto 62 <DISPLAY_NUM_DATA_UPDATE+0x80 : 1e01c94 >
 1e01c56:    00 70             	r0 = 0			  ## 7PIN_led8888.c:708:26
 1e01c58:    58 6c             	b[r6 + 5] = r0			  ## 7PIN_led8888.c:708:26
 1e01c5a:    88 6c             	b[r6 + 8] = r0			  ## 7PIN_led8888.c:709:26
 1e01c5c:    98 6c             	b[r6 + 9] = r0			  ## 7PIN_led8888.c:710:26
 1e01c5e:    a8 6c             	b[r6 + 10] = r0			  ## 7PIN_led8888.c:711:26
 1e01c60:    78 6c             	b[r6 + 7] = r0			  ## 7PIN_led8888.c:712:26
 1e01c62:    56 01             	{pc, r6-r4} = [sp++]			  ## 7PIN_led8888.c:751:1
 1e01c64:    02 ff e8 43 22 00 	if (r4 >= 1000) goto 68 <DISPLAY_NUM_DATA_UPDATE+0x9A : 1e01cae >
 1e01c6a:    01 70             	r1 = 0
 1e01c6c:    59 6c             	b[r6 + 5] = r1
 1e01c6e:    44 e6 28 20       	if (r4 >= 100) goto 80 <DISPLAY_NUM_DATA_UPDATE+0xAE : 1e01cc2 >
 1e01c72:    89 6c             	b[r6 + 8] = r1
 1e01c74:    a4 e0 2e 20       	if (r4 >= 10) goto 92 <DISPLAY_NUM_DATA_UPDATE+0xC0 : 1e01cd4 >
 1e01c78:    34 18             	goto 104 <DISPLAY_NUM_DATA_UPDATE+0xCE : 1e01ce2 >
 1e01c7a:    a3 70             	r3 = 10			  ## 7PIN_led8888.c:690:45
 1e01c7c:    c0 fe 30 52       	r5 = r2 / r3 (u)			  ## 7PIN_led8888.c:690:45
 1e01c80:    d0 fe 30 35       	r3 = r5 % r3 (u)			  ## 7PIN_led8888.c:690:49
 1e01c84:    03 fa 00 30       	r3 = b[r3+r0] (u)			  ## 7PIN_led8888.c:690:29
 1e01c88:    5b 6c             	b[r6 + 5] = r3			  ## 7PIN_led8888.c:690:29
 1e01c8a:    a3 70             	r3 = 10			  ## 7PIN_led8888.c:699:44
 1e01c8c:    d0 fe 30 22       	r2 = r2 % r3 (u)			  ## 7PIN_led8888.c:699:44
 1e01c90:    03 fa 00 20       	r3 = b[r2+r0] (u)			  ## 7PIN_led8888.c:699:29
 1e01c94:    a2 70             	r2 = 10
 1e01c96:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## 7PIN_led8888.c:702:43
 1e01c9a:    d0 fe 20 11       	r1 = r1 % r2 (u)			  ## 7PIN_led8888.c:702:47
 1e01c9e:    d0 fe 20 24       	r2 = r4 % r2 (u)			  ## 7PIN_led8888.c:703:43
 1e01ca2:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## 7PIN_led8888.c:702:27
 1e01ca6:    00 fa 00 20       	r0 = b[r2+r0] (u)			  ## 7PIN_led8888.c:703:28
 1e01caa:    8b 6c             	b[r6 + 8] = r3			  ## 7PIN_led8888.c:703:28
 1e01cac:    1f 18             	goto 62 <DISPLAY_NUM_DATA_UPDATE+0xD8 : 1e01cec >			  ## 7PIN_led8888.c:703:28
 1e01cae:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## 7PIN_led8888.c:723:44
 1e01cb2:    c0 fe 10 14       	r1 = r4 / r1 (u)			  ## 7PIN_led8888.c:723:44
 1e01cb6:    a2 70             	r2 = 10			  ## 7PIN_led8888.c:723:50
 1e01cb8:    d0 fe 20 11       	r1 = r1 % r2 (u)			  ## 7PIN_led8888.c:723:50
 1e01cbc:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## 7PIN_led8888.c:723:28
 1e01cc0:    59 6c             	b[r6 + 5] = r1			  ## 7PIN_led8888.c:723:28
 1e01cc2:    41 76             	r1 = 100			  ## 7PIN_led8888.c:732:44
 1e01cc4:    c0 fe 10 14       	r1 = r4 / r1 (u)			  ## 7PIN_led8888.c:732:44
 1e01cc8:    a2 70             	r2 = 10			  ## 7PIN_led8888.c:732:49
 1e01cca:    d0 fe 20 11       	r1 = r1 % r2 (u)			  ## 7PIN_led8888.c:732:49
 1e01cce:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## 7PIN_led8888.c:732:28
 1e01cd2:    89 6c             	b[r6 + 8] = r1			  ## 7PIN_led8888.c:732:28
 1e01cd4:    a1 70             	r1 = 10			  ## 7PIN_led8888.c:741:44
 1e01cd6:    c0 fe 10 24       	r2 = r4 / r1 (u)			  ## 7PIN_led8888.c:741:44
 1e01cda:    d0 fe 10 12       	r1 = r2 % r1 (u)			  ## 7PIN_led8888.c:741:48
 1e01cde:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## 7PIN_led8888.c:741:28
 1e01ce2:    a2 70             	r2 = 10
 1e01ce4:    d0 fe 20 24       	r2 = r4 % r2 (u)			  ## 7PIN_led8888.c:744:43
 1e01ce8:    00 fa 00 20       	r0 = b[r2+r0] (u)			  ## 7PIN_led8888.c:744:28
 1e01cec:    99 6c             	b[r6 + 9] = r1
 1e01cee:    a8 6c             	b[r6 + 10] = r0
 1e01cf0:    56 01             	{pc, r6-r4} = [sp++]			  ## 7PIN_led8888.c:751:1


time_down_over_deal:
 1e01cf2:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:1110:0
 1e01cf4:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:1110:0
 1e01cfa:    c0 59             	r0 = h[r4 + 56] (u)			  ## app_spp_and_le.c:1111:5
 1e01cfc:    04 20             	if (r0 == 0) goto 8 <time_down_over_deal+0x14 : 1e01d06 >			  ## app_spp_and_le.c:1111:5
 1e01cfe:    80 f3 ec 4a       	call 38360 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:1113:3
 1e01d02:    00 70             	r0 = 0			  ## app_spp_and_le.c:1114:21
 1e01d04:    c8 59             	h[r4 + 56] = r0			  ## app_spp_and_le.c:1114:21
 1e01d06:    d0 59             	r0 = h[r4 + 58] (u)			  ## app_spp_and_le.c:1116:5
 1e01d08:    04 20             	if (r0 == 0) goto 8 <time_down_over_deal+0x20 : 1e01d12 >			  ## app_spp_and_le.c:1116:5
 1e01d0a:    80 f3 f9 49       	call 37874 <usr_timer_del : 1e0b100 >			  ## app_spp_and_le.c:1118:3
 1e01d0e:    00 70             	r0 = 0			  ## app_spp_and_le.c:1119:29
 1e01d10:    d8 59             	h[r4 + 58] = r0			  ## app_spp_and_le.c:1119:29
 1e01d12:    e0 59             	r0 = h[r4 + 60] (u)			  ## app_spp_and_le.c:1121:5
 1e01d14:    05 20             	if (r0 == 0) goto 10 <time_down_over_deal+0x2E : 1e01d20 >			  ## app_spp_and_le.c:1121:5
 1e01d16:    c0 59             	r0 = h[r4 + 56] (u)			  ## app_spp_and_le.c:1123:3
 1e01d18:    80 f3 df 4a       	call 38334 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:1123:3
 1e01d1c:    00 70             	r0 = 0			  ## app_spp_and_le.c:1124:21
 1e01d1e:    c8 59             	h[r4 + 56] = r0			  ## app_spp_and_le.c:1124:21
 1e01d20:    c0 ff c0 08 00 00 	r0 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## app_spp_and_le.c:1126:50
 1e01d26:    11 40             	r1 = [r0 + 4]			  ## app_spp_and_le.c:1126:50
 1e01d28:    50 76             	r0 = 101			  ## app_spp_and_le.c:1126:2
 1e01d2a:    02 70             	r2 = 0			  ## app_spp_and_le.c:1126:2
 1e01d2c:    53 17             	call -346 <Report_SKIP_ROPE_MODE : 1e01bd4 >			  ## app_spp_and_le.c:1126:2
 1e01d2e:    c0 49             	r0 = [r4 + 112]			  ## app_spp_and_le.c:1128:26
 1e01d30:    01 70             	r1 = 0			  ## app_spp_and_le.c:1128:2
 1e01d32:    14 01             	{rets, r4} = [sp++]			  ## app_spp_and_le.c:1128:2
 1e01d34:    6f 1f             	goto -290 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_spp_and_le.c:1128:2


charge_close:
 1e01d36:    74 01             	[--sp] = {rets, r4}			  ## charge.c:189:0
 1e01d38:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## charge.c:189:0
 1e01d3e:    10 68             	r0 = b[r4 + 1] (u)			  ## charge.c:192:9
 1e01d40:    10 e0 06 00       	if (r0 == 1) goto 12 <charge_close+0x1A : 1e01d50 >			  ## charge.c:192:9
 1e01d44:    c0 ff 1a 18 1a 00 	r0 = 1710106 <uECC_vli_cmp_unsafe+0x9A81E : 1a181a >
 1e01d4a:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:193:9
 1e01d4c:    71 b0             	r1 &= 4294967294			  ## charge.c:193:9
 1e01d4e:    09 60             	b[r0 + 0] = r1			  ## charge.c:193:9
 1e01d50:    bf f3 11 f5       	call -5598 <power_wakeup_disable_with_port : 1e00776 >			  ## charge.c:196:5
 1e01d54:    10 70             	r0 = 1			  ## charge.c:198:5
 1e01d56:    bf f3 33 f4       	call -6042 <charge_event_to_user : 1e005c0 >			  ## charge.c:198:5
 1e01d5a:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:200:17
 1e01d5e:    08 20             	if (r0 == 0) goto 16 <charge_close+0x3A : 1e01d70 >			  ## charge.c:200:17
 1e01d60:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:201:31
 1e01d64:    20 04             	r0 = r0.l (u)			  ## charge.c:201:9
 1e01d66:    80 f3 cb 49       	call 37782 <usr_timer_del : 1e0b100 >			  ## charge.c:201:9
 1e01d6a:    00 70             	r0 = 0			  ## charge.c:201:9
 1e01d6c:    10 f6 bc 41       	[r4 + 444] = r0			  ## charge.c:202:30
 1e01d70:    00 f6 c0 41       	r0 = [r4 + 448]			  ## charge.c:204:17
 1e01d74:    08 20             	if (r0 == 0) goto 16 <charge_close+0x50 : 1e01d86 >			  ## charge.c:204:17
 1e01d76:    00 f6 c0 41       	r0 = [r4 + 448]			  ## charge.c:205:31
 1e01d7a:    20 04             	r0 = r0.l (u)			  ## charge.c:205:9
 1e01d7c:    80 f3 bf 49       	call 37758 <sys_timer_del : 1e0b0fe >			  ## charge.c:205:9
 1e01d80:    00 70             	r0 = 0			  ## charge.c:205:9
 1e01d82:    10 f6 c0 41       	[r4 + 448] = r0			  ## charge.c:206:26
 1e01d86:    54 01             	{pc, r4} = [sp++]			  ## charge.c:208:1


vbat_check_init:
 1e01d88:    74 01             	[--sp] = {rets, r4}			  ## app_power_manage.c:185:0
 1e01d8a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:185:0
 1e01d90:    70 49             	r0 = [r4 + 92]			  ## app_power_manage.c:186:9
 1e01d92:    06 20             	if (r0 == 0) goto 12 <vbat_check_init+0x18 : 1e01da0 >			  ## app_power_manage.c:186:9
 1e01d94:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:189:9
 1e01d96:    01 fb 30 75       	r1 = 30000 <nvbss_size+0x1F0 : 7530 >			  ## app_power_manage.c:189:9
 1e01d9a:    80 f3 9f 4a       	call 38206 <sys_timer_modify : 1e0b2dc >			  ## app_power_manage.c:189:9
 1e01d9e:    09 18             	goto 18 <vbat_check_init+0x2A : 1e01db2 >			  ## app_power_manage.c:189:9
 1e01da0:    c1 ff 4c 20 e0 01 	r1 = 31465548 <vbat_check_slow : 1e0204c >			  ## app_power_manage.c:187:27
 1e01da6:    00 70             	r0 = 0			  ## app_power_manage.c:187:27
 1e01da8:    02 fb 30 75       	r2 = 30000 <nvbss_size+0x1F0 : 7530 >			  ## app_power_manage.c:187:27
 1e01dac:    80 f3 33 4b       	call 38502 <sys_timer_add : 1e0b416 >			  ## app_power_manage.c:187:27
 1e01db0:    78 49             	[r4 + 92] = r0			  ## app_power_manage.c:187:25
 1e01db2:    80 49             	r0 = [r4 + 96]			  ## app_power_manage.c:192:9
 1e01db4:    09 30             	if (r0 != 0) goto 18 <vbat_check_init+0x40 : 1e01dc8 >			  ## app_power_manage.c:192:9
 1e01db6:    c1 ff 02 21 e0 01 	r1 = 31465730 <vbat_check : 1e02102 >			  ## app_power_manage.c:193:27
 1e01dbc:    00 70             	r0 = 0			  ## app_power_manage.c:193:27
 1e01dbe:    a2 70             	r2 = 10			  ## app_power_manage.c:193:27
 1e01dc0:    13 70             	r3 = 1			  ## app_power_manage.c:193:27
 1e01dc2:    80 f3 7e 4a       	call 38140 <usr_timer_add : 1e0b2c2 >			  ## app_power_manage.c:193:27
 1e01dc6:    88 49             	[r4 + 96] = r0			  ## app_power_manage.c:193:25
 1e01dc8:    54 01             	{pc, r4} = [sp++]			  ## app_power_manage.c:195:1


power_set_soft_poweroff_prepare:
 1e01dca:    74 01             	[--sp] = {rets, r4}			  ## pmu_analog.c:835:0
 1e01dcc:    98 f3 e6 27       	call 3166156 <local_irq_disable : 106d9c >			  ## pmu_analog.c:836:5
 1e01dd0:    08 00             	csync			  ## pmu_analog.c:836:5
 1e01dd2:    c4 ff c0 47 00 00 	r4 = 18368 <nvbss_begin : 47c0 >			  ## pmu_analog.c:836:5
 1e01dd8:    00 f6 60 41       	r0 = [r4 + 352]			  ## pmu_analog.c:838:20
 1e01ddc:    01 20             	if (r0 == 0) goto 2 <power_set_soft_poweroff_prepare+0x16 : 1e01de0 >			  ## pmu_analog.c:838:20
 1e01dde:    80 00             	call r0			  ## pmu_analog.c:840:9
 1e01de0:    c0 ff 45 18 1a 00 	r0 = 1710149 <uECC_vli_cmp_unsafe+0x9A849 : 1a1845 >
 1e01de6:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:845:17
 1e01de8:    01 fd 07 19       	r1 = r1 | 7			  ## pmu_analog.c:845:17
 1e01dec:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:845:17
 1e01dee:    01 fc d0 ff       	r1 = r0 + -48			  ## pmu_analog.c:845:17
 1e01df2:    50 62             	r0 = b[r1 + 5] (u)			  ## pmu_analog.c:848:5
 1e01df4:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:848:5
 1e01df6:    58 62             	b[r1 + 5] = r0			  ## pmu_analog.c:848:5
 1e01df8:    10 fc 7c 00       	r0 = r1 + 124			  ## pmu_analog.c:848:5
 1e01dfc:    02 61             	r2 = b[r0 + 16] (u)			  ## pmu_analog.c:851:5
 1e01dfe:    72 b0             	r2 &= 4294967294			  ## pmu_analog.c:851:5
 1e01e00:    0a 61             	b[r0 + 16] = r2			  ## pmu_analog.c:851:5
 1e01e02:    12 61             	r2 = b[r0 + 17] (u)			  ## pmu_analog.c:853:5
 1e01e04:    22 fd fc 29       	r2 = r2 & 252			  ## pmu_analog.c:853:5
 1e01e08:    1a 61             	b[r0 + 17] = r2			  ## pmu_analog.c:853:5
 1e01e0a:    02 62             	r2 = b[r1 + 0] (u)			  ## pmu_analog.c:856:5
 1e01e0c:    92 b2             	r2 |= 32			  ## pmu_analog.c:856:5
 1e01e0e:    0a 62             	b[r1 + 0] = r2			  ## pmu_analog.c:856:5
 1e01e10:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:859:5
 1e01e12:    21 fd e1 19       	r1 = r1 & 225			  ## pmu_analog.c:859:5
 1e01e16:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:859:5
 1e01e18:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:860:5
 1e01e1a:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:860:5
 1e01e1c:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:860:5
 1e01e1e:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:861:5
 1e01e20:    f1 b2             	r1 &= 4294967263			  ## pmu_analog.c:861:5
 1e01e22:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:861:5
 1e01e24:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:864:5
 1e01e26:    f1 b1             	r1 &= 4294967287			  ## pmu_analog.c:864:5
 1e01e28:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:864:5
 1e01e2a:    c1 ff 0c 00 1e 00 	r1 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## pmu_analog.c:864:5
 1e01e30:    00 f4 01 19       	[r1 + 0] |= 1			  ## pmu_analog.c:805:24
 1e01e34:    12 42             	r2 = [r1 + 4]			  ## pmu_analog.c:806:5
 1e01e36:    32 fd 07 2a       	r2 = r2 & 4294965503			  ## pmu_analog.c:806:5
 1e01e3a:    02 fd 03 2a       	r2 = r2 | 768			  ## pmu_analog.c:806:5
 1e01e3e:    1a 42             	[r1 + 4] = r2			  ## pmu_analog.c:806:5
 1e01e40:    08 00             	csync			  ## pmu_analog.c:807:5
 1e01e42:    11 fc f4 30       	r1 = r1 + 12532			  ## pmu_analog.c:814:17
 1e01e46:    02 70             	r2 = 0			  ## pmu_analog.c:814:17
 1e01e48:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:814:17
 1e01e4a:    11 fc 00 e7       	r1 = r1 + -6400			  ## pmu_analog.c:824:18
 1e01e4e:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:824:18
 1e01e50:    11 fc 00 3d       	r1 = r1 + 15616			  ## pmu_analog.c:824:18
 1e01e54:    12 f6 00 15       	[r1 + 1280] = r2			  ## pmu_analog.c:826:19
 1e01e58:    13 fc 00 f2       	r3 = r1 + -3584			  ## pmu_analog.c:826:19
 1e01e5c:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:829:22
 1e01e5e:    1a 46             	[r3 + 4] = r2			  ## pmu_analog.c:830:22
 1e01e60:    13 fc 00 c7       	r3 = r1 + -14592			  ## pmu_analog.c:870:18
 1e01e64:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:870:18
 1e01e66:    13 fc 00 c8       	r3 = r1 + -14336			  ## pmu_analog.c:871:18
 1e01e6a:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:871:18
 1e01e6c:    13 fc 00 c9       	r3 = r1 + -14080			  ## pmu_analog.c:872:18
 1e01e70:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:872:18
 1e01e72:    13 fc 00 cf       	r3 = r1 + -12544			  ## pmu_analog.c:876:18
 1e01e76:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:876:18
 1e01e78:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:878:19
 1e01e7a:    51 60             	r1 = b[r0 + 5] (u)			  ## pmu_analog.c:881:5
 1e01e7c:    21 fd f8 19       	r1 = r1 & 248			  ## pmu_analog.c:881:5
 1e01e80:    01 fd 03 19       	r1 = r1 | 3			  ## pmu_analog.c:881:5
 1e01e84:    59 60             	b[r0 + 5] = r1			  ## pmu_analog.c:881:5
 1e01e86:    a1 60             	r1 = b[r0 + 10] (u)			  ## pmu_analog.c:882:5
 1e01e88:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:882:5
 1e01e8c:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:882:5
 1e01e90:    a9 60             	b[r0 + 10] = r1			  ## pmu_analog.c:882:5
 1e01e92:    b1 60             	r1 = b[r0 + 11] (u)			  ## pmu_analog.c:883:5
 1e01e94:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:883:5
 1e01e98:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:883:5
 1e01e9c:    b9 60             	b[r0 + 11] = r1			  ## pmu_analog.c:883:5
 1e01e9e:    41 60             	r1 = b[r0 + 4] (u)			  ## pmu_analog.c:886:5
 1e01ea0:    02 f9 4c 41       	r2 = b[r4 + 332] (u)			  ## pmu_analog.c:886:5
 1e01ea4:    21 fd c7 19       	r1 = r1 & 199			  ## pmu_analog.c:886:5
 1e01ea8:    d2 c0             	r2 = r2 << 3			  ## pmu_analog.c:886:5
 1e01eaa:    22 fd 38 29       	r2 = r2 & 56			  ## pmu_analog.c:886:5
 1e01eae:    51 b4             	r1 |= r2			  ## pmu_analog.c:886:5
 1e01eb0:    49 60             	b[r0 + 4] = r1			  ## pmu_analog.c:886:5
 1e01eb2:    54 01             	{pc, r4} = [sp++]			  ## pmu_analog.c:887:1


power_set_soft_poweroff:
 1e01eb4:    c0 ff f0 20 00 00 	r0 = 8432 <charge_mode : 20f0 >			  ## power_hw.c:1343:0
 1e01eba:    02 70             	r2 = 0			  ## power_hw.c:1344:17
 1e01ebc:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1344:17
 1e01ebe:    c0 ff c9 0f 1a 00 	r0 = 1707977 <uECC_vli_cmp_unsafe+0x99FCD : 1a0fc9 >			  ## power_hw.c:1344:17
 1e01ec4:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1345:20
 1e01ec6:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:1345:20
 1e01ecc:    03 f9 36 10       	r3 = b[r1 + 54] (u)			  ## power_hw.c:1347:17
 1e01ed0:    07 36             	if (r3 != 0) goto 14 <power_set_soft_poweroff+0x2C : 1e01ee0 >			  ## power_hw.c:1347:17
 1e01ed2:    1a 60             	b[r0 + 1] = r2			  ## power_hw.c:1358:22
 1e01ed4:    01 f9 37 10       	r1 = b[r1 + 55] (u)			  ## power_hw.c:1359:21
 1e01ed8:    0b 32             	if (r1 != 0) goto 22 <power_set_soft_poweroff+0x3C : 1e01ef0 >			  ## power_hw.c:1359:21
 1e01eda:    00 70             	r0 = 0			  ## power_hw.c:1366:13
 1e01edc:    90 f3 54 0f       	call 2105000 <power_set_soft_poweroff_legacy : 3d88 >			  ## power_hw.c:1366:13
 1e01ee0:    12 70             	r2 = 1
 1e01ee2:    1a 60             	b[r0 + 1] = r2			  ## power_hw.c:1348:22
 1e01ee4:    01 f9 37 10       	r1 = b[r1 + 55] (u)			  ## power_hw.c:1349:21
 1e01ee8:    01 22             	if (r1 == 0) goto 2 <power_set_soft_poweroff+0x38 : 1e01eec >			  ## power_hw.c:1349:21
 1e01eea:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1350:28
 1e01eec:    90 f3 24 0f       	call 2104904 <power_set_soft_poweroff_advance : 3d38 >
 1e01ef0:    11 70             	r1 = 1
 1e01ef2:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1360:28
 1e01ef4:    10 70             	r0 = 1			  ## power_hw.c:1362:13
 1e01ef6:    90 f3 47 0f       	call 2104974 <power_set_soft_poweroff_legacy : 3d88 >			  ## power_hw.c:1362:13


app_charge_event_handler:
 1e01efa:    74 01             	[--sp] = {rets, r4}			  ## app_charge.c:152:0
 1e01efc:    00 04             	r0 = r0.b0 (u)			  ## app_charge.c:152:0
 1e01efe:    50 e0 62 80       	if (r0 > 5) goto 196 <.GJTIE213_0_0_+0xB6 : 1e01fc6 >			  ## app_charge.c:152:0
 1e01f02:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_charge.c:152:0
 1e01f08:    a0 00             	tbb [r0]			  ## app_charge.c:152:0


.GJTIS213_0_0_:
 1e01f0a:    03     < 3 : 0x3 >
 1e01f0b:    1d     < 29 : 0x1D >
 1e01f0c:    26     < 38 : 0x26 >
 1e01f0d:    5e     < 94 : 0x5E >
 1e01f0e:    32     < 50 : 0x32 >
 1e01f0f:    4d     < 77 : 0x4D >
 1e01f10:    20 70             	r0 = 2			  ## app_charge.c:68:5
 1e01f12:    bf f3 0e f3       	call -6628 <power_set_mode : 1e00532 >			  ## app_charge.c:68:5
 1e01f16:    33 16             	call -922 <led_8888_init : 1e01b7e >			  ## app_charge.c:71:5
 1e01f18:    00 70             	r0 = 0			  ## app_charge.c:42:5
 1e01f1a:    42 16             	call -892 <ble_module_enable : 1e01ba0 >			  ## app_charge.c:42:5
 1e01f1c:    ea 16             	call -556 <time_down_over_deal : 1e01cf2 >			  ## app_charge.c:53:4
 1e01f1e:    80 f3 35 55       	call 43626 <sys_key_event_disable : 1e0c98c >			  ## app_charge.c:54:4
 1e01f22:    00 70             	r0 = 0			  ## app_charge.c:56:2
 1e01f24:    f1 7f             	r1 = 255			  ## app_charge.c:56:2
 1e01f26:    76 16             	call -788 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_charge.c:56:2
 1e01f28:    40 70             	r0 = 4			  ## app_charge.c:57:2
 1e01f2a:    11 70             	r1 = 1			  ## app_charge.c:57:2
 1e01f2c:    bf f3 af f6       	call -4770 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_charge.c:57:2
 1e01f30:    c1 ff 24 1b e0 01 	r1 = 31464228 <update_charge_ui : 1e01b24 >			  ## app_charge.c:58:25
 1e01f36:    00 70             	r0 = 0			  ## app_charge.c:58:25
 1e01f38:    02 fb 90 01       	r2 = 400 <BTCTLER_CL_BSS_SIZE+0x4 : 190 >			  ## app_charge.c:58:25
 1e01f3c:    13 70             	r3 = 1			  ## app_charge.c:58:25
 1e01f3e:    80 f3 c0 49       	call 37760 <usr_timer_add : 1e0b2c2 >			  ## app_charge.c:58:25
 1e01f42:    13 18             	goto 38 <.GJTIE213_0_0_+0x5A : 1e01f6a >			  ## app_charge.c:58:25
 1e01f44:    80 59             	r0 = h[r4 + 48] (u)			  ## app_charge.c:99:8
 1e01f46:    02 20             	if (r0 == 0) goto 4 <.GJTIE213_0_0_+0x3C : 1e01f4c >			  ## app_charge.c:99:8
 1e01f48:    80 f3 c7 49       	call 37774 <usr_timeout_del : 1e0b2da >			  ## app_charge.c:100:9
 1e01f4c:    00 70             	r0 = 0
 1e01f4e:    88 59             	h[r4 + 48] = r0			  ## app_charge.c:101:23
 1e01f50:    f1 7f             	r1 = 255			  ## app_charge.c:102:2
 1e01f52:    14 01             	{rets, r4} = [sp++]			  ## app_charge.c:102:2
 1e01f54:    5f 1e             	goto -834 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_charge.c:102:2
 1e01f56:    ef 16             	call -546 <charge_close : 1e01d36 >			  ## app_charge.c:85:5
 1e01f58:    40 70             	r0 = 4			  ## app_charge.c:87:5
 1e01f5a:    31 70             	r1 = 3			  ## app_charge.c:87:5
 1e01f5c:    bf f3 97 f6       	call -4818 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_charge.c:87:5
 1e01f60:    80 59             	r0 = h[r4 + 48] (u)			  ## app_charge.c:88:8
 1e01f62:    02 20             	if (r0 == 0) goto 4 <.GJTIE213_0_0_+0x58 : 1e01f68 >			  ## app_charge.c:88:8
 1e01f64:    80 f3 b9 49       	call 37746 <usr_timeout_del : 1e0b2da >			  ## app_charge.c:89:9
 1e01f68:    00 70             	r0 = 0			  ## app_charge.c:90:23
 1e01f6a:    88 59             	h[r4 + 48] = r0
 1e01f6c:    54 01             	{pc, r4} = [sp++]
 1e01f6e:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:167:17
 1e01f72:    08 20             	if (r0 == 0) goto 16 <.GJTIE213_0_0_+0x74 : 1e01f84 >			  ## charge.c:167:17
 1e01f74:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:168:31
 1e01f78:    20 04             	r0 = r0.l (u)			  ## charge.c:168:9
 1e01f7a:    80 f3 c1 48       	call 37250 <usr_timer_del : 1e0b100 >			  ## charge.c:168:9
 1e01f7e:    00 70             	r0 = 0			  ## charge.c:168:9
 1e01f80:    10 f6 bc 41       	[r4 + 444] = r0			  ## charge.c:169:30
 1e01f84:    c0 ff 0d 00 05 00 	r0 = 327693 <text_size+0x374C1 : 5000d >			  ## charge.c:172:10
 1e01f8a:    bf f3 57 f2       	call -6994 <adc_get_voltage : 1e0043c >			  ## charge.c:172:10
 1e01f8e:    80 c0             	r0 = r0 << 2			  ## charge.c:172:38
 1e01f90:    40 d0             	r0 = r0 >> 1			  ## charge.c:172:9
 1e01f92:    03 ff e1 05 18 00 	if (r0 < 1505) goto 48 <.GJTIE213_0_0_+0xB8 : 1e01fc8 >			  ## charge.c:172:9
 1e01f98:    00 f6 b0 41       	r0 = [r4 + 432]			  ## charge.c:173:31
 1e01f9c:    40 60             	r0 = b[r0 + 4] (u)			  ## charge.c:173:9
 1e01f9e:    bf f3 58 f2       	call -6992 <set_charge_mA : 1e00452 >			  ## charge.c:173:9
 1e01fa2:    23 18             	goto 70 <.GJTIE213_0_0_+0xDA : 1e01fea >			  ## charge.c:173:9
 1e01fa4:    c8 16             	call -624 <charge_close : 1e01d36 >			  ## app_charge.c:134:5
 1e01fa6:    30 70             	r0 = 3			  ## app_charge.c:135:5
 1e01fa8:    bf f3 c3 f2       	call -6778 <power_set_mode : 1e00532 >			  ## app_charge.c:135:5
 1e01fac:    80 f3 1f 55       	call 43582 <sys_key_event_enable : 1e0c9ee >			  ## app_charge.c:136:2
 1e01fb0:    eb 16             	call -554 <vbat_check_init : 1e01d88 >			  ## app_charge.c:138:5
 1e01fb2:    80 f3 a3 56       	call 44358 <get_current_app : 1e0ccfc >			  ## app_charge.c:141:11
 1e01fb6:    07 20             	if (r0 == 0) goto 14 <.GJTIE213_0_0_+0xB6 : 1e01fc6 >
 1e01fb8:    30 40             	r0 = [r0 + 12]			  ## app_charge.c:144:19
 1e01fba:    c1 ff 54 f0 e0 01 	r1 = 31518804 <bluetooth_base_uuid+0x4A : 1e0f054 >			  ## app_charge.c:144:7
 1e01fc0:    98 f3 98 27       	call 3166000 <strcmp : 106ef4 >			  ## app_charge.c:144:7
 1e01fc4:    1e 20             	if (r0 == 0) goto 60 <.GJTIE213_0_0_+0xF2 : 1e02002 >			  ## app_charge.c:144:7
 1e01fc6:    54 01             	{pc, r4} = [sp++]
 1e01fc8:    00 70             	r0 = 0			  ## charge.c:175:9
 1e01fca:    bf f3 42 f2       	call -7036 <set_charge_mA : 1e00452 >			  ## charge.c:175:9
 1e01fce:    00 f6 c0 41       	r0 = [r4 + 448]			  ## charge.c:176:22
 1e01fd2:    0b 30             	if (r0 != 0) goto 22 <.GJTIE213_0_0_+0xDA : 1e01fea >			  ## charge.c:176:22
 1e01fd4:    c1 ff 74 04 e0 01 	r1 = 31458420 <charge_cc_check : 1e00474 >			  ## charge.c:177:32
 1e01fda:    c2 ff 60 ea 00 00 	r2 = 60000 <_nv_pre_end+0x2F60 : ea60 >			  ## charge.c:177:32
 1e01fe0:    00 70             	r0 = 0			  ## charge.c:177:32
 1e01fe2:    80 f3 18 4a       	call 37936 <sys_timer_add : 1e0b416 >			  ## charge.c:177:32
 1e01fe6:    10 f6 c0 41       	[r4 + 448] = r0			  ## charge.c:177:30
 1e01fea:    bf f3 6c f3       	call -6440 <power_wakeup_enable_with_port : 1e006c6 >			  ## charge.c:181:5
 1e01fee:    c0 ff 1a 18 1a 00 	r0 = 1710106 <uECC_vli_cmp_unsafe+0x9A81E : 1a181a >			  ## charge.c:181:5
 1e01ff4:    01 60             	r1 = b[r0 + 0] (u)			  ## charge.c:183:5
 1e01ff6:    11 b0             	r1 |= 1			  ## charge.c:183:5
 1e01ff8:    09 60             	b[r0 + 0] = r1			  ## charge.c:183:5
 1e01ffa:    00 70             	r0 = 0			  ## charge.c:185:5
 1e01ffc:    14 01             	{rets, r4} = [sp++]			  ## charge.c:185:5
 1e01ffe:    ff f3 df f2       	goto -6722 <charge_event_to_user : 1e005c0 >			  ## charge.c:185:5
 1e02002:    58 17             	call -336 <power_set_soft_poweroff : 1e01eb4 >			  ## app_charge.c:145:13


idle_event_handler:
 1e02004:    34 00             	[--sp] = rets			  ## app_idle.c:32:0
 1e02006:    00 52             	r0 = h[r1 + 0] (u)			  ## app_idle.c:33:20
 1e02008:    40 e0 08 10       	if (r0 != 4) goto 16 <idle_event_handler+0x18 : 1e0201c >
 1e0200c:    10 42             	r0 = [r1 + 4]			  ## app_idle.c:40:25
 1e0200e:    c2 ff 00 47 48 43 	r2 = 1128810240 <uECC_vli_cmp_unsafe+0x137D704 : 1484700 >			  ## app_idle.c:40:29
 1e02014:    20 f2 02 10       	if (r0 != r2) goto 4 <idle_event_handler+0x18 : 1e0201c >			  ## app_idle.c:40:29
 1e02018:    80 62             	r0 = b[r1 + 8] (u)			  ## app_idle.c:41:13
 1e0201a:    6f 17             	call -290 <app_charge_event_handler : 1e01efa >			  ## app_idle.c:41:13
 1e0201c:    00 70             	r0 = 0			  ## app_idle.c:48:1
 1e0201e:    30 00             	pc = [sp++]			  ## app_idle.c:48:1


__errno:
 1e02020:    c0 ff 9c 20 00 00 	r0 = 8348 <__errno.err : 209c >			  ## app_main.c:217:0
 1e02026:    20 00             	rts			  ## app_main.c:219:5


power_event_to_user:
 1e02028:    34 00             	[--sp] = rets			  ## app_power_manage.c:45:0
 1e0202a:    f4 0b             	sp += -24			  ## app_power_manage.c:45:0
 1e0202c:    41 70             	r1 = 4			  ## app_power_manage.c:45:0
 1e0202e:    91 f5 00 00       	h[sp] = r1			  ## app_power_manage.c:47:12
 1e02032:    c1 ff 00 57 4f 50 	r1 = 1347376896 <uECC_vli_cmp_unsafe+0x3EE704 : 4f5700 >			  ## app_power_manage.c:48:12
 1e02038:    19 02             	[sp+4] = r1			  ## app_power_manage.c:48:12
 1e0203a:    d0 f5 08 00       	b[sp+8] = r0			  ## app_power_manage.c:49:19
 1e0203e:    00 70             	r0 = 0			  ## app_power_manage.c:49:19
 1e02040:    38 02             	[sp+12] = r0			  ## app_power_manage.c:50:19
 1e02042:    00 a0             	r0 = sp + 0			  ## app_power_manage.c:50:19
 1e02044:    80 f3 66 54       	call 43212 <sys_event_notify : 1e0c914 >			  ## app_power_manage.c:51:5
 1e02048:    0c 0a             	sp += 24
 1e0204a:    30 00             	pc = [sp++]			  ## app_power_manage.c:52:1


vbat_check_slow:
 1e0204c:    74 01             	[--sp] = {rets, r4}			  ## app_power_manage.c:173:0
 1e0204e:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:173:0
 1e02054:    80 49             	r0 = [r4 + 96]			  ## app_power_manage.c:174:9
 1e02056:    09 30             	if (r0 != 0) goto 18 <vbat_check_slow+0x1E : 1e0206a >
 1e02058:    c1 ff 02 21 e0 01 	r1 = 31465730 <vbat_check : 1e02102 >			  ## app_power_manage.c:175:27
 1e0205e:    00 70             	r0 = 0			  ## app_power_manage.c:175:27
 1e02060:    a2 70             	r2 = 10			  ## app_power_manage.c:175:27
 1e02062:    13 70             	r3 = 1			  ## app_power_manage.c:175:27
 1e02064:    80 f3 2d 49       	call 37466 <usr_timer_add : 1e0b2c2 >			  ## app_power_manage.c:175:27
 1e02068:    88 49             	[r4 + 96] = r0			  ## app_power_manage.c:175:25
 1e0206a:    01 f9 b4 41       	r1 = b[r4 + 436] (u)			  ## charge.c:96:20
 1e0206e:    70 49             	r0 = [r4 + 92]			  ## charge.c:96:20
 1e02070:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:180:9
 1e02072:    04 22             	if (r1 == 0) goto 8 <vbat_check_slow+0x30 : 1e0207c >			  ## app_power_manage.c:177:9
 1e02074:    c1 ff 60 ea 00 00 	r1 = 60000 <_nv_pre_end+0x2F60 : ea60 >			  ## app_power_manage.c:178:9
 1e0207a:    02 18             	goto 4 <vbat_check_slow+0x34 : 1e02080 >			  ## app_power_manage.c:178:9
 1e0207c:    01 fb 30 75       	r1 = 30000 <nvbss_size+0x1F0 : 7530 >			  ## app_power_manage.c:180:9
 1e02080:    14 01             	{rets, r4} = [sp++]
 1e02082:    c0 f3 2b 49       	goto 37462 <sys_timer_modify : 1e0b2dc >


battery_value_to_phone_level:
 1e02086:    74 01             	[--sp] = {rets, r4}			  ## app_power_manage.c:148:0
 1e02088:    bf f3 58 f5       	call -5456 <get_vbat_level : 1e00b3c >			  ## app_power_manage.c:115:19
 1e0208c:    c3 ff c0 23 00 00 	r3 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:115:19
 1e02092:    a1 57             	r1 = h[r3 + 52] (u)			  ## app_power_manage.c:116:9
 1e02094:    02 08             	r2 = r0			  ## app_power_manage.c:115:19
 1e02096:    17 32             	if (r1 != 0) goto 46 <battery_value_to_phone_level+0x40 : 1e020c6 >			  ## app_power_manage.c:115:19
 1e02098:    00 f9 b5 31       	r0 = b[r3 + 437] (u)
 1e0209c:    02 30             	if (r0 != 0) goto 4 <battery_value_to_phone_level+0x1C : 1e020a2 >
 1e0209e:    bf f3 68 f3       	call -6448 <cpu_reset : 1e00772 >			  ## charge.c:343:5
 1e020a2:    04 f6 b0 31       	r4 = [r3 + 432]
 1e020a6:    20 68             	r0 = b[r4 + 2] (u)
 1e020a8:    00 e1 03 30       	if (r0 < 16) goto 6 <battery_value_to_phone_level+0x2C : 1e020b2 >
 1e020ac:    bf f3 61 f3       	call -6462 <cpu_reset : 1e00772 >			  ## charge.c:344:5
 1e020b0:    20 68             	r0 = b[r4 + 2] (u)			  ## charge.c:344:5
 1e020b2:    c1 ff 5c e9 e0 01 	r1 = 31517020 <update_target_end : 1e0e95c >			  ## charge.c:345:12
 1e020b8:    40 f8 00 10       	r0 = h[r1+r0<<1] (u)			  ## app_power_manage.c:118:31
 1e020bc:    c0 89             	r0 += -100			  ## app_power_manage.c:118:55
 1e020be:    a1 70             	r1 = 10			  ## app_power_manage.c:118:62
 1e020c0:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## app_power_manage.c:118:62
 1e020c4:    a9 57             	h[r3 + 52] = r1			  ## app_power_manage.c:118:28
 1e020c6:    c0 ff b0 25 00 00 	r0 = 9648 <adv_data : 25b0 >			  ## app_power_manage.c:124:28
 1e020cc:    03 f7 5c 00       	r3 = h[r0 + 92] (u)			  ## app_power_manage.c:124:28
 1e020d0:    00 70             	r0 = 0			  ## app_power_manage.c:124:28
 1e020d2:    32 f2 14 90       	if (r2 <= r3) goto 40 <battery_value_to_phone_level+0x78 : 1e020fe >			  ## app_power_manage.c:124:28
 1e020d6:    61 04             	r1 = r1.l (u)			  ## app_power_manage.c:130:73
 1e020d8:    e1 b2             	r1 = r1 - r3			  ## app_power_manage.c:130:92
 1e020da:    e2 b4             	r2 = r2 - r3			  ## app_power_manage.c:130:37
 1e020dc:    02 fe 64 29       	r2 = r2 * 100			  ## app_power_manage.c:130:64
 1e020e0:    c0 fe 10 22       	r2 = r2 / r1 (u)			  ## app_power_manage.c:130:70
 1e020e4:    a3 04             	r3 = r2.l (u)			  ## app_power_manage.c:131:13
 1e020e6:    41 76             	r1 = 100			  ## app_power_manage.c:131:13
 1e020e8:    43 e6 04 80       	if (r3 > 100) goto 8 <battery_value_to_phone_level+0x6E : 1e020f4 >			  ## app_power_manage.c:131:13
 1e020ec:    83 04             	r3 = r2.b0 (u)			  ## app_power_manage.c:130:23
 1e020ee:    21 08             	r1 = r2			  ## app_power_manage.c:130:23
 1e020f0:    53 e0 05 30       	if (r3 < 5) goto 10 <battery_value_to_phone_level+0x78 : 1e020fe >			  ## app_power_manage.c:130:23
 1e020f4:    40 04             	r0 = r1.b0 (u)			  ## app_power_manage.c:152:9
 1e020f6:    b0 8f             	r0 += -5			  ## app_power_manage.c:156:35
 1e020f8:    a1 70             	r1 = 10			  ## app_power_manage.c:156:40
 1e020fa:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## app_power_manage.c:156:40
 1e020fe:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:159:1
 1e02100:    54 01             	{pc, r4} = [sp++]			  ## app_power_manage.c:159:1


vbat_check:
 1e02102:    76 01             	[--sp] = {rets, r6-r4}			  ## app_power_manage.c:210:0
 1e02104:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## app_power_manage.c:210:0
 1e0210a:    96 5b             	r6 = h[r5 + 50] (u)			  ## app_power_manage.c:221:10
 1e0210c:    bf f3 16 f5       	call -5588 <get_vbat_level : 1e00b3c >			  ## app_power_manage.c:224:20
 1e02110:    04 08             	r4 = r0			  ## app_power_manage.c:224:20
 1e02112:    02 2c             	if (r6 == 0) goto 4 <vbat_check+0x16 : 1e02118 >			  ## app_power_manage.c:224:20
 1e02114:    00 bd             	r0 = r6 + r4			  ## app_power_manage.c:224:37
 1e02116:    44 d0             	r4 = r0 >> 1			  ## app_power_manage.c:224:48
 1e02118:    9c 5b             	h[r5 + 50] = r4
 1e0211a:    b5 17             	call -150 <battery_value_to_phone_level : 1e02086 >			  ## app_power_manage.c:227:25
 1e0211c:    b8 6a             	b[r5 + 11] = r0			  ## app_power_manage.c:227:23
 1e0211e:    b0 6a             	r0 = b[r5 + 11] (u)			  ## app_power_manage.c:229:55
 1e02120:    c0 6a             	r0 = b[r5 + 12] (u)			  ## app_power_manage.c:231:13
 1e02122:    c1 ff b0 25 00 00 	r1 = 9648 <adv_data : 25b0 >			  ## app_power_manage.c:231:13
 1e02128:    02 f7 5c 10       	r2 = h[r1 + 92] (u)			  ## app_power_manage.c:233:58
 1e0212c:    10 80             	r0 += 1			  ## app_power_manage.c:231:13
 1e0212e:    c8 6a             	b[r5 + 12] = r0			  ## app_power_manage.c:231:13
 1e02130:    24 f2 03 80       	if (r4 > r2) goto 6 <vbat_check+0x38 : 1e0213a >			  ## app_power_manage.c:231:13
 1e02134:    d2 6a             	r2 = b[r5 + 13] (u)			  ## app_power_manage.c:234:20
 1e02136:    12 80             	r2 += 1			  ## app_power_manage.c:234:20
 1e02138:    da 6a             	b[r5 + 13] = r2			  ## app_power_manage.c:234:20
 1e0213a:    01 f7 5a 10       	r1 = h[r1 + 90] (u)			  ## app_power_manage.c:236:28
 1e0213e:    14 f2 03 80       	if (r4 > r1) goto 6 <vbat_check+0x46 : 1e02148 >			  ## app_power_manage.c:236:28
 1e02142:    e1 6a             	r1 = b[r5 + 14] (u)			  ## app_power_manage.c:237:21
 1e02144:    11 80             	r1 += 1			  ## app_power_manage.c:237:21
 1e02146:    e9 6a             	b[r5 + 14] = r1			  ## app_power_manage.c:237:21
 1e02148:    03 ff 2c 41 03 00 	if (r4 < 300) goto 6 <vbat_check+0x52 : 1e02154 >
 1e0214e:    f1 6a             	r1 = b[r5 + 15] (u)			  ## app_power_manage.c:241:27
 1e02150:    11 80             	r1 += 1			  ## app_power_manage.c:241:27
 1e02152:    f9 6a             	b[r5 + 15] = r1			  ## app_power_manage.c:241:27
 1e02154:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:245:18
 1e02156:    20 e0 7b 30       	if (r0 < 2) goto 246 <vbat_check+0x14E : 1e02250 >			  ## app_power_manage.c:245:18
 1e0215a:    00 f9 b4 51       	r0 = b[r5 + 436] (u)			  ## charge.c:96:20
 1e0215e:    0b 20             	if (r0 == 0) goto 22 <vbat_check+0x74 : 1e02176 >			  ## charge.c:96:20
 1e02160:    50 70             	r0 = 5			  ## app_power_manage.c:287:13
 1e02162:    62 17             	call -316 <power_event_to_user : 1e02028 >			  ## app_power_manage.c:287:13
 1e02164:    f0 6a             	r0 = b[r5 + 15] (u)			  ## app_power_manage.c:289:17
 1e02166:    20 e0 51 30       	if (r0 < 2) goto 162 <vbat_check+0x10A : 1e0220c >			  ## app_power_manage.c:289:17
 1e0216a:    00 f6 b0 51       	r0 = [r5 + 432]			  ## charge.c:325:20
 1e0216e:    40 60             	r0 = b[r0 + 4] (u)			  ## app_power_manage.c:290:17
 1e02170:    bf f3 6f f1       	call -7458 <set_charge_mA : 1e00452 >			  ## app_power_manage.c:290:17
 1e02174:    4b 18             	goto 150 <vbat_check+0x10A : 1e0220c >			  ## app_power_manage.c:290:17
 1e02176:    d0 6a             	r0 = b[r5 + 13] (u)			  ## app_power_manage.c:248:17
 1e02178:    20 e0 14 30       	if (r0 < 2) goto 40 <vbat_check+0xA2 : 1e021a4 >			  ## app_power_manage.c:248:17
 1e0217c:    00 6b             	r0 = b[r5 + 16] (u)			  ## app_power_manage.c:249:30
 1e0217e:    10 80             	r0 += 1			  ## app_power_manage.c:249:30
 1e02180:    08 6b             	b[r5 + 16] = r0			  ## app_power_manage.c:249:30
 1e02182:    04 70             	r4 = 0			  ## app_power_manage.c:250:31
 1e02184:    1c 6b             	b[r5 + 17] = r4			  ## app_power_manage.c:250:31
 1e02186:    2c 6b             	b[r5 + 18] = r4			  ## app_power_manage.c:251:34
 1e02188:    21 70             	r1 = 2			  ## app_power_manage.c:252:28
 1e0218a:    00 04             	r0 = r0.b0 (u)			  ## app_power_manage.c:249:30
 1e0218c:    39 6b             	b[r5 + 19] = r1			  ## app_power_manage.c:252:28
 1e0218e:    60 e0 2b 90       	if (r0 <= 6) goto 86 <vbat_check+0xE6 : 1e021e8 >			  ## app_power_manage.c:252:28
 1e02192:    0c 6b             	b[r5 + 16] = r4			  ## app_power_manage.c:255:35
 1e02194:    20 70             	r0 = 2			  ## app_power_manage.c:256:21
 1e02196:    48 17             	call -368 <power_event_to_user : 1e02028 >			  ## app_power_manage.c:256:21
 1e02198:    00 f7 60 50       	r0 = h[r5 + 96] (u)			  ## app_power_manage.c:257:21
 1e0219c:    80 f3 b0 47       	call 36704 <usr_timer_del : 1e0b100 >			  ## app_power_manage.c:257:21
 1e021a0:    8c 4b             	[r5 + 96] = r4			  ## app_power_manage.c:258:37
 1e021a2:    34 18             	goto 104 <vbat_check+0x10A : 1e0220c >			  ## app_power_manage.c:258:37
 1e021a4:    e0 6a             	r0 = b[r5 + 14] (u)			  ## app_power_manage.c:260:24
 1e021a6:    20 e0 24 30       	if (r0 < 2) goto 72 <vbat_check+0xF0 : 1e021f2 >			  ## app_power_manage.c:260:24
 1e021aa:    10 6b             	r0 = b[r5 + 17] (u)			  ## app_power_manage.c:261:31
 1e021ac:    11 90             	r1 = r0 + 1			  ## app_power_manage.c:261:31
 1e021ae:    19 6b             	b[r5 + 17] = r1			  ## app_power_manage.c:261:31
 1e021b0:    00 70             	r0 = 0			  ## app_power_manage.c:261:31
 1e021b2:    08 6b             	b[r5 + 16] = r0			  ## app_power_manage.c:262:31
 1e021b4:    28 6b             	b[r5 + 18] = r0			  ## app_power_manage.c:263:34
 1e021b6:    10 70             	r0 = 1			  ## app_power_manage.c:263:34
 1e021b8:    38 6b             	b[r5 + 19] = r0			  ## app_power_manage.c:264:28
 1e021ba:    42 04             	r2 = r1.b0 (u)			  ## app_power_manage.c:261:31
 1e021bc:    11 70             	r1 = 1			  ## app_power_manage.c:265:60
 1e021be:    12 e0 01 80       	if (r2 > 1) goto 2 <vbat_check+0xC2 : 1e021c4 >			  ## app_power_manage.c:265:60
 1e021c2:    01 70             	r1 = 0			  ## app_power_manage.c:265:60
 1e021c4:    42 e0 01 80       	if (r2 > 4) goto 2 <vbat_check+0xC8 : 1e021ca >
 1e021c8:    00 70             	r0 = 0			  ## app_power_manage.c:266:61
 1e021ca:    02 f9 64 50       	r2 = b[r5 + 100] (u)
 1e021ce:    01 34             	if (r2 != 0) goto 2 <vbat_check+0xD0 : 1e021d2 >
 1e021d0:    10 08             	r0 = r1			  ## app_power_manage.c:265:43
 1e021d2:    10 e0 1b 10       	if (r0 != 1) goto 54 <vbat_check+0x10A : 1e0220c >
 1e021d6:    10 70             	r0 = 1
 1e021d8:    10 f9 64 50       	b[r5 + 100] = r0
 1e021dc:    00 70             	r0 = 0
 1e021de:    18 6b             	b[r5 + 17] = r0			  ## app_power_manage.c:268:35
 1e021e0:    60 4b             	r0 = [r5 + 88]			  ## app_power_manage.c:269:26
 1e021e2:    14 30             	if (r0 != 0) goto 40 <vbat_check+0x10A : 1e0220c >			  ## app_power_manage.c:269:26
 1e021e4:    10 70             	r0 = 1			  ## app_power_manage.c:271:25
 1e021e6:    11 18             	goto 34 <vbat_check+0x108 : 1e0220a >			  ## app_power_manage.c:271:25
 1e021e8:    cc 6a             	b[r5 + 12] = r4			  ## app_power_manage.c:295:18
 1e021ea:    dc 6a             	b[r5 + 13] = r4			  ## app_power_manage.c:296:21
 1e021ec:    ec 6a             	b[r5 + 14] = r4			  ## app_power_manage.c:297:22
 1e021ee:    fc 6a             	b[r5 + 15] = r4			  ## app_power_manage.c:298:28
 1e021f0:    56 01             	{pc, r6-r4} = [sp++]			  ## app_power_manage.c:316:1
 1e021f2:    20 6b             	r0 = b[r5 + 18] (u)			  ## app_power_manage.c:275:33
 1e021f4:    11 90             	r1 = r0 + 1			  ## app_power_manage.c:275:33
 1e021f6:    29 6b             	b[r5 + 18] = r1			  ## app_power_manage.c:275:33
 1e021f8:    00 70             	r0 = 0			  ## app_power_manage.c:277:31
 1e021fa:    88 5a             	h[r5 + 16] = r0			  ## app_power_manage.c:277:31
 1e021fc:    30 6b             	r0 = b[r5 + 19] (u)			  ## app_power_manage.c:279:25
 1e021fe:    41 04             	r1 = r1.b0 (u)			  ## app_power_manage.c:275:33
 1e02200:    31 e0 05 30       	if (r1 < 3) goto 10 <vbat_check+0x10C : 1e0220e >			  ## app_power_manage.c:275:33
 1e02204:    04 20             	if (r0 == 0) goto 8 <vbat_check+0x10C : 1e0220e >
 1e02206:    00 70             	r0 = 0
 1e02208:    38 6b             	b[r5 + 19] = r0			  ## app_power_manage.c:281:36
 1e0220a:    0e 17             	call -484 <power_event_to_user : 1e02028 >
 1e0220c:    30 6b             	r0 = b[r5 + 19] (u)			  ## app_power_manage.c:300:13
 1e0220e:    04 70             	r4 = 0			  ## app_power_manage.c:295:18
 1e02210:    cc 6a             	b[r5 + 12] = r4			  ## app_power_manage.c:295:18
 1e02212:    dc 6a             	b[r5 + 13] = r4			  ## app_power_manage.c:296:21
 1e02214:    ec 6a             	b[r5 + 14] = r4			  ## app_power_manage.c:297:22
 1e02216:    fc 6a             	b[r5 + 15] = r4			  ## app_power_manage.c:298:28
 1e02218:    20 e0 1a 00       	if (r0 == 2) goto 52 <vbat_check+0x14E : 1e02250 >			  ## app_power_manage.c:298:28
 1e0221c:    00 f7 60 50       	r0 = h[r5 + 96] (u)			  ## app_power_manage.c:301:13
 1e02220:    80 f3 6e 47       	call 36572 <usr_timer_del : 1e0b100 >			  ## app_power_manage.c:301:13
 1e02224:    8c 4b             	[r5 + 96] = r4			  ## app_power_manage.c:302:29
 1e02226:    2f 17             	call -418 <battery_value_to_phone_level : 1e02086 >			  ## app_power_manage.c:303:33
 1e02228:    b8 6a             	b[r5 + 11] = r0			  ## app_power_manage.c:303:31
 1e0222a:    b0 6a             	r0 = b[r5 + 11] (u)			  ## app_power_manage.c:304:17
 1e0222c:    c4 ff 48 08 00 00 	r4 = 2120 <old_battery_level : 848 >			  ## app_power_manage.c:304:17
 1e02232:    01 68             	r1 = b[r4 + 0] (u)			  ## app_power_manage.c:304:38
 1e02234:    10 f2 05 10       	if (r0 != r1) goto 10 <vbat_check+0x140 : 1e02242 >			  ## app_power_manage.c:304:38
 1e02238:    40 6b             	r0 = b[r5 + 20] (u)			  ## app_power_manage.c:307:21
 1e0223a:    01 f9 b4 51       	r1 = b[r5 + 436] (u)			  ## charge.c:96:20
 1e0223e:    10 f2 02 00       	if (r0 == r1) goto 4 <vbat_check+0x144 : 1e02246 >			  ## charge.c:96:20
 1e02242:    30 70             	r0 = 3
 1e02244:    f1 16             	call -542 <power_event_to_user : 1e02028 >
 1e02246:    00 f9 b4 51       	r0 = b[r5 + 436] (u)			  ## charge.c:96:20
 1e0224a:    48 6b             	b[r5 + 20] = r0			  ## app_power_manage.c:312:32
 1e0224c:    b0 6a             	r0 = b[r5 + 11] (u)			  ## app_power_manage.c:313:33
 1e0224e:    08 68             	b[r4 + 0] = r0			  ## app_power_manage.c:313:31
 1e02250:    56 01             	{pc, r6-r4} = [sp++]			  ## app_power_manage.c:316:1


app_state_idle_query:
 1e02252:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:1350:0
 1e02258:    00 f9 68 00       	r0 = b[r0 + 104] (u)			  ## app_spp_and_le.c:1350:0
 1e0225c:    11 70             	r1 = 1			  ## app_spp_and_le.c:1350:0
 1e0225e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## app_spp_and_le.c:1351:5
 1e02262:    20 00             	rts			  ## app_spp_and_le.c:1351:5


state_machine:
 1e02264:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:638:0
 1e02266:    fc 0b             	sp += -8			  ## app_spp_and_le.c:638:0
 1e02268:    11 e0 62 10       	if (r1 != 1) goto 196 <state_machine+0xCC : 1e02330 >			  ## app_spp_and_le.c:638:0
 1e0226c:    61 24             	if (r2 == 0) goto 194 <state_machine+0xCC : 1e02330 >			  ## app_spp_and_le.c:638:0
 1e0226e:    10 44             	r0 = [r2 + 4]			  ## app_spp_and_le.c:646:21
 1e02270:    10 e0 5e 10       	if (r0 != 1) goto 188 <state_machine+0xCC : 1e02330 >
 1e02274:    c0 ff fc f0 e0 01 	r0 = 31518972 <bluetooth_base_uuid+0xF2 : 1e0f0fc >			  ## app_spp_and_le.c:570:5
 1e0227a:    80 f3 8f b3       	call 91934 <clk_set : 1e1899c >			  ## app_spp_and_le.c:570:5
 1e0227e:    c0 ff d0 31 00 00 	r0 = 12752 <hdl.15 : 31d0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e02284:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e02286:    80 f3 27 6a       	call 54350 <bt_pll_para : 1e0f6d8 >			  ## app_spp_and_le.c:574:5
 1e0228a:    80 f3 c6 27       	call 20364 <__set_user_ctrl_conn_num : 1e0721a >			  ## app_spp_and_le.c:395:5
 1e0228e:    80 f3 dd 27       	call 20410 <__set_support_msbc_flag : 1e0724c >			  ## app_spp_and_le.c:396:5
 1e02292:    80 f3 f2 27       	call 20452 <__bt_set_update_battery_time : 1e0727a >			  ## app_spp_and_le.c:400:5
 1e02296:    80 f3 0a 28       	call 20500 <__set_page_timeout_value : 1e072ae >			  ## app_spp_and_le.c:402:5
 1e0229a:    80 f3 0f 28       	call 20510 <__set_super_timeout_value : 1e072bc >			  ## app_spp_and_le.c:403:5
 1e0229e:    80 f3 14 28       	call 20520 <__set_simple_pair_param : 1e072ca >			  ## app_spp_and_le.c:413:5
 1e022a2:    24 a0             	r4 = sp + 2			  ## app_spp_and_le.c:413:5
 1e022a4:    40 08             	r0 = r4			  ## app_spp_and_le.c:423:9
 1e022a6:    80 f3 33 28       	call 20582 <lib_make_ble_address : 1e07310 >			  ## app_spp_and_le.c:423:9
 1e022aa:    40 08             	r0 = r4			  ## app_spp_and_le.c:426:9
 1e022ac:    80 f3 4c 9f       	call 81560 <le_controller_set_mac : 1e16148 >			  ## app_spp_and_le.c:426:9
 1e022b0:    40 08             	r0 = r4			  ## app_spp_and_le.c:432:9
 1e022b2:    80 f3 41 9f       	call 81538 <le_controller_get_mac : 1e16138 >			  ## app_spp_and_le.c:432:9
 1e022b6:    80 f3 4a 28       	call 20628 <__change_hci_class_type : 1e0734e >			  ## app_spp_and_le.c:583:5
 1e022ba:    80 f3 4e 28       	call 20636 <btstack_init : 1e0735a >			  ## app_spp_and_le.c:586:5
 1e022be:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:586:5
 1e022c4:    b0 49             	r0 = [r4 + 108]			  ## app_spp_and_le.c:589:28
 1e022c6:    01 70             	r1 = 0			  ## app_spp_and_le.c:589:4
 1e022c8:    a5 14             	call -1718 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_spp_and_le.c:589:4
 1e022ca:    00 70             	r0 = 0			  ## app_spp_and_le.c:591:5
 1e022cc:    01 70             	r1 = 0			  ## app_spp_and_le.c:591:5
 1e022ce:    bf f3 de f4       	call -5700 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_spp_and_le.c:591:5
 1e022d2:    bf f3 33 f4       	call -6042 <get_vbat_level : 1e00b3c >			  ## app_spp_and_le.c:547:13
 1e022d6:    31 70             	r1 = 3			  ## app_spp_and_le.c:547:13
 1e022d8:    08 ff 86 01 09 00 	if (r0 > 390) goto 18 <state_machine+0x8C : 1e022f0 >			  ## app_spp_and_le.c:547:13
 1e022de:    21 70             	r1 = 2
 1e022e0:    08 ff 5e 01 05 00 	if (r0 > 350) goto 10 <state_machine+0x8C : 1e022f0 >
 1e022e6:    11 70             	r1 = 1			  ## app_spp_and_le.c:554:36
 1e022e8:    08 ff 40 01 01 00 	if (r0 > 320) goto 2 <state_machine+0x8C : 1e022f0 >			  ## app_spp_and_le.c:554:36
 1e022ee:    01 70             	r1 = 0			  ## app_spp_and_le.c:554:36
 1e022f0:    41 04             	r1 = r1.b0 (u)			  ## app_spp_and_le.c:592:6
 1e022f2:    40 70             	r0 = 4			  ## app_spp_and_le.c:592:6
 1e022f4:    bf f3 cb f4       	call -5738 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_spp_and_le.c:592:6
 1e022f8:    80 f3 79 53       	call 42738 <sys_key_event_enable : 1e0c9ee >			  ## app_spp_and_le.c:614:5
 1e022fc:    c1 ff 36 23 e0 01 	r1 = 31466294 <app_set_soft_poweroff : 1e02336 >			  ## app_spp_and_le.c:617:27
 1e02302:    c2 ff 20 bf 02 00 	r2 = 180000 <text_size+0x133D4 : 2bf20 >			  ## app_spp_and_le.c:617:27
 1e02308:    00 70             	r0 = 0			  ## app_spp_and_le.c:617:27
 1e0230a:    80 f3 88 48       	call 37136 <sys_timeout_add : 1e0b41e >			  ## app_spp_and_le.c:617:27
 1e0230e:    f8 59             	h[r4 + 62] = r0			  ## app_spp_and_le.c:617:25
 1e02310:    c0 ff 00 50 1e 00 	r0 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e02316:    03 f4 01 09       	[r0 + 12] |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:821:16
 1e0231a:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:279:16
 1e0231c:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:279:16
 1e0231e:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:279:16
 1e02320:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e02322:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e02324:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e02326:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:590:15
 1e02328:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:590:15
 1e0232a:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:590:15
 1e0232c:    00 f4 01 09       	[r0 + 0] |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:310:16
 1e02330:    00 70             	r0 = 0			  ## app_spp_and_le.c:663:5
 1e02332:    04 0a             	sp += 8			  ## app_spp_and_le.c:663:5
 1e02334:    54 01             	{pc, r4} = [sp++]			  ## app_spp_and_le.c:663:5


app_set_soft_poweroff:
 1e02336:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:470:0
 1e02338:    fe 0b             	sp += -4			  ## app_spp_and_le.c:470:0
 1e0233a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:484:14
 1e02340:    10 70             	r0 = 1			  ## app_spp_and_le.c:484:14
 1e02342:    10 f9 68 40       	b[r4 + 104] = r0			  ## app_spp_and_le.c:484:14
 1e02346:    00 70             	r0 = 0			  ## app_spp_and_le.c:477:5
 1e02348:    2b 14             	call -1962 <ble_module_enable : 1e01ba0 >			  ## app_spp_and_le.c:477:5
 1e0234a:    b0 49             	r0 = [r4 + 108]			  ## app_spp_and_le.c:484:14
 1e0234c:    01 d6             	r1 = r0 >> 24			  ## app_spp_and_le.c:484:30
 1e0234e:    d1 f5 00 00       	b[sp] = r1			  ## app_spp_and_le.c:484:11
 1e02352:    01 d4             	r1 = r0 >> 16			  ## app_spp_and_le.c:485:29
 1e02354:    d1 f5 01 00       	b[sp+1] = r1			  ## app_spp_and_le.c:485:11
 1e02358:    01 d2             	r1 = r0 >> 8			  ## app_spp_and_le.c:486:26
 1e0235a:    d1 f5 02 00       	b[sp+2] = r1			  ## app_spp_and_le.c:486:8
 1e0235e:    d0 f5 03 00       	b[sp+3] = r0			  ## app_spp_and_le.c:487:8
 1e02362:    01 a0             	r1 = sp + 0			  ## app_spp_and_le.c:487:8
 1e02364:    20 70             	r0 = 2			  ## app_spp_and_le.c:488:11
 1e02366:    42 70             	r2 = 4			  ## app_spp_and_le.c:488:11
 1e02368:    80 f3 15 56       	call 44074 <syscfg_write : 1e0cf96 >			  ## app_spp_and_le.c:488:11
 1e0236c:    c1 ff b4 1e e0 01 	r1 = 31465140 <power_set_soft_poweroff : 1e01eb4 >			  ## app_spp_and_le.c:490:5
 1e02372:    00 70             	r0 = 0			  ## app_spp_and_le.c:490:5
 1e02374:    02 fb 2c 01       	r2 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## app_spp_and_le.c:490:5
 1e02378:    80 f3 51 48       	call 37026 <sys_timeout_add : 1e0b41e >			  ## app_spp_and_le.c:490:5
 1e0237c:    02 0a             	sp += 4			  ## app_spp_and_le.c:490:5
 1e0237e:    54 01             	{pc, r4} = [sp++]			  ## app_spp_and_le.c:491:1


state_prosses:
 1e02380:    76 01             	[--sp] = {rets, r6-r4}			  ## app_spp_and_le.c:1136:0
 1e02382:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:1136:0
 1e02388:    b2 5d             	r2 = h[r6 + 54] (u)			  ## app_spp_and_le.c:1139:5
 1e0238a:    15 08             	r5 = r1			  ## app_spp_and_le.c:1139:5
 1e0238c:    04 08             	r4 = r0
 1e0238e:    05 24             	if (r2 == 0) goto 10 <state_prosses+0x1A : 1e0239a >
 1e02390:    20 08             	r0 = r2			  ## app_spp_and_le.c:1141:3
 1e02392:    80 f3 a2 47       	call 36676 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:1141:3
 1e02396:    00 70             	r0 = 0			  ## app_spp_and_le.c:1142:28
 1e02398:    b8 5d             	h[r6 + 54] = r0			  ## app_spp_and_le.c:1142:28
 1e0239a:    c0 5d             	r0 = h[r6 + 56] (u)			  ## app_spp_and_le.c:1144:5
 1e0239c:    04 20             	if (r0 == 0) goto 8 <state_prosses+0x26 : 1e023a6 >			  ## app_spp_and_le.c:1144:5
 1e0239e:    80 f3 9c 47       	call 36664 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:1146:3
 1e023a2:    00 70             	r0 = 0			  ## app_spp_and_le.c:1147:21
 1e023a4:    c8 5d             	h[r6 + 56] = r0			  ## app_spp_and_le.c:1147:21
 1e023a6:    d0 5d             	r0 = h[r6 + 58] (u)			  ## app_spp_and_le.c:1149:5
 1e023a8:    04 20             	if (r0 == 0) goto 8 <state_prosses+0x32 : 1e023b2 >			  ## app_spp_and_le.c:1149:5
 1e023aa:    80 f3 a9 46       	call 36178 <usr_timer_del : 1e0b100 >			  ## app_spp_and_le.c:1151:3
 1e023ae:    00 70             	r0 = 0			  ## app_spp_and_le.c:1152:29
 1e023b0:    d8 5d             	h[r6 + 58] = r0			  ## app_spp_and_le.c:1152:29
 1e023b2:    e0 5d             	r0 = h[r6 + 60] (u)			  ## app_spp_and_le.c:1154:5
 1e023b4:    05 20             	if (r0 == 0) goto 10 <state_prosses+0x40 : 1e023c0 >			  ## app_spp_and_le.c:1154:5
 1e023b6:    c0 5d             	r0 = h[r6 + 56] (u)			  ## app_spp_and_le.c:1156:3
 1e023b8:    80 f3 8f 47       	call 36638 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:1156:3
 1e023bc:    00 70             	r0 = 0			  ## app_spp_and_le.c:1157:21
 1e023be:    c8 5d             	h[r6 + 56] = r0			  ## app_spp_and_le.c:1157:21
 1e023c0:    13 28             	if (r4 == 0) goto 38 <state_prosses+0x68 : 1e023e8 >
 1e023c2:    14 e0 09 10       	if (r4 != 1) goto 18 <state_prosses+0x58 : 1e023d8 >
 1e023c6:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:1166:23
 1e023ca:    29 0e             	r1 = r5 * r0			  ## app_spp_and_le.c:1166:23
 1e023cc:    c0 ff f2 1c e0 01 	r0 = 31464690 <time_down_over_deal : 1e01cf2 >			  ## app_spp_and_le.c:1166:23
 1e023d2:    80 f3 2b 48       	call 36950 <usr_timeout_add : 1e0b42c >			  ## app_spp_and_le.c:1166:23
 1e023d6:    c8 5d             	h[r6 + 56] = r0			  ## app_spp_and_le.c:1166:22
 1e023d8:    c0 ff ce 28 e0 01 	r0 = 31467726 <start_vibrate : 1e028ce >			  ## app_spp_and_le.c:1171:31
 1e023de:    01 fb b8 0b       	r1 = 3000 <BTCTLER_CL_CODE_TOTAL+0x6C : bb8 >			  ## app_spp_and_le.c:1171:31
 1e023e2:    80 f3 23 48       	call 36934 <usr_timeout_add : 1e0b42c >			  ## app_spp_and_le.c:1171:31
 1e023e6:    e8 5d             	h[r6 + 60] = r0			  ## app_spp_and_le.c:1171:31
 1e023e8:    01 70             	r1 = 0			  ## app_spp_and_le.c:1173:3
 1e023ea:    40 08             	r0 = r4			  ## app_spp_and_le.c:1173:3
 1e023ec:    bf f3 4f f4       	call -5986 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_spp_and_le.c:1173:3
 1e023f0:    50 08             	r0 = r5			  ## app_spp_and_le.c:1174:3
 1e023f2:    41 08             	r1 = r4			  ## app_spp_and_le.c:1174:3
 1e023f4:    16 01             	{rets, r6-r4} = [sp++]			  ## app_spp_and_le.c:1174:3
 1e023f6:    0e 1c             	goto -2020 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_spp_and_le.c:1174:3


event_handler:
 1e023f8:    76 01             	[--sp] = {rets, r6-r4}			  ## app_spp_and_le.c:1298:0
 1e023fa:    14 08             	r4 = r1			  ## app_spp_and_le.c:1298:0
 1e023fc:    00 58             	r0 = h[r4 + 0] (u)			  ## app_spp_and_le.c:1299:20
 1e023fe:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >
 1e02404:    c5 ff c0 08 00 00 	r5 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >
 1e0240a:    00 e1 1b 00       	if (r0 == 16) goto 54 <event_handler+0x4C : 1e02444 >			  ## app_spp_and_le.c:1299:5
 1e0240e:    40 e0 33 00       	if (r0 == 4) goto 102 <event_handler+0x80 : 1e02478 >
 1e02412:    10 e0 f7 10       	if (r0 != 1) goto 494 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e02416:    10 48             	r0 = [r4 + 4]			  ## app_spp_and_le.c:1188:16
 1e02418:    c1 ff 00 59 45 4b 	r1 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## app_spp_and_le.c:1188:20
 1e0241e:    10 f2 f1 10       	if (r0 != r1) goto 482 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:1188:20
 1e02422:    31 48             	r1 = [r4 + 12]			  ## app_spp_and_le.c:1190:34
 1e02424:    a0 68             	r0 = b[r4 + 10] (u)			  ## app_spp_and_le.c:1190:34
 1e02426:    11 e0 56 10       	if (r1 != 1) goto 172 <event_handler+0xDE : 1e024d6 >			  ## app_spp_and_le.c:1194:6
 1e0242a:    ec 30             	if (r0 != 0) goto 472 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e0242c:    50 6d             	r0 = b[r6 + 21] (u)
 1e0242e:    ea 30             	if (r0 != 0) goto 468 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e02430:    00 70             	r0 = 0
 1e02432:    b8 4d             	[r6 + 108] = r0
 1e02434:    01 70             	r1 = 0
 1e02436:    bf f3 2a f4       	call -6060 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >
 1e0243a:    51 6d             	r1 = b[r6 + 21] (u)
 1e0243c:    b0 4d             	r0 = [r6 + 108]
 1e0243e:    bf f3 e9 fb       	call -2094 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >
 1e02442:    e0 18             	goto 448 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e02444:    10 48             	r0 = [r4 + 4]			  ## app_spp_and_le.c:1306:25
 1e02446:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## app_spp_and_le.c:1306:13
 1e0244c:    10 f2 33 00       	if (r0 == r1) goto 102 <event_handler+0xBE : 1e024b6 >			  ## app_spp_and_le.c:1306:13
 1e02450:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e02456:    10 f2 d5 10       	if (r0 != r1) goto 426 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e0245a:    80 68             	r0 = b[r4 + 8] (u)
 1e0245c:    01 fc fa ff       	r1 = r0 + -6			  ## app_spp_and_le.c:1010:5
 1e02460:    21 e0 54 20       	if (r1 >= 2) goto 168 <.GJTIE245_0_0_+0x24 : 1e0250c >			  ## app_spp_and_le.c:1010:5
 1e02464:    81 98             	r1 = r4 + 8			  ## app_spp_and_le.c:1307:55
 1e02466:    60 fc 3c 01       	r0 = r6 + 316			  ## app_spp_and_le.c:1037:9
 1e0246a:    11 80             	r1 += 1			  ## app_spp_and_le.c:1036:17
 1e0246c:    62 70             	r2 = 6			  ## app_spp_and_le.c:1037:9
 1e0246e:    98 f3 39 25       	call 3164786 <memcpy : 106ee4 >			  ## app_spp_and_le.c:1037:9
 1e02472:    80 f3 73 a1       	call 82662 <bredr_get_rssi_for_address : 1e1675c >			  ## app_spp_and_le.c:1038:9
 1e02476:    c6 18             	goto 396 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:1038:9
 1e02478:    10 48             	r0 = [r4 + 4]			  ## app_spp_and_le.c:1315:25
 1e0247a:    c1 ff 00 47 48 43 	r1 = 1128810240 <uECC_vli_cmp_unsafe+0x137D704 : 1484700 >			  ## app_spp_and_le.c:1315:13
 1e02480:    10 f2 26 00       	if (r0 == r1) goto 76 <event_handler+0xD8 : 1e024d0 >			  ## app_spp_and_le.c:1315:13
 1e02484:    c1 ff 00 57 4f 50 	r1 = 1347376896 <uECC_vli_cmp_unsafe+0x3EE704 : 4f5700 >
 1e0248a:    10 f2 bb 10       	if (r0 != r1) goto 374 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e0248e:    80 68             	r0 = b[r4 + 8] (u)			  ## app_power_manage.c:59:18
 1e02490:    50 e0 60 00       	if (r0 == 5) goto 192 <.GJTIE245_0_0_+0x6C : 1e02554 >			  ## app_power_manage.c:59:5
 1e02494:    20 e0 66 00       	if (r0 == 2) goto 204 <.GJTIE245_0_0_+0x7C : 1e02564 >
 1e02498:    10 e0 b4 10       	if (r0 != 1) goto 360 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e0249c:    60 4d             	r0 = [r6 + 88]			  ## app_power_manage.c:64:13
 1e0249e:    b2 30             	if (r0 != 0) goto 356 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_power_manage.c:64:13
 1e024a0:    c1 ff 28 20 e0 01 	r1 = 31465512 <power_event_to_user : 1e02028 >			  ## app_power_manage.c:65:30
 1e024a6:    c2 ff 60 ea 00 00 	r2 = 60000 <_nv_pre_end+0x2F60 : ea60 >			  ## app_power_manage.c:65:30
 1e024ac:    10 70             	r0 = 1			  ## app_power_manage.c:65:30
 1e024ae:    80 f3 b2 47       	call 36708 <sys_timer_add : 1e0b416 >			  ## app_power_manage.c:65:30
 1e024b2:    68 4d             	[r6 + 88] = r0			  ## app_power_manage.c:65:28
 1e024b4:    a7 18             	goto 334 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_power_manage.c:65:28
 1e024b6:    85 68             	r5 = b[r4 + 8] (u)			  ## app_spp_and_le.c:886:13
 1e024b8:    01 ff fe 50 6d 00 	if (r5 != 254) goto 218 <.GJTIE245_0_0_+0xB0 : 1e02598 >			  ## app_spp_and_le.c:886:13
 1e024be:    40 48             	r0 = [r4 + 16]			  ## app_spp_and_le.c:887:22
 1e024c0:    10 e0 66 00       	if (r0 == 1) goto 204 <.GJTIE245_0_0_+0xA8 : 1e02590 >			  ## app_spp_and_le.c:887:13
 1e024c4:    e5 7f             	r5 = 254
 1e024c6:    6d 30             	if (r0 != 0) goto 218 <.GJTIE245_0_0_+0xBA : 1e025a2 >
 1e024c8:    00 70             	r0 = 0			  ## app_spp_and_le.c:888:13
 1e024ca:    80 f3 5f 27       	call 20158 <set_remote_test_flag : 1e0738c >			  ## app_spp_and_le.c:888:13
 1e024ce:    9a 18             	goto 308 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:888:13
 1e024d0:    80 68             	r0 = b[r4 + 8] (u)			  ## app_spp_and_le.c:1320:13
 1e024d2:    13 15             	call -1498 <app_charge_event_handler : 1e01efa >			  ## app_spp_and_le.c:1320:13
 1e024d4:    97 18             	goto 302 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:1320:13
 1e024d6:    b0 e0 95 80       	if (r0 > 11) goto 298 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e024da:    a0 00             	tbb [r0]


.GJTIS245_0_0_:
 1e024dc:    07     < 7 : 0x7 >
 1e024dd:    94     < 148 : 0x94 >
 1e024de:    6e     < 110 : 0x6E >
 1e024df:    94     < 148 : 0x94 >
 1e024e0:    94     < 148 : 0x94 >
 1e024e1:    06     < 6 : 0x6 >
 1e024e2:    94     < 148 : 0x94 >
 1e024e3:    94     < 148 : 0x94 >
 1e024e4:    94     < 148 : 0x94 >
 1e024e5:    7d     < 125 : 0x7D >
 1e024e6:    81     < 129 : 0x81 >
 1e024e7:    78     < 120 : 0x78 >
 1e024e8:    a1 1f             	goto -190 <event_handler+0x34 : 1e0242c >
 1e024ea:    50 6d             	r0 = b[r6 + 21] (u)			  ## app_spp_and_le.c:1238:15
 1e024ec:    11 90             	r1 = r0 + 1			  ## app_spp_and_le.c:1238:15
 1e024ee:    42 04             	r2 = r1.b0 (u)			  ## app_spp_and_le.c:1238:15
 1e024f0:    00 70             	r0 = 0			  ## app_spp_and_le.c:1239:9
 1e024f2:    22 e0 01 80       	if (r2 > 2) goto 2 <.GJTIE245_0_0_+0x10 : 1e024f8 >			  ## app_spp_and_le.c:1239:9
 1e024f6:    10 08             	r0 = r1			  ## app_spp_and_le.c:1239:9
 1e024f8:    01 04             	r1 = r0.b0 (u)			  ## app_spp_and_le.c:1239:9
 1e024fa:    58 6d             	b[r6 + 21] = r0			  ## app_spp_and_le.c:1240:16
 1e024fc:    21 e0 74 00       	if (r1 == 2) goto 232 <.GJTIE245_0_0_+0x100 : 1e025e8 >			  ## app_spp_and_le.c:1243:9
 1e02500:    11 e0 7a 00       	if (r1 == 1) goto 244 <.GJTIE245_0_0_+0x110 : 1e025f8 >
 1e02504:    7f 32             	if (r1 != 0) goto 254 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e02506:    b1 4d             	r1 = [r6 + 108]			  ## app_spp_and_le.c:1245:18
 1e02508:    00 70             	r0 = 0			  ## app_spp_and_le.c:1246:5
 1e0250a:    7b 18             	goto 246 <.GJTIE245_0_0_+0x11A : 1e02602 >			  ## app_spp_and_le.c:1246:5
 1e0250c:    30 e0 7a 10       	if (r0 != 3) goto 244 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e02510:    54 fc 4d 00       	r4 = r5 + 77			  ## le_trans_data.c:1358:27
 1e02514:    40 08             	r0 = r4			  ## le_trans_data.c:1358:27
 1e02516:    98 f3 f1 24       	call 3164642 <strlen : 106efc >			  ## le_trans_data.c:1358:27
 1e0251a:    02 04             	r2 = r0.b0 (u)			  ## le_trans_data.c:1359:9
 1e0251c:    81 71             	r1 = 24			  ## le_trans_data.c:1359:9
 1e0251e:    82 e1 01 80       	if (r2 > 24) goto 2 <.GJTIE245_0_0_+0x3C : 1e02524 >			  ## le_trans_data.c:1359:9
 1e02522:    01 08             	r1 = r0			  ## le_trans_data.c:1359:9
 1e02524:    39 6c             	b[r6 + 3] = r1			  ## le_trans_data.c:1358:25
 1e02526:    42 04             	r2 = r1.b0 (u)			  ## le_trans_data.c:1363:37
 1e02528:    05 83             	r5 += 48			  ## le_trans_data.c:1363:5
 1e0252a:    50 08             	r0 = r5			  ## le_trans_data.c:1363:5
 1e0252c:    41 08             	r1 = r4			  ## le_trans_data.c:1363:5
 1e0252e:    98 f3 d9 24       	call 3164594 <memcpy : 106ee4 >			  ## le_trans_data.c:1363:5
 1e02532:    30 6c             	r0 = b[r6 + 3] (u)			  ## le_trans_data.c:1367:13
 1e02534:    50 09             	r0 += r5			  ## le_trans_data.c:1367:13
 1e02536:    c1 ff 3c f0 e0 01 	r1 = 31518780 <bluetooth_base_uuid+0x32 : 1e0f03c >			  ## le_trans_data.c:1367:5
 1e0253c:    52 70             	r2 = 5			  ## le_trans_data.c:1367:5
 1e0253e:    98 f3 d1 24       	call 3164578 <memcpy : 106ee4 >			  ## le_trans_data.c:1367:5
 1e02542:    30 6c             	r0 = b[r6 + 3] (u)			  ## le_trans_data.c:1368:25
 1e02544:    50 80             	r0 += 5			  ## le_trans_data.c:1368:25
 1e02546:    38 6c             	b[r6 + 3] = r0			  ## le_trans_data.c:1368:25
 1e02548:    10 70             	r0 = 1			  ## le_trans_data.c:1380:5
 1e0254a:    bf f3 db f2       	call -6730 <set_ble_work_state : 1e00b04 >			  ## le_trans_data.c:1380:5
 1e0254e:    bf f3 27 fb       	call -2482 <ble_module_enable : 1e01ba0 >			  ## le_trans_data.c:1381:5
 1e02552:    58 18             	goto 176 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## le_trans_data.c:1381:5
 1e02554:    60 4d             	r0 = [r6 + 88]			  ## app_power_manage.c:82:13
 1e02556:    56 20             	if (r0 == 0) goto 172 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_power_manage.c:82:13
 1e02558:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:83:13
 1e0255a:    80 f3 d0 45       	call 35744 <sys_timer_del : 1e0b0fe >			  ## app_power_manage.c:83:13
 1e0255e:    d6 f4 00 69       	[r6 + 88] = 0			  ## app_power_manage.c:84:28
 1e02562:    50 18             	goto 160 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_power_manage.c:84:28
 1e02564:    70 4d             	r0 = [r6 + 92]			  ## app_power_manage.c:199:9
 1e02566:    05 20             	if (r0 == 0) goto 10 <.GJTIE245_0_0_+0x8A : 1e02572 >			  ## app_power_manage.c:199:9
 1e02568:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:200:9
 1e0256a:    80 f3 c8 45       	call 35728 <sys_timer_del : 1e0b0fe >			  ## app_power_manage.c:200:9
 1e0256e:    d7 f4 00 69       	[r6 + 92] = 0			  ## app_power_manage.c:201:25
 1e02572:    80 4d             	r0 = [r6 + 96]			  ## app_power_manage.c:203:9
 1e02574:    05 20             	if (r0 == 0) goto 10 <.GJTIE245_0_0_+0x98 : 1e02580 >			  ## app_power_manage.c:203:9
 1e02576:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:204:9
 1e02578:    80 f3 c2 45       	call 35716 <usr_timer_del : 1e0b100 >			  ## app_power_manage.c:204:9
 1e0257c:    d8 f4 00 69       	[r6 + 96] = 0			  ## app_power_manage.c:205:25
 1e02580:    60 4d             	r0 = [r6 + 88]			  ## app_power_manage.c:71:13
 1e02582:    22 20             	if (r0 == 0) goto 68 <.GJTIE245_0_0_+0xE0 : 1e025c8 >			  ## app_power_manage.c:71:13
 1e02584:    20 04             	r0 = r0.l (u)			  ## app_power_manage.c:72:13
 1e02586:    80 f3 ba 45       	call 35700 <sys_timer_del : 1e0b0fe >			  ## app_power_manage.c:72:13
 1e0258a:    d6 f4 00 69       	[r6 + 88] = 0			  ## app_power_manage.c:73:28
 1e0258e:    1c 18             	goto 56 <.GJTIE245_0_0_+0xE0 : 1e025c8 >			  ## app_power_manage.c:73:28
 1e02590:    00 70             	r0 = 0			  ## app_spp_and_le.c:897:17
 1e02592:    bf f3 ca f3       	call -6252 <bt_ble_adv_enable : 1e00d2a >			  ## app_spp_and_le.c:897:17
 1e02596:    85 68             	r5 = b[r4 + 8] (u)			  ## app_spp_and_le.c:897:17
 1e02598:    35 e0 03 10       	if (r5 != 3) goto 6 <.GJTIE245_0_0_+0xBA : 1e025a2 >
 1e0259c:    40 48             	r0 = [r4 + 16]			  ## app_spp_and_le.c:904:63
 1e0259e:    35 70             	r5 = 3			  ## app_spp_and_le.c:904:63
 1e025a0:    31 20             	if (r0 == 0) goto 98 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:904:63
 1e025a2:    80 f3 13 27       	call 20006 <get_remote_test_flag : 1e073cc >			  ## app_spp_and_le.c:913:13
 1e025a6:    2e 20             	if (r0 == 0) goto 92 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:913:13
 1e025a8:    55 e0 2c 00       	if (r5 == 5) goto 88 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e025ac:    00 ff fe 50 29 00 	if (r5 == 254) goto 82 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e025b2:    90 f3 30 07       	call 2100832 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e025b6:    26 18             	goto 76 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## cpu.h:148:5
 1e025b8:    60 6d             	r0 = b[r6 + 22] (u)			  ## app_spp_and_le.c:1228:23
 1e025ba:    10 80             	r0 += 1			  ## app_spp_and_le.c:1228:23
 1e025bc:    01 04             	r1 = r0.b0 (u)			  ## app_spp_and_le.c:1228:23
 1e025be:    68 6d             	b[r6 + 22] = r0			  ## app_spp_and_le.c:1228:23
 1e025c0:    a1 e0 20 30       	if (r1 < 10) goto 64 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:1228:23
 1e025c4:    00 70             	r0 = 0			  ## app_spp_and_le.c:1231:24
 1e025c6:    68 6d             	b[r6 + 22] = r0			  ## app_spp_and_le.c:1231:24
 1e025c8:    b6 16             	call -660 <app_set_soft_poweroff : 1e02336 >
 1e025ca:    1c 18             	goto 56 <.GJTIE245_0_0_+0x11C : 1e02604 >
 1e025cc:    10 70             	r0 = 1
 1e025ce:    58 6d             	b[r6 + 21] = r0			  ## app_spp_and_le.c:1276:15
 1e025d0:    09 4a             	[r5 + 0] = r1			  ## app_spp_and_le.c:1277:31
 1e025d2:    19 4a             	[r5 + 4] = r1			  ## app_spp_and_le.c:1278:32
 1e025d4:    16 18             	goto 44 <.GJTIE245_0_0_+0x11A : 1e02602 >			  ## app_spp_and_le.c:1278:32
 1e025d6:    b0 4d             	r0 = [r6 + 108]			  ## app_spp_and_le.c:1219:23
 1e025d8:    10 09             	r0 += r1			  ## app_spp_and_le.c:1219:23
 1e025da:    b8 4d             	[r6 + 108] = r0			  ## app_spp_and_le.c:1219:23
 1e025dc:    13 18             	goto 38 <.GJTIE245_0_0_+0x11C : 1e02604 >			  ## app_spp_and_le.c:1219:23
 1e025de:    20 70             	r0 = 2
 1e025e0:    58 6d             	b[r6 + 21] = r0			  ## app_spp_and_le.c:1285:15
 1e025e2:    29 4a             	[r5 + 8] = r1			  ## app_spp_and_le.c:1286:28
 1e025e4:    39 4a             	[r5 + 12] = r1			  ## app_spp_and_le.c:1287:28
 1e025e6:    0d 18             	goto 26 <.GJTIE245_0_0_+0x11A : 1e02602 >			  ## app_spp_and_le.c:1287:28
 1e025e8:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:1258:29
 1e025ec:    28 4a             	[r5 + 8] = r0			  ## app_spp_and_le.c:1258:29
 1e025ee:    38 4a             	[r5 + 12] = r0			  ## app_spp_and_le.c:1259:28
 1e025f0:    20 70             	r0 = 2			  ## app_spp_and_le.c:1260:6
 1e025f2:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:1260:6
 1e025f6:    05 18             	goto 10 <.GJTIE245_0_0_+0x11A : 1e02602 >			  ## app_spp_and_le.c:1260:6
 1e025f8:    c0 73             	r0 = 60			  ## app_spp_and_le.c:1251:32
 1e025fa:    08 4a             	[r5 + 0] = r0			  ## app_spp_and_le.c:1251:32
 1e025fc:    18 4a             	[r5 + 4] = r0			  ## app_spp_and_le.c:1252:31
 1e025fe:    10 70             	r0 = 1			  ## app_spp_and_le.c:1253:5
 1e02600:    c1 73             	r1 = 60			  ## app_spp_and_le.c:1253:5
 1e02602:    be 16             	call -644 <state_prosses : 1e02380 >
 1e02604:    00 70             	r0 = 0			  ## app_spp_and_le.c:1330:1
 1e02606:    56 01             	{pc, r6-r4} = [sp++]			  ## app_spp_and_le.c:1330:1


gpio_set_fun_output_port:
 1e02608:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:1170:0
 1e0260a:    10 e3 0c 30       	if (r0 < 49) goto 24 <.GJTIE246_0_0_+0x4 : 1e02626 >			  ## gpio.c:1174:9
 1e0260e:    03 fc cf ff       	r3 = r0 + -49			  ## gpio.c:1175:13
 1e02612:    33 e0 23 80       	if (r3 > 3) goto 70 <.GJTIE246_0_0_+0x3A : 1e0265c >			  ## gpio.c:1175:13
 1e02616:    c0 ff 64 56 1e 00 	r0 = 1988196 <uECC_vli_cmp_unsafe+0xDE668 : 1e5664 >
 1e0261c:    a3 00             	tbb [r3]


.GJTIS246_0_0_:
 1e0261e:    17     < 23 : 0x17 >
 1e0261f:    02     < 2 : 0x2 >
 1e02620:    14     < 20 : 0x14 >
 1e02621:    16     < 22 : 0x16 >
 1e02622:    40 80             	r0 += 4
 1e02624:    13 18             	goto 38 <.GJTIE246_0_0_+0x2A : 1e0264c >
 1e02626:    83 d0             	r3 = r0 >> 2			  ## gpio.c:1150:18
 1e02628:    c4 ff fc ff ff 3f 	r4 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:1147:28
 1e0262e:    53 b9             	r3 &= r4			  ## gpio.c:1147:28
 1e02630:    c4 ff 4c f2 e0 01 	r4 = 31519308 <gpio_out_regs : 1e0f24c >			  ## gpio.c:1150:18
 1e02636:    83 f6 00 34       	r3 = [r3+r4]			  ## gpio.c:1150:18
 1e0263a:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:1148:27
 1e0263e:    80 c0             	r0 = r0 << 2			  ## gpio.c:1152:16
 1e02640:    30 09             	r0 += r3			  ## gpio.c:1152:16
 1e02642:    04 30             	if (r0 != 0) goto 8 <.GJTIE246_0_0_+0x2A : 1e0264c >
 1e02644:    54 01             	{pc, r4} = [sp++]
 1e02646:    80 80             	r0 += 8
 1e02648:    01 18             	goto 2 <.GJTIE246_0_0_+0x2A : 1e0264c >
 1e0264a:    c0 80             	r0 += 12
 1e0264c:    13 70             	r3 = 1			  ## gpio.c:1195:9
 1e0264e:    01 34             	if (r2 != 0) goto 2 <.GJTIE246_0_0_+0x30 : 1e02652 >			  ## gpio.c:1195:9
 1e02650:    03 70             	r3 = 0			  ## gpio.c:1195:9
 1e02652:    de fd 10 31       	r3 <= insert(r1, p:2, l:30)			  ## gpio.c:1201:30
 1e02656:    01 fd 02 39       	r1 = r3 | 2			  ## gpio.c:1201:30
 1e0265a:    09 40             	[r0 + 0] = r1			  ## gpio.c:1201:11
 1e0265c:    54 01             	{pc, r4} = [sp++]


gpio_set_die:
 1e0265e:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE248_0_0_+0xA : 1e02680 >			  ## gpio.c:800:0
 1e02662:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:806:13
 1e02666:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE248_0_0_+0x3A : 1e026b0 >			  ## gpio.c:806:13
 1e0266a:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e02670:    a2 00             	tbb [r2]


.GJTIS248_0_0_:
 1e02672:    02     < 2 : 0x2 >
 1e02673:    20     < 32 : 0x20 >
 1e02674:    25     < 37 : 0x25 >
 1e02675:    2a     < 42 : 0x2A >
 1e02676:    02 40             	r2 = [r0 + 0]			  ## gpio.c:806:13
 1e02678:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:806:13
 1e0267c:    0a 40             	[r0 + 0] = r2			  ## gpio.c:806:13
 1e0267e:    20 00             	rts			  ## gpio.c:806:13
 1e02680:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e02682:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02688:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e0268a:    c3 ff 3c f2 e0 01 	r3 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e02690:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e02694:    0d 24             	if (r2 == 0) goto 26 <.GJTIE248_0_0_+0x3A : 1e026b0 >
 1e02696:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:818:12
 1e0269a:    13 70             	r3 = 1			  ## gpio.c:818:12
 1e0269c:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:818:12
 1e026a0:    03 22             	if (r1 == 0) goto 6 <.GJTIE248_0_0_+0x32 : 1e026a8 >			  ## gpio.c:820:9
 1e026a2:    31 44             	r1 = [r2 + 12]			  ## gpio.c:821:16
 1e026a4:    50 b2             	r0 |= r1			  ## gpio.c:821:16
 1e026a6:    03 18             	goto 6 <.GJTIE248_0_0_+0x38 : 1e026ae >
 1e026a8:    31 44             	r1 = [r2 + 12]			  ## gpio.c:823:16
 1e026aa:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:823:16
 1e026ae:    38 44             	[r2 + 12] = r0
 1e026b0:    20 00             	rts
 1e026b2:    02 40             	r2 = [r0 + 0]			  ## gpio.c:806:13
 1e026b4:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:806:13
 1e026b8:    0a 40             	[r0 + 0] = r2			  ## gpio.c:806:13
 1e026ba:    20 00             	rts			  ## gpio.c:806:13
 1e026bc:    92 40             	r2 = [r0 + 36]			  ## gpio.c:806:13
 1e026be:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:806:13
 1e026c2:    9a 40             	[r0 + 36] = r2			  ## gpio.c:806:13
 1e026c4:    20 00             	rts			  ## gpio.c:806:13
 1e026c6:    92 40             	r2 = [r0 + 36]			  ## gpio.c:806:13
 1e026c8:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:806:13
 1e026cc:    9a 40             	[r0 + 36] = r2			  ## gpio.c:806:13
 1e026ce:    20 00             	rts			  ## gpio.c:806:13


timer_pwm_init:
 1e026d0:    77 01             	[--sp] = {rets, r7-r4}			  ## mcpwm.c:407:0
 1e026d2:    04 08             	r4 = r0			  ## mcpwm.c:407:0
 1e026d4:    c0 ff 00 fc e1 ff 	r0 = 4293000192 <bank_code_load_addr+0x51DC : 1e1fc00 >			  ## mcpwm.c:408:5
 1e026da:    40 09             	r0 += r4			  ## mcpwm.c:408:5
 1e026dc:    f4 fd 40 00       	r0 = r0 <> 8			  ## mcpwm.c:408:5
 1e026e0:    36 08             	r6 = r3			  ## mcpwm.c:408:5
 1e026e2:    27 08             	r7 = r2
 1e026e4:    15 08             	r5 = r1
 1e026e6:    30 e0 38 80       	if (r0 > 3) goto 112 <.GJTIE249_0_0_+0x6A : 1e0275a >
 1e026ea:    a0 00             	tbb [r0]


.GJTIS249_0_0_:
 1e026ec:    02     < 2 : 0x2 >
 1e026ed:    04     < 4 : 0x4 >
 1e026ee:    06     < 6 : 0x6 >
 1e026ef:    08     < 8 : 0x8 >
 1e026f0:    c1 70             	r1 = 12			  ## mcpwm.c:410:9
 1e026f2:    07 18             	goto 14 <.GJTIE249_0_0_+0x12 : 1e02702 >			  ## mcpwm.c:410:9
 1e026f4:    d1 70             	r1 = 13			  ## mcpwm.c:413:9
 1e026f6:    05 18             	goto 10 <.GJTIE249_0_0_+0x12 : 1e02702 >			  ## mcpwm.c:413:9
 1e026f8:    e1 70             	r1 = 14			  ## mcpwm.c:416:9
 1e026fa:    03 18             	goto 6 <.GJTIE249_0_0_+0x12 : 1e02702 >			  ## mcpwm.c:416:9
 1e026fc:    80 f3 fb 49       	call 37878 <bit_clr_ie : 1e0baf6 >			  ## mcpwm.c:419:9
 1e02700:    f1 70             	r1 = 15			  ## mcpwm.c:420:9
 1e02702:    02 70             	r2 = 0
 1e02704:    50 08             	r0 = r5
 1e02706:    80 17             	call -256 <gpio_set_fun_output_port : 1e02608 >
 1e02708:    00 70             	r0 = 0
 1e0270a:    08 48             	[r4 + 0] = r0			  ## mcpwm.c:427:20
 1e0270c:    00 f4 18 4a       	[r4 + 0] |= 6144			  ## mcpwm.c:428:20
 1e02710:    00 f4 10 49       	[r4 + 0] |= 16			  ## mcpwm.c:429:20
 1e02714:    18 48             	[r4 + 4] = r0			  ## mcpwm.c:430:20
 1e02716:    b8 c0             	r0 = r7 << 2			  ## mcpwm.c:431:33
 1e02718:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## mcpwm.c:431:28
 1e0271e:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## mcpwm.c:431:28
 1e02722:    28 48             	[r4 + 8] = r0			  ## mcpwm.c:431:20
 1e02724:    20 48             	r0 = [r4 + 8]			  ## mcpwm.c:432:34
 1e02726:    80 0f             	r0 = r0 * r6			  ## mcpwm.c:432:38
 1e02728:    01 fb 10 27       	r1 = 10000 <pmu_voltage+0x20 : 2710 >			  ## mcpwm.c:432:46
 1e0272c:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## mcpwm.c:432:46
 1e02730:    38 48             	[r4 + 12] = r0			  ## mcpwm.c:432:20
 1e02732:    00 f4 01 49       	[r4 + 0] |= 1			  ## mcpwm.c:433:20
 1e02736:    00 f4 01 4a       	[r4 + 0] |= 256			  ## mcpwm.c:434:20
 1e0273a:    11 70             	r1 = 1			  ## mcpwm.c:436:5
 1e0273c:    50 08             	r0 = r5			  ## mcpwm.c:436:5
 1e0273e:    8f 17             	call -226 <gpio_set_die : 1e0265e >			  ## mcpwm.c:436:5
 1e02740:    01 70             	r1 = 0			  ## mcpwm.c:437:5
 1e02742:    50 08             	r0 = r5			  ## mcpwm.c:437:5
 1e02744:    bf f3 be f7       	call -4228 <gpio_set_pull_up : 1e016c4 >			  ## mcpwm.c:437:5
 1e02748:    50 08             	r0 = r5			  ## mcpwm.c:438:5
 1e0274a:    bf f3 a1 f7       	call -4286 <gpio_set_pull_down : 1e01690 >			  ## mcpwm.c:438:5
 1e0274e:    01 70             	r1 = 0			  ## mcpwm.c:439:5
 1e02750:    50 08             	r0 = r5			  ## mcpwm.c:439:5
 1e02752:    bf f3 1d f8       	call -4038 <gpio_set_direction : 1e01790 >			  ## mcpwm.c:439:5
 1e02756:    20 48             	r0 = [r4 + 8]			  ## mcpwm.c:441:50
 1e02758:    00 48             	r0 = [r4 + 0]			  ## mcpwm.c:442:50
 1e0275a:    57 01             	{pc, r7-r4} = [sp++]			  ## mcpwm.c:443:1


set_timer_pwm_duty:
 1e0275c:    22 40             	r2 = [r0 + 8]			  ## mcpwm.c:458:0
 1e0275e:    51 0e             	r1 = r2 * r1			  ## mcpwm.c:459:38
 1e02760:    02 fb 10 27       	r2 = 10000 <pmu_voltage+0x20 : 2710 >			  ## mcpwm.c:459:46
 1e02764:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## mcpwm.c:459:46
 1e02768:    39 40             	[r0 + 12] = r1			  ## mcpwm.c:459:20
 1e0276a:    20 00             	rts			  ## mcpwm.c:460:1


gpio_disable_fun_output_port:
 1e0276c:    10 e3 0c 30       	if (r0 < 49) goto 24 <.GJTIE251_0_0_+0x4 : 1e02788 >			  ## gpio.c:1209:0
 1e02770:    01 fc cf ff       	r1 = r0 + -49			  ## gpio.c:1213:13
 1e02774:    31 e0 1f 80       	if (r1 > 3) goto 62 <.GJTIE251_0_0_+0x32 : 1e027b6 >			  ## gpio.c:1213:13
 1e02778:    c0 ff 64 56 1e 00 	r0 = 1988196 <uECC_vli_cmp_unsafe+0xDE668 : 1e5664 >
 1e0277e:    a1 00             	tbb [r1]


.GJTIS251_0_0_:
 1e02780:    17     < 23 : 0x17 >
 1e02781:    02     < 2 : 0x2 >
 1e02782:    14     < 20 : 0x14 >
 1e02783:    16     < 22 : 0x16 >
 1e02784:    40 80             	r0 += 4
 1e02786:    13 18             	goto 38 <.GJTIE251_0_0_+0x2A : 1e027ae >
 1e02788:    81 d0             	r1 = r0 >> 2			  ## gpio.c:1150:18
 1e0278a:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:1147:28
 1e02790:    51 b5             	r1 &= r2			  ## gpio.c:1147:28
 1e02792:    c2 ff 4c f2 e0 01 	r2 = 31519308 <gpio_out_regs : 1e0f24c >			  ## gpio.c:1150:18
 1e02798:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:1150:18
 1e0279c:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:1148:27
 1e027a0:    80 c0             	r0 = r0 << 2			  ## gpio.c:1152:16
 1e027a2:    10 09             	r0 += r1			  ## gpio.c:1152:16
 1e027a4:    04 30             	if (r0 != 0) goto 8 <.GJTIE251_0_0_+0x2A : 1e027ae >
 1e027a6:    20 00             	rts
 1e027a8:    80 80             	r0 += 8
 1e027aa:    01 18             	goto 2 <.GJTIE251_0_0_+0x2A : 1e027ae >
 1e027ac:    c0 80             	r0 += 12
 1e027ae:    01 40             	r1 = [r0 + 0]			  ## gpio.c:1233:11
 1e027b0:    31 fd 03 19       	r1 = r1 & 4294967292			  ## gpio.c:1233:11
 1e027b4:    09 40             	[r0 + 0] = r1			  ## gpio.c:1233:11
 1e027b6:    20 00             	rts


usb_set_dieh:
 1e027b8:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:200:0
 1e027be:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_dieh+0x1A : 1e027d2 >			  ## gpio.c:201:9
 1e027c2:    80 80             	r0 += 8
 1e027c4:    13 70             	r3 = 1
 1e027c6:    f8 fd 00 03       	r0 = r3 << r0
 1e027ca:    0b 22             	if (r1 == 0) goto 22 <usb_set_dieh+0x2A : 1e027e2 >			  ## gpio.c:203:13
 1e027cc:    91 44             	r1 = [r2 + 36]			  ## gpio.c:204:30
 1e027ce:    50 b2             	r0 |= r1			  ## gpio.c:204:30
 1e027d0:    0b 18             	goto 22 <usb_set_dieh+0x30 : 1e027e8 >			  ## gpio.c:204:30
 1e027d2:    a0 80             	r0 += 10
 1e027d4:    13 70             	r3 = 1
 1e027d6:    f8 fd 00 03       	r0 = r3 << r0
 1e027da:    08 22             	if (r1 == 0) goto 16 <usb_set_dieh+0x34 : 1e027ec >			  ## gpio.c:210:13
 1e027dc:    01 44             	r1 = [r2 + 0]			  ## gpio.c:211:29
 1e027de:    50 b2             	r0 |= r1			  ## gpio.c:211:29
 1e027e0:    08 18             	goto 16 <usb_set_dieh+0x3A : 1e027f2 >			  ## gpio.c:211:29
 1e027e2:    91 44             	r1 = [r2 + 36]			  ## gpio.c:206:30
 1e027e4:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:206:30
 1e027e8:    98 44             	[r2 + 36] = r0
 1e027ea:    20 00             	rts
 1e027ec:    01 44             	r1 = [r2 + 0]			  ## gpio.c:213:29
 1e027ee:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:213:29
 1e027f2:    08 44             	[r2 + 0] = r0
 1e027f4:    20 00             	rts


gpio_set_dieh:
 1e027f6:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_dieh+0x8 : 1e027fe >			  ## gpio.c:831:0
 1e027fa:    f0 8c             	r0 += -49			  ## gpio.c:837:31
 1e027fc:    dd 1f             	goto -70 <usb_set_dieh : 1e027b8 >			  ## gpio.c:837:13
 1e027fe:    82 d0             	r2 = r0 >> 2			  ## gpio.c:49:31
 1e02800:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02806:    52 b7             	r2 &= r3			  ## gpio.c:49:46
 1e02808:    c3 ff 3c f2 e0 01 	r3 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e0280e:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:49:31
 1e02812:    0d 24             	if (r2 == 0) goto 26 <gpio_set_dieh+0x38 : 1e0282e >
 1e02814:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:849:12
 1e02818:    13 70             	r3 = 1			  ## gpio.c:849:12
 1e0281a:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:849:12
 1e0281e:    03 22             	if (r1 == 0) goto 6 <gpio_set_dieh+0x30 : 1e02826 >			  ## gpio.c:851:9
 1e02820:    81 44             	r1 = [r2 + 32]			  ## gpio.c:852:17
 1e02822:    50 b2             	r0 |= r1			  ## gpio.c:852:17
 1e02824:    03 18             	goto 6 <gpio_set_dieh+0x36 : 1e0282c >
 1e02826:    81 44             	r1 = [r2 + 32]			  ## gpio.c:854:17
 1e02828:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:854:17
 1e0282c:    88 44             	[r2 + 32] = r0
 1e0282e:    20 00             	rts


timer_pwm_delete:
 1e02830:    74 01             	[--sp] = {rets, r4}			  ## mcpwm.c:446:0
 1e02832:    14 08             	r4 = r1			  ## mcpwm.c:446:0
 1e02834:    03 08             	r3 = r0			  ## mcpwm.c:446:0
 1e02836:    40 08             	r0 = r4			  ## mcpwm.c:447:5
 1e02838:    99 17             	call -206 <gpio_disable_fun_output_port : 1e0276c >			  ## mcpwm.c:447:5
 1e0283a:    00 70             	r0 = 0			  ## mcpwm.c:448:20
 1e0283c:    08 46             	[r3 + 0] = r0			  ## mcpwm.c:448:20
 1e0283e:    01 70             	r1 = 0			  ## mcpwm.c:449:5
 1e02840:    40 08             	r0 = r4			  ## mcpwm.c:449:5
 1e02842:    0d 17             	call -486 <gpio_set_die : 1e0265e >			  ## mcpwm.c:449:5
 1e02844:    01 70             	r1 = 0			  ## mcpwm.c:450:5
 1e02846:    40 08             	r0 = r4			  ## mcpwm.c:450:5
 1e02848:    d6 17             	call -84 <gpio_set_dieh : 1e027f6 >			  ## mcpwm.c:450:5
 1e0284a:    01 70             	r1 = 0			  ## mcpwm.c:451:5
 1e0284c:    40 08             	r0 = r4			  ## mcpwm.c:451:5
 1e0284e:    bf f3 39 f7       	call -4494 <gpio_set_pull_up : 1e016c4 >			  ## mcpwm.c:451:5
 1e02852:    40 08             	r0 = r4			  ## mcpwm.c:452:5
 1e02854:    bf f3 1c f7       	call -4552 <gpio_set_pull_down : 1e01690 >			  ## mcpwm.c:452:5
 1e02858:    11 70             	r1 = 1			  ## mcpwm.c:453:5
 1e0285a:    40 08             	r0 = r4			  ## mcpwm.c:453:5
 1e0285c:    14 01             	{rets, r4} = [sp++]			  ## mcpwm.c:453:5
 1e0285e:    ff f3 97 f7       	goto -4306 <gpio_set_direction : 1e01790 >			  ## mcpwm.c:453:5


buzzer_ctrl:
 1e02862:    75 01             	[--sp] = {rets, r5, r4}			  ## lost.c:176:0
 1e02864:    04 fe 64 19       	r4 = r1 * 100			  ## lost.c:179:17
 1e02868:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >
 1e0286e:    16 20             	if (r0 == 0) goto 44 <buzzer_ctrl+0x3A : 1e0289c >			  ## lost.c:180:8
 1e02870:    00 f9 7c 50       	r0 = b[r5 + 124] (u)
 1e02874:    0d 30             	if (r0 != 0) goto 26 <buzzer_ctrl+0x2E : 1e02890 >
 1e02876:    c0 ff 00 07 1e 00 	r0 = 1967872 <uECC_vli_cmp_unsafe+0xD9704 : 1e0700 >			  ## lost.c:182:13
 1e0287c:    11 73             	r1 = 49			  ## lost.c:182:13
 1e0287e:    02 fb be 0a       	r2 = 2750 <system_data_end+0xCA : abe >			  ## lost.c:182:13
 1e02882:    43 08             	r3 = r4			  ## lost.c:182:13
 1e02884:    25 17             	call -438 <timer_pwm_init : 1e026d0 >			  ## lost.c:182:13
 1e02886:    10 70             	r0 = 1			  ## lost.c:182:13
 1e02888:    10 f9 7c 50       	b[r5 + 124] = r0			  ## lost.c:182:13
 1e0288c:    10 f9 74 50       	b[r5 + 116] = r0
 1e02890:    c0 ff 00 07 1e 00 	r0 = 1967872 <uECC_vli_cmp_unsafe+0xD9704 : 1e0700 >			  ## lost.c:186:9
 1e02896:    41 08             	r1 = r4			  ## lost.c:186:9
 1e02898:    15 01             	{rets, r5, r4} = [sp++]			  ## lost.c:186:9
 1e0289a:    60 1f             	goto -320 <set_timer_pwm_duty : 1e0275c >			  ## lost.c:186:9
 1e0289c:    c0 ff 00 07 1e 00 	r0 = 1967872 <uECC_vli_cmp_unsafe+0xD9704 : 1e0700 >			  ## lost.c:188:9
 1e028a2:    11 73             	r1 = 49			  ## lost.c:188:9
 1e028a4:    02 fb be 0a       	r2 = 2750 <system_data_end+0xCA : abe >			  ## lost.c:188:9
 1e028a8:    43 08             	r3 = r4			  ## lost.c:188:9
 1e028aa:    c2 17             	call -124 <timer_pwm_delete : 1e02830 >			  ## lost.c:188:9
 1e028ac:    00 70             	r0 = 0			  ## lost.c:188:9
 1e028ae:    10 f9 7c 50       	b[r5 + 124] = r0			  ## lost.c:188:9
 1e028b2:    10 f9 74 50       	b[r5 + 116] = r0
 1e028b6:    55 01             	{pc, r5, r4} = [sp++]			  ## lost.c:192:1


buzzer_ring:
 1e028b8:    74 01             	[--sp] = {rets, r4}			  ## lost.c:195:0
 1e028ba:    10 70             	r0 = 1			  ## lost.c:197:2
 1e028bc:    41 71             	r1 = 20			  ## lost.c:197:2
 1e028be:    14 70             	r4 = 1			  ## lost.c:197:2
 1e028c0:    d0 17             	call -96 <buzzer_ctrl : 1e02862 >			  ## lost.c:197:2
 1e028c2:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lost.c:197:2
 1e028c8:    14 f9 74 00       	b[r0 + 116] = r4
 1e028cc:    54 01             	{pc, r4} = [sp++]			  ## lost.c:199:1


start_vibrate:
 1e028ce:    76 01             	[--sp] = {rets, r6-r4}			  ## app_spp_and_le.c:114:0
 1e028d0:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:114:0
 1e028d6:    e0 59             	r0 = h[r4 + 60] (u)			  ## app_spp_and_le.c:117:5
 1e028d8:    04 20             	if (r0 == 0) goto 8 <start_vibrate+0x14 : 1e028e2 >			  ## app_spp_and_le.c:117:5
 1e028da:    80 f3 fe 44       	call 35324 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:119:3
 1e028de:    00 70             	r0 = 0			  ## app_spp_and_le.c:120:29
 1e028e0:    e8 59             	h[r4 + 60] = r0			  ## app_spp_and_le.c:120:29
 1e028e2:    50 69             	r0 = b[r4 + 21] (u)			  ## app_spp_and_le.c:122:5
 1e028e4:    2f 20             	if (r0 == 0) goto 94 <start_vibrate+0x76 : 1e02944 >			  ## app_spp_and_le.c:122:5
 1e028e6:    b0 59             	r0 = h[r4 + 54] (u)			  ## app_spp_and_le.c:124:6
 1e028e8:    08 30             	if (r0 != 0) goto 16 <start_vibrate+0x2C : 1e028fa >			  ## app_spp_and_le.c:124:6
 1e028ea:    c0 ff 5c 29 e0 01 	r0 = 31467868 <stop_vibrate : 1e0295c >			  ## app_spp_and_le.c:125:31
 1e028f0:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:125:31
 1e028f4:    80 f3 9a 45       	call 35636 <usr_timeout_add : 1e0b42c >			  ## app_spp_and_le.c:125:31
 1e028f8:    b8 59             	h[r4 + 54] = r0			  ## app_spp_and_le.c:125:30
 1e028fa:    de 17             	call -68 <buzzer_ring : 1e028b8 >			  ## app_spp_and_le.c:128:4
 1e028fc:    50 69             	r0 = b[r4 + 21] (u)			  ## app_spp_and_le.c:129:6
 1e028fe:    c5 ff c0 08 00 00 	r5 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## app_spp_and_le.c:129:6
 1e02904:    10 e0 0f 10       	if (r0 != 1) goto 30 <start_vibrate+0x58 : 1e02926 >			  ## app_spp_and_le.c:129:6
 1e02908:    c1 ff 74 29 e0 01 	r1 = 31467892 <update_timer_for_timerdowm : 1e02974 >			  ## app_spp_and_le.c:131:32
 1e0290e:    00 70             	r0 = 0			  ## app_spp_and_le.c:131:32
 1e02910:    02 fb e8 03       	r2 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## app_spp_and_le.c:131:32
 1e02914:    13 70             	r3 = 1			  ## app_spp_and_le.c:131:32
 1e02916:    06 70             	r6 = 0			  ## app_spp_and_le.c:131:32
 1e02918:    80 f3 d3 44       	call 35238 <usr_timer_add : 1e0b2c2 >			  ## app_spp_and_le.c:131:32
 1e0291c:    11 4a             	r1 = [r5 + 4]			  ## app_spp_and_le.c:135:52
 1e0291e:    d8 59             	h[r4 + 58] = r0			  ## app_spp_and_le.c:131:31
 1e02920:    ce 49             	[r4 + 112] = r6			  ## app_spp_and_le.c:134:18
 1e02922:    50 76             	r0 = 101			  ## app_spp_and_le.c:135:4
 1e02924:    0c 18             	goto 24 <start_vibrate+0x70 : 1e0293e >			  ## app_spp_and_le.c:135:4
 1e02926:    20 e0 06 10       	if (r0 != 2) goto 12 <start_vibrate+0x68 : 1e02936 >
 1e0292a:    d0 59             	r0 = h[r4 + 58] (u)			  ## app_spp_and_le.c:139:7
 1e0292c:    04 20             	if (r0 == 0) goto 8 <start_vibrate+0x68 : 1e02936 >			  ## app_spp_and_le.c:139:7
 1e0292e:    80 f3 e7 43       	call 34766 <usr_timer_del : 1e0b100 >			  ## app_spp_and_le.c:141:5
 1e02932:    00 70             	r0 = 0			  ## app_spp_and_le.c:142:31
 1e02934:    d8 59             	h[r4 + 58] = r0			  ## app_spp_and_le.c:142:31
 1e02936:    dc f4 00 49       	[r4 + 112] = 0			  ## app_spp_and_le.c:146:18
 1e0293a:    31 4a             	r1 = [r5 + 12]			  ## app_spp_and_le.c:147:51
 1e0293c:    60 76             	r0 = 102			  ## app_spp_and_le.c:147:4
 1e0293e:    12 70             	r2 = 1
 1e02940:    bf f3 48 f9       	call -3440 <Report_SKIP_ROPE_MODE : 1e01bd4 >
 1e02944:    56 01             	{pc, r6-r4} = [sp++]			  ## app_spp_and_le.c:152:1


buzzer_close:
 1e02946:    74 01             	[--sp] = {rets, r4}			  ## lost.c:203:0
 1e02948:    00 70             	r0 = 0			  ## lost.c:205:2
 1e0294a:    01 70             	r1 = 0			  ## lost.c:205:2
 1e0294c:    04 70             	r4 = 0			  ## lost.c:205:2
 1e0294e:    89 17             	call -238 <buzzer_ctrl : 1e02862 >			  ## lost.c:205:2
 1e02950:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lost.c:205:2
 1e02956:    14 f9 74 00       	b[r0 + 116] = r4
 1e0295a:    54 01             	{pc, r4} = [sp++]			  ## lost.c:207:1


stop_vibrate:
 1e0295c:    74 01             	[--sp] = {rets, r4}			  ## app_spp_and_le.c:102:0
 1e0295e:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## app_spp_and_le.c:102:0
 1e02964:    b0 59             	r0 = h[r4 + 54] (u)			  ## app_spp_and_le.c:104:5
 1e02966:    02 20             	if (r0 == 0) goto 4 <stop_vibrate+0x10 : 1e0296c >			  ## app_spp_and_le.c:104:5
 1e02968:    80 f3 b7 44       	call 35182 <usr_timeout_del : 1e0b2da >			  ## app_spp_and_le.c:106:3
 1e0296c:    ec 17             	call -40 <buzzer_close : 1e02946 >			  ## app_spp_and_le.c:108:2
 1e0296e:    00 70             	r0 = 0			  ## app_spp_and_le.c:109:28
 1e02970:    b8 59             	h[r4 + 54] = r0			  ## app_spp_and_le.c:109:28
 1e02972:    54 01             	{pc, r4} = [sp++]			  ## app_spp_and_le.c:111:1


update_timer_for_timerdowm:
 1e02974:    c1 ff c0 08 00 00 	r1 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## app_spp_and_le.c:94:0
 1e0297a:    00 42             	r0 = [r1 + 0]			  ## app_spp_and_le.c:95:5
 1e0297c:    03 20             	if (r0 == 0) goto 6 <update_timer_for_timerdowm+0x10 : 1e02984 >			  ## app_spp_and_le.c:95:5
 1e0297e:    f0 8f             	r0 += -1			  ## app_spp_and_le.c:96:28
 1e02980:    08 42             	[r1 + 0] = r0			  ## app_spp_and_le.c:96:28
 1e02982:    01 18             	goto 2 <update_timer_for_timerdowm+0x12 : 1e02986 >			  ## app_spp_and_le.c:96:28
 1e02984:    00 70             	r0 = 0
 1e02986:    11 70             	r1 = 1			  ## app_spp_and_le.c:98:2
 1e02988:    ff f3 44 f9       	goto -3448 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_spp_and_le.c:98:2


lib_btstack_version:
 1e0298c:    00 70             	r0 = 0			  ## version.c:25:0
 1e0298e:    20 00             	rts			  ## version.c:26:5


lib_media_version:
 1e02990:    00 70             	r0 = 0			  ## version.c:29:0
 1e02992:    20 00             	rts			  ## version.c:30:5


custom_idle_query:
 1e02994:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## board_ac632n_demo.c:668:0
 1e0299a:    00 f9 74 00       	r0 = b[r0 + 116] (u)			  ## board_ac632n_demo.c:668:0
 1e0299e:    11 70             	r1 = 1			  ## board_ac632n_demo.c:668:0
 1e029a0:    e3 fd 00 01       	r0 = r1 & ~r0			  ## board_ac632n_demo.c:674:1
 1e029a4:    20 00             	rts			  ## board_ac632n_demo.c:674:1


port_protect:
 1e029a6:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:352:0
 1e029a8:    f1 ef 10 00       	if (r1 == -1) goto 32 <port_protect+0x26 : 1e029cc >			  ## board_ac632n_demo.c:352:0
 1e029ac:    ca d0             	r2 = r1 >> 3			  ## board_ac632n_demo.c:356:5
 1e029ae:    c3 ff fe ff ff 1f 	r3 = 536870910 <bank_code_load_addr+0x1E55DA : 1fffffe >			  ## board_ac632n_demo.c:356:25
 1e029b4:    52 b7             	r2 &= r3			  ## board_ac632n_demo.c:356:25
 1e029b6:    03 f8 00 02       	r3 = h[r0+r2] (u)			  ## board_ac632n_demo.c:356:41
 1e029ba:    21 fd 0f 19       	r1 = r1 & 15			  ## board_ac632n_demo.c:356:45
 1e029be:    14 70             	r4 = 1
 1e029c0:    f8 fd 10 14       	r1 = r4 << r1			  ## board_ac632n_demo.c:356:45
 1e029c4:    e3 fd 10 13       	r1 = r3 & ~r1			  ## board_ac632n_demo.c:356:41
 1e029c8:    11 f8 00 02       	h[r0+r2] = r1			  ## board_ac632n_demo.c:356:41
 1e029cc:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:357:1


gpio_dir:
 1e029ce:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:351:0
 1e029d0:    24 08             	r4 = r2			  ## gpio.c:351:0
 1e029d2:    15 08             	r5 = r1			  ## gpio.c:351:0
 1e029d4:    10 e3 12 30       	if (r0 < 49) goto 36 <gpio_dir+0x2E : 1e029fc >			  ## gpio.c:354:9
 1e029d8:    1f 2a             	if (r5 == 0) goto 62 <gpio_dir+0x4A : 1e02a18 >
 1e029da:    06 70             	r6 = 0
 1e029dc:    17 70             	r7 = 1
 1e029de:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:357:27
 1e029e2:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:357:27
 1e029e6:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_dir+0x20 : 1e029ee >			  ## gpio.c:357:21
 1e029ea:    11 70             	r1 = 1			  ## gpio.c:358:21
 1e029ec:    01 18             	goto 2 <gpio_dir+0x22 : 1e029f0 >			  ## gpio.c:358:21
 1e029ee:    01 70             	r1 = 0			  ## gpio.c:360:21
 1e029f0:    bf f3 a1 f6       	call -4798 <usb_set_direction : 1e01736 >
 1e029f4:    16 80             	r6 += 1			  ## gpio.c:356:45
 1e029f6:    65 f2 f2 1f       	if (r5 != r6) goto -28 <gpio_dir+0x10 : 1e029de >
 1e029fa:    57 01             	{pc, r7-r4} = [sp++]
 1e029fc:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e029fe:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02a04:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e02a06:    c1 ff 3c f2 e0 01 	r1 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e02a0c:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e02a10:    03 20             	if (r0 == 0) goto 6 <gpio_dir+0x4A : 1e02a18 >
 1e02a12:    21 40             	r1 = [r0 + 8]			  ## gpio.c:382:18
 1e02a14:    51 b8             	r1 |= r4			  ## gpio.c:391:13
 1e02a16:    29 40             	[r0 + 8] = r1			  ## gpio.c:397:12
 1e02a18:    57 01             	{pc, r7-r4} = [sp++]


usb_set_pull_up:
 1e02a1a:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:140:0
 1e02a20:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_up+0x1A : 1e02a34 >			  ## gpio.c:141:9
 1e02a24:    20 80             	r0 += 2
 1e02a26:    13 70             	r3 = 1
 1e02a28:    f8 fd 00 03       	r0 = r3 << r0
 1e02a2c:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_up+0x2A : 1e02a44 >			  ## gpio.c:143:13
 1e02a2e:    91 44             	r1 = [r2 + 36]			  ## gpio.c:144:30
 1e02a30:    50 b2             	r0 |= r1			  ## gpio.c:144:30
 1e02a32:    0b 18             	goto 22 <usb_set_pull_up+0x30 : 1e02a4a >			  ## gpio.c:144:30
 1e02a34:    40 80             	r0 += 4
 1e02a36:    13 70             	r3 = 1
 1e02a38:    f8 fd 00 03       	r0 = r3 << r0
 1e02a3c:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_up+0x34 : 1e02a4e >			  ## gpio.c:150:13
 1e02a3e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:151:29
 1e02a40:    50 b2             	r0 |= r1			  ## gpio.c:151:29
 1e02a42:    08 18             	goto 16 <usb_set_pull_up+0x3A : 1e02a54 >			  ## gpio.c:151:29
 1e02a44:    91 44             	r1 = [r2 + 36]			  ## gpio.c:146:30
 1e02a46:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:146:30
 1e02a4a:    98 44             	[r2 + 36] = r0
 1e02a4c:    20 00             	rts
 1e02a4e:    01 44             	r1 = [r2 + 0]			  ## gpio.c:153:29
 1e02a50:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:153:29
 1e02a54:    08 44             	[r2 + 0] = r0
 1e02a56:    20 00             	rts


gpio_set_pu:
 1e02a58:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:598:0
 1e02a5a:    24 08             	r4 = r2			  ## gpio.c:598:0
 1e02a5c:    15 08             	r5 = r1			  ## gpio.c:598:0
 1e02a5e:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_set_pu+0x2C : 1e02a84 >			  ## gpio.c:602:9
 1e02a62:    1e 2a             	if (r5 == 0) goto 60 <gpio_set_pu+0x48 : 1e02aa0 >
 1e02a64:    06 70             	r6 = 0
 1e02a66:    17 70             	r7 = 1
 1e02a68:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:605:27
 1e02a6c:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:605:27
 1e02a70:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_set_pu+0x20 : 1e02a78 >			  ## gpio.c:605:21
 1e02a74:    11 70             	r1 = 1			  ## gpio.c:606:21
 1e02a76:    01 18             	goto 2 <gpio_set_pu+0x22 : 1e02a7a >			  ## gpio.c:606:21
 1e02a78:    01 70             	r1 = 0			  ## gpio.c:608:21
 1e02a7a:    cf 17             	call -98 <usb_set_pull_up : 1e02a1a >
 1e02a7c:    16 80             	r6 += 1			  ## gpio.c:604:45
 1e02a7e:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_set_pu+0x10 : 1e02a68 >
 1e02a82:    57 01             	{pc, r7-r4} = [sp++]
 1e02a84:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e02a86:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02a8c:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e02a8e:    c1 ff 3c f2 e0 01 	r1 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e02a94:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e02a98:    03 20             	if (r0 == 0) goto 6 <gpio_set_pu+0x48 : 1e02aa0 >
 1e02a9a:    41 40             	r1 = [r0 + 16]			  ## gpio.c:630:18
 1e02a9c:    51 b9             	r1 &= r4			  ## gpio.c:636:13
 1e02a9e:    49 40             	[r0 + 16] = r1			  ## gpio.c:646:11
 1e02aa0:    57 01             	{pc, r7-r4} = [sp++]


gpio_set_pd:
 1e02aa2:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:684:0
 1e02aa4:    24 08             	r4 = r2			  ## gpio.c:684:0
 1e02aa6:    15 08             	r5 = r1			  ## gpio.c:684:0
 1e02aa8:    10 e3 12 30       	if (r0 < 49) goto 36 <gpio_set_pd+0x2E : 1e02ad0 >			  ## gpio.c:688:9
 1e02aac:    1f 2a             	if (r5 == 0) goto 62 <gpio_set_pd+0x4A : 1e02aec >
 1e02aae:    06 70             	r6 = 0
 1e02ab0:    17 70             	r7 = 1
 1e02ab2:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:691:27
 1e02ab6:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:691:27
 1e02aba:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_set_pd+0x20 : 1e02ac2 >			  ## gpio.c:691:21
 1e02abe:    11 70             	r1 = 1			  ## gpio.c:692:21
 1e02ac0:    01 18             	goto 2 <gpio_set_pd+0x22 : 1e02ac4 >			  ## gpio.c:692:21
 1e02ac2:    01 70             	r1 = 0			  ## gpio.c:694:21
 1e02ac4:    bf f3 c5 f5       	call -5238 <usb_set_pull_down : 1e01652 >
 1e02ac8:    16 80             	r6 += 1			  ## gpio.c:690:45
 1e02aca:    65 f2 f2 1f       	if (r5 != r6) goto -28 <gpio_set_pd+0x10 : 1e02ab2 >
 1e02ace:    57 01             	{pc, r7-r4} = [sp++]
 1e02ad0:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e02ad2:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02ad8:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e02ada:    c1 ff 3c f2 e0 01 	r1 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e02ae0:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e02ae4:    03 20             	if (r0 == 0) goto 6 <gpio_set_pd+0x4A : 1e02aec >
 1e02ae6:    51 40             	r1 = [r0 + 20]			  ## gpio.c:716:18
 1e02ae8:    51 b9             	r1 &= r4			  ## gpio.c:722:13
 1e02aea:    59 40             	[r0 + 20] = r1			  ## gpio.c:731:11
 1e02aec:    57 01             	{pc, r7-r4} = [sp++]


usb_set_die:
 1e02aee:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:180:0
 1e02af4:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_die+0x1A : 1e02b08 >			  ## gpio.c:181:9
 1e02af8:    60 80             	r0 += 6
 1e02afa:    13 70             	r3 = 1
 1e02afc:    f8 fd 00 03       	r0 = r3 << r0
 1e02b00:    0b 22             	if (r1 == 0) goto 22 <usb_set_die+0x2A : 1e02b18 >			  ## gpio.c:183:13
 1e02b02:    91 44             	r1 = [r2 + 36]			  ## gpio.c:184:30
 1e02b04:    50 b2             	r0 |= r1			  ## gpio.c:184:30
 1e02b06:    0b 18             	goto 22 <usb_set_die+0x30 : 1e02b1e >			  ## gpio.c:184:30
 1e02b08:    80 80             	r0 += 8
 1e02b0a:    13 70             	r3 = 1
 1e02b0c:    f8 fd 00 03       	r0 = r3 << r0
 1e02b10:    08 22             	if (r1 == 0) goto 16 <usb_set_die+0x34 : 1e02b22 >			  ## gpio.c:190:13
 1e02b12:    01 44             	r1 = [r2 + 0]			  ## gpio.c:191:29
 1e02b14:    50 b2             	r0 |= r1			  ## gpio.c:191:29
 1e02b16:    08 18             	goto 16 <usb_set_die+0x3A : 1e02b28 >			  ## gpio.c:191:29
 1e02b18:    91 44             	r1 = [r2 + 36]			  ## gpio.c:186:30
 1e02b1a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:186:30
 1e02b1e:    98 44             	[r2 + 36] = r0
 1e02b20:    20 00             	rts
 1e02b22:    01 44             	r1 = [r2 + 0]			  ## gpio.c:193:29
 1e02b24:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:193:29
 1e02b28:    08 44             	[r2 + 0] = r0
 1e02b2a:    20 00             	rts


gpio_die:
 1e02b2c:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:862:0
 1e02b2e:    24 08             	r4 = r2			  ## gpio.c:862:0
 1e02b30:    15 08             	r5 = r1			  ## gpio.c:862:0
 1e02b32:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_die+0x2C : 1e02b58 >			  ## gpio.c:866:9
 1e02b36:    1e 2a             	if (r5 == 0) goto 60 <gpio_die+0x48 : 1e02b74 >
 1e02b38:    06 70             	r6 = 0
 1e02b3a:    17 70             	r7 = 1
 1e02b3c:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:869:27
 1e02b40:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:869:27
 1e02b44:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_die+0x20 : 1e02b4c >			  ## gpio.c:869:21
 1e02b48:    11 70             	r1 = 1			  ## gpio.c:870:21
 1e02b4a:    01 18             	goto 2 <gpio_die+0x22 : 1e02b4e >			  ## gpio.c:870:21
 1e02b4c:    01 70             	r1 = 0			  ## gpio.c:872:21
 1e02b4e:    cf 17             	call -98 <usb_set_die : 1e02aee >
 1e02b50:    16 80             	r6 += 1			  ## gpio.c:868:45
 1e02b52:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_die+0x10 : 1e02b3c >
 1e02b56:    57 01             	{pc, r7-r4} = [sp++]
 1e02b58:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e02b5a:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02b60:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e02b62:    c1 ff 3c f2 e0 01 	r1 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e02b68:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e02b6c:    03 20             	if (r0 == 0) goto 6 <gpio_die+0x48 : 1e02b74 >
 1e02b6e:    31 40             	r1 = [r0 + 12]			  ## gpio.c:894:18
 1e02b70:    51 b9             	r1 &= r4			  ## gpio.c:900:13
 1e02b72:    39 40             	[r0 + 12] = r1			  ## gpio.c:909:12
 1e02b74:    57 01             	{pc, r7-r4} = [sp++]


gpio_dieh:
 1e02b76:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:916:0
 1e02b78:    24 08             	r4 = r2			  ## gpio.c:916:0
 1e02b7a:    15 08             	r5 = r1			  ## gpio.c:916:0
 1e02b7c:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_dieh+0x2C : 1e02ba2 >			  ## gpio.c:921:9
 1e02b80:    1e 2a             	if (r5 == 0) goto 60 <gpio_dieh+0x48 : 1e02bbe >
 1e02b82:    06 70             	r6 = 0
 1e02b84:    17 70             	r7 = 1
 1e02b86:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:924:27
 1e02b8a:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:924:27
 1e02b8e:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_dieh+0x20 : 1e02b96 >			  ## gpio.c:924:21
 1e02b92:    11 70             	r1 = 1			  ## gpio.c:925:21
 1e02b94:    01 18             	goto 2 <gpio_dieh+0x22 : 1e02b98 >			  ## gpio.c:925:21
 1e02b96:    01 70             	r1 = 0			  ## gpio.c:927:21
 1e02b98:    0f 16             	call -994 <usb_set_dieh : 1e027b8 >
 1e02b9a:    16 80             	r6 += 1			  ## gpio.c:923:45
 1e02b9c:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_dieh+0x10 : 1e02b86 >
 1e02ba0:    57 01             	{pc, r7-r4} = [sp++]
 1e02ba2:    80 d0             	r0 = r0 >> 2			  ## gpio.c:49:31
 1e02ba4:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## gpio.c:49:46
 1e02baa:    50 b3             	r0 &= r1			  ## gpio.c:49:46
 1e02bac:    c1 ff 3c f2 e0 01 	r1 = 31519292 <gpio_regs : 1e0f23c >			  ## gpio.c:49:31
 1e02bb2:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:49:31
 1e02bb6:    03 20             	if (r0 == 0) goto 6 <gpio_dieh+0x48 : 1e02bbe >
 1e02bb8:    81 40             	r1 = [r0 + 32]			  ## gpio.c:950:18
 1e02bba:    51 b9             	r1 &= r4			  ## gpio.c:956:13
 1e02bbc:    89 40             	[r0 + 32] = r1			  ## gpio.c:965:13
 1e02bbe:    57 01             	{pc, r7-r4} = [sp++]


close_gpio:
 1e02bc0:    76 01             	[--sp] = {rets, r6-r4}			  ## board_ac632n_demo.c:362:0
 1e02bc2:    fc 0b             	sp += -8			  ## board_ac632n_demo.c:362:0
 1e02bc4:    c0 ff 84 eb e0 01 	r0 = 31517572 <wk_param+0x4C : 1e0eb84 >			  ## board_ac632n_demo.c:363:9
 1e02bca:    21 50             	r1 = h[r0 + 4] (u)			  ## board_ac632n_demo.c:363:9
 1e02bcc:    12 50             	r2 = h[r0 + 2] (u)			  ## board_ac632n_demo.c:363:9
 1e02bce:    00 50             	r0 = h[r0 + 0] (u)			  ## board_ac632n_demo.c:363:9
 1e02bd0:    91 f5 04 00       	h[sp+4] = r1			  ## board_ac632n_demo.c:363:9
 1e02bd4:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## board_ac632n_demo.c:363:9
 1e02bd8:    08 02             	[sp] = r0			  ## board_ac632n_demo.c:363:9
 1e02bda:    c0 ff 92 18 1a 00 	r0 = 1710226 <uECC_vli_cmp_unsafe+0x9A896 : 1a1892 >			  ## board_ac632n_demo.c:369:8
 1e02be0:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:369:8
 1e02be2:    03 f3 04 00       	if ((r0 & 8) == 0) goto 8 <close_gpio+0x2E : 1e02bee >			  ## board_ac632n_demo.c:369:8
 1e02be6:    00 fb fb 03       	r0 = 1019 <BTCTLER_LE_RAM_TOTAL+0x23 : 3fb >			  ## board_ac632n_demo.c:356:41
 1e02bea:    90 f5 02 00       	h[sp+2] = r0			  ## board_ac632n_demo.c:356:41
 1e02bee:    c0 ff 48 18 1a 00 	r0 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## board_ac632n_demo.c:374:8
 1e02bf4:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:374:8
 1e02bf6:    00 f3 19 00       	if ((r0 & 1) == 0) goto 50 <close_gpio+0x6C : 1e02c2c >			  ## board_ac632n_demo.c:374:8
 1e02bfa:    c0 ff c0 18 1a 00 	r0 = 1710272 <uECC_vli_cmp_unsafe+0x9A8C4 : 1a18c0 >			  ## board_ac632n_demo.c:376:23
 1e02c00:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:376:23
 1e02c02:    01 fc ff ff       	r1 = r0 + -1			  ## board_ac632n_demo.c:377:28
 1e02c06:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:377:28
 1e02c08:    91 e0 0e 90       	if (r1 <= 9) goto 28 <close_gpio+0x68 : 1e02c28 >			  ## board_ac632n_demo.c:377:28
 1e02c0c:    01 fc f5 ff       	r1 = r0 + -11			  ## board_ac632n_demo.c:380:35
 1e02c10:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:380:35
 1e02c12:    91 e0 02 80       	if (r1 > 9) goto 4 <close_gpio+0x5A : 1e02c1a >			  ## board_ac632n_demo.c:380:35
 1e02c16:    50 80             	r0 += 5			  ## board_ac632n_demo.c:381:52
 1e02c18:    06 18             	goto 12 <close_gpio+0x66 : 1e02c26 >			  ## board_ac632n_demo.c:381:52
 1e02c1a:    01 fc eb ff       	r1 = r0 + -21			  ## board_ac632n_demo.c:383:35
 1e02c1e:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:383:35
 1e02c20:    41 e0 78 80       	if (r1 > 4) goto 240 <close_gpio+0x154 : 1e02d14 >			  ## board_ac632n_demo.c:383:35
 1e02c24:    b0 80             	r0 += 11			  ## board_ac632n_demo.c:384:52
 1e02c26:    01 04             	r1 = r0.b0 (u)
 1e02c28:    00 a0             	r0 = sp + 0
 1e02c2a:    bd 16             	call -646 <port_protect : 1e029a6 >
 1e02c2c:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## board_ac632n_demo.c:356:41
 1e02c30:    70 b1             	r0 &= 4294967291			  ## board_ac632n_demo.c:356:41
 1e02c32:    90 f5 06 00       	h[sp+6] = r0			  ## board_ac632n_demo.c:356:41
 1e02c36:    86 f5 02 00       	r6 = h[sp+2] (u)			  ## board_ac632n_demo.c:356:41
 1e02c3a:    34 fd a0 69       	r4 = r6 & 4294967135			  ## board_ac632n_demo.c:356:41
 1e02c3e:    94 f5 02 00       	h[sp+2] = r4			  ## board_ac632n_demo.c:356:41
 1e02c42:    85 f5 00 00       	r5 = h[sp] (u)			  ## board_ac632n_demo.c:356:41
 1e02c46:    32 fd 01 59       	r2 = r5 & 4294967294			  ## board_ac632n_demo.c:405:27
 1e02c4a:    00 70             	r0 = 0			  ## board_ac632n_demo.c:405:5
 1e02c4c:    91 70             	r1 = 9			  ## board_ac632n_demo.c:405:5
 1e02c4e:    bf 16             	call -642 <gpio_dir : 1e029ce >			  ## board_ac632n_demo.c:405:5
 1e02c50:    d0 bb             	r0 = ~r5			  ## board_ac632n_demo.c:356:41
 1e02c52:    c1 ff 01 00 ff ff 	r1 = 4294901761 <bank_code_load_addr+0x1D55DD : 1ff0001 >			  ## board_ac632n_demo.c:405:27
 1e02c58:    e0 fd 10 50       	r5 = r0 | r1			  ## board_ac632n_demo.c:406:30
 1e02c5c:    00 70             	r0 = 0			  ## board_ac632n_demo.c:406:5
 1e02c5e:    91 70             	r1 = 9			  ## board_ac632n_demo.c:406:5
 1e02c60:    52 08             	r2 = r5			  ## board_ac632n_demo.c:406:5
 1e02c62:    fa 16             	call -524 <gpio_set_pu : 1e02a58 >			  ## board_ac632n_demo.c:406:5
 1e02c64:    00 70             	r0 = 0			  ## board_ac632n_demo.c:407:5
 1e02c66:    91 70             	r1 = 9			  ## board_ac632n_demo.c:407:5
 1e02c68:    52 08             	r2 = r5			  ## board_ac632n_demo.c:407:5
 1e02c6a:    1b 17             	call -458 <gpio_set_pd : 1e02aa2 >			  ## board_ac632n_demo.c:407:5
 1e02c6c:    00 70             	r0 = 0			  ## board_ac632n_demo.c:408:5
 1e02c6e:    91 70             	r1 = 9			  ## board_ac632n_demo.c:408:5
 1e02c70:    52 08             	r2 = r5			  ## board_ac632n_demo.c:408:5
 1e02c72:    5c 17             	call -328 <gpio_die : 1e02b2c >			  ## board_ac632n_demo.c:408:5
 1e02c74:    00 70             	r0 = 0			  ## board_ac632n_demo.c:409:5
 1e02c76:    91 70             	r1 = 9			  ## board_ac632n_demo.c:409:5
 1e02c78:    52 08             	r2 = r5			  ## board_ac632n_demo.c:409:5
 1e02c7a:    7d 17             	call -262 <gpio_dieh : 1e02b76 >			  ## board_ac632n_demo.c:409:5
 1e02c7c:    00 71             	r0 = 16			  ## board_ac632n_demo.c:411:5
 1e02c7e:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:411:5
 1e02c80:    42 08             	r2 = r4			  ## board_ac632n_demo.c:411:5
 1e02c82:    a5 16             	call -694 <gpio_dir : 1e029ce >			  ## board_ac632n_demo.c:411:5
 1e02c84:    d0 bd             	r0 = ~r6			  ## board_ac632n_demo.c:356:41
 1e02c86:    c1 ff a0 00 ff ff 	r1 = 4294901920 <bank_code_load_addr+0x1D567C : 1ff00a0 >			  ## board_ac632n_demo.c:356:41
 1e02c8c:    e0 fd 10 40       	r4 = r0 | r1			  ## board_ac632n_demo.c:412:31
 1e02c90:    00 71             	r0 = 16			  ## board_ac632n_demo.c:412:5
 1e02c92:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:412:5
 1e02c94:    42 08             	r2 = r4			  ## board_ac632n_demo.c:412:5
 1e02c96:    e0 16             	call -576 <gpio_set_pu : 1e02a58 >			  ## board_ac632n_demo.c:412:5
 1e02c98:    00 71             	r0 = 16			  ## board_ac632n_demo.c:413:5
 1e02c9a:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:413:5
 1e02c9c:    42 08             	r2 = r4			  ## board_ac632n_demo.c:413:5
 1e02c9e:    01 17             	call -510 <gpio_set_pd : 1e02aa2 >			  ## board_ac632n_demo.c:413:5
 1e02ca0:    00 71             	r0 = 16			  ## board_ac632n_demo.c:414:5
 1e02ca2:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:414:5
 1e02ca4:    42 08             	r2 = r4			  ## board_ac632n_demo.c:414:5
 1e02ca6:    42 17             	call -380 <gpio_die : 1e02b2c >			  ## board_ac632n_demo.c:414:5
 1e02ca8:    00 71             	r0 = 16			  ## board_ac632n_demo.c:415:5
 1e02caa:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:415:5
 1e02cac:    42 08             	r2 = r4			  ## board_ac632n_demo.c:415:5
 1e02cae:    63 17             	call -314 <gpio_dieh : 1e02b76 >			  ## board_ac632n_demo.c:415:5
 1e02cb0:    c1 ff 00 18 1e 00 	r1 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >
 1e02cb6:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cb8:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cba:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cbc:    10 fc 00 3c       	r0 = r1 + 15360			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cc0:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cc4:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e02cc6:    72 b2             	r2 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e02cc8:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e02cca:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e02ccc:    72 b3             	r2 &= 4294967231			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e02cce:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e02cd0:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cd2:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cd4:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cd6:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cda:    00 f4 04 09       	[r0 + 0] |= 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cde:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e02ce0:    72 b4             	r2 &= 4294967039			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e02ce2:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e02ce4:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02ce6:    72 b5             	r2 &= 4294966271			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02ce8:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02cea:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e02cec:    f2 b2             	r2 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e02cee:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e02cf0:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e02cf2:    f2 b3             	r2 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e02cf4:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e02cf6:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cf8:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cfa:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02cfc:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02d00:    00 f4 08 09       	[r0 + 0] |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e02d04:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e02d06:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e02d08:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e02d0a:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02d0c:    f1 b5             	r1 &= 4294965247			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02d0e:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02d10:    04 0a             	sp += 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:213:29
 1e02d12:    56 01             	{pc, r6-r4} = [sp++]			  ## board_ac632n_demo.c:440:1
 1e02d14:    60 8e             	r0 += -26			  ## board_ac632n_demo.c:386:18
 1e02d16:    30 e0 89 8f       	if (r0 > 3) goto -238 <close_gpio+0x6C : 1e02c2c >			  ## board_ac632n_demo.c:386:18
 1e02d1a:    a0 00             	tbb [r0]


.GJTIS272_0_0_:
 1e02d1c:    02     < 2 : 0x2 >
 1e02d1d:    02     < 2 : 0x2 >
 1e02d1e:    02     < 2 : 0x2 >
 1e02d1f:    02     < 2 : 0x2 >
 1e02d20:    00 70             	r0 = 0
 1e02d22:    90 f5 06 00       	h[sp+6] = r0
 1e02d26:    82 1f             	goto -252 <close_gpio+0x6C : 1e02c2c >


sleep_enter_callback:
 1e02d28:    34 00             	[--sp] = rets			  ## board_ac632n_demo.c:563:0
 1e02d2a:    10 e0 01 00       	if (r0 == 1) goto 2 <sleep_enter_callback+0x8 : 1e02d30 >			  ## board_ac632n_demo.c:563:0
 1e02d2e:    48 17             	call -368 <close_gpio : 1e02bc0 >			  ## board_ac632n_demo.c:570:9
 1e02d30:    30 00             	pc = [sp++]			  ## board_ac632n_demo.c:573:1


sleep_exit_callback:
 1e02d32:    20 00             	rts			  ## board_ac632n_demo.c:557:0


mask_softflag_config:
 1e02d34:    c1 ff 30 18 1a 00 	r1 = 1710128 <uECC_vli_cmp_unsafe+0x9A834 : 1a1830 >			  ## power_hw.c:1234:0
 1e02d3a:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:1235:17
 1e02d3c:    12 b3             	r2 |= 64			  ## power_hw.c:1235:17
 1e02d3e:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:1235:17
 1e02d40:    02 60             	r2 = b[r0 + 0] (u)			  ## power_hw.c:1236:38
 1e02d42:    8a 62             	b[r1 + 8] = r2			  ## power_hw.c:1236:20
 1e02d44:    12 60             	r2 = b[r0 + 1] (u)			  ## power_hw.c:1237:38
 1e02d46:    9a 62             	b[r1 + 9] = r2			  ## power_hw.c:1237:20
 1e02d48:    22 60             	r2 = b[r0 + 2] (u)			  ## power_hw.c:1238:38
 1e02d4a:    aa 63             	b[r1 + 26] = r2			  ## power_hw.c:1238:20
 1e02d4c:    30 60             	r0 = b[r0 + 3] (u)			  ## power_hw.c:1239:38
 1e02d4e:    b8 63             	b[r1 + 27] = r0			  ## power_hw.c:1239:20
 1e02d50:    20 00             	rts			  ## power_hw.c:1240:1


board_set_soft_poweroff:
 1e02d52:    34 00             	[--sp] = rets			  ## board_ac632n_demo.c:535:0
 1e02d54:    fe 0b             	sp += -4			  ## board_ac632n_demo.c:535:0
 1e02d56:    c0 ff 14 54 1e 00 	r0 = 1987604 <uECC_vli_cmp_unsafe+0xDE418 : 1e5414 >			  ## board_ac632n_demo.c:302:58
 1e02d5c:    00 40             	r0 = [r0 + 0]			  ## board_ac632n_demo.c:302:58
 1e02d5e:    80 d3             	r0 = r0 >> 14			  ## board_ac632n_demo.c:302:46
 1e02d60:    20 fd 04 09       	r0 = r0 & 4			  ## board_ac632n_demo.c:302:46
 1e02d64:    d0 f5 00 00       	b[sp] = r0			  ## board_ac632n_demo.c:302:46
 1e02d68:    00 70             	r0 = 0			  ## board_ac632n_demo.c:308:37
 1e02d6a:    d0 f5 01 00       	b[sp+1] = r0			  ## board_ac632n_demo.c:308:37
 1e02d6e:    d0 f5 02 00       	b[sp+2] = r0			  ## board_ac632n_demo.c:311:38
 1e02d72:    d0 f5 03 00       	b[sp+3] = r0			  ## board_ac632n_demo.c:314:38
 1e02d76:    00 a0             	r0 = sp + 0			  ## board_ac632n_demo.c:314:38
 1e02d78:    dd 17             	call -70 <mask_softflag_config : 1e02d34 >			  ## board_ac632n_demo.c:315:5
 1e02d7a:    22 17             	call -444 <close_gpio : 1e02bc0 >			  ## board_ac632n_demo.c:547:5
 1e02d7c:    02 0a             	sp += 4			  ## board_ac632n_demo.c:547:5
 1e02d7e:    30 00             	pc = [sp++]			  ## board_ac632n_demo.c:550:1


aport_wakeup_callback:
 1e02d80:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:769:0
 1e02d82:    10 fc c9 ff       	r0 = r1 + -55			  ## board_ac632n_demo.c:772:5
 1e02d86:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e02d8c:    20 e0 11 20       	if (r0 >= 2) goto 34 <aport_wakeup_callback+0x32 : 1e02db2 >
 1e02d90:    00 f9 b5 41       	r0 = b[r4 + 437] (u)			  ## charge.c:302:18
 1e02d94:    18 20             	if (r0 == 0) goto 48 <aport_wakeup_callback+0x46 : 1e02dc6 >			  ## charge.c:302:18
 1e02d96:    00 f6 b8 41       	r0 = [r4 + 440]			  ## charge.c:306:17
 1e02d9a:    15 30             	if (r0 != 0) goto 42 <aport_wakeup_callback+0x46 : 1e02dc6 >			  ## charge.c:306:17
 1e02d9c:    c1 ff f0 05 e0 01 	r1 = 31458800 <ldo5v_detect : 1e005f0 >			  ## charge.c:307:31
 1e02da2:    00 70             	r0 = 0			  ## charge.c:307:31
 1e02da4:    22 70             	r2 = 2			  ## charge.c:307:31
 1e02da6:    13 70             	r3 = 1			  ## charge.c:307:31
 1e02da8:    80 f3 8b 42       	call 34070 <usr_timer_add : 1e0b2c2 >			  ## charge.c:307:31
 1e02dac:    10 f6 b8 41       	[r4 + 440] = r0			  ## charge.c:307:29
 1e02db0:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:782:1
 1e02db2:    51 e3 08 10       	if (r1 != 53) goto 16 <aport_wakeup_callback+0x46 : 1e02dc6 >
 1e02db6:    00 f9 b5 41       	r0 = b[r4 + 437] (u)			  ## charge.c:313:18
 1e02dba:    05 20             	if (r0 == 0) goto 10 <aport_wakeup_callback+0x46 : 1e02dc6 >			  ## charge.c:313:18
 1e02dbc:    bf f3 db ec       	call -9802 <power_wakeup_disable_with_port : 1e00776 >			  ## charge.c:317:5
 1e02dc0:    00 f6 bc 41       	r0 = [r4 + 444]			  ## charge.c:318:17
 1e02dc4:    01 20             	if (r0 == 0) goto 2 <aport_wakeup_callback+0x48 : 1e02dc8 >			  ## charge.c:318:17
 1e02dc6:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:782:1
 1e02dc8:    c1 ff 1e 07 e0 01 	r1 = 31459102 <charge_full_detect : 1e0071e >			  ## charge.c:319:32
 1e02dce:    00 70             	r0 = 0			  ## charge.c:319:32
 1e02dd0:    22 70             	r2 = 2			  ## charge.c:319:32
 1e02dd2:    13 70             	r3 = 1			  ## charge.c:319:32
 1e02dd4:    80 f3 75 42       	call 34026 <usr_timer_add : 1e0b2c2 >			  ## charge.c:319:32
 1e02dd8:    10 f6 bc 41       	[r4 + 444] = r0			  ## charge.c:319:30
 1e02ddc:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:782:1


port_wakeup_callback:
 1e02dde:    77 01             	[--sp] = {rets, r7-r4}			  ## board_ac632n_demo.c:682:0
 1e02de0:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## board_ac632n_demo.c:682:0
 1e02de6:    51 e1 04 00       	if (r1 == 21) goto 8 <port_wakeup_callback+0x14 : 1e02df2 >			  ## board_ac632n_demo.c:682:0
 1e02dea:    71 e1 06 10       	if (r1 != 23) goto 12 <port_wakeup_callback+0x1C : 1e02dfa >			  ## board_ac632n_demo.c:682:0
 1e02dee:    10 70             	r0 = 1			  ## board_ac632n_demo.c:682:0
 1e02df0:    01 18             	goto 2 <port_wakeup_callback+0x16 : 1e02df4 >			  ## board_ac632n_demo.c:682:0
 1e02df2:    20 70             	r0 = 2			  ## board_ac632n_demo.c:682:0
 1e02df4:    e1 4b             	r1 = [r5 + 120]			  ## board_ac632n_demo.c:682:0
 1e02df6:    50 b2             	r0 |= r1			  ## board_ac632n_demo.c:682:0
 1e02df8:    e8 4b             	[r5 + 120] = r0			  ## board_ac632n_demo.c:682:0
 1e02dfa:    00 f7 40 50       	r0 = h[r5 + 64] (u)			  ## board_ac632n_demo.c:746:9
 1e02dfe:    05 20             	if (r0 == 0) goto 10 <port_wakeup_callback+0x2C : 1e02e0a >			  ## board_ac632n_demo.c:746:9
 1e02e00:    01 fb b0 04       	r1 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD8 : 4b0 >			  ## board_ac632n_demo.c:749:17
 1e02e04:    80 f3 6a 42       	call 34004 <sys_timer_modify : 1e0b2dc >			  ## board_ac632n_demo.c:749:17
 1e02e08:    0a 18             	goto 20 <port_wakeup_callback+0x40 : 1e02e1e >			  ## board_ac632n_demo.c:749:17
 1e02e0a:    c1 ff 8c 2e e0 01 	r1 = 31469196 <skip_rope_date_update : 1e02e8c >			  ## board_ac632n_demo.c:747:30
 1e02e10:    00 70             	r0 = 0			  ## board_ac632n_demo.c:747:30
 1e02e12:    02 fb b0 04       	r2 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD8 : 4b0 >			  ## board_ac632n_demo.c:747:30
 1e02e16:    80 f3 02 43       	call 34308 <sys_timeout_add : 1e0b41e >			  ## board_ac632n_demo.c:747:30
 1e02e1a:    10 f7 40 50       	h[r5 + 64] = r0			  ## board_ac632n_demo.c:747:29
 1e02e1e:    e0 4b             	r0 = [r5 + 120]			  ## board_ac632n_demo.c:750:8
 1e02e20:    30 e0 28 10       	if (r0 != 3) goto 80 <port_wakeup_callback+0x96 : 1e02e74 >			  ## board_ac632n_demo.c:750:8
 1e02e24:    b0 4b             	r0 = [r5 + 108]			  ## app_spp_and_le.c:354:20
 1e02e26:    10 80             	r0 += 1			  ## app_spp_and_le.c:354:20
 1e02e28:    b8 4b             	[r5 + 108] = r0			  ## app_spp_and_le.c:354:20
 1e02e2a:    51 6b             	r1 = b[r5 + 21] (u)			  ## app_spp_and_le.c:355:8
 1e02e2c:    21 e0 07 00       	if (r1 == 2) goto 14 <port_wakeup_callback+0x60 : 1e02e3e >			  ## app_spp_and_le.c:355:8
 1e02e30:    19 32             	if (r1 != 0) goto 50 <port_wakeup_callback+0x86 : 1e02e64 >
 1e02e32:    01 70             	r1 = 0			  ## app_spp_and_le.c:357:9
 1e02e34:    bf f3 ee f6       	call -4644 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_spp_and_le.c:357:9
 1e02e38:    b0 4b             	r0 = [r5 + 108]			  ## app_spp_and_le.c:358:28
 1e02e3a:    41 75             	r1 = 84			  ## app_spp_and_le.c:358:5
 1e02e3c:    17 18             	goto 46 <port_wakeup_callback+0x8E : 1e02e6c >			  ## app_spp_and_le.c:358:5
 1e02e3e:    c6 ff c0 08 00 00 	r6 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >
 1e02e44:    20 4c             	r0 = [r6 + 8]			  ## app_spp_and_le.c:363:32
 1e02e46:    c1 4b             	r1 = [r5 + 112]			  ## app_spp_and_le.c:364:24
 1e02e48:    04 fc ff ff       	r4 = r0 + -1			  ## app_spp_and_le.c:363:32
 1e02e4c:    2c 4c             	[r6 + 8] = r4			  ## app_spp_and_le.c:363:32
 1e02e4e:    10 92             	r0 = r1 + 1			  ## app_spp_and_le.c:364:24
 1e02e50:    c8 4b             	[r5 + 112] = r0			  ## app_spp_and_le.c:364:24
 1e02e52:    01 70             	r1 = 0			  ## app_spp_and_le.c:371:13
 1e02e54:    07 70             	r7 = 0			  ## app_spp_and_le.c:371:13
 1e02e56:    40 08             	r0 = r4			  ## app_spp_and_le.c:371:13
 1e02e58:    bf f3 dc f6       	call -4680 <DISPLAY_NUM_DATA_UPDATE : 1e01c14 >			  ## app_spp_and_le.c:371:13
 1e02e5c:    0c 28             	if (r4 == 0) goto 24 <port_wakeup_callback+0x98 : 1e02e76 >			  ## app_spp_and_le.c:371:13
 1e02e5e:    c0 4b             	r0 = [r5 + 112]			  ## app_spp_and_le.c:379:28
 1e02e60:    61 75             	r1 = 86			  ## app_spp_and_le.c:379:5
 1e02e62:    04 18             	goto 8 <port_wakeup_callback+0x8E : 1e02e6c >			  ## app_spp_and_le.c:379:5
 1e02e64:    c0 4b             	r0 = [r5 + 112]			  ## app_spp_and_le.c:384:18
 1e02e66:    10 80             	r0 += 1			  ## app_spp_and_le.c:384:18
 1e02e68:    c8 4b             	[r5 + 112] = r0			  ## app_spp_and_le.c:384:18
 1e02e6a:    51 75             	r1 = 85			  ## app_spp_and_le.c:385:4
 1e02e6c:    bf f3 98 ee       	call -8912 <Send_SKIP_ROPE_NUM_BLE : 1e00ba0 >
 1e02e70:    de f4 00 59       	[r5 + 120] = 0			  ## board_ac632n_demo.c:762:24
 1e02e74:    57 01             	{pc, r7-r4} = [sp++]			  ## board_ac632n_demo.c:766:1
 1e02e76:    00 70             	r0 = 0			  ## app_spp_and_le.c:372:13
 1e02e78:    01 70             	r1 = 0			  ## app_spp_and_le.c:372:13
 1e02e7a:    bf f3 08 ef       	call -8688 <DISPLAY_STATE_DATA_UPDATE : 1e00c8e >			  ## app_spp_and_le.c:372:13
 1e02e7e:    31 4c             	r1 = [r6 + 12]			  ## app_spp_and_le.c:373:48
 1e02e80:    60 75             	r0 = 86			  ## app_spp_and_le.c:373:5
 1e02e82:    02 70             	r2 = 0			  ## app_spp_and_le.c:373:5
 1e02e84:    bf f3 a6 f6       	call -4788 <Report_SKIP_ROPE_MODE : 1e01bd4 >			  ## app_spp_and_le.c:373:5
 1e02e88:    5f 6b             	b[r5 + 21] = r7			  ## app_spp_and_le.c:374:22
 1e02e8a:    f2 1f             	goto -28 <port_wakeup_callback+0x92 : 1e02e70 >			  ## app_spp_and_le.c:374:22


skip_rope_date_update:
 1e02e8c:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:620:0
 1e02e8e:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## board_ac632n_demo.c:620:0
 1e02e94:    00 f7 40 40       	r0 = h[r4 + 64] (u)			  ## board_ac632n_demo.c:652:8
 1e02e98:    05 20             	if (r0 == 0) goto 10 <skip_rope_date_update+0x18 : 1e02ea4 >			  ## board_ac632n_demo.c:652:8
 1e02e9a:    80 f3 1d 42       	call 33850 <sys_timeout_del : 1e0b2d8 >			  ## board_ac632n_demo.c:654:9
 1e02e9e:    00 70             	r0 = 0			  ## board_ac632n_demo.c:655:23
 1e02ea0:    10 f7 40 40       	h[r4 + 64] = r0			  ## board_ac632n_demo.c:655:23
 1e02ea4:    de f4 00 49       	[r4 + 120] = 0			  ## board_ac632n_demo.c:657:15
 1e02ea8:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:659:1


uart_enter_deepsleep:
 1e02eaa:    c0 ff 14 56 1e 00 	r0 = 1988116 <uECC_vli_cmp_unsafe+0xDE618 : 1e5614 >			  ## uart.c:384:0
 1e02eb0:    00 40             	r0 = [r0 + 0]			  ## uart.c:385:28
 1e02eb2:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## uart.c:386:17
 1e02eb8:    10 f6 80 10       	[r1 + 128] = r0			  ## uart.c:385:17
 1e02ebc:    20 fb 71 04       	r0 = 1974272			  ## uart.c:386:29
 1e02ec0:    00 40             	r0 = [r0 + 0]			  ## uart.c:386:29
 1e02ec2:    10 f6 84 10       	[r1 + 132] = r0			  ## uart.c:386:17
 1e02ec6:    20 00             	rts			  ## uart.c:387:1


uart_exit_deepsleep:
 1e02ec8:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## uart.c:390:0
 1e02ece:    01 f6 80 00       	r1 = [r0 + 128]			  ## uart.c:391:24
 1e02ed2:    c2 ff 08 50 1e 00 	r2 = 1986568 <uECC_vli_cmp_unsafe+0xDE00C : 1e5008 >			  ## uart.c:391:24
 1e02ed8:    11 f6 0c 26       	[r2 + 1548] = r1			  ## uart.c:391:22
 1e02edc:    01 44             	r1 = [r2 + 0]			  ## uart.c:392:19
 1e02ede:    f1 b2             	r1 &= 4294967263			  ## uart.c:392:19
 1e02ee0:    09 44             	[r2 + 0] = r1			  ## uart.c:392:19
 1e02ee2:    20 fb 71 14       	r1 = 1974272			  ## uart.c:392:19
 1e02ee6:    c2 f4 ff 1f       	[r1 + 8] = 4294967295			  ## uart.c:393:20
 1e02eea:    00 f6 84 00       	r0 = [r0 + 132]			  ## uart.c:394:22
 1e02eee:    08 42             	[r1 + 0] = r0			  ## uart.c:394:20
 1e02ef0:    00 f4 34 1a       	[r1 + 0] |= 13312			  ## uart.c:395:20
 1e02ef4:    20 00             	rts			  ## uart.c:398:1


clock_critical_enter:
 1e02ef6:    20 00             	rts			  ## uart.c:197:0


clock_critical_exit:
 1e02ef8:    20 00             	rts			  ## uart.c:200:0


tmr_enter_deepsleep:
 1e02efa:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:256:0
 1e02f00:    11 40             	r1 = [r0 + 4]			  ## timer.c:257:29
 1e02f02:    c2 ff 48 24 00 00 	r2 = 9288 <tmr_sfr.0 : 2448 >			  ## timer.c:259:16
 1e02f08:    09 44             	[r2 + 0] = r1			  ## timer.c:257:16
 1e02f0a:    21 40             	r1 = [r0 + 8]			  ## timer.c:258:29
 1e02f0c:    19 44             	[r2 + 4] = r1			  ## timer.c:258:16
 1e02f0e:    00 40             	r0 = [r0 + 0]			  ## timer.c:259:29
 1e02f10:    28 44             	[r2 + 8] = r0			  ## timer.c:259:16
 1e02f12:    20 00             	rts			  ## timer.c:260:1


timer1_isr:
 1e02f14:    e9 01             	[--sp] = {psr, rets, reti}			  ## timer.c:100:0
 1e02f16:    78 f3 3f 00       	[--sp] = {r5-r0}			  ## timer.c:106:20
 1e02f1a:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:106:20
 1e02f20:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## timer.c:106:20
 1e02f24:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## timer.c:106:20
 1e02f2a:    45 fc 94 00       	r5 = r4 + 148			  ## timer.c:106:20
 1e02f2e:    00 4a             	r0 = [r5 + 0]			  ## timer.c:111:5
 1e02f30:    10 80             	r0 += 1			  ## timer.c:111:5
 1e02f32:    08 4a             	[r5 + 0] = r0			  ## timer.c:111:5
 1e02f34:    10 4a             	r0 = [r5 + 4]			  ## timer.c:113:28
 1e02f36:    21 4a             	r1 = [r5 + 8]			  ## timer.c:113:17
 1e02f38:    10 09             	r0 += r1			  ## timer.c:113:17
 1e02f3a:    28 4a             	[r5 + 8] = r0			  ## timer.c:113:17
 1e02f3c:    80 f3 a0 42       	call 34112 <usr_timer_schedule : 1e0b480 >			  ## timer.c:115:5
 1e02f40:    30 4a             	r0 = [r5 + 12]			  ## timer.c:119:9
 1e02f42:    05 20             	if (r0 == 0) goto 10 <timer1_isr+0x3A : 1e02f4e >			  ## timer.c:119:9
 1e02f44:    00 f6 a0 40       	r0 = [r4 + 160]			  ## timer.c:120:18
 1e02f48:    f0 8f             	r0 += -1			  ## timer.c:120:18
 1e02f4a:    10 f6 a0 40       	[r4 + 160] = r0			  ## timer.c:120:18
 1e02f4e:    70 f3 3f 00       	{r5-r0} = [sp++]			  ## timer.c:125:1
 1e02f52:    a9 01             	{psr, rets, reti} = [sp++]			  ## timer.c:125:1
 1e02f54:    22 00             	rti			  ## timer.c:125:1


clock_critical_enter.507:
 1e02f56:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:241:0
 1e02f5c:    01 f9 a4 00       	r1 = b[r0 + 164] (u)			  ## timer.c:241:0
 1e02f60:    08 22             	if (r1 == 0) goto 16 <clock_critical_enter.507+0x1C : 1e02f72 >			  ## timer.c:241:0
 1e02f62:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:241:0
 1e02f68:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e02f6a:    12 f6 a8 00       	[r0 + 168] = r2			  ## timer.c:136:23
 1e02f6e:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e02f72:    20 00             	rts			  ## timer.c:243:1


clock_critical_exit.508:
 1e02f74:    ff f3 2d ec       	goto -10150 <timer1_resume : 1e007d2 >			  ## timer.c:246:0


__power_suspend_post:
 1e02f78:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:172:0
 1e02f7e:    01 f9 a4 00       	r1 = b[r0 + 164] (u)			  ## timer.c:172:0
 1e02f82:    08 22             	if (r1 == 0) goto 16 <__power_suspend_post+0x1C : 1e02f94 >			  ## timer.c:172:0
 1e02f84:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:172:0
 1e02f8a:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e02f8c:    12 f6 a8 00       	[r0 + 168] = r2			  ## timer.c:136:23
 1e02f90:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e02f94:    20 00             	rts			  ## timer.c:174:1


__power_resume:
 1e02f96:    34 00             	[--sp] = rets			  ## timer.c:177:0
 1e02f98:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:179:17
 1e02f9e:    02 f6 9c 00       	r2 = [r0 + 156]			  ## timer.c:179:17
 1e02fa2:    03 fb e8 03       	r3 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## timer.c:179:25
 1e02fa6:    c0 fe 30 11       	r1 = r1 / r3 (u)			  ## timer.c:179:25
 1e02faa:    21 09             	r1 += r2			  ## timer.c:179:17
 1e02fac:    11 f6 9c 00       	[r0 + 156] = r1			  ## timer.c:179:17
 1e02fb0:    bf f3 0f ec       	call -10210 <timer1_resume : 1e007d2 >			  ## timer.c:182:5
 1e02fb4:    88 01             	{rets} = [sp++]			  ## timer.c:184:5
 1e02fb6:    c0 f3 63 42       	goto 33990 <usr_timer_schedule : 1e0b480 >			  ## timer.c:184:5


exception_analyze:
 1e02fba:    60 f3 00 00       	trigger			  ## debug.c:896:0
 1e02fbe:    c0 ff 4a 18 1a 00 	r0 = 1710154 <uECC_vli_cmp_unsafe+0x9A84E : 1a184a >			  ## debug.c:888:18
 1e02fc4:    b1 7a             	r1 = 171			  ## debug.c:888:18
 1e02fc6:    09 60             	b[r0 + 0] = r1			  ## debug.c:888:18
 1e02fc8:    d0 f3 25 02       	goto 2098250 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


key_active_set:
 1e02fcc:    c0 ff 40 1d 00 00 	r0 = 7488 <is_key_active : 1d40 >			  ## key_driver.c:219:0
 1e02fd2:    31 72             	r1 = 35			  ## key_driver.c:220:19
 1e02fd4:    09 60             	b[r0 + 0] = r1			  ## key_driver.c:220:19
 1e02fd6:    20 00             	rts			  ## key_driver.c:221:1


__hw_p2m_irq:
 1e02fd8:    e9 01             	[--sp] = {psr, rets, reti}			  ## power_hw.c:1652:0
 1e02fda:    78 f3 ff 7f       	[--sp] = {r14-r0}			  ## power_hw.c:1652:0
 1e02fde:    c0 ff f3 1f 1a 00 	r0 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1652:0
 1e02fe4:    08 f9 01 00       	r8 = b[r0 + 1] (u)			  ## power_hw.c:1653:14
 1e02fe8:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1658:21
 1e02fea:    e0 fd 80 11       	r1 = r1 | r8			  ## power_hw.c:1658:21
 1e02fee:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1658:21
 1e02ff0:    00 fc b5 f8       	r0 = r0 + -1867			  ## power_wakeup.c:683:16
 1e02ff4:    09 f9 00 00       	r9 = b[r0 + 0] (u)
 1e02ff8:    0b fc a1 ff       	r11 = r0 + -95
 1e02ffc:    00 f3 05 90       	if ((r9 & 1) == 0) goto 10 <__hw_p2m_irq+0x32 : 1e0300a >
 1e03000:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## power_wakeup.c:688:21
 1e03004:    10 b3             	r0 |= 64			  ## power_wakeup.c:688:21
 1e03006:    10 f9 00 b0       	b[r11 + 0] = r0			  ## power_wakeup.c:688:21
 1e0300a:    cc ff c0 23 00 00 	r12 = 9152 <cur_ch : 23c0 >
 1e03010:    01 f3 28 90       	if ((r9 & 2) == 0) goto 80 <__hw_p2m_irq+0x8C : 1e03064 >
 1e03014:    00 f9 0d b0       	r0 = b[r11 + 13] (u)			  ## power_wakeup.c:692:21
 1e03018:    01 f9 0e b0       	r1 = b[r11 + 14] (u)			  ## power_wakeup.c:693:21
 1e0301c:    10 f9 0f b0       	b[r11 + 15] = r0			  ## power_wakeup.c:694:23
 1e03020:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## power_wakeup.c:696:45
 1e03024:    25 04             	r5 = r0.l (u)			  ## power_wakeup.c:612:9
 1e03026:    11 f9 10 b0       	b[r11 + 16] = r1			  ## power_wakeup.c:695:23
 1e0302a:    1c 2a             	if (r5 == 0) goto 56 <__hw_p2m_irq+0x8C : 1e03064 >			  ## power_wakeup.c:695:23
 1e0302c:    c6 ff 7c 23 00 00 	r6 = 9084 <hdl.0+0x4 : 237c >
 1e03032:    04 70             	r4 = 0
 1e03034:    1d 70             	r13 = 1
 1e03036:    ba fc 77 00       	r10 = r11 + 119
 1e0303a:    07 70             	r7 = 0
 1e0303c:    f8 fd 70 0d       	r0 = r13 << r7			  ## power_wakeup.c:614:23
 1e03040:    50 f0 0b 00       	if ((r0 & r5) == 0) goto 22 <__hw_p2m_irq+0x82 : 1e0305a >			  ## power_wakeup.c:614:23
 1e03044:    00 fa 00 7a       	r0 = b[r7+r10] (u)			  ## power_wakeup.c:616:21
 1e03048:    e0 e1 07 80       	if (r0 > 30) goto 14 <__hw_p2m_irq+0x82 : 1e0305a >			  ## power_wakeup.c:616:21
 1e0304c:    bf 17             	call -130 <key_active_set : 1e02fcc >			  ## power_wakeup.c:617:21
 1e0304e:    00 f6 b8 c0       	r0 = [r12 + 184]			  ## power_wakeup.c:618:25
 1e03052:    03 20             	if (r0 == 0) goto 6 <__hw_p2m_irq+0x82 : 1e0305a >			  ## power_wakeup.c:618:25
 1e03054:    01 6c             	r1 = b[r6 + 0] (u)			  ## power_wakeup.c:619:25
 1e03056:    00 05             	r0 = r4.b0 (u)			  ## power_wakeup.c:619:25
 1e03058:    c2 16             	call -636 <port_wakeup_callback : 1e02dde >			  ## power_wakeup.c:619:25
 1e0305a:    14 80             	r4 += 1			  ## power_wakeup.c:613:27
 1e0305c:    17 80             	r7 += 1			  ## power_wakeup.c:613:47
 1e0305e:    56 80             	r6 += 5			  ## power_wakeup.c:613:27
 1e03060:    c7 e0 ec 1f       	if (r7 != 12) goto -40 <__hw_p2m_irq+0x64 : 1e0303c >			  ## power_wakeup.c:613:27
 1e03064:    02 f3 30 90       	if ((r9 & 4) == 0) goto 96 <__hw_p2m_irq+0xF0 : 1e030c8 >
 1e03068:    0a f9 1c b0       	r10 = b[r11 + 28] (u)			  ## power_wakeup.c:700:23
 1e0306c:    09 f9 1d b0       	r9 = b[r11 + 29] (u)			  ## power_wakeup.c:701:23
 1e03070:    1a f9 1e b0       	b[r11 + 30] = r10			  ## power_wakeup.c:702:25
 1e03074:    b0 fc 1f 00       	r0 = r11 + 31			  ## power_wakeup.c:703:25
 1e03078:    19 f9 00 00       	b[r0 + 0] = r9			  ## power_wakeup.c:703:25
 1e0307c:    0e 70             	r14 = 0
 1e0307e:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e03084:    17 70             	r7 = 1
 1e03086:    cd ff e8 ef e0 01 	r13 = 31518696 <WSIG_to_PANA : 1e0efe8 >
 1e0308c:    14 70             	r4 = 1
 1e0308e:    be f1 01 00       	if ((r14 & r11) != 0) goto 2 <__hw_p2m_irq+0xBC : 1e03094 >
 1e03092:    04 70             	r4 = 0
 1e03094:    a6 08             	r6 = r10
 1e03096:    be f0 01 00       	if ((r14 & r11) == 0) goto 2 <__hw_p2m_irq+0xC4 : 1e0309c >
 1e0309a:    96 08             	r6 = r9
 1e0309c:    10 2c             	if (r6 == 0) goto 32 <__hw_p2m_irq+0xE6 : 1e030be >
 1e0309e:    05 70             	r5 = 0
 1e030a0:    f8 fd 50 07       	r0 = r7 << r5			  ## power_wakeup.c:593:27
 1e030a4:    60 f0 08 00       	if ((r0 & r6) == 0) goto 16 <__hw_p2m_irq+0xE0 : 1e030b8 >			  ## power_wakeup.c:593:27
 1e030a8:    00 f6 bc c0       	r0 = [r12 + 188]			  ## power_wakeup.c:596:25
 1e030ac:    05 20             	if (r0 == 0) goto 10 <__hw_p2m_irq+0xE0 : 1e030b8 >			  ## power_wakeup.c:596:25
 1e030ae:    01 fa 00 5d       	r1 = b[r5+r13] (u)			  ## power_wakeup.c:597:25
 1e030b2:    00 70             	r0 = 0			  ## power_wakeup.c:597:25
 1e030b4:    42 08             	r2 = r4			  ## power_wakeup.c:597:25
 1e030b6:    64 16             	call -824 <aport_wakeup_callback : 1e02d80 >			  ## power_wakeup.c:597:25
 1e030b8:    15 80             	r5 += 1			  ## power_wakeup.c:592:55
 1e030ba:    35 e0 f1 1f       	if (r5 != 3) goto -30 <__hw_p2m_irq+0xC8 : 1e030a0 >			  ## power_wakeup.c:592:55
 1e030be:    1e 80             	r14 += 1			  ## power_wakeup.c:582:29
 1e030c0:    e6 fd 00 0e       	r0 = r14.l (u)			  ## power_wakeup.c:582:29
 1e030c4:    20 e0 e2 1f       	if (r0 != 2) goto -60 <__hw_p2m_irq+0xB4 : 1e0308c >			  ## power_wakeup.c:582:29
 1e030c8:    c4 ff a1 14 1a 00 	r4 = 1709217 <uECC_vli_cmp_unsafe+0x9A4A5 : 1a14a1 >
 1e030ce:    75 68             	r5 = b[r4 + 7] (u)			  ## rtc.c:264:14
 1e030d0:    00 f3 0a 50       	if ((r5 & 1) == 0) goto 20 <__hw_p2m_irq+0x110 : 1e030e8 >			  ## rtc.c:264:14
 1e030d4:    40 fc df ff       	r0 = r4 + -33
 1e030d8:    01 60             	r1 = b[r0 + 0] (u)
 1e030da:    71 b0             	r1 &= 4294967294			  ## rtc.c:229:20
 1e030dc:    09 60             	b[r0 + 0] = r1			  ## rtc.c:229:20
 1e030de:    80 70             	r0 = 8			  ## rtc.c:258:17
 1e030e0:    01 40             	r1 = [r0 + 0]			  ## rtc.c:258:17
 1e030e2:    02 22             	if (r1 == 0) goto 4 <__hw_p2m_irq+0x110 : 1e030e8 >			  ## rtc.c:258:17
 1e030e4:    00 70             	r0 = 0			  ## rtc.c:259:9
 1e030e6:    81 00             	call r1			  ## rtc.c:259:9
 1e030e8:    04 f3 03 50       	if ((r5 & 16) == 0) goto 6 <__hw_p2m_irq+0x11A : 1e030f2 >
 1e030ec:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:272:9
 1e030ee:    10 b0             	r0 |= 1			  ## rtc.c:272:9
 1e030f0:    08 68             	b[r4 + 0] = r0			  ## rtc.c:272:9
 1e030f2:    05 f3 03 50       	if ((r5 & 32) == 0) goto 6 <__hw_p2m_irq+0x124 : 1e030fc >
 1e030f6:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:276:9
 1e030f8:    90 b0             	r0 |= 2			  ## rtc.c:276:9
 1e030fa:    08 68             	b[r4 + 0] = r0			  ## rtc.c:276:9
 1e030fc:    50 05             	r0 = r5.b0 (s)			  ## rtc.c:264:14
 1e030fe:    06 f3 03 50       	if ((r5 & 64) == 0) goto 6 <__hw_p2m_irq+0x130 : 1e03108 >			  ## rtc.c:264:14
 1e03102:    01 68             	r1 = b[r4 + 0] (u)			  ## rtc.c:280:9
 1e03104:    11 b1             	r1 |= 4			  ## rtc.c:280:9
 1e03106:    09 68             	b[r4 + 0] = r1			  ## rtc.c:280:9
 1e03108:    f0 ef 03 c0       	ifs (r0 > -1) goto 6 <__hw_p2m_irq+0x13A : 1e03112 >
 1e0310c:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:284:9
 1e0310e:    90 b1             	r0 |= 8			  ## rtc.c:284:9
 1e03110:    08 68             	b[r4 + 0] = r0			  ## rtc.c:284:9
 1e03112:    22 f3 04 80       	if ((r8 & 4) != 0) goto 8 <__hw_p2m_irq+0x146 : 1e0311e >
 1e03116:    70 f3 ff 7f       	{r14-r0} = [sp++]			  ## power_hw.c:1678:1
 1e0311a:    a9 01             	{psr, rets, reti} = [sp++]			  ## power_hw.c:1678:1
 1e0311c:    22 00             	rti			  ## power_hw.c:1678:1
 1e0311e:    28 fb 00 03       	r0 = rets			  ## wdt.c:60:5
 1e03122:    28 fb 00 00       	r0 = reti			  ## wdt.c:61:5
 1e03126:    28 fb 00 0e       	r0 = sp			  ## wdt.c:67:5
 1e0312a:    28 fb 00 0c       	r0 = usp			  ## wdt.c:69:5
 1e0312e:    28 fb 00 0d       	r0 = ssp			  ## wdt.c:71:5
 1e03132:    ff 1f             	goto -2 <__hw_p2m_irq+0x15A : 1e03132 >			  ## wdt.c:73:5


__wakeup_is_idle:
 1e03134:    10 70             	r0 = 1			  ## power_wakeup.c:107:0
 1e03136:    20 00             	rts			  ## power_wakeup.c:111:5


usb_dev_idle_query:
 1e03138:    10 70             	r0 = 1			  ## otg.c:579:0
 1e0313a:    20 00             	rts			  ## otg.c:588:1


lrc_critical_enter:
 1e0313c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:186:0
 1e03142:    00 f9 c0 00       	r0 = b[r0 + 192] (u)			  ## lrc_hw.c:186:0
 1e03146:    08 20             	if (r0 == 0) goto 16 <lrc_critical_enter+0x1C : 1e03158 >			  ## lrc_hw.c:186:0
 1e03148:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:186:0
 1e0314e:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e03150:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e03152:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e03154:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e03158:    20 00             	rts			  ## lrc_hw.c:188:1


__hw_lrc_enable:
 1e0315a:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:93:0
 1e03160:    01 f9 c0 10       	r1 = b[r1 + 192] (u)			  ## lrc_hw.c:93:0
 1e03164:    0b 22             	if (r1 == 0) goto 22 <__hw_lrc_enable+0x22 : 1e0317c >			  ## lrc_hw.c:93:0
 1e03166:    c1 ff 00 36 1e 00 	r1 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:93:0
 1e0316c:    02 42             	r2 = [r1 + 0]			  ## lrc_hw.c:98:18
 1e0316e:    72 b0             	r2 &= 4294967294			  ## lrc_hw.c:98:18
 1e03170:    0a 42             	[r1 + 0] = r2			  ## lrc_hw.c:98:18
 1e03172:    00 f4 40 19       	[r1 + 0] |= 64			  ## lrc_hw.c:100:18
 1e03176:    02 20             	if (r0 == 0) goto 4 <__hw_lrc_enable+0x22 : 1e0317c >			  ## lrc_hw.c:100:18
 1e03178:    00 f4 01 19       	[r1 + 0] |= 1			  ## lrc_hw.c:103:22
 1e0317c:    20 00             	rts			  ## lrc_hw.c:105:1


lrc_critical_exit:
 1e0317e:    10 70             	r0 = 1			  ## lrc_hw.c:191:0
 1e03180:    ec 1f             	goto -40 <__hw_lrc_enable : 1e0315a >			  ## lrc_hw.c:192:5


lrc_timeout_handler:
 1e03182:    78 01             	[--sp] = {rets, r8-r4}			  ## lrc_hw.c:134:0
 1e03184:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:134:0
 1e0318a:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:137:19
 1e0318c:    00 f3 6f 10       	if ((r1 & 1) == 0) goto 222 <lrc_timeout_handler+0xEC : 1e0326e >			  ## lrc_hw.c:137:19
 1e03190:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:141:22
 1e03192:    51 04             	r1 = r1.b0 (s)			  ## lrc_hw.c:141:36
 1e03194:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <lrc_timeout_handler+0xE : 1e03190 >			  ## lrc_hw.c:141:5
 1e03198:    12 40             	r2 = [r0 + 4]			  ## lrc_hw.c:145:24
 1e0319a:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >
 1e031a0:    01 f9 c0 80       	r1 = b[r8 + 192] (u)
 1e031a4:    05 22             	if (r1 == 0) goto 10 <lrc_timeout_handler+0x2E : 1e031b0 >
 1e031a6:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e031a8:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e031aa:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e031ac:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e031b0:    2a 24             	if (r2 == 0) goto 84 <lrc_timeout_handler+0x84 : 1e03206 >
 1e031b2:    c0 ff a0 31 00 00 	r0 = 12704 <hdl.5 : 31a0 >			  ## clock.c:1757:20
 1e031b8:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:1757:12
 1e031ba:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## clock.c:1757:35
 1e031c0:    40 0e             	r0 = r0 * r1			  ## clock.c:1757:35
 1e031c2:    c1 d6             	r1 = r0 >> 27			  ## clock.c:2260:9
 1e031c4:    40 c1             	r0 = r0 << 5			  ## clock.c:2260:9
 1e031c6:    03 70             	r3 = 0			  ## lrc_hw.c:159:80
 1e031c8:    80 f3 d2 1b       	call 14244 <__udivdi3 : 1e06970 >			  ## lrc_hw.c:159:80
 1e031cc:    10 f6 cc 80       	[r8 + 204] = r0			  ## lrc_hw.c:159:20
 1e031d0:    01 f9 c8 80       	r1 = b[r8 + 200] (u)
 1e031d4:    42 71             	r2 = 20
 1e031d6:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0x58 : 1e031da >
 1e031d8:    02 70             	r2 = 0
 1e031da:    c3 ff 80 27 00 00 	r3 = 10112 <lrc.7 : 2780 >
 1e031e0:    05 46             	r5 = [r3 + 0]			  ## lrc_hw.c:115:9
 1e031e2:    14 2a             	if (r5 == 0) goto 40 <lrc_timeout_handler+0x8A : 1e0320c >			  ## lrc_hw.c:115:9
 1e031e4:    85 04             	r5 = r2.b0 (u)			  ## lrc_hw.c:120:25
 1e031e6:    f5 8f             	r5 += -1			  ## lrc_hw.c:120:27
 1e031e8:    15 e0 0a b0       	ifs (r5 < 1) goto 20 <lrc_timeout_handler+0x7E : 1e03200 >			  ## lrc_hw.c:120:27
 1e031ec:    07 70             	r7 = 0
 1e031ee:    16 70             	r6 = 1
 1e031f0:    bf c0             	r7 = r7 << 2			  ## lrc_hw.c:121:54
 1e031f2:    37 09             	r7 += r3			  ## lrc_hw.c:121:13
 1e031f4:    14 4e             	r4 = [r7 + 4]			  ## lrc_hw.c:121:35
 1e031f6:    0c 4e             	[r7 + 0] = r4			  ## lrc_hw.c:121:33
 1e031f8:    87 05             	r7 = r6.b0 (u)			  ## lrc_hw.c:120:21
 1e031fa:    16 80             	r6 += 1			  ## lrc_hw.c:120:9
 1e031fc:    57 f2 f8 bf       	ifs (r7 < r5) goto -16 <lrc_timeout_handler+0x6E : 1e031f0 >			  ## lrc_hw.c:120:9
 1e03200:    b0 f6 00 35       	[r3+r5<<2] = r0			  ## lrc_hw.c:123:33
 1e03204:    0d 18             	goto 26 <lrc_timeout_handler+0x9E : 1e03220 >			  ## lrc_hw.c:123:33
 1e03206:    00 f4 01 09       	[r0 + 0] |= 1			  ## lrc_hw.c:152:22
 1e0320a:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1
 1e0320c:    05 70             	r5 = 0
 1e0320e:    12 22             	if (r1 == 0) goto 36 <lrc_timeout_handler+0xB2 : 1e03234 >
 1e03210:    85 04             	r5 = r2.b0 (u)			  ## lrc_hw.c:116:21
 1e03212:    06 70             	r6 = 0			  ## lrc_hw.c:116:21
 1e03214:    37 08             	r7 = r3			  ## lrc_hw.c:116:21
 1e03216:    16 80             	r6 += 1			  ## lrc_hw.c:116:29
 1e03218:    50 f6 04 70       	[r7 ++= 4] = r0			  ## lrc_hw.c:117:33
 1e0321c:    56 f2 fb 3f       	if (r6 < r5) goto -10 <lrc_timeout_handler+0x94 : 1e03216 >			  ## lrc_hw.c:117:33
 1e03220:    05 70             	r5 = 0
 1e03222:    08 22             	if (r1 == 0) goto 16 <lrc_timeout_handler+0xB2 : 1e03234 >
 1e03224:    80 04             	r0 = r2.b0 (u)			  ## lrc_hw.c:126:17
 1e03226:    06 70             	r6 = 0			  ## lrc_hw.c:126:17
 1e03228:    44 f6 04 30       	r4 = [r3 ++= 4]			  ## lrc_hw.c:127:16
 1e0322c:    16 80             	r6 += 1			  ## lrc_hw.c:126:25
 1e0322e:    45 09             	r5 += r4			  ## lrc_hw.c:127:13
 1e03230:    06 f2 fa 3f       	if (r6 < r0) goto -12 <lrc_timeout_handler+0xA6 : 1e03228 >
 1e03234:    80 04             	r0 = r2.b0 (u)			  ## lrc_hw.c:126:21
 1e03236:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:130:30
 1e0323a:    10 f6 c4 80       	[r8 + 196] = r0			  ## lrc_hw.c:130:24
 1e0323e:    40 71             	r0 = 20			  ## lrc_hw.c:168:31
 1e03240:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0xC2 : 1e03244 >			  ## lrc_hw.c:168:31
 1e03242:    00 70             	r0 = 0
 1e03244:    c1 ff f8 20 00 00 	r1 = 8440 <lrc.4 : 20f8 >
 1e0324a:    02 62             	r2 = b[r1 + 0] (u)			  ## lrc_hw.c:168:17
 1e0324c:    02 f2 0d 80       	if (r2 > r0) goto 26 <lrc_timeout_handler+0xE8 : 1e0326a >			  ## lrc_hw.c:168:17
 1e03250:    12 80             	r2 += 1			  ## lrc_hw.c:169:27
 1e03252:    83 04             	r3 = r2.b0 (u)			  ## lrc_hw.c:173:13
 1e03254:    0a 62             	b[r1 + 0] = r2			  ## lrc_hw.c:169:27
 1e03256:    03 f2 08 10       	if (r3 != r0) goto 16 <lrc_timeout_handler+0xE8 : 1e0326a >			  ## lrc_hw.c:169:27
 1e0325a:    c0 ff fa 20 00 00 	r0 = 8442 <lrc.2 : 20fa >			  ## lrc_hw.c:176:38
 1e03260:    00 60             	r0 = b[r0 + 0] (u)			  ## lrc_hw.c:176:38
 1e03262:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## lrc_hw.c:176:13
 1e03266:    80 f3 68 41       	call 33488 <usr_timer_modify : 1e0b53a >			  ## lrc_hw.c:176:13
 1e0326a:    10 70             	r0 = 1			  ## lrc_hw.c:180:5
 1e0326c:    76 17             	call -276 <__hw_lrc_enable : 1e0315a >			  ## lrc_hw.c:180:5
 1e0326e:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1


__hw_btosc_time_set:
 1e03270:    7c 01             	[--sp] = {rets, r12-r4}			  ## power_hw.c:360:0
 1e03272:    ca ff c0 47 00 00 	r10 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:371:19
 1e03278:    a0 fc 40 01       	r0 = r10 + 320			  ## power_hw.c:371:19
 1e0327c:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:361:23
 1e0327e:    89 d1             	r1 = r1 >> 6			  ## power_hw.c:361:23
 1e03280:    09 40             	[r0 + 0] = r1			  ## power_hw.c:361:23
 1e03282:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## power_hw.c:361:23
 1e03288:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:363:5
 1e0328a:    22 fd fc 29       	r2 = r2 & 252			  ## power_hw.c:363:5
 1e0328e:    12 b0             	r2 |= 1			  ## power_hw.c:363:5
 1e03290:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:363:5
 1e03292:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:365:5
 1e03294:    02 fd 0c 29       	r2 = r2 | 12			  ## power_hw.c:365:5
 1e03298:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:365:5
 1e0329a:    01 fb b8 0b       	r1 = 3000 <BTCTLER_CL_CODE_TOTAL+0x6C : bb8 >			  ## power_hw.c:365:5
 1e0329e:    11 f6 24 a0       	[r10 + 36] = r1			  ## power_hw.c:367:29
 1e032a2:    09 f6 00 00       	r9 = [r0 + 0]			  ## power_hw.c:273:18
 1e032a6:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e032a8:    02 fb ec 13       	r2 = 5100 <UPDATE_CODE_TOTAL_SIZE+0x1AA : 13ec >			  ## power_hw.c:273:16
 1e032ac:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e032ae:    90 08             	r0 = r9			  ## power_hw.c:273:16
 1e032b0:    80 f3 3f 1b       	call 13950 <__muldi3 : 1e06932 >			  ## power_hw.c:273:16
 1e032b4:    06 08             	r6 = r0			  ## power_hw.c:273:16
 1e032b6:    17 08             	r7 = r1			  ## power_hw.c:273:16
 1e032b8:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## power_hw.c:273:16
 1e032be:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e032c0:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e032c2:    80 f3 59 1c       	call 14514 <__umoddi3 : 1e06b78 >			  ## power_hw.c:275:11
 1e032c6:    04 08             	r4 = r0			  ## power_hw.c:275:11
 1e032c8:    15 08             	r5 = r1			  ## power_hw.c:275:11
 1e032ca:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e032cc:    60 08             	r0 = r6			  ## power_hw.c:275:11
 1e032ce:    71 08             	r1 = r7			  ## power_hw.c:275:11
 1e032d0:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e032d2:    80 f3 4d 1b       	call 13978 <__udivdi3 : 1e06970 >			  ## power_hw.c:275:11
 1e032d6:    e0 fd 50 24       	r2 = r4 | r5			  ## power_hw.c:279:9
 1e032da:    1b 70             	r11 = 1			  ## power_hw.c:279:9
 1e032dc:    11 70             	r1 = 1			  ## power_hw.c:279:9
 1e032de:    01 34             	if (r2 != 0) goto 2 <__hw_btosc_time_set+0x72 : 1e032e2 >			  ## power_hw.c:279:9
 1e032e0:    01 70             	r1 = 0			  ## power_hw.c:279:9
 1e032e2:    0c b2             	r12 = r1 + r0			  ## power_hw.c:279:9
 1e032e4:    1c f6 20 a0       	[r10 + 32] = r12			  ## power_hw.c:369:20
 1e032e8:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e032ea:    02 fb b8 0b       	r2 = 3000 <BTCTLER_CL_CODE_TOTAL+0x6C : bb8 >			  ## power_hw.c:273:16
 1e032ee:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e032f0:    90 08             	r0 = r9			  ## power_hw.c:273:16
 1e032f2:    80 f3 1e 1b       	call 13884 <__muldi3 : 1e06932 >			  ## power_hw.c:273:16
 1e032f6:    04 08             	r4 = r0			  ## power_hw.c:273:16
 1e032f8:    15 08             	r5 = r1			  ## power_hw.c:273:16
 1e032fa:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e032fc:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e032fe:    80 f3 3b 1c       	call 14454 <__umoddi3 : 1e06b78 >			  ## power_hw.c:275:11
 1e03302:    06 08             	r6 = r0			  ## power_hw.c:275:11
 1e03304:    17 08             	r7 = r1			  ## power_hw.c:275:11
 1e03306:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e03308:    40 08             	r0 = r4			  ## power_hw.c:275:11
 1e0330a:    51 08             	r1 = r5			  ## power_hw.c:275:11
 1e0330c:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e0330e:    80 f3 2f 1b       	call 13918 <__udivdi3 : 1e06970 >			  ## power_hw.c:275:11
 1e03312:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:279:9
 1e03316:    01 32             	if (r1 != 0) goto 2 <__hw_btosc_time_set+0xAA : 1e0331a >			  ## power_hw.c:279:9
 1e03318:    0b 70             	r11 = 0			  ## power_hw.c:279:9
 1e0331a:    b0 09             	r0 += r11			  ## power_hw.c:279:9
 1e0331c:    10 f6 28 a0       	[r10 + 40] = r0			  ## power_hw.c:370:20
 1e03320:    c0 09             	r0 += r12			  ## power_hw.c:371:35
 1e03322:    10 f6 2c a0       	[r10 + 44] = r0			  ## power_hw.c:371:19
 1e03326:    5c 01             	{pc, r12-r4} = [sp++]			  ## power_hw.c:372:1


__hw_lrc_time_set:
 1e03328:    7d 01             	[--sp] = {rets, r13-r4}			  ## power_hw.c:375:0
 1e0332a:    04 08             	r4 = r0			  ## power_hw.c:375:0
 1e0332c:    02 fb ec 13       	r2 = 5100 <UPDATE_CODE_TOTAL_SIZE+0x1AA : 13ec >			  ## power_hw.c:375:0
 1e03330:    24 e0 1c 00       	if (r4 == 2) goto 56 <__hw_lrc_time_set+0x44 : 1e0336c >			  ## power_hw.c:375:0
 1e03334:    c0 ff 0d 00 03 00 	r0 = 196621 <text_size+0x174C1 : 3000d >			  ## xosc_fsck.c:317:14
 1e0333a:    bf f3 7f e8       	call -12034 <adc_get_voltage : 1e0043c >			  ## xosc_fsck.c:317:14
 1e0333e:    c1 ff 9c 31 00 00 	r1 = 12700 <hdl.27 : 319c >
 1e03344:    02 42             	r2 = [r1 + 0]			  ## xosc_fsck.c:322:26
 1e03346:    c3 ff 98 31 00 00 	r3 = 12696 <update_bss_end : 3198 >			  ## xosc_fsck.c:322:26
 1e0334c:    05 70             	r5 = 0			  ## xosc_fsck.c:322:26
 1e0334e:    0d 66             	b[r3 + 0] = r5			  ## xosc_fsck.c:322:26
 1e03350:    a2 b0             	r2 = r0 - r2			  ## xosc_fsck.c:322:16
 1e03352:    d5 df             	r5 = r2 >>> 31			  ## xosc_fsck.c:322:16
 1e03354:    52 09             	r2 += r5			  ## xosc_fsck.c:322:16
 1e03356:    d5 b4             	r5 ^= r2			  ## xosc_fsck.c:322:16
 1e03358:    02 fb ec 13       	r2 = 5100 <UPDATE_CODE_TOTAL_SIZE+0x1AA : 13ec >			  ## xosc_fsck.c:322:16
 1e0335c:    e5 e1 05 b0       	ifs (r5 < 30) goto 10 <__hw_lrc_time_set+0x42 : 1e0336a >			  ## xosc_fsck.c:322:16
 1e03360:    12 70             	r2 = 1
 1e03362:    0a 66             	b[r3 + 0] = r2
 1e03364:    08 42             	[r1 + 0] = r0			  ## xosc_fsck.c:324:34
 1e03366:    02 fb 8c 23       	r2 = 9100 <hdl.0+0x14 : 238c >			  ## xosc_fsck.c:324:34
 1e0336a:    0c 28             	if (r4 == 0) goto 24 <__hw_lrc_time_set+0x5C : 1e03384 >
 1e0336c:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >
 1e03372:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:385:9
 1e03374:    21 fd fc 19       	r1 = r1 & 252			  ## power_hw.c:385:9
 1e03378:    91 b0             	r1 |= 2			  ## power_hw.c:385:9
 1e0337a:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:385:9
 1e0337c:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:387:9
 1e0337e:    21 fd f3 19       	r1 = r1 & 243			  ## power_hw.c:387:9
 1e03382:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:387:9
 1e03384:    cb ff c0 47 00 00 	r11 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:394:19
 1e0338a:    00 f6 48 b1       	r0 = [r11 + 328]			  ## power_hw.c:390:96
 1e0338e:    09 fc d8 0e       	r9 = r0 + 3800			  ## power_hw.c:390:83
 1e03392:    19 f6 24 b0       	[r11 + 36] = r9			  ## power_hw.c:390:29
 1e03396:    0a f6 40 b1       	r10 = [r11 + 320]			  ## power_hw.c:273:18
 1e0339a:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e0339c:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e0339e:    a0 08             	r0 = r10			  ## power_hw.c:273:16
 1e033a0:    80 f3 c7 1a       	call 13710 <__muldi3 : 1e06932 >			  ## power_hw.c:273:16
 1e033a4:    07 08             	r7 = r0			  ## power_hw.c:273:16
 1e033a6:    14 08             	r4 = r1			  ## power_hw.c:273:16
 1e033a8:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xDB6F4 : f4240 >
 1e033ae:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e033b0:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e033b2:    80 f3 e1 1b       	call 14274 <__umoddi3 : 1e06b78 >			  ## power_hw.c:275:11
 1e033b6:    05 08             	r5 = r0			  ## power_hw.c:275:11
 1e033b8:    16 08             	r6 = r1			  ## power_hw.c:275:11
 1e033ba:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e033bc:    70 08             	r0 = r7			  ## power_hw.c:275:11
 1e033be:    41 08             	r1 = r4			  ## power_hw.c:275:11
 1e033c0:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e033c2:    80 f3 d5 1a       	call 13738 <__udivdi3 : 1e06970 >			  ## power_hw.c:275:11
 1e033c6:    e0 fd 60 25       	r2 = r5 | r6			  ## power_hw.c:279:9
 1e033ca:    1c 70             	r12 = 1			  ## power_hw.c:279:9
 1e033cc:    11 70             	r1 = 1			  ## power_hw.c:279:9
 1e033ce:    01 34             	if (r2 != 0) goto 2 <__hw_lrc_time_set+0xAA : 1e033d2 >			  ## power_hw.c:279:9
 1e033d0:    01 70             	r1 = 0			  ## power_hw.c:279:9
 1e033d2:    0d b2             	r13 = r1 + r0			  ## power_hw.c:279:9
 1e033d4:    1d f6 20 b0       	[r11 + 32] = r13			  ## power_hw.c:392:20
 1e033d8:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e033da:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e033dc:    a0 08             	r0 = r10			  ## power_hw.c:273:16
 1e033de:    92 08             	r2 = r9			  ## power_hw.c:273:16
 1e033e0:    80 f3 a7 1a       	call 13646 <__muldi3 : 1e06932 >			  ## power_hw.c:273:16
 1e033e4:    04 08             	r4 = r0			  ## power_hw.c:273:16
 1e033e6:    15 08             	r5 = r1			  ## power_hw.c:273:16
 1e033e8:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e033ea:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e033ec:    80 f3 c4 1b       	call 14216 <__umoddi3 : 1e06b78 >			  ## power_hw.c:275:11
 1e033f0:    06 08             	r6 = r0			  ## power_hw.c:275:11
 1e033f2:    17 08             	r7 = r1			  ## power_hw.c:275:11
 1e033f4:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e033f6:    40 08             	r0 = r4			  ## power_hw.c:275:11
 1e033f8:    51 08             	r1 = r5			  ## power_hw.c:275:11
 1e033fa:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e033fc:    80 f3 b8 1a       	call 13680 <__udivdi3 : 1e06970 >			  ## power_hw.c:275:11
 1e03400:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:279:9
 1e03404:    01 32             	if (r1 != 0) goto 2 <__hw_lrc_time_set+0xE0 : 1e03408 >			  ## power_hw.c:279:9
 1e03406:    0c 70             	r12 = 0			  ## power_hw.c:279:9
 1e03408:    c0 09             	r0 += r12			  ## power_hw.c:279:9
 1e0340a:    10 f6 28 b0       	[r11 + 40] = r0			  ## power_hw.c:393:20
 1e0340e:    d0 09             	r0 += r13			  ## power_hw.c:394:35
 1e03410:    10 f6 2c b0       	[r11 + 44] = r0			  ## power_hw.c:394:19
 1e03414:    5d 01             	{pc, r13-r4} = [sp++]			  ## power_hw.c:399:1


low_power_group_query:
 1e03416:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:983:0
 1e03418:    04 08             	r4 = r0			  ## power_hw.c:983:0
 1e0341a:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e0341c:    45 f2 15 00       	if (r5 == r4) goto 42 <low_power_group_query+0x34 : 1e0344a >			  ## list.h:124:18
 1e03420:    f6 07             	r6 = -1
 1e03422:    31 4a             	r1 = [r5 + 12]			  ## power_hw.c:993:16
 1e03424:    f0 07             	r0 = -1			  ## power_hw.c:993:16
 1e03426:    05 22             	if (r1 == 0) goto 10 <low_power_group_query+0x1C : 1e03432 >			  ## power_hw.c:993:16
 1e03428:    11 42             	r1 = [r1 + 4]			  ## power_hw.c:993:31
 1e0342a:    03 22             	if (r1 == 0) goto 6 <low_power_group_query+0x1C : 1e03432 >			  ## power_hw.c:993:31
 1e0342c:    20 4a             	r0 = [r5 + 8]			  ## power_hw.c:994:43
 1e0342e:    81 00             	call r1			  ## power_hw.c:994:20
 1e03430:    0e 20             	if (r0 == 0) goto 28 <low_power_group_query+0x38 : 1e0344e >
 1e03432:    06 f2 01 80       	if (r6 > r0) goto 2 <low_power_group_query+0x22 : 1e03438 >
 1e03436:    60 08             	r0 = r6			  ## power_hw.c:1003:13
 1e03438:    05 4a             	r5 = [r5 + 0]
 1e0343a:    06 08             	r6 = r0
 1e0343c:    45 f2 f1 1f       	if (r5 != r4) goto -30 <low_power_group_query+0xC : 1e03422 >
 1e03440:    01 70             	r1 = 0			  ## power_hw.c:1011:9
 1e03442:    f0 ef 05 00       	if (r0 == -1) goto 10 <low_power_group_query+0x3A : 1e03450 >			  ## power_hw.c:1011:9
 1e03446:    01 08             	r1 = r0			  ## power_hw.c:1011:9
 1e03448:    03 18             	goto 6 <low_power_group_query+0x3A : 1e03450 >			  ## power_hw.c:1011:9
 1e0344a:    f1 07             	r1 = -1
 1e0344c:    01 18             	goto 2 <low_power_group_query+0x3A : 1e03450 >
 1e0344e:    01 70             	r1 = 0
 1e03450:    10 08             	r0 = r1			  ## power_hw.c:1016:1
 1e03452:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:1016:1


__lp_timer_is_running:
 1e03454:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:261:0
 1e0345a:    00 60             	r0 = b[r0 + 0] (u)			  ## lp_timer_hw.c:262:13
 1e0345c:    81 fd 28 00       	r0 = uextra(r0, p:5, l:1)			  ## lp_timer_hw.c:262:12
 1e03460:    20 00             	rts			  ## lp_timer_hw.c:262:5


__lp_timer_dump:
 1e03462:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:47:0
 1e03468:    01 60             	r1 = b[r0 + 0] (u)			  ## lp_timer_hw.c:48:5
 1e0346a:    11 b3             	r1 |= 64			  ## lp_timer_hw.c:48:5
 1e0346c:    09 60             	b[r0 + 0] = r1			  ## lp_timer_hw.c:48:5
 1e0346e:    21 f9 00 00       	r1 = b[r0 + 0] (s)			  ## lp_timer_hw.c:49:13
 1e03472:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__lp_timer_dump+0xC : 1e0346e >			  ## lp_timer_hw.c:49:5
 1e03476:    20 00             	rts			  ## lp_timer_hw.c:71:1


__lp_timer_set_time:
 1e03478:    75 01             	[--sp] = {rets, r5, r4}			  ## lp_timer_hw.c:75:0
 1e0347a:    02 08             	r2 = r0			  ## lp_timer_hw.c:75:0
 1e0347c:    c5 ff c0 47 00 00 	r5 = 18368 <nvbss_begin : 47c0 >			  ## lp_timer_hw.c:75:0
 1e03482:    00 f6 40 51       	r0 = [r5 + 320]			  ## power_hw.c:309:18
 1e03486:    01 70             	r1 = 0			  ## power_hw.c:309:16
 1e03488:    03 70             	r3 = 0			  ## power_hw.c:309:16
 1e0348a:    04 70             	r4 = 0			  ## power_hw.c:309:16
 1e0348c:    80 f3 51 1a       	call 13474 <__muldi3 : 1e06932 >			  ## power_hw.c:309:16
 1e03490:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## power_hw.c:311:11
 1e03496:    03 70             	r3 = 0			  ## power_hw.c:311:11
 1e03498:    80 f3 6a 1a       	call 13524 <__udivdi3 : 1e06970 >			  ## power_hw.c:311:11
 1e0349c:    b1 4a             	r1 = [r5 + 44]			  ## lp_timer_hw.c:80:25
 1e0349e:    10 f2 17 30       	if (r0 < r1) goto 46 <__lp_timer_set_time+0x58 : 1e034d0 >
 1e034a2:    a1 4a             	r1 = [r5 + 40]			  ## lp_timer_hw.c:86:29
 1e034a4:    61 b0             	r1 = r0 - r1			  ## lp_timer_hw.c:86:19
 1e034a6:    0a d6             	r2 = r1 >> 24			  ## lp_timer_hw.c:90:27
 1e034a8:    c3 ff d1 1f 1a 00 	r3 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## lp_timer_hw.c:90:27
 1e034ae:    aa 66             	b[r3 + 10] = r2			  ## lp_timer_hw.c:90:19
 1e034b0:    0a d4             	r2 = r1 >> 16			  ## lp_timer_hw.c:91:27
 1e034b2:    9a 66             	b[r3 + 9] = r2			  ## lp_timer_hw.c:91:19
 1e034b4:    0a d2             	r2 = r1 >> 8			  ## lp_timer_hw.c:92:27
 1e034b6:    8a 66             	b[r3 + 8] = r2			  ## lp_timer_hw.c:92:19
 1e034b8:    79 66             	b[r3 + 7] = r1			  ## lp_timer_hw.c:93:19
 1e034ba:    01 d6             	r1 = r0 >> 24			  ## lp_timer_hw.c:98:27
 1e034bc:    69 66             	b[r3 + 6] = r1			  ## lp_timer_hw.c:98:19
 1e034be:    01 d4             	r1 = r0 >> 16			  ## lp_timer_hw.c:99:27
 1e034c0:    59 66             	b[r3 + 5] = r1			  ## lp_timer_hw.c:99:19
 1e034c2:    01 d2             	r1 = r0 >> 8			  ## lp_timer_hw.c:100:27
 1e034c4:    49 66             	b[r3 + 4] = r1			  ## lp_timer_hw.c:100:19
 1e034c6:    38 66             	b[r3 + 3] = r0			  ## lp_timer_hw.c:101:19
 1e034c8:    00 66             	r0 = b[r3 + 0] (u)			  ## lp_timer_hw.c:103:5
 1e034ca:    10 b0             	r0 |= 1			  ## lp_timer_hw.c:103:5
 1e034cc:    08 66             	b[r3 + 0] = r0			  ## lp_timer_hw.c:103:5
 1e034ce:    14 70             	r4 = 1			  ## lp_timer_hw.c:103:5
 1e034d0:    40 08             	r0 = r4			  ## lp_timer_hw.c:108:1
 1e034d2:    55 01             	{pc, r5, r4} = [sp++]			  ## lp_timer_hw.c:108:1


__tus_cnt:
 1e034d4:    34 00             	[--sp] = rets			  ## power_hw.c:334:0
 1e034d6:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## power_hw.c:338:18
 1e034dc:    01 70             	r1 = 0			  ## power_hw.c:338:18
 1e034de:    03 70             	r3 = 0			  ## power_hw.c:338:18
 1e034e0:    80 f3 27 1a       	call 13390 <__muldi3 : 1e06932 >			  ## power_hw.c:338:18
 1e034e4:    c2 ff c0 47 00 00 	r2 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:340:25
 1e034ea:    02 f6 40 21       	r2 = [r2 + 320]			  ## power_hw.c:340:13
 1e034ee:    03 70             	r3 = 0			  ## power_hw.c:340:11
 1e034f0:    88 01             	{rets} = [sp++]			  ## power_hw.c:340:11
 1e034f2:    c0 f3 3d 1a       	goto 13434 <__udivdi3 : 1e06970 >			  ## power_hw.c:340:11


__lp_timer_get_period:
 1e034f6:    c1 ff d4 1f 1a 00 	r1 = 1712084 <uECC_vli_cmp_unsafe+0x9AFD8 : 1a1fd4 >			  ## lp_timer_hw.c:162:0
 1e034fc:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:165:11
 1e034fe:    12 62             	r2 = b[r1 + 1] (u)			  ## lp_timer_hw.c:166:13
 1e03500:    23 62             	r3 = b[r1 + 2] (u)			  ## lp_timer_hw.c:167:13
 1e03502:    31 62             	r1 = b[r1 + 3] (u)			  ## lp_timer_hw.c:168:13
 1e03504:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:166:9
 1e03508:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:167:9
 1e0350c:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:168:9
 1e03510:    e1 1f             	goto -62 <__tus_cnt : 1e034d4 >			  ## lp_timer_hw.c:170:12


__low_power_suspend:
 1e03512:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:627:0
 1e03514:    04 08             	r4 = r0			  ## power_hw.c:627:0
 1e03516:    06 48             	r6 = [r4 + 0]			  ## power_hw.c:627:0
 1e03518:    15 08             	r5 = r1			  ## power_hw.c:627:0
 1e0351a:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x20 : 1e03532 >			  ## power_hw.c:627:0
 1e0351e:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:631:16
 1e03520:    04 20             	if (r0 == 0) goto 8 <__low_power_suspend+0x18 : 1e0352a >			  ## power_hw.c:631:16
 1e03522:    21 40             	r1 = [r0 + 8]			  ## power_hw.c:631:31
 1e03524:    02 22             	if (r1 == 0) goto 4 <__low_power_suspend+0x18 : 1e0352a >			  ## power_hw.c:631:31
 1e03526:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:632:38
 1e03528:    81 00             	call r1			  ## power_hw.c:632:13
 1e0352a:    06 4c             	r6 = [r6 + 0]
 1e0352c:    46 f2 f7 1f       	if (r6 != r4) goto -18 <__low_power_suspend+0xC : 1e0351e >
 1e03530:    06 48             	r6 = [r4 + 0]
 1e03532:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x38 : 1e0354a >
 1e03536:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:636:16
 1e03538:    05 20             	if (r0 == 0) goto 10 <__low_power_suspend+0x32 : 1e03544 >			  ## power_hw.c:636:16
 1e0353a:    32 40             	r2 = [r0 + 12]			  ## power_hw.c:636:31
 1e0353c:    03 24             	if (r2 == 0) goto 6 <__low_power_suspend+0x32 : 1e03544 >			  ## power_hw.c:636:31
 1e0353e:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:637:37
 1e03540:    51 08             	r1 = r5			  ## power_hw.c:637:13
 1e03542:    82 00             	call r2			  ## power_hw.c:637:13
 1e03544:    06 4c             	r6 = [r6 + 0]
 1e03546:    46 f2 f6 1f       	if (r6 != r4) goto -20 <__low_power_suspend+0x24 : 1e03536 >
 1e0354a:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:640:1


__hw_xosc_fsck_run:
 1e0354c:    c0 ff 00 11 1e 00 	r0 = 1970432 <uECC_vli_cmp_unsafe+0xDA104 : 1e1100 >			  ## xosc_fsck.c:43:0
 1e03552:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:45:5
 1e03556:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:47:5
 1e03558:    31 fd 70 1a       	r1 = r1 & 4294938623			  ## xosc_fsck.c:47:5
 1e0355c:    11 b7             	r1 |= 16384			  ## xosc_fsck.c:47:5
 1e0355e:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:47:5
 1e03560:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:48:5
 1e03562:    31 fd 0e 19       	r1 = r1 & 4294967281			  ## xosc_fsck.c:48:5
 1e03566:    01 fd 0c 19       	r1 = r1 | 12			  ## xosc_fsck.c:48:5
 1e0356a:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:48:5
 1e0356c:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:49:5
 1e0356e:    31 fd 0f 1a       	r1 = r1 & 4294963455			  ## xosc_fsck.c:49:5
 1e03572:    01 fd 07 1a       	r1 = r1 | 1792			  ## xosc_fsck.c:49:5
 1e03576:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:49:5
 1e03578:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:51:5
 1e0357c:    00 f4 01 09       	[r0 + 0] |= 1			  ## xosc_fsck.c:52:5
 1e03580:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:55:24
 1e03582:    51 04             	r1 = r1.b0 (s)			  ## xosc_fsck.c:55:12
 1e03584:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__hw_xosc_fsck_run+0x34 : 1e03580 >			  ## xosc_fsck.c:55:5
 1e03588:    11 40             	r1 = [r0 + 4]			  ## xosc_fsck.c:60:86
 1e0358a:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:65:5
 1e0358c:    71 b0             	r1 &= 4294967294			  ## xosc_fsck.c:65:5
 1e0358e:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:65:5
 1e03590:    20 00             	rts			  ## xosc_fsck.c:66:1


__lp_timer_get_pass_time:
 1e03592:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:146:0
 1e03598:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:147:5
 1e0359a:    10 b3             	r0 |= 64			  ## lp_timer_hw.c:147:5
 1e0359c:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:147:5
 1e0359e:    00 00             	nop			  ## lp_timer_hw.c:148:5
 1e035a0:    00 00             	nop			  ## lp_timer_hw.c:149:5
 1e035a2:    20 f9 00 10       	r0 = b[r1 + 0] (s)			  ## lp_timer_hw.c:150:13
 1e035a6:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <__lp_timer_get_pass_time+0x10 : 1e035a2 >			  ## lp_timer_hw.c:150:5
 1e035aa:    90 62             	r0 = b[r1 + 9] (u)			  ## lp_timer_hw.c:153:12
 1e035ac:    a2 62             	r2 = b[r1 + 10] (u)			  ## lp_timer_hw.c:154:14
 1e035ae:    b3 62             	r3 = b[r1 + 11] (u)			  ## lp_timer_hw.c:155:14
 1e035b0:    c1 62             	r1 = b[r1 + 12] (u)			  ## lp_timer_hw.c:156:14
 1e035b2:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:154:10
 1e035b6:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:155:10
 1e035ba:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:156:10
 1e035be:    8a 1f             	goto -236 <__tus_cnt : 1e034d4 >			  ## lp_timer_hw.c:158:12


__tcnt_us:
 1e035c0:    78 01             	[--sp] = {rets, r8-r4}			  ## power_hw.c:268:0
 1e035c2:    02 08             	r2 = r0			  ## power_hw.c:268:0
 1e035c4:    c0 ff c0 47 00 00 	r0 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:273:30
 1e035ca:    00 f6 40 01       	r0 = [r0 + 320]			  ## power_hw.c:273:18
 1e035ce:    01 70             	r1 = 0			  ## power_hw.c:273:16
 1e035d0:    03 70             	r3 = 0			  ## power_hw.c:273:16
 1e035d2:    80 f3 ae 19       	call 13148 <__muldi3 : 1e06932 >			  ## power_hw.c:273:16
 1e035d6:    04 08             	r4 = r0			  ## power_hw.c:273:16
 1e035d8:    15 08             	r5 = r1			  ## power_hw.c:273:16
 1e035da:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## power_hw.c:275:11
 1e035e0:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e035e2:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e035e4:    80 f3 c8 1a       	call 13712 <__umoddi3 : 1e06b78 >			  ## power_hw.c:275:11
 1e035e8:    07 08             	r7 = r0			  ## power_hw.c:275:11
 1e035ea:    16 08             	r6 = r1			  ## power_hw.c:275:11
 1e035ec:    03 70             	r3 = 0			  ## power_hw.c:275:11
 1e035ee:    40 08             	r0 = r4			  ## power_hw.c:275:11
 1e035f0:    51 08             	r1 = r5			  ## power_hw.c:275:11
 1e035f2:    82 08             	r2 = r8			  ## power_hw.c:275:11
 1e035f4:    80 f3 bc 19       	call 13176 <__udivdi3 : 1e06970 >			  ## power_hw.c:275:11
 1e035f8:    e0 fd 60 27       	r2 = r7 | r6			  ## power_hw.c:279:9
 1e035fc:    11 70             	r1 = 1			  ## power_hw.c:279:9
 1e035fe:    01 34             	if (r2 != 0) goto 2 <__tcnt_us+0x42 : 1e03602 >			  ## power_hw.c:279:9
 1e03600:    01 70             	r1 = 0			  ## power_hw.c:279:9
 1e03602:    10 09             	r0 += r1			  ## power_hw.c:279:9
 1e03604:    58 01             	{pc, r8-r4} = [sp++]			  ## power_hw.c:282:5


wdt_close:
 1e03606:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:13:0
 1e0360c:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:14:18
 1e0360e:    71 b2             	r1 &= 4294967279			  ## wdt.c:14:18
 1e03610:    09 60             	b[r0 + 0] = r1			  ## wdt.c:14:18
 1e03612:    20 00             	rts			  ## wdt.c:15:1


norflash_open:
 1e03614:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:605:0
 1e03616:    c5 ff b0 25 00 00 	r5 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:605:0
 1e0361c:    01 f9 7b 50       	r1 = b[r5 + 123] (u)			  ## vm_sfc.c:608:21
 1e03620:    04 08             	r4 = r0			  ## vm_sfc.c:608:21
 1e03622:    18 32             	if (r1 != 0) goto 48 <norflash_open+0x40 : 1e03654 >			  ## vm_sfc.c:608:21
 1e03624:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >
 1e0362a:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:593:18
 1e0362c:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:593:18
 1e0362e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:593:18
 1e03630:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:594:18
 1e03632:    31 fd 0c 1a       	r1 = r1 & 4294964223			  ## vm_sfc.c:594:18
 1e03636:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:594:18
 1e03638:    00 f4 60 0a       	[r0 + 0] |= 24576			  ## vm_sfc.c:595:18
 1e0363c:    00 fc 14 38       	r0 = r0 + 14356			  ## vm_sfc.c:595:18
 1e03640:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:596:20
 1e03642:    f1 b9             	r1 &= 4294443007			  ## vm_sfc.c:596:20
 1e03644:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:596:20
 1e03646:    50 fc f0 00       	r0 = r5 + 240			  ## vm_sfc.c:598:5
 1e0364a:    98 f3 e7 1b       	call 3160014 <os_mutex_create : 106e1c >			  ## vm_sfc.c:598:5
 1e0364e:    10 70             	r0 = 1			  ## vm_sfc.c:600:21
 1e03650:    10 f9 7b 50       	b[r5 + 123] = r0			  ## vm_sfc.c:600:21
 1e03654:    0a 28             	if (r4 == 0) goto 20 <norflash_open+0x56 : 1e0366a >
 1e03656:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:614:32
 1e0365c:    01 fc c4 01       	r1 = r0 + 452			  ## vm_sfc.c:613:17
 1e03660:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:613:17
 1e03662:    51 fc 68 00       	r1 = r5 + 104			  ## vm_sfc.c:614:32
 1e03666:    11 f6 d4 01       	[r0 + 468] = r1			  ## vm_sfc.c:614:32
 1e0366a:    c0 ff b4 44 00 00 	r0 = 17588 <lmp_conn_for_link : 44b4 >			  ## vm_sfc.c:617:5
 1e03670:    c1 ff b4 44 00 00 	r1 = 17588 <lmp_conn_for_link : 44b4 >			  ## vm_sfc.c:617:5
 1e03676:    21 b2             	r1 = r1 - r0			  ## vm_sfc.c:617:5
 1e03678:    10 70             	r0 = 1			  ## vm_sfc.c:617:5
 1e0367a:    28 ff 10 1a 01 00 	if (r1 > 4096) goto 2 <norflash_open+0x6E : 1e03682 >			  ## vm_sfc.c:617:5
 1e03680:    00 70             	r0 = 0			  ## vm_sfc.c:617:5
 1e03682:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:617:5


p11_init:
 1e03684:    77 01             	[--sp] = {rets, r7-r4}			  ## power_hw.c:1624:0
 1e03686:    c0 ff 04 3e 1e 00 	r0 = 1981956 <uECC_vli_cmp_unsafe+0xDCE08 : 1e3e04 >			  ## power_hw.c:1624:0
 1e0368c:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1628:14
 1e0368e:    05 f3 fd 1f       	if ((r1 & 32) == 0) goto -6 <p11_init+0x8 : 1e0368c >			  ## power_hw.c:1628:30
 1e03692:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1628:33
 1e03694:    06 f3 fa 1f       	if ((r1 & 64) == 0) goto -12 <p11_init+0x8 : 1e0368c >			  ## power_hw.c:1628:33
 1e03698:    f1 7f             	r1 = 255
 1e0369a:    c2 ff 80 1f 1a 00 	r2 = 1712000 <uECC_vli_cmp_unsafe+0x9AF84 : 1a1f80 >
 1e036a0:    e3 7e             	r3 = 238
 1e036a2:    b4 7a             	r4 = 171
 1e036a4:    e5 70             	r5 = 14
 1e036a6:    56 75             	r6 = 85
 1e036a8:    09 64             	b[r2 + 0] = r1			  ## power_hw.c:1634:20
 1e036aa:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1635:20
 1e036ac:    0c 64             	b[r2 + 0] = r4			  ## power_hw.c:1636:20
 1e036ae:    0d 64             	b[r2 + 0] = r5			  ## power_hw.c:1637:20
 1e036b0:    0e 64             	b[r2 + 0] = r6			  ## power_hw.c:1638:20
 1e036b2:    07 40             	r7 = [r0 + 0]			  ## power_hw.c:1639:15
 1e036b4:    00 f3 f8 7f       	if ((r7 & 1) == 0) goto -16 <p11_init+0x24 : 1e036a8 >			  ## power_hw.c:1639:5
 1e036b8:    57 01             	{pc, r7-r4} = [sp++]			  ## power_hw.c:1641:1


wdt_init:
 1e036ba:    c0 71             	r0 = 28			  ## wdt.c:79:0
 1e036bc:    c1 ff 88 1f 1a 00 	r1 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:79:0
 1e036c2:    08 62             	b[r1 + 0] = r0			  ## wdt.c:79:0
 1e036c4:    00 70             	r0 = 0			  ## wdt.c:79:0
 1e036c6:    18 62             	b[r1 + 1] = r0			  ## wdt.c:79:0
 1e036c8:    20 00             	rts			  ## wdt.c:87:1


reset_source_dump:
 1e036ca:    74 01             	[--sp] = {rets, r4}			  ## power_hw.c:1565:0
 1e036cc:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_hw.c:1565:0
 1e036d2:    01 70             	r1 = 0			  ## power_hw.c:1565:0
 1e036d4:    11 f6 b4 00       	[r0 + 180] = r1			  ## power_hw.c:1568:24
 1e036d8:    c1 ff f8 1f 1a 00 	r1 = 1712120 <uECC_vli_cmp_unsafe+0x9AFFC : 1a1ff8 >			  ## power_hw.c:1568:24
 1e036de:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:1571:5
 1e036e0:    72 b2             	r2 &= 4294967279			  ## power_hw.c:1571:5
 1e036e2:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:1571:5
 1e036e4:    11 fc 1a f8       	r1 = r1 + -2022			  ## power_hw.c:1571:5
 1e036e8:    32 62             	r2 = b[r1 + 3] (u)			  ## power_hw.c:1572:5
 1e036ea:    f2 b2             	r2 &= 4294967263			  ## power_hw.c:1572:5
 1e036ec:    3a 62             	b[r1 + 3] = r2			  ## power_hw.c:1572:5
 1e036ee:    20 fb 1e 2b       	r2 = 1966080			  ## power_hw.c:1572:5
 1e036f2:    03 44             	r3 = [r2 + 0]			  ## power_hw.c:1574:20
 1e036f4:    d3 04             	r3 = r3.b0 (s)			  ## power_hw.c:1574:38
 1e036f6:    03 e0 05 b0       	ifs (r3 < 0) goto 10 <reset_source_dump+0x3A : 1e03704 >			  ## power_hw.c:1574:9
 1e036fa:    00 fc b4 00       	r0 = r0 + 180			  ## power_hw.c:1575:28
 1e036fe:    00 f4 80 09       	[r0 + 0] |= 128			  ## power_hw.c:1575:28
 1e03702:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1575:28
 1e03704:    00 f4 40 29       	[r2 + 0] |= 64			  ## power_hw.c:1579:23
 1e03708:    03 f6 c0 20       	r3 = [r2 + 192]			  ## power_hw.c:1581:19
 1e0370c:    02 f6 b4 00       	r2 = [r0 + 180]			  ## power_hw.c:1582:24
 1e03710:    c4 04             	r4 = r3.b0 (u)			  ## power_hw.c:1582:27
 1e03712:    52 b8             	r2 |= r4			  ## power_hw.c:1582:24
 1e03714:    12 f6 b4 00       	[r0 + 180] = r2			  ## power_hw.c:1582:24
 1e03718:    20 f3 01 30       	if ((r3 & 1) != 0) goto 2 <reset_source_dump+0x54 : 1e0371e >			  ## power_hw.c:1582:24
 1e0371c:    54 01             	{pc, r4} = [sp++]
 1e0371e:    23 f9 78 17       	r3 = b[r1 + 1912] (s)			  ## power_hw.c:1528:10
 1e03722:    03 e0 05 b0       	ifs (r3 < 0) goto 10 <reset_source_dump+0x66 : 1e03730 >			  ## power_hw.c:1528:9
 1e03726:    01 fd 80 2a       	r1 = r2 | 32768			  ## power_hw.c:1529:28
 1e0372a:    11 f6 b4 00       	[r0 + 180] = r1			  ## power_hw.c:1529:28
 1e0372e:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1529:28
 1e03730:    12 fc 78 07       	r2 = r1 + 1912
 1e03734:    03 64             	r3 = b[r2 + 0] (u)			  ## power_hw.c:1534:17
 1e03736:    13 b3             	r3 |= 64			  ## power_hw.c:1534:17
 1e03738:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1534:17
 1e0373a:    43 64             	r3 = b[r2 + 4] (u)			  ## power_hw.c:1537:28
 1e0373c:    02 f6 b4 00       	r2 = [r0 + 180]			  ## power_hw.c:1537:24
 1e03740:    1c c2             	r4 = r3 << 8			  ## power_hw.c:1537:32
 1e03742:    52 b8             	r2 |= r4			  ## power_hw.c:1537:24
 1e03744:    12 f6 b4 00       	[r0 + 180] = r2			  ## power_hw.c:1537:24
 1e03748:    02 f3 e8 3f       	if ((r3 & 4) == 0) goto -48 <reset_source_dump+0x52 : 1e0371c >			  ## power_hw.c:1537:24
 1e0374c:    23 f9 1e 10       	r3 = b[r1 + 30] (s)			  ## power_hw.c:1483:10
 1e03750:    03 e0 05 b0       	ifs (r3 < 0) goto 10 <reset_source_dump+0x94 : 1e0375e >			  ## power_hw.c:1483:9
 1e03754:    01 fd 80 2b       	r1 = r2 | 8388608			  ## power_hw.c:1484:28
 1e03758:    11 f6 b4 00       	[r0 + 180] = r1			  ## power_hw.c:1484:28
 1e0375c:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1484:28
 1e0375e:    e2 93             	r2 = r1 + 30
 1e03760:    03 64             	r3 = b[r2 + 0] (u)			  ## power_hw.c:1489:17
 1e03762:    13 b3             	r3 |= 64			  ## power_hw.c:1489:17
 1e03764:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1489:17
 1e03766:    03 62             	r3 = b[r1 + 0] (u)			  ## power_hw.c:1492:28
 1e03768:    01 f6 b4 00       	r1 = [r0 + 180]			  ## power_hw.c:1492:24
 1e0376c:    1c c4             	r4 = r3 << 16			  ## power_hw.c:1492:32
 1e0376e:    51 b8             	r1 |= r4			  ## power_hw.c:1492:24
 1e03770:    11 f6 b4 00       	[r0 + 180] = r1			  ## power_hw.c:1492:24
 1e03774:    05 f3 d2 3f       	if ((r3 & 32) == 0) goto -92 <reset_source_dump+0x52 : 1e0371c >			  ## power_hw.c:1492:24
 1e03778:    a3 65             	r3 = b[r2 + 26] (u)			  ## power_hw.c:1514:13
 1e0377a:    01 ff ab 30 ce ff 	if (r3 != 171) goto -100 <reset_source_dump+0x52 : 1e0371c >			  ## power_hw.c:1514:13
 1e03780:    11 bc             	r1 |= 16777216			  ## power_hw.c:1516:32
 1e03782:    11 f6 b4 00       	[r0 + 180] = r1			  ## power_hw.c:1516:32
 1e03786:    00 70             	r0 = 0			  ## power_hw.c:1517:26
 1e03788:    a8 65             	b[r2 + 26] = r0			  ## power_hw.c:1517:26
 1e0378a:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1517:26


timer1_init:
 1e0378c:    34 00             	[--sp] = rets			  ## timer.c:197:0
 1e0378e:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:198:20
 1e03794:    c0 f4 40 0a       	[r0 + 0] = 16384			  ## timer.c:198:20
 1e03798:    c2 ff 14 2f e0 01 	r2 = 31469332 <timer1_isr : 1e02f14 >			  ## timer.c:200:5
 1e0379e:    50 70             	r0 = 5			  ## timer.c:200:5
 1e037a0:    11 70             	r1 = 1			  ## timer.c:200:5
 1e037a2:    80 f3 b4 41       	call 33640 <request_irq : 1e0bb0e >			  ## timer.c:200:5
 1e037a6:    00 70             	r0 = 0			  ## timer.c:204:5
 1e037a8:    30 00             	pc = [sp++]			  ## timer.c:204:5


get_dev_id:
 1e037aa:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:154:0
 1e037ac:    04 08             	r4 = r0			  ## debug.c:154:0
 1e037ae:    98 f3 a5 1b       	call 3159882 <strlen : 106efc >			  ## debug.c:158:48
 1e037b2:    05 08             	r5 = r0			  ## debug.c:158:48
 1e037b4:    07 70             	r7 = 0			  ## debug.c:158:48
 1e037b6:    c6 ff 3c ec e0 01 	r6 = 31517756 <dev_id_list : 1e0ec3c >			  ## debug.c:158:48
 1e037bc:    60 08             	r0 = r6			  ## debug.c:158:14
 1e037be:    41 08             	r1 = r4			  ## debug.c:158:14
 1e037c0:    52 08             	r2 = r5			  ## debug.c:158:14
 1e037c2:    98 f3 93 1b       	call 3159846 <memcmp : 106eec >			  ## debug.c:158:14
 1e037c6:    06 20             	if (r0 == 0) goto 12 <get_dev_id+0x2A : 1e037d4 >			  ## debug.c:158:14
 1e037c8:    17 80             	r7 += 1			  ## debug.c:157:47
 1e037ca:    16 81             	r6 += 17			  ## debug.c:157:19
 1e037cc:    27 e3 f6 3f       	if (r7 < 50) goto -20 <get_dev_id+0x12 : 1e037bc >			  ## debug.c:157:19
 1e037d0:    f0 07             	r0 = -1
 1e037d2:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1
 1e037d4:    00 6d             	r0 = b[r6 + 16] (u)			  ## debug.c:159:20
 1e037d6:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1


mpu_privilege:
 1e037d8:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1344:0
 1e037da:    16 fc d0 ff       	r6 = r1 + -48			  ## debug.c:1347:5
 1e037de:    64 02             	r4 = [sp+24]			  ## debug.c:1347:5
 1e037e0:    55 02             	r5 = [sp+20]			  ## debug.c:1347:5
 1e037e2:    80 c0             	r0 = r0 << 2
 1e037e4:    c7 ff 00 03 1b 00 	r7 = 1770240 <uECC_vli_cmp_unsafe+0xA9304 : 1b0300 >
 1e037ea:    70 09             	r0 += r7
 1e037ec:    36 e0 13 20       	if (r6 >= 3) goto 38 <mpu_privilege+0x3E : 1e03816 >
 1e037f0:    03 41             	r3 = [r0 + 64]			  ## debug.c:1361:26
 1e037f2:    81 05             	r1 = r6.b0 (u)			  ## debug.c:1361:29
 1e037f4:    ce c0             	r6 = r1 << 3			  ## debug.c:1361:29
 1e037f6:    82 0d             	r2 <<= r6			  ## debug.c:1361:29
 1e037f8:    52 b6             	r2 |= r3			  ## debug.c:1361:26
 1e037fa:    0a 41             	[r0 + 64] = r2			  ## debug.c:1361:26
 1e037fc:    12 70             	r2 = 1			  ## debug.c:1362:29
 1e037fe:    13 70             	r3 = 1			  ## debug.c:1362:29
 1e03800:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x2C : 1e03804 >			  ## debug.c:1362:29
 1e03802:    03 70             	r3 = 0			  ## debug.c:1362:29
 1e03804:    95 92             	r5 = r1 + 9			  ## debug.c:1362:29
 1e03806:    43 0d             	r3 <<= r5			  ## debug.c:1362:29
 1e03808:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x34 : 1e0380c >			  ## debug.c:1362:29
 1e0380a:    02 70             	r2 = 0			  ## debug.c:1362:29
 1e0380c:    11 81             	r1 += 17			  ## debug.c:1362:29
 1e0380e:    f8 fd 10 12       	r1 = r2 << r1			  ## debug.c:1362:29
 1e03812:    51 b6             	r1 |= r3			  ## debug.c:1362:29
 1e03814:    1b 18             	goto 54 <system_code_size : 1e0384c >			  ## debug.c:1362:29
 1e03816:    01 e5 10 00       	if (r1 == 80) goto 32 <mpu_privilege+0x62 : 1e0383a >
 1e0381a:    31 e4 1a 10       	if (r1 != 67) goto 52 <system_code_size+0x6 : 1e03852 >
 1e0381e:    12 70             	r2 = 1
 1e03820:    16 70             	r6 = 1			  ## debug.c:1350:30
 1e03822:    01 36             	if (r3 != 0) goto 2 <mpu_privilege+0x4E : 1e03826 >			  ## debug.c:1350:30
 1e03824:    06 70             	r6 = 0			  ## debug.c:1350:30
 1e03826:    11 70             	r1 = 1			  ## debug.c:1350:52
 1e03828:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x54 : 1e0382c >
 1e0382a:    01 70             	r1 = 0			  ## debug.c:1350:52
 1e0382c:    c1 fd 10 16       	r1 <= insert(r6, p:2, l:1)			  ## debug.c:1350:49
 1e03830:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x5C : 1e03834 >			  ## debug.c:1350:49
 1e03832:    02 70             	r2 = 0			  ## debug.c:1350:74
 1e03834:    c1 fd 08 12       	r1 <= insert(r2, p:1, l:1)			  ## debug.c:1350:71
 1e03838:    09 18             	goto 18 <system_code_size : 1e0384c >			  ## debug.c:1350:71
 1e0383a:    11 70             	r1 = 1
 1e0383c:    12 70             	r2 = 1			  ## debug.c:1354:53
 1e0383e:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x6A : 1e03842 >			  ## debug.c:1354:53
 1e03840:    02 70             	r2 = 0			  ## debug.c:1354:53
 1e03842:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x6E : 1e03846 >
 1e03844:    01 70             	r1 = 0			  ## debug.c:1354:30
 1e03846:    09 c2             	r1 = r1 << 8			  ## debug.c:1354:30
 1e03848:    c1 fd 80 12       	r1 <= insert(r2, p:16, l:1)			  ## debug.c:1354:50


system_code_size:
 1e0384c:    02 40             	r2 = [r0 + 0]
 1e0384e:    51 b4             	r1 |= r2
 1e03850:    09 40             	[r0 + 0] = r1
 1e03852:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1367:1


mpu_set:
 1e03854:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1424:0
 1e03856:    f8 0b             	sp += -16			  ## debug.c:1424:0
 1e03858:    04 08             	r4 = r0			  ## debug.c:1424:0
 1e0385a:    34 e0 72 c0       	ifs (r4 > 3) goto 228 <mpu_set+0xEE : 1e03942 >			  ## debug.c:1424:0
 1e0385e:    c5 ff fc 03 1b 00 	r5 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:1424:0
 1e03864:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e03866:    96 02             	r6 = [sp+36]			  ## debug.c:572:14
 1e03868:    20 f3 05 00       	if ((r0 & 1) != 0) goto 10 <mpu_set+0x22 : 1e03876 >			  ## debug.c:572:14
 1e0386c:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:573:9
 1e03870:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e03872:    00 f3 fb 0f       	if ((r0 & 1) == 0) goto -10 <mpu_set+0x18 : 1e0386c >			  ## debug.c:572:14
 1e03876:    50 fc 84 ff       	r0 = r5 + -124			  ## debug.c:1432:5
 1e0387a:    b1 f6 00 04       	[r0+r4<<2] = r1			  ## debug.c:1432:22
 1e0387e:    00 84             	r0 += 64			  ## debug.c:1433:5
 1e03880:    b2 f6 00 04       	[r0+r4<<2] = r2			  ## debug.c:1433:22
 1e03884:    01 fc 40 ff       	r1 = r0 + -192			  ## debug.c:1435:5
 1e03888:    00 70             	r0 = 0
 1e0388a:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1435:22
 1e0388e:    01 84             	r1 += 64			  ## debug.c:1436:5
 1e03890:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1436:22
 1e03894:    81 a2             	r1 = sp + 40			  ## debug.c:1436:22
 1e03896:    29 02             	[sp+8] = r1			  ## debug.c:1443:5
 1e03898:    39 02             	[sp+12] = r1
 1e0389a:    01 6c             	r1 = b[r6 + 0] (u)			  ## debug.c:1377:12
 1e0389c:    02 70             	r2 = 0			  ## debug.c:1377:12
 1e0389e:    03 70             	r3 = 0
 1e038a0:    3e 22             	if (r1 == 0) goto 124 <mpu_set+0xCA : 1e0391e >
 1e038a2:    51 04             	r1 = r1.b0 (s)			  ## debug.c:1378:17
 1e038a4:    f1 e4 17 c0       	ifs (r1 > 79) goto 46 <mpu_set+0x82 : 1e038d6 >			  ## debug.c:1378:9
 1e038a8:    17 fc d0 ff       	r7 = r1 + -48
 1e038ac:    47 e0 21 20       	if (r7 >= 4) goto 66 <mpu_set+0x9E : 1e038f2 >
 1e038b0:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1395:13
 1e038b4:    19 02             	[sp+4] = r1			  ## debug.c:1395:13
 1e038b6:    27 fd 02 39       	r7 = r3 & 2			  ## debug.c:1395:13
 1e038ba:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1395:13
 1e038bc:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1395:13
 1e038be:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1395:13
 1e038c2:    0f 02             	[sp] = r7			  ## debug.c:1395:13
 1e038c4:    40 08             	r0 = r4			  ## debug.c:1395:13
 1e038c6:    88 17             	call -240 <mpu_privilege : 1e037d8 >			  ## debug.c:1395:13
 1e038c8:    30 02             	r0 = [sp+12]			  ## debug.c:1396:19
 1e038ca:    41 90             	r1 = r0 + 4			  ## debug.c:1396:19
 1e038cc:    39 02             	[sp+12] = r1			  ## debug.c:1396:19
 1e038ce:    02 40             	r2 = [r0 + 0]			  ## debug.c:1396:19
 1e038d0:    00 6c             	r0 = b[r6 + 0] (u)			  ## debug.c:1397:20
 1e038d2:    03 70             	r3 = 0			  ## debug.c:1397:20
 1e038d4:    21 18             	goto 66 <mpu_set+0xC4 : 1e03918 >			  ## debug.c:1397:20
 1e038d6:    61 e7 06 c0       	ifs (r1 > 118) goto 12 <mpu_set+0x92 : 1e038e6 >
 1e038da:    01 e5 0c 00       	if (r1 == 80) goto 24 <mpu_set+0xA2 : 1e038f6 >
 1e038de:    21 e7 1b 10       	if (r1 != 114) goto 54 <mpu_set+0xC4 : 1e03918 >
 1e038e2:    93 b0             	r3 |= 2			  ## debug.c:1405:23
 1e038e4:    19 18             	goto 50 <mpu_set+0xC4 : 1e03918 >			  ## debug.c:1405:23
 1e038e6:    71 e7 16 00       	if (r1 == 119) goto 44 <mpu_set+0xC2 : 1e03916 >
 1e038ea:    81 e7 15 10       	if (r1 != 120) goto 42 <mpu_set+0xC4 : 1e03918 >
 1e038ee:    13 b1             	r3 |= 4			  ## debug.c:1408:23
 1e038f0:    13 18             	goto 38 <mpu_set+0xC4 : 1e03918 >			  ## debug.c:1408:23
 1e038f2:    31 e4 11 10       	if (r1 != 67) goto 34 <mpu_set+0xC4 : 1e03918 >
 1e038f6:    21 fd 01 39       	r1 = r3 & 1
 1e038fa:    19 02             	[sp+4] = r1
 1e038fc:    27 fd 02 39       	r7 = r3 & 2
 1e03900:    01 04             	r1 = r0.b0 (u)
 1e03902:    82 04             	r2 = r2.b0 (u)
 1e03904:    23 fd 04 39       	r3 = r3 & 4
 1e03908:    0f 02             	[sp] = r7
 1e0390a:    40 08             	r0 = r4
 1e0390c:    65 17             	call -310 <mpu_privilege : 1e037d8 >
 1e0390e:    00 6c             	r0 = b[r6 + 0] (u)
 1e03910:    02 70             	r2 = 0
 1e03912:    03 70             	r3 = 0
 1e03914:    01 18             	goto 2 <mpu_set+0xC4 : 1e03918 >
 1e03916:    13 b0             	r3 |= 1			  ## debug.c:1402:23
 1e03918:    11 6c             	r1 = b[r6 + 1] (u)			  ## debug.c:1377:12
 1e0391a:    16 80             	r6 += 1			  ## debug.c:1414:15
 1e0391c:    c2 33             	if (r1 != 0) goto -124 <mpu_set+0x4E : 1e038a2 >
 1e0391e:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1416:5
 1e03922:    19 02             	[sp+4] = r1			  ## debug.c:1416:5
 1e03924:    26 fd 02 39       	r6 = r3 & 2			  ## debug.c:1416:5
 1e03928:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1416:5
 1e0392a:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1416:5
 1e0392c:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1416:5
 1e03930:    0e 02             	[sp] = r6			  ## debug.c:1416:5
 1e03932:    40 08             	r0 = r4			  ## debug.c:1416:5
 1e03934:    51 17             	call -350 <mpu_privilege : 1e037d8 >			  ## debug.c:1416:5
 1e03936:    02 18             	goto 4 <mpu_set+0xE8 : 1e0393c >			  ## debug.c:1416:5
 1e03938:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:580:9
 1e0393c:    00 4a             	r0 = [r5 + 0]
 1e0393e:    20 f3 fb 0f       	if ((r0 & 1) != 0) goto -10 <mpu_set+0xE4 : 1e03938 >
 1e03942:    08 0a             	sp += 16
 1e03944:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1457:1


debug_init:
 1e03946:    76 01             	[--sp] = {rets, r6-r4}			  ## debug.c:1606:0
 1e03948:    fa 0b             	sp += -12			  ## debug.c:1606:0
 1e0394a:    c0 ff 17 00 00 80 	r0 = 2147483671 <BTCTLER_CL_DATA_SIZE+0xB : 17 >			  ## debug.c:1612:14
 1e03950:    c1 ff c0 e1 1b 00 	r1 = 1827264 <uECC_vli_cmp_unsafe+0xB71C4 : 1be1c0 >			  ## debug.c:1612:14
 1e03956:    08 43             	[r1 + 64] = r0			  ## debug.c:1612:14
 1e03958:    c0 f4 01 19       	[r1 + 0] = 1			  ## debug.c:1619:14
 1e0395c:    db f4 10 1b       	[r1 + 108] = 1048576			  ## debug.c:598:19
 1e03960:    da f4 11 1b       	[r1 + 104] = 1114112			  ## debug.c:599:19
 1e03964:    c4 ff 00 32 00 00 	r4 = 12800 <report_data_code_begin : 3200 >			  ## debug.c:592:19
 1e0396a:    9c 43             	[r1 + 100] = r4			  ## debug.c:592:19
 1e0396c:    c6 ff 28 49 00 00 	r6 = 18728 <report_overlay_end : 4928 >			  ## debug.c:1619:14
 1e03972:    8e 43             	[r1 + 96] = r6			  ## debug.c:593:19
 1e03974:    c0 ff 20 01 e0 01 	r0 = 31457568 <text_begin : 1e00120 >			  ## debug.c:586:19
 1e0397a:    78 43             	[r1 + 92] = r0			  ## debug.c:586:19
 1e0397c:    c0 ff 6c 8c e1 01 	r0 = 31558764 <text_end : 1e18c6c >			  ## debug.c:587:19
 1e03982:    68 43             	[r1 + 88] = r0			  ## debug.c:587:19
 1e03984:    c0 ff 40 09 00 00 	r0 = 2368 <data_magic : 940 >			  ## debug.c:1655:5
 1e0398a:    f1 7f             	r1 = 255			  ## debug.c:1655:5
 1e0398c:    02 74             	r2 = 64			  ## debug.c:1655:5
 1e0398e:    98 f3 af 1a       	call 3159390 <memset : 106ef0 >			  ## debug.c:1655:5
 1e03992:    c0 ff aa f0 e0 01 	r0 = 31518890 <bluetooth_base_uuid+0xA0 : 1e0f0aa >			  ## debug.c:1662:99
 1e03998:    08 17             	call -496 <get_dev_id : 1e037aa >			  ## debug.c:1662:99
 1e0399a:    05 08             	r5 = r0			  ## debug.c:1662:99
 1e0399c:    c0 ff b2 f0 e0 01 	r0 = 31518898 <bluetooth_base_uuid+0xA8 : 1e0f0b2 >			  ## debug.c:1662:122
 1e039a2:    03 17             	call -506 <get_dev_id : 1e037aa >			  ## debug.c:1662:122
 1e039a4:    28 02             	[sp+8] = r0			  ## debug.c:1662:5
 1e039a6:    1d 02             	[sp+4] = r5			  ## debug.c:1662:5
 1e039a8:    c1 ff b9 f0 e0 01 	r1 = 31518905 <bluetooth_base_uuid+0xAF : 1e0f0b9 >			  ## debug.c:1662:5
 1e039ae:    62 fc ff ff       	r2 = r6 + -1			  ## debug.c:1619:14
 1e039b2:    00 70             	r0 = 0			  ## debug.c:1662:5
 1e039b4:    09 02             	[sp] = r1			  ## debug.c:1662:5
 1e039b6:    41 08             	r1 = r4			  ## debug.c:1662:5
 1e039b8:    4d 17             	call -358 <mpu_set : 1e03854 >			  ## debug.c:1662:5
 1e039ba:    06 0a             	sp += 12			  ## debug.c:1662:5
 1e039bc:    56 01             	{pc, r6-r4} = [sp++]			  ## debug.c:1702:1


__crc16_mutex_init:
 1e039be:    c0 ff a0 20 00 00 	r0 = 8352 <mutex : 20a0 >			  ## crc16.c:14:0
 1e039c4:    d8 f3 2a 1a       	goto 3159124 <os_mutex_create : 106e1c >			  ## crc16.c:15:5


setup_arch:
 1e039c8:    76 01             	[--sp] = {rets, r6-r4}			  ## setup.c:123:0
 1e039ca:    bf f3 f3 e5       	call -13338 <power_enter_charge_mode : 1e005b4 >			  ## setup.c:127:5
 1e039ce:    20 fb 71 04       	r0 = 1974272			  ## setup.c:131:20
 1e039d2:    00 f4 04 09       	[r0 + 0] |= 4			  ## setup.c:131:20
 1e039d6:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## setup.c:131:20
 1e039dc:    01 f9 d0 00       	r1 = b[r0 + 208] (u)			  ## setup.c:131:20
 1e039e0:    46 32             	if (r1 != 0) goto 140 <system_code_total_size+0x82 : 1e03a6e >			  ## setup.c:131:20
 1e039e2:    14 70             	r4 = 1
 1e039e4:    c2 ff 28 49 00 00 	r2 = 18728 <report_overlay_end : 4928 >
 1e039ea:    c3 ff 60 fb 00 00 	r3 = 64352 <report_heap_end : fb60 >


system_code_total_size:
 1e039ec:    60 fb 00 00       	r0 = 2048 - r0
 1e039f0:    a1 b6             	r1 = r3 - r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e039f2:    c9 d1             	r1 = r1 >> 7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e039f4:    14 f9 d0 00       	b[r0 + 208] = r4
 1e039f8:    0b ff 01 14 02 00 	ifs (r1 < 1025) goto 4 <system_code_total_size+0x16 : 1e03a02 >
 1e039fe:    8f f3 0a fd       	call 2095636 <p33_soft_reset : 3416 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e03a02:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e03a04:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e03a06:    98 f3 4b 1a       	call 3159190 <pmalloc_init : 106ea0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e03a0a:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e03a10:    01 fb 00 08       	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e03a14:    98 f3 50 1a       	call 3159200 <vmm_init_ : 106eb8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e03a18:    c5 ff d0 28 00 00 	r5 = 10448 <stack_mem : 28d0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e03a1e:    cf f4 20 5b       	[r5 + 60] = 2097152			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:610:29
 1e03a22:    c0 ff 00 f0 20 00 	r0 = 2158592 <uECC_vli_cmp_unsafe+0x108004 : 20f000 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e03a28:    08 4b             	[r5 + 64] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e03a2a:    d1 f4 f0 5a       	[r5 + 68] = 61440			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:612:29
 1e03a2e:    d2 f4 f0 55       	[r5 + 72] = 31457280			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:615:29
 1e03a32:    00 fb e0 01       	r0 = 480 <BTCTLER_CONTROLLER_BSS_SIZE+0x20 : 1e0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:616:29
 1e03a36:    10 f7 4c 50       	h[r5 + 76] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:617:29
 1e03a3a:    50 fc 50 00       	r0 = r5 + 80			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03a3e:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03a40:    92 77             	r2 = 121			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03a42:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03a44:    98 f3 54 1a       	call 3159208 <memset : 106ef0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03a48:    c0 ff fc ff ff 1f 	r0 = 536870908 <bank_code_load_addr+0x1E55D8 : 1fffffc >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03a4e:    f1 d0             	r1 = r6 >> 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:9
 1e03a50:    51 b1             	r1 &= r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:25
 1e03a52:    82 f6 00 15       	r2 = [r1+r5]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e03a56:    23 fd 1f 69       	r3 = r6 & 31			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e03a5a:    f8 fd 30 34       	r3 = r4 << r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e03a5e:    52 b6             	r2 |= r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e03a60:    92 f6 00 15       	[r1+r5] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e03a64:    01 f7 4a 50       	r1 = h[r5 + 74] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:622:44
 1e03a68:    16 80             	r6 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/cpu/bd19/memory/heap_mmu.c:622:65
 1e03a6a:    16 f2 f0 3f       	if (r6 < r1) goto -32 <system_code_total_size+0x62 : 1e03a4e >
 1e03a6e:    c0 ff 40 10 00 00 	r0 = 4160 <stack_magic : 1040 >			  ## setup.c:134:5
 1e03a74:    a1 75             	r1 = 90			  ## setup.c:134:5
 1e03a76:    02 71             	r2 = 16			  ## setup.c:134:5
 1e03a78:    98 f3 3a 1a       	call 3159156 <memset : 106ef0 >			  ## setup.c:134:5
 1e03a7c:    c0 ff 50 18 00 00 	r0 = 6224 <stack_magic0 : 1850 >			  ## setup.c:135:5
 1e03a82:    a1 75             	r1 = 90			  ## setup.c:135:5
 1e03a84:    02 71             	r2 = 16			  ## setup.c:135:5
 1e03a86:    98 f3 33 1a       	call 3159142 <memset : 106ef0 >			  ## setup.c:135:5
 1e03a8a:    fc 15             	call -1032 <p11_init : 1e03684 >			  ## setup.c:138:5
 1e03a8c:    16 16             	call -980 <wdt_init : 1e036ba >			  ## setup.c:140:5
 1e03a8e:    c0 ff 48 18 1a 00 	r0 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## setup.c:140:5
 1e03a94:    01 60             	r1 = b[r0 + 0] (u)			  ## setup.c:142:2
 1e03a96:    71 b0             	r1 &= 4294967294			  ## setup.c:142:2
 1e03a98:    09 60             	b[r0 + 0] = r1			  ## setup.c:142:2
 1e03a9a:    90 8c             	r0 += -55			  ## setup.c:142:2
 1e03a9c:    01 60             	r1 = b[r0 + 0] (u)			  ## setup.c:143:5
 1e03a9e:    71 b0             	r1 &= 4294967294			  ## setup.c:143:5
 1e03aa0:    09 60             	b[r0 + 0] = r1			  ## setup.c:143:5
 1e03aa2:    00 fc 81 00       	r0 = r0 + 129			  ## setup.c:143:5
 1e03aa6:    01 60             	r1 = b[r0 + 0] (u)			  ## setup.c:144:6
 1e03aa8:    f1 b1             	r1 &= 4294967287			  ## setup.c:144:6
 1e03aaa:    09 60             	b[r0 + 0] = r1			  ## setup.c:144:6
 1e03aac:    80 f3 e4 a7       	call 85960 <clk_voltage_init : 1e18a78 >			  ## setup.c:146:5
 1e03ab0:    80 f3 e8 a7       	call 85968 <clk_early_init : 1e18a84 >			  ## setup.c:147:5
 1e03ab4:    80 f3 7d 46       	call 36090 <tick_timer_init : 1e0c7b2 >			  ## setup.c:149:5
 1e03ab8:    08 16             	call -1008 <reset_source_dump : 1e036ca >			  ## setup.c:169:5
 1e03aba:    c4 ff a0 44 00 00 	r4 = 17568 <exception_irq_handler : 44a0 >			  ## setup.c:174:5
 1e03ac0:    00 70             	r0 = 0			  ## setup.c:174:5
 1e03ac2:    21 70             	r1 = 2			  ## setup.c:174:5
 1e03ac4:    42 08             	r2 = r4			  ## setup.c:174:5
 1e03ac6:    80 f3 22 40       	call 32836 <request_irq : 1e0bb0e >			  ## setup.c:174:5
 1e03aca:    10 70             	r0 = 1			  ## setup.c:175:5
 1e03acc:    21 70             	r1 = 2			  ## setup.c:175:5
 1e03ace:    42 08             	r2 = r4			  ## setup.c:175:5
 1e03ad0:    80 f3 1d 40       	call 32826 <request_irq : 1e0bb0e >			  ## setup.c:175:5
 1e03ad4:    80 f3 69 3d       	call 31442 <sys_timer_init : 1e0b5aa >			  ## setup.c:177:5
 1e03ad8:    36 17             	call -404 <debug_init : 1e03946 >			  ## setup.c:179:5
 1e03ada:    16 01             	{rets, r6-r4} = [sp++]			  ## setup.c:184:5
 1e03adc:    70 1f             	goto -288 <__crc16_mutex_init : 1e039be >			  ## setup.c:184:5


low_power_sys_get:
 1e03ade:    74 01             	[--sp] = {rets, r4}			  ## power_hw.c:1156:0
 1e03ae0:    04 08             	r4 = r0			  ## power_hw.c:1156:0
 1e03ae2:    00 71             	r0 = 16			  ## power_hw.c:1159:13
 1e03ae4:    80 f3 5c 3f       	call 32440 <malloc : 1e0b9a0 >			  ## power_hw.c:1159:13
 1e03ae8:    0d 20             	if (r0 == 0) goto 26 <low_power_sys_get+0x26 : 1e03b04 >			  ## power_hw.c:1159:13
 1e03aea:    3c 40             	[r0 + 12] = r4			  ## power_hw.c:1164:16
 1e03aec:    c2 f4 00 09       	[r0 + 8] = 0			  ## power_hw.c:1165:17
 1e03af0:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## list.h:154:28
 1e03af6:    42 42             	r2 = [r1 + 16]			  ## list.h:154:28
 1e03af8:    48 42             	[r1 + 16] = r0			  ## list.h:137:16
 1e03afa:    c1 80             	r1 += 12			  ## list.h:137:16
 1e03afc:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e03afe:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e03b00:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e03b02:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1170:1
 1e03b04:    8f f3 87 fc       	call 2095374 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03b08:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e03b0a:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1170:1


power_init:
 1e03b0c:    7b 01             	[--sp] = {rets, r11-r4}			  ## power_hw.c:1818:0
 1e03b0e:    ec 0b             	sp += -40			  ## power_hw.c:1818:0
 1e03b10:    c0 ff f3 1f 1a 00 	r0 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1818:0
 1e03b16:    31 60             	r1 = b[r0 + 3] (u)			  ## power_hw.c:1724:5
 1e03b18:    f1 b2             	r1 &= 4294967263			  ## power_hw.c:1724:5
 1e03b1a:    39 60             	b[r0 + 3] = r1			  ## power_hw.c:1724:5
 1e03b1c:    06 fc 20 f8       	r6 = r0 + -2016			  ## power_hw.c:1724:5
 1e03b20:    41 6c             	r1 = b[r6 + 4] (u)			  ## power_hw.c:1726:5
 1e03b22:    f1 b0             	r1 &= 4294967293			  ## power_hw.c:1726:5
 1e03b24:    49 6c             	b[r6 + 4] = r1			  ## power_hw.c:1726:5
 1e03b26:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1682:9
 1e03b28:    c9 ff c0 47 00 00 	r9 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:1682:9
 1e03b2e:    03 22             	if (r1 == 0) goto 6 <power_init+0x2A : 1e03b36 >			  ## power_hw.c:1682:9
 1e03b30:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1683:27
 1e03b32:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1683:25
 1e03b34:    51 18             	goto 162 <power_init+0xCC : 1e03bd8 >			  ## power_hw.c:1683:25
 1e03b36:    00 f9 35 90       	r0 = b[r9 + 53] (u)			  ## power_hw.c:1688:17
 1e03b3a:    4e 30             	if (r0 != 0) goto 156 <power_init+0xCC : 1e03bd8 >			  ## power_hw.c:1688:17
 1e03b3c:    10 70             	r0 = 1			  ## power_hw.c:1691:26
 1e03b3e:    10 f9 35 90       	b[r9 + 53] = r0			  ## power_hw.c:1691:26
 1e03b42:    67 fc 77 07       	r7 = r6 + 1911			  ## power_hw.c:1691:26
 1e03b46:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1697:22
 1e03b48:    90 b0             	r0 |= 2			  ## power_hw.c:1697:22
 1e03b4a:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1697:22
 1e03b4c:    20 6e             	r0 = b[r7 + 2] (u)			  ## power_hw.c:1698:22
 1e03b4e:    90 b1             	r0 |= 8			  ## power_hw.c:1698:22
 1e03b50:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:1698:22
 1e03b52:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1701:9
 1e03b54:    20 fd cf 09       	r0 = r0 & 207			  ## power_hw.c:1701:9
 1e03b58:    10 b2             	r0 |= 16			  ## power_hw.c:1701:9
 1e03b5a:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1701:9
 1e03b5c:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1709:22
 1e03b5e:    90 b1             	r0 |= 8			  ## power_hw.c:1709:22
 1e03b60:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1709:22
 1e03b62:    80 a0             	r0 = sp + 8
 1e03b64:    01 70             	r1 = 0			  ## power_hw.c:128:21
 1e03b66:    02 72             	r2 = 32			  ## power_hw.c:128:21
 1e03b68:    98 f3 c2 19       	call 3158916 <memset : 106ef0 >			  ## power_hw.c:128:21
 1e03b6c:    c0 ff c4 f0 e0 01 	r0 = 31518916 <bluetooth_base_uuid+0xBA : 1e0f0c4 >			  ## power_hw.c:130:15
 1e03b72:    c1 ff e9 f0 e0 01 	r1 = 31518953 <bluetooth_base_uuid+0xDF : 1e0f0e9 >			  ## power_hw.c:130:15
 1e03b78:    80 f3 58 50       	call 41136 <fopen : 1e0dc2c >			  ## power_hw.c:130:15
 1e03b7c:    04 08             	r4 = r0			  ## power_hw.c:130:15
 1e03b7e:    26 28             	if (r4 == 0) goto 76 <power_init+0xC0 : 1e03bcc >
 1e03b80:    81 a0             	r1 = sp + 8
 1e03b82:    80 f3 6e 51       	call 41692 <fget_attrs : 1e0de62 >			  ## power_hw.c:136:5
 1e03b86:    32 02             	r2 = [sp+12]			  ## power_hw.c:137:30
 1e03b88:    43 02             	r3 = [sp+16]			  ## power_hw.c:138:36
 1e03b8a:    22 ff 01 2d 02 00 	if (r2 >= 65537) goto 4 <power_init+0x88 : 1e03b94 >
 1e03b90:    03 34             	if (r2 != 0) goto 6 <power_init+0x8C : 1e03b98 >
 1e03b92:    0a 18             	goto 20 <power_init+0x9C : 1e03ba8 >
 1e03b94:    8f f3 3f fc       	call 2095230 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03b98:    20 fb 1a 0b       	r0 = 1703936
 1e03b9c:    81 f9 01 30       	r1 = b[r3 ++= 1] (u)			  ## power_hw.c:144:26
 1e03ba0:    91 f9 01 00       	b[r0 ++= 1] = r1			  ## power_hw.c:144:24
 1e03ba4:    52 f3 fa ff       	if (--r2 != 0) goto -12 <power_init+0x90 : 1e03b9c >
 1e03ba8:    40 08             	r0 = r4			  ## power_hw.c:147:5
 1e03baa:    80 f3 1a 51       	call 41524 <fclose : 1e0dde2 >			  ## power_hw.c:147:5
 1e03bae:    c0 ff e0 f0 e0 01 	r0 = 31518944 <bluetooth_base_uuid+0xD6 : 1e0f0e0 >			  ## power_hw.c:153:87
 1e03bb4:    fa 15             	call -1036 <get_dev_id : 1e037aa >			  ## power_hw.c:153:87
 1e03bb6:    18 02             	[sp+4] = r0			  ## power_hw.c:153:5
 1e03bb8:    c3 ff e8 f0 e0 01 	r3 = 31518952 <bluetooth_base_uuid+0xDE : 1e0f0e8 >			  ## power_hw.c:153:5
 1e03bbe:    62 fc 56 f7       	r2 = r6 + -2218			  ## power_hw.c:153:5
 1e03bc2:    30 70             	r0 = 3			  ## power_hw.c:153:5
 1e03bc4:    20 fb 1a 1b       	r1 = 1703936			  ## power_hw.c:153:5
 1e03bc8:    0b 02             	[sp] = r3			  ## power_hw.c:153:5
 1e03bca:    44 16             	call -888 <mpu_set : 1e03854 >			  ## power_hw.c:153:5
 1e03bcc:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1715:21
 1e03bce:    90 b2             	r0 |= 32			  ## power_hw.c:1715:21
 1e03bd0:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:1715:21
 1e03bd2:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1716:16
 1e03bd4:    25 f3 fd 0f       	if ((r0 & 32) != 0) goto -6 <power_init+0xC6 : 1e03bd2 >			  ## power_hw.c:1716:16
 1e03bd8:    c2 ff d8 2f e0 01 	r2 = 31469528 <__hw_p2m_irq : 1e02fd8 >			  ## power_hw.c:1730:5
 1e03bde:    a0 70             	r0 = 10			  ## power_hw.c:1730:5
 1e03be0:    01 70             	r1 = 0			  ## power_hw.c:1730:5
 1e03be2:    04 70             	r4 = 0			  ## power_hw.c:1730:5
 1e03be4:    80 f3 93 3f       	call 32550 <request_irq : 1e0bb0e >			  ## power_hw.c:1730:5
 1e03be8:    97 fc 30 00       	r7 = r9 + 48			  ## power_hw.c:1730:5
 1e03bec:    3c 6e             	b[r7 + 3] = r4			  ## power_hw.c:1824:20
 1e03bee:    6c 6e             	b[r7 + 6] = r4			  ## power_hw.c:1826:23
 1e03bf0:    0c 6f             	b[r7 + 16] = r4			  ## power_hw.c:1828:21
 1e03bf2:    7c 6e             	b[r7 + 7] = r4			  ## power_hw.c:1830:24
 1e03bf4:    8c 6e             	b[r7 + 8] = r4			  ## power_hw.c:1832:35
 1e03bf6:    9c 6f             	b[r7 + 25] = r4			  ## power_hw.c:1834:33
 1e03bf8:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## power_hw.c:1834:33
 1e03bfc:    91 fc 40 01       	r1 = r9 + 320			  ## power_hw.c:1834:33
 1e03c00:    28 42             	[r1 + 8] = r0			  ## power_hw.c:1834:33
 1e03c02:    40 70             	r0 = 4			  ## power_hw.c:1844:33
 1e03c04:    c8 6f             	b[r7 + 28] = r0			  ## power_hw.c:1844:33
 1e03c06:    7c 6f             	b[r7 + 23] = r4			  ## power_hw.c:435:25
 1e03c08:    8c 6f             	b[r7 + 24] = r4			  ## power_hw.c:437:30
 1e03c0a:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## power_hw.c:439:25
 1e03c10:    18 42             	[r1 + 4] = r0			  ## power_hw.c:439:25
 1e03c12:    c0 f4 7d 1a       	[r1 + 0] = 32000			  ## power_hw.c:441:23
 1e03c16:    80 71             	r0 = 24			  ## power_hw.c:445:27
 1e03c18:    58 6f             	b[r7 + 21] = r0			  ## power_hw.c:445:27
 1e03c1a:    bc 6f             	b[r7 + 27] = r4			  ## power_hw.c:448:30
 1e03c1c:    c0 75             	r0 = 92			  ## lp_timer_hw.c:220:19
 1e03c1e:    61 fc be 07       	r1 = r6 + 1982			  ## lp_timer_hw.c:220:19
 1e03c22:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:220:19
 1e03c24:    30 75             	r0 = 83			  ## lp_timer_hw.c:222:19
 1e03c26:    18 62             	b[r1 + 1] = r0			  ## lp_timer_hw.c:222:19
 1e03c28:    2c 62             	b[r1 + 2] = r4			  ## lp_timer_hw.c:224:19
 1e03c2a:    10 72             	r0 = 33			  ## lrc_hw.c:81:17
 1e03c2c:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:81:17
 1e03c2e:    10 74             	r0 = 65			  ## lrc_hw.c:82:17
 1e03c30:    18 6c             	b[r6 + 1] = r0			  ## lrc_hw.c:82:17
 1e03c32:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:82:17
 1e03c38:    10 70             	r0 = 1			  ## lrc_hw.c:82:17
 1e03c3a:    86 fc c0 00       	r6 = r8 + 192			  ## lrc_hw.c:82:17
 1e03c3e:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:82:17
 1e03c40:    c1 ff f8 20 00 00 	r1 = 8440 <lrc.4 : 20f8 >			  ## lrc_hw.c:228:24
 1e03c46:    0c 62             	b[r1 + 0] = r4			  ## lrc_hw.c:228:24
 1e03c48:    88 6c             	b[r6 + 8] = r0			  ## lrc_hw.c:228:24
 1e03c4a:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:228:24
 1e03c50:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:232:5
 1e03c52:    31 fd 3e 19       	r1 = r1 & 4294967233			  ## lrc_hw.c:232:5
 1e03c56:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:232:5
 1e03c58:    f0 71             	r0 = 31			  ## lrc_hw.c:67:17
 1e03c5a:    c4 ff ac 0f 1a 00 	r4 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >
 1e03c60:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e03c62:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e03c64:    2a 73             	r10 = 50			  ## lrc_hw.c:68:27
 1e03c66:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e03c6a:    a8 69             	b[r4 + 26] = r0			  ## lrc_hw.c:68:22
 1e03c6c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e03c6e:    8b 7c             	r11 = 200			  ## lrc_hw.c:69:31
 1e03c70:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e03c74:    b8 69             	b[r4 + 27] = r0			  ## lrc_hw.c:69:23
 1e03c76:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e03c78:    05 fb 58 02       	r5 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## lrc_hw.c:70:29
 1e03c7c:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e03c80:    c8 69             	b[r4 + 28] = r0			  ## lrc_hw.c:70:23
 1e03c82:    10 70             	r0 = 1			  ## lrc_hw.c:237:5
 1e03c84:    bf f3 69 fa       	call -2862 <__hw_lrc_enable : 1e0315a >			  ## lrc_hw.c:237:5
 1e03c88:    00 70             	r0 = 0			  ## lrc_hw.c:239:5
 1e03c8a:    bf f3 7a fa       	call -2828 <lrc_timeout_handler : 1e03182 >			  ## lrc_hw.c:239:5
 1e03c8e:    10 4c             	r0 = [r6 + 4]			  ## lrc_hw.c:245:28
 1e03c90:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## lrc_hw.c:65:24
 1e03c96:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## lrc_hw.c:65:24
 1e03c9a:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e03c9c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e03c9e:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e03ca2:    a8 69             	b[r4 + 26] = r0			  ## lrc_hw.c:68:22
 1e03ca4:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e03ca6:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e03caa:    b8 69             	b[r4 + 27] = r0			  ## lrc_hw.c:69:23
 1e03cac:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e03cae:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e03cb2:    c8 69             	b[r4 + 28] = r0			  ## lrc_hw.c:70:23
 1e03cb4:    c1 ff 82 31 e0 01 	r1 = 31469954 <lrc_timeout_handler : 1e03182 >			  ## lrc_hw.c:239:5
 1e03cba:    00 70             	r0 = 0			  ## lrc_hw.c:247:21
 1e03cbc:    a2 70             	r2 = 10			  ## lrc_hw.c:247:21
 1e03cbe:    03 70             	r3 = 0			  ## lrc_hw.c:247:21
 1e03cc0:    80 f3 ff 3a       	call 30206 <usr_timer_add : 1e0b2c2 >			  ## lrc_hw.c:247:21
 1e03cc4:    71 6f             	r1 = b[r7 + 23] (u)			  ## power_hw.c:454:24
 1e03cc6:    c2 ff fa 20 00 00 	r2 = 8442 <lrc.2 : 20fa >			  ## lrc_hw.c:247:19
 1e03ccc:    08 64             	b[r2 + 0] = r0			  ## lrc_hw.c:247:19
 1e03cce:    05 22             	if (r1 == 0) goto 10 <power_init+0x1CE : 1e03cda >			  ## power_hw.c:454:5
 1e03cd0:    11 e0 06 10       	if (r1 != 1) goto 12 <power_init+0x1D4 : 1e03ce0 >
 1e03cd4:    bf f3 cc fa       	call -2664 <__hw_btosc_time_set : 1e03270 >			  ## power_hw.c:456:9
 1e03cd8:    03 18             	goto 6 <power_init+0x1D4 : 1e03ce0 >			  ## power_hw.c:456:9
 1e03cda:    20 70             	r0 = 2			  ## power_hw.c:459:9
 1e03cdc:    bf f3 24 fb       	call -2488 <__hw_lrc_time_set : 1e03328 >			  ## power_hw.c:459:9
 1e03ce0:    00 fb 04 05       	r0 = 1284 <BTCTLER_CONTROLLER_DATA_SIZE+0x48 : 504 >			  ## power_hw.c:472:27
 1e03ce4:    10 f7 4c 91       	h[r9 + 332] = r0			  ## power_hw.c:472:27
 1e03ce8:    40 fc e9 08       	r0 = r4 + 2281			  ## power_hw.c:472:27
 1e03cec:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:473:5
 1e03cee:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:473:5
 1e03cf2:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:473:5
 1e03cf4:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:474:5
 1e03cf6:    21 fd f8 19       	r1 = r1 & 248			  ## power_hw.c:474:5
 1e03cfa:    01 fd 05 19       	r1 = r1 | 5			  ## power_hw.c:474:5
 1e03cfe:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:474:5
 1e03d00:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:483:5
 1e03d02:    f1 b3             	r1 &= 4294967167			  ## power_hw.c:483:5
 1e03d04:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:483:5
 1e03d06:    01 fc b0 ff       	r1 = r0 + -80			  ## power_hw.c:483:5
 1e03d0a:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:486:17
 1e03d0c:    22 fd f8 29       	r2 = r2 & 248			  ## power_hw.c:486:17
 1e03d10:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:486:17
 1e03d12:    81 60             	r1 = b[r0 + 8] (u)			  ## power_hw.c:489:5
 1e03d14:    71 b3             	r1 &= 4294967231			  ## power_hw.c:489:5
 1e03d16:    89 60             	b[r0 + 8] = r1			  ## power_hw.c:489:5
 1e03d18:    19 f6 00 90       	[r9 + 0] = r9			  ## list.h:188:16
 1e03d1c:    19 f6 04 90       	[r9 + 4] = r9			  ## list.h:189:16
 1e03d20:    90 fc 0c 00       	r0 = r9 + 12			  ## list.h:188:16
 1e03d24:    10 f6 0c 90       	[r9 + 12] = r0			  ## list.h:188:16
 1e03d28:    10 f6 10 90       	[r9 + 16] = r0			  ## list.h:189:16
 1e03d2c:    00 f9 33 90       	r0 = b[r9 + 51] (u)			  ## power_hw.c:1859:17
 1e03d30:    08 20             	if (r0 == 0) goto 16 <power_init+0x236 : 1e03d42 >
 1e03d32:    80 f3 57 45       	call 35502 <vPortSysSleepInit : 1e0c7e4 >			  ## power_hw.c:1860:9
 1e03d36:    c0 ff e4 eb e0 01 	r0 = 31517668 <timer_power_ops : 1e0ebe4 >			  ## timer.c:209:26
 1e03d3c:    d0 16             	call -608 <low_power_sys_get : 1e03ade >			  ## timer.c:209:26
 1e03d3e:    10 f6 ac 80       	[r8 + 172] = r0			  ## timer.c:209:24
 1e03d42:    14 0a             	sp += 40
 1e03d44:    5b 01             	{pc, r11-r4} = [sp++]			  ## power_hw.c:1876:1


power_set_callback:
 1e03d46:    c0 ff 28 2d e0 01 	r0 = 31468840 <sleep_enter_callback : 1e02d28 >			  ## power_hw.c:1416:0
 1e03d4c:    c1 ff 10 49 00 00 	r1 = 18704 <nvbss_begin+0x150 : 4910 >			  ## power_hw.c:1420:37
 1e03d52:    08 42             	[r1 + 0] = r0			  ## power_hw.c:1418:33
 1e03d54:    c0 ff 32 2d e0 01 	r0 = 31468850 <sleep_exit_callback : 1e02d32 >			  ## power_hw.c:1419:33
 1e03d5a:    18 42             	[r1 + 4] = r0			  ## power_hw.c:1419:33
 1e03d5c:    c0 ff 52 2d e0 01 	r0 = 31468882 <board_set_soft_poweroff : 1e02d52 >			  ## power_hw.c:1420:37
 1e03d62:    48 42             	[r1 + 16] = r0			  ## power_hw.c:1420:37
 1e03d64:    20 00             	rts			  ## power_hw.c:1421:1


power_keep_dacvdd_en:
 1e03d66:    c0 ff c0 47 00 00 	r0 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:1407:0
 1e03d6c:    01 70             	r1 = 0			  ## power_hw.c:1408:25
 1e03d6e:    11 f9 34 00       	b[r0 + 52] = r1			  ## power_hw.c:1408:25
 1e03d72:    20 00             	rts			  ## power_hw.c:1409:1


__hw_power_set_wakeup_IO:
 1e03d74:    78 01             	[--sp] = {rets, r8-r4}			  ## power_wakeup.c:520:0
 1e03d76:    13 08             	r3 = r1			  ## power_wakeup.c:520:0
 1e03d78:    08 08             	r8 = r0			  ## power_wakeup.c:520:0
 1e03d7a:    00 66             	r0 = b[r3 + 0] (u)			  ## power_wakeup.c:521:52
 1e03d7c:    51 70             	r1 = 5			  ## power_wakeup.c:521:52
 1e03d7e:    c4 ff 78 23 00 00 	r4 = 9080 <hdl.0 : 2378 >			  ## power_wakeup.c:521:52
 1e03d84:    80 fe 10 48       	r4 += r8 * r1			  ## power_wakeup.c:521:52
 1e03d88:    08 68             	b[r4 + 0] = r0			  ## power_wakeup.c:521:44
 1e03d8a:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:522:45
 1e03d8c:    1d 68             	b[r4 + 1] = r5			  ## power_wakeup.c:522:37
 1e03d8e:    21 66             	r1 = b[r3 + 2] (u)			  ## power_wakeup.c:523:45
 1e03d90:    29 68             	b[r4 + 2] = r1			  ## power_wakeup.c:523:37
 1e03d92:    31 66             	r1 = b[r3 + 3] (u)			  ## power_wakeup.c:524:45
 1e03d94:    39 68             	b[r4 + 3] = r1			  ## power_wakeup.c:524:37
 1e03d96:    46 66             	r6 = b[r3 + 4] (u)			  ## power_wakeup.c:525:45
 1e03d98:    4e 68             	b[r4 + 4] = r6			  ## power_wakeup.c:525:37
 1e03d9a:    06 e3 03 80       	if (r6 > 48) goto 6 <__hw_power_set_wakeup_IO+0x30 : 1e03da4 >			  ## power_wakeup.c:529:9
 1e03d9e:    27 fd f0 69       	r7 = r6 & 240			  ## power_wakeup.c:530:46
 1e03da2:    0e 18             	goto 28 <__hw_power_set_wakeup_IO+0x4C : 1e03dc0 >			  ## power_wakeup.c:530:46
 1e03da4:    64 fc cd ff       	r4 = r6 + -51			  ## power_wakeup.c:542:13
 1e03da8:    07 05             	r7 = r4.b0 (u)			  ## power_wakeup.c:542:13
 1e03daa:    34 73             	r4 = 51			  ## power_wakeup.c:542:13
 1e03dac:    27 e0 01 30       	if (r7 < 2) goto 2 <__hw_power_set_wakeup_IO+0x3E : 1e03db2 >			  ## power_wakeup.c:542:13
 1e03db0:    14 73             	r4 = 49			  ## power_wakeup.c:542:13
 1e03db2:    67 fc cb ff       	r7 = r6 + -53			  ## power_wakeup.c:545:41
 1e03db6:    c2 05             	r2 = r7.b0 (u)			  ## power_wakeup.c:545:41
 1e03db8:    57 73             	r7 = 53			  ## power_wakeup.c:545:41
 1e03dba:    42 e0 01 30       	if (r2 < 4) goto 2 <__hw_power_set_wakeup_IO+0x4C : 1e03dc0 >
 1e03dbe:    47 08             	r7 = r4			  ## power_wakeup.c:545:41
 1e03dc0:    c4 ff 50 18 1a 00 	r4 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >
 1e03dc6:    f7 e2 29 d0       	ifs (r7 <= 47) goto 82 <.GJTIE394_1_1_+0x30 : 1e03e1c >
 1e03dca:    07 8d             	r7 += -48
 1e03dcc:    57 e0 4c 80       	if (r7 > 5) goto 152 <.GJTIE394_2_2_+0x2C : 1e03e68 >
 1e03dd0:    a7 00             	tbb [r7]


.GJTIS394_0_0_:
 1e03dd2:    2a     < 42 : 0x2A >
 1e03dd3:    03     < 3 : 0x3 >
 1e03dd4:    4b     < 75 : 0x4B >
 1e03dd5:    03     < 3 : 0x3 >
 1e03dd6:    4b     < 75 : 0x4B >
 1e03dd7:    43     < 67 : 0x43 >
 1e03dd8:    63 fc cf ff       	r3 = r6 + -49			  ## power_wakeup.c:345:5
 1e03ddc:    33 e0 6e 80       	if (r3 > 3) goto 220 <.GJTIE394_2_2_+0x80 : 1e03ebc >
 1e03de0:    c1 ff 00 54 1e 00 	r1 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e03de6:    a3 00             	tbb [r3]


.GJTIS394_1_1_:
 1e03de8:    02     < 2 : 0x2 >
 1e03de9:    6c     < 108 : 0x6C >
 1e03dea:    83     < 131 : 0x83 >
 1e03deb:    9a     < 154 : 0x9A >
 1e03dec:    00 f4 04 1a       	[r1 + 0] |= 1024			  ## power_wakeup.c:349:9
 1e03df0:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_wakeup.c:350:9
 1e03df4:    05 e0 33 01       	if (r5 == 0) goto 614 <.GJTIE394_2_2_+0x222 : 1e0405e >			  ## power_wakeup.c:351:13
 1e03df8:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_1_1_+0x18 : 1e03e04 >
 1e03dfa:    00 f4 10 19       	[r1 + 0] |= 16			  ## power_wakeup.c:353:17
 1e03dfe:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:354:17
 1e03e00:    70 b3             	r0 &= 4294967231			  ## power_wakeup.c:354:17
 1e03e02:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:354:17
 1e03e04:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e03e06:    11 70             	r1 = 1			  ## power_wakeup.c:356:30
 1e03e08:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:356:30
 1e03e0c:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e03e0e:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e03e10:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e03e12:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e03e14:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e03e16:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e03e18:    a1 71             	r1 = 26			  ## power_wakeup.c:100:1
 1e03e1a:    74 19             	goto 744 <.GJTIE394_2_2_+0x2C8 : 1e04104 >			  ## power_wakeup.c:100:1
 1e03e1c:    04 2e             	if (r7 == 0) goto 8 <.GJTIE394_1_1_+0x3A : 1e03e26 >
 1e03e1e:    07 e1 02 00       	if (r7 == 16) goto 4 <.GJTIE394_1_1_+0x3A : 1e03e26 >
 1e03e22:    07 e2 21 10       	if (r7 != 32) goto 66 <.GJTIE394_2_2_+0x2C : 1e03e68 >
 1e03e26:    31 d1             	r1 = r6 >> 4			  ## power_wakeup.c:220:5
 1e03e28:    31 e0 20 80       	if (r1 > 3) goto 64 <.GJTIE394_2_2_+0x30 : 1e03e6c >			  ## power_wakeup.c:220:5
 1e03e2c:    25 fd 0f 69       	r5 = r6 & 15			  ## power_wakeup.c:217:24
 1e03e30:    c0 ff c0 ef e0 01 	r0 = 31518656 <PB_valid : 1e0efc0 >			  ## power_wakeup.c:217:24
 1e03e36:    a1 00             	tbb [r1]			  ## power_wakeup.c:217:24


.GJTIS394_2_2_:
 1e03e38:    02     < 2 : 0x2 >
 1e03e39:    1b     < 27 : 0x1B >
 1e03e3a:    29     < 41 : 0x29 >
 1e03e3b:    3a     < 58 : 0x3A >
 1e03e3c:    01 70             	r1 = 0
 1e03e3e:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## power_wakeup.c:224:22
 1e03e42:    25 f2 81 00       	if (r5 == r2) goto 258 <.GJTIE394_2_2_+0x10C : 1e03f48 >			  ## power_wakeup.c:224:22
 1e03e46:    11 80             	r1 += 1			  ## power_wakeup.c:223:48
 1e03e48:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE394_2_2_+0x2 : 1e03e3e >			  ## power_wakeup.c:223:48
 1e03e4c:    8f f3 e3 fa       	call 2094534 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03e50:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## cpu.h:148:5
 1e03e56:    29 18             	goto 82 <.GJTIE394_2_2_+0x6E : 1e03eaa >			  ## cpu.h:148:5
 1e03e58:    56 e3 ce 00       	if (r6 == 53) goto 412 <.GJTIE394_2_2_+0x1BC : 1e03ff8 >			  ## power_wakeup.c:444:5
 1e03e5c:    86 e3 ce 00       	if (r6 == 56) goto 412 <.GJTIE394_2_2_+0x1C0 : 1e03ffc >
 1e03e60:    76 e3 ce 10       	if (r6 != 55) goto 412 <.GJTIE394_2_2_+0x1C4 : 1e04000 >
 1e03e64:    18 70             	r8 = 1
 1e03e66:    cf 18             	goto 414 <.GJTIE394_2_2_+0x1CA : 1e04006 >
 1e03e68:    8f f3 d5 fa       	call 2094506 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03e6c:    58 01             	{pc, r8-r4} = [sp++]			  ## power_wakeup.c:569:1
 1e03e6e:    01 70             	r1 = 0
 1e03e70:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## power_wakeup.c:237:22
 1e03e74:    25 f2 71 00       	if (r5 == r2) goto 226 <.GJTIE394_2_2_+0x11E : 1e03f5a >			  ## power_wakeup.c:237:22
 1e03e78:    11 80             	r1 += 1			  ## power_wakeup.c:236:48
 1e03e7a:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE394_2_2_+0x34 : 1e03e70 >			  ## power_wakeup.c:236:48
 1e03e7e:    8f f3 ca fa       	call 2094484 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03e82:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## cpu.h:148:5
 1e03e88:    10 18             	goto 32 <.GJTIE394_2_2_+0x6E : 1e03eaa >			  ## cpu.h:148:5
 1e03e8a:    00 70             	r0 = 0
 1e03e8c:    c1 ff de ef e0 01 	r1 = 31518686 <PD_valid : 1e0efde >
 1e03e92:    02 fa 00 01       	r2 = b[r0+r1] (u)			  ## power_wakeup.c:250:22
 1e03e96:    25 f2 69 00       	if (r5 == r2) goto 210 <.GJTIE394_2_2_+0x130 : 1e03f6c >			  ## power_wakeup.c:250:22
 1e03e9a:    10 80             	r0 += 1			  ## power_wakeup.c:249:48
 1e03e9c:    40 e0 f9 9f       	if (r0 <= 4) goto -14 <.GJTIE394_2_2_+0x56 : 1e03e92 >			  ## power_wakeup.c:249:48
 1e03ea0:    8f f3 b9 fa       	call 2094450 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03ea4:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## cpu.h:148:5
 1e03eaa:    68 18             	goto 208 <.GJTIE394_2_2_+0x140 : 1e03f7c >
 1e03eac:    c7 ff 00 59 1e 00 	r7 = 1988864 <uECC_vli_cmp_unsafe+0xDE904 : 1e5900 >
 1e03eb2:    e6 71             	r6 = 30
 1e03eb4:    63 2a             	if (r5 == 0) goto 198 <.GJTIE394_2_2_+0x140 : 1e03f7c >
 1e03eb6:    8f f3 ae fa       	call 2094428 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e03eba:    60 18             	goto 192 <.GJTIE394_2_2_+0x140 : 1e03f7c >			  ## cpu.h:148:5
 1e03ebc:    01 70             	r1 = 0
 1e03ebe:    23 19             	goto 582 <.GJTIE394_2_2_+0x2CA : 1e04106 >
 1e03ec0:    00 f4 08 1a       	[r1 + 0] |= 2048			  ## power_wakeup.c:369:9
 1e03ec4:    00 f4 08 19       	[r1 + 0] |= 8			  ## power_wakeup.c:370:9
 1e03ec8:    df 2a             	if (r5 == 0) goto 446 <.GJTIE394_2_2_+0x24C : 1e04088 >			  ## power_wakeup.c:371:13
 1e03eca:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0x9A : 1e03ed6 >
 1e03ecc:    00 f4 20 19       	[r1 + 0] |= 32			  ## power_wakeup.c:373:17
 1e03ed0:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:374:17
 1e03ed2:    f0 b3             	r0 &= 4294967167			  ## power_wakeup.c:374:17
 1e03ed4:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:374:17
 1e03ed6:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e03ed8:    11 70             	r1 = 1			  ## power_wakeup.c:376:30
 1e03eda:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:376:30
 1e03ede:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e03ee0:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e03ee2:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e03ee4:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e03ee6:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e03ee8:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e03eea:    b1 71             	r1 = 27			  ## power_wakeup.c:100:1
 1e03eec:    0b 19             	goto 534 <.GJTIE394_2_2_+0x2C8 : 1e04104 >			  ## power_wakeup.c:100:1
 1e03eee:    09 f4 04 1a       	[r1 + 36] |= 1024			  ## power_wakeup.c:389:9
 1e03ef2:    09 f4 04 19       	[r1 + 36] |= 4			  ## power_wakeup.c:390:9
 1e03ef6:    dd 2a             	if (r5 == 0) goto 442 <.GJTIE394_2_2_+0x276 : 1e040b2 >			  ## power_wakeup.c:391:13
 1e03ef8:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0xC8 : 1e03f04 >
 1e03efa:    09 f4 10 19       	[r1 + 36] |= 16			  ## power_wakeup.c:393:17
 1e03efe:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:394:17
 1e03f00:    70 b3             	r0 &= 4294967231			  ## power_wakeup.c:394:17
 1e03f02:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:394:17
 1e03f04:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e03f06:    11 70             	r1 = 1			  ## power_wakeup.c:396:30
 1e03f08:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:396:30
 1e03f0c:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e03f0e:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e03f10:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e03f12:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e03f14:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e03f16:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e03f18:    c1 71             	r1 = 28			  ## power_wakeup.c:100:1
 1e03f1a:    f4 18             	goto 488 <.GJTIE394_2_2_+0x2C8 : 1e04104 >			  ## power_wakeup.c:100:1
 1e03f1c:    09 f4 08 1a       	[r1 + 36] |= 2048			  ## power_wakeup.c:409:9
 1e03f20:    09 f4 08 19       	[r1 + 36] |= 8			  ## power_wakeup.c:410:9
 1e03f24:    db 2a             	if (r5 == 0) goto 438 <.GJTIE394_2_2_+0x2A0 : 1e040dc >			  ## power_wakeup.c:411:13
 1e03f26:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0xF6 : 1e03f32 >
 1e03f28:    09 f4 20 19       	[r1 + 36] |= 32			  ## power_wakeup.c:413:17
 1e03f2c:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:414:17
 1e03f2e:    f0 b3             	r0 &= 4294967167			  ## power_wakeup.c:414:17
 1e03f30:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:414:17
 1e03f32:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e03f34:    11 70             	r1 = 1			  ## power_wakeup.c:416:30
 1e03f36:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:416:30
 1e03f3a:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e03f3c:    50 b4             	r0 |= r2			  ## power_wakeup.c:100:1
 1e03f3e:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e03f40:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e03f42:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e03f44:    50 b2             	r0 |= r1			  ## power_wakeup.c:100:1
 1e03f46:    dd 18             	goto 442 <.GJTIE394_2_2_+0x2C6 : 1e04102 >			  ## power_wakeup.c:100:1
 1e03f48:    c0 ff ca ef e0 01 	r0 = 31518666 <PA_map_tbl : 1e0efca >			  ## power_wakeup.c:225:23
 1e03f4e:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:225:23
 1e03f52:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## power_wakeup.c:225:23
 1e03f58:    11 18             	goto 34 <.GJTIE394_2_2_+0x140 : 1e03f7c >			  ## power_wakeup.c:225:23
 1e03f5a:    c0 ff d4 ef e0 01 	r0 = 31518676 <PB_map_tbl : 1e0efd4 >			  ## power_wakeup.c:238:23
 1e03f60:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:238:23
 1e03f64:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## power_wakeup.c:238:23
 1e03f6a:    08 18             	goto 16 <.GJTIE394_2_2_+0x140 : 1e03f7c >			  ## power_wakeup.c:238:23
 1e03f6c:    c1 ff e3 ef e0 01 	r1 = 31518691 <PD_map_tbl : 1e0efe3 >			  ## power_wakeup.c:251:23
 1e03f72:    06 fa 00 01       	r6 = b[r0+r1] (u)			  ## power_wakeup.c:251:23
 1e03f76:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## power_wakeup.c:251:23
 1e03f7c:    21 4e             	r1 = [r7 + 8]			  ## power_wakeup.c:283:15
 1e03f7e:    10 70             	r0 = 1			  ## power_wakeup.c:283:15
 1e03f80:    40 0d             	r0 <<= r5			  ## power_wakeup.c:283:18
 1e03f82:    51 b0             	r1 |= r0			  ## power_wakeup.c:283:15
 1e03f84:    29 4e             	[r7 + 8] = r1			  ## power_wakeup.c:283:15
 1e03f86:    31 4e             	r1 = [r7 + 12]			  ## power_wakeup.c:284:15
 1e03f88:    51 b0             	r1 |= r0			  ## power_wakeup.c:284:15
 1e03f8a:    39 4e             	[r7 + 12] = r1			  ## power_wakeup.c:284:15
 1e03f8c:    81 4e             	r1 = [r7 + 32]			  ## power_wakeup.c:285:16
 1e03f8e:    51 b0             	r1 |= r0			  ## power_wakeup.c:285:16
 1e03f90:    89 4e             	[r7 + 32] = r1			  ## power_wakeup.c:285:16
 1e03f92:    12 66             	r2 = b[r3 + 1] (u)			  ## power_wakeup.c:287:15
 1e03f94:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:287:15
 1e03f96:    13 24             	if (r2 == 0) goto 38 <.GJTIE394_2_2_+0x182 : 1e03fbe >			  ## power_wakeup.c:287:9
 1e03f98:    07 22             	if (r1 == 0) goto 14 <.GJTIE394_2_2_+0x16C : 1e03fa8 >
 1e03f9a:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:289:22
 1e03f9c:    51 b0             	r1 |= r0			  ## power_wakeup.c:289:22
 1e03f9e:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:289:22
 1e03fa0:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:290:22
 1e03fa2:    e3 fd 00 01       	r0 = r1 & ~r0			  ## power_wakeup.c:290:22
 1e03fa6:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:290:22
 1e03fa8:    32 68             	r2 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e03faa:    10 70             	r0 = 1			  ## power_wakeup.c:292:26
 1e03fac:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:292:26
 1e03fb0:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e03fb2:    52 b2             	r2 |= r1			  ## power_wakeup.c:100:1
 1e03fb4:    3a 68             	b[r4 + 3] = r2			  ## power_wakeup.c:100:1
 1e03fb6:    22 68             	r2 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e03fb8:    23 04             	r3 = r0.l (u)			  ## power_wakeup.c:100:1
 1e03fba:    53 b4             	r3 |= r2			  ## power_wakeup.c:100:1
 1e03fbc:    15 18             	goto 42 <.GJTIE394_2_2_+0x1AC : 1e03fe8 >			  ## power_wakeup.c:100:1
 1e03fbe:    07 22             	if (r1 == 0) goto 14 <.GJTIE394_2_2_+0x192 : 1e03fce >
 1e03fc0:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:295:22
 1e03fc2:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:295:22
 1e03fc6:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:295:22
 1e03fc8:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:296:22
 1e03fca:    50 b2             	r0 |= r1			  ## power_wakeup.c:296:22
 1e03fcc:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:296:22
 1e03fce:    32 68             	r2 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e03fd0:    10 70             	r0 = 1			  ## power_wakeup.c:298:27
 1e03fd2:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:298:27
 1e03fd6:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e03fd8:    e3 fd 10 22       	r2 = r2 & ~r1			  ## power_wakeup.c:100:1
 1e03fdc:    3a 68             	b[r4 + 3] = r2			  ## power_wakeup.c:100:1
 1e03fde:    22 68             	r2 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e03fe0:    23 04             	r3 = r0.l (u)			  ## power_wakeup.c:100:1
 1e03fe2:    13 fd ff 39       	r3 = r3 ^ 255			  ## power_wakeup.c:100:1
 1e03fe6:    53 b5             	r3 &= r2			  ## power_wakeup.c:100:1
 1e03fe8:    2b 68             	b[r4 + 2] = r3			  ## power_wakeup.c:100:1
 1e03fea:    42 fc 70 00       	r2 = r4 + 112			  ## power_wakeup.c:302:5
 1e03fee:    16 fa 00 82       	b[r8+r2] = r6			  ## power_wakeup.c:302:21
 1e03ff2:    02 d2             	r2 = r0 >> 8			  ## power_wakeup.c:101:1
 1e03ff4:    9a 68             	b[r4 + 9] = r2			  ## power_wakeup.c:101:1
 1e03ff6:    90 18             	goto 288 <.GJTIE394_2_2_+0x2DC : 1e04118 >			  ## power_wakeup.c:101:1
 1e03ff8:    28 70             	r8 = 2
 1e03ffa:    05 18             	goto 10 <.GJTIE394_2_2_+0x1CA : 1e04006 >
 1e03ffc:    08 70             	r8 = 0
 1e03ffe:    03 18             	goto 6 <.GJTIE394_2_2_+0x1CA : 1e04006 >
 1e04000:    8f f3 09 fa       	call 2094098 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e04004:    31 66             	r1 = b[r3 + 3] (u)
 1e04006:    40 fc 30 00       	r0 = r4 + 48			  ## power_wakeup.c:466:5
 1e0400a:    11 fa 00 80       	b[r8+r0] = r1			  ## power_wakeup.c:466:21
 1e0400e:    01 69             	r1 = b[r4 + 16] (u)			  ## power_wakeup.c:497:17
 1e04010:    10 70             	r0 = 1			  ## power_wakeup.c:497:17
 1e04012:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:497:20
 1e04016:    51 b0             	r1 |= r0			  ## power_wakeup.c:497:17
 1e04018:    09 69             	b[r4 + 16] = r1			  ## power_wakeup.c:497:17
 1e0401a:    71 69             	r1 = b[r4 + 23] (u)			  ## power_wakeup.c:499:21
 1e0401c:    51 b0             	r1 |= r0			  ## power_wakeup.c:499:21
 1e0401e:    79 69             	b[r4 + 23] = r1			  ## power_wakeup.c:499:21
 1e04020:    81 69             	r1 = b[r4 + 24] (u)			  ## power_wakeup.c:500:21
 1e04022:    51 b0             	r1 |= r0			  ## power_wakeup.c:500:21
 1e04024:    89 69             	b[r4 + 24] = r1			  ## power_wakeup.c:500:21
 1e04026:    11 66             	r1 = b[r3 + 1] (u)			  ## power_wakeup.c:502:15
 1e04028:    11 e0 08 00       	if (r1 == 1) goto 16 <.GJTIE394_2_2_+0x200 : 1e0403c >			  ## power_wakeup.c:502:9
 1e0402c:    21 e0 0e 10       	if (r1 != 2) goto 28 <.GJTIE394_2_2_+0x210 : 1e0404c >
 1e04030:    11 69             	r1 = b[r4 + 17] (u)			  ## power_wakeup.c:503:23
 1e04032:    51 b0             	r1 |= r0			  ## power_wakeup.c:503:23
 1e04034:    19 69             	b[r4 + 17] = r1			  ## power_wakeup.c:503:23
 1e04036:    22 69             	r2 = b[r4 + 18] (u)			  ## power_wakeup.c:504:23
 1e04038:    21 99             	r1 = r4 + 18			  ## power_wakeup.c:504:23
 1e0403a:    0e 18             	goto 28 <.GJTIE394_2_2_+0x21C : 1e04058 >			  ## power_wakeup.c:504:23
 1e0403c:    21 69             	r1 = b[r4 + 18] (u)			  ## power_wakeup.c:507:23
 1e0403e:    51 b0             	r1 |= r0			  ## power_wakeup.c:507:23
 1e04040:    29 69             	b[r4 + 18] = r1			  ## power_wakeup.c:507:23
 1e04042:    12 69             	r2 = b[r4 + 17] (u)			  ## power_wakeup.c:508:23
 1e04044:    11 99             	r1 = r4 + 17			  ## power_wakeup.c:508:23
 1e04046:    e3 fd 00 02       	r0 = r2 & ~r0			  ## power_wakeup.c:508:23
 1e0404a:    07 18             	goto 14 <.GJTIE394_2_2_+0x21E : 1e0405a >			  ## power_wakeup.c:508:23
 1e0404c:    21 69             	r1 = b[r4 + 18] (u)			  ## power_wakeup.c:511:23
 1e0404e:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:511:23
 1e04052:    29 69             	b[r4 + 18] = r1			  ## power_wakeup.c:511:23
 1e04054:    12 69             	r2 = b[r4 + 17] (u)			  ## power_wakeup.c:512:23
 1e04056:    11 99             	r1 = r4 + 17			  ## power_wakeup.c:512:23
 1e04058:    50 b4             	r0 |= r2
 1e0405a:    08 62             	b[r1 + 0] = r0
 1e0405c:    58 01             	{pc, r8-r4} = [sp++]			  ## power_wakeup.c:569:1
 1e0405e:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0x22E : 1e0406a >
 1e04060:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:359:17
 1e04062:    70 b2             	r0 &= 4294967279			  ## power_wakeup.c:359:17
 1e04064:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:359:17
 1e04066:    00 f4 40 19       	[r1 + 0] |= 64			  ## power_wakeup.c:360:17
 1e0406a:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e0406c:    11 70             	r1 = 1			  ## power_wakeup.c:362:31
 1e0406e:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:362:31
 1e04072:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e04074:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e04078:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e0407a:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e0407c:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e0407e:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e04082:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e04084:    a1 71             	r1 = 26			  ## power_wakeup.c:100:1
 1e04086:    3e 18             	goto 124 <.GJTIE394_2_2_+0x2C8 : 1e04104 >			  ## power_wakeup.c:100:1
 1e04088:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0x258 : 1e04094 >
 1e0408a:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:379:17
 1e0408c:    f0 b2             	r0 &= 4294967263			  ## power_wakeup.c:379:17
 1e0408e:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:379:17
 1e04090:    00 f4 80 19       	[r1 + 0] |= 128			  ## power_wakeup.c:380:17
 1e04094:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e04096:    11 70             	r1 = 1			  ## power_wakeup.c:382:31
 1e04098:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:382:31
 1e0409c:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e0409e:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e040a2:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e040a4:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e040a6:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e040a8:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e040ac:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e040ae:    b1 71             	r1 = 27			  ## power_wakeup.c:100:1
 1e040b0:    29 18             	goto 82 <.GJTIE394_2_2_+0x2C8 : 1e04104 >			  ## power_wakeup.c:100:1
 1e040b2:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0x282 : 1e040be >
 1e040b4:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:399:17
 1e040b6:    70 b2             	r0 &= 4294967279			  ## power_wakeup.c:399:17
 1e040b8:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:399:17
 1e040ba:    09 f4 40 19       	[r1 + 36] |= 64			  ## power_wakeup.c:400:17
 1e040be:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e040c0:    11 70             	r1 = 1			  ## power_wakeup.c:402:31
 1e040c2:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:402:31
 1e040c6:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e040c8:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e040cc:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e040ce:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e040d0:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e040d2:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e040d6:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e040d8:    c1 71             	r1 = 28			  ## power_wakeup.c:100:1
 1e040da:    14 18             	goto 40 <.GJTIE394_2_2_+0x2C8 : 1e04104 >			  ## power_wakeup.c:100:1
 1e040dc:    05 20             	if (r0 == 0) goto 10 <.GJTIE394_2_2_+0x2AC : 1e040e8 >
 1e040de:    90 42             	r0 = [r1 + 36]			  ## power_wakeup.c:419:17
 1e040e0:    f0 b2             	r0 &= 4294967263			  ## power_wakeup.c:419:17
 1e040e2:    98 42             	[r1 + 36] = r0			  ## power_wakeup.c:419:17
 1e040e4:    09 f4 80 19       	[r1 + 36] |= 128			  ## power_wakeup.c:420:17
 1e040e8:    30 68             	r0 = b[r4 + 3] (u)			  ## power_wakeup.c:100:1
 1e040ea:    11 70             	r1 = 1			  ## power_wakeup.c:422:31
 1e040ec:    f8 fd 80 11       	r1 = r1 << r8			  ## power_wakeup.c:422:31
 1e040f0:    0a d2             	r2 = r1 >> 8			  ## power_wakeup.c:100:1
 1e040f2:    e3 fd 20 00       	r0 = r0 & ~r2			  ## power_wakeup.c:100:1
 1e040f6:    38 68             	b[r4 + 3] = r0			  ## power_wakeup.c:100:1
 1e040f8:    20 68             	r0 = b[r4 + 2] (u)			  ## power_wakeup.c:100:1
 1e040fa:    61 04             	r1 = r1.l (u)			  ## power_wakeup.c:100:1
 1e040fc:    11 fd ff 19       	r1 = r1 ^ 255			  ## power_wakeup.c:100:1
 1e04100:    50 b3             	r0 &= r1			  ## power_wakeup.c:100:1
 1e04102:    d1 71             	r1 = 29
 1e04104:    28 68             	b[r4 + 2] = r0			  ## power_wakeup.c:100:1
 1e04106:    40 fc 70 00       	r0 = r4 + 112			  ## power_wakeup.c:435:5
 1e0410a:    11 fa 00 80       	b[r8+r0] = r1			  ## power_wakeup.c:435:21
 1e0410e:    10 70             	r0 = 1			  ## power_wakeup.c:437:23
 1e04110:    f8 fd 80 00       	r0 = r0 << r8			  ## power_wakeup.c:437:23
 1e04114:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:99:1
 1e04116:    99 68             	b[r4 + 9] = r1			  ## power_wakeup.c:101:1
 1e04118:    88 68             	b[r4 + 8] = r0
 1e0411a:    12 68             	r2 = b[r4 + 1] (u)
 1e0411c:    51 b4             	r1 |= r2
 1e0411e:    19 68             	b[r4 + 1] = r1
 1e04120:    01 68             	r1 = b[r4 + 0] (u)
 1e04122:    50 b2             	r0 |= r1
 1e04124:    08 68             	b[r4 + 0] = r0
 1e04126:    58 01             	{pc, r8-r4} = [sp++]			  ## power_wakeup.c:569:1


power_wakeup_init:
 1e04128:    79 01             	[--sp] = {rets, r9-r4}			  ## power_wakeup.c:828:0
 1e0412a:    06 70             	r6 = 0			  ## power_wakeup.c:828:0
 1e0412c:    c3 ff 0c 50 1e 00 	r3 = 1986572 <uECC_vli_cmp_unsafe+0xDE010 : 1e500c >			  ## power_wakeup.c:828:0
 1e04132:    0e 46             	[r3 + 0] = r6			  ## power_wakeup.c:774:19
 1e04134:    5e 46             	[r3 + 20] = r6			  ## power_wakeup.c:775:20
 1e04136:    39 fc 00 01       	r9 = r3 + 256			  ## power_wakeup.c:775:20
 1e0413a:    16 f6 00 90       	[r9 + 0] = r6			  ## power_wakeup.c:778:19
 1e0413e:    60 70             	r0 = 6			  ## power_wakeup.c:779:20
 1e04140:    10 f6 14 90       	[r9 + 20] = r0			  ## power_wakeup.c:779:20
 1e04144:    31 fc 00 03       	r1 = r3 + 768			  ## power_wakeup.c:779:20
 1e04148:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:782:19
 1e0414a:    5e 42             	[r1 + 20] = r6			  ## power_wakeup.c:783:20
 1e0414c:    10 fc f4 c4       	r0 = r1 + -15116			  ## power_wakeup.c:787:14
 1e04150:    0e 40             	[r0 + 0] = r6			  ## power_wakeup.c:787:14
 1e04152:    00 fc 00 3c       	r0 = r0 + 15360			  ## power_wakeup.c:787:14
 1e04156:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:788:5
 1e04158:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:788:5
 1e0415a:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:788:5
 1e0415c:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:789:5
 1e0415e:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:789:5
 1e04160:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:789:5
 1e04162:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:790:5
 1e04164:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:790:5
 1e04166:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:790:5
 1e04168:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:791:5
 1e0416a:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:791:5
 1e0416c:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:791:5
 1e0416e:    16 f6 f4 16       	[r1 + 1780] = r6			  ## power_wakeup.c:794:15
 1e04172:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:795:5
 1e04174:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:795:5
 1e04176:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:795:5
 1e04178:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:796:5
 1e0417a:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:796:5
 1e0417c:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:796:5
 1e0417e:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:797:5
 1e04180:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:797:5
 1e04182:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:797:5
 1e04184:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:798:5
 1e04186:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:798:5
 1e04188:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:798:5
 1e0418a:    c5 ff 48 18 1a 00 	r5 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## power_wakeup.c:798:5
 1e04190:    04 6a             	r4 = b[r5 + 0] (u)			  ## power_wakeup.c:800:9
 1e04192:    58 fc 60 00       	r8 = r5 + 96			  ## power_wakeup.c:800:9
 1e04196:    00 f3 54 40       	if ((r4 & 1) == 0) goto 168 <.GJTIE395_0_0_+0x36 : 1e04242 >			  ## power_wakeup.c:800:9
 1e0419a:    04 f9 18 80       	r4 = b[r8 + 24] (u)			  ## power_wakeup.c:801:23
 1e0419e:    47 fc ff ff       	r7 = r4 + -1			  ## power_wakeup.c:802:29
 1e041a2:    c2 05             	r2 = r7.b0 (u)			  ## power_wakeup.c:802:29
 1e041a4:    92 e0 09 80       	if (r2 > 9) goto 18 <power_wakeup_init+0x92 : 1e041ba >			  ## power_wakeup.c:802:29
 1e041a8:    00 46             	r0 = [r3 + 0]			  ## power_wakeup.c:803:27
 1e041aa:    11 70             	r1 = 1			  ## power_wakeup.c:803:30
 1e041ac:    c1 0d             	r1 <<= r7			  ## power_wakeup.c:803:30
 1e041ae:    50 b2             	r0 |= r1			  ## power_wakeup.c:803:27
 1e041b0:    08 46             	[r3 + 0] = r0			  ## power_wakeup.c:803:27
 1e041b2:    52 46             	r2 = [r3 + 20]			  ## power_wakeup.c:804:28
 1e041b4:    40 97             	r0 = r3 + 20			  ## power_wakeup.c:804:28
 1e041b6:    51 b4             	r1 |= r2			  ## power_wakeup.c:804:28
 1e041b8:    43 18             	goto 134 <.GJTIE395_0_0_+0x34 : 1e04240 >			  ## power_wakeup.c:804:28
 1e041ba:    43 fc f5 ff       	r3 = r4 + -11			  ## power_wakeup.c:805:37
 1e041be:    c2 04             	r2 = r3.b0 (u)			  ## power_wakeup.c:805:37
 1e041c0:    92 e0 0d 80       	if (r2 > 9) goto 26 <power_wakeup_init+0xB6 : 1e041de >			  ## power_wakeup.c:805:37
 1e041c4:    00 f6 00 90       	r0 = [r9 + 0]			  ## power_wakeup.c:806:27
 1e041c8:    11 70             	r1 = 1			  ## power_wakeup.c:806:30
 1e041ca:    c1 0c             	r1 <<= r3			  ## power_wakeup.c:806:30
 1e041cc:    50 b2             	r0 |= r1			  ## power_wakeup.c:806:27
 1e041ce:    10 f6 00 90       	[r9 + 0] = r0			  ## power_wakeup.c:806:27
 1e041d2:    02 f6 14 90       	r2 = [r9 + 20]			  ## power_wakeup.c:807:28
 1e041d6:    90 fc 14 00       	r0 = r9 + 20			  ## power_wakeup.c:807:28
 1e041da:    51 b4             	r1 |= r2			  ## power_wakeup.c:807:28
 1e041dc:    31 18             	goto 98 <.GJTIE395_0_0_+0x34 : 1e04240 >			  ## power_wakeup.c:807:28
 1e041de:    42 fc eb ff       	r2 = r4 + -21			  ## power_wakeup.c:808:37
 1e041e2:    83 04             	r3 = r2.b0 (u)			  ## power_wakeup.c:808:37
 1e041e4:    43 e0 0b 80       	if (r3 > 4) goto 22 <power_wakeup_init+0xD6 : 1e041fe >			  ## power_wakeup.c:808:37
 1e041e8:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:809:27
 1e041ea:    13 70             	r3 = 1			  ## power_wakeup.c:809:30
 1e041ec:    f8 fd 20 23       	r2 = r3 << r2			  ## power_wakeup.c:809:30
 1e041f0:    50 b4             	r0 |= r2			  ## power_wakeup.c:809:27
 1e041f2:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:809:27
 1e041f4:    51 42             	r1 = [r1 + 20]			  ## power_wakeup.c:810:28
 1e041f6:    90 fc 14 02       	r0 = r9 + 532			  ## power_wakeup.c:810:28
 1e041fa:    51 b4             	r1 |= r2			  ## power_wakeup.c:810:28
 1e041fc:    21 18             	goto 66 <.GJTIE395_0_0_+0x34 : 1e04240 >			  ## power_wakeup.c:810:28
 1e041fe:    41 fc e6 ff       	r1 = r4 + -26			  ## power_wakeup.c:811:20
 1e04202:    31 e0 1e 80       	if (r1 > 3) goto 60 <.GJTIE395_0_0_+0x36 : 1e04242 >			  ## power_wakeup.c:811:20
 1e04206:    a1 00             	tbb [r1]


.GJTIS395_0_0_:
 1e04208:    02     < 2 : 0x2 >
 1e04209:    07     < 7 : 0x7 >
 1e0420a:    0c     < 12 : 0xC >
 1e0420b:    14     < 20 : 0x14 >
 1e0420c:    00 f4 01 0a       	[r0 + 0] |= 256			  ## power_wakeup.c:812:13
 1e04210:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:813:13
 1e04212:    11 b5             	r1 |= 1024			  ## power_wakeup.c:813:13
 1e04214:    15 18             	goto 42 <.GJTIE395_0_0_+0x34 : 1e04240 >			  ## power_wakeup.c:813:13
 1e04216:    00 f4 02 0a       	[r0 + 0] |= 512			  ## power_wakeup.c:815:13
 1e0421a:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:816:13
 1e0421c:    91 b5             	r1 |= 2048			  ## power_wakeup.c:816:13
 1e0421e:    10 18             	goto 32 <.GJTIE395_0_0_+0x34 : 1e04240 >			  ## power_wakeup.c:816:13
 1e04220:    09 f4 01 0a       	[r0 + 36] |= 256			  ## power_wakeup.c:818:13
 1e04224:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:819:13
 1e04226:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:819:13
 1e0422a:    01 fd 04 0a       	r1 = r0 | 1024			  ## power_wakeup.c:819:13
 1e0422e:    07 18             	goto 14 <.GJTIE395_0_0_+0x32 : 1e0423e >			  ## power_wakeup.c:819:13
 1e04230:    09 f4 02 0a       	[r0 + 36] |= 512			  ## power_wakeup.c:821:13
 1e04234:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:822:13
 1e04236:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:822:13
 1e0423a:    01 fd 08 0a       	r1 = r0 | 2048			  ## power_wakeup.c:822:13
 1e0423e:    20 08             	r0 = r2
 1e04240:    09 40             	[r0 + 0] = r1
 1e04242:    c0 ff f4 20 00 00 	r0 = 8436 <power_wakeup_param : 20f4 >			  ## power_wakeup.c:833:24
 1e04248:    c7 ff 38 eb e0 01 	r7 = 31517496 <wk_param : 1e0eb38 >			  ## power_wakeup.c:833:24
 1e0424e:    0f 40             	[r0 + 0] = r7			  ## power_wakeup.c:833:24
 1e04250:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## power_wakeup.c:835:16
 1e04254:    e0 6a             	r0 = b[r5 + 14] (u)			  ## power_wakeup.c:837:16
 1e04256:    f0 6a             	r0 = b[r5 + 15] (u)			  ## power_wakeup.c:837:32
 1e04258:    d0 6b             	r0 = b[r5 + 29] (u)			  ## power_wakeup.c:839:19
 1e0425a:    e0 6b             	r0 = b[r5 + 30] (u)			  ## power_wakeup.c:841:19
 1e0425c:    50 fc 60 fc       	r0 = r5 + -928			  ## power_wakeup.c:843:19
 1e04260:    00 60             	r0 = b[r0 + 0] (u)			  ## power_wakeup.c:843:19
 1e04262:    98 f3 9b 15       	call 3156790 <local_irq_disable : 106d9c >			  ## power_wakeup.c:638:5
 1e04266:    08 00             	csync			  ## power_wakeup.c:638:5
 1e04268:    04 70             	r4 = 0
 1e0426a:    81 f6 00 67       	r1 = [r6+r7]			  ## power_wakeup.c:641:16
 1e0426e:    02 22             	if (r1 == 0) goto 4 <.GJTIE395_0_0_+0x68 : 1e04274 >
 1e04270:    00 05             	r0 = r4.b0 (u)			  ## power_wakeup.c:643:13
 1e04272:    80 15             	call -1280 <__hw_power_set_wakeup_IO : 1e03d74 >			  ## power_wakeup.c:643:13
 1e04274:    46 80             	r6 += 4			  ## power_wakeup.c:640:23
 1e04276:    14 80             	r4 += 1			  ## power_wakeup.c:640:23
 1e04278:    06 e3 f7 1f       	if (r6 != 48) goto -18 <.GJTIE395_0_0_+0x5E : 1e0426a >			  ## power_wakeup.c:640:23
 1e0427c:    06 70             	r6 = 0
 1e0427e:    04 70             	r4 = 0
 1e04280:    c0 b9             	r0 = r4 + r7			  ## power_wakeup.c:648:16
 1e04282:    c1 40             	r1 = [r0 + 48]			  ## power_wakeup.c:648:16
 1e04284:    02 22             	if (r1 == 0) goto 4 <.GJTIE395_0_0_+0x7E : 1e0428a >
 1e04286:    80 05             	r0 = r6.b0 (u)			  ## power_wakeup.c:650:13
 1e04288:    75 15             	call -1302 <__hw_power_set_wakeup_IO : 1e03d74 >			  ## power_wakeup.c:650:13
 1e0428a:    44 80             	r4 += 4			  ## power_wakeup.c:647:22
 1e0428c:    16 80             	r6 += 1			  ## power_wakeup.c:647:22
 1e0428e:    c4 e0 f7 1f       	if (r4 != 12) goto -18 <.GJTIE395_0_0_+0x74 : 1e04280 >			  ## power_wakeup.c:647:22
 1e04292:    f0 7f             	r0 = 255			  ## power_wakeup.c:655:19
 1e04294:    08 6b             	b[r5 + 16] = r0			  ## power_wakeup.c:655:19
 1e04296:    18 6b             	b[r5 + 17] = r0			  ## power_wakeup.c:656:19
 1e04298:    f8 6b             	b[r5 + 31] = r0			  ## power_wakeup.c:657:21
 1e0429a:    54 fc 20 00       	r4 = r5 + 32			  ## power_wakeup.c:657:21
 1e0429e:    08 68             	b[r4 + 0] = r0			  ## power_wakeup.c:658:21
 1e042a0:    98 f3 7a 15       	call 3156724 <local_irq_enable : 106d98 >			  ## power_wakeup.c:660:5
 1e042a4:    80 6a             	r0 = b[r5 + 8] (u)			  ## power_wakeup.c:133:45
 1e042a6:    90 6a             	r0 = b[r5 + 9] (u)			  ## power_wakeup.c:134:45
 1e042a8:    a0 6a             	r0 = b[r5 + 10] (u)			  ## power_wakeup.c:135:45
 1e042aa:    b0 6a             	r0 = b[r5 + 11] (u)			  ## power_wakeup.c:136:45
 1e042ac:    c0 6a             	r0 = b[r5 + 12] (u)			  ## power_wakeup.c:137:45
 1e042ae:    d0 6a             	r0 = b[r5 + 13] (u)			  ## power_wakeup.c:138:45
 1e042b0:    e0 6a             	r0 = b[r5 + 14] (u)			  ## power_wakeup.c:139:45
 1e042b2:    f0 6a             	r0 = b[r5 + 15] (u)			  ## power_wakeup.c:140:45
 1e042b4:    80 6b             	r0 = b[r5 + 24] (u)			  ## power_wakeup.c:142:45
 1e042b6:    90 6b             	r0 = b[r5 + 25] (u)			  ## power_wakeup.c:143:45
 1e042b8:    a0 6b             	r0 = b[r5 + 26] (u)			  ## power_wakeup.c:144:45
 1e042ba:    b0 6b             	r0 = b[r5 + 27] (u)			  ## power_wakeup.c:145:45
 1e042bc:    d0 6b             	r0 = b[r5 + 29] (u)			  ## power_wakeup.c:146:45
 1e042be:    e0 6b             	r0 = b[r5 + 30] (u)			  ## power_wakeup.c:147:45
 1e042c0:    80 69             	r0 = b[r4 + 24] (u)			  ## power_wakeup.c:148:45
 1e042c2:    90 69             	r0 = b[r4 + 25] (u)			  ## power_wakeup.c:149:45
 1e042c4:    a0 69             	r0 = b[r4 + 26] (u)			  ## power_wakeup.c:150:45
 1e042c6:    c0 6b             	r0 = b[r5 + 28] (u)			  ## power_wakeup.c:152:45
 1e042c8:    00 f9 18 80       	r0 = b[r8 + 24] (u)			  ## power_wakeup.c:157:42
 1e042cc:    00 f9 19 80       	r0 = b[r8 + 25] (u)			  ## power_wakeup.c:158:42
 1e042d0:    00 f9 1a 80       	r0 = b[r8 + 26] (u)			  ## power_wakeup.c:159:42
 1e042d4:    00 f9 1b 80       	r0 = b[r8 + 27] (u)			  ## power_wakeup.c:160:42
 1e042d8:    00 f9 1c 80       	r0 = b[r8 + 28] (u)			  ## power_wakeup.c:161:42
 1e042dc:    00 f9 1d 80       	r0 = b[r8 + 29] (u)			  ## power_wakeup.c:162:42
 1e042e0:    00 f9 1e 80       	r0 = b[r8 + 30] (u)			  ## power_wakeup.c:163:42
 1e042e4:    00 f9 1f 80       	r0 = b[r8 + 31] (u)			  ## power_wakeup.c:164:42
 1e042e8:    40 fc 60 00       	r0 = r4 + 96			  ## power_wakeup.c:164:42
 1e042ec:    01 60             	r1 = b[r0 + 0] (u)			  ## power_wakeup.c:165:42
 1e042ee:    11 60             	r1 = b[r0 + 1] (u)			  ## power_wakeup.c:166:42
 1e042f0:    21 60             	r1 = b[r0 + 2] (u)			  ## power_wakeup.c:167:42
 1e042f2:    31 60             	r1 = b[r0 + 3] (u)			  ## power_wakeup.c:168:42
 1e042f4:    01 fc c0 ff       	r1 = r0 + -64			  ## power_wakeup.c:168:42
 1e042f8:    02 62             	r2 = b[r1 + 0] (u)			  ## power_wakeup.c:170:41
 1e042fa:    12 62             	r2 = b[r1 + 1] (u)			  ## power_wakeup.c:171:41
 1e042fc:    22 62             	r2 = b[r1 + 2] (u)			  ## power_wakeup.c:172:41
 1e042fe:    02 fc 2e 07       	r2 = r0 + 1838			  ## power_wakeup.c:172:41
 1e04302:    03 64             	r3 = b[r2 + 0] (u)			  ## power_wakeup.c:666:5
 1e04304:    93 b2             	r3 |= 32			  ## power_wakeup.c:666:5
 1e04306:    0b 64             	b[r2 + 0] = r3			  ## power_wakeup.c:666:5
 1e04308:    02 70             	r2 = 0			  ## power_wakeup.c:852:15
 1e0430a:    ca 63             	b[r1 + 28] = r2			  ## power_wakeup.c:852:15
 1e0430c:    8a 60             	b[r0 + 8] = r2			  ## power_wakeup.c:853:18
 1e0430e:    9a 60             	b[r0 + 9] = r2			  ## power_wakeup.c:854:18
 1e04310:    aa 60             	b[r0 + 10] = r2			  ## power_wakeup.c:855:18
 1e04312:    ba 60             	b[r0 + 11] = r2			  ## power_wakeup.c:856:18
 1e04314:    ca 60             	b[r0 + 12] = r2			  ## power_wakeup.c:857:18
 1e04316:    59 01             	{pc, r9-r4} = [sp++]			  ## power_wakeup.c:858:1


aport_edge_wkup_set_callback:
 1e04318:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:968:0
 1e0431e:    c1 ff 80 2d e0 01 	r1 = 31468928 <aport_wakeup_callback : 1e02d80 >			  ## power_wakeup.c:969:32
 1e04324:    11 f6 bc 00       	[r0 + 188] = r1			  ## power_wakeup.c:969:32
 1e04328:    20 00             	rts			  ## power_wakeup.c:970:1


port_edge_wkup_set_callback:
 1e0432a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## power_wakeup.c:963:0
 1e04330:    c1 ff de 2d e0 01 	r1 = 31469022 <port_wakeup_callback : 1e02dde >			  ## power_wakeup.c:964:31
 1e04336:    11 f6 b8 00       	[r0 + 184] = r1			  ## power_wakeup.c:964:31
 1e0433a:    20 00             	rts			  ## power_wakeup.c:965:1


adc_pmu_detect_en:
 1e0433c:    c0 ff 94 18 1a 00 	r0 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:112:0
 1e04342:    01 60             	r1 = b[r0 + 0] (u)			  ## p33.c:113:5
 1e04344:    11 b0             	r1 |= 1			  ## p33.c:113:5
 1e04346:    09 60             	b[r0 + 0] = r1			  ## p33.c:113:5
 1e04348:    10 70             	r0 = 1			  ## p33.c:114:5
 1e0434a:    ff f3 8f df       	goto -16610 <adc_pmu_ch_select : 1e0026c >			  ## p33.c:114:5


check_wvdd_pvdd_trim:
 1e0434e:    78 01             	[--sp] = {rets, r8-r4}			  ## pmu_calibrate.c:304:0
 1e04350:    c6 ff b0 25 00 00 	r6 = 9648 <adv_data : 25b0 >			  ## pmu_calibrate.c:304:0
 1e04356:    64 fc 40 01       	r4 = r6 + 320			  ## pmu_calibrate.c:305:5
 1e0435a:    f1 7f             	r1 = 255			  ## pmu_calibrate.c:305:5
 1e0435c:    42 78             	r2 = 132			  ## pmu_calibrate.c:305:5
 1e0435e:    40 08             	r0 = r4			  ## pmu_calibrate.c:305:5
 1e04360:    98 f3 c6 15       	call 3156876 <memset : 106ef0 >			  ## pmu_calibrate.c:305:5
 1e04364:    30 76             	r0 = 99			  ## pmu_calibrate.c:307:18
 1e04366:    42 78             	r2 = 132			  ## pmu_calibrate.c:307:18
 1e04368:    41 08             	r1 = r4			  ## pmu_calibrate.c:307:18
 1e0436a:    80 f3 71 46       	call 36066 <syscfg_read : 1e0d050 >			  ## pmu_calibrate.c:307:18
 1e0436e:    15 70             	r5 = 1
 1e04370:    10 e0 32 b0       	ifs (r0 < 1) goto 100 <check_wvdd_pvdd_trim+0x8A : 1e043d8 >
 1e04374:    61 fc c0 01       	r1 = r6 + 448
 1e04378:    12 62             	r2 = b[r1 + 1] (u)			  ## pmu_calibrate.c:314:26
 1e0437a:    00 ff ff 20 2c 00 	if (r2 == 255) goto 88 <check_wvdd_pvdd_trim+0x8A : 1e043d8 >			  ## pmu_calibrate.c:314:26
 1e04380:    33 62             	r3 = b[r1 + 3] (u)			  ## pmu_calibrate.c:314:62
 1e04382:    00 ff ff 30 28 00 	if (r3 == 255) goto 80 <check_wvdd_pvdd_trim+0x8A : 1e043d8 >			  ## pmu_calibrate.c:314:62
 1e04388:    00 62             	r0 = b[r1 + 0] (u)			  ## pmu_calibrate.c:314:102
 1e0438a:    00 ff ff 00 24 00 	if (r0 == 255) goto 72 <check_wvdd_pvdd_trim+0x8A : 1e043d8 >
 1e04390:    21 62             	r1 = b[r1 + 2] (u)			  ## pmu_calibrate.c:314:138
 1e04392:    00 ff ff 10 20 00 	if (r1 == 255) goto 64 <check_wvdd_pvdd_trim+0x8A : 1e043d8 >			  ## pmu_calibrate.c:314:138
 1e04398:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## power_hw.c:1473:12
 1e0439e:    07 f6 b4 50       	r7 = [r5 + 180]			  ## power_hw.c:1473:12
 1e043a2:    c8 ff 00 08 00 01 	r8 = 16779264 <uECC_vli_cmp_unsafe+0xEF9804 : 1000800 >			  ## pmu_calibrate.c:320:47
 1e043a8:    05 70             	r5 = 0			  ## pmu_calibrate.c:320:47
 1e043aa:    87 f0 15 00       	if ((r7 & r8) == 0) goto 42 <check_wvdd_pvdd_trim+0x8A : 1e043d8 >			  ## pmu_calibrate.c:320:47
 1e043ae:    17 96             	r7 = r3 + 1			  ## pmu_calibrate.c:322:45
 1e043b0:    e7 e0 05 80       	if (r7 > 14) goto 10 <check_wvdd_pvdd_trim+0x70 : 1e043be >
 1e043b4:    a2 b6             	r2 = r3 - r2			  ## pmu_calibrate.c:323:48
 1e043b6:    12 e0 02 c0       	ifs (r2 > 1) goto 4 <check_wvdd_pvdd_trim+0x70 : 1e043be >			  ## pmu_calibrate.c:323:48
 1e043ba:    17 f9 c3 61       	b[r6 + 451] = r7			  ## pmu_calibrate.c:324:47
 1e043be:    12 92             	r2 = r1 + 1			  ## pmu_calibrate.c:328:45
 1e043c0:    e2 e0 05 80       	if (r2 > 14) goto 10 <check_wvdd_pvdd_trim+0x80 : 1e043ce >			  ## pmu_calibrate.c:328:45
 1e043c4:    20 b2             	r0 = r1 - r0			  ## pmu_calibrate.c:329:48
 1e043c6:    10 e0 02 c0       	ifs (r0 > 1) goto 4 <check_wvdd_pvdd_trim+0x80 : 1e043ce >			  ## pmu_calibrate.c:329:48
 1e043ca:    12 f9 c2 61       	b[r6 + 450] = r2			  ## pmu_calibrate.c:330:47
 1e043ce:    30 76             	r0 = 99			  ## pmu_calibrate.c:334:22
 1e043d0:    42 78             	r2 = 132			  ## pmu_calibrate.c:334:22
 1e043d2:    41 08             	r1 = r4			  ## pmu_calibrate.c:334:22
 1e043d4:    80 f3 df 45       	call 35774 <syscfg_write : 1e0cf96 >			  ## pmu_calibrate.c:334:22
 1e043d8:    50 08             	r0 = r5			  ## pmu_calibrate.c:347:1
 1e043da:    58 01             	{pc, r8-r4} = [sp++]			  ## pmu_calibrate.c:347:1


adc_wait_pnd:
 1e043dc:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:349:0
 1e043e2:    01 40             	r1 = [r0 + 0]			  ## adc_api.c:350:22
 1e043e4:    51 04             	r1 = r1.b0 (s)			  ## adc_api.c:350:12
 1e043e6:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <adc_wait_pnd+0x6 : 1e043e2 >			  ## adc_api.c:350:5
 1e043ea:    11 40             	r1 = [r0 + 4]			  ## adc_api.c:351:27
 1e043ec:    00 00             	nop			  ## adc_api.c:352:5
 1e043ee:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:353:17
 1e043f2:    60 04             	r0 = r1.l (u)			  ## adc_api.c:354:5
 1e043f4:    20 00             	rts			  ## adc_api.c:354:5


get_vdd_voltage:
 1e043f6:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:410:0
 1e043f8:    04 08             	r4 = r0			  ## adc_api.c:410:0
 1e043fa:    d0 70             	r0 = 13			  ## adc_api.c:414:5
 1e043fc:    bf f3 4f df       	call -16738 <adc_sample : 1e0029e >			  ## adc_api.c:414:5
 1e04400:    05 70             	r5 = 0			  ## adc_api.c:414:5
 1e04402:    a2 70             	r2 = 10
 1e04404:    03 18             	goto 6 <get_vdd_voltage+0x16 : 1e0440c >
 1e04406:    ea 17             	call -44 <adc_wait_pnd : 1e043dc >			  ## adc_api.c:416:22
 1e04408:    05 09             	r5 += r0			  ## adc_api.c:416:19
 1e0440a:    f2 8f             	r2 += -1			  ## adc_api.c:415:5
 1e0440c:    fc 35             	if (r2 != 0) goto -8 <get_vdd_voltage+0x10 : 1e04406 >			  ## adc_api.c:415:5
 1e0440e:    40 08             	r0 = r4			  ## adc_api.c:419:5
 1e04410:    bf f3 45 df       	call -16758 <adc_sample : 1e0029e >			  ## adc_api.c:419:5
 1e04414:    02 70             	r2 = 0			  ## adc_api.c:419:5
 1e04416:    a3 70             	r3 = 10
 1e04418:    03 18             	goto 6 <get_vdd_voltage+0x2A : 1e04420 >
 1e0441a:    e0 17             	call -64 <adc_wait_pnd : 1e043dc >			  ## adc_api.c:421:23
 1e0441c:    02 09             	r2 += r0			  ## adc_api.c:421:20
 1e0441e:    f3 8f             	r3 += -1			  ## adc_api.c:420:5
 1e04420:    fc 37             	if (r3 != 0) goto -8 <get_vdd_voltage+0x24 : 1e0441a >
 1e04422:    a1 70             	r1 = 10			  ## adc_api.c:424:29
 1e04424:    c0 fe 10 05       	r0 = r5 / r1 (u)			  ## adc_api.c:424:29
 1e04428:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## adc_api.c:425:30
 1e0442c:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:427:12
 1e0442e:    ff f3 f0 df       	goto -16416 <adc_value_to_voltage : 1e00412 >			  ## adc_api.c:427:12


get_wvdd_trim_level:
 1e04432:    c0 ff b0 25 00 00 	r0 = 9648 <adv_data : 25b0 >			  ## pmu_calibrate.c:283:0
 1e04438:    00 f9 c3 01       	r0 = b[r0 + 451] (u)			  ## pmu_calibrate.c:284:5
 1e0443c:    20 00             	rts			  ## pmu_calibrate.c:284:5


get_pvdd_trim_level:
 1e0443e:    c0 ff b0 25 00 00 	r0 = 9648 <adv_data : 25b0 >			  ## pmu_calibrate.c:288:0
 1e04444:    00 f9 c2 01       	r0 = b[r0 + 450] (u)			  ## pmu_calibrate.c:289:5
 1e04448:    20 00             	rts			  ## pmu_calibrate.c:289:5


update_wvdd_pvdd_trim_level:
 1e0444a:    c3 ff f0 26 00 00 	r3 = 9968 <pmu_voltage : 26f0 >			  ## pmu_calibrate.c:293:0
 1e04450:    32 fc 80 00       	r2 = r3 + 128			  ## pmu_calibrate.c:295:28
 1e04454:    38 64             	b[r2 + 3] = r0			  ## pmu_calibrate.c:294:57
 1e04456:    18 64             	b[r2 + 1] = r0			  ## pmu_calibrate.c:294:28
 1e04458:    29 64             	b[r2 + 2] = r1			  ## pmu_calibrate.c:295:57
 1e0445a:    09 64             	b[r2 + 0] = r1			  ## pmu_calibrate.c:295:28
 1e0445c:    30 76             	r0 = 99			  ## pmu_calibrate.c:297:18
 1e0445e:    42 78             	r2 = 132			  ## pmu_calibrate.c:297:18
 1e04460:    31 08             	r1 = r3			  ## pmu_calibrate.c:297:18
 1e04462:    c0 f3 98 45       	goto 35632 <syscfg_write : 1e0cf96 >			  ## pmu_calibrate.c:297:18


adc_add_sample_ch:
 1e04466:    c1 ff 20 28 00 00 	r1 = 10272 <adc_queue : 2820 >			  ## adc_api.c:51:0
 1e0446c:    02 70             	r2 = 0			  ## adc_api.c:51:0
 1e0446e:    07 18             	goto 14 <adc_add_sample_ch+0x18 : 1e0447e >			  ## adc_api.c:51:0
 1e04470:    03 42             	r3 = [r1 + 0]			  ## adc_api.c:55:26
 1e04472:    03 f2 0d 00       	if (r3 == r0) goto 26 <adc_add_sample_ch+0x2A : 1e04490 >			  ## adc_api.c:55:26
 1e04476:    f3 ef 05 00       	if (r3 == -1) goto 10 <adc_add_sample_ch+0x1E : 1e04484 >
 1e0447a:    01 81             	r1 += 16			  ## adc_api.c:53:5
 1e0447c:    12 80             	r2 += 1			  ## adc_api.c:53:34
 1e0447e:    92 e0 f7 9f       	if (r2 <= 9) goto -18 <adc_add_sample_ch+0xA : 1e04470 >
 1e04482:    20 00             	rts
 1e04484:    08 42             	[r1 + 0] = r0			  ## adc_api.c:58:29
 1e04486:    10 70             	r0 = 1			  ## adc_api.c:59:32
 1e04488:    28 52             	h[r1 + 4] = r0			  ## adc_api.c:59:32
 1e0448a:    00 70             	r0 = 0			  ## adc_api.c:59:32
 1e0448c:    28 42             	[r1 + 8] = r0			  ## adc_api.c:60:34
 1e0448e:    38 42             	[r1 + 12] = r0			  ## adc_api.c:61:40
 1e04490:    20 00             	rts


adc_set_sample_freq:
 1e04492:    c1 ff 2c 28 00 00 	r1 = 10284 <adc_queue+0xC : 282c >			  ## adc_api.c:70:0
 1e04498:    02 70             	r2 = 0			  ## adc_api.c:70:0
 1e0449a:    06 18             	goto 12 <adc_set_sample_freq+0x16 : 1e044a8 >			  ## adc_api.c:70:0
 1e0449c:    03 f6 f4 1f       	r3 = [r1 + -12]			  ## adc_api.c:73:26
 1e044a0:    03 f2 05 00       	if (r3 == r0) goto 10 <adc_set_sample_freq+0x1C : 1e044ae >			  ## adc_api.c:73:26
 1e044a4:    01 81             	r1 += 16			  ## adc_api.c:72:5
 1e044a6:    12 80             	r2 += 1			  ## adc_api.c:72:34
 1e044a8:    92 e0 f8 9f       	if (r2 <= 9) goto -16 <adc_set_sample_freq+0xA : 1e0449c >
 1e044ac:    20 00             	rts
 1e044ae:    c0 f4 64 19       	[r1 + 0] = 100			  ## adc_api.c:74:40
 1e044b2:    c0 ff ac 08 00 00 	r0 = 2220 <jiffies : 8ac >			  ## adc_api.c:75:59
 1e044b8:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:75:59
 1e044ba:    40 86             	r0 += 100			  ## adc_api.c:75:57
 1e044bc:    10 f6 fc 1f       	[r1 + -4] = r0			  ## adc_api.c:75:34
 1e044c0:    20 00             	rts


board_init:
 1e044c2:    7a 01             	[--sp] = {rets, r10-r4}			  ## board_ac632n_demo.c:321:0
 1e044c4:    b4 0b             	sp += -152			  ## board_ac632n_demo.c:321:0
 1e044c6:    bf f3 21 fb       	call -2494 <power_init : 1e03b0c >			  ## board_ac632n_demo.c:788:5
 1e044ca:    3d 14             	call -1926 <power_set_callback : 1e03d46 >			  ## board_ac632n_demo.c:795:5
 1e044cc:    4c 14             	call -1896 <power_keep_dacvdd_en : 1e03d66 >			  ## board_ac632n_demo.c:799:5
 1e044ce:    2c 16             	call -936 <power_wakeup_init : 1e04128 >			  ## board_ac632n_demo.c:801:5
 1e044d0:    23 17             	call -442 <aport_edge_wkup_set_callback : 1e04318 >			  ## board_ac632n_demo.c:803:5
 1e044d2:    2b 17             	call -426 <port_edge_wkup_set_callback : 1e0432a >			  ## board_ac632n_demo.c:804:5
 1e044d4:    33 17             	call -410 <adc_pmu_detect_en : 1e0433c >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:606:5
 1e044d6:    3b 17             	call -394 <check_wvdd_pvdd_trim : 1e0434e >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:610:15
 1e044d8:    09 08             	r9 = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:610:15
 1e044da:    c8 ff c0 0f 1a 00 	r8 = 1707968 <uECC_vli_cmp_unsafe+0x99FC4 : 1a0fc0 >
 1e044e0:    8a fc 83 08       	r10 = r8 + 2179
 1e044e4:    49 20             	if (r0 == 0) goto 146 <board_init+0xB6 : 1e04578 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:435:9
 1e044e6:    84 fc d1 08       	r4 = r8 + 2257
 1e044ea:    c0 68             	r0 = b[r4 + 12] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:436:9
 1e044ec:    20 fd f0 09       	r0 = r0 & 240			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:436:9
 1e044f0:    c8 68             	b[r4 + 12] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:436:9
 1e044f2:    c0 68             	r0 = b[r4 + 12] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:437:9
 1e044f4:    10 b2             	r0 |= 16			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:437:9
 1e044f6:    c8 68             	b[r4 + 12] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:437:9
 1e044f8:    00 68             	r0 = b[r4 + 0] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:438:9
 1e044fa:    90 b1             	r0 |= 8			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:438:9
 1e044fc:    08 68             	b[r4 + 0] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:438:9
 1e044fe:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:439:9
 1e04502:    8f f3 60 fe       	call 2096320 <delay : 41c6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:439:9
 1e04506:    05 70             	r5 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:439:9
 1e04508:    c6 ff 0d 00 0e 00 	r6 = 917517 <text_size+0xC74C1 : e000d >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:439:9
 1e0450e:    c0 68             	r0 = b[r4 + 12] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:441:13
 1e04510:    20 fd f0 09       	r0 = r0 & 240			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:441:13
 1e04514:    50 ba             	r0 |= r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:441:13
 1e04516:    c8 68             	b[r4 + 12] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:441:13
 1e04518:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:442:13
 1e0451c:    8f f3 53 fe       	call 2096294 <delay : 41c6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:442:13
 1e04520:    60 08             	r0 = r6			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:443:17
 1e04522:    69 17             	call -302 <get_vdd_voltage : 1e043f6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:443:17
 1e04524:    08 ff 8a 02 04 00 	if (r0 > 650) goto 8 <board_init+0x70 : 1e04532 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:443:17
 1e0452a:    15 80             	r5 += 1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:446:22
 1e0452c:    40 05             	r0 = r5.b0 (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:446:22
 1e0452e:    80 e0 ee 3f       	if (r0 < 8) goto -36 <board_init+0x4C : 1e0450e >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:446:22
 1e04532:    c0 68             	r0 = b[r4 + 12] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:448:9
 1e04534:    70 b2             	r0 &= 4294967279			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:448:9
 1e04536:    c8 68             	b[r4 + 12] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:448:9
 1e04538:    00 68             	r0 = b[r4 + 0] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:449:9
 1e0453a:    f0 b1             	r0 &= 4294967287			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:449:9
 1e0453c:    08 68             	b[r4 + 0] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:449:9
 1e0453e:    15 f9 00 80       	b[r8 + 0] = r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:458:15
 1e04542:    f4 70             	r4 = 15
 1e04544:    08 70             	r8 = 0
 1e04546:    07 7f             	r7 = 240
 1e04548:    c6 ff 0d 00 08 00 	r6 = 524301 <text_size+0x674C1 : 8000d >
 1e0454e:    00 70             	r0 = 0
 1e04550:    11 18             	goto 34 <board_init+0xB2 : 1e04574 >
 1e04552:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:468:13
 1e04556:    e0 fd 40 07       	r0 = r7 | r4			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:468:13
 1e0455a:    10 f9 01 a0       	b[r10 + 1] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:468:13
 1e0455e:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:469:13
 1e04562:    8f f3 30 fe       	call 2096224 <delay : 41c6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:469:13
 1e04566:    60 08             	r0 = r6			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:470:17
 1e04568:    46 17             	call -372 <get_vdd_voltage : 1e043f6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:470:17
 1e0456a:    03 ff 1a 04 0b 00 	if (r0 < 1050) goto 22 <board_init+0xC4 : 1e04586 >
 1e04570:    07 8f             	r7 += -16			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:467:9
 1e04572:    f4 8f             	r4 += -1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:467:24
 1e04574:    ee 3f             	if (r7 != 0) goto -36 <board_init+0x90 : 1e04552 >
 1e04576:    08 18             	goto 16 <board_init+0xC6 : 1e04588 >
 1e04578:    5c 17             	call -328 <get_wvdd_trim_level : 1e04432 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:453:20
 1e0457a:    05 08             	r5 = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:453:20
 1e0457c:    15 f9 00 80       	b[r8 + 0] = r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:458:15
 1e04580:    5e 17             	call -324 <get_pvdd_trim_level : 1e0443e >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:481:15
 1e04582:    01 08             	r1 = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:481:15
 1e04584:    07 18             	goto 14 <board_init+0xD2 : 1e04594 >
 1e04586:    48 08             	r8 = r4
 1e04588:    11 70             	r1 = 1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:475:15
 1e0458a:    03 ff e8 03 01 00 	if (r0 < 1000) goto 2 <board_init+0xD0 : 1e04592 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:475:15
 1e04590:    01 70             	r1 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:475:15
 1e04592:    81 09             	r1 += r8			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:475:13
 1e04594:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:484:5
 1e04598:    08 c1             	r0 = r1 << 4			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:484:5
 1e0459a:    50 b2             	r0 |= r1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:484:5
 1e0459c:    10 f9 01 a0       	b[r10 + 1] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:484:5
 1e045a0:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:485:5
 1e045a4:    8f f3 0f fe       	call 2096158 <delay : 41c6 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:485:5
 1e045a8:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:486:5
 1e045ac:    10 fc fa 00       	r0 = r1 + 250			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:486:5
 1e045b0:    00 fd 70 09       	r0 = r0 | 112			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:486:5
 1e045b4:    10 f9 00 a0       	b[r10 + 0] = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:486:5
 1e045b8:    09 e0 03 00       	if (r9 == 0) goto 6 <board_init+0x100 : 1e045c2 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:486:5
 1e045bc:    40 05             	r0 = r5.b0 (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:615:9
 1e045be:    41 04             	r1 = r1.b0 (u)			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:615:9
 1e045c0:    44 17             	call -376 <update_wvdd_pvdd_trim_level : 1e0444a >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:615:9
 1e045c2:    c0 ff 20 28 00 00 	r0 = 10272 <adc_queue : 2820 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:359:5
 1e045c8:    f1 7f             	r1 = 255			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:359:5
 1e045ca:    02 7b             	r2 = 176			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:359:5
 1e045cc:    98 f3 90 14       	call 3156256 <memset : 106ef0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:359:5
 1e045d0:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:359:5
 1e045d6:    85 fc 9c 01       	r5 = r8 + 412			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:360:5
 1e045da:    01 70             	r1 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:360:5
 1e045dc:    42 71             	r2 = 20			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:360:5
 1e045de:    06 70             	r6 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:360:5
 1e045e0:    50 08             	r0 = r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:360:5
 1e045e2:    98 f3 85 14       	call 3156234 <memset : 106ef0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:360:5
 1e045e6:    84 fc 88 01       	r4 = r8 + 392			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:361:5
 1e045ea:    01 70             	r1 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:361:5
 1e045ec:    42 71             	r2 = 20			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:361:5
 1e045ee:    40 08             	r0 = r4			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:361:5
 1e045f0:    98 f3 7e 14       	call 3156220 <memset : 106ef0 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:361:5
 1e045f4:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:363:17
 1e045fa:    0e 40             	[r0 + 0] = r6			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:363:17
 1e045fc:    c6 ff 0d 00 05 00 	r6 = 327693 <text_size+0x374C1 : 5000d >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:365:5
 1e04602:    60 08             	r0 = r6			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:365:5
 1e04604:    30 17             	call -416 <adc_add_sample_ch : 1e04466 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:365:5
 1e04606:    60 08             	r0 = r6			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:366:5
 1e04608:    44 17             	call -376 <adc_set_sample_freq : 1e04492 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:366:5
 1e0460a:    d0 70             	r0 = 13			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:368:5
 1e0460c:    2c 17             	call -424 <adc_add_sample_ch : 1e04466 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:368:5
 1e0460e:    d0 70             	r0 = 13			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:369:5
 1e04610:    40 17             	call -384 <adc_set_sample_freq : 1e04492 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:369:5
 1e04612:    d0 70             	r0 = 13			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:371:5
 1e04614:    bf f3 43 de       	call -17274 <adc_sample : 1e0029e >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:371:5
 1e04618:    93 70             	r3 = 9


BTSTACK_CODE_TOTAL_SIZE:
 1e0461a:    06 18             	goto 12 <BTSTACK_CODE_TOTAL_SIZE+0xE : 1e04628 >
 1e0461c:    df 16             	call -578 <adc_wait_pnd : 1e043dc >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:374:41
 1e0461e:    01 08             	r1 = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:374:41
 1e04620:    50 08             	r0 = r5			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:374:9
 1e04622:    bf f3 19 de       	call -17358 <adc_value_push : 1e00258 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:374:9
 1e04626:    f3 8f             	r3 += -1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:373:5
 1e04628:    f9 37             	if (r3 != 0) goto -14 <BTSTACK_CODE_TOTAL_SIZE+0x2 : 1e0461c >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:373:5
 1e0462a:    60 08             	r0 = r6			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:379:5
 1e0462c:    bf f3 37 de       	call -17298 <adc_sample : 1e0029e >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:379:5
 1e04630:    93 70             	r3 = 9
 1e04632:    06 18             	goto 12 <BTSTACK_CODE_TOTAL_SIZE+0x26 : 1e04640 >
 1e04634:    d3 16             	call -602 <adc_wait_pnd : 1e043dc >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:381:42
 1e04636:    01 08             	r1 = r0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:381:42
 1e04638:    40 08             	r0 = r4			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:381:9
 1e0463a:    bf f3 0d de       	call -17382 <adc_value_push : 1e00258 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:381:9
 1e0463e:    f3 8f             	r3 += -1			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:380:5
 1e04640:    f9 37             	if (r3 != 0) goto -14 <BTSTACK_CODE_TOTAL_SIZE+0x1A : 1e04634 >
 1e04642:    c2 ff 96 03 e0 01 	r2 = 31458198 <adc_isr : 1e00396 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:396:5
 1e04648:    70 71             	r0 = 23			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:396:5
 1e0464a:    01 70             	r1 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:396:5
 1e0464c:    80 f3 5f 3a       	call 29886 <request_irq : 1e0bb0e >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:396:5
 1e04650:    c1 ff da 02 e0 01 	r1 = 31458010 <adc_scan : 1e002da >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:398:5
 1e04656:    00 70             	r0 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:398:5
 1e04658:    a2 70             	r2 = 10			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:398:5
 1e0465a:    03 70             	r3 = 0			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:398:5
 1e0465c:    80 f3 31 36       	call 27746 <usr_timer_add : 1e0b2c2 >			  ## E:\LOZ_PROJECT_BLEMCU\L_亮而德_跳绳\sdk - test\cpu\bd19\adc_api.c:398:5
 1e04660:    84 a1             	r4 = sp + 24
 1e04662:    01 70             	r1 = 0			  ## user_cfg.c:174:8
 1e04664:    02 78             	r2 = 128			  ## user_cfg.c:174:8
 1e04666:    40 08             	r0 = r4			  ## user_cfg.c:174:8
 1e04668:    98 f3 42 14       	call 3156100 <memset : 106ef0 >			  ## user_cfg.c:174:8
 1e0466c:    01 70             	r1 = 0			  ## user_cfg.c:177:5
 1e0466e:    02 78             	r2 = 128			  ## user_cfg.c:177:5
 1e04670:    40 08             	r0 = r4			  ## user_cfg.c:177:5
 1e04672:    98 f3 3d 14       	call 3156090 <memset : 106ef0 >			  ## user_cfg.c:177:5
 1e04676:    50 76             	r0 = 101			  ## user_cfg.c:190:11
 1e04678:    02 72             	r2 = 32			  ## user_cfg.c:190:11
 1e0467a:    41 08             	r1 = r4			  ## user_cfg.c:190:11
 1e0467c:    80 f3 e8 44       	call 35280 <syscfg_read : 1e0d050 >			  ## user_cfg.c:190:11
 1e04680:    04 08             	r4 = r0			  ## user_cfg.c:190:11
 1e04682:    c6 ff c0 08 00 00 	r6 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >
 1e04688:    04 e0 16 b0       	ifs (r4 < 0) goto 44 <BTSTACK_CODE_TOTAL_SIZE+0x9E : 1e046b8 >
 1e0468c:    65 fc 4d 00       	r5 = r6 + 77			  ## user_cfg.c:194:9
 1e04690:    01 70             	r1 = 0			  ## user_cfg.c:194:9
 1e04692:    02 72             	r2 = 32			  ## user_cfg.c:194:9
 1e04694:    07 70             	r7 = 0			  ## user_cfg.c:194:9
 1e04696:    50 08             	r0 = r5			  ## user_cfg.c:194:9
 1e04698:    98 f3 2a 14       	call 3156052 <memset : 106ef0 >			  ## user_cfg.c:194:9
 1e0469c:    81 a1             	r1 = sp + 24			  ## user_cfg.c:194:9
 1e0469e:    04 e2 07 b0       	ifs (r4 < 32) goto 14 <BTSTACK_CODE_TOTAL_SIZE+0x96 : 1e046b0 >			  ## user_cfg.c:193:16
 1e046a2:    02 72             	r2 = 32			  ## user_cfg.c:195:9
 1e046a4:    50 08             	r0 = r5			  ## user_cfg.c:195:9
 1e046a6:    98 f3 1d 14       	call 3156026 <memcpy : 106ee4 >			  ## user_cfg.c:195:9
 1e046aa:    17 f9 6c 60       	b[r6 + 108] = r7			  ## user_cfg.c:196:45
 1e046ae:    04 18             	goto 8 <BTSTACK_CODE_TOTAL_SIZE+0x9E : 1e046b8 >			  ## user_cfg.c:196:45
 1e046b0:    50 08             	r0 = r5			  ## user_cfg.c:199:9
 1e046b2:    42 08             	r2 = r4			  ## user_cfg.c:199:9
 1e046b4:    98 f3 16 14       	call 3156012 <memcpy : 106ee4 >			  ## user_cfg.c:199:9
 1e046b8:    c4 ff b0 25 00 00 	r4 = 9648 <adv_data : 25b0 >
 1e046be:    41 fc 46 00       	r1 = r4 + 70			  ## user_cfg.c:206:11
 1e046c2:    00 fb 59 02       	r0 = 601 <BTCTLER_CONTROLLER_BSS_SIZE+0x99 : 259 >			  ## user_cfg.c:206:11
 1e046c6:    12 70             	r2 = 1			  ## user_cfg.c:206:11
 1e046c8:    80 f3 c2 44       	call 35204 <syscfg_read : 1e0d050 >			  ## user_cfg.c:206:11
 1e046cc:    00 e0 03 b0       	ifs (r0 < 0) goto 6 <BTSTACK_CODE_TOTAL_SIZE+0xBC : 1e046d6 >			  ## user_cfg.c:207:9
 1e046d0:    00 f9 46 40       	r0 = b[r4 + 70] (u)
 1e046d4:    03 18             	goto 6 <BTSTACK_CODE_TOTAL_SIZE+0xC2 : 1e046dc >
 1e046d6:    a0 70             	r0 = 10
 1e046d8:    10 f9 46 40       	b[r4 + 70] = r0			  ## user_cfg.c:209:26
 1e046dc:    80 f3 0a 58       	call 45076 <bt_max_pwr_set : 1e0f6f4 >			  ## user_cfg.c:211:5
 1e046e0:    e0 70             	r0 = 14			  ## user_cfg.c:215:26
 1e046e2:    41 fc 40 00       	r1 = r4 + 64			  ## user_cfg.c:215:26
 1e046e6:    08 62             	b[r1 + 0] = r0			  ## user_cfg.c:215:26
 1e046e8:    28 62             	b[r1 + 2] = r0			  ## user_cfg.c:216:26
 1e046ea:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## user_cfg.c:258:29
 1e046ee:    e8 52             	h[r1 + 28] = r0			  ## user_cfg.c:258:29
 1e046f0:    c6 f4 9b 15       	[r1 + 24] = 20316160			  ## user_cfg.c:272:27
 1e046f4:    00 70             	r0 = 0			  ## user_cfg.c:272:27
 1e046f6:    90 f5 10 00       	h[sp+16] = r0			  ## user_cfg.c:281:8
 1e046fa:    38 02             	[sp+12] = r0			  ## user_cfg.c:281:8
 1e046fc:    21 a1             	r1 = sp + 18			  ## user_cfg.c:281:8
 1e046fe:    60 76             	r0 = 102			  ## user_cfg.c:295:19
 1e04700:    62 70             	r2 = 6			  ## user_cfg.c:295:19
 1e04702:    80 f3 a5 44       	call 35146 <syscfg_read : 1e0d050 >			  ## user_cfg.c:295:19
 1e04706:    c4 ff 24 eb e0 01 	r4 = 31517476 <app_spple_ops+0x8 : 1e0eb24 >
 1e0470c:    60 e0 0c 10       	if (r0 != 6) goto 24 <BTSTACK_CODE_TOTAL_SIZE+0x10E : 1e04728 >
 1e04710:    20 a1             	r0 = sp + 18
 1e04712:    62 70             	r2 = 6			  ## user_cfg.c:296:32
 1e04714:    41 08             	r1 = r4			  ## user_cfg.c:296:32
 1e04716:    98 f3 e9 13       	call 3155922 <memcmp : 106eec >			  ## user_cfg.c:296:32
 1e0471a:    06 20             	if (r0 == 0) goto 12 <BTSTACK_CODE_TOTAL_SIZE+0x10E : 1e04728 >			  ## user_cfg.c:296:32
 1e0471c:    20 a1             	r0 = sp + 18
 1e0471e:    c1 a0             	r1 = sp + 12
 1e04720:    62 70             	r2 = 6			  ## user_cfg.c:296:68
 1e04722:    98 f3 e3 13       	call 3155910 <memcmp : 106eec >			  ## user_cfg.c:296:68
 1e04726:    0a 30             	if (r0 != 0) goto 20 <BTSTACK_CODE_TOTAL_SIZE+0x122 : 1e0473c >			  ## user_cfg.c:296:68
 1e04728:    25 a1             	r5 = sp + 18
 1e0472a:    61 70             	r1 = 6			  ## user_cfg.c:297:17
 1e0472c:    50 08             	r0 = r5			  ## user_cfg.c:297:17
 1e0472e:    80 f3 38 90       	call 73840 <get_random_number : 1e167a2 >			  ## user_cfg.c:297:17
 1e04732:    60 76             	r0 = 102			  ## user_cfg.c:298:17
 1e04734:    62 70             	r2 = 6			  ## user_cfg.c:298:17
 1e04736:    51 08             	r1 = r5			  ## user_cfg.c:298:17
 1e04738:    80 f3 2d 44       	call 34906 <syscfg_write : 1e0cf96 >			  ## user_cfg.c:298:17
 1e0473c:    85 fc 42 01       	r5 = r8 + 322			  ## user_cfg.c:302:5
 1e04740:    60 76             	r0 = 102			  ## user_cfg.c:302:5
 1e04742:    62 70             	r2 = 6			  ## user_cfg.c:302:5
 1e04744:    51 08             	r1 = r5			  ## user_cfg.c:302:5
 1e04746:    80 f3 83 44       	call 35078 <syscfg_read : 1e0d050 >			  ## user_cfg.c:302:5
 1e0474a:    62 70             	r2 = 6			  ## user_cfg.c:303:10
 1e0474c:    50 08             	r0 = r5			  ## user_cfg.c:303:10
 1e0474e:    41 08             	r1 = r4			  ## user_cfg.c:303:10
 1e04750:    98 f3 cc 13       	call 3155864 <memcmp : 106eec >			  ## user_cfg.c:303:10
 1e04754:    09 30             	if (r0 != 0) goto 18 <BTSTACK_CODE_TOTAL_SIZE+0x14E : 1e04768 >			  ## user_cfg.c:303:10
 1e04756:    61 70             	r1 = 6			  ## user_cfg.c:304:9
 1e04758:    50 08             	r0 = r5			  ## user_cfg.c:304:9
 1e0475a:    80 f3 22 90       	call 73796 <get_random_number : 1e167a2 >			  ## user_cfg.c:304:9
 1e0475e:    60 76             	r0 = 102			  ## user_cfg.c:305:9
 1e04760:    62 70             	r2 = 6			  ## user_cfg.c:305:9
 1e04762:    51 08             	r1 = r5			  ## user_cfg.c:305:9
 1e04764:    80 f3 17 44       	call 34862 <syscfg_write : 1e0cf96 >			  ## user_cfg.c:305:9
 1e04768:    60 fc 6d 00       	r0 = r6 + 109			  ## user_cfg.c:311:5
 1e0476c:    21 a1             	r1 = sp + 18			  ## user_cfg.c:311:5
 1e0476e:    62 70             	r2 = 6			  ## user_cfg.c:311:5
 1e04770:    98 f3 b8 13       	call 3155824 <memcpy : 106ee4 >			  ## user_cfg.c:311:5
 1e04774:    01 a0             	r1 = sp + 0			  ## user_cfg.c:311:5
 1e04776:    00 fb 5f 02       	r0 = 607 <BTCTLER_CONTROLLER_BSS_SIZE+0x9F : 25f >			  ## user_cfg.c:324:11
 1e0477a:    92 70             	r2 = 9			  ## user_cfg.c:324:11
 1e0477c:    80 f3 68 44       	call 35024 <syscfg_read : 1e0d050 >			  ## user_cfg.c:324:11
 1e04780:    10 e0 0f b0       	ifs (r0 < 1) goto 30 <BTSTACK_CODE_TOTAL_SIZE+0x188 : 1e047a2 >
 1e04784:    80 f5 00 00       	r0 = h[sp] (u)			  ## user_cfg.c:328:46
 1e04788:    88 5c             	h[r6 + 16] = r0			  ## user_cfg.c:328:36
 1e0478a:    80 f5 02 00       	r0 = h[sp+2] (u)			  ## user_cfg.c:329:46
 1e0478e:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## user_cfg.c:330:46
 1e04792:    82 f5 06 00       	r2 = h[sp+6] (u)			  ## user_cfg.c:331:46
 1e04796:    c3 f5 08 00       	r3 = b[sp+8] (u)			  ## user_cfg.c:332:46
 1e0479a:    98 5c             	h[r6 + 18] = r0			  ## user_cfg.c:329:36
 1e0479c:    a9 5c             	h[r6 + 20] = r1			  ## user_cfg.c:330:36
 1e0479e:    ba 5c             	h[r6 + 22] = r2			  ## user_cfg.c:331:36
 1e047a0:    8b 6d             	b[r6 + 24] = r3			  ## user_cfg.c:332:36
 1e047a2:    80 f3 a4 92       	call 75080 <lp_winsize_init : 1e16cee >			  ## user_cfg.c:335:5
 1e047a6:    80 f3 da 4b       	call 38836 <devices_init : 1e0df5e >			  ## board_ac632n_demo.c:326:5
 1e047aa:    c0 ff 8c eb e0 01 	r0 = 31517580 <adkey_data : 1e0eb8c >			  ## adkey.c:47:12
 1e047b0:    10 f6 4c 80       	[r8 + 76] = r0			  ## adkey.c:47:12
 1e047b4:    b0 70             	r0 = 11			  ## adkey.c:55:5
 1e047b6:    57 16             	call -850 <adc_add_sample_ch : 1e04466 >			  ## adkey.c:55:5
 1e047b8:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## adkey.c:55:5
 1e047be:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e047c0:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e047c2:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:806:13
 1e047c4:    01 fc 00 c4       	r1 = r0 + -15360
 1e047c8:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e047ca:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e047cc:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e047ce:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e047d2:    00 f4 08 09       	[r0 + 0] |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:235:22
 1e047d6:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e047d8:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e047da:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:173:29
 1e047dc:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e047de:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e047e0:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:573:13
 1e047e2:    72 4c             	r2 = [r6 + 28]			  ## key_driver.c:252:9
 1e047e4:    c0 9d             	r0 = r6 + 28			  ## key_driver.c:252:9
 1e047e6:    c1 ff ee 09 e0 01 	r1 = 31459822 <key_driver_scan : 1e009ee >			  ## key_driver.c:252:9
 1e047ec:    03 70             	r3 = 0			  ## key_driver.c:252:9
 1e047ee:    80 f3 68 35       	call 27344 <usr_timer_add : 1e0b2c2 >			  ## key_driver.c:252:9
 1e047f2:    bf f3 c4 e9       	call -11384 <led_8888_init : 1e01b7e >			  ## board_ac632n_demo.c:285:5
 1e047f6:    c0 ff 08 51 1e 00 	r0 = 1986824 <uECC_vli_cmp_unsafe+0xDE10C : 1e5108 >
 1e047fc:    00 f4 80 09       	[r0 + 0] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:277:16
 1e04800:    01 f4 80 09       	[r0 + 4] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:821:16
 1e04804:    06 f4 80 09       	[r0 + 24] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:852:17
 1e04808:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e0480a:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e0480c:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e0480e:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e04810:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e04812:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e04814:    02 f4 80 09       	[r0 + 8] |= 128			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:588:15
 1e04818:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0481a:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0481c:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0481e:    00 f4 20 09       	[r0 + 0] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:277:16
 1e04822:    01 f4 20 09       	[r0 + 4] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:821:16
 1e04826:    06 f4 20 09       	[r0 + 24] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:852:17
 1e0482a:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e0482c:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e0482e:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:792:15
 1e04830:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e04832:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e04834:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:761:16
 1e04836:    02 f4 20 09       	[r0 + 8] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:588:15
 1e0483a:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0483c:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e0483e:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/gpio.c:676:15
 1e04840:    00 f9 b4 81       	r0 = b[r8 + 436] (u)			  ## charge.c:96:20
 1e04844:    02 20             	if (r0 == 0) goto 4 <BTSTACK_CODE_TOTAL_SIZE+0x230 : 1e0484a >			  ## board_ac632n_demo.c:330:8
 1e04846:    20 70             	r0 = 2			  ## board_ac632n_demo.c:331:9
 1e04848:    01 18             	goto 2 <BTSTACK_CODE_TOTAL_SIZE+0x232 : 1e0484c >			  ## board_ac632n_demo.c:331:9
 1e0484a:    30 70             	r0 = 3			  ## board_ac632n_demo.c:333:9
 1e0484c:    bf f3 71 de       	call -17182 <power_set_mode : 1e00532 >
 1e04850:    4c 0a             	sp += 152
 1e04852:    5a 01             	{pc, r10-r4} = [sp++]			  ## board_ac632n_demo.c:343:1


app_main:
 1e04854:    76 01             	[--sp] = {rets, r6-r4}			  ## app_main.c:110:0
 1e04856:    f8 0b             	sp += -16			  ## app_main.c:110:0
 1e04858:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## charge.c:96:20
 1e0485e:    01 f9 b4 01       	r1 = b[r0 + 436] (u)			  ## charge.c:96:20
 1e04862:    00 f9 b4 01       	r0 = b[r0 + 436] (u)			  ## charge.c:96:20
 1e04866:    09 20             	if (r0 == 0) goto 18 <app_main+0x26 : 1e0487a >			  ## charge.c:96:20
 1e04868:    00 70             	r0 = 0
 1e0486a:    28 02             	[sp+8] = r0			  ## app_main.c:123:9
 1e0486c:    38 02             	[sp+12] = r0			  ## app_main.c:123:9
 1e0486e:    c0 ff 54 f0 e0 01 	r0 = 31518804 <bluetooth_base_uuid+0x4A : 1e0f054 >			  ## app_main.c:124:17
 1e04874:    08 02             	[sp] = r0			  ## app_main.c:124:17
 1e04876:    20 70             	r0 = 2			  ## app_main.c:125:19
 1e04878:    22 18             	goto 68 <app_main+0x6A : 1e048be >			  ## app_main.c:125:19
 1e0487a:    05 70             	r5 = 0
 1e0487c:    c4 ff b0 25 00 00 	r4 = 9648 <adv_data : 25b0 >
 1e04882:    06 70             	r6 = 0
 1e04884:    bf f3 43 e4       	call -14202 <clr_wdt : 1e0110e >			  ## app_power_manage.c:332:9
 1e04888:    bf f3 58 e1       	call -15696 <get_vbat_level : 1e00b3c >			  ## app_power_manage.c:333:15
 1e0488c:    01 f7 5c 40       	r1 = h[r4 + 92] (u)			  ## app_power_manage.c:335:28
 1e04890:    10 f2 06 20       	if (r0 >= r1) goto 12 <app_main+0x4C : 1e048a0 >			  ## app_power_manage.c:335:28
 1e04894:    16 80             	r6 += 1			  ## app_power_manage.c:336:26
 1e04896:    80 05             	r0 = r6.b0 (u)			  ## app_power_manage.c:336:26
 1e04898:    05 70             	r5 = 0			  ## app_power_manage.c:336:26
 1e0489a:    b0 e0 f3 3f       	if (r0 < 11) goto -26 <app_main+0x30 : 1e04884 >			  ## app_power_manage.c:336:26
 1e0489e:    15 18             	goto 42 <app_main+0x76 : 1e048ca >			  ## app_power_manage.c:336:26
 1e048a0:    15 80             	r5 += 1			  ## app_power_manage.c:344:29
 1e048a2:    40 05             	r0 = r5.b0 (u)			  ## app_power_manage.c:344:29
 1e048a4:    06 70             	r6 = 0			  ## app_power_manage.c:344:29
 1e048a6:    a0 e0 ed 9f       	if (r0 <= 10) goto -38 <app_main+0x30 : 1e04884 >			  ## app_power_manage.c:344:29
 1e048aa:    bf f3 6d ea       	call -11046 <vbat_check_init : 1e01d88 >			  ## app_power_manage.c:347:17
 1e048ae:    00 70             	r0 = 0			  ## app_power_manage.c:347:17
 1e048b0:    28 02             	[sp+8] = r0			  ## app_main.c:146:5
 1e048b2:    38 02             	[sp+12] = r0			  ## app_main.c:146:5
 1e048b4:    c0 ff 82 f0 e0 01 	r0 = 31518850 <bluetooth_base_uuid+0x78 : 1e0f082 >			  ## app_main.c:148:13
 1e048ba:    08 02             	[sp] = r0			  ## app_main.c:148:13
 1e048bc:    10 70             	r0 = 1			  ## app_main.c:149:15
 1e048be:    18 02             	[sp+4] = r0
 1e048c0:    00 a0             	r0 = sp + 0
 1e048c2:    80 f3 0e 43       	call 34332 <start_app : 1e0cee2 >
 1e048c6:    08 0a             	sp += 16
 1e048c8:    56 01             	{pc, r6-r4} = [sp++]			  ## app_main.c:176:1
 1e048ca:    40 76             	r0 = 100			  ## app_power_manage.c:339:17
 1e048cc:    98 f3 74 12       	call 3155176 <os_time_dly : 106db8 >			  ## app_power_manage.c:339:17
 1e048d0:    bf f3 f0 ea       	call -10784 <power_set_soft_poweroff : 1e01eb4 >			  ## app_power_manage.c:341:17


ble_profile_init:
 1e048d4:    34 00             	[--sp] = rets			  ## le_trans_data.c:999:0
 1e048d6:    80 f3 13 2d       	call 23078 <att_server_init : 1e0a300 >			  ## le_trans_data.c:1010:5
 1e048da:    80 f3 30 2d       	call 23136 <att_server_register_packet_handler : 1e0a33e >			  ## le_trans_data.c:1011:5
 1e048de:    80 f3 a4 15       	call 11080 <hci_event_callback_set : 1e0742a >			  ## le_trans_data.c:1015:5
 1e048e2:    80 f3 ad 15       	call 11098 <le_l2cap_register_packet_handler : 1e07440 >			  ## le_trans_data.c:1018:5
 1e048e6:    88 01             	{rets} = [sp++]			  ## le_trans_data.c:1030:5
 1e048e8:    c0 f3 b2 15       	goto 11108 <ble_vendor_set_default_att_mtu : 1e07450 >			  ## le_trans_data.c:1030:5


bredr_tx_bulk_alloc:
 1e048ec:    76 01             	[--sp] = {rets, r6-r4}			  ## link_bulk.c:381:0
 1e048ee:    c5 91             	r5 = r0 + 28			  ## link_bulk.c:381:0
 1e048f0:    c6 ff 28 23 00 00 	r6 = 9000 <acl_tx_bulk_sem : 2328 >			  ## link_bulk.c:381:0
 1e048f6:    00 70             	r0 = 0			  ## link_bulk.c:389:14
 1e048f8:    51 08             	r1 = r5			  ## link_bulk.c:389:14
 1e048fa:    80 f3 ee 4d       	call 39900 <lbuf_alloc : 1e0e4da >			  ## link_bulk.c:389:14
 1e048fe:    04 08             	r4 = r0			  ## link_bulk.c:389:14
 1e04900:    13 38             	if (r4 != 0) goto 38 <bredr_tx_bulk_alloc+0x3C : 1e04928 >			  ## link_bulk.c:390:13
 1e04902:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e04906:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e0490a:    04 70             	r4 = 0
 1e0490c:    01 ff 00 03 12 00 	if (r0 != 768) goto 36 <bredr_tx_bulk_alloc+0x4A : 1e04936 >
 1e04912:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e04916:    61 ff ff 09 0d 00 	if ((r0 & 255) != 0) goto 26 <bredr_tx_bulk_alloc+0x4A : 1e04936 >
 1e0491c:    01 70             	r1 = 0			  ## link_bulk.c:398:13
 1e0491e:    60 08             	r0 = r6			  ## link_bulk.c:398:13
 1e04920:    98 f3 72 12       	call 3155172 <os_sem_pend : 106e08 >			  ## link_bulk.c:398:13
 1e04924:    e8 21             	if (r0 == 0) goto -48 <bredr_tx_bulk_alloc+0xA : 1e048f6 >			  ## link_bulk.c:398:13
 1e04926:    07 18             	goto 14 <bredr_tx_bulk_alloc+0x4A : 1e04936 >			  ## link_bulk.c:398:13
 1e04928:    01 70             	r1 = 0			  ## link_bulk.c:404:5
 1e0492a:    c2 71             	r2 = 28			  ## link_bulk.c:404:5
 1e0492c:    98 f3 e0 12       	call 3155392 <memset : 106ef0 >			  ## link_bulk.c:404:5
 1e04930:    00 99             	r0 = r4 + 16			  ## link_bulk.c:406:25
 1e04932:    48 48             	[r4 + 16] = r0			  ## list.h:188:16
 1e04934:    58 48             	[r4 + 20] = r0			  ## list.h:189:16
 1e04936:    40 08             	r0 = r4			  ## link_bulk.c:409:1
 1e04938:    56 01             	{pc, r6-r4} = [sp++]			  ## link_bulk.c:409:1


__vsprintf:
 1e0493a:    7b 01             	[--sp] = {rets, r11-r4}			  ## vsprintf.c:72:0
 1e0493c:    fe 0b             	sp += -4			  ## vsprintf.c:72:0
 1e0493e:    14 08             	r4 = r1			  ## vsprintf.c:72:0
 1e04940:    0a 02             	[sp] = r2			  ## vsprintf.c:72:0
 1e04942:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:77:12
 1e04944:    08 08             	r8 = r0			  ## vsprintf.c:77:12
 1e04946:    86 08             	r6 = r8
 1e04948:    bd 22             	if (r1 == 0) goto 378 <.GJTIE475_0_0_+0xFE : 1e04ac4 >
 1e0494a:    49 76             	r9 = 100
 1e0494c:    aa 70             	r10 = 10
 1e0494e:    50 04             	r0 = r1.b0 (s)			  ## vsprintf.c:78:17
 1e04950:    20 e5 2e d0       	ifs (r0 <= 82) goto 92 <__vsprintf+0x76 : 1e049b0 >			  ## vsprintf.c:78:17
 1e04954:    20 e6 1f c0       	ifs (r0 > 98) goto 62 <__vsprintf+0x5C : 1e04996 >
 1e04958:    30 e5 3f 00       	if (r0 == 83) goto 126 <.GJTIE475_0_0_+0x14 : 1e049da >
 1e0495c:    20 e6 af 10       	if (r0 != 98) goto 350 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04960:    20 f9 02 40       	r0 = b[r4 + 2] (s)			  ## vsprintf.c:101:21
 1e04964:    22 f9 01 40       	r2 = b[r4 + 1] (s)			  ## vsprintf.c:99:20
 1e04968:    01 08             	r1 = r0			  ## vsprintf.c:101:17
 1e0496a:    80 fe a0 12       	r1 += r2 * r10			  ## vsprintf.c:101:17
 1e0496e:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:101:17
 1e04972:    24 80             	r4 += 2			  ## vsprintf.c:100:13
 1e04974:    a4 22             	if (r1 == 0) goto 328 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04976:    02 fe 0a 29       	r2 = r2 * 10			  ## vsprintf.c:99:35
 1e0497a:    63 08             	r3 = r6			  ## vsprintf.c:99:35
 1e0497c:    05 02             	r5 = [sp]			  ## vsprintf.c:104:24
 1e0497e:    47 9a             	r7 = r5 + 4			  ## vsprintf.c:104:24
 1e04980:    0f 02             	[sp] = r7			  ## vsprintf.c:104:24
 1e04982:    05 4a             	r5 = [r5 + 0]			  ## vsprintf.c:104:24
 1e04984:    f1 8f             	r1 += -1			  ## vsprintf.c:103:23
 1e04986:    95 f9 01 30       	b[r3 ++= 1] = r5			  ## vsprintf.c:105:25
 1e0498a:    f8 33             	if (r1 != 0) goto -16 <__vsprintf+0x42 : 1e0497c >			  ## vsprintf.c:103:13
 1e0498c:    20 09             	r0 += r2			  ## vsprintf.c:103:23
 1e0498e:    60 09             	r0 += r6			  ## vsprintf.c:103:23
 1e04990:    06 fc f0 fd       	r6 = r0 + -528			  ## vsprintf.c:103:23
 1e04994:    94 18             	goto 296 <.GJTIE475_0_0_+0xF8 : 1e04abe >			  ## vsprintf.c:103:23
 1e04996:    30 e6 2d 00       	if (r0 == 99) goto 90 <.GJTIE475_0_0_+0x2E : 1e049f4 >
 1e0499a:    c0 e6 90 10       	if (r0 != 108) goto 288 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e0499e:    00 02             	r0 = [sp]			  ## vsprintf.c:155:24
 1e049a0:    41 90             	r1 = r0 + 4			  ## vsprintf.c:155:24
 1e049a2:    09 02             	[sp] = r1			  ## vsprintf.c:155:24
 1e049a4:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:155:24
 1e049a8:    1b f9 00 60       	b[r6 + 0] = r11			  ## vsprintf.c:156:21
 1e049ac:    16 80             	r6 += 1
 1e049ae:    87 18             	goto 270 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e049b0:    01 fc bf ff       	r1 = r0 + -65
 1e049b4:    b1 e0 31 80       	if (r1 > 11) goto 98 <.GJTIE475_0_0_+0x54 : 1e04a1a >
 1e049b8:    a1 00             	tbb [r1]


.GJTIS475_0_0_:
 1e049ba:    06     < 6 : 0x6 >
 1e049bb:    50     < 80 : 0x50 >
 1e049bc:    5a     < 90 : 0x5A >
 1e049bd:    82     < 130 : 0x82 >
 1e049be:    82     < 130 : 0x82 >
 1e049bf:    82     < 130 : 0x82 >
 1e049c0:    82     < 130 : 0x82 >
 1e049c1:    72     < 114 : 0x72 >
 1e049c2:    82     < 130 : 0x82 >
 1e049c3:    82     < 130 : 0x82 >
 1e049c4:    82     < 130 : 0x82 >
 1e049c5:    7b     < 123 : 0x7B >
 1e049c6:    00 02             	r0 = [sp]			  ## vsprintf.c:137:20
 1e049c8:    41 90             	r1 = r0 + 4			  ## vsprintf.c:137:20
 1e049ca:    09 02             	[sp] = r1			  ## vsprintf.c:137:20
 1e049cc:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:137:20
 1e049ce:    62 70             	r2 = 6			  ## vsprintf.c:138:13
 1e049d0:    60 08             	r0 = r6			  ## vsprintf.c:138:13
 1e049d2:    98 f3 87 12       	call 3155214 <memcpy : 106ee4 >			  ## vsprintf.c:138:13
 1e049d6:    66 80             	r6 += 6			  ## vsprintf.c:139:18
 1e049d8:    72 18             	goto 228 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e049da:    00 02             	r0 = [sp]			  ## vsprintf.c:131:20
 1e049dc:    41 90             	r1 = r0 + 4			  ## vsprintf.c:131:20
 1e049de:    09 02             	[sp] = r1			  ## vsprintf.c:131:20
 1e049e0:    05 40             	r5 = [r0 + 0]			  ## vsprintf.c:131:20
 1e049e2:    60 08             	r0 = r6			  ## vsprintf.c:132:13
 1e049e4:    51 08             	r1 = r5			  ## vsprintf.c:132:13
 1e049e6:    98 f3 87 12       	call 3155214 <strcpy : 106ef8 >			  ## vsprintf.c:132:13
 1e049ea:    50 08             	r0 = r5			  ## vsprintf.c:133:19
 1e049ec:    98 f3 86 12       	call 3155212 <strlen : 106efc >			  ## vsprintf.c:133:19
 1e049f0:    06 09             	r6 += r0			  ## vsprintf.c:134:18
 1e049f2:    65 18             	goto 202 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e049f4:    00 02             	r0 = [sp]			  ## vsprintf.c:114:20
 1e049f6:    22 f9 02 40       	r2 = b[r4 + 2] (s)			  ## vsprintf.c:113:21
 1e049fa:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:111:20
 1e049fe:    41 90             	r1 = r0 + 4			  ## vsprintf.c:114:20
 1e04a00:    09 02             	[sp] = r1			  ## vsprintf.c:114:20
 1e04a02:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:114:20
 1e04a04:    80 fe a0 23       	r2 += r3 * r10			  ## vsprintf.c:113:17
 1e04a08:    25 fc f0 fd       	r5 = r2 + -528			  ## vsprintf.c:113:17
 1e04a0c:    60 08             	r0 = r6			  ## vsprintf.c:115:13
 1e04a0e:    52 08             	r2 = r5			  ## vsprintf.c:115:13
 1e04a10:    98 f3 68 12       	call 3155152 <memcpy : 106ee4 >			  ## vsprintf.c:115:13
 1e04a14:    56 09             	r6 += r5			  ## vsprintf.c:116:18
 1e04a16:    24 80             	r4 += 2			  ## vsprintf.c:112:13
 1e04a18:    52 18             	goto 164 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04a1a:    01 fc cf ff       	r1 = r0 + -49
 1e04a1e:    21 e0 13 30       	if (r1 < 2) goto 38 <.GJTIE475_0_0_+0x82 : 1e04a48 >
 1e04a22:    d0 8c             	r0 += -51
 1e04a24:    20 e0 4b 20       	if (r0 >= 2) goto 150 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04a28:    00 02             	r0 = [sp]			  ## vsprintf.c:89:20
 1e04a2a:    41 90             	r1 = r0 + 4			  ## vsprintf.c:89:20
 1e04a2c:    09 02             	[sp] = r1			  ## vsprintf.c:89:20
 1e04a2e:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:89:20
 1e04a30:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:90:21
 1e04a32:    01 d2             	r1 = r0 >> 8			  ## vsprintf.c:91:28
 1e04a34:    19 6c             	b[r6 + 1] = r1			  ## vsprintf.c:91:21
 1e04a36:    01 d4             	r1 = r0 >> 16			  ## vsprintf.c:92:28
 1e04a38:    29 6c             	b[r6 + 2] = r1			  ## vsprintf.c:92:21
 1e04a3a:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:93:17
 1e04a3c:    41 e3 3e 10       	if (r1 != 52) goto 124 <.GJTIE475_0_0_+0xF6 : 1e04abc >			  ## vsprintf.c:93:17
 1e04a40:    00 d6             	r0 = r0 >> 24			  ## vsprintf.c:94:32
 1e04a42:    38 6c             	b[r6 + 3] = r0			  ## vsprintf.c:94:25
 1e04a44:    46 80             	r6 += 4			  ## vsprintf.c:94:22
 1e04a46:    3b 18             	goto 118 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04a48:    00 02             	r0 = [sp]			  ## vsprintf.c:81:20
 1e04a4a:    41 90             	r1 = r0 + 4			  ## vsprintf.c:81:20
 1e04a4c:    09 02             	[sp] = r1			  ## vsprintf.c:81:20
 1e04a4e:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:81:20
 1e04a50:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:82:21
 1e04a52:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:83:17
 1e04a54:    21 e3 aa 1f       	if (r1 != 50) goto -172 <__vsprintf+0x72 : 1e049ac >			  ## vsprintf.c:83:17
 1e04a58:    27 18             	goto 78 <.GJTIE475_0_0_+0xE2 : 1e04aa8 >			  ## vsprintf.c:83:17
 1e04a5a:    00 02             	r0 = [sp]			  ## vsprintf.c:150:20
 1e04a5c:    41 90             	r1 = r0 + 4			  ## vsprintf.c:150:20
 1e04a5e:    09 02             	[sp] = r1			  ## vsprintf.c:150:20
 1e04a60:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:150:20
 1e04a62:    60 08             	r0 = r6			  ## vsprintf.c:151:13
 1e04a64:    b2 08             	r2 = r11			  ## vsprintf.c:151:13
 1e04a66:    98 f3 3d 12       	call 3155066 <memcpy : 106ee4 >			  ## vsprintf.c:151:13
 1e04a6a:    b6 09             	r6 += r11			  ## vsprintf.c:152:18
 1e04a6c:    28 18             	goto 80 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04a6e:    00 02             	r0 = [sp]			  ## vsprintf.c:126:20
 1e04a70:    22 f9 03 40       	r2 = b[r4 + 3] (s)			  ## vsprintf.c:124:21
 1e04a74:    21 f9 02 40       	r1 = b[r4 + 2] (s)			  ## vsprintf.c:122:21
 1e04a78:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:120:20
 1e04a7c:    45 90             	r5 = r0 + 4			  ## vsprintf.c:126:20
 1e04a7e:    0d 02             	[sp] = r5			  ## vsprintf.c:126:20
 1e04a80:    05 fe 0a 19       	r5 = r1 * 10			  ## vsprintf.c:122:36
 1e04a84:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:126:20
 1e04a86:    80 fe 90 53       	r5 += r3 * r9			  ## vsprintf.c:122:17
 1e04a8a:    80 ba             	r0 = r5 + r2			  ## vsprintf.c:124:17
 1e04a8c:    05 fc 30 eb       	r5 = r0 + -5328			  ## vsprintf.c:124:17
 1e04a90:    60 08             	r0 = r6			  ## vsprintf.c:127:13
 1e04a92:    52 08             	r2 = r5			  ## vsprintf.c:127:13
 1e04a94:    98 f3 26 12       	call 3155020 <memcpy : 106ee4 >			  ## vsprintf.c:127:13
 1e04a98:    56 09             	r6 += r5			  ## vsprintf.c:128:18
 1e04a9a:    34 80             	r4 += 3			  ## vsprintf.c:123:13
 1e04a9c:    10 18             	goto 32 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04a9e:    00 02             	r0 = [sp]			  ## vsprintf.c:142:20
 1e04aa0:    41 90             	r1 = r0 + 4			  ## vsprintf.c:142:20
 1e04aa2:    09 02             	[sp] = r1			  ## vsprintf.c:142:20
 1e04aa4:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:142:20
 1e04aa6:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:143:21
 1e04aa8:    00 d2             	r0 = r0 >> 8
 1e04aaa:    18 6c             	b[r6 + 1] = r0
 1e04aac:    26 80             	r6 += 2
 1e04aae:    07 18             	goto 14 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04ab0:    00 02             	r0 = [sp]			  ## vsprintf.c:147:24
 1e04ab2:    41 90             	r1 = r0 + 4			  ## vsprintf.c:147:24
 1e04ab4:    09 02             	[sp] = r1			  ## vsprintf.c:147:24
 1e04ab6:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:147:24
 1e04aba:    01 18             	goto 2 <.GJTIE475_0_0_+0xF8 : 1e04abe >
 1e04abc:    36 80             	r6 += 3			  ## vsprintf.c:92:18
 1e04abe:    11 68             	r1 = b[r4 + 1] (u)			  ## vsprintf.c:77:12
 1e04ac0:    14 80             	r4 += 1			  ## vsprintf.c:163:15
 1e04ac2:    45 33             	if (r1 != 0) goto -374 <__vsprintf+0x14 : 1e0494e >
 1e04ac4:    90 fb 80 06       	r0 = r6 - r8			  ## vsprintf.c:166:17
 1e04ac8:    02 0a             	sp += 4			  ## vsprintf.c:166:17
 1e04aca:    5b 01             	{pc, r11-r4} = [sp++]			  ## vsprintf.c:166:5


bredr_rx_bulk_free:
 1e04acc:    76 01             	[--sp] = {rets, r6-r4}			  ## link_bulk.c:306:0
 1e04ace:    41 60             	r1 = b[r0 + 4] (u)			  ## link_bulk.c:308:29
 1e04ad0:    16 50             	r6 = h[r0 + 2] (u)			  ## link_bulk.c:307:20
 1e04ad2:    65 b0             	r5 = r0 - r1			  ## link_bulk.c:308:27
 1e04ad4:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:311:5
 1e04ad8:    50 08             	r0 = r5			  ## link_bulk.c:312:5
 1e04ada:    80 f3 65 4d       	call 39626 <lbuf_free_check : 1e0e5a8 >			  ## link_bulk.c:312:5
 1e04ade:    50 08             	r0 = r5			  ## link_bulk.c:314:21
 1e04ae0:    80 f3 82 4d       	call 39684 <lbuf_real_size : 1e0e5e8 >			  ## link_bulk.c:314:21
 1e04ae4:    04 08             	r4 = r0			  ## link_bulk.c:314:21
 1e04ae6:    50 08             	r0 = r5			  ## link_bulk.c:315:9
 1e04ae8:    80 f3 81 4d       	call 39682 <lbuf_free : 1e0e5ee >			  ## link_bulk.c:315:9
 1e04aec:    0e 20             	if (r0 == 0) goto 28 <bredr_rx_bulk_free+0x3E : 1e04b0a >			  ## link_bulk.c:315:9
 1e04aee:    81 fd 40 06       	r0 = uextra(r6, p:8, l:1)			  ## link_bulk.c:307:20
 1e04af2:    80 c0             	r0 = r0 << 2			  ## link_bulk.c:316:18
 1e04af4:    c1 ff 20 23 00 00 	r1 = 8992 <link : 2320 >			  ## link_bulk.c:316:18
 1e04afa:    10 09             	r0 += r1			  ## link_bulk.c:316:18
 1e04afc:    11 50             	r1 = h[r0 + 2] (u)			  ## link_bulk.c:316:28
 1e04afe:    21 b3             	r1 = r1 - r4			  ## link_bulk.c:316:28
 1e04b00:    72 04             	r2 = r1.l (s)			  ## link_bulk.c:316:28
 1e04b02:    02 e0 01 c0       	ifs (r2 > 0) goto 2 <bredr_rx_bulk_free+0x3C : 1e04b08 >			  ## link_bulk.c:316:28
 1e04b06:    01 70             	r1 = 0			  ## link_bulk.c:317:13
 1e04b08:    19 50             	h[r0 + 2] = r1			  ## link_bulk.c:318:32
 1e04b0a:    56 01             	{pc, r6-r4} = [sp++]


bredr_tx_bulk_free:
 1e04b0c:    74 01             	[--sp] = {rets, r4}			  ## link_bulk.c:435:0
 1e04b0e:    04 08             	r4 = r0			  ## link_bulk.c:435:0
 1e04b10:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:440:5
 1e04b14:    40 08             	r0 = r4			  ## link_bulk.c:441:5
 1e04b16:    80 f3 47 4d       	call 39566 <lbuf_free_check : 1e0e5a8 >			  ## link_bulk.c:441:5
 1e04b1a:    98 f3 3f 11       	call 3154558 <local_irq_disable : 106d9c >			  ## link_bulk.c:443:5
 1e04b1e:    40 48             	r0 = [r4 + 16]			  ## list.h:165:36
 1e04b20:    51 48             	r1 = [r4 + 20]			  ## list.h:165:23
 1e04b22:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e04b24:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e04b26:    98 f3 37 11       	call 3154542 <local_irq_enable : 106d98 >			  ## link_bulk.c:445:5
 1e04b2a:    80 68             	r0 = b[r4 + 8] (u)			  ## link_bulk.c:447:15
 1e04b2c:    09 20             	if (r0 == 0) goto 18 <bredr_tx_bulk_free+0x34 : 1e04b40 >			  ## link_bulk.c:447:9
 1e04b2e:    02 b8             	r2 = r4 + r0			  ## link_bulk.c:449:14
 1e04b30:    41 64             	r1 = b[r2 + 4] (u)			  ## link_bulk.c:449:14
 1e04b32:    10 f2 02 00       	if (r0 == r1) goto 4 <bredr_tx_bulk_free+0x2E : 1e04b3a >			  ## link_bulk.c:449:14
 1e04b36:    8f f3 6e f4       	call 2091228 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e04b3a:    20 08             	r0 = r2			  ## link_bulk.c:451:16
 1e04b3c:    14 01             	{rets, r4} = [sp++]			  ## link_bulk.c:451:16
 1e04b3e:    c6 1f             	goto -116 <bredr_rx_bulk_free : 1e04acc >			  ## link_bulk.c:451:16
 1e04b40:    50 68             	r0 = b[r4 + 5] (u)			  ## link_bulk.c:454:15
 1e04b42:    25 f3 08 00       	if ((r0 & 32) != 0) goto 16 <bredr_tx_bulk_free+0x4A : 1e04b56 >			  ## link_bulk.c:454:15
 1e04b46:    40 08             	r0 = r4			  ## link_bulk.c:455:9
 1e04b48:    80 f3 51 4d       	call 39586 <lbuf_free : 1e0e5ee >			  ## link_bulk.c:455:9
 1e04b4c:    c0 ff 28 23 00 00 	r0 = 9000 <acl_tx_bulk_sem : 2328 >			  ## link_bulk.c:456:9
 1e04b52:    98 f3 5b 11       	call 3154614 <os_sem_post : 106e0c >			  ## link_bulk.c:456:9
 1e04b56:    54 01             	{pc, r4} = [sp++]			  ## link_bulk.c:458:1


bredr_tx_bulk_pop:
 1e04b58:    01 08             	r1 = r0			  ## link_bulk.c:427:0
 1e04b5a:    03 42             	r3 = [r1 + 0]			  ## list.h:124:18
 1e04b5c:    32 fc f0 ff       	r2 = r3 + -16			  ## link_bulk.c:429:16
 1e04b60:    00 70             	r0 = 0			  ## link_bulk.c:429:16
 1e04b62:    13 f2 01 00       	if (r3 == r1) goto 2 <bredr_tx_bulk_pop+0x10 : 1e04b68 >			  ## link_bulk.c:429:16
 1e04b66:    20 08             	r0 = r2			  ## link_bulk.c:428:9
 1e04b68:    20 00             	rts			  ## link_bulk.c:432:1


btctler_little_endian_read_16:
 1e04b6a:    10 09             	r0 += r1			  ## btcontroller_util.c:43:0
 1e04b6c:    11 60             	r1 = b[r0 + 1] (u)			  ## btcontroller_util.c:44:51
 1e04b6e:    00 60             	r0 = b[r0 + 0] (u)			  ## btcontroller_util.c:44:23
 1e04b70:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## btcontroller_util.c:44:48
 1e04b74:    20 04             	r0 = r0.l (u)			  ## btcontroller_util.c:44:5
 1e04b76:    20 00             	rts			  ## btcontroller_util.c:44:5


att_iterator_fetch_next:
 1e04b78:    77 01             	[--sp] = {rets, r7-r4}			  ## att_db.c:123:0
 1e04b7a:    02 08             	r2 = r0			  ## att_db.c:123:0
 1e04b7c:    03 44             	r3 = [r2 + 0]			  ## att_db.c:124:44
 1e04b7e:    01 70             	r1 = 0			  ## att_db.c:124:18
 1e04b80:    05 70             	r5 = 0			  ## att_db.c:124:18
 1e04b82:    30 08             	r0 = r3			  ## att_db.c:124:18
 1e04b84:    80 f3 f5 12       	call 9706 <little_endian_read_16 : 1e07172 >			  ## att_db.c:124:18
 1e04b88:    04 08             	r4 = r0			  ## att_db.c:124:18
 1e04b8a:    2c 54             	h[r2 + 4] = r4			  ## att_db.c:124:16
 1e04b8c:    17 28             	if (r4 == 0) goto 46 <att_iterator_fetch_next+0x44 : 1e04bbc >			  ## att_db.c:124:16
 1e04b8e:    21 70             	r1 = 2			  ## att_db.c:134:18
 1e04b90:    30 08             	r0 = r3			  ## att_db.c:134:18
 1e04b92:    80 f3 ee 12       	call 9692 <little_endian_read_16 : 1e07172 >			  ## att_db.c:134:18
 1e04b96:    05 08             	r5 = r0			  ## att_db.c:134:18
 1e04b98:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:134:16
 1e04b9a:    41 70             	r1 = 4			  ## att_db.c:135:18
 1e04b9c:    30 08             	r0 = r3			  ## att_db.c:135:18
 1e04b9e:    80 f3 e8 12       	call 9680 <little_endian_read_16 : 1e07172 >			  ## att_db.c:135:18
 1e04ba2:    01 b7             	r1 = r3 + r4			  ## att_db.c:146:17
 1e04ba4:    86 70             	r6 = 8			  ## att_db.c:138:9
 1e04ba6:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x34 : 1e04bac >			  ## att_db.c:138:9
 1e04baa:    66 71             	r6 = 22			  ## att_db.c:138:9
 1e04bac:    36 09             	r6 += r3
 1e04bae:    87 07             	r7 = -8			  ## att_db.c:138:9
 1e04bb0:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x3E : 1e04bb6 >			  ## att_db.c:138:9
 1e04bb4:    a7 06             	r7 = -22			  ## att_db.c:138:9
 1e04bb6:    74 09             	r4 += r7
 1e04bb8:    65 96             	r5 = r3 + 6			  ## att_db.c:136:19
 1e04bba:    05 18             	goto 10 <att_iterator_fetch_next+0x4E : 1e04bc6 >			  ## att_db.c:136:19
 1e04bbc:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:126:19
 1e04bbe:    00 70             	r0 = 0			  ## att_db.c:126:19
 1e04bc0:    04 70             	r4 = 0			  ## att_db.c:126:19
 1e04bc2:    06 70             	r6 = 0			  ## att_db.c:126:19
 1e04bc4:    01 70             	r1 = 0			  ## att_db.c:126:19
 1e04bc6:    48 54             	h[r2 + 8] = r0			  ## att_db.c:135:16
 1e04bc8:    3d 44             	[r2 + 12] = r5			  ## att_db.c:136:16
 1e04bca:    8c 54             	h[r2 + 16] = r4			  ## att_db.c:136:16
 1e04bcc:    5e 44             	[r2 + 20] = r6			  ## att_db.c:136:16
 1e04bce:    09 44             	[r2 + 0] = r1			  ## att_db.c:131:21
 1e04bd0:    57 01             	{pc, r7-r4} = [sp++]			  ## att_db.c:147:1


is_Bluetooth_Base_UUID:
 1e04bd2:    74 01             	[--sp] = {rets, r4}			  ## att_db.c:78:0
 1e04bd4:    04 08             	r4 = r0			  ## att_db.c:78:0
 1e04bd6:    c1 ff 0a f0 e0 01 	r1 = 31518730 <bluetooth_base_uuid : 1e0f00a >			  ## att_db.c:79:9
 1e04bdc:    c2 70             	r2 = 12			  ## att_db.c:79:9
 1e04bde:    98 f3 85 11       	call 3154698 <memcmp : 106eec >			  ## att_db.c:79:9
 1e04be2:    01 08             	r1 = r0			  ## att_db.c:79:9
 1e04be4:    00 70             	r0 = 0			  ## att_db.c:79:9
 1e04be6:    07 32             	if (r1 != 0) goto 14 <is_Bluetooth_Base_UUID+0x24 : 1e04bf6 >			  ## att_db.c:79:9
 1e04be8:    f0 68             	r0 = b[r4 + 15] (u)			  ## att_db.c:82:9
 1e04bea:    e1 68             	r1 = b[r4 + 14] (u)			  ## att_db.c:82:9
 1e04bec:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## att_db.c:82:9
 1e04bf0:    10 70             	r0 = 1			  ## att_db.c:82:9
 1e04bf2:    01 22             	if (r1 == 0) goto 2 <is_Bluetooth_Base_UUID+0x24 : 1e04bf6 >			  ## att_db.c:82:9
 1e04bf4:    00 70             	r0 = 0			  ## att_db.c:82:9
 1e04bf6:    54 01             	{pc, r4} = [sp++]			  ## att_db.c:87:1


att_iterator_match_uuid16:
 1e04bf8:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:150:0
 1e04bfa:    42 50             	r2 = h[r0 + 8] (u)			  ## att_db.c:151:13
 1e04bfc:    14 08             	r4 = r1			  ## att_db.c:151:13
 1e04bfe:    05 70             	r5 = 0
 1e04c00:    11 24             	if (r2 == 0) goto 34 <att_iterator_match_uuid16+0x2C : 1e04c24 >
 1e04c02:    71 60             	r1 = b[r0 + 7] (u)			  ## att_db.c:154:19
 1e04c04:    36 40             	r6 = [r0 + 12]			  ## att_db.c:154:19
 1e04c06:    21 f3 02 10       	if ((r1 & 2) != 0) goto 4 <att_iterator_match_uuid16+0x16 : 1e04c0e >			  ## att_db.c:154:19
 1e04c0a:    01 70             	r1 = 0			  ## att_db.c:160:12
 1e04c0c:    04 18             	goto 8 <att_iterator_match_uuid16+0x1E : 1e04c16 >			  ## att_db.c:160:12
 1e04c0e:    60 08             	r0 = r6			  ## att_db.c:155:14
 1e04c10:    e0 17             	call -64 <is_Bluetooth_Base_UUID : 1e04bd2 >			  ## att_db.c:155:14
 1e04c12:    08 20             	if (r0 == 0) goto 16 <att_iterator_match_uuid16+0x2C : 1e04c24 >			  ## att_db.c:155:14
 1e04c14:    c1 70             	r1 = 12			  ## att_db.c:158:16
 1e04c16:    60 08             	r0 = r6
 1e04c18:    80 f3 ab 12       	call 9558 <little_endian_read_16 : 1e07172 >
 1e04c1c:    15 70             	r5 = 1
 1e04c1e:    40 f2 01 00       	if (r0 == r4) goto 2 <att_iterator_match_uuid16+0x2C : 1e04c24 >
 1e04c22:    05 70             	r5 = 0
 1e04c24:    50 08             	r0 = r5			  ## att_db.c:161:1
 1e04c26:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:161:1


att_iterator_match_uuid:
 1e04c28:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:164:0
 1e04c2a:    05 08             	r5 = r0			  ## att_db.c:164:0
 1e04c2c:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:165:13
 1e04c2e:    16 08             	r6 = r1			  ## att_db.c:165:13
 1e04c30:    04 70             	r4 = 0
 1e04c32:    26 20             	if (r0 == 0) goto 76 <att_iterator_match_uuid+0x58 : 1e04c80 >
 1e04c34:    22 e0 09 10       	if (r2 != 2) goto 18 <att_iterator_match_uuid+0x22 : 1e04c4a >			  ## att_db.c:169:9
 1e04c38:    01 70             	r1 = 0			  ## att_db.c:170:46
 1e04c3a:    60 08             	r0 = r6			  ## att_db.c:170:46
 1e04c3c:    80 f3 99 12       	call 9522 <little_endian_read_16 : 1e07172 >			  ## att_db.c:170:46
 1e04c40:    01 08             	r1 = r0			  ## att_db.c:170:46
 1e04c42:    50 08             	r0 = r5			  ## att_db.c:170:16
 1e04c44:    d9 17             	call -78 <att_iterator_match_uuid16 : 1e04bf8 >			  ## att_db.c:170:16
 1e04c46:    04 08             	r4 = r0			  ## att_db.c:170:16
 1e04c48:    1b 18             	goto 54 <att_iterator_match_uuid+0x58 : 1e04c80 >			  ## att_db.c:170:16
 1e04c4a:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:173:19
 1e04c4c:    21 f3 11 00       	if ((r0 & 2) != 0) goto 34 <att_iterator_match_uuid+0x4A : 1e04c72 >			  ## att_db.c:173:19
 1e04c50:    60 08             	r0 = r6			  ## att_db.c:177:10
 1e04c52:    bf 17             	call -130 <is_Bluetooth_Base_UUID : 1e04bd2 >			  ## att_db.c:177:10
 1e04c54:    15 20             	if (r0 == 0) goto 42 <att_iterator_match_uuid+0x58 : 1e04c80 >
 1e04c56:    c1 70             	r1 = 12			  ## att_db.c:180:12
 1e04c58:    60 08             	r0 = r6			  ## att_db.c:180:12
 1e04c5a:    80 f3 8a 12       	call 9492 <little_endian_read_16 : 1e07172 >			  ## att_db.c:180:12
 1e04c5e:    32 4a             	r2 = [r5 + 12]			  ## att_db.c:180:73
 1e04c60:    03 08             	r3 = r0			  ## att_db.c:180:12
 1e04c62:    01 70             	r1 = 0			  ## att_db.c:180:47
 1e04c64:    20 08             	r0 = r2			  ## att_db.c:180:47
 1e04c66:    80 f3 84 12       	call 9480 <little_endian_read_16 : 1e07172 >			  ## att_db.c:180:47
 1e04c6a:    14 70             	r4 = 1			  ## att_db.c:180:44
 1e04c6c:    03 f2 07 10       	if (r3 != r0) goto 14 <att_iterator_match_uuid+0x56 : 1e04c7e >			  ## att_db.c:180:44
 1e04c70:    07 18             	goto 14 <att_iterator_match_uuid+0x58 : 1e04c80 >			  ## att_db.c:180:44
 1e04c72:    30 4a             	r0 = [r5 + 12]			  ## att_db.c:174:27
 1e04c74:    02 71             	r2 = 16			  ## att_db.c:174:16
 1e04c76:    98 f3 39 11       	call 3154546 <memcmp : 106eec >			  ## att_db.c:174:16
 1e04c7a:    14 70             	r4 = 1			  ## att_db.c:174:43
 1e04c7c:    01 20             	if (r0 == 0) goto 2 <att_iterator_match_uuid+0x58 : 1e04c80 >			  ## att_db.c:174:43
 1e04c7e:    04 70             	r4 = 0
 1e04c80:    40 08             	r0 = r4			  ## att_db.c:181:1
 1e04c82:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:181:1


att_validate_security:
 1e04c84:    75 01             	[--sp] = {rets, r5, r4}			  ## att_db.c:380:0
 1e04c86:    0d d3             	r5 = r1 >> 12			  ## att_db.c:380:0
 1e04c88:    23 fd 0f 59       	r3 = r5 & 15			  ## att_db.c:381:46
 1e04c8c:    14 96             	r4 = r3 + 1			  ## att_db.c:383:33
 1e04c8e:    02 70             	r2 = 0
 1e04c90:    60 ff 0f 59 01 00 	if ((r5 & 15) == 0) goto 2 <att_validate_security+0x14 : 1e04c98 >
 1e04c96:    42 08             	r2 = r4			  ## att_db.c:382:9
 1e04c98:    0a f3 02 10       	if ((r1 & 1024) == 0) goto 4 <att_validate_security+0x1C : 1e04ca0 >
 1e04c9c:    74 60             	r4 = b[r0 + 7] (u)			  ## att_db.c:387:79
 1e04c9e:    10 28             	if (r4 == 0) goto 32 <att_validate_security+0x3C : 1e04cc0 >			  ## att_db.c:387:79
 1e04ca0:    0b f3 02 10       	if ((r1 & 2048) == 0) goto 4 <att_validate_security+0x24 : 1e04ca8 >
 1e04ca4:    81 60             	r1 = b[r0 + 8] (u)			  ## att_db.c:390:78
 1e04ca6:    0e 22             	if (r1 == 0) goto 28 <att_validate_security+0x40 : 1e04cc4 >			  ## att_db.c:390:78
 1e04ca8:    11 70             	r1 = 1			  ## att_db.c:393:38
 1e04caa:    01 36             	if (r3 != 0) goto 2 <att_validate_security+0x2A : 1e04cae >			  ## att_db.c:393:38
 1e04cac:    01 70             	r1 = 0
 1e04cae:    63 60             	r3 = b[r0 + 6] (u)
 1e04cb0:    02 36             	if (r3 != 0) goto 4 <att_validate_security+0x32 : 1e04cb6 >
 1e04cb2:    f0 70             	r0 = 15
 1e04cb4:    08 32             	if (r1 != 0) goto 16 <att_validate_security+0x42 : 1e04cc6 >
 1e04cb6:    c0 70             	r0 = 12			  ## att_db.c:397:9
 1e04cb8:    32 f2 05 80       	if (r2 > r3) goto 10 <att_validate_security+0x42 : 1e04cc6 >			  ## att_db.c:397:9
 1e04cbc:    00 70             	r0 = 0			  ## att_db.c:397:9
 1e04cbe:    03 18             	goto 6 <att_validate_security+0x42 : 1e04cc6 >			  ## att_db.c:397:9
 1e04cc0:    50 70             	r0 = 5
 1e04cc2:    01 18             	goto 2 <att_validate_security+0x42 : 1e04cc6 >
 1e04cc4:    80 70             	r0 = 8
 1e04cc6:    00 04             	r0 = r0.b0 (u)			  ## att_db.c:400:1
 1e04cc8:    55 01             	{pc, r5, r4} = [sp++]			  ## att_db.c:400:1


att_service_handler_for_handle:
 1e04cca:    34 00             	[--sp] = rets			  ## att_db.c:201:0
 1e04ccc:    fa 0b             	sp += -12			  ## att_db.c:201:0
 1e04cce:    03 08             	r3 = r0			  ## att_db.c:201:0
 1e04cd0:    c1 ff fc 1c 00 00 	r1 = 7420 <att_global_info+0x1C : 1cfc >			  ## att_db.c:203:5
 1e04cd6:    00 a0             	r0 = sp + 0			  ## att_db.c:203:5
 1e04cd8:    80 f3 dd 19       	call 13242 <btstack_linked_list_iterator_init : 1e08096 >			  ## att_db.c:203:5
 1e04cdc:    00 a0             	r0 = sp + 0
 1e04cde:    80 f3 4f 12       	call 9374 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## att_db.c:204:12
 1e04ce2:    0a 20             	if (r0 == 0) goto 20 <att_service_handler_for_handle+0x2E : 1e04cf8 >
 1e04ce4:    00 a0             	r0 = sp + 0
 1e04ce6:    80 f3 59 12       	call 9394 <btstack_linked_list_iterator_next : 1e0719c >			  ## att_db.c:205:68
 1e04cea:    21 50             	r1 = h[r0 + 4] (u)			  ## att_db.c:206:22
 1e04cec:    31 f2 f6 8f       	if (r1 > r3) goto -20 <att_service_handler_for_handle+0x12 : 1e04cdc >			  ## att_db.c:206:22
 1e04cf0:    31 50             	r1 = h[r0 + 6] (u)			  ## att_db.c:209:22
 1e04cf2:    31 f2 f3 3f       	if (r1 < r3) goto -26 <att_service_handler_for_handle+0x12 : 1e04cdc >			  ## att_db.c:209:22
 1e04cf6:    01 18             	goto 2 <att_service_handler_for_handle+0x30 : 1e04cfa >			  ## att_db.c:209:22
 1e04cf8:    00 70             	r0 = 0
 1e04cfa:    06 0a             	sp += 12
 1e04cfc:    30 00             	pc = [sp++]			  ## att_db.c:215:1


att_update_value_len:
 1e04cfe:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:251:0
 1e04d00:    fe 0b             	sp += -4			  ## att_db.c:251:0
 1e04d02:    04 08             	r4 = r0			  ## att_db.c:251:0
 1e04d04:    70 68             	r0 = b[r4 + 7] (u)			  ## att_db.c:252:44
 1e04d06:    15 08             	r5 = r1			  ## att_db.c:252:44
 1e04d08:    00 f3 12 00       	if ((r0 & 1) == 0) goto 36 <att_update_value_len+0x32 : 1e04d30 >
 1e04d0c:    40 58             	r0 = h[r4 + 8] (u)			  ## att_db.c:219:38
 1e04d0e:    dd 17             	call -70 <att_service_handler_for_handle : 1e04cca >			  ## att_db.c:219:38
 1e04d10:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e04d12:    c1 ff f0 1c 00 00 	r1 = 7408 <att_global_info+0x10 : 1cf0 >			  ## att_db.c:220:9
 1e04d18:    01 20             	if (r0 == 0) goto 2 <att_update_value_len+0x1E : 1e04d1c >			  ## att_db.c:220:9
 1e04d1a:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e04d1c:    06 42             	r6 = [r1 + 0]
 1e04d1e:    08 2c             	if (r6 == 0) goto 16 <att_update_value_len+0x32 : 1e04d30 >
 1e04d20:    41 58             	r1 = h[r4 + 8] (u)			  ## att_db.c:259:21
 1e04d22:    00 70             	r0 = 0			  ## att_db.c:259:21
 1e04d24:    02 70             	r2 = 0			  ## att_db.c:259:21
 1e04d26:    03 70             	r3 = 0			  ## att_db.c:259:21
 1e04d28:    08 02             	[sp] = r0			  ## att_db.c:259:21
 1e04d2a:    50 08             	r0 = r5			  ## att_db.c:259:21
 1e04d2c:    86 00             	call r6			  ## att_db.c:259:21
 1e04d2e:    88 58             	h[r4 + 16] = r0			  ## att_db.c:259:19
 1e04d30:    02 0a             	sp += 4
 1e04d32:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:261:1


att_copy_value:
 1e04d34:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:265:0
 1e04d36:    fe 0b             	sp += -4			  ## att_db.c:265:0
 1e04d38:    05 08             	r5 = r0			  ## att_db.c:265:0
 1e04d3a:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:268:19
 1e04d3c:    36 08             	r6 = r3
 1e04d3e:    28 08             	r8 = r2
 1e04d40:    17 08             	r7 = r1
 1e04d42:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <att_copy_value+0x2C : 1e04d60 >
 1e04d46:    80 5a             	r0 = h[r5 + 16] (u)			  ## att_db.c:277:34
 1e04d48:    e0 b1             	r0 = r0 - r7			  ## att_db.c:277:44
 1e04d4a:    21 04             	r1 = r0.l (u)			  ## att_db.c:277:44
 1e04d4c:    61 f2 01 80       	if (r1 > r6) goto 2 <att_copy_value+0x1E : 1e04d52 >			  ## att_db.c:277:44
 1e04d50:    06 08             	r6 = r0			  ## att_db.c:278:9
 1e04d52:    51 4a             	r1 = [r5 + 20]			  ## att_db.c:281:24
 1e04d54:    a5 05             	r5 = r6.l (u)			  ## att_db.c:281:31
 1e04d56:    80 08             	r0 = r8			  ## att_db.c:281:5
 1e04d58:    52 08             	r2 = r5			  ## att_db.c:281:5
 1e04d5a:    98 f3 c3 10       	call 3154310 <memcpy : 106ee4 >			  ## att_db.c:281:5
 1e04d5e:    13 18             	goto 38 <att_copy_value+0x52 : 1e04d86 >			  ## att_db.c:281:5
 1e04d60:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:219:38
 1e04d62:    b3 17             	call -154 <att_service_handler_for_handle : 1e04cca >			  ## att_db.c:219:38
 1e04d64:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e04d66:    c1 ff f0 1c 00 00 	r1 = 7408 <att_global_info+0x10 : 1cf0 >			  ## att_db.c:220:9
 1e04d6c:    01 20             	if (r0 == 0) goto 2 <att_copy_value+0x3C : 1e04d70 >			  ## att_db.c:220:9
 1e04d6e:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e04d70:    04 42             	r4 = [r1 + 0]
 1e04d72:    08 28             	if (r4 == 0) goto 16 <att_copy_value+0x50 : 1e04d84 >
 1e04d74:    70 02             	r0 = [sp+28]
 1e04d76:    41 5a             	r1 = h[r5 + 8] (u)			  ## att_db.c:273:16
 1e04d78:    0e 02             	[sp] = r6			  ## att_db.c:273:16
 1e04d7a:    72 08             	r2 = r7			  ## att_db.c:273:16
 1e04d7c:    83 08             	r3 = r8			  ## att_db.c:273:16
 1e04d7e:    84 00             	call r4			  ## att_db.c:273:16
 1e04d80:    05 08             	r5 = r0			  ## att_db.c:273:16
 1e04d82:    01 18             	goto 2 <att_copy_value+0x52 : 1e04d86 >
 1e04d84:    05 70             	r5 = 0
 1e04d86:    50 08             	r0 = r5			  ## att_db.c:283:1
 1e04d88:    02 0a             	sp += 4			  ## att_db.c:283:1
 1e04d8a:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:283:1


att_find_handle:
 1e04d8c:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:185:0
 1e04d8e:    15 08             	r5 = r1			  ## att_db.c:185:0
 1e04d90:    06 08             	r6 = r0			  ## att_db.c:185:0
 1e04d92:    04 70             	r4 = 0			  ## att_db.c:185:0
 1e04d94:    0f 2a             	if (r5 == 0) goto 30 <att_find_handle+0x28 : 1e04db4 >			  ## att_db.c:185:0
 1e04d96:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:114:27
 1e04d9c:    30 40             	r0 = [r0 + 12]			  ## att_db.c:114:27
 1e04d9e:    08 4c             	[r6 + 0] = r0			  ## att_db.c:114:17
 1e04da0:    09 20             	if (r0 == 0) goto 18 <att_find_handle+0x28 : 1e04db4 >			  ## att_db.c:114:17
 1e04da2:    60 08             	r0 = r6			  ## att_db.c:191:9
 1e04da4:    e9 16             	call -558 <att_iterator_fetch_next : 1e04b78 >			  ## att_db.c:191:9
 1e04da6:    40 5c             	r0 = h[r6 + 8] (u)			  ## att_db.c:192:17
 1e04da8:    50 f2 03 00       	if (r0 == r5) goto 6 <att_find_handle+0x26 : 1e04db2 >			  ## att_db.c:192:17
 1e04dac:    00 4c             	r0 = [r6 + 0]
 1e04dae:    f9 31             	if (r0 != 0) goto -14 <att_find_handle+0x16 : 1e04da2 >
 1e04db0:    01 18             	goto 2 <att_find_handle+0x28 : 1e04db4 >
 1e04db2:    14 70             	r4 = 1
 1e04db4:    40 08             	r0 = r4			  ## att_db.c:198:1
 1e04db6:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:198:1


att_notify_write_callbacks:
 1e04db8:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:1130:0
 1e04dba:    f6 0b             	sp += -20			  ## att_db.c:1130:0
 1e04dbc:    14 08             	r4 = r1			  ## att_db.c:1130:0
 1e04dbe:    05 08             	r5 = r0			  ## att_db.c:1130:0
 1e04dc0:    c8 ff e0 1c 00 00 	r8 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:1130:0
 1e04dc6:    81 fc 1c 00       	r1 = r8 + 28			  ## att_db.c:1133:5
 1e04dca:    80 a0             	r0 = sp + 8			  ## att_db.c:1133:5
 1e04dcc:    80 f3 63 19       	call 12998 <btstack_linked_list_iterator_init : 1e08096 >			  ## att_db.c:1133:5
 1e04dd0:    80 f3 d6 11       	call 9132 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## att_db.c:1134:12
 1e04dd4:    11 20             	if (r0 == 0) goto 34 <att_notify_write_callbacks+0x40 : 1e04df8 >			  ## att_db.c:1134:12
 1e04dd6:    07 70             	r7 = 0
 1e04dd8:    80 a0             	r0 = sp + 8
 1e04dda:    80 f3 df 11       	call 9150 <btstack_linked_list_iterator_next : 1e0719c >			  ## att_db.c:1135:68
 1e04dde:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1136:23
 1e04de0:    07 2c             	if (r6 == 0) goto 14 <att_notify_write_callbacks+0x38 : 1e04df0 >			  ## att_db.c:1136:23
 1e04de2:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1139:9
 1e04de4:    1f 02             	[sp+4] = r7			  ## att_db.c:1139:9
 1e04de6:    01 70             	r1 = 0			  ## att_db.c:1139:9
 1e04de8:    03 70             	r3 = 0			  ## att_db.c:1139:9
 1e04dea:    0f 02             	[sp] = r7			  ## att_db.c:1139:9
 1e04dec:    42 08             	r2 = r4			  ## att_db.c:1139:9
 1e04dee:    86 00             	call r6			  ## att_db.c:1139:9
 1e04df0:    80 a0             	r0 = sp + 8
 1e04df2:    80 f3 c5 11       	call 9098 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## att_db.c:1134:12
 1e04df6:    f0 31             	if (r0 != 0) goto -32 <att_notify_write_callbacks+0x20 : 1e04dd8 >
 1e04df8:    06 f6 14 80       	r6 = [r8 + 20]			  ## att_db.c:1141:18
 1e04dfc:    08 2c             	if (r6 == 0) goto 16 <att_notify_write_callbacks+0x56 : 1e04e0e >			  ## att_db.c:1141:18
 1e04dfe:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1144:5
 1e04e00:    02 70             	r2 = 0			  ## att_db.c:1144:5
 1e04e02:    1a 02             	[sp+4] = r2			  ## att_db.c:1144:5
 1e04e04:    01 70             	r1 = 0			  ## att_db.c:1144:5
 1e04e06:    03 70             	r3 = 0			  ## att_db.c:1144:5
 1e04e08:    0a 02             	[sp] = r2			  ## att_db.c:1144:5
 1e04e0a:    42 08             	r2 = r4			  ## att_db.c:1144:5
 1e04e0c:    86 00             	call r6			  ## att_db.c:1144:5
 1e04e0e:    0a 0a             	sp += 20
 1e04e10:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:1145:1


att_handle_request:
 1e04e12:    7f 01             	[--sp] = {rets, r15-r4}			  ## att_db.c:1284:0
 1e04e14:    78 0b             	sp += -272			  ## att_db.c:1284:0
 1e04e16:    16 08             	r6 = r1			  ## att_db.c:1284:0
 1e04e18:    01 6c             	r1 = b[r6 + 0] (u)			  ## att_db.c:1284:0
 1e04e1a:    3d 08             	r13 = r3			  ## att_db.c:1284:0
 1e04e1c:    27 08             	r7 = r2			  ## att_db.c:1284:0
 1e04e1e:    0c 08             	r12 = r0			  ## att_db.c:1284:0
 1e04e20:    10 fc fe ff       	r0 = r1 + -2			  ## att_db.c:1288:5
 1e04e24:    0e 70             	r14 = 0			  ## att_db.c:1288:5
 1e04e26:    ca ff e0 1c 00 00 	r10 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:1288:5
 1e04e2c:    60 e1 32 80       	if (r0 > 22) goto 100 <.GJTIE653_0_0_+0x2E : 1e04e94 >			  ## att_db.c:1288:5
 1e04e30:    0f f7 02 c0       	r15 = h[r12 + 2] (u)			  ## att_db.c:1286:53
 1e04e34:    41 c0             	r1 = r0 << 1			  ## att_db.c:1286:53
 1e04e36:    b1 00             	tbh [r1]			  ## att_db.c:1286:53


.GJTIL653_0_0_:
 1e04e38:    17 00     < 23 : 0x17 >
 1e04e3a:    5e 00     < 94 : 0x5E >
 1e04e3c:    70 00     < 112 : 0x70 >
 1e04e3e:    bb 04     < 1211 : 0x4BB >
 1e04e40:    c7 00     < 199 : 0xC7 >
 1e04e42:    bb 04     < 1211 : 0x4BB >
 1e04e44:    35 01     < 309 : 0x135 >
 1e04e46:    bb 04     < 1211 : 0x4BB >
 1e04e48:    ba 01     < 442 : 0x1BA >
 1e04e4a:    bb 04     < 1211 : 0x4BB >
 1e04e4c:    d2 01     < 466 : 0x1D2 >
 1e04e4e:    bb 04     < 1211 : 0x4BB >
 1e04e50:    ef 01     < 495 : 0x1EF >
 1e04e52:    bb 04     < 1211 : 0x4BB >
 1e04e54:    31 02     < 561 : 0x231 >
 1e04e56:    bb 04     < 1211 : 0x4BB >
 1e04e58:    61 02     < 609 : 0x261 >
 1e04e5a:    bb 04     < 1211 : 0x4BB >
 1e04e5c:    bb 04     < 1211 : 0x4BB >
 1e04e5e:    bb 04     < 1211 : 0x4BB >
 1e04e60:    7f 02     < 639 : 0x27F >
 1e04e62:    bb 04     < 1211 : 0x4BB >
 1e04e64:    a9 02     < 681 : 0x2A9 >
 1e04e66:    11 70             	r1 = 1			  ## att_db.c:411:30
 1e04e68:    60 08             	r0 = r6			  ## att_db.c:411:30
 1e04e6a:    80 f3 82 11       	call 8964 <little_endian_read_16 : 1e07172 >			  ## att_db.c:411:30
 1e04e6e:    01 f7 04 c0       	r1 = h[r12 + 4] (u)			  ## att_db.c:414:41
 1e04e72:    10 f2 01 30       	if (r0 < r1) goto 2 <.GJTIE653_0_0_+0x12 : 1e04e78 >			  ## att_db.c:414:41
 1e04e76:    10 08             	r0 = r1			  ## att_db.c:416:5
 1e04e78:    10 f7 02 c0       	h[r12 + 2] = r0
 1e04e7c:    3e 70             	r14 = 3
 1e04e7e:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:420:24
 1e04e82:    02 f7 02 c0       	r2 = h[r12 + 2] (u)			  ## att_db.c:421:5
 1e04e86:    11 70             	r1 = 1			  ## att_db.c:421:5
 1e04e88:    d0 08             	r0 = r13			  ## att_db.c:421:5
 1e04e8a:    80 f3 dc 26       	call 19896 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:421:5
 1e04e8e:    01 f7 02 c0       	r1 = h[r12 + 2] (u)			  ## att_db.c:422:5
 1e04e92:    3c 18             	goto 120 <.GJTIE653_0_0_+0xA6 : 1e04f0c >			  ## att_db.c:422:5
 1e04e94:    21 e5 8b 14       	if (r1 != 82) goto 2326 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e04e98:    11 70             	r1 = 1			  ## att_db.c:1217:23
 1e04e9a:    60 08             	r0 = r6			  ## att_db.c:1217:23
 1e04e9c:    80 f3 69 11       	call 8914 <little_endian_read_16 : 1e07172 >			  ## att_db.c:1217:23
 1e04ea0:    04 08             	r4 = r0			  ## att_db.c:1217:23
 1e04ea2:    13 17             	call -474 <att_service_handler_for_handle : 1e04cca >			  ## att_db.c:228:38
 1e04ea4:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e04ea6:    a1 fc 14 00       	r1 = r10 + 20			  ## att_db.c:229:9
 1e04eaa:    01 20             	if (r0 == 0) goto 2 <.GJTIE653_0_0_+0x48 : 1e04eae >			  ## att_db.c:229:9
 1e04eac:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e04eae:    08 f6 00 10       	r8 = [r1 + 0]
 1e04eb2:    08 e0 7c 04       	if (r8 == 0) goto 2296 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e04eb6:    80 af             	r0 = sp + 248
 1e04eb8:    41 08             	r1 = r4			  ## att_db.c:1224:14
 1e04eba:    68 17             	call -304 <att_find_handle : 1e04d8c >			  ## att_db.c:1224:14
 1e04ebc:    00 e0 77 04       	if (r0 == 0) goto 2286 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e04ec0:    81 f5 fe 00       	r1 = h[sp+254] (u)			  ## att_db.c:1228:13
 1e04ec4:    00 fb 04 01       	r0 = 260 <DRIVER_RAM_TOTAL+0x12 : 104 >			  ## att_db.c:1228:9
 1e04ec8:    50 b3             	r0 &= r1			  ## att_db.c:1228:9
 1e04eca:    01 ff 04 01 6f 04 	if (r0 != 260) goto 2270 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:1228:9
 1e04ed0:    c0 08             	r0 = r12			  ## att_db.c:1234:9
 1e04ed2:    d8 16             	call -592 <att_validate_security : 1e04c84 >			  ## att_db.c:1234:9
 1e04ed4:    00 e0 6b 14       	if (r0 != 0) goto 2262 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:1234:9
 1e04ed8:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1237:5
 1e04edc:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1237:115
 1e04ee0:    61 04             	r1 = r1.l (u)			  ## att_db.c:1237:5
 1e04ee2:    19 02             	[sp+4] = r1			  ## att_db.c:1237:5
 1e04ee4:    31 9c             	r1 = r6 + 3			  ## att_db.c:1237:98
 1e04ee6:    02 70             	r2 = 0			  ## att_db.c:1237:5
 1e04ee8:    03 70             	r3 = 0			  ## att_db.c:1237:5
 1e04eea:    09 02             	[sp] = r1			  ## att_db.c:1237:5
 1e04eec:    41 08             	r1 = r4			  ## att_db.c:1237:5
 1e04eee:    88 00             	call r8			  ## att_db.c:1237:5
 1e04ef0:    c0 f3 5d 04       	goto 2234 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:1237:5
 1e04ef4:    11 70             	r1 = 1			  ## att_db.c:431:30
 1e04ef6:    60 08             	r0 = r6			  ## att_db.c:431:30
 1e04ef8:    80 f3 3b 11       	call 8822 <little_endian_read_16 : 1e07172 >			  ## att_db.c:431:30
 1e04efc:    02 f7 04 c0       	r2 = h[r12 + 4] (u)			  ## att_db.c:434:41
 1e04f00:    01 08             	r1 = r0			  ## att_db.c:431:30
 1e04f02:    21 f2 01 30       	if (r1 < r2) goto 2 <.GJTIE653_0_0_+0xA2 : 1e04f08 >			  ## att_db.c:431:30
 1e04f06:    21 08             	r1 = r2			  ## att_db.c:436:5
 1e04f08:    11 f7 02 c0       	h[r12 + 2] = r1
 1e04f0c:    00 f7 00 c0       	r0 = h[r12 + 0] (u)
 1e04f10:    80 f3 83 30       	call 24838 <gatt_client_sync_mtu : 1e0b01a >
 1e04f14:    c0 f3 4b 04       	goto 2198 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e04f18:    11 70             	r1 = 1			  ## att_db.c:524:100
 1e04f1a:    1e 70             	r14 = 1			  ## att_db.c:524:100
 1e04f1c:    60 08             	r0 = r6			  ## att_db.c:524:100
 1e04f1e:    80 f3 28 11       	call 8784 <little_endian_read_16 : 1e07172 >			  ## att_db.c:524:100
 1e04f22:    05 08             	r5 = r0			  ## att_db.c:524:100
 1e04f24:    31 70             	r1 = 3			  ## att_db.c:524:142
 1e04f26:    60 08             	r0 = r6			  ## att_db.c:524:142
 1e04f28:    80 f3 23 11       	call 8774 <little_endian_read_16 : 1e07172 >			  ## att_db.c:524:142
 1e04f2c:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:459:35
 1e04f30:    61 04             	r1 = r1.l (u)			  ## att_db.c:459:35
 1e04f32:    06 08             	r6 = r0			  ## att_db.c:524:142
 1e04f34:    61 f2 42 22       	if (r1 >= r6) goto 1156 <.GJTIE653_0_0_+0x556 : 1e053bc >
 1e04f38:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e04f3c:    58 02             	[sp+20] = r0			  ## att_db.c:114:17
 1e04f3e:    08 70             	r8 = 0			  ## att_db.c:114:17
 1e04f40:    37 18             	goto 110 <.GJTIE653_0_0_+0x14A : 1e04fb0 >			  ## att_db.c:114:17
 1e04f42:    40 a1             	r0 = sp + 20
 1e04f44:    19 16             	call -974 <att_iterator_fetch_next : 1e04b78 >			  ## att_db.c:469:9
 1e04f46:    82 f5 1c 00       	r2 = h[sp+28] (u)			  ## att_db.c:470:17
 1e04f4a:    20 fc ff ff       	r0 = r2 + -1			  ## att_db.c:470:13
 1e04f4e:    20 04             	r0 = r0.l (u)			  ## att_db.c:470:13
 1e04f50:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE653_0_0_+0x14E : 1e04fb4 >			  ## att_db.c:470:13
 1e04f54:    52 f2 2c 30       	if (r2 < r5) goto 88 <.GJTIE653_0_0_+0x14A : 1e04fb0 >
 1e04f58:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## att_db.c:482:38
 1e04f5c:    00 71             	r0 = 16			  ## att_db.c:482:34
 1e04f5e:    29 f3 01 10       	if ((r1 & 512) != 0) goto 2 <.GJTIE653_0_0_+0xFE : 1e04f64 >			  ## att_db.c:482:34
 1e04f62:    20 70             	r0 = 2			  ## att_db.c:482:34
 1e04f64:    e6 fd 00 3e       	r3 = r14.l (u)			  ## att_db.c:485:13
 1e04f68:    23 e0 05 30       	if (r3 < 2) goto 10 <.GJTIE653_0_0_+0x110 : 1e04f76 >			  ## att_db.c:485:13
 1e04f6c:    e6 fd 00 48       	r4 = r8.l (u)
 1e04f70:    27 04             	r7 = r0.l (u)
 1e04f72:    47 f2 1f 10       	if (r7 != r4) goto 62 <.GJTIE653_0_0_+0x14E : 1e04fb4 >
 1e04f76:    13 e0 09 10       	if (r3 != 1) goto 18 <.GJTIE653_0_0_+0x126 : 1e04f8c >
 1e04f7a:    21 fd 02 1a       	r1 = r1 & 512			  ## att_db.c:482:44
 1e04f7e:    87 fd 48 11       	r1 = uextra(r1, p:9, l:7)			  ## att_db.c:495:39
 1e04f82:    11 80             	r1 += 1			  ## att_db.c:495:39
 1e04f84:    11 fa 00 d3       	b[r13+r3] = r1			  ## att_db.c:495:37
 1e04f88:    2e 70             	r14 = 2			  ## att_db.c:495:37
 1e04f8a:    08 08             	r8 = r0			  ## att_db.c:495:37
 1e04f8c:    e6 fd 00 38       	r3 = r8.l (u)			  ## att_db.c:500:26
 1e04f90:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:500:13
 1e04f94:    24 92             	r4 = r1 + 2			  ## att_db.c:500:20
 1e04f96:    c7 b8             	r7 = r4 + r3			  ## att_db.c:500:24
 1e04f98:    f7 f2 7e 82       	if (r7 > r15) goto 1276 <.GJTIE653_0_0_+0x632 : 1e05498 >			  ## att_db.c:500:24
 1e04f9c:    d0 08             	r0 = r13			  ## att_db.c:505:9
 1e04f9e:    80 f3 52 26       	call 19620 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:505:9
 1e04fa2:    81 02             	r1 = [sp+32]			  ## att_db.c:508:45
 1e04fa4:    20 05             	r0 = r4.l (u)			  ## att_db.c:508:34
 1e04fa6:    d0 09             	r0 += r13			  ## att_db.c:508:32
 1e04fa8:    32 08             	r2 = r3			  ## att_db.c:508:9
 1e04faa:    98 f3 9b 0f       	call 3153718 <memcpy : 106ee4 >			  ## att_db.c:508:9
 1e04fae:    7e 08             	r14 = r7			  ## att_db.c:508:9
 1e04fb0:    50 02             	r0 = [sp+20]			  ## att_db.c:119:16
 1e04fb2:    c7 31             	if (r0 != 0) goto -114 <.GJTIE653_0_0_+0xDC : 1e04f42 >			  ## att_db.c:119:16
 1e04fb4:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:512:16
 1e04fb8:    10 e0 6e 12       	if (r0 != 1) goto 1244 <.GJTIE653_0_0_+0x632 : 1e05498 >			  ## att_db.c:512:16
 1e04fbc:    10 70             	r0 = 1
 1e04fbe:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e04fc2:    40 70             	r0 = 4			  ## att_db.c:347:24
 1e04fc4:    de 1b             	goto 1980 <.GJTIE653_0_0_+0x91C : 1e05782 >			  ## att_db.c:347:24
 1e04fc6:    11 70             	r1 = 1			  ## att_db.c:609:102
 1e04fc8:    14 70             	r4 = 1			  ## att_db.c:609:102
 1e04fca:    60 08             	r0 = r6			  ## att_db.c:609:102
 1e04fcc:    80 f3 d1 10       	call 8610 <little_endian_read_16 : 1e07172 >			  ## att_db.c:609:102
 1e04fd0:    05 08             	r5 = r0			  ## att_db.c:609:102
 1e04fd2:    31 70             	r1 = 3			  ## att_db.c:610:13
 1e04fd4:    60 08             	r0 = r6			  ## att_db.c:610:13
 1e04fd6:    80 f3 cc 10       	call 8600 <little_endian_read_16 : 1e07172 >			  ## att_db.c:610:13
 1e04fda:    08 08             	r8 = r0			  ## att_db.c:610:13
 1e04fdc:    51 70             	r1 = 5			  ## att_db.c:610:55
 1e04fde:    5e 70             	r14 = 5			  ## att_db.c:610:55
 1e04fe0:    60 08             	r0 = r6			  ## att_db.c:610:55
 1e04fe2:    80 f3 c6 10       	call 8588 <little_endian_read_16 : 1e07172 >			  ## att_db.c:610:55
 1e04fe6:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:550:35
 1e04fea:    61 04             	r1 = r1.l (u)			  ## att_db.c:550:35
 1e04fec:    09 08             	r9 = r0			  ## att_db.c:610:55
 1e04fee:    81 f2 f2 21       	if (r1 >= r8) goto 996 <.GJTIE653_0_0_+0x570 : 1e053d6 >
 1e04ff2:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e04ff6:    7a 9c             	r10 = r6 + 7			  ## att_db.c:610:113
 1e04ff8:    71 fc f9 ff       	r1 = r7 + -7			  ## att_db.c:608:37
 1e04ffc:    b8 02             	[sp+44] = r0			  ## att_db.c:114:17
 1e04ffe:    6b 04             	r11 = r1.l (u)			  ## att_db.c:114:17
 1e05000:    0c 70             	r12 = 0			  ## att_db.c:114:17
 1e05002:    07 70             	r7 = 0
 1e05004:    3a 18             	goto 116 <.GJTIE653_0_0_+0x214 : 1e0507a >
 1e05006:    c0 a2             	r0 = sp + 44
 1e05008:    b7 15             	call -1170 <att_iterator_fetch_next : 1e04b78 >			  ## att_db.c:561:9
 1e0500a:    86 f5 34 00       	r6 = h[sp+52] (u)			  ## att_db.c:563:16
 1e0500e:    02 2c             	if (r6 == 0) goto 4 <.GJTIE653_0_0_+0x1AE : 1e05014 >
 1e05010:    56 f2 33 30       	if (r6 < r5) goto 102 <.GJTIE653_0_0_+0x214 : 1e0507a >
 1e05014:    86 f2 33 80       	if (r6 > r8) goto 102 <.GJTIE653_0_0_+0x218 : 1e0507e >
 1e05018:    e6 fd 00 0c       	r0 = r12.l (u)			  ## att_db.c:571:22
 1e0501c:    15 20             	if (r0 == 0) goto 42 <.GJTIE653_0_0_+0x1E2 : 1e05048 >			  ## att_db.c:571:22
 1e0501e:    0a 2c             	if (r6 == 0) goto 20 <.GJTIE653_0_0_+0x1CE : 1e05034 >
 1e05020:    c0 a2             	r0 = sp + 44
 1e05022:    01 fb 00 28       	r1 = 10240 <lrc.7+0x80 : 2800 >			  ## att_db.c:572:32
 1e05026:    e8 15             	call -1072 <att_iterator_match_uuid16 : 1e04bf8 >			  ## att_db.c:572:32
 1e05028:    05 30             	if (r0 != 0) goto 10 <.GJTIE653_0_0_+0x1CE : 1e05034 >
 1e0502a:    c0 a2             	r0 = sp + 44
 1e0502c:    01 fb 01 28       	r1 = 10241 <lrc.7+0x81 : 2801 >			  ## att_db.c:572:93
 1e05030:    e3 15             	call -1082 <att_iterator_match_uuid16 : 1e04bf8 >			  ## att_db.c:572:93
 1e05032:    0d 20             	if (r0 == 0) goto 26 <.GJTIE653_0_0_+0x1E8 : 1e0504e >
 1e05034:    21 05             	r1 = r4.l (u)			  ## att_db.c:575:13
 1e05036:    d0 08             	r0 = r13			  ## att_db.c:575:13
 1e05038:    72 08             	r2 = r7			  ## att_db.c:575:13
 1e0503a:    80 f3 04 26       	call 19464 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:575:13
 1e0503e:    24 80             	r4 += 2			  ## att_db.c:576:20
 1e05040:    20 05             	r0 = r4.l (u)			  ## att_db.c:580:17
 1e05042:    40 80             	r0 += 4			  ## att_db.c:580:24
 1e05044:    f0 f2 1b 80       	if (r0 > r15) goto 54 <.GJTIE653_0_0_+0x218 : 1e0507e >			  ## att_db.c:580:24
 1e05048:    0c 70             	r12 = 0
 1e0504a:    07 70             	r7 = 0
 1e0504c:    16 2c             	if (r6 == 0) goto 44 <.GJTIE653_0_0_+0x214 : 1e0507a >
 1e0504e:    c0 a2             	r0 = sp + 44
 1e05050:    91 08             	r1 = r9			  ## att_db.c:589:26
 1e05052:    d2 15             	call -1116 <att_iterator_match_uuid16 : 1e04bf8 >			  ## att_db.c:589:26
 1e05054:    67 08             	r7 = r6
 1e05056:    11 20             	if (r0 == 0) goto 34 <.GJTIE653_0_0_+0x214 : 1e0507a >
 1e05058:    80 f5 3c 00       	r0 = h[sp+60] (u)			  ## att_db.c:589:96
 1e0505c:    b0 f2 0d 10       	if (r0 != r11) goto 26 <.GJTIE653_0_0_+0x214 : 1e0507a >			  ## att_db.c:589:96
 1e05060:    01 03             	r1 = [sp+64]			  ## att_db.c:589:136
 1e05062:    a0 08             	r0 = r10			  ## att_db.c:589:109
 1e05064:    b2 08             	r2 = r11			  ## att_db.c:589:109
 1e05066:    98 f3 41 0f       	call 3153538 <memcmp : 106eec >			  ## att_db.c:589:109
 1e0506a:    07 30             	if (r0 != 0) goto 14 <.GJTIE653_0_0_+0x214 : 1e0507a >			  ## att_db.c:589:109
 1e0506c:    21 05             	r1 = r4.l (u)			  ## att_db.c:591:13
 1e0506e:    d0 08             	r0 = r13			  ## att_db.c:591:13
 1e05070:    62 08             	r2 = r6			  ## att_db.c:591:13
 1e05072:    80 f3 e8 25       	call 19408 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:591:13
 1e05076:    24 80             	r4 += 2			  ## att_db.c:592:20
 1e05078:    1c 70             	r12 = 1
 1e0507a:    b0 02             	r0 = [sp+44]			  ## att_db.c:119:16
 1e0507c:    c4 31             	if (r0 != 0) goto -120 <.GJTIE653_0_0_+0x1A0 : 1e05006 >			  ## att_db.c:119:16
 1e0507e:    20 05             	r0 = r4.l (u)			  ## att_db.c:597:16
 1e05080:    10 e0 0c 12       	if (r0 != 1) goto 1048 <.GJTIE653_0_0_+0x636 : 1e0549c >			  ## att_db.c:597:9
 1e05084:    10 70             	r0 = 1
 1e05086:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0508a:    60 70             	r0 = 6			  ## att_db.c:348:24
 1e0508c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05090:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e05092:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e05094:    52 08             	r2 = r5			  ## att_db.c:349:5
 1e05096:    80 f3 d6 25       	call 19372 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:349:5
 1e0509a:    a0 70             	r0 = 10			  ## att_db.c:350:24
 1e0509c:    10 f9 04 d0       	b[r13 + 4] = r0			  ## att_db.c:350:24
 1e050a0:    86 1b             	goto 1804 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:350:24
 1e050a2:    22 70             	r2 = 2			  ## att_db.c:730:5
 1e050a4:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE653_0_0_+0x244 : 1e050aa >			  ## att_db.c:730:5
 1e050a8:    02 71             	r2 = 16			  ## att_db.c:730:5
 1e050aa:    11 70             	r1 = 1			  ## att_db.c:733:96
 1e050ac:    13 70             	r3 = 1			  ## att_db.c:733:96
 1e050ae:    60 08             	r0 = r6			  ## att_db.c:733:96
 1e050b0:    80 f3 5f 10       	call 8382 <little_endian_read_16 : 1e07172 >			  ## att_db.c:733:96
 1e050b4:    07 08             	r7 = r0			  ## att_db.c:733:96
 1e050b6:    31 70             	r1 = 3			  ## att_db.c:733:138
 1e050b8:    60 08             	r0 = r6			  ## att_db.c:733:138
 1e050ba:    80 f3 5a 10       	call 8372 <little_endian_read_16 : 1e07172 >			  ## att_db.c:733:138
 1e050be:    71 fc ff ff       	r1 = r7 + -1			  ## att_db.c:625:35
 1e050c2:    61 04             	r1 = r1.l (u)			  ## att_db.c:625:35
 1e050c4:    08 08             	r8 = r0			  ## att_db.c:733:138
 1e050c6:    01 f2 90 21       	if (r1 >= r0) goto 800 <.GJTIE653_0_0_+0x584 : 1e053ea >			  ## att_db.c:733:138
 1e050ca:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e050ce:    18 03             	[sp+68] = r0			  ## att_db.c:114:17
 1e050d0:    00 e0 4c 02       	if (r0 == 0) goto 1176 <.GJTIE653_0_0_+0x706 : 1e0556c >
 1e050d4:    59 9c             	r9 = r6 + 5			  ## att_db.c:733:201
 1e050d6:    f0 fc fe ff       	r0 = r15 + -2			  ## att_db.c:733:201
 1e050da:    48 02             	[sp+16] = r0			  ## att_db.c:733:201
 1e050dc:    f0 fc fc ff       	r0 = r15 + -4			  ## att_db.c:733:201
 1e050e0:    38 02             	[sp+12] = r0			  ## att_db.c:733:201
 1e050e2:    1e 70             	r14 = 1			  ## att_db.c:733:201
 1e050e4:    0b 70             	r11 = 0			  ## att_db.c:733:201
 1e050e6:    a6 04             	r6 = r2.l (u)			  ## att_db.c:733:201
 1e050e8:    05 70             	r5 = 0
 1e050ea:    b4 08             	r4 = r11
 1e050ec:    4b 08             	r11 = r4
 1e050ee:    40 a4             	r0 = sp + 68
 1e050f0:    43 15             	call -1402 <att_iterator_fetch_next : 1e04b78 >			  ## att_db.c:638:9
 1e050f2:    84 f5 4c 00       	r4 = h[sp+76] (u)			  ## att_db.c:640:17
 1e050f6:    0a 70             	r10 = 0			  ## att_db.c:640:17
 1e050f8:    04 e0 52 03       	if (r4 == 0) goto 1700 <.GJTIE653_0_0_+0x93A : 1e057a0 >			  ## att_db.c:640:17
 1e050fc:    74 f2 07 30       	if (r4 < r7) goto 14 <.GJTIE653_0_0_+0x2A8 : 1e0510e >
 1e05100:    84 f2 4e 83       	if (r4 > r8) goto 1692 <.GJTIE653_0_0_+0x93A : 1e057a0 >
 1e05104:    40 a4             	r0 = sp + 68
 1e05106:    91 08             	r1 = r9			  ## att_db.c:651:14
 1e05108:    62 08             	r2 = r6			  ## att_db.c:651:14
 1e0510a:    8e 15             	call -1252 <att_iterator_match_uuid : 1e04c28 >			  ## att_db.c:651:14
 1e0510c:    03 30             	if (r0 != 0) goto 6 <.GJTIE653_0_0_+0x2AE : 1e05114 >
 1e0510e:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e05110:    ee 31             	if (r0 != 0) goto -36 <.GJTIE653_0_0_+0x288 : 1e050ee >			  ## att_db.c:119:16
 1e05112:    46 1b             	goto 1676 <.GJTIE653_0_0_+0x93A : 1e057a0 >			  ## att_db.c:119:16
 1e05114:    81 f5 4a 00       	r1 = h[sp+74] (u)			  ## att_db.c:656:17
 1e05118:    21 f3 09 10       	if ((r1 & 2) != 0) goto 18 <.GJTIE653_0_0_+0x2C8 : 1e0512e >			  ## att_db.c:656:13
 1e0511c:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## att_db.c:657:17
 1e05122:    0b f0 01 00       	if ((r11 & r0) == 0) goto 2 <.GJTIE653_0_0_+0x2C2 : 1e05128 >			  ## att_db.c:657:17
 1e05126:    b4 08             	r4 = r11			  ## att_db.c:657:17
 1e05128:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e0512a:    e0 31             	if (r0 != 0) goto -64 <.GJTIE653_0_0_+0x286 : 1e050ec >			  ## att_db.c:119:16
 1e0512c:    38 1b             	goto 1648 <.GJTIE653_0_0_+0x938 : 1e0579e >			  ## att_db.c:119:16
 1e0512e:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE653_0_0_+0x2D4 : 1e0513a >
 1e05132:    c0 08             	r0 = r12			  ## att_db.c:665:26
 1e05134:    a7 15             	call -1202 <att_validate_security : 1e04c84 >			  ## att_db.c:665:26
 1e05136:    00 e0 5c 13       	if (r0 != 0) goto 1720 <.GJTIE653_0_0_+0x98C : 1e057f2 >			  ## att_db.c:665:26
 1e0513a:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:671:9
 1e0513e:    40 a4             	r0 = sp + 68			  ## att_db.c:671:9
 1e05140:    de 15             	call -1092 <att_update_value_len : 1e04cfe >			  ## att_db.c:671:9
 1e05142:    83 f5 54 00       	r3 = h[sp+84] (u)			  ## att_db.c:674:41
 1e05146:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:675:13
 1e0514a:    20 96             	r0 = r3 + 2			  ## att_db.c:674:36
 1e0514c:    21 e0 04 30       	if (r1 < 2) goto 8 <.GJTIE653_0_0_+0x2F2 : 1e05158 >			  ## att_db.c:674:36
 1e05150:    22 04             	r2 = r0.l (u)
 1e05152:    64 05             	r4 = r5.l (u)
 1e05154:    24 f2 24 13       	if (r4 != r2) goto 1608 <.GJTIE653_0_0_+0x93A : 1e057a0 >
 1e05158:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE653_0_0_+0x2FE : 1e05164 >
 1e0515c:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:684:37
 1e05160:    2e 70             	r14 = 2			  ## att_db.c:684:37
 1e05162:    05 08             	r5 = r0			  ## att_db.c:684:37
 1e05164:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:689:13
 1e05168:    60 05             	r0 = r5.l (u)			  ## att_db.c:689:22
 1e0516a:    10 09             	r0 += r1			  ## att_db.c:689:20
 1e0516c:    f0 f2 09 90       	if (r0 <= r15) goto 18 <.GJTIE653_0_0_+0x31C : 1e05182 >			  ## att_db.c:689:20
 1e05170:    21 e0 1a 83       	if (r1 > 2) goto 1588 <.GJTIE653_0_0_+0x942 : 1e057a8 >
 1e05174:    32 02             	r2 = [sp+12]
 1e05176:    92 f5 54 00       	h[sp+84] = r2			  ## att_db.c:693:26
 1e0517a:    40 02             	r0 = [sp+16]			  ## att_db.c:694:32
 1e0517c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:694:32
 1e05180:    23 08             	r3 = r2			  ## att_db.c:700:85
 1e05182:    82 f5 4c 00       	r2 = h[sp+76] (u)			  ## att_db.c:698:9
 1e05186:    d0 08             	r0 = r13			  ## att_db.c:698:9
 1e05188:    80 f3 5d 25       	call 19130 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:698:9
 1e0518c:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:700:33
 1e05190:    08 02             	[sp] = r0			  ## att_db.c:700:33
 1e05192:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:699:16
 1e05196:    24 04             	r4 = r0.l (u)			  ## att_db.c:700:74
 1e05198:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:700:72
 1e0519c:    e3 04             	r3 = r3.l (u)			  ## att_db.c:700:33
 1e0519e:    40 a4             	r0 = sp + 68			  ## att_db.c:700:33
 1e051a0:    01 70             	r1 = 0			  ## att_db.c:700:33
 1e051a2:    c8 15             	call -1136 <att_copy_value : 1e04d34 >			  ## att_db.c:700:33
 1e051a4:    11 03             	r1 = [sp+68]			  ## att_db.c:119:16
 1e051a6:    0e b1             	r14 = r0 + r4			  ## att_db.c:701:16
 1e051a8:    a0 33             	if (r1 != 0) goto -192 <.GJTIE653_0_0_+0x284 : 1e050ea >			  ## att_db.c:701:16
 1e051aa:    fa 1a             	goto 1524 <.GJTIE653_0_0_+0x93A : 1e057a0 >			  ## att_db.c:701:16
 1e051ac:    11 70             	r1 = 1			  ## att_db.c:784:88
 1e051ae:    17 70             	r7 = 1			  ## att_db.c:784:88
 1e051b0:    60 08             	r0 = r6			  ## att_db.c:784:88
 1e051b2:    80 f3 de 0f       	call 8124 <little_endian_read_16 : 1e07172 >			  ## att_db.c:784:88
 1e051b6:    04 08             	r4 = r0			  ## att_db.c:784:88
 1e051b8:    c0 a5             	r0 = sp + 92
 1e051ba:    41 08             	r1 = r4			  ## att_db.c:746:14
 1e051bc:    e7 15             	call -1074 <att_find_handle : 1e04d8c >			  ## att_db.c:746:14
 1e051be:    00 e0 23 01       	if (r0 == 0) goto 582 <.GJTIE653_0_0_+0x5A2 : 1e05408 >
 1e051c2:    81 f5 62 00       	r1 = h[sp+98] (u)			  ## att_db.c:752:13
 1e051c6:    21 f3 47 11       	if ((r1 & 2) != 0) goto 654 <.GJTIE653_0_0_+0x5F2 : 1e05458 >			  ## att_db.c:752:9
 1e051ca:    10 70             	r0 = 1
 1e051cc:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e051d0:    a0 70             	r0 = 10			  ## att_db.c:348:24
 1e051d2:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e051d6:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e051d8:    23 70             	r3 = 2			  ## att_db.c:349:5
 1e051da:    e8 19             	goto 976 <.GJTIE653_0_0_+0x746 : 1e055ac >			  ## att_db.c:349:5
 1e051dc:    11 70             	r1 = 1			  ## att_db.c:838:93
 1e051de:    14 70             	r4 = 1			  ## att_db.c:838:93
 1e051e0:    60 08             	r0 = r6			  ## att_db.c:838:93
 1e051e2:    80 f3 c6 0f       	call 8076 <little_endian_read_16 : 1e07172 >			  ## att_db.c:838:93
 1e051e6:    07 08             	r7 = r0			  ## att_db.c:838:93
 1e051e8:    31 70             	r1 = 3			  ## att_db.c:838:135
 1e051ea:    60 08             	r0 = r6			  ## att_db.c:838:135
 1e051ec:    80 f3 c1 0f       	call 8066 <little_endian_read_16 : 1e07172 >			  ## att_db.c:838:135
 1e051f0:    06 08             	r6 = r0			  ## att_db.c:838:135
 1e051f2:    40 a7             	r0 = sp + 116
 1e051f4:    71 08             	r1 = r7			  ## att_db.c:796:14
 1e051f6:    ca 15             	call -1132 <att_find_handle : 1e04d8c >			  ## att_db.c:796:14
 1e051f8:    00 e0 13 01       	if (r0 == 0) goto 550 <.GJTIE653_0_0_+0x5BC : 1e05422 >
 1e051fc:    81 f5 7a 00       	r1 = h[sp+122] (u)			  ## att_db.c:802:13
 1e05200:    21 f3 35 11       	if ((r1 & 2) != 0) goto 618 <.GJTIE653_0_0_+0x608 : 1e0546e >			  ## att_db.c:802:9
 1e05204:    10 70             	r0 = 1
 1e05206:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0520a:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e0520c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05210:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e05212:    23 70             	r3 = 2			  ## att_db.c:349:5
 1e05214:    f0 18             	goto 480 <.GJTIE653_0_0_+0x590 : 1e053f6 >			  ## att_db.c:349:5
 1e05216:    c0 ff ff ff 01 00 	r0 = 131071 <text_size+0x74B3 : 1ffff >			  ## att_db.c:908:36
 1e0521c:    70 09             	r0 += r7			  ## att_db.c:908:36
 1e0521e:    40 d0             	r0 = r0 >> 1			  ## att_db.c:908:41
 1e05220:    28 04             	r8 = r0.l (u)			  ## att_db.c:909:97
 1e05222:    08 e0 07 01       	if (r8 == 0) goto 526 <.GJTIE653_0_0_+0x5CE : 1e05434 >
 1e05226:    1a 9c             	r10 = r6 + 1			  ## att_db.c:909:111
 1e05228:    f9 fc ff ff       	r9 = r15 + -1
 1e0522c:    1e 70             	r14 = 1
 1e0522e:    07 70             	r7 = 0
 1e05230:    06 70             	r6 = 0
 1e05232:    a0 08             	r0 = r10			  ## att_db.c:860:18
 1e05234:    71 08             	r1 = r7			  ## att_db.c:860:18
 1e05236:    80 f3 9c 0f       	call 7992 <little_endian_read_16 : 1e07172 >			  ## att_db.c:860:18
 1e0523a:    04 08             	r4 = r0			  ## att_db.c:860:18
 1e0523c:    04 e0 a0 01       	if (r4 == 0) goto 832 <.GJTIE653_0_0_+0x71A : 1e05580 >			  ## att_db.c:860:18
 1e05240:    c0 a8             	r0 = sp + 140
 1e05242:    41 08             	r1 = r4			  ## att_db.c:868:18
 1e05244:    a3 15             	call -1210 <att_find_handle : 1e04d8c >			  ## att_db.c:868:18
 1e05246:    00 e0 a5 01       	if (r0 == 0) goto 842 <.GJTIE653_0_0_+0x72E : 1e05594 >
 1e0524a:    81 f5 92 00       	r1 = h[sp+146] (u)			  ## att_db.c:874:17
 1e0524e:    01 f3 a5 11       	if ((r1 & 2) == 0) goto 842 <.GJTIE653_0_0_+0x736 : 1e0559c >			  ## att_db.c:874:17
 1e05252:    20 f3 05 10       	if ((r1 & 1) != 0) goto 10 <.GJTIE653_0_0_+0x3FA : 1e05260 >
 1e05256:    c0 08             	r0 = r12			  ## att_db.c:881:26
 1e05258:    15 15             	call -1494 <att_validate_security : 1e04c84 >			  ## att_db.c:881:26
 1e0525a:    03 08             	r3 = r0			  ## att_db.c:881:26
 1e0525c:    03 e0 9f 11       	if (r3 != 0) goto 830 <.GJTIE653_0_0_+0x738 : 1e0559e >			  ## att_db.c:881:26
 1e05260:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:886:9
 1e05264:    c0 a8             	r0 = sp + 140			  ## att_db.c:886:9
 1e05266:    4b 15             	call -1386 <att_update_value_len : 1e04cfe >			  ## att_db.c:886:9
 1e05268:    80 f5 9c 00       	r0 = h[sp+156] (u)			  ## att_db.c:889:25
 1e0526c:    e6 fd 00 4e       	r4 = r14.l (u)			  ## att_db.c:889:13
 1e05270:    01 b1             	r1 = r0 + r4			  ## att_db.c:889:20
 1e05272:    f1 f2 03 90       	if (r1 <= r15) goto 6 <.GJTIE653_0_0_+0x416 : 1e0527c >			  ## att_db.c:889:20
 1e05276:    99 f5 9c 00       	h[sp+156] = r9			  ## att_db.c:890:26
 1e0527a:    90 08             	r0 = r9			  ## att_db.c:894:85
 1e0527c:    05 f7 00 c0       	r5 = h[r12 + 0] (u)			  ## att_db.c:894:33
 1e05280:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:894:72
 1e05284:    23 04             	r3 = r0.l (u)			  ## att_db.c:894:33
 1e05286:    c0 a8             	r0 = sp + 140			  ## att_db.c:894:33
 1e05288:    01 70             	r1 = 0			  ## att_db.c:894:33
 1e0528a:    0d 02             	[sp] = r5			  ## att_db.c:894:33
 1e0528c:    53 15             	call -1370 <att_copy_value : 1e04d34 >			  ## att_db.c:894:33
 1e0528e:    0e b1             	r14 = r0 + r4			  ## att_db.c:895:16
 1e05290:    16 80             	r6 += 1			  ## att_db.c:859:35
 1e05292:    27 80             	r7 += 2			  ## att_db.c:859:19
 1e05294:    86 f2 cd bf       	ifs (r6 < r8) goto -102 <.GJTIE653_0_0_+0x3CC : 1e05232 >			  ## att_db.c:859:19
 1e05298:    ce 18             	goto 412 <.GJTIE653_0_0_+0x5D0 : 1e05436 >			  ## att_db.c:859:19
 1e0529a:    24 70             	r4 = 2			  ## att_db.c:1032:5
 1e0529c:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE653_0_0_+0x43C : 1e052a2 >			  ## att_db.c:1032:5
 1e052a0:    04 71             	r4 = 16			  ## att_db.c:1032:5
 1e052a2:    11 70             	r1 = 1			  ## att_db.c:1035:102
 1e052a4:    13 70             	r3 = 1			  ## att_db.c:1035:102
 1e052a6:    60 08             	r0 = r6			  ## att_db.c:1035:102
 1e052a8:    80 f3 63 0f       	call 7878 <little_endian_read_16 : 1e07172 >			  ## att_db.c:1035:102
 1e052ac:    05 08             	r5 = r0			  ## att_db.c:1035:102
 1e052ae:    31 70             	r1 = 3			  ## att_db.c:1035:144
 1e052b0:    60 08             	r0 = r6			  ## att_db.c:1035:144
 1e052b2:    80 f3 5e 0f       	call 7868 <little_endian_read_16 : 1e07172 >			  ## att_db.c:1035:144
 1e052b6:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:939:35
 1e052ba:    61 04             	r1 = r1.l (u)			  ## att_db.c:939:35
 1e052bc:    08 08             	r8 = r0			  ## att_db.c:1035:144
 1e052be:    01 f2 9d 20       	if (r1 >= r0) goto 314 <.GJTIE653_0_0_+0x596 : 1e053fc >
 1e052c2:    56 80             	r6 += 5			  ## att_db.c:1035:207
 1e052c4:    01 70             	r1 = 0
 1e052c6:    87 e0 04 30       	if (r7 < 8) goto 8 <.GJTIE653_0_0_+0x46C : 1e052d2 >
 1e052ca:    60 08             	r0 = r6			  ## att_db.c:94:10
 1e052cc:    82 14             	call -1788 <is_Bluetooth_Base_UUID : 1e04bd2 >			  ## att_db.c:94:10
 1e052ce:    c1 70             	r1 = 12			  ## att_db.c:94:10
 1e052d0:    d9 20             	if (r0 == 0) goto 434 <.GJTIE653_0_0_+0x61E : 1e05484 >			  ## att_db.c:94:10
 1e052d2:    60 08             	r0 = r6			  ## att_db.c:97:12
 1e052d4:    80 f3 4d 0f       	call 7834 <little_endian_read_16 : 1e07172 >			  ## att_db.c:97:12
 1e052d8:    70 b0             	r0 &= 4294967294			  ## att_db.c:945:45
 1e052da:    21 ff 28 0a d2 00 	if (r0 != 10240) goto 420 <.GJTIE653_0_0_+0x61E : 1e05484 >			  ## att_db.c:945:45
 1e052e0:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e052e4:    10 f5 a4 00       	[sp+164] = r0			  ## att_db.c:114:17
 1e052e8:    02 70             	r2 = 0			  ## att_db.c:114:17
 1e052ea:    1e 70             	r14 = 1
 1e052ec:    20 05             	r0 = r4.l (u)
 1e052ee:    38 02             	[sp+12] = r0
 1e052f0:    04 70             	r4 = 0
 1e052f2:    0c 70             	r12 = 0
 1e052f4:    00 70             	r0 = 0
 1e052f6:    48 02             	[sp+16] = r0
 1e052f8:    ea 19             	goto 980 <.GJTIE653_0_0_+0x868 : 1e056ce >
 1e052fa:    11 70             	r1 = 1			  ## att_db.c:1048:23
 1e052fc:    14 70             	r4 = 1			  ## att_db.c:1048:23
 1e052fe:    60 08             	r0 = r6			  ## att_db.c:1048:23
 1e05300:    80 f3 37 0f       	call 7790 <little_endian_read_16 : 1e07172 >			  ## att_db.c:1048:23
 1e05304:    08 08             	r8 = r0			  ## att_db.c:1048:23
 1e05306:    c0 ab             	r0 = sp + 188			  ## att_db.c:1048:23
 1e05308:    81 08             	r1 = r8			  ## att_db.c:1050:14
 1e0530a:    40 15             	call -1408 <att_find_handle : 1e04d8c >			  ## att_db.c:1050:14
 1e0530c:    96 20             	if (r0 == 0) goto 300 <.GJTIE653_0_0_+0x5D4 : 1e0543a >
 1e0530e:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e05310:    dc 14             	call -1608 <att_service_handler_for_handle : 1e04cca >			  ## att_db.c:228:38
 1e05312:    a1 fc 14 00       	r1 = r10 + 20			  ## att_db.c:229:9
 1e05316:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e05318:    01 20             	if (r0 == 0) goto 2 <.GJTIE653_0_0_+0x4B6 : 1e0531c >			  ## att_db.c:230:25
 1e0531a:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e0531c:    04 42             	r4 = [r1 + 0]
 1e0531e:    06 28             	if (r4 == 0) goto 12 <.GJTIE653_0_0_+0x4C6 : 1e0532c >
 1e05320:    81 f5 c2 00       	r1 = h[sp+194] (u)			  ## att_db.c:1058:13
 1e05324:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE653_0_0_+0x4C6 : 1e0532c >			  ## att_db.c:1058:13
 1e05328:    28 f3 5d 11       	if ((r1 & 256) != 0) goto 698 <.GJTIE653_0_0_+0x780 : 1e055e6 >
 1e0532c:    10 70             	r0 = 1
 1e0532e:    10 f9 00 d0       	b[r13 + 0] = r0
 1e05332:    20 71             	r0 = 18
 1e05334:    21 18             	goto 66 <.GJTIE653_0_0_+0x512 : 1e05378 >
 1e05336:    11 70             	r1 = 1			  ## att_db.c:1087:23
 1e05338:    60 08             	r0 = r6			  ## att_db.c:1087:23
 1e0533a:    80 f3 1a 0f       	call 7732 <little_endian_read_16 : 1e07172 >			  ## att_db.c:1087:23
 1e0533e:    08 08             	r8 = r0			  ## att_db.c:1087:23
 1e05340:    31 70             	r1 = 3			  ## att_db.c:1088:23
 1e05342:    60 08             	r0 = r6			  ## att_db.c:1088:23
 1e05344:    80 f3 15 0f       	call 7722 <little_endian_read_16 : 1e07172 >			  ## att_db.c:1088:23
 1e05348:    09 08             	r9 = r0			  ## att_db.c:1088:23
 1e0534a:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e0534c:    be 14             	call -1668 <att_service_handler_for_handle : 1e04cca >			  ## att_db.c:228:38
 1e0534e:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e05350:    a1 fc 14 00       	r1 = r10 + 20			  ## att_db.c:229:9
 1e05354:    01 20             	if (r0 == 0) goto 2 <.GJTIE653_0_0_+0x4F2 : 1e05358 >			  ## att_db.c:229:9
 1e05356:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e05358:    04 42             	r4 = [r1 + 0]
 1e0535a:    0a 28             	if (r4 == 0) goto 20 <.GJTIE653_0_0_+0x50A : 1e05370 >
 1e0535c:    40 ad             	r0 = sp + 212
 1e0535e:    81 08             	r1 = r8			  ## att_db.c:1094:14
 1e05360:    15 15             	call -1494 <att_find_handle : 1e04d8c >			  ## att_db.c:1094:14
 1e05362:    a1 20             	if (r0 == 0) goto 322 <.GJTIE653_0_0_+0x640 : 1e054a6 >
 1e05364:    81 f5 da 00       	r1 = h[sp+218] (u)			  ## att_db.c:1098:13
 1e05368:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE653_0_0_+0x50A : 1e05370 >			  ## att_db.c:1098:13
 1e0536c:    28 f3 55 11       	if ((r1 & 256) != 0) goto 682 <.GJTIE653_0_0_+0x7B4 : 1e0561a >
 1e05370:    10 70             	r0 = 1
 1e05372:    10 f9 00 d0       	b[r13 + 0] = r0
 1e05376:    60 71             	r0 = 22
 1e05378:    10 f9 01 d0       	b[r13 + 1] = r0
 1e0537c:    21 70             	r1 = 2
 1e0537e:    d0 08             	r0 = r13
 1e05380:    82 08             	r2 = r8
 1e05382:    80 f3 60 24       	call 18624 <little_endian_store_16 : 1e09c46 >
 1e05386:    30 70             	r0 = 3
 1e05388:    04 1a             	goto 1032 <.GJTIE653_0_0_+0x92C : 1e05792 >
 1e0538a:    10 6c             	r0 = b[r6 + 1] (u)			  ## att_db.c:1186:9
 1e0538c:    63 20             	if (r0 == 0) goto 198 <.GJTIE653_0_0_+0x5EE : 1e05454 >			  ## att_db.c:1186:9
 1e0538e:    00 f9 18 a0       	r0 = b[r10 + 24] (u)			  ## att_db.c:1188:21
 1e05392:    8d 20             	if (r0 == 0) goto 282 <.GJTIE653_0_0_+0x648 : 1e054ae >			  ## att_db.c:1188:21
 1e05394:    31 70             	r1 = 3			  ## att_db.c:1173:5
 1e05396:    c0 08             	r0 = r12			  ## att_db.c:1173:5
 1e05398:    0f 15             	call -1506 <att_notify_write_callbacks : 1e04db8 >			  ## att_db.c:1173:5
 1e0539a:    03 f9 18 a0       	r3 = b[r10 + 24] (u)			  ## att_db.c:1194:43
 1e0539e:    02 f7 1a a0       	r2 = h[r10 + 26] (u)			  ## att_db.c:349:5
 1e053a2:    00 70             	r0 = 0			  ## att_db.c:349:5
 1e053a4:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:325:42
 1e053a8:    10 f7 1a a0       	h[r10 + 26] = r0			  ## att_db.c:326:44
 1e053ac:    10 70             	r0 = 1			  ## att_db.c:326:44
 1e053ae:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e053b2:    80 71             	r0 = 24			  ## att_db.c:347:24
 1e053b4:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e053b8:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e053ba:    ea 18             	goto 468 <.GJTIE653_0_0_+0x72A : 1e05590 >			  ## att_db.c:349:5
 1e053bc:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:347:24
 1e053c0:    40 70             	r0 = 4			  ## att_db.c:347:24
 1e053c2:    18 66             	b[r3 + 1] = r0			  ## att_db.c:348:24
 1e053c4:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e053c6:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e053c8:    52 08             	r2 = r5			  ## att_db.c:349:5
 1e053ca:    80 f3 3c 24       	call 18552 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:349:5
 1e053ce:    1e f9 04 00       	b[r0 + 4] = r14			  ## att_db.c:350:24
 1e053d2:    5e 70             	r14 = 5			  ## att_db.c:350:24
 1e053d4:    ec 19             	goto 984 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:350:24
 1e053d6:    0c 66             	b[r3 + 0] = r4			  ## att_db.c:347:24
 1e053d8:    60 70             	r0 = 6			  ## att_db.c:348:24
 1e053da:    18 66             	b[r3 + 1] = r0			  ## att_db.c:348:24
 1e053dc:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e053de:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e053e0:    52 08             	r2 = r5			  ## att_db.c:349:5
 1e053e2:    80 f3 30 24       	call 18528 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:349:5
 1e053e6:    4c 60             	b[r0 + 4] = r4			  ## att_db.c:350:24
 1e053e8:    e2 19             	goto 964 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:350:24
 1e053ea:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e053ee:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e053f0:    10 f9 01 d0       	b[r13 + 1] = r0
 1e053f4:    21 70             	r1 = 2
 1e053f6:    d0 08             	r0 = r13
 1e053f8:    72 08             	r2 = r7
 1e053fa:    1d 19             	goto 570 <.GJTIE653_0_0_+0x7D0 : 1e05636 >
 1e053fc:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e05400:    00 71             	r0 = 16			  ## att_db.c:348:24
 1e05402:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05406:    44 18             	goto 136 <.GJTIE653_0_0_+0x62A : 1e05490 >			  ## att_db.c:348:24
 1e05408:    17 f9 00 d0       	b[r13 + 0] = r7			  ## att_db.c:347:24
 1e0540c:    a0 70             	r0 = 10			  ## att_db.c:348:24
 1e0540e:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05412:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e05414:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e05416:    42 08             	r2 = r4			  ## att_db.c:349:5
 1e05418:    80 f3 15 24       	call 18474 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:349:5
 1e0541c:    4f 60             	b[r0 + 4] = r7			  ## att_db.c:350:24
 1e0541e:    5e 70             	r14 = 5			  ## att_db.c:350:24
 1e05420:    c6 19             	goto 908 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:350:24
 1e05422:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:347:24
 1e05426:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e05428:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e0542c:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e0542e:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e05430:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e05432:    0b 18             	goto 22 <.GJTIE653_0_0_+0x5E4 : 1e0544a >			  ## att_db.c:349:5
 1e05434:    1e 70             	r14 = 1
 1e05436:    f0 70             	r0 = 15			  ## att_db.c:902:24
 1e05438:    b8 19             	goto 880 <.GJTIE653_0_0_+0x944 : 1e057aa >			  ## att_db.c:902:24
 1e0543a:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:347:24
 1e0543e:    20 71             	r0 = 18			  ## att_db.c:348:24
 1e05440:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05444:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e05446:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e05448:    82 08             	r2 = r8			  ## att_db.c:349:5
 1e0544a:    80 f3 fc 23       	call 18424 <little_endian_store_16 : 1e09c46 >
 1e0544e:    4c 60             	b[r0 + 4] = r4
 1e05450:    5e 70             	r14 = 5
 1e05452:    ad 19             	goto 858 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e05454:    31 70             	r1 = 3			  ## att_db.c:1173:5
 1e05456:    f8 18             	goto 496 <.GJTIE653_0_0_+0x7E2 : 1e05648 >			  ## att_db.c:1173:5
 1e05458:    20 f3 58 10       	if ((r1 & 1) != 0) goto 176 <.GJTIE653_0_0_+0x6A6 : 1e0550c >
 1e0545c:    c0 08             	r0 = r12			  ## att_db.c:758:30
 1e0545e:    12 14             	call -2012 <att_validate_security : 1e04c84 >			  ## att_db.c:758:30
 1e05460:    03 08             	r3 = r0			  ## att_db.c:758:30
 1e05462:    54 26             	if (r3 == 0) goto 168 <.GJTIE653_0_0_+0x6A6 : 1e0550c >			  ## att_db.c:758:30
 1e05464:    10 70             	r0 = 1
 1e05466:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0546a:    a0 70             	r0 = 10			  ## att_db.c:348:24
 1e0546c:    9c 18             	goto 312 <.GJTIE653_0_0_+0x740 : 1e055a6 >			  ## att_db.c:348:24
 1e0546e:    20 f3 67 10       	if ((r1 & 1) != 0) goto 206 <.GJTIE653_0_0_+0x6DA : 1e05540 >
 1e05472:    c0 08             	r0 = r12			  ## att_db.c:808:30
 1e05474:    07 14             	call -2034 <att_validate_security : 1e04c84 >			  ## att_db.c:808:30
 1e05476:    03 08             	r3 = r0			  ## att_db.c:808:30
 1e05478:    63 26             	if (r3 == 0) goto 198 <.GJTIE653_0_0_+0x6DA : 1e05540 >			  ## att_db.c:808:30
 1e0547a:    10 70             	r0 = 1
 1e0547c:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e05480:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e05482:    b6 1f             	goto -148 <.GJTIE653_0_0_+0x58A : 1e053f0 >			  ## att_db.c:348:24
 1e05484:    10 70             	r0 = 1
 1e05486:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e0548a:    03 71             	r3 = 16			  ## att_db.c:348:24
 1e0548c:    13 f9 01 d0       	b[r13 + 1] = r3			  ## att_db.c:348:24
 1e05490:    21 70             	r1 = 2
 1e05492:    d0 08             	r0 = r13
 1e05494:    52 08             	r2 = r5
 1e05496:    cf 18             	goto 414 <.GJTIE653_0_0_+0x7D0 : 1e05636 >
 1e05498:    50 70             	r0 = 5			  ## att_db.c:516:24
 1e0549a:    87 19             	goto 782 <.GJTIE653_0_0_+0x944 : 1e057aa >			  ## att_db.c:516:24
 1e0549c:    70 70             	r0 = 7			  ## att_db.c:601:24
 1e0549e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:601:24
 1e054a2:    4e 08             	r14 = r4			  ## att_db.c:601:24
 1e054a4:    84 19             	goto 776 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:601:24
 1e054a6:    13 70             	r3 = 1
 1e054a8:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e054ac:    be 18             	goto 380 <.GJTIE653_0_0_+0x7C4 : 1e0562a >			  ## att_db.c:347:24
 1e054ae:    a1 fc 1c 00       	r1 = r10 + 28			  ## att_db.c:1151:5
 1e054b2:    c0 ae             	r0 = sp + 236			  ## att_db.c:1151:5
 1e054b4:    80 f3 ef 15       	call 11230 <btstack_linked_list_iterator_init : 1e08096 >			  ## att_db.c:1151:5
 1e054b8:    04 70             	r4 = 0
 1e054ba:    c0 ae             	r0 = sp + 236
 1e054bc:    80 f3 60 0e       	call 7360 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## att_db.c:1152:12
 1e054c0:    13 20             	if (r0 == 0) goto 38 <.GJTIE653_0_0_+0x682 : 1e054e8 >			  ## att_db.c:1152:5
 1e054c2:    c0 ae             	r0 = sp + 236
 1e054c4:    80 f3 6a 0e       	call 7380 <btstack_linked_list_iterator_next : 1e0719c >			  ## att_db.c:1153:68
 1e054c8:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1154:23
 1e054ca:    f7 2d             	if (r6 == 0) goto -18 <.GJTIE653_0_0_+0x654 : 1e054ba >
 1e054cc:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1157:30
 1e054d0:    1c 02             	[sp+4] = r4			  ## att_db.c:1157:30
 1e054d2:    01 70             	r1 = 0			  ## att_db.c:1157:30
 1e054d4:    42 70             	r2 = 4			  ## att_db.c:1157:30
 1e054d6:    03 70             	r3 = 0			  ## att_db.c:1157:30
 1e054d8:    0c 02             	[sp] = r4			  ## att_db.c:1157:30
 1e054da:    86 00             	call r6			  ## att_db.c:1157:30
 1e054dc:    60 ff ff 09 ec ff 	if ((r0 & 255) == 0) goto -40 <.GJTIE653_0_0_+0x654 : 1e054ba >			  ## att_db.c:1157:30
 1e054e2:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:1189:50
 1e054e6:    56 1f             	goto -340 <.GJTIE653_0_0_+0x52E : 1e05394 >			  ## att_db.c:1189:50
 1e054e8:    04 f6 14 a0       	r4 = [r10 + 20]			  ## att_db.c:1162:18
 1e054ec:    a9 28             	if (r4 == 0) goto 338 <.GJTIE653_0_0_+0x7DA : 1e05640 >			  ## att_db.c:1162:18
 1e054ee:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1165:12
 1e054f2:    05 70             	r5 = 0			  ## att_db.c:1165:12
 1e054f4:    1d 02             	[sp+4] = r5			  ## att_db.c:1165:12
 1e054f6:    01 70             	r1 = 0			  ## att_db.c:1165:12
 1e054f8:    42 70             	r2 = 4			  ## att_db.c:1165:12
 1e054fa:    03 70             	r3 = 0			  ## att_db.c:1165:12
 1e054fc:    0d 02             	[sp] = r5			  ## att_db.c:1165:12
 1e054fe:    84 00             	call r4			  ## att_db.c:1165:12
 1e05500:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:1189:50
 1e05504:    61 ff ff 09 45 ff 	if ((r0 & 255) != 0) goto -374 <.GJTIE653_0_0_+0x52E : 1e05394 >			  ## att_db.c:1189:50
 1e0550a:    9d 18             	goto 314 <.GJTIE653_0_0_+0x7E0 : 1e05646 >			  ## att_db.c:1189:50
 1e0550c:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:764:5
 1e05510:    c0 a5             	r0 = sp + 92			  ## att_db.c:764:5
 1e05512:    bf f3 f4 fb       	call -2072 <att_update_value_len : 1e04cfe >			  ## att_db.c:764:5
 1e05516:    80 f5 6c 00       	r0 = h[sp+108] (u)			  ## att_db.c:768:21
 1e0551a:    11 90             	r1 = r0 + 1			  ## att_db.c:768:16
 1e0551c:    f1 f2 04 90       	if (r1 <= r15) goto 8 <.GJTIE653_0_0_+0x6C2 : 1e05528 >			  ## att_db.c:768:16
 1e05520:    f0 fc ff ff       	r0 = r15 + -1			  ## att_db.c:769:45
 1e05524:    90 f5 6c 00       	h[sp+108] = r0			  ## att_db.c:769:22
 1e05528:    04 f7 00 c0       	r4 = h[r12 + 0] (u)			  ## att_db.c:773:29
 1e0552c:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:773:68
 1e05530:    23 04             	r3 = r0.l (u)			  ## att_db.c:773:29
 1e05532:    c0 a5             	r0 = sp + 92			  ## att_db.c:773:29
 1e05534:    01 70             	r1 = 0			  ## att_db.c:773:29
 1e05536:    0c 02             	[sp] = r4			  ## att_db.c:773:29
 1e05538:    bf f3 fc fb       	call -2056 <att_copy_value : 1e04d34 >			  ## att_db.c:773:29
 1e0553c:    b1 70             	r1 = 11			  ## att_db.c:776:24
 1e0553e:    4f 18             	goto 158 <.GJTIE653_0_0_+0x778 : 1e055de >			  ## att_db.c:776:24
 1e05540:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:814:5
 1e05544:    40 a7             	r0 = sp + 116			  ## att_db.c:814:5
 1e05546:    bf f3 da fb       	call -2124 <att_update_value_len : 1e04cfe >			  ## att_db.c:814:5
 1e0554a:    80 f5 84 00       	r0 = h[sp+132] (u)			  ## att_db.c:816:27
 1e0554e:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE653_0_0_+0x74C : 1e055b2 >			  ## att_db.c:816:9
 1e05552:    10 70             	r0 = 1
 1e05554:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e05558:    c0 70             	r0 = 12			  ## att_db.c:348:24
 1e0555a:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e0555e:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e05560:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e05562:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e05564:    80 f3 6f 23       	call 18142 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:349:5
 1e05568:    70 70             	r0 = 7			  ## att_db.c:350:24
 1e0556a:    13 19             	goto 550 <.GJTIE653_0_0_+0x92C : 1e05792 >			  ## att_db.c:350:24
 1e0556c:    10 70             	r0 = 1
 1e0556e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e05572:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e05574:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e05578:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e0557a:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e0557c:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e0557e:    06 19             	goto 524 <.GJTIE653_0_0_+0x926 : 1e0578c >			  ## att_db.c:349:5
 1e05580:    13 70             	r3 = 1
 1e05582:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e05586:    e0 70             	r0 = 14			  ## att_db.c:348:24
 1e05588:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e0558c:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e0558e:    02 70             	r2 = 0			  ## att_db.c:349:5
 1e05590:    d0 08             	r0 = r13
 1e05592:    51 18             	goto 162 <.GJTIE653_0_0_+0x7D0 : 1e05636 >
 1e05594:    13 70             	r3 = 1
 1e05596:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:347:24
 1e0559a:    04 18             	goto 8 <.GJTIE653_0_0_+0x73E : 1e055a4 >			  ## att_db.c:347:24
 1e0559c:    23 70             	r3 = 2
 1e0559e:    10 70             	r0 = 1
 1e055a0:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e055a4:    e0 70             	r0 = 14
 1e055a6:    10 f9 01 d0       	b[r13 + 1] = r0
 1e055aa:    21 70             	r1 = 2
 1e055ac:    d0 08             	r0 = r13
 1e055ae:    42 08             	r2 = r4
 1e055b0:    42 18             	goto 132 <.GJTIE653_0_0_+0x7D0 : 1e05636 >
 1e055b2:    61 fb 01 69       	r1 = 1 - r6			  ## att_db.c:822:16
 1e055b6:    01 09             	r1 += r0			  ## att_db.c:822:31
 1e055b8:    f1 f2 05 d0       	ifs (r1 <= r15) goto 10 <.GJTIE653_0_0_+0x760 : 1e055c6 >			  ## att_db.c:822:31
 1e055bc:    80 fb 60 0f       	r0 = r15 + r6			  ## att_db.c:823:45
 1e055c0:    f0 8f             	r0 += -1			  ## att_db.c:823:49
 1e055c2:    90 f5 84 00       	h[sp+132] = r0			  ## att_db.c:823:22
 1e055c6:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:827:29
 1e055ca:    a0 b1             	r0 = r0 - r6			  ## att_db.c:827:102
 1e055cc:    23 04             	r3 = r0.l (u)			  ## att_db.c:827:29
 1e055ce:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:827:79
 1e055d2:    40 a7             	r0 = sp + 116			  ## att_db.c:827:79
 1e055d4:    09 02             	[sp] = r1			  ## att_db.c:827:29
 1e055d6:    61 08             	r1 = r6			  ## att_db.c:827:29
 1e055d8:    bf f3 ac fb       	call -2216 <att_copy_value : 1e04d34 >			  ## att_db.c:827:29
 1e055dc:    d1 70             	r1 = 13			  ## att_db.c:830:24
 1e055de:    11 f9 00 d0       	b[r13 + 0] = r1
 1e055e2:    1e 90             	r14 = r0 + 1
 1e055e4:    e4 18             	goto 456 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e055e6:    c0 08             	r0 = r12			  ## att_db.c:1065:26
 1e055e8:    bf f3 4c fb       	call -2408 <att_validate_security : 1e04c84 >			  ## att_db.c:1065:26
 1e055ec:    03 08             	r3 = r0			  ## att_db.c:1065:26
 1e055ee:    10 36             	if (r3 != 0) goto 32 <.GJTIE653_0_0_+0x7AA : 1e05610 >			  ## att_db.c:1065:26
 1e055f0:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1069:18
 1e055f4:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1069:128
 1e055f8:    61 04             	r1 = r1.l (u)			  ## att_db.c:1069:18
 1e055fa:    19 02             	[sp+4] = r1			  ## att_db.c:1069:18
 1e055fc:    31 9c             	r1 = r6 + 3			  ## att_db.c:1069:111
 1e055fe:    02 70             	r2 = 0			  ## att_db.c:1069:18
 1e05600:    03 70             	r3 = 0			  ## att_db.c:1069:18
 1e05602:    09 02             	[sp] = r1			  ## att_db.c:1069:18
 1e05604:    81 08             	r1 = r8			  ## att_db.c:1069:18
 1e05606:    84 00             	call r4			  ## att_db.c:1069:18
 1e05608:    03 08             	r3 = r0			  ## att_db.c:1069:18
 1e0560a:    60 ff ff 39 51 00 	if ((r3 & 255) == 0) goto 162 <.GJTIE653_0_0_+0x84C : 1e056b2 >			  ## att_db.c:1069:18
 1e05610:    10 70             	r0 = 1
 1e05612:    10 f9 00 d0       	b[r13 + 0] = r0
 1e05616:    20 71             	r0 = 18
 1e05618:    09 18             	goto 18 <.GJTIE653_0_0_+0x7C6 : 1e0562c >
 1e0561a:    c0 08             	r0 = r12			  ## att_db.c:1105:26
 1e0561c:    bf f3 32 fb       	call -2460 <att_validate_security : 1e04c84 >			  ## att_db.c:1105:26
 1e05620:    03 08             	r3 = r0			  ## att_db.c:1105:26
 1e05622:    1a 26             	if (r3 == 0) goto 52 <.GJTIE653_0_0_+0x7F2 : 1e05658 >			  ## att_db.c:1106:9
 1e05624:    10 70             	r0 = 1
 1e05626:    10 f9 00 d0       	b[r13 + 0] = r0
 1e0562a:    60 71             	r0 = 22
 1e0562c:    10 f9 01 d0       	b[r13 + 1] = r0
 1e05630:    21 70             	r1 = 2
 1e05632:    d0 08             	r0 = r13
 1e05634:    82 08             	r2 = r8
 1e05636:    80 f3 06 23       	call 17932 <little_endian_store_16 : 1e09c46 >
 1e0563a:    4b 60             	b[r0 + 4] = r3
 1e0563c:    5e 70             	r14 = 5
 1e0563e:    b7 18             	goto 366 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e05640:    00 70             	r0 = 0			  ## att_db.c:1189:50
 1e05642:    10 f9 18 a0       	b[r10 + 24] = r0			  ## att_db.c:1189:50
 1e05646:    21 70             	r1 = 2			  ## att_db.c:1199:9
 1e05648:    c0 08             	r0 = r12
 1e0564a:    bf f3 b5 fb       	call -2198 <att_notify_write_callbacks : 1e04db8 >
 1e0564e:    90 71             	r0 = 25			  ## att_db.c:1203:24
 1e05650:    10 f9 00 d0       	b[r13 + 0] = r0
 1e05654:    1e 70             	r14 = 1
 1e05656:    ab 18             	goto 342 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e05658:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1110:18
 1e0565c:    71 fc fb ff       	r1 = r7 + -5			  ## att_db.c:1110:135
 1e05660:    61 04             	r1 = r1.l (u)			  ## att_db.c:1110:18
 1e05662:    19 02             	[sp+4] = r1			  ## att_db.c:1110:18
 1e05664:    51 9c             	r1 = r6 + 5			  ## att_db.c:1110:118
 1e05666:    12 70             	r2 = 1			  ## att_db.c:1110:18
 1e05668:    09 02             	[sp] = r1			  ## att_db.c:1110:18
 1e0566a:    81 08             	r1 = r8			  ## att_db.c:1110:18
 1e0566c:    93 08             	r3 = r9			  ## att_db.c:1110:18
 1e0566e:    84 00             	call r4			  ## att_db.c:1110:18
 1e05670:    03 08             	r3 = r0			  ## att_db.c:1110:18
 1e05672:    60 ff ff 39 13 00 	if ((r3 & 255) == 0) goto 38 <.GJTIE653_0_0_+0x838 : 1e0569e >			  ## att_db.c:1110:18
 1e05678:    c0 04             	r0 = r3.b0 (u)			  ## att_db.c:1110:18
 1e0567a:    d0 e0 02 00       	if (r0 == 13) goto 4 <.GJTIE653_0_0_+0x81C : 1e05682 >			  ## att_db.c:1110:18
 1e0567e:    70 e0 d1 1f       	if (r0 != 7) goto -94 <.GJTIE653_0_0_+0x7BE : 1e05624 >
 1e05682:    01 f9 18 a0       	r1 = b[r10 + 24] (u)			  ## att_db.c:332:89
 1e05686:    d0 e0 03 10       	if (r0 != 13) goto 6 <.GJTIE653_0_0_+0x82A : 1e05690 >			  ## att_db.c:332:89
 1e0568a:    c2 04             	r2 = r3.b0 (u)
 1e0568c:    21 f2 03 10       	if (r1 != r2) goto 6 <.GJTIE653_0_0_+0x830 : 1e05696 >
 1e05690:    70 e0 05 10       	if (r0 != 7) goto 10 <.GJTIE653_0_0_+0x838 : 1e0569e >
 1e05694:    04 32             	if (r1 != 0) goto 8 <.GJTIE653_0_0_+0x838 : 1e0569e >
 1e05696:    13 f9 18 a0       	b[r10 + 24] = r3
 1e0569a:    18 f7 1a a0       	h[r10 + 26] = r8
 1e0569e:    d0 08             	r0 = r13			  ## att_db.c:1124:5
 1e056a0:    61 08             	r1 = r6			  ## att_db.c:1124:5
 1e056a2:    72 08             	r2 = r7			  ## att_db.c:1124:5
 1e056a4:    98 f3 1e 0c       	call 3151932 <memcpy : 106ee4 >			  ## att_db.c:1124:5
 1e056a8:    70 71             	r0 = 23			  ## att_db.c:1125:24
 1e056aa:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:1125:24
 1e056ae:    7e 08             	r14 = r7			  ## att_db.c:1125:24
 1e056b0:    7e 18             	goto 252 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:1125:24
 1e056b2:    30 71             	r0 = 19			  ## att_db.c:1073:24
 1e056b4:    cd 1f             	goto -102 <.GJTIE653_0_0_+0x7EA : 1e05650 >			  ## att_db.c:1073:24
 1e056b6:    22 02             	r2 = [sp+8]
 1e056b8:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE653_0_0_+0x85E : 1e056c4 >
 1e056bc:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:1009:41
 1e056c0:    2e 70             	r14 = 2			  ## att_db.c:1009:41
 1e056c2:    02 08             	r2 = r0			  ## att_db.c:1009:41
 1e056c4:    00 f5 b8 00       	r0 = [sp+184]			  ## att_db.c:1014:37
 1e056c8:    48 02             	[sp+16] = r0
 1e056ca:    14 70             	r4 = 1
 1e056cc:    7c 08             	r12 = r7
 1e056ce:    2a 02             	[sp+8] = r2
 1e056d0:    aa 04             	r10 = r2.l (u)
 1e056d2:    ab fc fc ff       	r11 = r10 + -4
 1e056d6:    c9 08             	r9 = r12
 1e056d8:    00 f5 a4 00       	r0 = [sp+164]			  ## att_db.c:119:16
 1e056dc:    4a 20             	if (r0 == 0) goto 148 <.GJTIE653_0_0_+0x90C : 1e05772 >			  ## att_db.c:119:16
 1e056de:    40 aa             	r0 = sp + 164
 1e056e0:    bf f3 4a fa       	call -2924 <att_iterator_fetch_next : 1e04b78 >			  ## att_db.c:959:9
 1e056e4:    87 f5 ac 00       	r7 = h[sp+172] (u)			  ## att_db.c:961:16
 1e056e8:    02 2e             	if (r7 == 0) goto 4 <.GJTIE653_0_0_+0x888 : 1e056ee >
 1e056ea:    57 f2 f5 3f       	if (r7 < r5) goto -22 <.GJTIE653_0_0_+0x872 : 1e056d8 >
 1e056ee:    87 f2 40 80       	if (r7 > r8) goto 128 <.GJTIE653_0_0_+0x90C : 1e05772 >
 1e056f2:    20 05             	r0 = r4.l (u)			  ## att_db.c:971:22
 1e056f4:    2a 20             	if (r0 == 0) goto 84 <.GJTIE653_0_0_+0x8E4 : 1e0574a >			  ## att_db.c:971:22
 1e056f6:    0c 2e             	if (r7 == 0) goto 24 <.GJTIE653_0_0_+0x8AA : 1e05710 >
 1e056f8:    40 aa             	r0 = sp + 164
 1e056fa:    01 fb 00 28       	r1 = 10240 <lrc.7+0x80 : 2800 >			  ## att_db.c:972:32
 1e056fe:    bf f3 7b fa       	call -2826 <att_iterator_match_uuid16 : 1e04bf8 >			  ## att_db.c:972:32
 1e05702:    06 30             	if (r0 != 0) goto 12 <.GJTIE653_0_0_+0x8AA : 1e05710 >
 1e05704:    40 aa             	r0 = sp + 164
 1e05706:    01 fb 01 28       	r1 = 10241 <lrc.7+0x81 : 2801 >			  ## att_db.c:972:93
 1e0570a:    bf f3 75 fa       	call -2838 <att_iterator_match_uuid16 : 1e04bf8 >			  ## att_db.c:972:93
 1e0570e:    20 20             	if (r0 == 0) goto 64 <.GJTIE653_0_0_+0x8EA : 1e05750 >
 1e05710:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:975:13
 1e05714:    d0 08             	r0 = r13			  ## att_db.c:975:13
 1e05716:    c2 08             	r2 = r12			  ## att_db.c:975:13
 1e05718:    80 f3 95 22       	call 17706 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:975:13
 1e0571c:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:976:20
 1e05720:    21 04             	r1 = r0.l (u)			  ## att_db.c:977:13
 1e05722:    d0 08             	r0 = r13			  ## att_db.c:977:13
 1e05724:    92 08             	r2 = r9			  ## att_db.c:977:13
 1e05726:    80 f3 8e 22       	call 17692 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:977:13
 1e0572a:    e0 fc 04 00       	r0 = r14 + 4			  ## att_db.c:978:20
 1e0572e:    24 04             	r4 = r0.l (u)			  ## att_db.c:979:38
 1e05730:    80 fb 40 0d       	r0 = r13 + r4			  ## att_db.c:979:36
 1e05734:    41 02             	r1 = [sp+16]			  ## att_db.c:979:13
 1e05736:    b2 08             	r2 = r11			  ## att_db.c:979:13
 1e05738:    98 f3 d4 0b       	call 3151784 <memcpy : 106ee4 >			  ## att_db.c:979:13
 1e0573c:    80 fb b0 e4       	r14 = r4 + r11			  ## att_db.c:980:20
 1e05740:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:984:17
 1e05744:    a0 09             	r0 += r10			  ## att_db.c:984:24
 1e05746:    f0 f2 14 80       	if (r0 > r15) goto 40 <.GJTIE653_0_0_+0x90C : 1e05772 >
 1e0574a:    04 70             	r4 = 0
 1e0574c:    09 70             	r9 = 0
 1e0574e:    c4 2f             	if (r7 == 0) goto -120 <.GJTIE653_0_0_+0x872 : 1e056d8 >
 1e05750:    40 aa             	r0 = sp + 164
 1e05752:    61 08             	r1 = r6			  ## att_db.c:994:26
 1e05754:    32 02             	r2 = [sp+12]			  ## att_db.c:994:26
 1e05756:    bf f3 67 fa       	call -2866 <att_iterator_match_uuid : 1e04c28 >			  ## att_db.c:994:26
 1e0575a:    79 08             	r9 = r7
 1e0575c:    bd 21             	if (r0 == 0) goto -134 <.GJTIE653_0_0_+0x872 : 1e056d8 >
 1e0575e:    80 f5 b4 00       	r0 = h[sp+180] (u)			  ## att_db.c:997:45
 1e05762:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:998:17
 1e05766:    40 80             	r0 += 4			  ## att_db.c:997:40
 1e05768:    21 e0 a5 3f       	if (r1 < 2) goto -182 <.GJTIE653_0_0_+0x850 : 1e056b6 >			  ## att_db.c:997:40
 1e0576c:    22 04             	r2 = r0.l (u)
 1e0576e:    a2 f2 a2 0f       	if (r2 == r10) goto -188 <.GJTIE653_0_0_+0x850 : 1e056b6 >
 1e05772:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1019:16
 1e05776:    10 e0 10 10       	if (r0 != 1) goto 32 <.GJTIE653_0_0_+0x934 : 1e0579a >			  ## att_db.c:1019:9
 1e0577a:    10 70             	r0 = 1
 1e0577c:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e05780:    00 71             	r0 = 16			  ## att_db.c:348:24
 1e05782:    10 f9 01 d0       	b[r13 + 1] = r0
 1e05786:    21 70             	r1 = 2
 1e05788:    d0 08             	r0 = r13
 1e0578a:    52 08             	r2 = r5
 1e0578c:    80 f3 5b 22       	call 17590 <little_endian_store_16 : 1e09c46 >
 1e05790:    a0 70             	r0 = 10
 1e05792:    10 f9 04 d0       	b[r13 + 4] = r0
 1e05796:    5e 70             	r14 = 5
 1e05798:    0a 18             	goto 20 <.GJTIE653_0_0_+0x948 : 1e057ae >
 1e0579a:    10 71             	r0 = 17			  ## att_db.c:1023:24
 1e0579c:    06 18             	goto 12 <.GJTIE653_0_0_+0x944 : 1e057aa >			  ## att_db.c:1023:24
 1e0579e:    4b 08             	r11 = r4
 1e057a0:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:705:16
 1e057a4:    20 e0 07 30       	if (r0 < 2) goto 14 <.GJTIE653_0_0_+0x950 : 1e057b6 >			  ## att_db.c:705:16
 1e057a8:    90 70             	r0 = 9			  ## att_db.c:706:28
 1e057aa:    10 f9 00 d0       	b[r13 + 0] = r0
 1e057ae:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1340:5
 1e057b2:    88 0a             	sp += 272			  ## att_db.c:1340:5
 1e057b4:    5f 01             	{pc, r15-r4} = [sp++]			  ## att_db.c:1340:5
 1e057b6:    0a e0 0f 00       	if (r10 == 0) goto 30 <.GJTIE653_0_0_+0x972 : 1e057d8 >			  ## att_db.c:711:9
 1e057ba:    10 70             	r0 = 1
 1e057bc:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e057c0:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e057c2:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e057c6:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e057c8:    d0 08             	r0 = r13			  ## att_db.c:349:5
 1e057ca:    72 08             	r2 = r7			  ## att_db.c:349:5
 1e057cc:    80 f3 3b 22       	call 17526 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:349:5
 1e057d0:    1a f9 04 00       	b[r0 + 4] = r10			  ## att_db.c:350:24
 1e057d4:    5e 70             	r14 = 5			  ## att_db.c:350:24
 1e057d6:    eb 1f             	goto -42 <.GJTIE653_0_0_+0x948 : 1e057ae >			  ## att_db.c:350:24
 1e057d8:    10 70             	r0 = 1
 1e057da:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:347:24
 1e057de:    80 70             	r0 = 8			  ## att_db.c:348:24
 1e057e0:    e6 fd 00 2b       	r2 = r11.l (u)			  ## att_db.c:716:9
 1e057e4:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:348:24
 1e057e8:    02 e0 c6 0e       	if (r2 == 0) goto -628 <.GJTIE653_0_0_+0x712 : 1e05578 >			  ## att_db.c:348:24
 1e057ec:    21 70             	r1 = 2			  ## att_db.c:349:5
 1e057ee:    23 70             	r3 = 2			  ## att_db.c:349:5
 1e057f0:    cf 1e             	goto -610 <.GJTIE653_0_0_+0x72A : 1e05590 >			  ## att_db.c:349:5
 1e057f2:    0a 08             	r10 = r0
 1e057f4:    d5 1f             	goto -86 <.GJTIE653_0_0_+0x93A : 1e057a0 >


btctler_nv_memory_malloc:
 1e057f6:    75 01             	[--sp] = {rets, r5, r4}			  ## btcontroller_heap.c:221:0
 1e057f8:    05 08             	r5 = r0			  ## btcontroller_heap.c:221:0
 1e057fa:    80 f3 d1 30       	call 24994 <malloc : 1e0b9a0 >			  ## btcontroller_heap.c:227:9
 1e057fe:    04 08             	r4 = r0			  ## btcontroller_heap.c:227:9
 1e05800:    05 28             	if (r4 == 0) goto 10 <btctler_nv_memory_malloc+0x16 : 1e0580c >			  ## btcontroller_heap.c:228:9
 1e05802:    01 70             	r1 = 0			  ## btcontroller_heap.c:229:9
 1e05804:    52 08             	r2 = r5			  ## btcontroller_heap.c:229:9
 1e05806:    98 f3 73 0b       	call 3151590 <memset : 106ef0 >			  ## btcontroller_heap.c:229:9
 1e0580a:    04 18             	goto 8 <btctler_nv_memory_malloc+0x1E : 1e05814 >			  ## btcontroller_heap.c:229:9
 1e0580c:    28 fb 00 03       	r0 = rets			  ## btcontroller_heap.c:235:9
 1e05810:    8f f3 01 ee       	call 2087938 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e05814:    40 08             	r0 = r4			  ## btcontroller_heap.c:239:5
 1e05816:    55 01             	{pc, r5, r4} = [sp++]			  ## btcontroller_heap.c:239:5


__bt_malloc:
 1e05818:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:259:0
 1e0581a:    ed 17             	call -38 <btctler_nv_memory_malloc : 1e057f6 >			  ## btcontroller_heap.c:262:9
 1e0581c:    02 08             	r2 = r0			  ## btcontroller_heap.c:262:9
 1e0581e:    02 34             	if (r2 != 0) goto 4 <__bt_malloc+0xC : 1e05824 >
 1e05820:    8f f3 f9 ed       	call 2087922 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e05824:    20 08             	r0 = r2			  ## btcontroller_heap.c:265:5
 1e05826:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:265:5


__vsprintf_len:
 1e05828:    77 01             	[--sp] = {rets, r7-r4}			  ## vsprintf.c:5:0
 1e0582a:    fe 0b             	sp += -4			  ## vsprintf.c:5:0
 1e0582c:    09 02             	[sp] = r1			  ## vsprintf.c:5:0
 1e0582e:    01 70             	r1 = 0			  ## vsprintf.c:5:0
 1e05830:    72 20             	if (r0 == 0) goto 228 <.GJTIE704_0_0_+0xA6 : 1e05916 >			  ## vsprintf.c:5:0
 1e05832:    04 60             	r4 = b[r0 + 0] (u)			  ## vsprintf.c:12:12
 1e05834:    70 28             	if (r4 == 0) goto 224 <.GJTIE704_0_0_+0xA6 : 1e05916 >			  ## vsprintf.c:12:12
 1e05836:    42 76             	r2 = 100
 1e05838:    a3 70             	r3 = 10
 1e0583a:    14 05             	r4 = r4.b0 (s)			  ## vsprintf.c:13:17
 1e0583c:    14 e6 0d d0       	ifs (r4 <= 97) goto 26 <__vsprintf_len+0x32 : 1e0585a >			  ## vsprintf.c:13:17
 1e05840:    24 e6 1b 00       	if (r4 == 98) goto 54 <.GJTIE704_0_0_+0xA : 1e0587a >
 1e05844:    34 e6 2a 00       	if (r4 == 99) goto 84 <.GJTIE704_0_0_+0x2C : 1e0589c >
 1e05848:    c4 e6 62 10       	if (r4 != 108) goto 196 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e0584c:    04 02             	r4 = [sp]			  ## vsprintf.c:62:25
 1e0584e:    45 98             	r5 = r4 + 4			  ## vsprintf.c:62:25
 1e05850:    0d 02             	[sp] = r5			  ## vsprintf.c:62:25
 1e05852:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:62:25
 1e05854:    41 09             	r1 += r4			  ## vsprintf.c:62:23
 1e05856:    11 80             	r1 += 1			  ## vsprintf.c:62:17
 1e05858:    5b 18             	goto 182 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e0585a:    45 fc bf ff       	r5 = r4 + -65
 1e0585e:    b5 e0 2b 80       	if (r5 > 11) goto 86 <.GJTIE704_0_0_+0x48 : 1e058b8 >
 1e05862:    a5 00             	tbb [r5]


.GJTIS704_0_0_:
 1e05864:    06     < 6 : 0x6 >
 1e05865:    36     < 54 : 0x36 >
 1e05866:    3a     < 58 : 0x3A >
 1e05867:    56     < 86 : 0x56 >
 1e05868:    56     < 86 : 0x56 >
 1e05869:    56     < 86 : 0x56 >
 1e0586a:    56     < 86 : 0x56 >
 1e0586b:    4c     < 76 : 0x4C >
 1e0586c:    56     < 86 : 0x56 >
 1e0586d:    56     < 86 : 0x56 >
 1e0586e:    56     < 86 : 0x56 >
 1e0586f:    51     < 81 : 0x51 >
 1e05870:    04 02             	r4 = [sp]			  ## vsprintf.c:49:13
 1e05872:    44 80             	r4 += 4			  ## vsprintf.c:49:13
 1e05874:    0c 02             	[sp] = r4			  ## vsprintf.c:49:13
 1e05876:    61 80             	r1 += 6			  ## vsprintf.c:48:17
 1e05878:    4b 18             	goto 150 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e0587a:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## vsprintf.c:23:20
 1e0587e:    24 f9 02 00       	r4 = b[r0 + 2] (s)			  ## vsprintf.c:25:21
 1e05882:    80 fe 30 41       	r4 += r1 * r3			  ## vsprintf.c:25:17
 1e05886:    41 fc f0 fd       	r1 = r4 + -528			  ## vsprintf.c:25:17
 1e0588a:    20 80             	r0 += 2			  ## vsprintf.c:24:13
 1e0588c:    1f 22             	if (r1 == 0) goto 62 <.GJTIE704_0_0_+0x5C : 1e058cc >
 1e0588e:    14 08             	r4 = r1
 1e05890:    05 02             	r5 = [sp]			  ## vsprintf.c:28:17
 1e05892:    45 80             	r5 += 4			  ## vsprintf.c:28:17
 1e05894:    f4 8f             	r4 += -1			  ## vsprintf.c:27:28
 1e05896:    0d 02             	[sp] = r5			  ## vsprintf.c:28:17
 1e05898:    fb 39             	if (r4 != 0) goto -10 <.GJTIE704_0_0_+0x20 : 1e05890 >			  ## vsprintf.c:28:17
 1e0589a:    3a 18             	goto 116 <.GJTIE704_0_0_+0xA0 : 1e05910 >			  ## vsprintf.c:28:17
 1e0589c:    04 02             	r4 = [sp]			  ## vsprintf.c:36:13
 1e0589e:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:35:21
 1e058a2:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:33:21
 1e058a6:    44 80             	r4 += 4			  ## vsprintf.c:36:13
 1e058a8:    0c 02             	[sp] = r4			  ## vsprintf.c:36:13
 1e058aa:    51 09             	r1 += r5			  ## vsprintf.c:33:17
 1e058ac:    80 fe 30 16       	r1 += r6 * r3			  ## vsprintf.c:35:29
 1e058b0:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:35:17
 1e058b4:    20 80             	r0 += 2			  ## vsprintf.c:34:13
 1e058b6:    2c 18             	goto 88 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e058b8:    45 fc cf ff       	r5 = r4 + -49
 1e058bc:    45 e0 28 20       	if (r5 >= 4) goto 80 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e058c0:    05 02             	r5 = [sp]			  ## vsprintf.c:19:13
 1e058c2:    45 80             	r5 += 4			  ## vsprintf.c:19:13
 1e058c4:    0d 02             	[sp] = r5			  ## vsprintf.c:19:13
 1e058c6:    41 09             	r1 += r4			  ## vsprintf.c:18:28
 1e058c8:    01 8d             	r1 += -48			  ## vsprintf.c:18:17
 1e058ca:    22 18             	goto 68 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e058cc:    01 70             	r1 = 0
 1e058ce:    20 18             	goto 64 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e058d0:    04 02             	r4 = [sp]			  ## vsprintf.c:59:13
 1e058d2:    44 80             	r4 += 4			  ## vsprintf.c:59:13
 1e058d4:    0c 02             	[sp] = r4			  ## vsprintf.c:59:13
 1e058d6:    1c 18             	goto 56 <.GJTIE704_0_0_+0xA0 : 1e05910 >			  ## vsprintf.c:59:13
 1e058d8:    04 02             	r4 = [sp]			  ## vsprintf.c:45:13
 1e058da:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:42:21
 1e058de:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:40:21
 1e058e2:    27 f9 03 00       	r7 = b[r0 + 3] (s)			  ## vsprintf.c:44:21
 1e058e6:    44 80             	r4 += 4			  ## vsprintf.c:45:13
 1e058e8:    0c 02             	[sp] = r4			  ## vsprintf.c:45:13
 1e058ea:    80 fe 20 16       	r1 += r6 * r2			  ## vsprintf.c:40:17
 1e058ee:    71 09             	r1 += r7			  ## vsprintf.c:42:17
 1e058f0:    80 fe 30 15       	r1 += r5 * r3			  ## vsprintf.c:44:29
 1e058f4:    11 fc 30 eb       	r1 = r1 + -5328			  ## vsprintf.c:44:17
 1e058f8:    30 80             	r0 += 3			  ## vsprintf.c:43:13
 1e058fa:    0a 18             	goto 20 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e058fc:    04 02             	r4 = [sp]			  ## vsprintf.c:53:13
 1e058fe:    44 80             	r4 += 4			  ## vsprintf.c:53:13
 1e05900:    0c 02             	[sp] = r4			  ## vsprintf.c:53:13
 1e05902:    21 80             	r1 += 2			  ## vsprintf.c:52:17
 1e05904:    05 18             	goto 10 <.GJTIE704_0_0_+0xA0 : 1e05910 >
 1e05906:    04 02             	r4 = [sp]			  ## vsprintf.c:56:20
 1e05908:    45 98             	r5 = r4 + 4			  ## vsprintf.c:56:20
 1e0590a:    0d 02             	[sp] = r5			  ## vsprintf.c:56:20
 1e0590c:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:56:20
 1e0590e:    41 09             	r1 += r4			  ## vsprintf.c:56:17
 1e05910:    14 60             	r4 = b[r0 + 1] (u)			  ## vsprintf.c:12:12
 1e05912:    10 80             	r0 += 1			  ## vsprintf.c:65:15
 1e05914:    92 39             	if (r4 != 0) goto -220 <__vsprintf_len+0x12 : 1e0583a >
 1e05916:    10 08             	r0 = r1			  ## vsprintf.c:69:1
 1e05918:    02 0a             	sp += 4			  ## vsprintf.c:69:1
 1e0591a:    57 01             	{pc, r7-r4} = [sp++]			  ## vsprintf.c:69:1


lbuf_alloc_btctrler:
 1e0591c:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:60:0
 1e0591e:    04 08             	r4 = r0			  ## lbuf.c:60:0
 1e05920:    06 93             	r6 = r1 + 16			  ## lbuf.c:68:9
 1e05922:    20 fd 03 69       	r0 = r6 & 3			  ## lbuf.c:69:13
 1e05926:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:70:18
 1e0592a:    05 70             	r5 = 0			  ## lbuf.c:70:18
 1e0592c:    07 70             	r7 = 0			  ## lbuf.c:69:9
 1e0592e:    60 ff 03 69 01 00 	if ((r6 & 3) == 0) goto 2 <lbuf_alloc_btctrler+0x1A : 1e05936 >			  ## lbuf.c:69:9
 1e05934:    07 08             	r7 = r0			  ## lbuf.c:69:9
 1e05936:    98 f3 31 0a       	call 3150946 <local_irq_disable : 106d9c >			  ## lbuf.c:74:5
 1e0593a:    20 48             	r0 = [r4 + 8]			  ## lbuf.c:76:5
 1e0593c:    82 98             	r2 = r4 + 8			  ## lbuf.c:76:5
 1e0593e:    20 f2 1f 00       	if (r0 == r2) goto 62 <lbuf_alloc_btctrler+0x64 : 1e05980 >			  ## lbuf.c:76:5
 1e05942:    81 bf             	r1 = r7 + r6			  ## lbuf.c:69:9
 1e05944:    46 50             	r6 = h[r0 + 8] (u)			  ## lbuf.c:77:13
 1e05946:    16 f2 04 20       	if (r6 >= r1) goto 8 <lbuf_alloc_btctrler+0x36 : 1e05952 >			  ## lbuf.c:77:13
 1e0594a:    00 40             	r0 = [r0 + 0]			  ## lbuf.c:76:5
 1e0594c:    20 f2 fa 1f       	if (r0 != r2) goto -12 <lbuf_alloc_btctrler+0x28 : 1e05944 >
 1e05950:    17 18             	goto 46 <lbuf_alloc_btctrler+0x64 : 1e05980 >
 1e05952:    03 40             	r3 = [r0 + 0]			  ## lbuf.c:83:61
 1e05954:    12 40             	r2 = [r0 + 4]			  ## lbuf.c:83:46
 1e05956:    c5 92             	r5 = r1 + 12			  ## lbuf.c:80:26
 1e05958:    56 f2 07 90       	if (r6 <= r5) goto 14 <lbuf_alloc_btctrler+0x4E : 1e0596a >
 1e0595c:    45 b0             	r5 = r0 + r1			  ## lbuf.c:81:44
 1e0595e:    66 bc             	r6 = r6 - r1			  ## lbuf.c:82:31
 1e05960:    4e 5a             	h[r5 + 8] = r6			  ## lbuf.c:82:22
 1e05962:    1d 46             	[r3 + 4] = r5			  ## list.h:137:16
 1e05964:    0b 4a             	[r5 + 0] = r3			  ## list.h:138:16
 1e05966:    53 08             	r3 = r5			  ## list.h:138:16
 1e05968:    01 18             	goto 2 <lbuf_alloc_btctrler+0x50 : 1e0596c >
 1e0596a:    61 08             	r1 = r6
 1e0596c:    1a 46             	[r3 + 4] = r2
 1e0596e:    0b 44             	[r2 + 0] = r3
 1e05970:    2c 40             	[r0 + 8] = r4			  ## lbuf.c:95:21
 1e05972:    02 70             	r2 = 0			  ## lbuf.c:96:22
 1e05974:    ea 60             	b[r0 + 14] = r2			  ## lbuf.c:96:22
 1e05976:    69 50             	h[r0 + 12] = r1			  ## lbuf.c:97:20
 1e05978:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:98:20
 1e0597a:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0597c:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0597e:    05 91             	r5 = r0 + 16			  ## lbuf.c:105:21
 1e05980:    98 f3 0a 0a       	call 3150868 <local_irq_enable : 106d98 >			  ## lbuf.c:115:5
 1e05984:    50 08             	r0 = r5			  ## lbuf.c:116:5
 1e05986:    57 01             	{pc, r7-r4} = [sp++]			  ## lbuf.c:116:5


lbuf_push_btctrler:
 1e05988:    74 01             	[--sp] = {rets, r4}			  ## lbuf.c:197:0
 1e0598a:    04 08             	r4 = r0			  ## lbuf.c:197:0
 1e0598c:    98 f3 06 0a       	call 3150860 <local_irq_disable : 106d9c >			  ## lbuf.c:201:5
 1e05990:    01 70             	r1 = 0			  ## lbuf.c:203:14
 1e05992:    40 fc f0 ff       	r0 = r4 + -16			  ## lbuf.c:203:14
 1e05996:    e9 60             	b[r0 + 14] = r1			  ## lbuf.c:203:14
 1e05998:    f1 60             	r1 = b[r0 + 15] (u)			  ## lbuf.c:204:15
 1e0599a:    12 92             	r2 = r1 + 1			  ## lbuf.c:204:15
 1e0599c:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:204:15
 1e0599e:    06 32             	if (r1 != 0) goto 12 <lbuf_push_btctrler+0x24 : 1e059ac >			  ## lbuf.c:204:15
 1e059a0:    21 40             	r1 = [r0 + 8]			  ## lbuf.c:205:38
 1e059a2:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e059a4:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e059a6:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e059a8:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e059aa:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e059ac:    14 01             	{rets, r4} = [sp++]			  ## lbuf.c:208:5
 1e059ae:    d8 f3 f3 09       	goto 3150822 <local_irq_enable : 106d98 >			  ## lbuf.c:208:5


thread_resume:
 1e059b2:    74 01             	[--sp] = {rets, r4}			  ## thread.c:143:0
 1e059b4:    04 08             	r4 = r0			  ## thread.c:143:0
 1e059b6:    98 f3 f1 09       	call 3150818 <local_irq_disable : 106d9c >			  ## thread.c:150:5
 1e059ba:    00 70             	r0 = 0			  ## thread.c:150:5
 1e059bc:    68 69             	b[r4 + 22] = r0			  ## thread.c:151:25
 1e059be:    50 69             	r0 = b[r4 + 21] (u)			  ## thread.c:152:27
 1e059c0:    11 70             	r1 = 1			  ## thread.c:152:22
 1e059c2:    01 ff ff 00 01 00 	if (r0 != 255) goto 2 <thread_resume+0x18 : 1e059ca >			  ## thread.c:152:22
 1e059c8:    01 70             	r1 = 0			  ## thread.c:152:22
 1e059ca:    10 09             	r0 += r1			  ## thread.c:152:22
 1e059cc:    58 69             	b[r4 + 21] = r0			  ## thread.c:152:20
 1e059ce:    98 f3 e3 09       	call 3150790 <local_irq_enable : 106d98 >			  ## thread.c:154:5
 1e059d2:    20 48             	r0 = [r4 + 8]			  ## thread.c:156:9
 1e059d4:    50 40             	r0 = [r0 + 20]			  ## thread.c:156:16
 1e059d6:    14 01             	{rets, r4} = [sp++]			  ## thread.c:156:5
 1e059d8:    90 00             	goto r0			  ## thread.c:156:5


hw_dma_pop:
 1e059da:    74 01             	[--sp] = {rets, r4}			  ## hw_dma.c:75:0
 1e059dc:    04 40             	r4 = [r0 + 0]			  ## list.h:124:18
 1e059de:    04 f2 0b 00       	if (r4 == r0) goto 22 <hw_dma_pop+0x1E : 1e059f8 >			  ## list.h:124:18
 1e059e2:    98 f3 db 09       	call 3150774 <local_irq_disable : 106d9c >			  ## hw_dma.c:85:5
 1e059e6:    00 48             	r0 = [r4 + 0]			  ## list.h:171:36
 1e059e8:    11 48             	r1 = [r4 + 4]			  ## list.h:171:23
 1e059ea:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e059ec:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e059ee:    0c 48             	[r4 + 0] = r4			  ## list.h:172:17
 1e059f0:    1c 48             	[r4 + 4] = r4			  ## list.h:173:17
 1e059f2:    98 f3 d1 09       	call 3150754 <local_irq_enable : 106d98 >			  ## hw_dma.c:87:5
 1e059f6:    01 18             	goto 2 <hw_dma_pop+0x20 : 1e059fa >
 1e059f8:    04 70             	r4 = 0
 1e059fa:    40 08             	r0 = r4			  ## hw_dma.c:90:1
 1e059fc:    54 01             	{pc, r4} = [sp++]			  ## hw_dma.c:90:1


hw_dma_alloc:
 1e059fe:    34 00             	[--sp] = rets			  ## hw_dma.c:45:0
 1e05a00:    12 08             	r2 = r1			  ## hw_dma.c:45:0
 1e05a02:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## hw_dma.c:45:0
 1e05a08:    06 20             	if (r0 == 0) goto 12 <hw_dma_alloc+0x18 : 1e05a16 >			  ## hw_dma.c:45:0
 1e05a0a:    00 f6 f4 10       	r0 = [r1 + 244]			  ## hw_dma.c:45:0
 1e05a0e:    13 fc f4 00       	r3 = r1 + 244			  ## hw_dma.c:45:0
 1e05a12:    08 30             	if (r0 != 0) goto 16 <hw_dma_alloc+0x26 : 1e05a24 >			  ## hw_dma.c:45:0
 1e05a14:    05 18             	goto 10 <hw_dma_alloc+0x22 : 1e05a20 >			  ## hw_dma.c:45:0
 1e05a16:    00 f6 f0 10       	r0 = [r1 + 240]			  ## hw_dma.c:45:0
 1e05a1a:    13 fc f0 00       	r3 = r1 + 240			  ## hw_dma.c:45:0
 1e05a1e:    02 30             	if (r0 != 0) goto 4 <hw_dma_alloc+0x26 : 1e05a24 >			  ## hw_dma.c:45:0
 1e05a20:    8f f3 f9 ec       	call 2087410 <p33_soft_reset : 3416 >			  ## hw_dma.c:45:0
 1e05a24:    00 46             	r0 = [r3 + 0]			  ## hw_dma.c:45:0
 1e05a26:    21 08             	r1 = r2			  ## hw_dma.c:52:16
 1e05a28:    88 01             	{rets} = [sp++]			  ## hw_dma.c:52:16
 1e05a2a:    78 1f             	goto -272 <lbuf_alloc_btctrler : 1e0591c >			  ## hw_dma.c:52:16


hw_dma_push:
 1e05a2c:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:68:0
 1e05a2e:    14 08             	r4 = r1			  ## hw_dma.c:68:0
 1e05a30:    05 08             	r5 = r0			  ## hw_dma.c:68:0
 1e05a32:    98 f3 b3 09       	call 3150694 <local_irq_disable : 106d9c >			  ## hw_dma.c:69:5
 1e05a36:    10 4a             	r0 = [r5 + 4]			  ## list.h:154:28
 1e05a38:    1c 4a             	[r5 + 4] = r4			  ## list.h:137:16
 1e05a3a:    0d 48             	[r4 + 0] = r5			  ## list.h:138:16
 1e05a3c:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e05a3e:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e05a40:    15 01             	{rets, r5, r4} = [sp++]			  ## hw_dma.c:71:5
 1e05a42:    d8 f3 a9 09       	goto 3150674 <local_irq_enable : 106d98 >			  ## hw_dma.c:71:5


aes128_start:
 1e05a46:    77 01             	[--sp] = {rets, r7-r4}			  ## aes128.c:18:0
 1e05a48:    24 08             	r4 = r2			  ## aes128.c:18:0
 1e05a4a:    15 08             	r5 = r1			  ## aes128.c:18:0
 1e05a4c:    06 08             	r6 = r0			  ## aes128.c:18:0
 1e05a4e:    98 f3 a5 09       	call 3150666 <local_irq_disable : 106d9c >			  ## aes128.c:19:5
 1e05a52:    c0 6c             	r0 = b[r6 + 12] (u)			  ## aes_hw.c:46:12
 1e05a54:    d1 6c             	r1 = b[r6 + 13] (u)			  ## aes_hw.c:46:12
 1e05a56:    e2 6c             	r2 = b[r6 + 14] (u)			  ## aes_hw.c:46:12
 1e05a58:    f3 6c             	r3 = b[r6 + 15] (u)			  ## aes_hw.c:46:12
 1e05a5a:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:46:12
 1e05a5c:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:46:12
 1e05a60:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## aes_hw.c:46:12
 1e05a64:    e0 fd 30 10       	r1 = r0 | r3			  ## aes_hw.c:46:12
 1e05a68:    c0 ff 00 43 1e 00 	r0 = 1983232 <uECC_vli_cmp_unsafe+0xDD304 : 1e4300 >
 1e05a6e:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:47:17
 1e05a70:    81 6c             	r1 = b[r6 + 8] (u)			  ## aes_hw.c:49:12
 1e05a72:    92 6c             	r2 = b[r6 + 9] (u)			  ## aes_hw.c:49:12
 1e05a74:    a3 6c             	r3 = b[r6 + 10] (u)			  ## aes_hw.c:49:12
 1e05a76:    b7 6c             	r7 = b[r6 + 11] (u)			  ## aes_hw.c:49:12
 1e05a78:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:49:12
 1e05a7a:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:49:12
 1e05a7e:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:49:12
 1e05a82:    51 be             	r1 |= r7			  ## aes_hw.c:49:12
 1e05a84:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:50:17
 1e05a86:    41 6c             	r1 = b[r6 + 4] (u)			  ## aes_hw.c:52:12
 1e05a88:    52 6c             	r2 = b[r6 + 5] (u)			  ## aes_hw.c:52:12
 1e05a8a:    63 6c             	r3 = b[r6 + 6] (u)			  ## aes_hw.c:52:12
 1e05a8c:    77 6c             	r7 = b[r6 + 7] (u)			  ## aes_hw.c:52:12
 1e05a8e:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:52:12
 1e05a90:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:52:12
 1e05a94:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:52:12
 1e05a98:    51 be             	r1 |= r7			  ## aes_hw.c:52:12
 1e05a9a:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:53:17
 1e05a9c:    01 6c             	r1 = b[r6 + 0] (u)			  ## aes_hw.c:55:12
 1e05a9e:    12 6c             	r2 = b[r6 + 1] (u)			  ## aes_hw.c:55:12
 1e05aa0:    23 6c             	r3 = b[r6 + 2] (u)			  ## aes_hw.c:55:12
 1e05aa2:    36 6c             	r6 = b[r6 + 3] (u)			  ## aes_hw.c:55:12
 1e05aa4:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:55:12
 1e05aa6:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:55:12
 1e05aaa:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:55:12
 1e05aae:    51 bc             	r1 |= r6			  ## aes_hw.c:55:12
 1e05ab0:    29 40             	[r0 + 8] = r1			  ## aes_hw.c:56:17
 1e05ab2:    c0 f4 10 09       	[r0 + 0] = 16			  ## aes_hw.c:59:17
 1e05ab6:    01 40             	r1 = [r0 + 0]			  ## aes_hw.c:60:21
 1e05ab8:    25 f3 fd 1f       	if ((r1 & 32) != 0) goto -6 <aes128_start+0x70 : 1e05ab6 >			  ## aes_hw.c:60:5
 1e05abc:    c1 6a             	r1 = b[r5 + 12] (u)			  ## aes_hw.c:65:12
 1e05abe:    d2 6a             	r2 = b[r5 + 13] (u)			  ## aes_hw.c:65:12
 1e05ac0:    e3 6a             	r3 = b[r5 + 14] (u)			  ## aes_hw.c:65:12
 1e05ac2:    f6 6a             	r6 = b[r5 + 15] (u)			  ## aes_hw.c:65:12
 1e05ac4:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:65:12
 1e05ac6:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:65:12
 1e05aca:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:65:12
 1e05ace:    51 bc             	r1 |= r6			  ## aes_hw.c:65:12
 1e05ad0:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:66:19
 1e05ad2:    81 6a             	r1 = b[r5 + 8] (u)			  ## aes_hw.c:68:12
 1e05ad4:    92 6a             	r2 = b[r5 + 9] (u)			  ## aes_hw.c:68:12
 1e05ad6:    a3 6a             	r3 = b[r5 + 10] (u)			  ## aes_hw.c:68:12
 1e05ad8:    b6 6a             	r6 = b[r5 + 11] (u)			  ## aes_hw.c:68:12
 1e05ada:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:68:12
 1e05adc:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:68:12
 1e05ae0:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:68:12
 1e05ae4:    51 bc             	r1 |= r6			  ## aes_hw.c:68:12
 1e05ae6:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:69:19
 1e05ae8:    41 6a             	r1 = b[r5 + 4] (u)			  ## aes_hw.c:71:12
 1e05aea:    52 6a             	r2 = b[r5 + 5] (u)			  ## aes_hw.c:71:12
 1e05aec:    63 6a             	r3 = b[r5 + 6] (u)			  ## aes_hw.c:71:12
 1e05aee:    76 6a             	r6 = b[r5 + 7] (u)			  ## aes_hw.c:71:12
 1e05af0:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:71:12
 1e05af2:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:71:12
 1e05af6:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:71:12
 1e05afa:    51 bc             	r1 |= r6			  ## aes_hw.c:71:12
 1e05afc:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:72:19
 1e05afe:    01 6a             	r1 = b[r5 + 0] (u)			  ## aes_hw.c:74:12
 1e05b00:    12 6a             	r2 = b[r5 + 1] (u)			  ## aes_hw.c:74:12
 1e05b02:    23 6a             	r3 = b[r5 + 2] (u)			  ## aes_hw.c:74:12
 1e05b04:    35 6a             	r5 = b[r5 + 3] (u)			  ## aes_hw.c:74:12
 1e05b06:    09 c6             	r1 = r1 << 24			  ## aes_hw.c:74:12
 1e05b08:    c8 fd 80 12       	r1 <= insert(r2, p:16, l:8)			  ## aes_hw.c:74:12
 1e05b0c:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## aes_hw.c:74:12
 1e05b10:    51 ba             	r1 |= r5			  ## aes_hw.c:74:12
 1e05b12:    19 40             	[r0 + 4] = r1			  ## aes_hw.c:75:19
 1e05b14:    c0 f4 01 09       	[r0 + 0] = 1			  ## aes_hw.c:78:18
 1e05b18:    01 40             	r1 = [r0 + 0]			  ## aes_hw.c:79:20
 1e05b1a:    22 f3 fd 1f       	if ((r1 & 4) != 0) goto -6 <aes128_start+0xD2 : 1e05b18 >			  ## aes_hw.c:79:5
 1e05b1e:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e05b20:    09 68             	b[r4 + 0] = r1			  ## aes_hw.c:81:5
 1e05b22:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e05b24:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:81:5
 1e05b26:    19 68             	b[r4 + 1] = r1			  ## aes_hw.c:81:5
 1e05b28:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e05b2a:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:81:5
 1e05b2c:    29 68             	b[r4 + 2] = r1			  ## aes_hw.c:81:5
 1e05b2e:    31 40             	r1 = [r0 + 12]			  ## aes_hw.c:81:5
 1e05b30:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:81:5
 1e05b32:    39 68             	b[r4 + 3] = r1			  ## aes_hw.c:81:5
 1e05b34:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e05b36:    49 68             	b[r4 + 4] = r1			  ## aes_hw.c:82:5
 1e05b38:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e05b3a:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:82:5
 1e05b3c:    59 68             	b[r4 + 5] = r1			  ## aes_hw.c:82:5
 1e05b3e:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e05b40:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:82:5
 1e05b42:    69 68             	b[r4 + 6] = r1			  ## aes_hw.c:82:5
 1e05b44:    41 40             	r1 = [r0 + 16]			  ## aes_hw.c:82:5
 1e05b46:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:82:5
 1e05b48:    79 68             	b[r4 + 7] = r1			  ## aes_hw.c:82:5
 1e05b4a:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e05b4c:    89 68             	b[r4 + 8] = r1			  ## aes_hw.c:83:5
 1e05b4e:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e05b50:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:83:5
 1e05b52:    99 68             	b[r4 + 9] = r1			  ## aes_hw.c:83:5
 1e05b54:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e05b56:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:83:5
 1e05b58:    a9 68             	b[r4 + 10] = r1			  ## aes_hw.c:83:5
 1e05b5a:    51 40             	r1 = [r0 + 20]			  ## aes_hw.c:83:5
 1e05b5c:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:83:5
 1e05b5e:    b9 68             	b[r4 + 11] = r1			  ## aes_hw.c:83:5
 1e05b60:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e05b62:    c9 68             	b[r4 + 12] = r1			  ## aes_hw.c:84:5
 1e05b64:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e05b66:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:84:5
 1e05b68:    d9 68             	b[r4 + 13] = r1			  ## aes_hw.c:84:5
 1e05b6a:    61 40             	r1 = [r0 + 24]			  ## aes_hw.c:84:5
 1e05b6c:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:84:5
 1e05b6e:    e9 68             	b[r4 + 14] = r1			  ## aes_hw.c:84:5
 1e05b70:    60 40             	r0 = [r0 + 24]			  ## aes_hw.c:84:5
 1e05b72:    00 d6             	r0 = r0 >> 24			  ## aes_hw.c:84:5
 1e05b74:    f8 68             	b[r4 + 15] = r0			  ## aes_hw.c:84:5
 1e05b76:    17 01             	{rets, r7-r4} = [sp++]			  ## aes128.c:21:5
 1e05b78:    d8 f3 0e 09       	goto 3150364 <local_irq_enable : 106d98 >			  ## aes128.c:21:5


thread_suspend:
 1e05b7c:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:122:0
 1e05b7e:    15 08             	r5 = r1			  ## thread.c:122:0
 1e05b80:    04 08             	r4 = r0			  ## thread.c:122:0
 1e05b82:    98 f3 0b 09       	call 3150358 <local_irq_disable : 106d9c >			  ## thread.c:129:5
 1e05b86:    6d 69             	b[r4 + 22] = r5			  ## thread.c:130:25
 1e05b88:    07 3a             	if (r5 != 0) goto 14 <thread_suspend+0x1C : 1e05b98 >			  ## thread.c:130:25
 1e05b8a:    52 69             	r2 = b[r4 + 21] (u)			  ## thread.c:133:31
 1e05b8c:    21 fc ff ff       	r1 = r2 + -1			  ## thread.c:133:61
 1e05b90:    00 70             	r0 = 0			  ## thread.c:133:26
 1e05b92:    01 24             	if (r2 == 0) goto 2 <thread_suspend+0x1A : 1e05b96 >			  ## thread.c:133:26
 1e05b94:    10 08             	r0 = r1			  ## thread.c:133:26
 1e05b96:    58 69             	b[r4 + 21] = r0			  ## thread.c:133:24
 1e05b98:    15 01             	{rets, r5, r4} = [sp++]			  ## thread.c:137:5
 1e05b9a:    d8 f3 fd 08       	goto 3150330 <local_irq_enable : 106d98 >			  ## thread.c:137:5


pseudo_random_genrate:
 1e05b9e:    08 22             	if (r1 == 0) goto 16 <pseudo_random_genrate+0x12 : 1e05bb0 >			  ## misc_hw.c:84:0
 1e05ba0:    c2 ff 00 3b 1e 00 	r2 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## misc_hw.c:84:0
 1e05ba6:    03 44             	r3 = [r2 + 0]			  ## misc_hw.c:86:28
 1e05ba8:    93 f9 01 00       	b[r0 ++= 1] = r3			  ## misc_hw.c:86:17
 1e05bac:    51 f3 fb ff       	if (--r1 != 0) goto -10 <pseudo_random_genrate+0x8 : 1e05ba6 >
 1e05bb0:    20 00             	rts			  ## misc_hw.c:88:1


sys_timer_register:
 1e05bb2:    02 08             	r2 = r0			  ## sys_timer.c:30:0
 1e05bb4:    00 70             	r0 = 0			  ## sys_timer.c:31:12
 1e05bb6:    c0 f3 2e 2c       	goto 22620 <sys_timer_add : 1e0b416 >			  ## sys_timer.c:31:12


sys_timer_set_context:
 1e05bba:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:57:0
 1e05bbc:    c0 f3 fe 2d       	goto 23548 <sys_timer_set_user_data : 1e0b7bc >			  ## sys_timer.c:58:5


low_power_request:
 1e05bc0:    c0 ff c0 47 00 00 	r0 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:668:0
 1e05bc6:    01 f9 32 00       	r1 = b[r0 + 50] (u)			  ## power_hw.c:669:17
 1e05bca:    03 22             	if (r1 == 0) goto 6 <low_power_request+0x12 : 1e05bd2 >			  ## power_hw.c:669:17
 1e05bcc:    11 70             	r1 = 1			  ## power_hw.c:670:25
 1e05bce:    11 f9 30 00       	b[r0 + 48] = r1			  ## power_hw.c:670:25
 1e05bd2:    20 00             	rts			  ## power_hw.c:676:1


lbuf_init_btctrler:
 1e05bd4:    34 00             	[--sp] = rets			  ## lbuf.c:28:0
 1e05bd6:    13 08             	r3 = r1			  ## lbuf.c:28:0
 1e05bd8:    02 08             	r2 = r0			  ## lbuf.c:28:0
 1e05bda:    60 ff 03 29 06 00 	if ((r2 & 3) == 0) goto 12 <lbuf_init_btctrler+0x18 : 1e05bec >			  ## lbuf.c:28:0
 1e05be0:    20 fd 03 29       	r0 = r2 & 3			  ## lbuf.c:32:18
 1e05be4:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:33:22
 1e05be8:    02 09             	r2 += r0			  ## lbuf.c:34:13
 1e05bea:    23 b6             	r3 = r3 - r0			  ## lbuf.c:33:17
 1e05bec:    60 ff 03 29 02 00 	if ((r2 & 3) == 0) goto 4 <lbuf_init_btctrler+0x22 : 1e05bf6 >
 1e05bf2:    8f f3 10 ec       	call 2086944 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e05bf6:    c0 ff e4 ff 00 00 	r0 = 65508 <_IRQ_MEM_ADDR+0xE4 : ffe4 >			  ## lbuf.c:43:41
 1e05bfc:    30 09             	r0 += r3			  ## lbuf.c:43:41
 1e05bfe:    c8 54             	h[r2 + 24] = r0			  ## lbuf.c:43:15
 1e05c00:    0a 44             	[r2 + 0] = r2			  ## list.h:188:16
 1e05c02:    1a 44             	[r2 + 4] = r2			  ## list.h:189:16
 1e05c04:    00 95             	r0 = r2 + 16			  ## lbuf.c:42:34
 1e05c06:    38 44             	[r2 + 12] = r0			  ## list.h:137:16
 1e05c08:    81 94             	r1 = r2 + 8			  ## lbuf.c:50:27
 1e05c0a:    49 44             	[r2 + 16] = r1			  ## list.h:138:16
 1e05c0c:    59 44             	[r2 + 20] = r1			  ## list.h:139:16
 1e05c0e:    28 44             	[r2 + 8] = r0			  ## list.h:140:16
 1e05c10:    20 08             	r0 = r2			  ## lbuf.c:54:5
 1e05c12:    30 00             	pc = [sp++]			  ## lbuf.c:54:5


crc_get_32bit:
 1e05c14:    74 01             	[--sp] = {rets, r4}			  ## misc_hw.c:32:0
 1e05c16:    02 70             	r2 = 0			  ## misc_hw.c:32:0
 1e05c18:    c1 ff 00 35 1e 00 	r1 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## misc_hw.c:32:0
 1e05c1e:    1a 42             	[r1 + 4] = r2			  ## misc_hw.c:36:17
 1e05c20:    04 60             	r4 = b[r0 + 0] (u)			  ## misc_hw.c:36:17
 1e05c22:    13 90             	r3 = r0 + 1			  ## misc_hw.c:37:5
 1e05c24:    14 05             	r4 = r4.b0 (s)			  ## misc_hw.c:39:24
 1e05c26:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:39:22
 1e05c28:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## misc_hw.c:40:14
 1e05c2c:    12 80             	r2 += 1			  ## misc_hw.c:40:5
 1e05c2e:    fa 39             	if (r4 != 0) goto -12 <crc_get_32bit+0x10 : 1e05c24 >			  ## misc_hw.c:40:5
 1e05c30:    08 00             	csync			  ## misc_hw.c:42:5
 1e05c32:    13 42             	r3 = [r1 + 4]			  ## misc_hw.c:43:19
 1e05c34:    c1 f4 00 19       	[r1 + 4] = 0			  ## misc_hw.c:45:17
 1e05c38:    24 fa 00 02       	r4 = b[r0+r2] (s)			  ## misc_hw.c:48:24
 1e05c3c:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:48:22
 1e05c3e:    52 f3 fb ff       	if (--r2 != 0) goto -10 <crc_get_32bit+0x24 : 1e05c38 >			  ## misc_hw.c:49:5
 1e05c42:    08 00             	csync			  ## misc_hw.c:51:5
 1e05c44:    10 42             	r0 = [r1 + 4]			  ## misc_hw.c:52:20
 1e05c46:    00 c4             	r0 = r0 << 16			  ## misc_hw.c:52:24
 1e05c48:    50 b6             	r0 |= r3			  ## misc_hw.c:52:9
 1e05c4a:    54 01             	{pc, r4} = [sp++]			  ## misc_hw.c:54:5


thread_create:
 1e05c4c:    79 01             	[--sp] = {rets, r9-r4}			  ## thread.c:85:0
 1e05c4e:    34 08             	r4 = r3			  ## thread.c:85:0
 1e05c50:    28 08             	r8 = r2			  ## thread.c:85:0
 1e05c52:    19 08             	r9 = r1			  ## thread.c:85:0
 1e05c54:    05 08             	r5 = r0			  ## thread.c:85:0
 1e05c56:    90 08             	r0 = r9			  ## thread.c:63:22
 1e05c58:    dd 17             	call -70 <crc_get_32bit : 1e05c14 >			  ## thread.c:63:22
 1e05c5a:    06 48             	r6 = [r4 + 0]			  ## thread.c:63:22
 1e05c5c:    07 08             	r7 = r0			  ## thread.c:63:22
 1e05c5e:    46 f2 09 00       	if (r6 == r4) goto 18 <thread_create+0x28 : 1e05c74 >
 1e05c62:    30 4c             	r0 = [r6 + 12]			  ## thread.c:69:44
 1e05c64:    d7 17             	call -82 <crc_get_32bit : 1e05c14 >			  ## thread.c:69:27
 1e05c66:    07 f2 1c 00       	if (r7 == r0) goto 56 <thread_create+0x56 : 1e05ca2 >			  ## thread.c:69:27
 1e05c6a:    06 4c             	r6 = [r6 + 0]
 1e05c6c:    46 f2 f9 1f       	if (r6 != r4) goto -14 <thread_create+0x16 : 1e05c62 >
 1e05c70:    00 48             	r0 = [r4 + 0]
 1e05c72:    01 18             	goto 2 <thread_create+0x2A : 1e05c76 >
 1e05c74:    40 08             	r0 = r4			  ## list.h:124:18
 1e05c76:    18 f6 10 50       	[r5 + 16] = r8			  ## thread.c:95:13
 1e05c7a:    11 70             	r1 = 1			  ## thread.c:96:20
 1e05c7c:    59 6b             	b[r5 + 21] = r1			  ## thread.c:96:20
 1e05c7e:    01 70             	r1 = 0			  ## thread.c:97:25
 1e05c80:    69 6b             	b[r5 + 22] = r1			  ## thread.c:97:25
 1e05c82:    19 f6 0c 50       	[r5 + 12] = r9			  ## thread.c:98:14
 1e05c86:    2c 4a             	[r5 + 8] = r4			  ## thread.c:99:15
 1e05c88:    40 f2 06 10       	if (r0 != r4) goto 12 <thread_create+0x4C : 1e05c98 >			  ## thread.c:99:15
 1e05c8c:    22 48             	r2 = [r4 + 8]			  ## thread.c:104:26
 1e05c8e:    c0 ff a6 5c e0 01 	r0 = 31480998 <thread_schedule : 1e05ca6 >			  ## thread.c:104:15
 1e05c94:    82 00             	call r2			  ## thread.c:104:15
 1e05c96:    06 30             	if (r0 != 0) goto 12 <thread_create+0x58 : 1e05ca4 >
 1e05c98:    10 48             	r0 = [r4 + 4]			  ## list.h:154:28
 1e05c9a:    1d 48             	[r4 + 4] = r5			  ## list.h:137:16
 1e05c9c:    0c 4a             	[r5 + 0] = r4			  ## list.h:138:16
 1e05c9e:    18 4a             	[r5 + 4] = r0			  ## list.h:139:16
 1e05ca0:    0d 40             	[r0 + 0] = r5			  ## list.h:140:16
 1e05ca2:    00 70             	r0 = 0
 1e05ca4:    59 01             	{pc, r9-r4} = [sp++]			  ## thread.c:118:1


thread_schedule:
 1e05ca6:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:27:0
 1e05ca8:    04 08             	r4 = r0			  ## thread.c:27:0
 1e05caa:    02 48             	r2 = [r4 + 0]			  ## thread.c:33:5
 1e05cac:    42 f2 0a 00       	if (r2 == r4) goto 20 <thread_schedule+0x1E : 1e05cc4 >
 1e05cb0:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:35:16
 1e05cb2:    05 44             	r5 = [r2 + 0]			  ## thread.c:35:16
 1e05cb4:    03 20             	if (r0 == 0) goto 6 <thread_schedule+0x16 : 1e05cbc >
 1e05cb6:    41 44             	r1 = [r2 + 16]			  ## thread.c:37:16
 1e05cb8:    20 08             	r0 = r2			  ## thread.c:37:13
 1e05cba:    81 00             	call r1			  ## thread.c:37:13
 1e05cbc:    52 08             	r2 = r5
 1e05cbe:    45 f2 f7 1f       	if (r5 != r4) goto -18 <thread_schedule+0xA : 1e05cb0 >
 1e05cc2:    02 48             	r2 = [r4 + 0]
 1e05cc4:    42 f2 0f 00       	if (r2 == r4) goto 30 <thread_schedule+0x40 : 1e05ce6 >
 1e05cc8:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:43:16
 1e05cca:    04 20             	if (r0 == 0) goto 8 <thread_schedule+0x2E : 1e05cd4 >			  ## thread.c:43:16
 1e05ccc:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:43:34
 1e05cce:    0f 20             	if (r0 == 0) goto 30 <thread_schedule+0x48 : 1e05cee >			  ## thread.c:43:34
 1e05cd0:    8f f3 a1 eb       	call 2086722 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e05cd4:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:50:31
 1e05cd6:    03 f2 01 c0       	ifs (r3 > r0) goto 2 <thread_schedule+0x36 : 1e05cdc >
 1e05cda:    30 08             	r0 = r3			  ## thread.c:50:13
 1e05cdc:    02 44             	r2 = [r2 + 0]
 1e05cde:    03 08             	r3 = r0
 1e05ce0:    42 f2 f2 1f       	if (r2 != r4) goto -28 <thread_schedule+0x22 : 1e05cc8 >
 1e05ce4:    00 00             	nop
 1e05ce6:    42 48             	r2 = [r4 + 16]			  ## thread.c:55:12
 1e05ce8:    01 04             	r1 = r0.b0 (u)			  ## thread.c:55:5
 1e05cea:    00 70             	r0 = 0			  ## thread.c:55:5
 1e05cec:    82 00             	call r2			  ## thread.c:55:5
 1e05cee:    55 01             	{pc, r5, r4} = [sp++]			  ## thread.c:56:1


thread_run:
 1e05cf0:    da 1f             	goto -76 <thread_schedule : 1e05ca6 >			  ## thread.c:175:0


ccm_memory_v2:
 1e05cf2:    7a 01             	[--sp] = {rets, r10-r4}			  ## aes_hw.c:99:0
 1e05cf4:    36 08             	r6 = r3			  ## aes_hw.c:99:0
 1e05cf6:    28 08             	r8 = r2			  ## aes_hw.c:99:0
 1e05cf8:    15 08             	r5 = r1			  ## aes_hw.c:99:0
 1e05cfa:    07 08             	r7 = r0			  ## aes_hw.c:99:0
 1e05cfc:    98 f3 4e 08       	call 3149980 <local_irq_disable : 106d9c >			  ## aes_hw.c:101:5
 1e05d00:    90 02             	r0 = [sp+36]			  ## aes_hw.c:101:5
 1e05d02:    08 00             	csync			  ## aes_hw.c:101:5
 1e05d04:    c2 ff 00 43 1e 00 	r2 = 1983232 <uECC_vli_cmp_unsafe+0xDD304 : 1e4300 >			  ## aes_hw.c:101:5
 1e05d0a:    b8 44             	[r2 + 44] = r0			  ## aes_hw.c:106:21
 1e05d0c:    30 6e             	r0 = b[r7 + 3] (u)			  ## aes_hw.c:110:12
 1e05d0e:    21 6e             	r1 = b[r7 + 2] (u)			  ## aes_hw.c:110:12
 1e05d10:    13 6e             	r3 = b[r7 + 1] (u)			  ## aes_hw.c:110:12
 1e05d12:    04 6e             	r4 = b[r7 + 0] (u)			  ## aes_hw.c:110:12
 1e05d14:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:110:12
 1e05d16:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:110:12
 1e05d1a:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:110:12
 1e05d1e:    50 b8             	r0 |= r4			  ## aes_hw.c:110:12
 1e05d20:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:111:17
 1e05d22:    70 6e             	r0 = b[r7 + 7] (u)			  ## aes_hw.c:113:12
 1e05d24:    61 6e             	r1 = b[r7 + 6] (u)			  ## aes_hw.c:113:12
 1e05d26:    53 6e             	r3 = b[r7 + 5] (u)			  ## aes_hw.c:113:12
 1e05d28:    44 6e             	r4 = b[r7 + 4] (u)			  ## aes_hw.c:113:12
 1e05d2a:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:113:12
 1e05d2c:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:113:12
 1e05d30:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:113:12
 1e05d34:    50 b8             	r0 |= r4			  ## aes_hw.c:113:12
 1e05d36:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:114:17
 1e05d38:    b0 6e             	r0 = b[r7 + 11] (u)			  ## aes_hw.c:116:12
 1e05d3a:    a1 6e             	r1 = b[r7 + 10] (u)			  ## aes_hw.c:116:12
 1e05d3c:    93 6e             	r3 = b[r7 + 9] (u)			  ## aes_hw.c:116:12
 1e05d3e:    84 6e             	r4 = b[r7 + 8] (u)			  ## aes_hw.c:116:12
 1e05d40:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:116:12
 1e05d42:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:116:12
 1e05d46:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:116:12
 1e05d4a:    50 b8             	r0 |= r4			  ## aes_hw.c:116:12
 1e05d4c:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:117:17
 1e05d4e:    f0 6e             	r0 = b[r7 + 15] (u)			  ## aes_hw.c:119:12
 1e05d50:    e1 6e             	r1 = b[r7 + 14] (u)			  ## aes_hw.c:119:12
 1e05d52:    d3 6e             	r3 = b[r7 + 13] (u)			  ## aes_hw.c:119:12
 1e05d54:    c4 6e             	r4 = b[r7 + 12] (u)			  ## aes_hw.c:119:12
 1e05d56:    00 c6             	r0 = r0 << 24			  ## aes_hw.c:119:12
 1e05d58:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## aes_hw.c:119:12
 1e05d5c:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## aes_hw.c:119:12
 1e05d60:    50 b8             	r0 |= r4			  ## aes_hw.c:119:12
 1e05d62:    28 44             	[r2 + 8] = r0			  ## aes_hw.c:120:17
 1e05d64:    c0 f4 10 29       	[r2 + 0] = 16			  ## aes_hw.c:122:17
 1e05d68:    08 2c             	if (r6 == 0) goto 16 <ccm_memory_v2+0x88 : 1e05d7a >			  ## aes_hw.c:123:9
 1e05d6a:    16 e0 02 00       	if (r6 == 1) goto 4 <ccm_memory_v2+0x80 : 1e05d72 >
 1e05d6e:    8f f3 52 eb       	call 2086564 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e05d72:    00 44             	r0 = [r2 + 0]			  ## aes_hw.c:125:21
 1e05d74:    07 fd 08 0a       	r7 = r0 | 2048			  ## aes_hw.c:125:21
 1e05d78:    03 18             	goto 6 <ccm_memory_v2+0x8E : 1e05d80 >
 1e05d7a:    00 44             	r0 = [r2 + 0]			  ## aes_hw.c:127:21
 1e05d7c:    37 fd 08 0a       	r7 = r0 & 4294965247			  ## aes_hw.c:127:21
 1e05d80:    d1 02             	r1 = [sp+52]
 1e05d82:    c4 02             	r4 = [sp+48]
 1e05d84:    b0 02             	r0 = [sp+44]
 1e05d86:    0a f5 28 00       	r10 = [sp+40]
 1e05d8a:    09 f5 20 00       	r9 = [sp+32]
 1e05d8e:    0f 44             	[r2 + 0] = r7
 1e05d90:    07 44             	r7 = [r2 + 0]			  ## aes_hw.c:129:20
 1e05d92:    25 f3 fd 7f       	if ((r7 & 32) != 0) goto -6 <ccm_memory_v2+0x9E : 1e05d90 >			  ## aes_hw.c:129:5
 1e05d96:    cc 44             	[r2 + 48] = r4			  ## aes_hw.c:135:21
 1e05d98:    34 6a             	r4 = b[r5 + 3] (u)			  ## aes_hw.c:138:12
 1e05d9a:    27 6a             	r7 = b[r5 + 2] (u)			  ## aes_hw.c:138:12
 1e05d9c:    16 6a             	r6 = b[r5 + 1] (u)			  ## aes_hw.c:138:12
 1e05d9e:    03 6a             	r3 = b[r5 + 0] (u)			  ## aes_hw.c:138:12
 1e05da0:    24 c6             	r4 = r4 << 24			  ## aes_hw.c:138:12
 1e05da2:    c8 fd 80 47       	r4 <= insert(r7, p:16, l:8)			  ## aes_hw.c:138:12
 1e05da6:    c8 fd 40 46       	r4 <= insert(r6, p:8, l:8)			  ## aes_hw.c:138:12
 1e05daa:    53 b8             	r3 |= r4			  ## aes_hw.c:138:12
 1e05dac:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:139:19
 1e05dae:    73 6a             	r3 = b[r5 + 7] (u)			  ## aes_hw.c:141:12
 1e05db0:    64 6a             	r4 = b[r5 + 6] (u)			  ## aes_hw.c:141:12
 1e05db2:    56 6a             	r6 = b[r5 + 5] (u)			  ## aes_hw.c:141:12
 1e05db4:    47 6a             	r7 = b[r5 + 4] (u)			  ## aes_hw.c:141:12
 1e05db6:    1b c6             	r3 = r3 << 24			  ## aes_hw.c:141:12
 1e05db8:    c8 fd 80 34       	r3 <= insert(r4, p:16, l:8)			  ## aes_hw.c:141:12
 1e05dbc:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## aes_hw.c:141:12
 1e05dc0:    53 be             	r3 |= r7			  ## aes_hw.c:141:12
 1e05dc2:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:142:19
 1e05dc4:    b3 6a             	r3 = b[r5 + 11] (u)			  ## aes_hw.c:144:12
 1e05dc6:    a4 6a             	r4 = b[r5 + 10] (u)			  ## aes_hw.c:144:12
 1e05dc8:    96 6a             	r6 = b[r5 + 9] (u)			  ## aes_hw.c:144:12
 1e05dca:    87 6a             	r7 = b[r5 + 8] (u)			  ## aes_hw.c:144:12
 1e05dcc:    1b c6             	r3 = r3 << 24			  ## aes_hw.c:144:12
 1e05dce:    c8 fd 80 34       	r3 <= insert(r4, p:16, l:8)			  ## aes_hw.c:144:12
 1e05dd2:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## aes_hw.c:144:12
 1e05dd6:    53 be             	r3 |= r7			  ## aes_hw.c:144:12
 1e05dd8:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:145:19
 1e05dda:    c3 6a             	r3 = b[r5 + 12] (u)			  ## aes_hw.c:147:12
 1e05ddc:    7b 44             	[r2 + 28] = r3			  ## aes_hw.c:148:19
 1e05dde:    03 f9 00 80       	r3 = b[r8 + 0] (u)			  ## aes_hw.c:151:22
 1e05de2:    8b 44             	[r2 + 32] = r3			  ## aes_hw.c:151:20
 1e05de4:    94 08             	r4 = r9			  ## aes_hw.c:156:9
 1e05de6:    01 22             	if (r1 == 0) goto 2 <ccm_memory_v2+0xF8 : 1e05dea >			  ## aes_hw.c:156:9
 1e05de8:    a4 08             	r4 = r10			  ## aes_hw.c:156:9
 1e05dea:    9c 44             	[r2 + 36] = r4
 1e05dec:    01 22             	if (r1 == 0) goto 2 <ccm_memory_v2+0xFE : 1e05df0 >
 1e05dee:    9a 08             	r10 = r9			  ## aes_hw.c:156:9
 1e05df0:    1a f6 28 20       	[r2 + 40] = r10
 1e05df4:    20 fb 01 3b       	r3 = 65536			  ## aes_hw.c:156:9
 1e05df8:    02 22             	if (r1 == 0) goto 4 <ccm_memory_v2+0x10C : 1e05dfe >			  ## aes_hw.c:156:9
 1e05dfa:    20 fb 04 3b       	r3 = 262144			  ## aes_hw.c:156:9
 1e05dfe:    01 44             	r1 = [r2 + 0]
 1e05e00:    51 b6             	r1 |= r3
 1e05e02:    09 44             	[r2 + 0] = r1
 1e05e04:    01 44             	r1 = [r2 + 0]			  ## aes_hw.c:178:21
 1e05e06:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <ccm_memory_v2+0x112 : 1e05e04 >			  ## aes_hw.c:178:5
 1e05e0a:    00 f4 40 2c       	[r2 + 0] |= 1073741824			  ## aes_hw.c:179:17
 1e05e0e:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e05e10:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:182:5
 1e05e12:    09 60             	b[r0 + 0] = r1			  ## aes_hw.c:182:5
 1e05e14:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e05e16:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:182:5
 1e05e18:    19 60             	b[r0 + 1] = r1			  ## aes_hw.c:182:5
 1e05e1a:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e05e1c:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:182:5
 1e05e1e:    29 60             	b[r0 + 2] = r1			  ## aes_hw.c:182:5
 1e05e20:    d1 44             	r1 = [r2 + 52]			  ## aes_hw.c:182:5
 1e05e22:    39 60             	b[r0 + 3] = r1			  ## aes_hw.c:182:5
 1e05e24:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e05e26:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:183:5
 1e05e28:    49 60             	b[r0 + 4] = r1			  ## aes_hw.c:183:5
 1e05e2a:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e05e2c:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:183:5
 1e05e2e:    59 60             	b[r0 + 5] = r1			  ## aes_hw.c:183:5
 1e05e30:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e05e32:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:183:5
 1e05e34:    69 60             	b[r0 + 6] = r1			  ## aes_hw.c:183:5
 1e05e36:    e1 44             	r1 = [r2 + 56]			  ## aes_hw.c:183:5
 1e05e38:    79 60             	b[r0 + 7] = r1			  ## aes_hw.c:183:5
 1e05e3a:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e05e3c:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:184:5
 1e05e3e:    89 60             	b[r0 + 8] = r1			  ## aes_hw.c:184:5
 1e05e40:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e05e42:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:184:5
 1e05e44:    99 60             	b[r0 + 9] = r1			  ## aes_hw.c:184:5
 1e05e46:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e05e48:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:184:5
 1e05e4a:    a9 60             	b[r0 + 10] = r1			  ## aes_hw.c:184:5
 1e05e4c:    f1 44             	r1 = [r2 + 60]			  ## aes_hw.c:184:5
 1e05e4e:    b9 60             	b[r0 + 11] = r1			  ## aes_hw.c:184:5
 1e05e50:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e05e52:    09 d6             	r1 = r1 >> 24			  ## aes_hw.c:185:5
 1e05e54:    c9 60             	b[r0 + 12] = r1			  ## aes_hw.c:185:5
 1e05e56:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e05e58:    09 d4             	r1 = r1 >> 16			  ## aes_hw.c:185:5
 1e05e5a:    d9 60             	b[r0 + 13] = r1			  ## aes_hw.c:185:5
 1e05e5c:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e05e5e:    09 d2             	r1 = r1 >> 8			  ## aes_hw.c:185:5
 1e05e60:    e9 60             	b[r0 + 14] = r1			  ## aes_hw.c:185:5
 1e05e62:    01 45             	r1 = [r2 + 64]			  ## aes_hw.c:185:5
 1e05e64:    f9 60             	b[r0 + 15] = r1			  ## aes_hw.c:185:5
 1e05e66:    1a 01             	{rets, r10-r4} = [sp++]			  ## aes_hw.c:190:5
 1e05e68:    d8 f3 96 07       	goto 3149612 <local_irq_enable : 106d98 >			  ## aes_hw.c:190:5


_vm_area_erase:
 1e05e6c:    78 01             	[--sp] = {rets, r8-r4}			  ## vm.c:266:0
 1e05e6e:    08 08             	r8 = r0			  ## vm.c:266:0
 1e05e70:    10 40             	r0 = [r0 + 4]			  ## vm.c:266:0
 1e05e72:    c1 ff a0 29 00 00 	r1 = 10656 <vm_obj : 29a0 >			  ## vm.c:271:9
 1e05e78:    01 f9 6d 11       	r1 = b[r1 + 365] (u)			  ## vm.c:271:9
 1e05e7c:    05 f6 00 80       	r5 = [r8 + 0]			  ## vm.c:267:33
 1e05e80:    22 f3 12 10       	if ((r1 & 4) != 0) goto 36 <_vm_area_erase+0x3C : 1e05ea8 >
 1e05e84:    00 d3             	r0 = r0 >> 12			  ## vm.c:282:30
 1e05e86:    26 04             	r6 = r0.l (u)			  ## vm.c:283:29
 1e05e88:    1e 2c             	if (r6 == 0) goto 60 <_vm_area_erase+0x5A : 1e05ec6 >			  ## vm.c:283:29
 1e05e8a:    17 70             	r7 = 1
 1e05e8c:    04 fb 00 f0       	r4 = -4096 <bank_code_load_addr+0x1E45DC : 1fff000 >
 1e05e90:    e2 fd 40 15       	r1 = r5 & r4
 1e05e94:    80 7c             	r0 = 200			  ## vm.c:1423:5
 1e05e96:    bf f3 86 d8       	call -20212 <norflash_ioctl : 1e00fa6 >			  ## vm.c:1423:5
 1e05e9a:    e0 05             	r0 = r7.l (u)			  ## vm.c:283:23
 1e05e9c:    17 80             	r7 += 1			  ## vm.c:283:9
 1e05e9e:    55 fc 00 10       	r5 = r5 + 4096			  ## vm.c:289:24
 1e05ea2:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x24 : 1e05e90 >
 1e05ea6:    0f 18             	goto 30 <_vm_area_erase+0x5A : 1e05ec6 >
 1e05ea8:    00 d2             	r0 = r0 >> 8			  ## vm.c:272:30
 1e05eaa:    26 04             	r6 = r0.l (u)			  ## vm.c:273:29
 1e05eac:    0c 2c             	if (r6 == 0) goto 24 <_vm_area_erase+0x5A : 1e05ec6 >			  ## vm.c:273:29
 1e05eae:    14 70             	r4 = 1
 1e05eb0:    31 fd ff 59       	r1 = r5 & 4294967040
 1e05eb4:    c0 7c             	r0 = 204			  ## vm.c:1423:5
 1e05eb6:    bf f3 76 d8       	call -20244 <norflash_ioctl : 1e00fa6 >			  ## vm.c:1423:5
 1e05eba:    20 05             	r0 = r4.l (u)			  ## vm.c:273:23
 1e05ebc:    14 80             	r4 += 1			  ## vm.c:273:9
 1e05ebe:    55 fc 00 01       	r5 = r5 + 256			  ## vm.c:279:24
 1e05ec2:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x44 : 1e05eb0 >
 1e05ec6:    00 70             	r0 = 0			  ## vm.c:293:30
 1e05ec8:    10 f7 08 80       	h[r8 + 8] = r0			  ## vm.c:293:30
 1e05ecc:    58 01             	{pc, r8-r4} = [sp++]			  ## vm.c:293:30


vm_reset:
 1e05ece:    75 01             	[--sp] = {rets, r5, r4}			  ## vm.c:591:0
 1e05ed0:    fe 0b             	sp += -4			  ## vm.c:591:0
 1e05ed2:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:594:9
 1e05ed8:    08 02             	[sp] = r0			  ## vm.c:594:9
 1e05eda:    c4 ff a0 29 00 00 	r4 = 10656 <vm_obj : 29a0 >			  ## vm.c:604:5
 1e05ee0:    40 08             	r0 = r4			  ## vm.c:596:5
 1e05ee2:    c4 17             	call -120 <_vm_area_erase : 1e05e6c >			  ## vm.c:596:5
 1e05ee4:    c0 98             	r0 = r4 + 12			  ## vm.c:597:5
 1e05ee6:    c2 17             	call -124 <_vm_area_erase : 1e05e6c >			  ## vm.c:597:5
 1e05ee8:    45 fc 68 01       	r5 = r4 + 360			  ## vm.c:597:5
 1e05eec:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:599:19
 1e05eee:    f0 b0             	r0 &= 4294967293			  ## vm.c:599:19
 1e05ef0:    58 6a             	b[r5 + 5] = r0			  ## vm.c:599:19
 1e05ef2:    02 48             	r2 = [r4 + 0]			  ## vm.c:601:38
 1e05ef4:    00 a0             	r0 = sp + 0
 1e05ef6:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e05ef8:    bf f3 bf d9       	call -19586 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e05efc:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:602:19
 1e05efe:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:602:19
 1e05f02:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:602:19
 1e05f06:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:602:19
 1e05f0a:    40 80             	r0 += 4			  ## vm.c:602:46
 1e05f0c:    08 4a             	[r5 + 0] = r0			  ## vm.c:602:17
 1e05f0e:    80 99             	r0 = r4 + 24			  ## vm.c:604:5
 1e05f10:    01 70             	r1 = 0			  ## vm.c:604:5
 1e05f12:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:604:5
 1e05f16:    98 f3 eb 07       	call 3149782 <memset : 106ef0 >			  ## vm.c:604:5
 1e05f1a:    02 0a             	sp += 4			  ## vm.c:604:5
 1e05f1c:    55 01             	{pc, r5, r4} = [sp++]			  ## vm.c:604:5


vm_area_check:
 1e05f1e:    34 00             	[--sp] = rets			  ## vm.c:544:0
 1e05f20:    13 08             	r3 = r1			  ## vm.c:544:0
 1e05f22:    8f f3 7e ec       	call 2087164 <flash_addr2cpu_addr : 3822 >			  ## vm.c:545:20
 1e05f26:    08 26             	if (r3 == 0) goto 16 <vm_area_check+0x1A : 1e05f38 >
 1e05f28:    01 60             	r1 = b[r0 + 0] (u)			  ## vm_commom.c:7:13
 1e05f2a:    10 80             	r0 += 1			  ## vm_commom.c:7:15
 1e05f2c:    f3 8f             	r3 += -1			  ## vm_commom.c:6:15
 1e05f2e:    00 ff ff 10 f9 ff 	if (r1 == 255) goto -14 <vm_area_check+0x8 : 1e05f26 >
 1e05f34:    00 70             	r0 = 0
 1e05f36:    30 00             	pc = [sp++]			  ## vm.c:552:1
 1e05f38:    10 70             	r0 = 1
 1e05f3a:    30 00             	pc = [sp++]			  ## vm.c:552:1


_vm_defrag:
 1e05f3c:    7f 01             	[--sp] = {rets, r15-r4}			  ## vm.c:423:0
 1e05f3e:    7c 0b             	sp += -264			  ## vm.c:423:0
 1e05f40:    c8 ff a0 29 00 00 	r8 = 10656 <vm_obj : 29a0 >			  ## vm.c:423:0
 1e05f46:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:432:9
 1e05f4a:    40 d0             	r0 = r0 >> 1			  ## vm.c:432:9
 1e05f4c:    19 70             	r9 = 1			  ## vm.c:432:9
 1e05f4e:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:432:9
 1e05f52:    ca 70             	r10 = 12			  ## vm.c:432:9
 1e05f54:    81 08             	r1 = r8			  ## vm.c:432:9
 1e05f56:    80 fe a0 10       	r1 += r0 * r10			  ## vm.c:432:9
 1e05f5a:    41 52             	r1 = h[r1 + 8] (u)			  ## vm.c:432:9
 1e05f5c:    ab 32             	if (r1 != 0) goto 342 <_vm_defrag+0x178 : 1e060b4 >			  ## vm.c:432:9
 1e05f5e:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:441:19
 1e05f62:    81 f6 00 08       	r1 = [r0+r8]			  ## vm.c:441:19
 1e05f66:    41 80             	r1 += 4			  ## vm.c:441:47
 1e05f68:    11 f6 68 81       	[r8 + 360] = r1			  ## vm.c:441:17
 1e05f6c:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:444:38
 1e05f70:    c0 ff 77 bb ee dd 	r0 = 3723410295 <bank_code_load_addr+0xD1153 : 1eebb77 >			  ## vm.c:443:14
 1e05f76:    08 02             	[sp] = r0			  ## vm.c:443:14
 1e05f78:    00 a0             	r0 = sp + 0			  ## vm.c:443:14
 1e05f7a:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e05f7c:    bf f3 7d d9       	call -19718 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e05f80:    0b 70             	r11 = 0
 1e05f82:    f0 fd 08 0b       	r0 = r11 << 1			  ## vm.c:476:17
 1e05f86:    80 fb 80 c0       	r12 = r0 + r8			  ## vm.c:476:17
 1e05f8a:    00 f7 18 c0       	r0 = h[r12 + 24] (u)			  ## vm.c:476:17
 1e05f8e:    60 20             	if (r0 == 0) goto 192 <_vm_defrag+0x114 : 1e06050 >			  ## vm.c:476:17
 1e05f90:    8d fc 68 01       	r13 = r8 + 360
 1e05f94:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## vm.c:478:54
 1e05f98:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:478:54
 1e05f9c:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:478:54
 1e05fa0:    81 f6 00 18       	r1 = [r1+r8]			  ## vm.c:478:54
 1e05fa4:    02 b2             	r2 = r1 + r0			  ## vm.c:478:52
 1e05fa6:    40 a0             	r0 = sp + 4
 1e05fa8:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e05faa:    bf f3 c3 d7       	call -20602 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e05fae:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:481:68
 1e05fb2:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:481:68
 1e05fb6:    11 fd 01 09       	r1 = r0 ^ 1			  ## vm.c:481:68
 1e05fba:    82 08             	r2 = r8			  ## vm.c:481:68
 1e05fbc:    80 fe a0 21       	r2 += r1 * r10			  ## vm.c:481:68
 1e05fc0:    01 44             	r1 = [r2 + 0]			  ## vm.c:481:68
 1e05fc2:    12 44             	r2 = [r2 + 4]			  ## vm.c:481:98
 1e05fc4:    c3 f5 07 00       	r3 = b[sp+7] (u)			  ## vm.c:479:23
 1e05fc8:    c4 f5 06 00       	r4 = b[sp+6] (u)			  ## vm.c:479:23
 1e05fcc:    0f f6 00 d0       	r15 = [r13 + 0]			  ## vm.c:481:21
 1e05fd0:    12 09             	r2 += r1			  ## vm.c:481:96
 1e05fd2:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## vm.c:479:23
 1e05fd6:    21 d1             	r1 = r4 >> 4			  ## vm.c:479:23
 1e05fd8:    80 fb 10 3f       	r3 = r15 + r1			  ## vm.c:481:33
 1e05fdc:    43 80             	r3 += 4			  ## vm.c:481:60
 1e05fde:    23 f2 68 80       	if (r3 > r2) goto 208 <_vm_defrag+0x176 : 1e060b2 >			  ## vm.c:481:60
 1e05fe2:    4e 92             	r14 = r1 + 4			  ## vm.c:494:114
 1e05fe4:    e5 08             	r5 = r14			  ## vm.c:345:17
 1e05fe6:    03 ff 00 51 02 00 	if (r5 < 256) goto 4 <_vm_defrag+0xB4 : 1e05ff0 >			  ## vm.c:345:17
 1e05fec:    05 fb 00 01       	r5 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:345:17
 1e05ff0:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:494:43
 1e05ff4:    80 f6 00 08       	r0 = [r0+r8]			  ## vm.c:494:43
 1e05ff8:    01 f7 18 c0       	r1 = h[r12 + 24] (u)			  ## vm.c:494:72
 1e05ffc:    06 b2             	r6 = r1 + r0			  ## vm.c:494:70
 1e05ffe:    e4 08             	r4 = r14
 1e06000:    87 a0             	r7 = sp + 8
 1e06002:    70 08             	r0 = r7			  ## vm.c:1466:5
 1e06004:    51 08             	r1 = r5			  ## vm.c:1466:5
 1e06006:    62 08             	r2 = r6			  ## vm.c:1466:5
 1e06008:    bf f3 94 d7       	call -20696 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e0600c:    70 08             	r0 = r7			  ## vm.c:1448:5
 1e0600e:    51 08             	r1 = r5			  ## vm.c:1448:5
 1e06010:    f2 08             	r2 = r15			  ## vm.c:1448:5
 1e06012:    bf f3 32 d9       	call -19868 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e06016:    56 09             	r6 += r5			  ## vm.c:354:18
 1e06018:    5f 09             	r15 += r5			  ## vm.c:353:18
 1e0601a:    64 b9             	r4 = r4 - r5			  ## vm.c:352:13
 1e0601c:    45 08             	r5 = r4			  ## vm.c:345:17
 1e0601e:    03 ff 00 41 02 00 	if (r4 < 256) goto 4 <_vm_defrag+0xEC : 1e06028 >
 1e06024:    05 fb 00 01       	r5 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:345:17
 1e06028:    eb 3b             	if (r5 != 0) goto -42 <_vm_defrag+0xC4 : 1e06000 >
 1e0602a:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:495:49
 1e0602e:    40 d0             	r0 = r0 >> 1			  ## vm.c:495:49
 1e06030:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:495:49
 1e06034:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:495:49
 1e06038:    80 f6 00 08       	r0 = [r0+r8]			  ## vm.c:495:49
 1e0603c:    01 f6 00 d0       	r1 = [r13 + 0]			  ## vm.c:495:35
 1e06040:    20 b2             	r0 = r1 - r0			  ## vm.c:495:47
 1e06042:    10 f7 18 c0       	h[r12 + 24] = r0			  ## vm.c:495:33
 1e06046:    00 f6 00 d0       	r0 = [r13 + 0]			  ## vm.c:496:29
 1e0604a:    e0 09             	r0 += r14			  ## vm.c:496:29
 1e0604c:    10 f6 00 d0       	[r13 + 0] = r0			  ## vm.c:496:29
 1e06050:    1b 80             	r11 += 1			  ## vm.c:446:46
 1e06052:    0b e8 96 3f       	if (r11 < 128) goto -212 <_vm_defrag+0x46 : 1e05f82 >			  ## vm.c:446:46
 1e06056:    85 fc 6d 01       	r5 = r8 + 365
 1e0605a:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:509:38
 1e0605c:    40 d0             	r0 = r0 >> 1			  ## vm.c:509:38
 1e0605e:    11 70             	r1 = 1			  ## vm.c:509:38
 1e06060:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:509:38
 1e06064:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:509:38
 1e06068:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:509:38
 1e0606c:    c0 ff 55 aa ee dd 	r0 = 3723405909 <bank_code_load_addr+0xD0031 : 1eeaa55 >			  ## vm.c:508:14
 1e06072:    08 02             	[sp] = r0			  ## vm.c:508:14
 1e06074:    04 a0             	r4 = sp + 0			  ## vm.c:508:14
 1e06076:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e06078:    40 08             	r0 = r4			  ## vm.c:1448:5
 1e0607a:    bf f3 fe d8       	call -19972 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e0607e:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:512:37
 1e06080:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## vm.c:512:37
 1e06084:    c2 70             	r2 = 12			  ## vm.c:512:37
 1e06086:    80 08             	r0 = r8			  ## vm.c:512:25
 1e06088:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:512:25
 1e0608c:    ef 16             	call -546 <_vm_area_erase : 1e05e6c >			  ## vm.c:512:9
 1e0608e:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:525:21
 1e06090:    b0 b0             	r0 ^= 2			  ## vm.c:525:19
 1e06092:    08 6a             	b[r5 + 0] = r0			  ## vm.c:525:19
 1e06094:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:528:38
 1e06098:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:528:38
 1e0609c:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:528:38
 1e060a0:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:527:14
 1e060a6:    08 02             	[sp] = r0			  ## vm.c:527:14
 1e060a8:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e060aa:    40 08             	r0 = r4			  ## vm.c:1448:5
 1e060ac:    bf f3 e5 d8       	call -20022 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e060b0:    01 18             	goto 2 <_vm_defrag+0x178 : 1e060b4 >
 1e060b2:    0d 17             	call -486 <vm_reset : 1e05ece >			  ## vm.c:484:21
 1e060b4:    84 0a             	sp += 264
 1e060b6:    5f 01             	{pc, r15-r4} = [sp++]


vm_warning_line_check:
 1e060b8:    c0 ff a0 29 00 00 	r0 = 10656 <vm_obj : 29a0 >			  ## vm.c:562:0
 1e060be:    01 fc 68 01       	r1 = r0 + 360			  ## vm.c:565:33
 1e060c2:    52 62             	r2 = b[r1 + 5] (u)			  ## vm.c:565:33
 1e060c4:    81 fd 08 22       	r2 = uextra(r2, p:1, l:1)			  ## vm.c:565:33
 1e060c8:    c3 70             	r3 = 12			  ## vm.c:565:33
 1e060ca:    80 fe 30 02       	r0 += r2 * r3			  ## vm.c:565:33
 1e060ce:    12 40             	r2 = [r0 + 4]			  ## vm.c:565:33
 1e060d0:    43 62             	r3 = b[r1 + 4] (u)			  ## vm.c:565:23
 1e060d2:    d2 0e             	r2 = r2 * r3			  ## vm.c:565:31
 1e060d4:    00 40             	r0 = [r0 + 0]			  ## vm.c:575:24
 1e060d6:    01 42             	r1 = [r1 + 0]			  ## vm.c:575:9
 1e060d8:    43 76             	r3 = 100			  ## vm.c:566:17
 1e060da:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## vm.c:566:17
 1e060de:    02 09             	r2 += r0			  ## vm.c:575:51
 1e060e0:    10 70             	r0 = 1			  ## vm.c:575:51
 1e060e2:    21 f2 01 80       	if (r1 > r2) goto 2 <vm_warning_line_check+0x30 : 1e060e8 >			  ## vm.c:575:51
 1e060e6:    00 70             	r0 = 0			  ## vm.c:575:21
 1e060e8:    20 00             	rts			  ## vm.c:580:1


syscfg_vm_init:
 1e060ea:    7c 01             	[--sp] = {rets, r12-r4}			  ## vm.c:1589:0
 1e060ec:    f8 0b             	sp += -16			  ## vm.c:1589:0
 1e060ee:    c7 ff 38 26 00 00 	r7 = 9784 <flash_info+0x20 : 2638 >			  ## vm_sfc.c:936:9
 1e060f4:    74 fc 68 00       	r4 = r7 + 104			  ## vm_sfc.c:889:5
 1e060f8:    f1 07             	r1 = -1			  ## vm_sfc.c:889:5
 1e060fa:    40 08             	r0 = r4			  ## vm_sfc.c:889:5
 1e060fc:    98 f3 92 06       	call 3149092 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:889:5
 1e06100:    15 4e             	r5 = [r7 + 4]			  ## vm_sfc.c:936:9
 1e06102:    36 4e             	r6 = [r7 + 12]			  ## vm_sfc.c:936:9
 1e06104:    07 6e             	r7 = b[r7 + 0] (u)			  ## vm_sfc.c:936:9
 1e06106:    40 08             	r0 = r4			  ## vm_sfc.c:944:5
 1e06108:    98 f3 8e 06       	call 3149084 <os_mutex_post : 106e28 >			  ## vm_sfc.c:944:5
 1e0610c:    00 fb 00 20       	r0 = 8192 <att_ram_buffer+0x2BC : 2000 >			  ## vm.c:1600:9
 1e06110:    17 e0 02 00       	if (r7 == 1) goto 4 <syscfg_vm_init+0x2E : 1e06118 >
 1e06114:    00 fb 00 40       	r0 = 16384 <low_power_system_down+0x194 : 4000 >			  ## vm.c:1600:9
 1e06118:    06 f2 01 30       	if (r6 < r0) goto 2 <syscfg_vm_init+0x34 : 1e0611e >
 1e0611c:    06 08             	r6 = r0
 1e0611e:    c8 ff a0 29 00 00 	r8 = 10656 <vm_obj : 29a0 >
 1e06124:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:232:9
 1e06128:    20 f3 24 00       	if ((r0 & 1) != 0) goto 72 <syscfg_vm_init+0x8A : 1e06174 >			  ## vm.c:232:9
 1e0612c:    03 ff 00 62 21 00 	if (r6 < 512) goto 66 <syscfg_vm_init+0x8A : 1e06174 >
 1e06132:    01 70             	r1 = 0
 1e06134:    12 70             	r2 = 1
 1e06136:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x52 : 1e0613c >
 1e0613a:    02 70             	r2 = 0			  ## vm.c:1600:18
 1e0613c:    92 c0             	r2 = r2 << 2			  ## vm.c:813:18
 1e0613e:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x5A : 1e06144 >			  ## vm.c:813:18
 1e06142:    21 08             	r1 = r2			  ## vm.c:820:29
 1e06144:    b3 d3             	r3 = r6 >> 14			  ## vm.c:820:40
 1e06146:    01 36             	if (r3 != 0) goto 2 <syscfg_vm_init+0x60 : 1e0614a >			  ## vm.c:820:40
 1e06148:    21 08             	r1 = r2			  ## vm.c:820:29
 1e0614a:    70 b1             	r0 &= 4294967291			  ## vm.c:813:18
 1e0614c:    50 b2             	r0 |= r1			  ## vm.c:820:29
 1e0614e:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:813:18
 1e06152:    40 bd             	r0 = r6 + r5			  ## vm.c:837:30
 1e06154:    12 22             	if (r1 == 0) goto 36 <syscfg_vm_init+0x90 : 1e0617a >			  ## vm.c:837:30
 1e06156:    51 fc ff 00       	r1 = r5 + 255			  ## vm.c:836:28
 1e0615a:    34 fd ff 19       	r4 = r1 & 4294967040			  ## vm.c:836:28
 1e0615e:    20 b1             	r0 = r0 - r4			  ## vm.c:837:30
 1e06160:    01 fb 00 fe       	r1 = -512 <bank_code_load_addr+0x1E53DC : 1fffe00 >			  ## vm.c:838:55
 1e06164:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:838:55
 1e06168:    23 ff 20 5a 16 00 	if (r5 < 8192) goto 44 <syscfg_vm_init+0xB0 : 1e0619a >
 1e0616e:    05 fb 00 20       	r5 = 8192 <att_ram_buffer+0x2BC : 2000 >			  ## vm.c:841:13
 1e06172:    13 18             	goto 38 <syscfg_vm_init+0xB0 : 1e0619a >
 1e06174:    8f f3 4f e9       	call 2085534 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e06178:    db 18             	goto 438 <syscfg_vm_init+0x246 : 1e06330 >			  ## cpu.h:148:5
 1e0617a:    51 fc ff 0f       	r1 = r5 + 4095			  ## vm.c:826:28
 1e0617e:    02 fb 00 f0       	r2 = -4096 <bank_code_load_addr+0x1E45DC : 1fff000 >			  ## vm.c:826:28
 1e06182:    e2 fd 20 41       	r4 = r1 & r2			  ## vm.c:826:28
 1e06186:    20 b1             	r0 = r0 - r4			  ## vm.c:827:30
 1e06188:    01 fb 00 e0       	r1 = -8192 <bank_code_load_addr+0x1E35DC : 1ffe000 >			  ## vm.c:828:57
 1e0618c:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:828:57
 1e06190:    23 ff 02 5b 02 00 	if (r5 < 131072) goto 4 <syscfg_vm_init+0xB0 : 1e0619a >
 1e06196:    20 fb 02 5b       	r5 = 131072			  ## vm.c:831:13
 1e0619a:    80 fc 18 00       	r0 = r8 + 24			  ## vm.c:853:5
 1e0619e:    01 70             	r1 = 0			  ## vm.c:853:5
 1e061a0:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:853:5
 1e061a4:    98 f3 a4 06       	call 3149128 <memset : 106ef0 >			  ## vm.c:853:5
 1e061a8:    68 d0             	r0 = r5 >> 1			  ## vm.c:855:12
 1e061aa:    10 f6 04 80       	[r8 + 4] = r0			  ## vm.c:856:25
 1e061ae:    14 f6 00 80       	[r8 + 0] = r4			  ## vm.c:857:25
 1e061b2:    10 f6 10 80       	[r8 + 16] = r0			  ## vm.c:858:25
 1e061b6:    40 09             	r0 += r4			  ## vm.c:859:35
 1e061b8:    10 f6 0c 80       	[r8 + 12] = r0			  ## vm.c:859:25
 1e061bc:    00 75             	r0 = 80			  ## vm.c:860:13
 1e061be:    10 f9 6c 81       	b[r8 + 364] = r0			  ## vm.c:860:13
 1e061c2:    40 a0             	r0 = sp + 4			  ## vm.c:860:13
 1e061c4:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e061c6:    42 08             	r2 = r4			  ## vm.c:1466:5
 1e061c8:    bf f3 b4 d6       	call -21144 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e061cc:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:880:33
 1e061d0:    00 a0             	r0 = sp + 0
 1e061d2:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e061d4:    bf f3 ae d6       	call -21156 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e061d8:    10 02             	r0 = [sp+4]			  ## vm.c:884:13
 1e061da:    e0 ef 1a d0       	ifs (r0 <= -2) goto 52 <syscfg_vm_init+0x128 : 1e06212 >
 1e061de:    11 90             	r1 = r0 + 1
 1e061e0:    21 e0 20 30       	if (r1 < 2) goto 64 <syscfg_vm_init+0x13A : 1e06224 >
 1e061e4:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >
 1e061ea:    10 f2 25 10       	if (r0 != r1) goto 74 <syscfg_vm_init+0x14E : 1e06238 >
 1e061ee:    01 02             	r1 = [sp]			  ## vm.c:886:13
 1e061f0:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e061f4:    c2 ff 55 aa ee dd 	r2 = 3723405909 <bank_code_load_addr+0xD0031 : 1eeaa55 >			  ## vm.c:886:24
 1e061fa:    21 f2 2f 10       	if (r1 != r2) goto 94 <syscfg_vm_init+0x172 : 1e0625c >			  ## vm.c:886:13
 1e061fe:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:888:46
 1e06202:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:887:24
 1e06206:    28 02             	[sp+8] = r0			  ## vm.c:887:22
 1e06208:    80 a0             	r0 = sp + 8			  ## vm.c:887:22
 1e0620a:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e0620c:    bf f3 35 d8       	call -20374 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e06210:    0f 18             	goto 30 <syscfg_vm_init+0x146 : 1e06230 >
 1e06212:    c1 ff 55 aa ee dd 	r1 = 3723405909 <bank_code_load_addr+0xD0031 : 1eeaa55 >
 1e06218:    10 f2 10 00       	if (r0 == r1) goto 32 <syscfg_vm_init+0x152 : 1e0623c >
 1e0621c:    11 fc 22 11       	r1 = r1 + 4386
 1e06220:    10 f2 0a 10       	if (r0 != r1) goto 20 <syscfg_vm_init+0x14E : 1e06238 >
 1e06224:    00 02             	r0 = [sp]			  ## vm.c:905:13
 1e06226:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:905:24
 1e0622c:    10 f2 04 10       	if (r0 != r1) goto 8 <syscfg_vm_init+0x14E : 1e06238 >			  ## vm.c:905:24
 1e06230:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e06234:    90 b0             	r0 |= 2
 1e06236:    13 18             	goto 38 <syscfg_vm_init+0x174 : 1e0625e >
 1e06238:    4a 16             	call -876 <vm_reset : 1e05ece >
 1e0623a:    13 18             	goto 38 <syscfg_vm_init+0x178 : 1e06262 >
 1e0623c:    84 fc 6c 01       	r4 = r8 + 364
 1e06240:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:897:20
 1e06242:    02 f6 00 80       	r2 = [r8 + 0]			  ## vm.c:898:42
 1e06246:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:897:20
 1e0624a:    28 02             	[sp+8] = r0			  ## vm.c:897:18
 1e0624c:    80 a0             	r0 = sp + 8			  ## vm.c:897:18
 1e0624e:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e06250:    bf f3 13 d8       	call -20442 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e06254:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:899:23
 1e06256:    f0 b0             	r0 &= 4294967293			  ## vm.c:899:23
 1e06258:    18 68             	b[r4 + 1] = r0			  ## vm.c:899:23
 1e0625a:    03 18             	goto 6 <syscfg_vm_init+0x178 : 1e06262 >
 1e0625c:    f0 b0             	r0 &= 4294967293			  ## vm.c:891:27
 1e0625e:    10 f9 6d 81       	b[r8 + 365] = r0
 1e06262:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:923:45
 1e06266:    70 d0             	r0 = r6 >> 1			  ## vm.c:923:45
 1e06268:    11 70             	r1 = 1			  ## vm.c:923:45
 1e0626a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:923:45
 1e0626e:    c5 70             	r5 = 12			  ## vm.c:923:45
 1e06270:    84 08             	r4 = r8			  ## vm.c:923:62
 1e06272:    80 fe 50 40       	r4 += r0 * r5			  ## vm.c:923:62
 1e06276:    11 48             	r1 = [r4 + 4]			  ## vm.c:923:91
 1e06278:    00 48             	r0 = [r4 + 0]			  ## vm.c:923:62
 1e0627a:    51 16             	call -862 <vm_area_check : 1e05f1e >			  ## vm.c:923:18
 1e0627c:    04 30             	if (r0 != 0) goto 8 <syscfg_vm_init+0x19C : 1e06286 >			  ## vm.c:923:18
 1e0627e:    40 08             	r0 = r4			  ## vm.c:925:9
 1e06280:    f5 15             	call -1046 <_vm_area_erase : 1e05e6c >			  ## vm.c:925:9
 1e06282:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:925:9
 1e06286:    81 fd 08 06       	r0 = uextra(r6, p:1, l:1)			  ## vm.c:929:69
 1e0628a:    81 08             	r1 = r8			  ## vm.c:371:33
 1e0628c:    80 fe 50 10       	r1 += r0 * r5			  ## vm.c:371:33
 1e06290:    0a f6 00 10       	r10 = [r1 + 0]			  ## vm.c:371:33
 1e06294:    10 42             	r0 = [r1 + 4]			  ## vm.c:374:50
 1e06296:    ab fc 04 00       	r11 = r10 + 4			  ## vm.c:371:38
 1e0629a:    80 fb 00 9b       	r9 = r11 + r0			  ## vm.c:374:37
 1e0629e:    c0 a0             	r0 = sp + 12
 1e062a0:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e062a2:    b2 08             	r2 = r11			  ## vm.c:1466:5
 1e062a4:    bf f3 46 d6       	call -21364 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e062a8:    c7 f5 0e 00       	r7 = b[sp+14] (u)			  ## vm.c:389:18
 1e062ac:    c0 f5 0f 00       	r0 = b[sp+15] (u)			  ## vm.c:389:18
 1e062b0:    cc f5 0c 00       	r12 = b[sp+12] (u)			  ## vm.c:395:13
 1e062b4:    c4 f5 0d 00       	r4 = b[sp+13] (u)			  ## vm.c:390:18
 1e062b8:    71 08             	r1 = r7			  ## vm.c:389:18
 1e062ba:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## vm.c:389:18
 1e062be:    0d d1             	r5 = r1 >> 4			  ## vm.c:389:18
 1e062c0:    b6 fc 04 00       	r6 = r11 + 4			  ## vm.c:393:46
 1e062c4:    60 08             	r0 = r6			  ## vm.c:393:46
 1e062c6:    8f f3 ac ea       	call 2086232 <flash_addr2cpu_addr : 3822 >			  ## vm.c:393:46
 1e062ca:    51 08             	r1 = r5			  ## vm.c:393:26
 1e062cc:    bf f3 16 d6       	call -21460 <CRC16 : 1e00efc >			  ## vm.c:393:26
 1e062d0:    00 04             	r0 = r0.b0 (u)			  ## vm.c:395:23
 1e062d2:    0c f2 0e 10       	if (r12 != r0) goto 28 <syscfg_vm_init+0x208 : 1e062f2 >			  ## vm.c:395:23
 1e062d6:    90 fb a0 0b       	r0 = r11 - r10			  ## vm.c:396:45
 1e062da:    39 c2             	r1 = r7 << 8			  ## vm.c:390:18
 1e062dc:    21 fd 0f 1a       	r1 = r1 & 3840			  ## vm.c:390:18
 1e062e0:    51 b8             	r1 |= r4			  ## vm.c:390:18
 1e062e2:    49 c0             	r1 = r1 << 1			  ## vm.c:396:13
 1e062e4:    81 09             	r1 += r8			  ## vm.c:396:13
 1e062e6:    8b bb             	r11 = r5 + r6			  ## vm.c:398:24
 1e062e8:    b2 fc 04 00       	r2 = r11 + 4			  ## vm.c:400:28
 1e062ec:    c8 52             	h[r1 + 24] = r0			  ## vm.c:396:32
 1e062ee:    92 f2 d6 3f       	if (r2 < r9) goto -84 <syscfg_vm_init+0x1B4 : 1e0629e >			  ## vm.c:396:32
 1e062f2:    1b f6 68 81       	[r8 + 360] = r11			  ## vm.c:929:17
 1e062f6:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:931:45
 1e062fa:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:931:45
 1e062fe:    c1 70             	r1 = 12			  ## vm.c:931:45
 1e06300:    82 08             	r2 = r8			  ## vm.c:931:74
 1e06302:    80 fe 10 20       	r2 += r0 * r1			  ## vm.c:931:74
 1e06306:    00 44             	r0 = [r2 + 0]			  ## vm.c:931:74
 1e06308:    11 44             	r1 = [r2 + 4]			  ## vm.c:931:103
 1e0630a:    90 fb b0 00       	r0 = r0 - r11			  ## vm.c:931:101
 1e0630e:    01 09             	r1 += r0			  ## vm.c:931:130
 1e06310:    b0 08             	r0 = r11			  ## vm.c:931:18
 1e06312:    05 16             	call -1014 <vm_area_check : 1e05f1e >			  ## vm.c:931:18
 1e06314:    01 30             	if (r0 != 0) goto 2 <syscfg_vm_init+0x22E : 1e06318 >			  ## vm.c:931:18
 1e06316:    12 16             	call -988 <_vm_defrag : 1e05f3c >			  ## vm.c:933:9
 1e06318:    cf 16             	call -610 <vm_warning_line_check : 1e060b8 >			  ## vm.c:937:9
 1e0631a:    01 20             	if (r0 == 0) goto 2 <syscfg_vm_init+0x234 : 1e0631e >			  ## vm.c:937:9
 1e0631c:    0f 16             	call -994 <_vm_defrag : 1e05f3c >			  ## vm.c:939:9
 1e0631e:    80 fc 18 01       	r0 = r8 + 280			  ## vm.c:942:5
 1e06322:    98 f3 7b 05       	call 3148534 <os_mutex_create : 106e1c >			  ## vm.c:942:5
 1e06326:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:944:18
 1e0632a:    10 b0             	r0 |= 1			  ## vm.c:944:18
 1e0632c:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:944:18
 1e06330:    00 70             	r0 = 0			  ## vm.c:1622:5
 1e06332:    08 0a             	sp += 16			  ## vm.c:1622:5
 1e06334:    5c 01             	{pc, r12-r4} = [sp++]			  ## vm.c:1622:5


vm_check_id:
 1e06336:    f0 8f             	r0 += -1			  ## vm.c:1580:0
 1e06338:    21 04             	r1 = r0.l (u)			  ## vm.c:1581:44
 1e0633a:    10 70             	r0 = 1			  ## vm.c:1581:44
 1e0633c:    f1 e7 01 30       	if (r1 < 127) goto 2 <vm_check_id+0xC : 1e06342 >			  ## vm.c:1581:44
 1e06340:    00 70             	r0 = 0			  ## vm.c:1581:44
 1e06342:    20 00             	rts			  ## vm.c:1586:1


vm_read:
 1e06344:    7b 01             	[--sp] = {rets, r11-r4}			  ## vm.c:1138:0
 1e06346:    fe 0b             	sp += -4			  ## vm.c:1138:0
 1e06348:    c4 ff a0 29 00 00 	r4 = 10656 <vm_obj : 29a0 >			  ## vm.c:1138:0
 1e0634e:    03 f9 6d 41       	r3 = b[r4 + 365] (u)			  ## vm.c:232:9
 1e06352:    26 08             	r6 = r2			  ## vm.c:232:9
 1e06354:    19 08             	r9 = r1
 1e06356:    05 08             	r5 = r0
 1e06358:    07 fb 06 ff       	r7 = -250 <bank_code_load_addr+0x1E54E2 : 1ffff06 >
 1e0635c:    00 f3 55 30       	if ((r3 & 1) == 0) goto 170 <vm_read+0xC6 : 1e0640a >
 1e06360:    a7 8f             	r7 += -6
 1e06362:    f5 e7 52 80       	if (r5 > 127) goto 164 <vm_read+0xC6 : 1e0640a >
 1e06366:    50 2c             	if (r6 == 0) goto 160 <vm_read+0xC4 : 1e06408 >
 1e06368:    48 fc 18 01       	r8 = r4 + 280			  ## vm.c:1161:5
 1e0636c:    f1 07             	r1 = -1			  ## vm.c:1161:5
 1e0636e:    80 08             	r0 = r8			  ## vm.c:1161:5
 1e06370:    98 f3 58 05       	call 3148464 <os_mutex_pend : 106e24 >			  ## vm.c:1161:5
 1e06374:    68 c0             	r0 = r5 << 1			  ## vm.c:1189:13
 1e06376:    0a b1             	r10 = r0 + r4			  ## vm.c:1189:13
 1e06378:    00 f7 18 a0       	r0 = h[r10 + 24] (u)			  ## vm.c:1189:13
 1e0637c:    47 80             	r7 += 4			  ## vm.c:1189:13
 1e0637e:    40 20             	if (r0 == 0) goto 128 <vm_read+0xBC : 1e06400 >			  ## vm.c:1189:13
 1e06380:    01 f9 6d 41       	r1 = b[r4 + 365] (u)			  ## vm.c:1192:32
 1e06384:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1192:32
 1e06388:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1192:32
 1e0638c:    81 f6 00 14       	r1 = [r1+r4]			  ## vm.c:1192:32
 1e06390:    02 b2             	r2 = r1 + r0			  ## vm.c:1192:59
 1e06392:    00 a0             	r0 = sp + 0
 1e06394:    41 70             	r1 = 4			  ## vm.c:1466:5
 1e06396:    bf f3 cd d5       	call -21606 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e0639a:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1197:50
 1e0639e:    c1 f5 03 00       	r1 = b[sp+3] (u)			  ## vm.c:1194:22
 1e063a2:    c3 f5 02 00       	r3 = b[sp+2] (u)			  ## vm.c:1194:22
 1e063a6:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1197:50
 1e063aa:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1197:50
 1e063ae:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1197:50
 1e063b2:    02 f7 18 a0       	r2 = h[r10 + 24] (u)			  ## vm.c:1197:50
 1e063b6:    cb f5 00 00       	r11 = b[sp] (u)			  ## vm.c:1199:17
 1e063ba:    d8 fd 40 31       	r3 <= insert(r1, p:8, l:24)			  ## vm.c:1194:22
 1e063be:    20 09             	r0 += r2			  ## vm.c:1197:50
 1e063c0:    40 80             	r0 += 4			  ## vm.c:1197:50
 1e063c2:    8f f3 2e ea       	call 2085980 <flash_addr2cpu_addr : 3822 >			  ## vm.c:1197:50
 1e063c6:    8c fd 20 53       	r5 = uextra(r3, p:4, l:12)			  ## vm.c:1194:22
 1e063ca:    51 08             	r1 = r5			  ## vm.c:1197:30
 1e063cc:    bf f3 96 d5       	call -21716 <CRC16 : 1e00efc >			  ## vm.c:1197:30
 1e063d0:    00 04             	r0 = r0.b0 (u)			  ## vm.c:1199:27
 1e063d2:    0b f2 15 10       	if (r11 != r0) goto 42 <vm_read+0xBC : 1e06400 >			  ## vm.c:1199:27
 1e063d6:    60 05             	r0 = r5.l (u)			  ## vm.c:1200:28
 1e063d8:    60 f2 01 80       	if (r0 > r6) goto 2 <vm_read+0x9A : 1e063de >			  ## vm.c:1200:28
 1e063dc:    56 08             	r6 = r5			  ## vm.c:1200:21
 1e063de:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1204:36
 1e063e2:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1204:36
 1e063e6:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1204:36
 1e063ea:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1204:36
 1e063ee:    01 f7 18 a0       	r1 = h[r10 + 24] (u)			  ## vm.c:1204:92
 1e063f2:    a7 05             	r7 = r6.l (u)			  ## vm.c:1203:23
 1e063f4:    10 09             	r0 += r1			  ## vm.c:1204:63
 1e063f6:    42 90             	r2 = r0 + 4			  ## vm.c:1204:90
 1e063f8:    90 08             	r0 = r9			  ## vm.c:1466:5
 1e063fa:    71 08             	r1 = r7			  ## vm.c:1466:5
 1e063fc:    bf f3 9a d5       	call -21708 <norflash_read : 1e00f34 >			  ## vm.c:1466:5
 1e06400:    80 08             	r0 = r8			  ## vm.c:1219:5
 1e06402:    98 f3 11 05       	call 3148322 <os_mutex_post : 106e28 >			  ## vm.c:1219:5
 1e06406:    01 18             	goto 2 <vm_read+0xC6 : 1e0640a >			  ## vm.c:1219:5
 1e06408:    07 70             	r7 = 0
 1e0640a:    70 08             	r0 = r7			  ## vm.c:1221:1
 1e0640c:    02 0a             	sp += 4			  ## vm.c:1221:1
 1e0640e:    5b 01             	{pc, r11-r4} = [sp++]			  ## vm.c:1221:1


vm_write:
 1e06410:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm.c:1028:0
 1e06412:    fe 0b             	sp += -4			  ## vm.c:1028:0
 1e06414:    c7 ff a0 29 00 00 	r7 = 10656 <vm_obj : 29a0 >			  ## vm.c:1028:0
 1e0641a:    03 f9 6d 71       	r3 = b[r7 + 365] (u)			  ## vm.c:232:9
 1e0641e:    24 08             	r4 = r2			  ## vm.c:232:9
 1e06420:    19 08             	r9 = r1
 1e06422:    05 08             	r5 = r0
 1e06424:    06 fb 06 ff       	r6 = -250 <bank_code_load_addr+0x1E54E2 : 1ffff06 >
 1e06428:    00 f3 a7 30       	if ((r3 & 1) == 0) goto 334 <vm_write+0x16A : 1e0657a >
 1e0642c:    a6 8f             	r6 += -6
 1e0642e:    f5 e7 a4 80       	if (r5 > 127) goto 328 <vm_write+0x16A : 1e0657a >
 1e06432:    20 d3             	r0 = r4 >> 12			  ## vm.c:1041:13
 1e06434:    26 80             	r6 += 2			  ## vm.c:1041:13
 1e06436:    a1 30             	if (r0 != 0) goto 322 <vm_write+0x16A : 1e0657a >			  ## vm.c:1041:13
 1e06438:    78 fc 18 01       	r8 = r7 + 280			  ## vm.c:1254:5
 1e0643c:    f1 07             	r1 = -1			  ## vm.c:1254:5
 1e0643e:    80 08             	r0 = r8			  ## vm.c:1254:5
 1e06440:    98 f3 f0 04       	call 3148256 <os_mutex_pend : 106e24 >			  ## vm.c:1254:5
 1e06444:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1254:5
 1e06448:    40 d0             	r0 = r0 >> 1			  ## vm.c:1254:5
 1e0644a:    11 70             	r1 = 1			  ## vm.c:1254:5
 1e0644c:    e3 fd 00 11       	r1 = r1 & ~r0			  ## vm.c:1254:5
 1e06450:    c2 70             	r2 = 12			  ## vm.c:1254:5
 1e06452:    70 08             	r0 = r7			  ## vm.c:1254:5
 1e06454:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:1254:5
 1e06458:    41 50             	r1 = h[r0 + 8] (u)			  ## vm.c:1254:5
 1e0645a:    01 22             	if (r1 == 0) goto 2 <vm_write+0x4E : 1e0645e >			  ## vm.c:1254:5
 1e0645c:    07 15             	call -1522 <_vm_area_erase : 1e05e6c >			  ## vm.c:1258:13
 1e0645e:    80 08             	r0 = r8			  ## vm.c:1300:5
 1e06460:    98 f3 e2 04       	call 3148228 <os_mutex_post : 106e28 >			  ## vm.c:1300:5
 1e06464:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1300:5
 1e06468:    00 f3 0b 00       	if ((r0 & 1) == 0) goto 22 <vm_write+0x72 : 1e06482 >
 1e0646c:    f1 07             	r1 = -1			  ## vm.c:1319:5
 1e0646e:    80 08             	r0 = r8			  ## vm.c:1319:5
 1e06470:    98 f3 d8 04       	call 3148208 <os_mutex_pend : 106e24 >			  ## vm.c:1319:5
 1e06474:    21 16             	call -958 <vm_warning_line_check : 1e060b8 >			  ## vm.c:1320:17
 1e06476:    10 e0 01 10       	if (r0 != 1) goto 2 <vm_write+0x6C : 1e0647c >			  ## vm.c:1320:17
 1e0647a:    60 15             	call -1344 <_vm_defrag : 1e05f3c >			  ## vm.c:1321:15
 1e0647c:    80 08             	r0 = r8			  ## vm.c:1330:5
 1e0647e:    98 f3 d3 04       	call 3148198 <os_mutex_post : 106e28 >			  ## vm.c:1330:5
 1e06482:    40 08             	r0 = r4			  ## vm.c:1049:20
 1e06484:    80 f3 8c 2a       	call 21784 <malloc : 1e0b9a0 >			  ## vm.c:1049:20
 1e06488:    06 08             	r6 = r0			  ## vm.c:1049:20
 1e0648a:    10 2c             	if (r6 == 0) goto 32 <vm_write+0x9C : 1e064ac >
 1e0648c:    50 08             	r0 = r5			  ## vm.c:1052:20
 1e0648e:    61 08             	r1 = r6			  ## vm.c:1052:20
 1e06490:    42 08             	r2 = r4			  ## vm.c:1052:20
 1e06492:    58 17             	call -336 <vm_read : 1e06344 >			  ## vm.c:1052:20
 1e06494:    20 04             	r0 = r0.l (u)			  ## vm.c:1053:13
 1e06496:    40 f2 06 10       	if (r0 != r4) goto 12 <vm_write+0x96 : 1e064a6 >			  ## vm.c:1053:13
 1e0649a:    60 08             	r0 = r6			  ## vm.c:1054:22
 1e0649c:    91 08             	r1 = r9			  ## vm.c:1054:22
 1e0649e:    42 08             	r2 = r4			  ## vm.c:1054:22
 1e064a0:    98 f3 24 05       	call 3148360 <memcmp : 106eec >			  ## vm.c:1054:22
 1e064a4:    6d 20             	if (r0 == 0) goto 218 <vm_write+0x170 : 1e06580 >			  ## vm.c:1054:22
 1e064a6:    60 08             	r0 = r6			  ## vm.c:1060:9
 1e064a8:    80 f3 7f 2a       	call 21758 <free : 1e0b9aa >			  ## vm.c:1060:9
 1e064ac:    f1 07             	r1 = -1			  ## vm.c:1064:5
 1e064ae:    80 08             	r0 = r8			  ## vm.c:1064:5
 1e064b0:    98 f3 b8 04       	call 3148144 <os_mutex_pend : 106e24 >			  ## vm.c:1064:5
 1e064b4:    90 08             	r0 = r9			  ## vm.c:1067:33
 1e064b6:    41 08             	r1 = r4			  ## vm.c:1067:33
 1e064b8:    bf f3 20 d5       	call -21952 <CRC16 : 1e00efc >			  ## vm.c:1067:33
 1e064bc:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## vm.c:1067:33
 1e064c0:    d0 f5 00 00       	b[sp] = r0			  ## vm.c:1069:17
 1e064c4:    d5 f5 01 00       	b[sp+1] = r5			  ## vm.c:1070:17
 1e064c8:    84 fd 40 05       	r0 = uextra(r5, p:8, l:4)			  ## vm.c:1071:65
 1e064cc:    81 fd 08 21       	r2 = uextra(r1, p:1, l:1)			  ## vm.c:1071:65
 1e064d0:    02 fe 0c 29       	r2 = r2 * 12			  ## vm.c:1071:65
 1e064d4:    83 f6 00 27       	r3 = [r2+r7]			  ## vm.c:1071:65
 1e064d8:    02 f6 68 71       	r2 = [r7 + 360]			  ## vm.c:1071:65
 1e064dc:    d0 fd 20 04       	r0 <= insert(r4, p:4, l:16)			  ## vm.c:1071:47
 1e064e0:    d0 f5 02 00       	b[sp+2] = r0			  ## vm.c:1071:17
 1e064e4:    20 d1             	r0 = r4 >> 4			  ## vm.c:1072:19
 1e064e6:    d0 f5 03 00       	b[sp+3] = r0			  ## vm.c:1072:17
 1e064ea:    32 f2 06 80       	if (r2 > r3) goto 12 <vm_write+0xEA : 1e064fa >			  ## vm.c:1072:17
 1e064ee:    8f f3 92 e7       	call 2084644 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e064f2:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e064f6:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e064fa:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)
 1e064fe:    c3 70             	r3 = 12
 1e06500:    76 08             	r6 = r7
 1e06502:    80 fe 30 60       	r6 += r0 * r3
 1e06506:    00 4c             	r0 = [r6 + 0]
 1e06508:    16 4c             	r6 = [r6 + 4]
 1e0650a:    20 b4             	r0 = r2 - r0
 1e0650c:    60 f2 06 30       	if (r0 < r6) goto 12 <vm_write+0x10C : 1e0651c >
 1e06510:    8f f3 81 e7       	call 2084610 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e06514:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e06518:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e0651c:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)			  ## vm.c:1077:46
 1e06520:    71 08             	r1 = r7			  ## vm.c:1077:46
 1e06522:    80 fe 30 10       	r1 += r0 * r3			  ## vm.c:1077:46
 1e06526:    00 42             	r0 = [r1 + 0]			  ## vm.c:1077:46
 1e06528:    11 42             	r1 = [r1 + 4]			  ## vm.c:1077:75
 1e0652a:    10 09             	r0 += r1			  ## vm.c:1077:73
 1e0652c:    a0 b0             	r0 = r0 - r2			  ## vm.c:1077:102
 1e0652e:    4a 98             	r10 = r4 + 4			  ## vm.c:1077:34
 1e06530:    06 fb 05 ff       	r6 = -251 <bank_code_load_addr+0x1E54E1 : 1ffff05 >			  ## vm.c:1077:34
 1e06534:    0a f2 1e 80       	if (r10 > r0) goto 60 <vm_write+0x164 : 1e06574 >			  ## vm.c:1077:34
 1e06538:    00 a0             	r0 = sp + 0
 1e0653a:    41 70             	r1 = 4			  ## vm.c:1448:5
 1e0653c:    bf f3 9d d6       	call -21190 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e06540:    07 28             	if (r4 == 0) goto 14 <vm_write+0x140 : 1e06550 >
 1e06542:    00 f6 68 71       	r0 = [r7 + 360]			  ## vm.c:1080:33
 1e06546:    42 90             	r2 = r0 + 4			  ## vm.c:1080:45
 1e06548:    90 08             	r0 = r9			  ## vm.c:1448:5
 1e0654a:    41 08             	r1 = r4			  ## vm.c:1448:5
 1e0654c:    bf f3 95 d6       	call -21206 <norflash_write : 1e0127a >			  ## vm.c:1448:5
 1e06550:    70 fc 68 01       	r0 = r7 + 360
 1e06554:    51 60             	r1 = b[r0 + 5] (u)			  ## vm.c:1082:41
 1e06556:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1082:41
 1e0655a:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1082:41
 1e0655e:    81 f6 00 17       	r1 = [r1+r7]			  ## vm.c:1082:41
 1e06562:    02 40             	r2 = [r0 + 0]			  ## vm.c:1082:27
 1e06564:    6b c0             	r3 = r5 << 1			  ## vm.c:1082:9
 1e06566:    73 09             	r3 += r7			  ## vm.c:1082:9
 1e06568:    61 b4             	r1 = r2 - r1			  ## vm.c:1082:39
 1e0656a:    c9 56             	h[r3 + 24] = r1			  ## vm.c:1082:25
 1e0656c:    01 40             	r1 = [r0 + 0]			  ## vm.c:1088:21
 1e0656e:    a1 09             	r1 += r10			  ## vm.c:1088:21
 1e06570:    09 40             	[r0 + 0] = r1			  ## vm.c:1088:21
 1e06572:    46 08             	r6 = r4			  ## vm.c:1088:21
 1e06574:    80 08             	r0 = r8			  ## vm.c:1132:5
 1e06576:    98 f3 57 04       	call 3147950 <os_mutex_post : 106e28 >			  ## vm.c:1132:5
 1e0657a:    60 08             	r0 = r6			  ## vm.c:1135:1
 1e0657c:    02 0a             	sp += 4			  ## vm.c:1135:1
 1e0657e:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm.c:1135:1
 1e06580:    60 08             	r0 = r6			  ## vm.c:1056:17
 1e06582:    80 f3 12 2a       	call 21540 <free : 1e0b9aa >			  ## vm.c:1056:17
 1e06586:    46 08             	r6 = r4			  ## vm.c:1056:17
 1e06588:    f8 1f             	goto -16 <vm_write+0x16A : 1e0657a >


sdk_meky_check:
 1e0658a:    c1 ff 9a 65 e0 01 	r1 = 31483290 <_mkey_check : 1e0659a >			  ## key0_decode.c:137:0
 1e06590:    00 70             	r0 = 0			  ## key0_decode.c:138:5
 1e06592:    02 fb 40 1f       	r2 = 8000 <att_ram_buffer+0x1FC : 1f40 >			  ## key0_decode.c:138:5
 1e06596:    c0 f3 42 27       	goto 20100 <sys_timeout_add : 1e0b41e >			  ## key0_decode.c:138:5


_mkey_check:
 1e0659a:    78 01             	[--sp] = {rets, r8-r4}			  ## key0_decode.c:80:0
 1e0659c:    de 0b             	sp += -68			  ## key0_decode.c:80:0
 1e0659e:    c6 ff b8 08 00 00 	r6 = 2232 <puk : 8b8 >			  ## key0_decode.c:80:0
 1e065a4:    07 4c             	r7 = [r6 + 0]			  ## key0_decode.c:84:22
 1e065a6:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >
 1e065ac:    00 f6 00 80       	r0 = [r8 + 0]			  ## key0_decode.c:86:41
 1e065b0:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## key0_decode.c:86:46
 1e065b4:    08 03             	[sp+64] = r0
 1e065b6:    00 03             	r0 = [sp+64]			  ## key0_decode.c:41:14
 1e065b8:    04 03             	r4 = [sp+64]			  ## key0_decode.c:41:14
 1e065ba:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <_mkey_check+0x28 : 1e065c2 >			  ## key0_decode.c:41:9
 1e065be:    cc 02             	[sp+48] = r4			  ## key0_decode.c:42:33
 1e065c0:    06 18             	goto 12 <_mkey_check+0x34 : 1e065ce >			  ## key0_decode.c:42:33
 1e065c2:    00 a2             	r0 = sp + 32
 1e065c4:    02 72             	r2 = 32			  ## key0_decode.c:44:9
 1e065c6:    41 08             	r1 = r4			  ## key0_decode.c:44:9
 1e065c8:    98 f3 8c 04       	call 3148056 <memcpy : 106ee4 >			  ## key0_decode.c:44:9
 1e065cc:    c4 02             	r4 = [sp+48]			  ## key0_decode.c:44:9
 1e065ce:    20 05             	r0 = r4.l (u)			  ## key0_decode.c:48:5
 1e065d0:    05 a2             	r5 = sp + 32			  ## key0_decode.c:48:5
 1e065d2:    02 72             	r2 = 32			  ## key0_decode.c:48:5
 1e065d4:    51 08             	r1 = r5			  ## key0_decode.c:48:5
 1e065d6:    bf f3 6f d4       	call -22306 <doe : 1e00eb8 >			  ## key0_decode.c:48:5
 1e065da:    cc 02             	[sp+48] = r4			  ## key0_decode.c:50:29
 1e065dc:    60 9a             	r0 = r5 + 6			  ## key0_decode.c:52:36
 1e065de:    a1 71             	r1 = 26			  ## key0_decode.c:52:15
 1e065e0:    bf f3 8c d4       	call -22248 <CRC16 : 1e00efc >			  ## key0_decode.c:52:15
 1e065e4:    81 f5 24 00       	r1 = h[sp+36] (u)			  ## key0_decode.c:54:30
 1e065e8:    10 f2 06 10       	if (r0 != r1) goto 12 <_mkey_check+0x5E : 1e065f8 >			  ## key0_decode.c:54:30
 1e065ec:    00 03             	r0 = [sp+64]			  ## key0_decode.c:57:27
 1e065ee:    c1 ff 98 36 6c f3 	r1 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:57:29
 1e065f4:    d0 b2             	r0 ^= r1			  ## key0_decode.c:57:29
 1e065f6:    04 18             	goto 8 <_mkey_check+0x66 : 1e06600 >
 1e065f8:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:55:27
 1e065fa:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:55:33
 1e065fe:    d0 b2             	r0 ^= r1			  ## key0_decode.c:55:31
 1e06600:    08 4c             	[r6 + 0] = r0
 1e06602:    80 02             	r0 = [sp+32]			  ## key0_decode.c:60:37
 1e06604:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:60:37
 1e06606:    c5 ff 4a 4b 59 53 	r5 = 1398360906 <uECC_vli_cmp_unsafe+0x148DB4E : 1594b4a >			  ## key0_decode.c:60:20
 1e0660c:    42 08             	r2 = r4			  ## key0_decode.c:60:20
 1e0660e:    50 f2 02 00       	if (r0 == r5) goto 4 <_mkey_check+0x7C : 1e06616 >			  ## key0_decode.c:60:20
 1e06612:    02 f6 04 80       	r2 = [r8 + 4]			  ## key0_decode.c:61:42
 1e06616:    d1 b4             	r1 ^= r2
 1e06618:    09 4c             	[r6 + 0] = r1
 1e0661a:    81 f5 3e 00       	r1 = h[sp+62] (u)			  ## key0_decode.c:66:25
 1e0661e:    f1 e0 03 10       	if (r1 != 15) goto 6 <_mkey_check+0x8E : 1e06628 >			  ## key0_decode.c:66:9
 1e06622:    c1 f5 27 00       	r1 = b[sp+39] (u)
 1e06626:    08 18             	goto 16 <_mkey_check+0x9E : 1e06638 >
 1e06628:    02 4c             	r2 = [r6 + 0]			  ## key0_decode.c:67:27
 1e0662a:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:67:47
 1e0662e:    03 f6 00 80       	r3 = [r8 + 0]			  ## key0_decode.c:67:68
 1e06632:    d2 b2             	r2 ^= r1			  ## key0_decode.c:67:31
 1e06634:    d2 b6             	r2 ^= r3			  ## key0_decode.c:67:57
 1e06636:    0a 4c             	[r6 + 0] = r2			  ## key0_decode.c:67:13
 1e06638:    11 e0 01 10       	if (r1 != 1) goto 2 <_mkey_check+0xA4 : 1e0663e >
 1e0663c:    40 08             	r0 = r4			  ## key0_decode.c:70:9
 1e0663e:    01 4c             	r1 = [r6 + 0]
 1e06640:    d0 b2             	r0 ^= r1
 1e06642:    08 4c             	[r6 + 0] = r0
 1e06644:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:89:17
 1e06646:    07 f2 3a 00       	if (r7 == r0) goto 116 <_mkey_check+0x124 : 1e066be >			  ## key0_decode.c:89:17
 1e0664a:    0f 4c             	[r6 + 0] = r7			  ## key0_decode.c:93:9
 1e0664c:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:95:14
 1e0664e:    c8 ff 98 36 6c f3 	r8 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:95:18
 1e06654:    80 f2 36 00       	if (r0 == r8) goto 108 <_mkey_check+0x12A : 1e066c4 >			  ## key0_decode.c:95:18
 1e06658:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:98:27
 1e0665a:    e1 fd 80 00       	r0 = r0 ^ r8			  ## key0_decode.c:98:31
 1e0665e:    08 4c             	[r6 + 0] = r0			  ## key0_decode.c:98:13
 1e06660:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:100:23
 1e06662:    04 a0             	r4 = sp + 0			  ## key0_decode.c:100:23
 1e06664:    02 72             	r2 = 32			  ## key0_decode.c:100:5
 1e06666:    40 08             	r0 = r4			  ## key0_decode.c:100:5
 1e06668:    98 f3 3c 04       	call 3147896 <memcpy : 106ee4 >			  ## key0_decode.c:100:5
 1e0666c:    47 02             	r7 = [sp+16]			  ## key0_decode.c:104:35
 1e0666e:    e0 05             	r0 = r7.l (u)			  ## key0_decode.c:105:5
 1e06670:    02 72             	r2 = 32			  ## key0_decode.c:105:5
 1e06672:    41 08             	r1 = r4			  ## key0_decode.c:105:5
 1e06674:    bf f3 20 d4       	call -22464 <doe : 1e00eb8 >			  ## key0_decode.c:105:5
 1e06678:    4f 02             	[sp+16] = r7			  ## key0_decode.c:108:29
 1e0667a:    00 02             	r0 = [sp]			  ## key0_decode.c:110:37
 1e0667c:    50 f2 1f 10       	if (r0 != r5) goto 62 <_mkey_check+0x124 : 1e066be >			  ## key0_decode.c:110:37
 1e06680:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## key0_decode.c:114:30
 1e06684:    10 e0 1b 10       	if (r0 != 1) goto 54 <_mkey_check+0x124 : 1e066be >			  ## key0_decode.c:114:30
 1e06688:    80 f5 1e 00       	r0 = h[sp+30] (u)			  ## key0_decode.c:117:25
 1e0668c:    f0 e0 17 10       	if (r0 != 15) goto 46 <_mkey_check+0x124 : 1e066be >			  ## key0_decode.c:117:25
 1e06690:    00 a0             	r0 = sp + 0
 1e06692:    60 80             	r0 += 6			  ## key0_decode.c:121:36
 1e06694:    a1 71             	r1 = 26			  ## key0_decode.c:121:15
 1e06696:    bf f3 31 d4       	call -22430 <CRC16 : 1e00efc >			  ## key0_decode.c:121:15
 1e0669a:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## key0_decode.c:121:15
 1e0669e:    10 f2 02 00       	if (r0 == r1) goto 4 <_mkey_check+0x10C : 1e066a6 >			  ## key0_decode.c:121:15
 1e066a2:    8f f3 b8 e6       	call 2084208 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e066a6:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## efuse.c:9:22
 1e066ac:    e0 50             	r0 = h[r0 + 28] (u)			  ## efuse.c:9:22
 1e066ae:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## key0_decode.c:125:55
 1e066b2:    82 f5 18 00       	r2 = h[sp+24] (u)			  ## key0_decode.c:125:30
 1e066b6:    d0 b2             	r0 ^= r1			  ## key0_decode.c:125:42
 1e066b8:    50 b5             	r0 &= r2			  ## key0_decode.c:125:42
 1e066ba:    20 04             	r0 = r0.l (u)			  ## key0_decode.c:125:9
 1e066bc:    01 20             	if (r0 == 0) goto 2 <_mkey_check+0x126 : 1e066c0 >			  ## key0_decode.c:125:9
 1e066be:    ff 1f             	goto -2 <_mkey_check+0x124 : 1e066be >			  ## key0_decode.c:133:5
 1e066c0:    18 f6 00 60       	[r6 + 0] = r8			  ## key0_decode.c:126:13
 1e066c4:    22 0a             	sp += 68
 1e066c6:    58 01             	{pc, r8-r4} = [sp++]			  ## key0_decode.c:134:1


__addsf3:
 1e066c8:    77 01             	[--sp] = {rets, r7-r4}
 1e066ca:    33 fd 80 0c       	r3 = r0 & 2147483647
 1e066ce:    32 fc ff ff       	r2 = r3 + -1
 1e066d2:    c4 ff fe ff 7f 7f 	r4 = 2139095038 <uECC_vli_cmp_unsafe+0x16F9002 : 17ffffe >
 1e066d8:    35 fd 80 1c       	r5 = r1 & 2147483647
 1e066dc:    42 f2 1c 80       	if (r2 > r4) goto 56 <__addsf3+0x50 : 1e06718 >
 1e066e0:    52 fc ff ff       	r2 = r5 + -1
 1e066e4:    14 98             	r4 = r4 + 1
 1e066e6:    42 f2 17 20       	if (r2 >= r4) goto 46 <__addsf3+0x50 : 1e06718 >
 1e066ea:    02 08             	r2 = r0
 1e066ec:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x2A : 1e066f2 >
 1e066f0:    12 08             	r2 = r1
 1e066f2:    c6 ff ff ff 7f 00 	r6 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e066f8:    e2 fd 60 42       	r4 = r2 & r6
 1e066fc:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x3A : 1e06702 >
 1e06700:    01 08             	r1 = r0
 1e06702:    e2 fd 60 31       	r3 = r1 & r6
 1e06706:    c8 d5             	r0 = r1 >> 23
 1e06708:    88 fd b8 52       	r5 = uextra(r2, p:23, l:8)
 1e0670c:    60 ff ff 09 10 00 	if ((r0 & 255) == 0) goto 32 <__addsf3+0x6A : 1e06732 >
 1e06712:    00 04             	r0 = r0.b0 (u)
 1e06714:    1d 3a             	if (r5 != 0) goto 58 <__addsf3+0x88 : 1e06750 >
 1e06716:    15 18             	goto 42 <__addsf3+0x7A : 1e06742 >
 1e06718:    c2 ff 01 00 80 7f 	r2 = 2139095041 <uECC_vli_cmp_unsafe+0x16F9005 : 1800001 >
 1e0671e:    23 f2 03 30       	if (r3 < r2) goto 6 <__addsf3+0x60 : 1e06728 >
 1e06722:    02 fd 40 0b       	r2 = r0 | 4194304
 1e06726:    7a 18             	goto 244 <__addsf3+0x154 : 1e0681c >
 1e06728:    25 f2 66 30       	if (r5 < r2) goto 204 <__addsf3+0x130 : 1e067f8 >
 1e0672c:    02 fd 40 1b       	r2 = r1 | 4194304
 1e06730:    75 18             	goto 234 <__addsf3+0x154 : 1e0681c >
 1e06732:    e8 fd 00 03       	r0 = clz(r3)
 1e06736:    06 fc f8 ff       	r6 = r0 + -8
 1e0673a:    83 0d             	r3 <<= r6
 1e0673c:    60 fb 09 09       	r0 = 9 - r0
 1e06740:    07 3a             	if (r5 != 0) goto 14 <__addsf3+0x88 : 1e06750 >
 1e06742:    e8 fd 00 54       	r5 = clz(r4)
 1e06746:    56 fc f8 ff       	r6 = r5 + -8
 1e0674a:    84 0d             	r4 <<= r6
 1e0674c:    65 fb 09 59       	r5 = 9 - r5
 1e06750:    65 b1             	r5 = r0 - r5
 1e06752:    d2 b2             	r2 ^= r1
 1e06754:    e4 c0             	r4 = r4 << 3
 1e06756:    14 bd             	r4 |= 67108864
 1e06758:    db c0             	r3 = r3 << 3
 1e0675a:    0d 2a             	if (r5 == 0) goto 26 <__addsf3+0xAE : 1e06776 >
 1e0675c:    16 70             	r6 = 1
 1e0675e:    f5 e1 0b 80       	if (r5 > 31) goto 22 <__addsf3+0xB0 : 1e06778 >
 1e06762:    66 fb 20 59       	r6 = 32 - r5
 1e06766:    f8 fd 60 74       	r7 = r4 << r6
 1e0676a:    16 70             	r6 = 1
 1e0676c:    01 3e             	if (r7 != 0) goto 2 <__addsf3+0xA8 : 1e06770 >
 1e0676e:    06 70             	r6 = 0
 1e06770:    64 0d             	r4 >>= r5
 1e06772:    56 b8             	r6 |= r4
 1e06774:    01 18             	goto 2 <__addsf3+0xB0 : 1e06778 >
 1e06776:    46 08             	r6 = r4
 1e06778:    04 fd 04 3c       	r4 = r3 | 67108864
 1e0677c:    f2 ef 0a d0       	ifs (r2 <= -1) goto 20 <__addsf3+0xCC : 1e06794 >
 1e06780:    02 bd             	r2 = r6 + r4
 1e06782:    1b f3 10 20       	if ((r2 & 134217728) == 0) goto 32 <__addsf3+0xDE : 1e067a6 >
 1e06786:    83 b7             	r3 = r3 + r6
 1e06788:    23 fd 01 39       	r3 = r3 & 1
 1e0678c:    52 d0             	r2 = r2 >> 1
 1e0678e:    52 b6             	r2 |= r3
 1e06790:    10 90             	r0 = r0 + 1
 1e06792:    09 18             	goto 18 <__addsf3+0xDE : 1e067a6 >
 1e06794:    a2 b9             	r2 = r4 - r6
 1e06796:    3c 24             	if (r2 == 0) goto 120 <__addsf3+0x148 : 1e06810 >
 1e06798:    93 d6             	r3 = r2 >> 26
 1e0679a:    05 36             	if (r3 != 0) goto 10 <__addsf3+0xDE : 1e067a6 >
 1e0679c:    e8 fd 00 32       	r3 = clz(r2)
 1e067a0:    b3 8f             	r3 += -5
 1e067a2:    e0 b0             	r0 = r0 - r3
 1e067a4:    c2 0c             	r2 <<= r3
 1e067a6:    21 fd 80 1c       	r1 = r1 & 2147483648
 1e067aa:    0b ff ff 00 03 00 	ifs (r0 < 255) goto 6 <__addsf3+0xEE : 1e067b6 >
 1e067b0:    02 fd ff 18       	r2 = r1 | 2139095040
 1e067b4:    33 18             	goto 102 <__addsf3+0x154 : 1e0681c >
 1e067b6:    00 e0 0c c0       	ifs (r0 > 0) goto 24 <__addsf3+0x10A : 1e067d2 >
 1e067ba:    63 fb 01 09       	r3 = 1 - r0
 1e067be:    60 fb 20 39       	r0 = 32 - r3
 1e067c2:    f8 fd 00 52       	r5 = r2 << r0
 1e067c6:    00 70             	r0 = 0
 1e067c8:    14 70             	r4 = 1
 1e067ca:    01 3a             	if (r5 != 0) goto 2 <__addsf3+0x106 : 1e067ce >
 1e067cc:    04 70             	r4 = 0
 1e067ce:    e2 0c             	r2 >>= r3
 1e067d0:    52 b8             	r2 |= r4
 1e067d2:    23 fd 07 29       	r3 = r2 & 7
 1e067d6:    14 70             	r4 = 1
 1e067d8:    43 e0 01 80       	if (r3 > 4) goto 2 <__addsf3+0x116 : 1e067de >
 1e067dc:    04 70             	r4 = 0
 1e067de:    c0 c5             	r0 = r0 << 23
 1e067e0:    50 b2             	r0 |= r1
 1e067e2:    97 fd 18 12       	r1 = uextra(r2, p:3, l:23)
 1e067e6:    50 b2             	r0 |= r1
 1e067e8:    00 b1             	r0 = r0 + r4
 1e067ea:    21 fd 01 09       	r1 = r0 & 1
 1e067ee:    43 e0 01 00       	if (r3 == 4) goto 2 <__addsf3+0x12C : 1e067f4 >
 1e067f2:    01 70             	r1 = 0
 1e067f4:    02 b2             	r2 = r1 + r0
 1e067f6:    12 18             	goto 36 <__addsf3+0x154 : 1e0681c >
 1e067f8:    21 ff ff 38 0b 00 	if (r3 != 2139095040) goto 22 <__addsf3+0x14C : 1e06814 >
 1e067fe:    d1 b0             	r1 ^= r0
 1e06800:    21 ff 80 1c 03 00 	if (r1 != 2147483648) goto 6 <__addsf3+0x144 : 1e0680c >
 1e06806:    c0 ff 00 00 c0 7f 	r0 = 2143289344 <uECC_vli_cmp_unsafe+0x1AF9004 : 1c00000 >
 1e0680c:    02 08             	r2 = r0
 1e0680e:    06 18             	goto 12 <__addsf3+0x154 : 1e0681c >
 1e06810:    02 70             	r2 = 0
 1e06812:    04 18             	goto 8 <__addsf3+0x154 : 1e0681c >
 1e06814:    21 ff ff 58 03 00 	if (r5 != 2139095040) goto 6 <__addsf3+0x158 : 1e06820 >
 1e0681a:    12 08             	r2 = r1
 1e0681c:    20 08             	r0 = r2
 1e0681e:    57 01             	{pc, r7-r4} = [sp++]
 1e06820:    03 26             	if (r3 == 0) goto 6 <__addsf3+0x160 : 1e06828 >
 1e06822:    02 08             	r2 = r0
 1e06824:    62 3b             	if (r5 != 0) goto -316 <__addsf3+0x22 : 1e066ea >
 1e06826:    fa 1f             	goto -12 <__addsf3+0x154 : 1e0681c >
 1e06828:    12 08             	r2 = r1
 1e0682a:    f8 3b             	if (r5 != 0) goto -16 <__addsf3+0x154 : 1e0681c >
 1e0682c:    e2 fd 00 21       	r2 = r1 & r0
 1e06830:    f5 1f             	goto -22 <__addsf3+0x154 : 1e0681c >


__fixsfsi:
 1e06832:    74 01             	[--sp] = {rets, r4}
 1e06834:    01 08             	r1 = r0
 1e06836:    88 fd b8 21       	r2 = uextra(r1, p:23, l:8)
 1e0683a:    00 70             	r0 = 0
 1e0683c:    f2 e7 1e 30       	if (r2 < 127) goto 60 <__fixsfsi+0x4A : 1e0687c >
 1e06840:    23 fc 81 ff       	r3 = r2 + -127
 1e06844:    c8 df             	r0 = r1 >>> 31
 1e06846:    10 b0             	r0 |= 1
 1e06848:    03 e2 05 30       	if (r3 < 32) goto 10 <__fixsfsi+0x24 : 1e06856 >
 1e0684c:    10 e0 0e 00       	if (r0 == 1) goto 28 <__fixsfsi+0x3A : 1e0686c >
 1e06850:    20 fb 80 0c       	r0 = 2147483648
 1e06854:    54 01             	{pc, r4} = [sp++]
 1e06856:    c4 ff ff ff 7f 00 	r4 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e0685c:    51 b9             	r1 &= r4
 1e0685e:    91 bb             	r1 |= 8388608
 1e06860:    63 e1 08 c0       	ifs (r3 > 22) goto 16 <__fixsfsi+0x42 : 1e06874 >
 1e06864:    62 fb 96 29       	r2 = 150 - r2
 1e06868:    a1 0c             	r1 >>= r2
 1e0686a:    07 18             	goto 14 <__fixsfsi+0x48 : 1e0687a >
 1e0686c:    c0 ff ff ff ff 7f 	r0 = 2147483647 <bank_code_load_addr+0x1E55DB : 1ffffff >
 1e06872:    54 01             	{pc, r4} = [sp++]
 1e06874:    22 fc 6a ff       	r2 = r2 + -150
 1e06878:    81 0c             	r1 <<= r2
 1e0687a:    08 0e             	r0 = r1 * r0
 1e0687c:    54 01             	{pc, r4} = [sp++]


__floatsisf:
 1e0687e:    75 01             	[--sp] = {rets, r5, r4}
 1e06880:    10 20             	if (r0 == 0) goto 32 <__floatsisf+0x24 : 1e068a2 >
 1e06882:    c1 df             	r1 = r0 >>> 31
 1e06884:    42 b0             	r2 = r0 + r1
 1e06886:    d2 b2             	r2 ^= r1
 1e06888:    e8 fd 00 12       	r1 = clz(r2)
 1e0688c:    11 fd 1f 19       	r1 = r1 ^ 31
 1e06890:    20 fd 80 0c       	r0 = r0 & 2147483648
 1e06894:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatsisf+0x28 : 1e068a6 >
 1e06898:    63 fb 17 19       	r3 = 23 - r1
 1e0689c:    c2 0c             	r2 <<= r3
 1e0689e:    b2 bb             	r2 ^= 8388608
 1e068a0:    18 18             	goto 48 <__floatsisf+0x54 : 1e068d2 >
 1e068a2:    00 70             	r0 = 0
 1e068a4:    55 01             	{pc, r5, r4} = [sp++]
 1e068a6:    63 fb 37 19       	r3 = 55 - r1
 1e068aa:    f8 fd 30 42       	r4 = r2 << r3
 1e068ae:    13 70             	r3 = 1
 1e068b0:    28 ff 80 4c 01 00 	if (r4 > 2147483648) goto 2 <__floatsisf+0x3A : 1e068b8 >
 1e068b6:    03 70             	r3 = 0
 1e068b8:    15 fc e9 ff       	r5 = r1 + -23
 1e068bc:    62 0d             	r2 >>= r5
 1e068be:    85 b6             	r5 = r3 + r2
 1e068c0:    25 fd 01 59       	r5 = r5 & 1
 1e068c4:    20 ff 80 4c 01 00 	if (r4 == 2147483648) goto 2 <__floatsisf+0x4E : 1e068cc >
 1e068ca:    05 70             	r5 = 0
 1e068cc:    b2 bb             	r2 ^= 8388608
 1e068ce:    c2 b4             	r2 = r2 + r3
 1e068d0:    42 b5             	r2 = r2 + r5
 1e068d2:    c9 c5             	r1 = r1 << 23
 1e068d4:    81 b2             	r1 = r1 + r2
 1e068d6:    41 fb 7e 18       	r1 = r1 + 1065353216
 1e068da:    50 b2             	r0 |= r1
 1e068dc:    55 01             	{pc, r5, r4} = [sp++]


__floatunsisf:
 1e068de:    74 01             	[--sp] = {rets, r4}
 1e068e0:    0b 20             	if (r0 == 0) goto 22 <__floatunsisf+0x1A : 1e068f8 >
 1e068e2:    e8 fd 00 10       	r1 = clz(r0)
 1e068e6:    11 fd 1f 19       	r1 = r1 ^ 31
 1e068ea:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatunsisf+0x1E : 1e068fc >
 1e068ee:    62 fb 17 19       	r2 = 23 - r1
 1e068f2:    80 0c             	r0 <<= r2
 1e068f4:    b0 bb             	r0 ^= 8388608
 1e068f6:    18 18             	goto 48 <__floatunsisf+0x4A : 1e06928 >
 1e068f8:    00 70             	r0 = 0
 1e068fa:    54 01             	{pc, r4} = [sp++]
 1e068fc:    62 fb 37 19       	r2 = 55 - r1
 1e06900:    f8 fd 20 30       	r3 = r0 << r2
 1e06904:    12 70             	r2 = 1
 1e06906:    28 ff 80 3c 01 00 	if (r3 > 2147483648) goto 2 <__floatunsisf+0x30 : 1e0690e >
 1e0690c:    02 70             	r2 = 0
 1e0690e:    14 fc e9 ff       	r4 = r1 + -23
 1e06912:    20 0d             	r0 >>= r4
 1e06914:    04 b4             	r4 = r2 + r0
 1e06916:    24 fd 01 49       	r4 = r4 & 1
 1e0691a:    20 ff 80 3c 01 00 	if (r3 == 2147483648) goto 2 <__floatunsisf+0x44 : 1e06922 >
 1e06920:    04 70             	r4 = 0
 1e06922:    b0 bb             	r0 ^= 8388608
 1e06924:    80 b0             	r0 = r0 + r2
 1e06926:    00 b1             	r0 = r0 + r4
 1e06928:    c9 c5             	r1 = r1 << 23
 1e0692a:    40 b0             	r0 = r0 + r1
 1e0692c:    40 fb 7e 08       	r0 = r0 + 1065353216
 1e06930:    54 01             	{pc, r4} = [sp++]


__muldi3:
 1e06932:    76 01             	[--sp] = {rets, r6-r4}
 1e06934:    89 0e             	r1 = r1 * r2
 1e06936:    80 fe 00 13       	r1 += r3 * r0
 1e0693a:    03 d4             	r3 = r0 >> 16
 1e0693c:    14 d4             	r4 = r2 >> 16
 1e0693e:    80 fe 30 14       	r1 += r4 * r3
 1e06942:    20 04             	r0 = r0.l (u)
 1e06944:    a2 04             	r2 = r2.l (u)
 1e06946:    15 0e             	r5 = r2 * r0
 1e06948:    2e d4             	r6 = r5 >> 16
 1e0694a:    80 fe 30 62       	r6 += r2 * r3
 1e0694e:    32 d4             	r2 = r6 >> 16
 1e06950:    81 b2             	r1 = r1 + r2
 1e06952:    a2 05             	r2 = r6.l (u)
 1e06954:    80 fe 00 24       	r2 += r4 * r0
 1e06958:    12 d4             	r2 = r2 >> 16
 1e0695a:    81 b2             	r1 = r1 + r2
 1e0695c:    80 fe 00 64       	r6 += r4 * r0
 1e06960:    60 05             	r0 = r5.l (u)
 1e06962:    d0 fd 80 06       	r0 <= insert(r6, p:16, l:16)
 1e06966:    56 01             	{pc, r6-r4} = [sp++]


__subsf3:
 1e06968:    11 fd 80 1c       	r1 = r1 ^ 2147483648
 1e0696c:    ff f3 ac fe       	goto -680 <__addsf3 : 1e066c8 >


__udivdi3:
 1e06970:    74 01             	[--sp] = {rets, r4}
 1e06972:    fe 0b             	sp += -4
 1e06974:    04 70             	r4 = 0
 1e06976:    0c 02             	[sp] = r4
 1e06978:    80 f3 02 00       	call 4 <__udivmoddi4 : 1e06980 >
 1e0697c:    02 0a             	sp += 4
 1e0697e:    54 01             	{pc, r4} = [sp++]


__udivmoddi4:
 1e06980:    7e 01             	[--sp] = {rets, r14-r4}
 1e06982:    08 f5 30 00       	r8 = [sp+48]
 1e06986:    10 22             	if (r1 == 0) goto 32 <__udivmoddi4+0x28 : 1e069a8 >
 1e06988:    19 24             	if (r2 == 0) goto 50 <__udivmoddi4+0x3C : 1e069bc >
 1e0698a:    33 26             	if (r3 == 0) goto 102 <__udivmoddi4+0x72 : 1e069f2 >
 1e0698c:    e8 fd 00 41       	r4 = clz(r1)
 1e06990:    e8 fd 00 53       	r5 = clz(r3)
 1e06994:    24 bb             	r4 = r5 - r4
 1e06996:    04 e2 48 30       	if (r4 < 32) goto 144 <__udivmoddi4+0xAA : 1e06a2a >
 1e0699a:    08 e0 56 00       	if (r8 == 0) goto 172 <__udivmoddi4+0xCA : 1e06a4a >
 1e0699e:    10 f6 00 80       	[r8 + 0] = r0
 1e069a2:    11 f6 04 80       	[r8 + 4] = r1
 1e069a6:    51 18             	goto 162 <__udivmoddi4+0xCA : 1e06a4a >
 1e069a8:    34 26             	if (r3 == 0) goto 104 <__udivmoddi4+0x92 : 1e06a12 >
 1e069aa:    08 e0 4e 00       	if (r8 == 0) goto 156 <__udivmoddi4+0xCA : 1e06a4a >
 1e069ae:    01 70             	r1 = 0
 1e069b0:    11 f6 04 80       	[r8 + 4] = r1
 1e069b4:    10 f6 00 80       	[r8 + 0] = r0
 1e069b8:    00 70             	r0 = 0
 1e069ba:    5e 01             	{pc, r14-r4} = [sp++]
 1e069bc:    3d 26             	if (r3 == 0) goto 122 <__udivmoddi4+0xB8 : 1e06a38 >
 1e069be:    54 20             	if (r0 == 0) goto 168 <__udivmoddi4+0xE8 : 1e06a68 >
 1e069c0:    34 fc ff ff       	r4 = r3 + -1
 1e069c4:    34 f0 81 00       	if ((r4 & r3) == 0) goto 258 <__udivmoddi4+0x14A : 1e06aca >
 1e069c8:    e8 fd 00 41       	r4 = clz(r1)
 1e069cc:    e8 fd 00 53       	r5 = clz(r3)
 1e069d0:    24 bb             	r4 = r5 - r4
 1e069d2:    f4 e1 e2 2f       	if (r4 >= 31) goto -60 <__udivmoddi4+0x1A : 1e0699a >
 1e069d6:    1c 98             	r12 = r4 + 1
 1e069d8:    fa fd c0 90       	r9 = r0 >> r12
 1e069dc:    64 fb 1f 49       	r4 = 31 - r4
 1e069e0:    f8 fd 40 71       	r7 = r1 << r4
 1e069e4:    fa fd c0 b1       	r11 = r1 >> r12
 1e069e8:    e0 fd 90 17       	r1 = r7 | r9
 1e069ec:    00 0d             	r0 <<= r4
 1e069ee:    0d 70             	r13 = 0
 1e069f0:    8b 18             	goto 278 <__udivmoddi4+0x188 : 1e06b08 >
 1e069f2:    24 fc ff ff       	r4 = r2 + -1
 1e069f6:    24 f0 43 00       	if ((r4 & r2) == 0) goto 134 <__udivmoddi4+0x100 : 1e06a80 >
 1e069fa:    e8 fd 00 41       	r4 = clz(r1)
 1e069fe:    e8 fd 00 52       	r5 = clz(r2)
 1e06a02:    15 82             	r5 += 33
 1e06a04:    2c bb             	r12 = r5 - r4
 1e06a06:    0b 70             	r11 = 0
 1e06a08:    0c e2 50 10       	if (r12 != 32) goto 160 <__udivmoddi4+0x12C : 1e06aac >
 1e06a0c:    0d 70             	r13 = 0
 1e06a0e:    0c 72             	r12 = 32
 1e06a10:    7b 18             	goto 246 <__udivmoddi4+0x188 : 1e06b08 >
 1e06a12:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xA2 : 1e06a22 >
 1e06a16:    c1 f4 00 89       	[r8 + 4] = 0
 1e06a1a:    d0 fe 20 10       	r1 = r0 % r2 (u)
 1e06a1e:    11 f6 00 80       	[r8 + 0] = r1
 1e06a22:    c0 fe 20 00       	r0 = r0 / r2 (u)
 1e06a26:    01 70             	r1 = 0
 1e06a28:    5e 01             	{pc, r14-r4} = [sp++]
 1e06a2a:    1c 98             	r12 = r4 + 1
 1e06a2c:    0d 70             	r13 = 0
 1e06a2e:    0c e2 0f 10       	if (r12 != 32) goto 30 <__udivmoddi4+0xD0 : 1e06a50 >
 1e06a32:    0b 70             	r11 = 0
 1e06a34:    0c 72             	r12 = 32
 1e06a36:    68 18             	goto 208 <__udivmoddi4+0x188 : 1e06b08 >
 1e06a38:    08 e0 07 00       	if (r8 == 0) goto 14 <__udivmoddi4+0xCA : 1e06a4a >
 1e06a3c:    00 70             	r0 = 0
 1e06a3e:    10 f6 04 80       	[r8 + 4] = r0
 1e06a42:    10 f6 00 80       	[r8 + 0] = r0
 1e06a46:    01 70             	r1 = 0
 1e06a48:    5e 01             	{pc, r14-r4} = [sp++]
 1e06a4a:    00 70             	r0 = 0
 1e06a4c:    01 70             	r1 = 0
 1e06a4e:    5e 01             	{pc, r14-r4} = [sp++]
 1e06a50:    fa fd c0 90       	r9 = r0 >> r12
 1e06a54:    64 fb 1f 49       	r4 = 31 - r4
 1e06a58:    f8 fd 40 a1       	r10 = r1 << r4
 1e06a5c:    fa fd c0 b1       	r11 = r1 >> r12
 1e06a60:    e0 fd 90 1a       	r1 = r10 | r9
 1e06a64:    00 0d             	r0 <<= r4
 1e06a66:    50 18             	goto 160 <__udivmoddi4+0x188 : 1e06b08 >
 1e06a68:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xF8 : 1e06a78 >
 1e06a6c:    c0 f4 00 89       	[r8 + 0] = 0
 1e06a70:    d0 fe 30 01       	r0 = r1 % r3 (u)
 1e06a74:    10 f6 04 80       	[r8 + 4] = r0
 1e06a78:    c0 fe 30 01       	r0 = r1 / r3 (u)
 1e06a7c:    01 70             	r1 = 0
 1e06a7e:    5e 01             	{pc, r14-r4} = [sp++]
 1e06a80:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x110 : 1e06a90 >
 1e06a84:    c1 f4 00 89       	[r8 + 4] = 0
 1e06a88:    e2 fd 00 34       	r3 = r4 & r0
 1e06a8c:    13 f6 00 80       	[r8 + 0] = r3
 1e06a90:    12 e0 71 00       	if (r2 == 1) goto 226 <__udivmoddi4+0x1F6 : 1e06b76 >
 1e06a94:    e3 fd 20 24       	r2 = r4 & ~r2
 1e06a98:    e8 fd 00 22       	r2 = clz(r2)
 1e06a9c:    f8 fd 20 31       	r3 = r1 << r2
 1e06aa0:    62 fb 20 29       	r2 = 32 - r2
 1e06aa4:    a0 0c             	r0 >>= r2
 1e06aa6:    50 b6             	r0 |= r3
 1e06aa8:    a1 0c             	r1 >>= r2
 1e06aaa:    5e 01             	{pc, r14-r4} = [sp++]
 1e06aac:    fc e1 1f 80       	if (r12 > 31) goto 62 <__udivmoddi4+0x16E : 1e06aee >
 1e06ab0:    fa fd c0 90       	r9 = r0 >> r12
 1e06ab4:    67 fb 20 c9       	r7 = 32 - r12
 1e06ab8:    f8 fd 70 41       	r4 = r1 << r7
 1e06abc:    fa fd c0 b1       	r11 = r1 >> r12
 1e06ac0:    e0 fd 90 14       	r1 = r4 | r9
 1e06ac4:    c0 0d             	r0 <<= r7
 1e06ac6:    0d 70             	r13 = 0
 1e06ac8:    1f 18             	goto 62 <__udivmoddi4+0x188 : 1e06b08 >
 1e06aca:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x15A : 1e06ada >
 1e06ace:    10 f6 00 80       	[r8 + 0] = r0
 1e06ad2:    e2 fd 10 04       	r0 = r4 & r1
 1e06ad6:    10 f6 04 80       	[r8 + 4] = r0
 1e06ada:    e3 fd 30 04       	r0 = r4 & ~r3
 1e06ade:    e8 fd 00 00       	r0 = clz(r0)
 1e06ae2:    60 fb 20 09       	r0 = 32 - r0
 1e06ae6:    fa fd 00 01       	r0 = r1 >> r0
 1e06aea:    01 70             	r1 = 0
 1e06aec:    5e 01             	{pc, r14-r4} = [sp++]
 1e06aee:    c4 fc e0 ff       	r4 = r12 + -32
 1e06af2:    fa fd 40 90       	r9 = r0 >> r4
 1e06af6:    67 fb 40 c9       	r7 = 64 - r12
 1e06afa:    f8 fd 70 a1       	r10 = r1 << r7
 1e06afe:    f8 fd 70 d0       	r13 = r0 << r7
 1e06b02:    e0 fd 90 0a       	r0 = r10 | r9
 1e06b06:    21 0d             	r1 >>= r4
 1e06b08:    f4 07             	r4 = -1
 1e06b0a:    59 fb 01 29       	r9 = r2 - 1
 1e06b0e:    a0 fb 40 a3       	r10 = r3 + r4 + c
 1e06b12:    0e 70             	r14 = 0
 1e06b14:    1e 18             	goto 60 <__udivmoddi4+0x1D2 : 1e06b52 >
 1e06b16:    c6 d7             	r6 = r0 >> 31
 1e06b18:    df fd 08 61       	r6 <= insert(r1, p:1, l:31)
 1e06b1c:    cd d7             	r5 = r1 >> 31
 1e06b1e:    df fd 08 5b       	r5 <= insert(r11, p:1, l:31)
 1e06b22:    90 fb 60 19       	r1 = r9 - r6
 1e06b26:    b0 fb 50 1a       	r1 = r10 - r5 - !c
 1e06b2a:    cf df             	r7 = r1 >>> 31
 1e06b2c:    e2 fd 20 17       	r1 = r7 & r2
 1e06b30:    e2 fd 30 47       	r4 = r7 & r3
 1e06b34:    61 bc             	r1 = r6 - r1
 1e06b36:    b0 fb 40 b5       	r11 = r5 - r4 - !c
 1e06b3a:    f0 fd 08 4d       	r4 = r13 << 1
 1e06b3e:    f2 fd f8 5d       	r5 = r13 >> 31
 1e06b42:    e0 fd 40 de       	r13 = r14 | r4
 1e06b46:    2e fd 01 79       	r14 = r7 & 1
 1e06b4a:    df fd 08 50       	r5 <= insert(r0, p:1, l:31)
 1e06b4e:    fc 8f             	r12 += -1
 1e06b50:    50 08             	r0 = r5
 1e06b52:    0c e0 e0 1f       	if (r12 != 0) goto -64 <__udivmoddi4+0x196 : 1e06b16 >
 1e06b56:    f2 fd f8 2d       	r2 = r13 >> 31
 1e06b5a:    df fd 08 20       	r2 <= insert(r0, p:1, l:31)
 1e06b5e:    f0 fd 08 0d       	r0 = r13 << 1
 1e06b62:    08 e0 04 00       	if (r8 == 0) goto 8 <__udivmoddi4+0x1EE : 1e06b6e >
 1e06b66:    1b f6 04 80       	[r8 + 4] = r11
 1e06b6a:    11 f6 00 80       	[r8 + 0] = r1
 1e06b6e:    70 b0             	r0 &= 4294967294
 1e06b70:    e0 fd e0 00       	r0 = r0 | r14
 1e06b74:    21 08             	r1 = r2
 1e06b76:    5e 01             	{pc, r14-r4} = [sp++]


__umoddi3:
 1e06b78:    74 01             	[--sp] = {rets, r4}
 1e06b7a:    fa 0b             	sp += -12
 1e06b7c:    44 a0             	r4 = sp + 4
 1e06b7e:    0c 02             	[sp] = r4
 1e06b80:    bf f3 fe fe       	call -516 <__udivmoddi4 : 1e06980 >
 1e06b84:    21 02             	r1 = [sp+8]
 1e06b86:    10 02             	r0 = [sp+4]
 1e06b88:    06 0a             	sp += 12
 1e06b8a:    54 01             	{pc, r4} = [sp++]


btstack_code_start:
 1e06b8c:    01 00             	nop
 1e06b8e:    00 00             	nop
 1e06b90:    58 a1             	r8 = sp + 21
 1e06b92:    e0 01             	[--sp] = {psr}
 1e06b94:    62 a1             	r2 = sp + 22
 1e06b96:    e0 01             	[--sp] = {psr}
 1e06b98:    64 a1             	r4 = sp + 22
 1e06b9a:    e0 01             	[--sp] = {psr}
 1e06b9c:    00 00             	nop
 1e06b9e:    00 00             	nop
 1e06ba0:    e8 a1             	r8 = sp + 30
 1e06ba2:    e0 01             	[--sp] = {psr}
 1e06ba4:    00 00             	nop
 1e06ba6:    00 00             	nop


spp_sdp_record_item:
 1e06ba8:    00 00             	nop
 1e06baa:    00 00             	nop
 1e06bac:    04 00             	bkpt
 1e06bae:    01 00             	nop
 1e06bb0:    6c 6c             	b[r6 + 6] = r4
 1e06bb2:    e0 01             	[--sp] = {psr}


sdp_record_item_end:
 1e06bb4:    be 97             	r14 = r3 + 27
 1e06bb6:    e0 01             	[--sp] = {psr}
 1e06bb8:    d4 97             	r4 = r3 + 29
 1e06bba:    e0 01             	[--sp] = {psr}
 1e06bbc:    f0 97             	r0 = r3 + 31
 1e06bbe:    e0 01             	[--sp] = {psr}


bt_suspend_a2dp_resumea2dp_release:
 1e06bc0:    36 a1             	r6 = sp + 19
 1e06bc2:    e0 01             	[--sp] = {psr}
 1e06bc4:    3a a1             	r10 = sp + 19
 1e06bc6:    e0 01             	[--sp] = {psr}
 1e06bc8:    3e a1             	r14 = sp + 19
 1e06bca:    e0 01             	[--sp] = {psr}


bt_suspend_avctp_resumeavctp_release:
 1e06bcc:    ea a1             	r10 = sp + 30
 1e06bce:    e0 01             	[--sp] = {psr}
 1e06bd0:    ee a1             	r14 = sp + 30
 1e06bd2:    e0 01             	[--sp] = {psr}
 1e06bd4:    f2 a1             	r2 = sp + 31
 1e06bd6:    e0 01             	[--sp] = {psr}


bt_suspend_hfp_resumehfp_release:
 1e06bd8:    f6 a1             	r6 = sp + 31
 1e06bda:    e0 01             	[--sp] = {psr}
 1e06bdc:    fa a1             	r10 = sp + 31
 1e06bde:    e0 01             	[--sp] = {psr}
 1e06be0:    fe a1             	r14 = sp + 31
 1e06be2:    e0 01             	[--sp] = {psr}


bt_suspend_hid_resumehid_release:
 1e06be4:    02 a2             	r2 = sp + 32
 1e06be6:    e0 01             	[--sp] = {psr}
 1e06be8:    06 a2             	r6 = sp + 32
 1e06bea:    e0 01             	[--sp] = {psr}
 1e06bec:    0a a2             	r10 = sp + 32
 1e06bee:    e0 01             	[--sp] = {psr}


bt_suspend_spp_resumespp_release:
 1e06bf0:    0e a2             	r14 = sp + 32
 1e06bf2:    e0 01             	[--sp] = {psr}
 1e06bf4:    12 a2             	r2 = sp + 33
 1e06bf6:    e0 01             	[--sp] = {psr}
 1e06bf8:    16 a2             	r6 = sp + 33
 1e06bfa:    e0 01             	[--sp] = {psr}


bt_suspend_sdp_resumesdp_release:
 1e06bfc:    1a a2             	r10 = sp + 33
 1e06bfe:    e0 01             	[--sp] = {psr}
 1e06c00:    1e a2             	r14 = sp + 33
 1e06c02:    e0 01             	[--sp] = {psr}
 1e06c04:    22 a2             	r2 = sp + 34
 1e06c06:    e0 01             	[--sp] = {psr}


bt_suspend_iap_resumeiap_release:
 1e06c08:    26 a2             	r6 = sp + 34
 1e06c0a:    e0 01             	[--sp] = {psr}
 1e06c0c:    2a a2             	r10 = sp + 34
 1e06c0e:    e0 01             	[--sp] = {psr}
 1e06c10:    2e a2             	r14 = sp + 34
 1e06c12:    e0 01             	[--sp] = {psr}


l2cap_signaling_commands_format:
 1e06c14:    8f f1 e0 01       	if ((r15 & r8) != 0) goto 960 <ble_user_cmd_prepare+0x74 : 1e06fd8 >
 1e06c18:    f3 f1 e0 01       	if ((r3 & r15) != 0) goto 960 <.GJTIS60_0_0_ : 1e06fdc >
 1e06c1c:    93 f1 e0 01       	if ((r3 & r9) != 0) goto 960 <.GJTIS60_0_0_+0x4 : 1e06fe0 >
 1e06c20:    8e f1 e0 01       	if ((r14 & r8) != 0) goto 960 <.GJTIS60_0_0_+0x8 : 1e06fe4 >
 1e06c24:    8d f1 e0 01       	if ((r13 & r8) != 0) goto 960 <.GJTIE60_0_0_ : 1e06fe8 >
 1e06c28:    f3 f1 e0 01       	if ((r3 & r15) != 0) goto 960 <.GJTIE60_0_0_+0x4 : 1e06fec >
 1e06c2c:    f3 f1 e0 01       	if ((r3 & r15) != 0) goto 960 <.GJTIE60_0_0_+0x8 : 1e06ff0 >
 1e06c30:    90 f1 e0 01       	if ((r0 & r9) != 0) goto 960 <.GJTIE60_0_0_+0xC : 1e06ff4 >
 1e06c34:    90 f1 e0 01       	if ((r0 & r9) != 0) goto 960 <.GJTIE60_0_0_+0x10 : 1e06ff8 >
 1e06c38:    b8 f1 e0 01       	if ((r8 & r11) != 0) goto 960 <.GJTIS60_1_1_ : 1e06ffc >
 1e06c3c:    8e f1 e0 01       	if ((r14 & r8) != 0) goto 960 <.GJTIS60_1_1_+0x4 : 1e07000 >
 1e06c40:    00 00             	nop
 1e06c42:    00 00             	nop
 1e06c44:    00 00             	nop
 1e06c46:    00 00             	nop
 1e06c48:    00 00             	nop
 1e06c4a:    00 00             	nop
 1e06c4c:    00 00             	nop
 1e06c4e:    00 00             	nop
 1e06c50:    00 00             	nop
 1e06c52:    00 00             	nop
 1e06c54:    00 00             	nop
 1e06c56:    00 00             	nop
 1e06c58:    93 f1 e0 01       	if ((r3 & r9) != 0) goto 960 <.GJTIE60_1_1_+0x1A : 1e0701c >
 1e06c5c:    b8 f1 e0 01       	if ((r8 & r11) != 0) goto 960 <.GJTIE60_1_1_+0x1E : 1e07020 >
 1e06c60:    92 f1 e0 01       	if ((r2 & r9) != 0) goto 960 <.GJTIE60_1_1_+0x22 : 1e07024 >
 1e06c64:    92 f1 e0 01       	if ((r2 & r9) != 0) goto 960 <.GJTIE60_1_1_+0x26 : 1e07028 >
 1e06c68:    f3 f1 e0 01       	if ((r3 & r15) != 0) goto 960 <.GJTIE60_1_1_+0x2A : 1e0702c >


sdp_spp_service_data:
 1e06c6c:    36 00             	[--sp] = rets
 1e06c6e:    3f 09             	r15 += r3
 1e06c70:    00 00             	nop
 1e06c72:    0a 00             	ssync
 1e06c74:    01 00             	nop
 1e06c76:    04 09             	r4 += r0
 1e06c78:    00 01             	{r3-r0} = [sp++]
 1e06c7a:    36 00             	[--sp] = rets
 1e06c7c:    03 19             	goto 518 <att_get_default_conn_handle+0x12 : 1e06e84 >
 1e06c7e:    11 01             	{rets, r3-r1} = [sp++]
 1e06c80:    09 00             	csync
 1e06c82:    04 36             	if (r3 != 0) goto 8 <sdp_spp_service_data+0x20 : 1e06c8c >
 1e06c84:    00 0e             	r0 = r0 * r0
 1e06c86:    36 00             	[--sp] = rets
 1e06c88:    03 19             	goto 518 <att_get_default_conn_handle+0x1E : 1e06e90 >
 1e06c8a:    01 00             	nop
 1e06c8c:    36 00             	[--sp] = rets
 1e06c8e:    05 19             	goto 522 <att_send_init+0x6 : 1e06e9a >
 1e06c90:    00 03             	r0 = [sp+64]
 1e06c92:    08 02             	[sp] = r0
 1e06c94:    09 00             	csync
 1e06c96:    09 36             	if (r3 != 0) goto 18 <sdp_spp_service_data+0x3E : 1e06caa >
 1e06c98:    00 09             	r0 += r0
 1e06c9a:    36 00             	[--sp] = rets
 1e06c9c:    06 19             	goto 524 <att_send_init+0x16 : 1e06eaa >
 1e06c9e:    11 01             	{rets, r3-r1} = [sp++]
 1e06ca0:    09 01             	{r9-r4} = [sp++]
 1e06ca2:    02 09             	r2 += r0
 1e06ca4:    01 00             	nop
 1e06ca6:    25 06             	r5 = -30
 1e06ca8:    4a 4c             	[r6 + 16] = r2
 1e06caa:    5f 53             	h[r1 + 42] = r7
 1e06cac:    50 50             	r0 = h[r0 + 10] (u)
 1e06cae:    00 00             	nop


own_private_linkkey:
 1e06cb0:    06 77             	r6 = 112
 1e06cb2:    5f 87             	r15 += 117
 1e06cb4:    91 8d             	r1 += -39
 1e06cb6:    d4 23             	if (r1 == 0) goto -88 <l2cap_signaling_commands_format+0x4C : 1e06c60 >
 1e06cb8:    00 5d             	r0 = h[r6 + 32] (u)
 1e06cba:    f1 d8             	r1 = r6 >>> 3
 1e06cbc:    cf 0c             	r15 <<= r3
 1e06cbe:    14 2b             	if (r5 == 0) goto -472 <__udivmoddi4+0x168 : 1e06ae8 >


crc_ta:
 1e06cc0:    00 00             	nop
 1e06cc2:    21 10             	call 66 <user_data_cbuf_is_write_able+0x26 : 1e06d06 >
 1e06cc4:    42 20             	if (r0 == 0) goto 132 <user_data_cbuf_is_write_able+0x6A : 1e06d4a >
 1e06cc6:    63 30             	if (r0 != 0) goto 198 <user_data_att_send+0x2E : 1e06d8e >
 1e06cc8:    84 40             	r4 = [r0 + 32]
 1e06cca:    a5 50             	r5 = h[r0 + 20] (u)
 1e06ccc:    c6 60             	r6 = b[r0 + 12] (u)
 1e06cce:    e7 70             	r7 = 14
 1e06cd0:    08 81             	r8 += 16
 1e06cd2:    29 91             	r9 = r0 + 18
 1e06cd4:    4a a1             	r10 = sp + 20
 1e06cd6:    6b b1             	r11 = r0 - r5
 1e06cd8:    8c c1             	r4 = r1 << 6
 1e06cda:    ad d1             	r5 = r5 >> 6
 1e06cdc:    ce e1 ef f1       	if (r14 ?? 28) goto 990 <.GJTIE60_1_1_+0xBC : 1e070be >


user_data_cbuf_is_write_able:
 1e06ce0:    76 01             	[--sp] = {rets, r6-r4}			  ## att_send.c:226:0
 1e06ce2:    c5 ff c8 1b 00 00 	r5 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:226:0
 1e06ce8:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:230:9
 1e06cea:    14 08             	r4 = r1			  ## att_send.c:230:9
 1e06cec:    0f 24             	if (r2 == 0) goto 30 <user_data_cbuf_is_write_able+0x2C : 1e06d0c >
 1e06cee:    21 fc c4 00       	r1 = r2 + 196			  ## att_send.c:110:28
 1e06cf2:    02 70             	r2 = 0			  ## att_send.c:110:28
 1e06cf4:    03 70             	r3 = 0			  ## att_send.c:110:28
 1e06cf6:    06 f7 ec 1f       	r6 = h[r1 + -20] (u)			  ## att_send.c:110:28
 1e06cfa:    06 f2 09 00       	if (r6 == r0) goto 18 <user_data_cbuf_is_write_able+0x30 : 1e06d10 >			  ## att_send.c:110:13
 1e06cfe:    12 80             	r2 += 1			  ## att_send.c:109:23
 1e06d00:    13 80             	r3 += 1			  ## att_send.c:109:43
 1e06d02:    21 80             	r1 += 2			  ## att_send.c:109:23
 1e06d04:    a3 e0 f7 bf       	ifs (r3 < 10) goto -18 <user_data_cbuf_is_write_able+0x16 : 1e06cf6 >			  ## att_send.c:109:23
 1e06d08:    46 71             	r6 = 20
 1e06d0a:    07 18             	goto 14 <user_data_cbuf_is_write_able+0x3A : 1e06d1a >
 1e06d0c:    05 70             	r5 = 0
 1e06d0e:    26 18             	goto 76 <user_data_cbuf_is_write_able+0x7C : 1e06d5c >
 1e06d10:    80 04             	r0 = r2.b0 (u)			  ## att_send.c:236:19
 1e06d12:    46 71             	r6 = 20
 1e06d14:    90 e0 01 80       	if (r0 > 9) goto 2 <user_data_cbuf_is_write_able+0x3A : 1e06d1a >
 1e06d18:    06 52             	r6 = h[r1 + 0] (u)			  ## att_send.c:238:5
 1e06d1a:    98 f3 3f 00       	call 3145854 <local_irq_disable : 106d9c >			  ## att_send.c:244:5
 1e06d1e:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:245:17
 1e06d20:    71 40             	r1 = [r0 + 28]			  ## att_send.c:245:17
 1e06d22:    60 40             	r0 = [r0 + 24]			  ## att_send.c:245:17
 1e06d24:    80 f3 a8 2d       	call 23376 <cbuf_get_data_size : 1e0c878 >			  ## att_send.c:245:59
 1e06d28:    21 b2             	r1 = r1 - r0			  ## att_send.c:245:57
 1e06d2a:    05 70             	r5 = 0
 1e06d2c:    00 70             	r0 = 0
 1e06d2e:    71 e0 10 30       	if (r1 < 7) goto 32 <user_data_cbuf_is_write_able+0x72 : 1e06d52 >
 1e06d32:    60 9c             	r0 = r6 + 6			  ## att_send.c:241:46
 1e06d34:    20 04             	r0 = r0.l (u)			  ## att_send.c:248:28
 1e06d36:    01 f2 03 20       	if (r1 >= r0) goto 6 <user_data_cbuf_is_write_able+0x60 : 1e06d40 >			  ## att_send.c:248:16
 1e06d3a:    10 fc fa ff       	r0 = r1 + -6			  ## att_send.c:249:27
 1e06d3e:    09 18             	goto 18 <user_data_cbuf_is_write_able+0x72 : 1e06d52 >
 1e06d40:    d0 fe 00 21       	r2 = r1 % r0 (u)			  ## att_send.c:252:31
 1e06d44:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## att_send.c:251:28
 1e06d48:    80 0f             	r0 = r0 * r6			  ## att_send.c:251:41
 1e06d4a:    72 e0 02 30       	if (r2 < 7) goto 4 <user_data_cbuf_is_write_able+0x72 : 1e06d52 >
 1e06d4e:    20 09             	r0 += r2			  ## att_send.c:254:33
 1e06d50:    a0 8f             	r0 += -6			  ## att_send.c:254:19
 1e06d52:    40 f2 01 30       	if (r0 < r4) goto 2 <user_data_cbuf_is_write_able+0x78 : 1e06d58 >
 1e06d56:    05 08             	r5 = r0			  ## att_send.c:257:9
 1e06d58:    98 f3 1e 00       	call 3145788 <local_irq_enable : 106d98 >			  ## att_send.c:262:5
 1e06d5c:    50 08             	r0 = r5			  ## att_send.c:264:1
 1e06d5e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_send.c:264:1


user_data_att_send:
 1e06d60:    7c 01             	[--sp] = {rets, r12-r4}			  ## att_send.c:285:0
 1e06d62:    fc 0b             	sp += -8			  ## att_send.c:285:0
 1e06d64:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:285:0
 1e06d6a:    07 f6 00 80       	r7 = [r8 + 0]			  ## att_send.c:290:9
 1e06d6e:    3c 08             	r12 = r3			  ## att_send.c:290:9
 1e06d70:    29 08             	r9 = r2
 1e06d72:    06 08             	r6 = r0
 1e06d74:    19 2e             	if (r7 == 0) goto 50 <user_data_att_send+0x48 : 1e06da8 >
 1e06d76:    96 f5 00 00       	h[sp] = r6			  ## att_send.c:294:27
 1e06d7a:    91 f5 02 00       	h[sp+2] = r1			  ## att_send.c:295:27
 1e06d7e:    17 26             	if (r3 == 0) goto 46 <user_data_att_send+0x4E : 1e06dae >			  ## att_send.c:295:27
 1e06d80:    c0 02             	r0 = [sp+48]
 1e06d82:    18 20             	if (r0 == 0) goto 48 <user_data_att_send+0x54 : 1e06db4 >
 1e06d84:    05 c3             	r5 = r0 << 12			  ## att_send.c:309:29
 1e06d86:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:309:29
 1e06d8a:    70 fc c4 00       	r0 = r7 + 196			  ## att_send.c:109:5
 1e06d8e:    01 70             	r1 = 0			  ## att_send.c:109:5
 1e06d90:    02 70             	r2 = 0			  ## att_send.c:109:5
 1e06d92:    03 f7 ec 0f       	r3 = h[r0 + -20] (u)			  ## att_send.c:110:28
 1e06d96:    63 f2 1e 00       	if (r3 == r6) goto 60 <user_data_att_send+0x76 : 1e06dd6 >			  ## att_send.c:110:13
 1e06d9a:    11 80             	r1 += 1			  ## att_send.c:109:23
 1e06d9c:    12 80             	r2 += 1			  ## att_send.c:109:43
 1e06d9e:    20 80             	r0 += 2			  ## att_send.c:109:23
 1e06da0:    a2 e0 f7 bf       	ifs (r2 < 10) goto -18 <user_data_att_send+0x32 : 1e06d92 >			  ## att_send.c:109:23
 1e06da4:    4a 71             	r10 = 20
 1e06da6:    1d 18             	goto 58 <user_data_att_send+0x82 : 1e06de2 >
 1e06da8:    04 fb 9e ff       	r4 = -98 <bank_code_load_addr+0x1E557A : 1ffff9e >
 1e06dac:    5f 18             	goto 190 <user_data_att_send+0x10C : 1e06e6c >
 1e06dae:    04 fb a1 ff       	r4 = -95 <bank_code_load_addr+0x1E557D : 1ffffa1 >
 1e06db2:    5c 18             	goto 184 <user_data_att_send+0x10C : 1e06e6c >
 1e06db4:    70 fc 2c 00       	r0 = r7 + 44			  ## att_send.c:185:5
 1e06db8:    12 92             	r2 = r1 + 1			  ## att_send.c:304:57
 1e06dba:    01 70             	r1 = 0
 1e06dbc:    a2 04             	r2 = r2.l (u)
 1e06dbe:    03 f7 fe 0f       	r3 = h[r0 + -2] (u)			  ## att_send.c:186:27
 1e06dc2:    23 f2 4a 00       	if (r3 == r2) goto 148 <user_data_att_send+0xFA : 1e06e5a >			  ## att_send.c:186:13
 1e06dc6:    11 80             	r1 += 1			  ## att_send.c:185:48
 1e06dc8:    40 80             	r0 += 4			  ## att_send.c:185:23
 1e06dca:    01 e2 f8 bf       	ifs (r1 < 32) goto -16 <user_data_att_send+0x5E : 1e06dbe >			  ## att_send.c:185:23
 1e06dce:    00 70             	r0 = 0			  ## att_send.c:304:29
 1e06dd0:    90 f5 04 00       	h[sp+4] = r0			  ## att_send.c:304:29
 1e06dd4:    49 18             	goto 146 <user_data_att_send+0x108 : 1e06e68 >			  ## att_send.c:304:29
 1e06dd6:    41 04             	r1 = r1.b0 (u)			  ## att_send.c:317:19
 1e06dd8:    4a 71             	r10 = 20			  ## att_send.c:317:19
 1e06dda:    91 e0 02 80       	if (r1 > 9) goto 4 <user_data_att_send+0x82 : 1e06de2 >			  ## att_send.c:317:19
 1e06dde:    0a f7 00 00       	r10 = h[r0 + 0] (u)			  ## att_send.c:318:20
 1e06de2:    97 f3 db ff       	call 3145654 <local_irq_disable : 106d9c >			  ## att_send.c:324:5
 1e06de6:    60 08             	r0 = r6			  ## att_send.c:325:9
 1e06de8:    c1 08             	r1 = r12			  ## att_send.c:325:9
 1e06dea:    7a 17             	call -268 <user_data_cbuf_is_write_able : 1e06ce0 >			  ## att_send.c:325:9
 1e06dec:    2c 20             	if (r0 == 0) goto 88 <user_data_att_send+0xE6 : 1e06e46 >			  ## att_send.c:325:9
 1e06dee:    0b fb ff 0f       	r11 = 4095 <sys_clock_limit+0x4F : fff >
 1e06df2:    e6 fd 00 0c       	r0 = r12.l (u)			  ## att_send.c:327:21
 1e06df6:    a4 08             	r4 = r10			  ## att_send.c:329:13
 1e06df8:    40 f2 01 80       	if (r0 > r4) goto 2 <user_data_att_send+0x9E : 1e06dfe >			  ## att_send.c:329:13
 1e06dfc:    c4 08             	r4 = r12			  ## att_send.c:329:13
 1e06dfe:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:273:24
 1e06e02:    29 d3             	r1 = r5 >> 12			  ## att_send.c:332:32
 1e06e04:    45 08             	r5 = r4			  ## att_send.c:332:32
 1e06e06:    d4 fd 60 51       	r5 <= insert(r1, p:12, l:20)			  ## att_send.c:332:32
 1e06e0a:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:332:32
 1e06e0e:    01 a0             	r1 = sp + 0
 1e06e10:    62 70             	r2 = 6			  ## att_send.c:273:12
 1e06e12:    80 f3 fe 2c       	call 23036 <cbuf_write : 1e0c812 >			  ## att_send.c:273:12
 1e06e16:    01 f6 00 80       	r1 = [r8 + 0]			  ## att_send.c:274:25
 1e06e1a:    06 08             	r6 = r0			  ## att_send.c:273:12
 1e06e1c:    e2 fd b0 74       	r7 = r4 & r11			  ## att_send.c:332:32
 1e06e20:    10 08             	r0 = r1			  ## att_send.c:274:13
 1e06e22:    91 08             	r1 = r9			  ## att_send.c:274:13
 1e06e24:    72 08             	r2 = r7			  ## att_send.c:274:13
 1e06e26:    80 f3 f4 2c       	call 23016 <cbuf_write : 1e0c812 >			  ## att_send.c:274:13
 1e06e2a:    60 09             	r0 += r6			  ## att_send.c:274:10
 1e06e2c:    20 04             	r0 = r0.l (u)			  ## att_send.c:276:14
 1e06e2e:    61 9e             	r1 = r7 + 6			  ## att_send.c:276:32
 1e06e30:    01 f2 0e 10       	if (r1 != r0) goto 28 <user_data_att_send+0xF0 : 1e06e50 >
 1e06e34:    20 05             	r0 = r4.l (u)
 1e06e36:    90 fb 40 cc       	r12 = r12 - r4			  ## att_send.c:340:17
 1e06e3a:    e6 fd 00 1c       	r1 = r12.l (u)			  ## att_send.c:326:9
 1e06e3e:    09 09             	r9 += r0			  ## att_send.c:341:18
 1e06e40:    d8 33             	if (r1 != 0) goto -80 <user_data_att_send+0x92 : 1e06df2 >
 1e06e42:    04 70             	r4 = 0
 1e06e44:    02 18             	goto 4 <user_data_att_send+0xEA : 1e06e4a >
 1e06e46:    04 fb 9f ff       	r4 = -97 <bank_code_load_addr+0x1E557B : 1ffff9f >
 1e06e4a:    97 f3 a5 ff       	call 3145546 <local_irq_enable : 106d98 >			  ## att_send.c:347:5
 1e06e4e:    0e 18             	goto 28 <user_data_att_send+0x10C : 1e06e6c >			  ## att_send.c:347:5
 1e06e50:    97 f3 a2 ff       	call 3145540 <local_irq_enable : 106d98 >			  ## att_send.c:337:17
 1e06e54:    04 fb 9f ff       	r4 = -97 <bank_code_load_addr+0x1E557B : 1ffff9f >			  ## att_send.c:337:17
 1e06e58:    09 18             	goto 18 <user_data_att_send+0x10C : 1e06e6c >			  ## att_send.c:337:17
 1e06e5a:    00 50             	r0 = h[r0 + 0] (u)			  ## att_send.c:187:24
 1e06e5c:    05 c3             	r5 = r0 << 12			  ## att_send.c:304:29
 1e06e5e:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:304:29
 1e06e62:    61 ff 0f 09 91 ff 	if ((r0 & 15) != 0) goto -222 <user_data_att_send+0x2A : 1e06d8a >			  ## att_send.c:304:29
 1e06e68:    04 fb a3 ff       	r4 = -93 <bank_code_load_addr+0x1E557F : 1ffffa3 >
 1e06e6c:    40 08             	r0 = r4			  ## att_send.c:349:1
 1e06e6e:    04 0a             	sp += 8			  ## att_send.c:349:1
 1e06e70:    5c 01             	{pc, r12-r4} = [sp++]			  ## att_send.c:349:1


att_get_default_conn_handle:
 1e06e72:    c0 ff c8 1b 00 00 	r0 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:568:0
 1e06e78:    00 40             	r0 = [r0 + 0]			  ## att_send.c:569:9
 1e06e7a:    09 20             	if (r0 == 0) goto 18 <att_get_default_conn_handle+0x1C : 1e06e8e >			  ## att_send.c:569:9
 1e06e7c:    01 fc b0 00       	r1 = r0 + 176			  ## att_send.c:89:13
 1e06e80:    02 70             	r2 = 0			  ## att_send.c:89:13
 1e06e82:    80 f7 02 10       	r0 = h[r1 ++= 2] (u)			  ## att_send.c:89:13
 1e06e86:    05 30             	if (r0 != 0) goto 10 <att_get_default_conn_handle+0x20 : 1e06e92 >			  ## att_send.c:89:13
 1e06e88:    12 80             	r2 += 1			  ## att_send.c:88:43
 1e06e8a:    92 e0 fa df       	ifs (r2 <= 9) goto -12 <att_get_default_conn_handle+0x10 : 1e06e82 >
 1e06e8e:    00 70             	r0 = 0
 1e06e90:    20 00             	rts			  ## att_send.c:574:1
 1e06e92:    20 00             	rts			  ## att_send.c:574:1


att_send_init:
 1e06e94:    7a 01             	[--sp] = {rets, r10-r4}			  ## att_send.c:578:0
 1e06e96:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:578:0
 1e06e9c:    c0 f4 00 89       	[r8 + 0] = 0			  ## att_send.c:582:15
 1e06ea0:    36 08             	r6 = r3			  ## att_send.c:582:15
 1e06ea2:    2a 08             	r10 = r2
 1e06ea4:    15 08             	r5 = r1
 1e06ea6:    04 08             	r4 = r0
 1e06ea8:    46 28             	if (r4 == 0) goto 140 <att_send_init+0xA2 : 1e06f36 >
 1e06eaa:    45 2a             	if (r5 == 0) goto 138 <att_send_init+0xA2 : 1e06f36 >
 1e06eac:    60 fc 0c 01       	r0 = r6 + 268			  ## att_send.c:587:44
 1e06eb0:    02 f2 41 30       	if (r2 < r0) goto 130 <att_send_init+0xA2 : 1e06f36 >			  ## att_send.c:587:44
 1e06eb4:    46 e1 3f 30       	if (r6 < 20) goto 126 <att_send_init+0xA2 : 1e06f36 >
 1e06eb8:    97 f3 70 ff       	call 3145440 <local_irq_disable : 106d9c >			  ## att_send.c:598:5
 1e06ebc:    15 f6 00 80       	[r8 + 0] = r5			  ## att_send.c:600:15
 1e06ec0:    01 70             	r1 = 0			  ## att_send.c:603:5
 1e06ec2:    42 7e             	r2 = 228			  ## att_send.c:603:5
 1e06ec4:    07 70             	r7 = 0			  ## att_send.c:603:5
 1e06ec6:    50 08             	r0 = r5			  ## att_send.c:603:5
 1e06ec8:    98 f3 12 00       	call 3145764 <memset : 106ef0 >			  ## att_send.c:603:5
 1e06ecc:    50 fc ac 00       	r0 = r5 + 172			  ## att_send.c:603:5
 1e06ed0:    09 fc 38 00       	r9 = r0 + 56			  ## att_send.c:601:13
 1e06ed4:    19 f6 00 00       	[r0 + 0] = r9			  ## att_send.c:605:27
 1e06ed8:    6e 51             	h[r0 + 44] = r6			  ## att_send.c:606:30
 1e06eda:    81 91             	r1 = r0 + 24			  ## att_send.c:608:5
 1e06edc:    42 71             	r2 = 20			  ## att_send.c:608:5
 1e06ede:    12 f8 00 17       	h[r1+r7] = r2			  ## att_send.c:609:37
 1e06ee2:    27 80             	r7 += 2			  ## att_send.c:608:19
 1e06ee4:    47 e1 fb 1f       	if (r7 != 20) goto -10 <att_send_init+0x4A : 1e06ede >			  ## att_send.c:608:5
 1e06ee8:    40 80             	r0 += 4			  ## att_send.c:612:5
 1e06eea:    01 70             	r1 = 0			  ## att_send.c:612:5
 1e06eec:    07 70             	r7 = 0			  ## att_send.c:612:5
 1e06eee:    97 f3 ff ff       	call 3145726 <memset : 106ef0 >			  ## att_send.c:612:5
 1e06ef2:    17 f9 db 50       	b[r5 + 219] = r7			  ## att_send.c:613:34
 1e06ef6:    50 fc 2a 00       	r0 = r5 + 42			  ## att_send.c:132:5
 1e06efa:    01 70             	r1 = 0			  ## att_send.c:132:5
 1e06efc:    02 78             	r2 = 128			  ## att_send.c:132:5
 1e06efe:    97 f3 f7 ff       	call 3145710 <memset : 106ef0 >			  ## att_send.c:132:5
 1e06f02:    17 f9 da 50       	b[r5 + 218] = r7			  ## att_send.c:619:23
 1e06f06:    80 fb 60 19       	r1 = r9 + r6			  ## att_send.c:615:13
 1e06f0a:    a0 fc 1c ff       	r0 = r10 + -228			  ## att_send.c:602:14
 1e06f0e:    a0 b1             	r0 = r0 - r6			  ## att_send.c:616:14
 1e06f10:    22 04             	r2 = r0.l (u)			  ## att_send.c:620:49
 1e06f12:    50 08             	r0 = r5			  ## att_send.c:620:5
 1e06f14:    80 f3 71 2c       	call 22754 <cbuf_init : 1e0c7fa >			  ## att_send.c:620:5
 1e06f18:    40 fc ff ff       	r0 = r4 + -1			  ## att_send.c:622:21
 1e06f1c:    20 04             	r0 = r0.l (u)			  ## att_send.c:622:21
 1e06f1e:    c1 ff fe ef 00 00 	r1 = 61438 <UPDATA_BREDR_BASE_BEG+0x49E : effe >			  ## att_send.c:622:21
 1e06f24:    10 f2 05 80       	if (r0 > r1) goto 10 <att_send_init+0x9E : 1e06f32 >			  ## att_send.c:622:21
 1e06f28:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:559:9
 1e06f2c:    02 20             	if (r0 == 0) goto 4 <att_send_init+0x9E : 1e06f32 >			  ## att_send.c:559:9
 1e06f2e:    14 f7 b0 00       	h[r0 + 176] = r4			  ## att_send.c:562:32
 1e06f32:    97 f3 31 ff       	call 3145314 <local_irq_enable : 106d98 >			  ## att_send.c:627:5
 1e06f36:    5a 01             	{pc, r10-r4} = [sp++]			  ## att_send.c:629:1


stack_run_loop_resume:
 1e06f38:    c0 ff 85 f1 e0 01 	r0 = 31519109 <bluetooth_base_uuid+0x17B : 1e0f185 >			  ## btstack_task.c:53:0
 1e06f3e:    f1 7f             	r1 = 255			  ## btstack_task.c:54:5
 1e06f40:    02 70             	r2 = 0			  ## btstack_task.c:54:5
 1e06f42:    03 70             	r3 = 0			  ## btstack_task.c:54:5
 1e06f44:    d7 f3 4c ff       	goto 3145368 <os_taskq_post_type : 106de0 >			  ## btstack_task.c:54:5


btstack_linked_list_remove:
 1e06f48:    07 22             	if (r1 == 0) goto 14 <btstack_linked_list_remove+0x10 : 1e06f58 >			  ## btstack_linked_list.c:110:0
 1e06f4a:    02 08             	r2 = r0			  ## btstack_linked_list.c:110:0
 1e06f4c:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_remove+0x10 : 1e06f58 >			  ## btstack_linked_list.c:110:0
 1e06f4e:    00 44             	r0 = [r2 + 0]			  ## btstack_linked_list.c:116:17
 1e06f50:    10 f2 fb 1f       	if (r0 != r1) goto -10 <btstack_linked_list_remove+0x2 : 1e06f4a >			  ## btstack_linked_list.c:116:17
 1e06f54:    00 42             	r0 = [r1 + 0]			  ## btstack_linked_list.c:117:31
 1e06f56:    08 44             	[r2 + 0] = r0			  ## btstack_linked_list.c:117:22
 1e06f58:    20 00             	rts


stack_run_loop_remove:
 1e06f5a:    01 08             	r1 = r0			  ## run_loop.c:53:0
 1e06f5c:    c0 ff 84 09 00 00 	r0 = 2436 <stack_run_loop_head : 984 >			  ## run_loop.c:54:5
 1e06f62:    f2 1f             	goto -28 <btstack_linked_list_remove : 1e06f48 >			  ## run_loop.c:54:5


ble_user_cmd_prepare:
 1e06f64:    62 01             	[--sp] = {r3, r2}			  ## btstack_main.c:829:0
 1e06f66:    7a 01             	[--sp] = {rets, r10-r4}			  ## btstack_main.c:829:0
 1e06f68:    f0 0b             	sp += -32			  ## btstack_main.c:829:0
 1e06f6a:    17 08             	r7 = r1			  ## btstack_main.c:829:0
 1e06f6c:    05 08             	r5 = r0			  ## btstack_main.c:829:0
 1e06f6e:    c4 ff 28 1c 00 00 	r4 = 7208 <btstack_global_info : 1c28 >			  ## btstack_main.c:829:0
 1e06f74:    00 f9 b4 40       	r0 = b[r4 + 180] (u)			  ## btstack_main.c:834:31
 1e06f78:    16 20             	if (r0 == 0) goto 44 <ble_user_cmd_prepare+0x42 : 1e06fa6 >			  ## btstack_main.c:834:31
 1e06f7a:    06 fb 9d ff       	r6 = -99 <bank_code_load_addr+0x1E5579 : 1ffff9d >
 1e06f7e:    57 e0 14 c0       	ifs (r7 > 5) goto 40 <ble_user_cmd_prepare+0x46 : 1e06faa >
 1e06f82:    38 c4             	r0 = r7 << 16			  ## btstack_main.c:843:21
 1e06f84:    50 ba             	r0 |= r5			  ## btstack_main.c:843:28
 1e06f86:    28 02             	[sp+8] = r0			  ## btstack_main.c:843:13
 1e06f88:    97 f3 08 ff       	call 3145232 <local_irq_disable : 106d9c >			  ## btstack_main.c:845:5
 1e06f8c:    a1 48             	r1 = [r4 + 40]			  ## btstack_main.c:847:18
 1e06f8e:    90 48             	r0 = [r4 + 36]			  ## btstack_main.c:847:18
 1e06f90:    80 f3 72 2c       	call 22756 <cbuf_get_data_size : 1e0c878 >			  ## btstack_main.c:847:18
 1e06f94:    20 b2             	r0 = r1 - r0			  ## btstack_main.c:847:18
 1e06f96:    80 d0             	r0 = r0 >> 2			  ## btstack_main.c:847:36
 1e06f98:    11 9e             	r1 = r7 + 1			  ## btstack_main.c:846:5
 1e06f9a:    01 f2 0b 90       	if (r1 <= r0) goto 22 <ble_user_cmd_prepare+0x50 : 1e06fb4 >			  ## btstack_main.c:847:9
 1e06f9e:    97 f3 fb fe       	call 3145206 <local_irq_enable : 106d98 >			  ## btstack_main.c:848:9
 1e06fa2:    f6 8f             	r6 += -1
 1e06fa4:    02 18             	goto 4 <ble_user_cmd_prepare+0x46 : 1e06faa >
 1e06fa6:    06 fb a2 ff       	r6 = -94 <bank_code_load_addr+0x1E557E : 1ffffa2 >
 1e06faa:    60 08             	r0 = r6			  ## btstack_main.c:947:1
 1e06fac:    10 0a             	sp += 32			  ## btstack_main.c:947:1
 1e06fae:    1a 01             	{rets, r10-r4} = [sp++]			  ## btstack_main.c:947:1
 1e06fb0:    04 0a             	sp += 8			  ## btstack_main.c:947:1
 1e06fb2:    20 00             	rts			  ## btstack_main.c:947:1
 1e06fb4:    00 a4             	r0 = sp + 64
 1e06fb6:    18 02             	[sp+4] = r0			  ## btstack_main.c:852:5
 1e06fb8:    21 e0 0a b0       	ifs (r1 < 2) goto 20 <ble_user_cmd_prepare+0x6C : 1e06fd0 >			  ## btstack_main.c:852:5
 1e06fbc:    80 a0             	r0 = sp + 8
 1e06fbe:    40 80             	r0 += 4			  ## btstack_main.c:854:19
 1e06fc0:    12 02             	r2 = [sp+4]			  ## btstack_main.c:854:19
 1e06fc2:    43 94             	r3 = r2 + 4			  ## btstack_main.c:854:19
 1e06fc4:    1b 02             	[sp+4] = r3			  ## btstack_main.c:854:19
 1e06fc6:    02 44             	r2 = [r2 + 0]			  ## btstack_main.c:854:19
 1e06fc8:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btstack_main.c:854:17
 1e06fcc:    57 f3 f8 ff       	if (--r7 != 0) goto -16 <ble_user_cmd_prepare+0x5C : 1e06fc0 >			  ## btstack_main.c:854:17
 1e06fd0:    50 fc fd ff       	r0 = r5 + -3			  ## btstack_main.c:861:5
 1e06fd4:    06 70             	r6 = 0			  ## btstack_main.c:861:5
 1e06fd6:    b0 e0 0c 80       	if (r0 > 11) goto 24 <.GJTIE60_0_0_+0xA : 1e06ff2 >
 1e06fda:    a0 00             	tbb [r0]


.GJTIS60_0_0_:
 1e06fdc:    06     < 6 : 0x6 >
 1e06fdd:    06     < 6 : 0x6 >
 1e06fde:    1d     < 29 : 0x1D >
 1e06fdf:    1d     < 29 : 0x1D >
 1e06fe0:    26     < 38 : 0x26 >
 1e06fe1:    1d     < 29 : 0x1D >
 1e06fe2:    2f     < 47 : 0x2F >
 1e06fe3:    34     < 52 : 0x34 >
 1e06fe4:    1d     < 29 : 0x1D >
 1e06fe5:    1d     < 29 : 0x1D >
 1e06fe6:    1d     < 29 : 0x1D >
 1e06fe7:    75     < 117 : 0x75 >
 1e06fe8:    30 02             	r0 = [sp+12]			  ## btstack_main.c:913:13
 1e06fea:    16 8a             	r6 += -95
 1e06fec:    f0 e1 13 d0       	ifs (r0 <= 31) goto 38 <.GJTIE60_1_1_+0x14 : 1e07016 >
 1e06ff0:    6a 18             	goto 212 <.GJTIE60_1_1_+0xC4 : 1e070c6 >
 1e06ff2:    50 fc e8 ff       	r0 = r5 + -24
 1e06ff6:    40 e0 0e 80       	if (r0 > 4) goto 28 <.GJTIE60_1_1_+0x14 : 1e07016 >
 1e06ffa:    a0 00             	tbb [r0]


.GJTIS60_1_1_:
 1e06ffc:    03     < 3 : 0x3 >
 1e06ffd:    2d     < 45 : 0x2D >
 1e06ffe:    52     < 82 : 0x52 >
 1e06fff:    0d     < 13 : 0xD >
 1e07000:    5f     < 95 : 0x5F >
 1e07001:    00     < 0 : 0x0 >
 1e07002:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:899:13
 1e07006:    82 f5 10 00       	r2 = h[sp+16] (u)			  ## btstack_main.c:899:13
 1e0700a:    31 02             	r1 = [sp+12]			  ## btstack_main.c:899:43
 1e0700c:    c0 ff f0 ff 00 00 	r0 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## btstack_main.c:899:13
 1e07012:    40 17             	call -384 <att_send_init : 1e06e94 >			  ## btstack_main.c:899:13
 1e07014:    58 18             	goto 176 <.GJTIE60_1_1_+0xC4 : 1e070c6 >			  ## btstack_main.c:899:13
 1e07016:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:928:9
 1e07018:    8a c0             	r2 = r1 << 2			  ## btstack_main.c:928:63
 1e0701a:    81 a0             	r1 = sp + 8			  ## btstack_main.c:928:63
 1e0701c:    80 f3 f9 2b       	call 22514 <cbuf_write : 1e0c812 >			  ## btstack_main.c:928:9
 1e07020:    97 f3 ba fe       	call 3145076 <local_irq_enable : 106d98 >			  ## btstack_main.c:931:5
 1e07024:    06 70             	r6 = 0			  ## btstack_main.c:931:5
 1e07026:    51 18             	goto 162 <.GJTIE60_1_1_+0xC8 : 1e070ca >			  ## btstack_main.c:931:5
 1e07028:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:892:13
 1e0702c:    82 f5 14 00       	r2 = h[sp+20] (u)			  ## btstack_main.c:892:13
 1e07030:    41 02             	r1 = [sp+16]			  ## btstack_main.c:892:44
 1e07032:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:892:13
 1e07036:    2e 17             	call -420 <att_send_init : 1e06e94 >			  ## btstack_main.c:892:13
 1e07038:    46 18             	goto 140 <.GJTIE60_1_1_+0xC4 : 1e070c6 >			  ## btstack_main.c:892:13
 1e0703a:    1b 17             	call -458 <att_get_default_conn_handle : 1e06e72 >			  ## btstack_main.c:878:62
 1e0703c:    01 70             	r1 = 0			  ## btstack_main.c:878:33
 1e0703e:    50 16             	call -864 <user_data_cbuf_is_write_able : 1e06ce0 >			  ## btstack_main.c:878:33
 1e07040:    31 02             	r1 = [sp+12]			  ## btstack_main.c:878:22
 1e07042:    40 18             	goto 128 <.GJTIE60_1_1_+0xC2 : 1e070c4 >			  ## btstack_main.c:878:22
 1e07044:    16 17             	call -468 <att_get_default_conn_handle : 1e06e72 >			  ## btstack_main.c:871:38
 1e07046:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:871:19
 1e0704a:    42 02             	r2 = [sp+16]			  ## btstack_main.c:871:86
 1e0704c:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:871:19
 1e07050:    c6 f5 18 00       	r6 = b[sp+24] (u)			  ## btstack_main.c:871:19
 1e07054:    2e 18             	goto 92 <.GJTIE60_1_1_+0xB0 : 1e070b2 >			  ## btstack_main.c:871:19
 1e07056:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >
 1e0705c:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:634:9
 1e07060:    32 20             	if (r0 == 0) goto 100 <.GJTIE60_1_1_+0xC4 : 1e070c6 >			  ## att_send.c:634:9
 1e07062:    40 02             	r0 = [sp+16]			  ## btstack_main.c:906:42
 1e07064:    09 f5 14 00       	r9 = [sp+20]			  ## btstack_main.c:906:51
 1e07068:    0a f5 0c 00       	r10 = [sp+12]			  ## btstack_main.c:906:33
 1e0706c:    27 90             	r7 = r0 + 2			  ## att_send.c:639:37
 1e0706e:    09 e0 01 10       	if (r9 != 0) goto 2 <.GJTIE60_1_1_+0x72 : 1e07074 >
 1e07072:    07 08             	r7 = r0			  ## att_send.c:638:9
 1e07074:    97 e0 27 c0       	ifs (r7 > 9) goto 78 <.GJTIE60_1_1_+0xC4 : 1e070c6 >
 1e07078:    97 f3 8e fe       	call 3144988 <local_irq_enable : 106d98 >			  ## att_send.c:649:5
 1e0707c:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:651:5
 1e07080:    79 c0             	r1 = r7 << 1			  ## att_send.c:651:5
 1e07082:    01 09             	r1 += r0			  ## att_send.c:651:5
 1e07084:    42 71             	r2 = 20			  ## att_send.c:651:44
 1e07086:    12 f7 c4 10       	h[r1 + 196] = r2			  ## att_send.c:651:44
 1e0708a:    1a f7 b0 10       	h[r1 + 176] = r10			  ## att_send.c:652:43
 1e0708e:    11 70             	r1 = 1			  ## att_send.c:652:43
 1e07090:    c1 0d             	r1 <<= r7			  ## att_send.c:652:43
 1e07092:    00 fc db 00       	r0 = r0 + 219			  ## att_send.c:652:43
 1e07096:    09 e0 30 00       	if (r9 == 0) goto 96 <.GJTIE60_1_1_+0xF8 : 1e070fa >			  ## att_send.c:654:9
 1e0709a:    02 60             	r2 = b[r0 + 0] (u)			  ## att_send.c:655:38
 1e0709c:    51 b4             	r1 |= r2			  ## att_send.c:655:38
 1e0709e:    30 18             	goto 96 <.GJTIE60_1_1_+0xFE : 1e07100 >			  ## att_send.c:655:38
 1e070a0:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:864:19
 1e070a4:    52 02             	r2 = [sp+20]			  ## btstack_main.c:864:64
 1e070a6:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:864:19
 1e070aa:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:864:19
 1e070ae:    c6 f5 1c 00       	r6 = b[sp+28] (u)			  ## btstack_main.c:864:19
 1e070b2:    0e 02             	[sp] = r6
 1e070b4:    55 16             	call -854 <user_data_att_send : 1e06d60 >
 1e070b6:    06 08             	r6 = r0
 1e070b8:    06 18             	goto 12 <.GJTIE60_1_1_+0xC4 : 1e070c6 >
 1e070ba:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:885:33
 1e070be:    01 70             	r1 = 0			  ## btstack_main.c:885:33
 1e070c0:    0f 16             	call -994 <user_data_cbuf_is_write_able : 1e06ce0 >			  ## btstack_main.c:885:33
 1e070c2:    41 02             	r1 = [sp+16]			  ## btstack_main.c:885:22
 1e070c4:    08 42             	[r1 + 0] = r0
 1e070c6:    97 f3 67 fe       	call 3144910 <local_irq_enable : 106d98 >			  ## btstack_main.c:931:5
 1e070ca:    36 17             	call -404 <stack_run_loop_resume : 1e06f38 >			  ## btstack_main.c:935:5
 1e070cc:    e5 e0 6d 1f       	if (r5 != 14) goto -294 <ble_user_cmd_prepare+0x46 : 1e06faa >			  ## btstack_main.c:935:5
 1e070d0:    30 02             	r0 = [sp+12]			  ## btstack_main.c:939:24
 1e070d2:    01 f9 b4 40       	r1 = b[r4 + 180] (u)			  ## btstack_main.c:784:43
 1e070d6:    69 23             	if (r1 == 0) goto -302 <ble_user_cmd_prepare+0x46 : 1e06faa >			  ## btstack_main.c:784:43
 1e070d8:    20 fd 0f 09       	r0 = r0 & 15			  ## btstack_main.c:788:41
 1e070dc:    00 fd a0 09       	r0 = r0 | 160			  ## btstack_main.c:788:41
 1e070e0:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:788:39
 1e070e4:    29 17             	call -430 <stack_run_loop_resume : 1e06f38 >			  ## btstack_main.c:789:9
 1e070e6:    03 18             	goto 6 <.GJTIE60_1_1_+0xEC : 1e070ee >			  ## btstack_main.c:789:9
 1e070e8:    10 70             	r0 = 1			  ## btstack_main.c:791:13
 1e070ea:    97 f3 65 fe       	call 3144906 <os_time_dly : 106db8 >			  ## btstack_main.c:791:13
 1e070ee:    00 f9 b4 40       	r0 = b[r4 + 180] (u)
 1e070f2:    fa 31             	if (r0 != 0) goto -12 <.GJTIE60_1_1_+0xE6 : 1e070e8 >
 1e070f4:    40 08             	r0 = r4			  ## btstack_main.c:794:9
 1e070f6:    31 17             	call -414 <stack_run_loop_remove : 1e06f5a >			  ## btstack_main.c:794:9
 1e070f8:    58 1f             	goto -336 <ble_user_cmd_prepare+0x46 : 1e06faa >			  ## btstack_main.c:794:9
 1e070fa:    02 60             	r2 = b[r0 + 0] (u)			  ## att_send.c:657:38
 1e070fc:    e3 fd 10 12       	r1 = r2 & ~r1			  ## att_send.c:657:38
 1e07100:    09 60             	b[r0 + 0] = r1
 1e07102:    97 f3 4b fe       	call 3144854 <local_irq_disable : 106d9c >			  ## att_send.c:660:5
 1e07106:    df 1f             	goto -66 <.GJTIE60_1_1_+0xC4 : 1e070c6 >			  ## att_send.c:660:5


att_set_ccc_config:
 1e07108:    74 01             	[--sp] = {rets, r4}			  ## att_send.c:137:0
 1e0710a:    c1 ff c8 1b 00 00 	r1 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:142:5
 1e07110:    01 42             	r1 = [r1 + 0]			  ## att_send.c:142:5
 1e07112:    12 22             	if (r1 == 0) goto 36 <att_set_ccc_config+0x30 : 1e07138 >
 1e07114:    a1 82             	r1 += 42			  ## att_send.c:145:10
 1e07116:    03 70             	r3 = 0
 1e07118:    12 08             	r2 = r1
 1e0711a:    04 54             	r4 = h[r2 + 0] (u)			  ## att_send.c:147:32
 1e0711c:    a4 e0 0d 00       	if (r4 == 10) goto 26 <att_set_ccc_config+0x32 : 1e0713a >			  ## att_send.c:147:32
 1e07120:    13 80             	r3 += 1			  ## att_send.c:146:48
 1e07122:    42 80             	r2 += 4			  ## att_send.c:157:11
 1e07124:    03 e2 f9 bf       	ifs (r3 < 32) goto -14 <att_set_ccc_config+0x12 : 1e0711a >
 1e07128:    07 20             	if (r0 == 0) goto 14 <att_set_ccc_config+0x30 : 1e07138 >
 1e0712a:    02 70             	r2 = 0
 1e0712c:    03 52             	r3 = h[r1 + 0] (u)			  ## att_send.c:165:36
 1e0712e:    0a 26             	if (r3 == 0) goto 20 <att_set_ccc_config+0x3C : 1e07144 >
 1e07130:    12 80             	r2 += 1			  ## att_send.c:164:52
 1e07132:    41 80             	r1 += 4			  ## att_send.c:170:15
 1e07134:    02 e2 fa bf       	ifs (r2 < 32) goto -12 <att_set_ccc_config+0x24 : 1e0712c >
 1e07138:    54 01             	{pc, r4} = [sp++]			  ## att_send.c:173:1
 1e0713a:    02 30             	if (r0 != 0) goto 4 <att_set_ccc_config+0x38 : 1e07140 >
 1e0713c:    00 70             	r0 = 0
 1e0713e:    08 54             	h[r2 + 0] = r0			  ## att_send.c:151:28
 1e07140:    18 54             	h[r2 + 2] = r0
 1e07142:    54 01             	{pc, r4} = [sp++]			  ## att_send.c:173:1
 1e07144:    a2 70             	r2 = 10			  ## att_send.c:166:28
 1e07146:    0a 52             	h[r1 + 0] = r2			  ## att_send.c:166:28
 1e07148:    18 52             	h[r1 + 2] = r0			  ## att_send.c:167:25
 1e0714a:    54 01             	{pc, r4} = [sp++]			  ## att_send.c:173:1


att_get_ccc_config:
 1e0714c:    c0 ff c8 1b 00 00 	r0 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:177:0
 1e07152:    00 40             	r0 = [r0 + 0]			  ## att_send.c:180:9
 1e07154:    0a 20             	if (r0 == 0) goto 20 <att_get_ccc_config+0x1E : 1e0716a >			  ## att_send.c:180:9
 1e07156:    c0 82             	r0 += 44			  ## att_send.c:185:5
 1e07158:    01 70             	r1 = 0			  ## att_send.c:185:5
 1e0715a:    02 f7 fe 0f       	r2 = h[r0 + -2] (u)			  ## att_send.c:186:27
 1e0715e:    a2 e0 06 00       	if (r2 == 10) goto 12 <att_get_ccc_config+0x22 : 1e0716e >			  ## att_send.c:186:27
 1e07162:    11 80             	r1 += 1			  ## att_send.c:185:48
 1e07164:    40 80             	r0 += 4			  ## att_send.c:185:23
 1e07166:    01 e2 f8 bf       	ifs (r1 < 32) goto -16 <att_get_ccc_config+0xE : 1e0715a >			  ## att_send.c:185:23
 1e0716a:    00 70             	r0 = 0
 1e0716c:    20 00             	rts			  ## att_send.c:192:1
 1e0716e:    00 50             	r0 = h[r0 + 0] (u)			  ## att_send.c:187:24
 1e07170:    20 00             	rts			  ## att_send.c:192:1


little_endian_read_16:
 1e07172:    10 09             	r0 += r1			  ## utils.c:69:0
 1e07174:    11 60             	r1 = b[r0 + 1] (u)			  ## utils.c:70:40
 1e07176:    00 60             	r0 = b[r0 + 0] (u)			  ## utils.c:70:12
 1e07178:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## utils.c:70:37
 1e0717c:    20 04             	r0 = r0.l (u)			  ## utils.c:70:5
 1e0717e:    20 00             	rts			  ## utils.c:70:5


btstack_linked_list_iterator_has_next:
 1e07180:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:167:0
 1e07182:    06 22             	if (r1 == 0) goto 12 <btstack_linked_list_iterator_has_next+0x10 : 1e07190 >			  ## btstack_linked_list.c:169:14
 1e07184:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:172:13
 1e07186:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:172:19
 1e07188:    20 40             	r0 = [r0 + 8]			  ## btstack_linked_list.c:172:31
 1e0718a:    01 f2 03 10       	if (r1 != r0) goto 6 <btstack_linked_list_iterator_has_next+0x14 : 1e07194 >
 1e0718e:    01 18             	goto 2 <btstack_linked_list_iterator_has_next+0x12 : 1e07192 >
 1e07190:    81 90             	r1 = r0 + 8			  ## btstack_linked_list.c:170:20
 1e07192:    01 42             	r1 = [r1 + 0]
 1e07194:    10 70             	r0 = 1
 1e07196:    01 32             	if (r1 != 0) goto 2 <btstack_linked_list_iterator_has_next+0x1A : 1e0719a >
 1e07198:    00 70             	r0 = 0
 1e0719a:    20 00             	rts			  ## btstack_linked_list.c:178:1


btstack_linked_list_iterator_next:
 1e0719c:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:181:0
 1e0719e:    09 22             	if (r1 == 0) goto 18 <btstack_linked_list_iterator_next+0x16 : 1e071b2 >			  ## btstack_linked_list.c:182:9
 1e071a0:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:183:17
 1e071a2:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:183:23
 1e071a4:    22 40             	r2 = [r0 + 8]			  ## btstack_linked_list.c:183:35
 1e071a6:    21 f2 02 10       	if (r1 != r2) goto 4 <btstack_linked_list_iterator_next+0x12 : 1e071ae >			  ## btstack_linked_list.c:183:35
 1e071aa:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:184:22
 1e071ac:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:185:34
 1e071ae:    29 40             	[r0 + 8] = r1
 1e071b0:    03 18             	goto 6 <btstack_linked_list_iterator_next+0x1C : 1e071b8 >
 1e071b2:    c0 f4 01 09       	[r0 + 0] = 1			  ## btstack_linked_list.c:191:29
 1e071b6:    21 40             	r1 = [r0 + 8]			  ## btstack_linked_list.c:191:29
 1e071b8:    10 08             	r0 = r1			  ## btstack_linked_list.c:193:5
 1e071ba:    20 00             	rts			  ## btstack_linked_list.c:193:5


le_hci_connection_for_handle:
 1e071bc:    34 00             	[--sp] = rets			  ## hci_vendor.c:1943:0
 1e071be:    fa 0b             	sp += -12			  ## hci_vendor.c:1943:0
 1e071c0:    03 08             	r3 = r0			  ## hci_vendor.c:1943:0
 1e071c2:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:162:14
 1e071c8:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e071ca:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e071cc:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e071ce:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e071d0:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e071d2:    00 a0             	r0 = sp + 0
 1e071d4:    d5 17             	call -86 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## hci_vendor.c:1947:16
 1e071d6:    06 20             	if (r0 == 0) goto 12 <le_hci_connection_for_handle+0x28 : 1e071e4 >
 1e071d8:    00 a0             	r0 = sp + 0
 1e071da:    e0 17             	call -64 <btstack_linked_list_iterator_next : 1e0719c >			  ## hci_vendor.c:1948:65
 1e071dc:    51 50             	r1 = h[r0 + 10] (u)			  ## hci_vendor.c:1949:23
 1e071de:    31 f2 f8 1f       	if (r1 != r3) goto -16 <le_hci_connection_for_handle+0x16 : 1e071d2 >			  ## hci_vendor.c:1949:23
 1e071e2:    01 18             	goto 2 <le_hci_connection_for_handle+0x2A : 1e071e6 >			  ## hci_vendor.c:1949:23
 1e071e4:    00 70             	r0 = 0
 1e071e6:    06 0a             	sp += 12
 1e071e8:    30 00             	pc = [sp++]			  ## hci_vendor.c:1956:1


check_le_conn_disconnet_flag:
 1e071ea:    34 00             	[--sp] = rets			  ## att_send.c:446:0
 1e071ec:    c0 ff c8 1b 00 00 	r0 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:447:10
 1e071f2:    01 40             	r1 = [r0 + 0]			  ## att_send.c:447:10
 1e071f4:    10 70             	r0 = 1			  ## att_send.c:447:10
 1e071f6:    10 22             	if (r1 == 0) goto 32 <check_le_conn_disconnet_flag+0x2E : 1e07218 >			  ## att_send.c:447:10
 1e071f8:    12 fc b0 00       	r2 = r1 + 176			  ## att_send.c:120:13
 1e071fc:    03 70             	r3 = 0			  ## att_send.c:120:13
 1e071fe:    81 f7 02 20       	r1 = h[r2 ++= 2] (u)			  ## att_send.c:120:13
 1e07202:    04 32             	if (r1 != 0) goto 8 <check_le_conn_disconnet_flag+0x22 : 1e0720c >			  ## att_send.c:120:13
 1e07204:    13 80             	r3 += 1			  ## att_send.c:119:35
 1e07206:    93 e0 fa df       	ifs (r3 <= 9) goto -12 <check_le_conn_disconnet_flag+0x14 : 1e071fe >
 1e0720a:    30 00             	pc = [sp++]			  ## att_send.c:462:1
 1e0720c:    10 08             	r0 = r1			  ## hci_vendor.c:1212:39
 1e0720e:    d6 17             	call -84 <le_hci_connection_for_handle : 1e071bc >			  ## hci_vendor.c:1212:39
 1e07210:    01 08             	r1 = r0			  ## hci_vendor.c:1212:39
 1e07212:    10 70             	r0 = 1			  ## att_send.c:457:11
 1e07214:    01 22             	if (r1 == 0) goto 2 <check_le_conn_disconnet_flag+0x2E : 1e07218 >			  ## att_send.c:457:11
 1e07216:    00 70             	r0 = 0
 1e07218:    30 00             	pc = [sp++]			  ## att_send.c:462:1


__set_user_ctrl_conn_num:
 1e0721a:    74 01             	[--sp] = {rets, r4}			  ## user_interface.c:240:0
 1e0721c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:241:44
 1e07222:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:241:44
 1e07224:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:241:44
 1e07226:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:241:44
 1e07228:    14 61             	r4 = b[r0 + 17] (u)			  ## user_interface.c:241:44
 1e0722a:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:241:44
 1e0722e:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## user_interface.c:241:44
 1e07232:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## user_interface.c:241:44
 1e07236:    31 fd 30 49       	r1 = r4 & 4294967247			  ## user_interface.c:241:44
 1e0723a:    0a d6             	r2 = r1 >> 24			  ## user_interface.c:241:44
 1e0723c:    4a 61             	b[r0 + 20] = r2			  ## user_interface.c:241:44
 1e0723e:    0a d4             	r2 = r1 >> 16			  ## user_interface.c:241:44
 1e07240:    3a 61             	b[r0 + 19] = r2			  ## user_interface.c:241:44
 1e07242:    0a d2             	r2 = r1 >> 8			  ## user_interface.c:241:44
 1e07244:    2a 61             	b[r0 + 18] = r2			  ## user_interface.c:241:44
 1e07246:    11 b2             	r1 |= 16			  ## user_interface.c:241:44
 1e07248:    19 61             	b[r0 + 17] = r1			  ## user_interface.c:241:44
 1e0724a:    54 01             	{pc, r4} = [sp++]			  ## user_interface.c:242:1


__set_support_msbc_flag:
 1e0724c:    74 01             	[--sp] = {rets, r4}			  ## user_interface.c:121:0
 1e0724e:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:122:38
 1e07254:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:122:38
 1e07256:    12 61             	r2 = b[r0 + 17] (u)			  ## user_interface.c:122:38
 1e07258:    33 61             	r3 = b[r0 + 19] (u)			  ## user_interface.c:122:38
 1e0725a:    24 61             	r4 = b[r0 + 18] (u)			  ## user_interface.c:122:38
 1e0725c:    49 61             	b[r0 + 20] = r1			  ## user_interface.c:122:38
 1e0725e:    1a 61             	b[r0 + 17] = r2			  ## user_interface.c:122:38
 1e07260:    c8 fd 40 31       	r3 <= insert(r1, p:8, l:8)			  ## user_interface.c:122:38
 1e07264:    c8 fd 40 24       	r2 <= insert(r4, p:8, l:8)			  ## user_interface.c:122:38
 1e07268:    d0 fd 80 23       	r2 <= insert(r3, p:16, l:16)			  ## user_interface.c:122:38
 1e0726c:    11 d4             	r1 = r2 >> 16			  ## user_interface.c:122:38
 1e0726e:    39 61             	b[r0 + 19] = r1			  ## user_interface.c:122:38
 1e07270:    01 fd 04 2a       	r1 = r2 | 1024			  ## user_interface.c:122:38
 1e07274:    09 d2             	r1 = r1 >> 8			  ## user_interface.c:122:38
 1e07276:    29 61             	b[r0 + 18] = r1			  ## user_interface.c:122:38
 1e07278:    54 01             	{pc, r4} = [sp++]			  ## user_interface.c:123:1


__bt_set_update_battery_time:
 1e0727a:    74 01             	[--sp] = {rets, r4}			  ## user_interface.c:245:0
 1e0727c:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:245:0
 1e07282:    01 70             	r1 = 0			  ## user_interface.c:246:48
 1e07284:    e9 60             	b[r0 + 14] = r1			  ## user_interface.c:246:48
 1e07286:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:246:48
 1e07288:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:246:48
 1e0728a:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:246:48
 1e0728c:    14 61             	r4 = b[r0 + 17] (u)			  ## user_interface.c:246:48
 1e0728e:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:246:48
 1e07292:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## user_interface.c:246:48
 1e07296:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## user_interface.c:246:48
 1e0729a:    31 fd 10 4a       	r1 = r4 & 4294963199			  ## user_interface.c:246:48
 1e0729e:    19 61             	b[r0 + 17] = r1			  ## user_interface.c:246:48
 1e072a0:    0a d6             	r2 = r1 >> 24			  ## user_interface.c:246:48
 1e072a2:    4a 61             	b[r0 + 20] = r2			  ## user_interface.c:246:48
 1e072a4:    0a d4             	r2 = r1 >> 16			  ## user_interface.c:246:48
 1e072a6:    3a 61             	b[r0 + 19] = r2			  ## user_interface.c:246:48
 1e072a8:    09 d2             	r1 = r1 >> 8			  ## user_interface.c:246:48
 1e072aa:    29 61             	b[r0 + 18] = r1			  ## user_interface.c:246:48
 1e072ac:    54 01             	{pc, r4} = [sp++]			  ## user_interface.c:252:1


__set_page_timeout_value:
 1e072ae:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:151:0
 1e072b4:    01 fb 40 1f       	r1 = 8000 <att_ram_buffer+0x1FC : 1f40 >			  ## user_interface.c:152:38
 1e072b8:    29 50             	h[r0 + 4] = r1			  ## user_interface.c:152:38
 1e072ba:    20 00             	rts			  ## user_interface.c:153:1


__set_super_timeout_value:
 1e072bc:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:146:0
 1e072c2:    01 fb 40 1f       	r1 = 8000 <att_ram_buffer+0x1FC : 1f40 >			  ## user_interface.c:147:39
 1e072c6:    39 50             	h[r0 + 6] = r1			  ## user_interface.c:147:39
 1e072c8:    20 00             	rts			  ## user_interface.c:148:1


__set_simple_pair_param:
 1e072ca:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:267:0
 1e072d0:    31 72             	r1 = 35			  ## user_interface.c:270:53
 1e072d2:    49 61             	b[r0 + 20] = r1			  ## user_interface.c:270:53
 1e072d4:    20 00             	rts			  ## user_interface.c:271:1


cal_crc16_private:
 1e072d6:    76 01             	[--sp] = {rets, r6-r4}			  ## btstack_main.c:492:0
 1e072d8:    19 22             	if (r1 == 0) goto 50 <cal_crc16_private+0x36 : 1e0730c >			  ## btstack_main.c:492:0
 1e072da:    c3 ff c0 6c e0 01 	r3 = 31485120 <crc_ta : 1e06cc0 >			  ## btstack_main.c:492:0
 1e072e0:    84 f9 01 00       	r4 = b[r0 ++= 1] (u)			  ## btstack_main.c:499:40
 1e072e4:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:497:14
 1e072e8:    26 d1             	r6 = r4 >> 4			  ## btstack_main.c:499:45
 1e072ea:    d5 bc             	r5 ^= r6			  ## btstack_main.c:499:37
 1e072ec:    45 f8 00 35       	r5 = h[r3+r5<<1] (u)			  ## btstack_main.c:499:27
 1e072f0:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:498:24
 1e072f2:    d2 ba             	r2 ^= r5			  ## btstack_main.c:499:24
 1e072f4:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:500:14
 1e072f8:    24 fd 0f 49       	r4 = r4 & 15			  ## btstack_main.c:502:45
 1e072fc:    d4 ba             	r4 ^= r5			  ## btstack_main.c:502:37
 1e072fe:    44 f8 00 34       	r4 = h[r3+r4<<1] (u)			  ## btstack_main.c:502:27
 1e07302:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:501:24
 1e07304:    f1 8f             	r1 += -1			  ## btstack_main.c:504:12
 1e07306:    65 04             	r5 = r1.l (u)			  ## btstack_main.c:496:5
 1e07308:    d2 b8             	r2 ^= r4			  ## btstack_main.c:502:24
 1e0730a:    ea 3b             	if (r5 != 0) goto -44 <cal_crc16_private+0xA : 1e072e0 >
 1e0730c:    a0 04             	r0 = r2.l (u)			  ## btstack_main.c:506:5
 1e0730e:    56 01             	{pc, r6-r4} = [sp++]			  ## btstack_main.c:506:5


lib_make_ble_address:
 1e07310:    75 01             	[--sp] = {rets, r5, r4}			  ## btstack_main.c:510:0
 1e07312:    fe 0b             	sp += -4			  ## btstack_main.c:510:0
 1e07314:    04 08             	r4 = r0			  ## btstack_main.c:510:0
 1e07316:    30 98             	r0 = r4 + 3			  ## btstack_main.c:512:13
 1e07318:    c5 ff c0 08 00 00 	r5 = 2240 <CURRENT_TTMER_DOWN_SECONDS : 8c0 >			  ## btstack_main.c:515:15
 1e0731e:    51 fc 70 00       	r1 = r5 + 112			  ## btstack_main.c:515:15
 1e07322:    32 70             	r2 = 3			  ## btstack_main.c:512:5
 1e07324:    97 f3 de fd       	call 3144636 <memcpy : 106ee4 >			  ## btstack_main.c:512:5
 1e07328:    50 fc 6d 00       	r0 = r5 + 109			  ## btstack_main.c:512:5
 1e0732c:    61 70             	r1 = 6			  ## btstack_main.c:513:15
 1e0732e:    02 70             	r2 = 0			  ## btstack_main.c:513:15
 1e07330:    d2 17             	call -92 <cal_crc16_private : 1e072d6 >			  ## btstack_main.c:513:15
 1e07332:    02 08             	r2 = r0			  ## btstack_main.c:513:15
 1e07334:    0a 02             	[sp] = r2			  ## btstack_main.c:513:13
 1e07336:    10 d2             	r0 = r2 >> 8			  ## btstack_main.c:514:5
 1e07338:    18 68             	b[r4 + 1] = r0			  ## btstack_main.c:514:5
 1e0733a:    0a 68             	b[r4 + 0] = r2			  ## btstack_main.c:514:5
 1e0733c:    05 f9 6f 50       	r5 = b[r5 + 111] (u)			  ## btstack_main.c:515:15
 1e07340:    00 a0             	r0 = sp + 0			  ## btstack_main.c:515:15
 1e07342:    21 70             	r1 = 2			  ## btstack_main.c:515:32
 1e07344:    c8 17             	call -112 <cal_crc16_private : 1e072d6 >			  ## btstack_main.c:515:32
 1e07346:    50 09             	r0 += r5			  ## btstack_main.c:515:30
 1e07348:    28 68             	b[r4 + 2] = r0			  ## btstack_main.c:516:20
 1e0734a:    02 0a             	sp += 4			  ## btstack_main.c:516:20
 1e0734c:    55 01             	{pc, r5, r4} = [sp++]			  ## btstack_main.c:517:1


__change_hci_class_type:
 1e0734e:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:141:0
 1e07354:    c0 f4 00 09       	[r0 + 0] = 0			  ## user_interface.c:142:39
 1e07358:    20 00             	rts			  ## user_interface.c:143:1


btstack_init:
 1e0735a:    34 00             	[--sp] = rets			  ## btstack_task.c:199:0
 1e0735c:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:199:0
 1e07362:    11 70             	r1 = 1			  ## btstack_task.c:199:0
 1e07364:    09 60             	b[r0 + 0] = r1			  ## btstack_task.c:199:0
 1e07366:    80 f3 93 52       	call 42278 <btctrler_task_init : 1e11890 >			  ## btstack_task.c:210:5
 1e0736a:    03 18             	goto 6 <btstack_init+0x18 : 1e07372 >			  ## btstack_task.c:210:5
 1e0736c:    20 70             	r0 = 2			  ## btstack_task.c:220:9
 1e0736e:    97 f3 23 fd       	call 3144262 <os_time_dly : 106db8 >			  ## btstack_task.c:220:9
 1e07372:    80 f3 9d 52       	call 42298 <btctrler_task_ready : 1e118b0 >
 1e07376:    fa 21             	if (r0 == 0) goto -12 <btstack_init+0x12 : 1e0736c >
 1e07378:    c0 ff 28 8f e0 01 	r0 = 31493928 <btstack_task : 1e08f28 >			  ## btstack_task.c:222:12
 1e0737e:    c2 ff 85 f1 e0 01 	r2 = 31519109 <bluetooth_base_uuid+0x17B : 1e0f185 >			  ## btstack_task.c:222:12
 1e07384:    01 70             	r1 = 0			  ## btstack_task.c:222:12
 1e07386:    88 01             	{rets} = [sp++]			  ## btstack_task.c:222:12
 1e07388:    c0 f3 90 2c       	goto 22816 <task_create : 1e0ccac >			  ## btstack_task.c:222:12


set_remote_test_flag:
 1e0738c:    75 01             	[--sp] = {rets, r5, r4}			  ## user_interface.c:216:0
 1e0738e:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:216:0
 1e07394:    43 63             	r3 = b[r1 + 20] (u)			  ## user_interface.c:216:0
 1e07396:    34 63             	r4 = b[r1 + 19] (u)			  ## user_interface.c:216:0
 1e07398:    25 63             	r5 = b[r1 + 18] (u)			  ## user_interface.c:216:0
 1e0739a:    12 63             	r2 = b[r1 + 17] (u)			  ## user_interface.c:216:0
 1e0739c:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## user_interface.c:216:0
 1e073a0:    c8 fd 40 25       	r2 <= insert(r5, p:8, l:8)			  ## user_interface.c:216:0
 1e073a4:    d0 fd 80 24       	r2 <= insert(r4, p:16, l:16)			  ## user_interface.c:216:0
 1e073a8:    07 20             	if (r0 == 0) goto 14 <set_remote_test_flag+0x2C : 1e073b8 >			  ## user_interface.c:216:0
 1e073aa:    23 fd 01 09       	r3 = r0 & 1			  ## user_interface.c:221:50
 1e073ae:    30 fd 02 2b       	r0 = r2 & 4294836223			  ## user_interface.c:221:50
 1e073b2:    c1 fd 88 03       	r0 <= insert(r3, p:17, l:1)			  ## user_interface.c:221:50
 1e073b6:    02 18             	goto 4 <set_remote_test_flag+0x30 : 1e073bc >			  ## user_interface.c:221:50
 1e073b8:    30 fd 02 2b       	r0 = r2 & 4294836223			  ## user_interface.c:219:50
 1e073bc:    18 63             	b[r1 + 17] = r0
 1e073be:    02 d6             	r2 = r0 >> 24
 1e073c0:    4a 63             	b[r1 + 20] = r2
 1e073c2:    02 d4             	r2 = r0 >> 16
 1e073c4:    3a 63             	b[r1 + 19] = r2
 1e073c6:    00 d2             	r0 = r0 >> 8
 1e073c8:    28 63             	b[r1 + 18] = r0
 1e073ca:    55 01             	{pc, r5, r4} = [sp++]			  ## user_interface.c:223:1


get_remote_test_flag:
 1e073cc:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## user_interface.c:208:0
 1e073d2:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:209:29
 1e073d4:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:209:29
 1e073d6:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:209:29
 1e073d8:    10 61             	r0 = b[r0 + 17] (u)			  ## user_interface.c:209:29
 1e073da:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:209:29
 1e073de:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## user_interface.c:209:29
 1e073e2:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## user_interface.c:209:29
 1e073e6:    81 fd 88 00       	r0 = uextra(r0, p:17, l:1)			  ## user_interface.c:214:1
 1e073ea:    20 00             	rts			  ## user_interface.c:214:1


btstack_lowpower_idle_query:
 1e073ec:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:274:0
 1e073f2:    00 60             	r0 = b[r0 + 0] (u)			  ## btstack_task.c:274:0
 1e073f4:    11 70             	r1 = 1			  ## btstack_task.c:274:0
 1e073f6:    e3 fd 00 01       	r0 = r1 & ~r0			  ## btstack_task.c:275:5
 1e073fa:    20 00             	rts			  ## btstack_task.c:275:5


btstack_linked_list_add_tail:
 1e073fc:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:97:0
 1e073fe:    04 24             	if (r2 == 0) goto 8 <btstack_linked_list_add_tail+0xC : 1e07408 >			  ## btstack_linked_list.c:100:5
 1e07400:    20 08             	r0 = r2
 1e07402:    12 f2 fb 1f       	if (r2 != r1) goto -10 <btstack_linked_list_add_tail : 1e073fc >
 1e07406:    20 00             	rts			  ## btstack_linked_list.c:107:1
 1e07408:    c0 f4 00 19       	[r1 + 0] = 0			  ## btstack_linked_list.c:105:16
 1e0740c:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:106:14
 1e0740e:    20 00             	rts			  ## btstack_linked_list.c:107:1


hci_add_event_handler:
 1e07410:    01 08             	r1 = r0			  ## hci_vendor.c:1895:0
 1e07412:    c0 ff 64 18 00 00 	r0 = 6244 <report_irq_stack_end+0x4 : 1864 >			  ## hci_vendor.c:1896:5
 1e07418:    f1 1f             	goto -30 <btstack_linked_list_add_tail : 1e073fc >			  ## hci_vendor.c:1896:5


l2cap_register_fixed_channel:
 1e0741a:    c0 ff a8 1a 00 00 	r0 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:2117:0
 1e07420:    c1 ff 72 a4 e0 01 	r1 = 31499378 <att_packet_handler : 1e0a472 >			  ## l2cap.c:2122:42
 1e07426:    09 40             	[r0 + 0] = r1			  ## l2cap.c:2122:42
 1e07428:    20 00             	rts			  ## l2cap.c:2123:1


hci_event_callback_set:
 1e0742a:    c1 ff 8c 1a 00 00 	r1 = 6796 <hci_event_callback_registration : 1a8c >			  ## hci_vendor.c:1865:0
 1e07430:    c0 ff f4 0d e0 01 	r0 = 31460852 <cbk_packet_handler : 1e00df4 >			  ## hci_vendor.c:1866:46
 1e07436:    18 42             	[r1 + 4] = r0			  ## hci_vendor.c:1866:46
 1e07438:    c0 ff 64 18 00 00 	r0 = 6244 <report_irq_stack_end+0x4 : 1864 >			  ## hci_vendor.c:1866:46
 1e0743e:    de 1f             	goto -68 <btstack_linked_list_add_tail : 1e073fc >			  ## hci_vendor.c:1896:5


le_l2cap_register_packet_handler:
 1e07440:    c0 ff 9c 1a 00 00 	r0 = 6812 <le_l2cap_event_packet_handler : 1a9c >			  ## l2cap.c:177:0
 1e07446:    c1 ff f4 0d e0 01 	r1 = 31460852 <cbk_packet_handler : 1e00df4 >			  ## l2cap.c:177:0
 1e0744c:    09 40             	[r0 + 0] = r1			  ## l2cap.c:177:0
 1e0744e:    20 00             	rts			  ## l2cap.c:185:1


ble_vendor_set_default_att_mtu:
 1e07450:    c0 ff 88 09 00 00 	r0 = 2440 <le_att_mtu_size : 988 >			  ## l2cap.c:185:1
 1e07456:    11 70             	r1 = 1			  ## l2cap.c:185:1
 1e07458:    09 60             	b[r0 + 0] = r1			  ## l2cap.c:185:1
 1e0745a:    20 00             	rts			  ## l2cap.c:185:1


btstack_task_init:
 1e0745c:    77 01             	[--sp] = {rets, r7-r4}			  ## btstack_task.c:72:0
 1e0745e:    c4 ff 60 18 00 00 	r4 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1541:75
 1e07464:    01 70             	r1 = 0			  ## hci_vendor.c:1526:5
 1e07466:    02 fb 2c 02       	r2 = 556 <BTCTLER_CONTROLLER_BSS_SIZE+0x6C : 22c >			  ## hci_vendor.c:1526:5
 1e0746a:    05 70             	r5 = 0			  ## hci_vendor.c:1526:5
 1e0746c:    40 08             	r0 = r4			  ## hci_vendor.c:1526:5
 1e0746e:    97 f3 3f fd       	call 3144318 <memset : 106ef0 >			  ## hci_vendor.c:1526:5
 1e07472:    80 f3 70 76       	call 60640 <ll_hci_set_event_mask : 1e16156 >			  ## hci_vendor.c:1530:5
 1e07476:    c0 ff 10 0e 00 00 	r0 = 3600 <hci_param : e10 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e0747c:    01 fb ff 3f       	r1 = 16383 <low_power_system_down+0x193 : 3fff >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e07480:    39 50             	h[r0 + 6] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e07482:    41 fb c0 1a       	r1 = r1 + 49152			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e07486:    29 50             	h[r0 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e07488:    19 50             	h[r0 + 2] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e0748a:    09 50             	h[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/btctrler/Controller/common/hci_device_manager.c:28:5
 1e0748c:    80 f3 6f 76       	call 60638 <ll_hci_get_acl_data_len : 1e1616e >			  ## hci_vendor.c:1533:47
 1e07490:    41 fc 1a 02       	r1 = r4 + 538			  ## hci_vendor.c:1533:47
 1e07494:    18 52             	h[r1 + 2] = r0			  ## hci_vendor.c:1533:45
 1e07496:    80 f3 70 76       	call 60640 <ll_hci_get_acl_total_num : 1e1617a >			  ## hci_vendor.c:1534:47
 1e0749a:    08 62             	b[r1 + 0] = r0			  ## hci_vendor.c:1534:45
 1e0749c:    60 70             	r0 = 6			  ## hci_vendor.c:1534:45
 1e0749e:    28 52             	h[r1 + 4] = r0			  ## hci_vendor.c:1536:69
 1e074a0:    00 fb 80 0c       	r0 = 3200 <BTCTLER_RAM_TOTAL+0x94 : c80 >			  ## hci_vendor.c:1537:69
 1e074a4:    38 52             	h[r1 + 6] = r0			  ## hci_vendor.c:1537:69
 1e074a6:    4d 52             	h[r1 + 8] = r5			  ## hci_vendor.c:1538:68
 1e074a8:    02 fb f4 01       	r2 = 500 <BTCTLER_CONTROLLER_BSS_SIZE+0x34 : 1f4 >			  ## hci_vendor.c:1539:68
 1e074ac:    5a 52             	h[r1 + 10] = r2			  ## hci_vendor.c:1539:68
 1e074ae:    a2 70             	r2 = 10			  ## hci_vendor.c:1540:75
 1e074b0:    6a 52             	h[r1 + 12] = r2			  ## hci_vendor.c:1540:75
 1e074b2:    78 52             	h[r1 + 14] = r0			  ## hci_vendor.c:1541:75
 1e074b4:    c4 ff 04 1c 00 00 	r4 = 7172 <btstack_stack : 1c04 >			  ## hci_vendor.c:1541:75
 1e074ba:    c0 ff cc 1b 00 00 	r0 = 7116 <profile_l2cap_hdl : 1bcc >			  ## btstack_main.c:155:34
 1e074c0:    28 48             	[r4 + 8] = r0			  ## btstack_main.c:155:34
 1e074c2:    c0 ff 18 1c 00 00 	r0 = 7192 <profile_le_pool_hdl : 1c18 >			  ## btstack_main.c:175:9
 1e074c8:    18 48             	[r4 + 4] = r0			  ## btstack_main.c:172:38
 1e074ca:    3d 40             	[r0 + 12] = r5			  ## btstack_main.c:175:9
 1e074cc:    2d 40             	[r0 + 8] = r5			  ## btstack_main.c:175:9
 1e074ce:    1d 40             	[r0 + 4] = r5			  ## btstack_main.c:175:9
 1e074d0:    0d 40             	[r0 + 0] = r5			  ## btstack_main.c:175:9
 1e074d2:    c6 ff 94 1a 00 00 	r6 = 6804 <le_stack_pool : 1a94 >			  ## btstack_main.c:175:9
 1e074d8:    08 4c             	[r6 + 0] = r0			  ## btstack_memory.c:399:19
 1e074da:    00 fb c8 04       	r0 = 1224 <BTCTLER_CONTROLLER_DATA_SIZE+0xC : 4c8 >			  ## btstack_memory.c:404:45
 1e074de:    80 f3 5f 22       	call 17598 <malloc : 1e0b9a0 >			  ## btstack_memory.c:404:45
 1e074e2:    03 08             	r3 = r0			  ## btstack_memory.c:404:45
 1e074e4:    02 36             	if (r3 != 0) goto 4 <btstack_task_init+0x8E : 1e074ea >			  ## btstack_memory.c:404:45
 1e074e6:    8f f3 96 df       	call 2080556 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e074ea:    07 4c             	r7 = [r6 + 0]			  ## btstack_memory.c:406:9
 1e074ec:    2b 4e             	[r7 + 8] = r3			  ## btstack_memory.c:406:53
 1e074ee:    01 70             	r1 = 0			  ## btstack_memory.c:407:9
 1e074f0:    02 fb c8 04       	r2 = 1224 <BTCTLER_CONTROLLER_DATA_SIZE+0xC : 4c8 >			  ## btstack_memory.c:407:9
 1e074f4:    30 08             	r0 = r3			  ## btstack_memory.c:407:9
 1e074f6:    97 f3 fb fc       	call 3144182 <memset : 106ef0 >			  ## btstack_memory.c:407:9
 1e074fa:    20 4e             	r0 = [r7 + 8]			  ## btstack_memory.c:409:68
 1e074fc:    0d 40             	[r0 + 0] = r5			  ## btstack_memory.c:45:25
 1e074fe:    08 4e             	[r7 + 0] = r0			  ## btstack_memory.c:46:25
 1e07500:    00 78             	r0 = 128			  ## btstack_memory.c:415:43
 1e07502:    80 f3 4d 22       	call 17562 <malloc : 1e0b9a0 >			  ## btstack_memory.c:415:43
 1e07506:    03 08             	r3 = r0			  ## btstack_memory.c:415:43
 1e07508:    02 36             	if (r3 != 0) goto 4 <btstack_task_init+0xB2 : 1e0750e >			  ## btstack_memory.c:415:43
 1e0750a:    8f f3 84 df       	call 2080520 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0750e:    06 4c             	r6 = [r6 + 0]			  ## btstack_memory.c:417:9
 1e07510:    3b 4c             	[r6 + 12] = r3			  ## btstack_memory.c:417:47
 1e07512:    01 70             	r1 = 0			  ## btstack_memory.c:418:9
 1e07514:    02 78             	r2 = 128			  ## btstack_memory.c:418:9
 1e07516:    30 08             	r0 = r3			  ## btstack_memory.c:418:9
 1e07518:    97 f3 ea fc       	call 3144148 <memset : 106ef0 >			  ## btstack_memory.c:418:9
 1e0751c:    30 4c             	r0 = [r6 + 12]			  ## btstack_memory.c:420:62
 1e0751e:    0d 40             	[r0 + 0] = r5			  ## btstack_memory.c:45:25
 1e07520:    18 4c             	[r6 + 4] = r0			  ## btstack_memory.c:46:25
 1e07522:    24 48             	r4 = [r4 + 8]			  ## btstack_main.c:181:26
 1e07524:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:181:26
 1e07526:    01 70             	r1 = 0			  ## btstack_main.c:181:5
 1e07528:    c2 72             	r2 = 44			  ## btstack_main.c:181:5
 1e0752a:    97 f3 e1 fc       	call 3144130 <memset : 106ef0 >			  ## btstack_main.c:181:5
 1e0752e:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:139:17
 1e07534:    0c 40             	[r0 + 0] = r4			  ## l2cap.c:139:17
 1e07536:    f0 7f             	r0 = 255			  ## l2cap.c:141:52
 1e07538:    10 f9 34 40       	b[r4 + 52] = r0			  ## l2cap.c:141:52
 1e0753c:    00 74             	r0 = 64			  ## l2cap.c:142:52
 1e0753e:    b8 59             	h[r4 + 54] = r0			  ## l2cap.c:142:52
 1e07540:    9d 48             	[r4 + 36] = r5			  ## l2cap.c:144:63
 1e07542:    2d 48             	[r4 + 8] = r5			  ## l2cap.c:146:33
 1e07544:    1d 48             	[r4 + 4] = r5			  ## l2cap.c:147:33
 1e07546:    c0 ff 5a 99 e0 01 	r0 = 31496538 <packet_handler : 1e0995a >			  ## l2cap.c:149:33
 1e0754c:    08 48             	[r4 + 0] = r0			  ## l2cap.c:149:33
 1e0754e:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:150:53
 1e07550:    c0 ff 9c 1a 00 00 	r0 = 6812 <le_l2cap_event_packet_handler : 1a9c >			  ## l2cap.c:152:35
 1e07556:    0d 40             	[r0 + 0] = r5			  ## l2cap.c:152:35
 1e07558:    c0 ff a0 1a 00 00 	r0 = 6816 <hci_event_callback_registration.1439 : 1aa0 >			  ## l2cap.c:152:35
 1e0755e:    c1 ff a4 97 e0 01 	r1 = 31496100 <l2cap_hci_event_handler : 1e097a4 >			  ## l2cap.c:161:50
 1e07564:    19 40             	[r0 + 4] = r1			  ## l2cap.c:161:50
 1e07566:    54 17             	call -344 <hci_add_event_handler : 1e07410 >			  ## l2cap.c:162:9
 1e07568:    c4 ff 28 1c 00 00 	r4 = 7208 <btstack_global_info : 1c28 >			  ## btstack_main.c:1022:39
 1e0756e:    01 70             	r1 = 0			  ## btstack_main.c:1019:9
 1e07570:    82 7b             	r2 = 184			  ## btstack_main.c:1019:9
 1e07572:    40 08             	r0 = r4			  ## btstack_main.c:1019:9
 1e07574:    97 f3 bc fc       	call 3144056 <memset : 106ef0 >			  ## btstack_main.c:1019:9
 1e07578:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:1019:9
 1e0757a:    41 fc 30 00       	r1 = r4 + 48			  ## btstack_main.c:1020:9
 1e0757e:    02 78             	r2 = 128			  ## btstack_main.c:1020:9
 1e07580:    80 f3 3b 29       	call 21110 <cbuf_init : 1e0c7fa >			  ## btstack_main.c:1020:9
 1e07584:    c0 ff c0 9d e0 01 	r0 = 31497664 <__ble_thread_loop_handler : 1e09dc0 >			  ## run_loop.c:20:15
 1e0758a:    18 48             	[r4 + 4] = r0			  ## run_loop.c:20:15
 1e0758c:    2d 48             	[r4 + 8] = r5			  ## run_loop.c:21:15
 1e0758e:    c0 ff 84 09 00 00 	r0 = 2436 <stack_run_loop_head : 984 >			  ## run_loop.c:22:5
 1e07594:    41 08             	r1 = r4			  ## run_loop.c:22:5
 1e07596:    32 17             	call -412 <btstack_linked_list_add_tail : 1e073fc >			  ## run_loop.c:22:5
 1e07598:    10 70             	r0 = 1			  ## btstack_main.c:1022:39
 1e0759a:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:1022:39
 1e0759e:    80 f3 a8 16       	call 11600 <att_global_info_init : 1e0a2f2 >			  ## btstack_main.c:1026:13
 1e075a2:    bf f3 97 e9       	call -11474 <ble_profile_init : 1e048d4 >			  ## btstack_main.c:1027:13
 1e075a6:    57 01             	{pc, r7-r4} = [sp++]			  ## btstack_task.c:78:1


get_conn_for_addr:
 1e075a8:    76 01             	[--sp] = {rets, r6-r4}			  ## avctp_user.c:236:0
 1e075aa:    c6 ff 30 1b 00 00 	r6 = 6960 <__user_info+0x70 : 1b30 >			  ## avctp_user.c:236:0
 1e075b0:    05 08             	r5 = r0			  ## avctp_user.c:236:0
 1e075b2:    64 08             	r4 = r6			  ## avctp_user.c:236:0
 1e075b4:    62 70             	r2 = 6			  ## avctp_user.c:239:14
 1e075b6:    50 08             	r0 = r5			  ## avctp_user.c:239:14
 1e075b8:    41 08             	r1 = r4			  ## avctp_user.c:239:14
 1e075ba:    97 f3 97 fc       	call 3143982 <memcmp : 106eec >			  ## avctp_user.c:239:14
 1e075be:    03 30             	if (r0 != 0) goto 6 <get_conn_for_addr+0x1E : 1e075c6 >			  ## avctp_user.c:239:14
 1e075c0:    30 48             	r0 = [r4 + 12]			  ## avctp_user.c:240:22
 1e075c2:    3d f3 05 00       	if ((r0 & 536870912) != 0) goto 10 <get_conn_for_addr+0x28 : 1e075d0 >			  ## avctp_user.c:240:22
 1e075c6:    84 81             	r4 += 24			  ## avctp_user.c:238:5
 1e075c8:    80 9d             	r0 = r6 + 24			  ## avctp_user.c:238:5
 1e075ca:    04 f2 f3 3f       	if (r4 < r0) goto -26 <get_conn_for_addr+0xC : 1e075b4 >			  ## avctp_user.c:238:5
 1e075ce:    04 70             	r4 = 0
 1e075d0:    40 08             	r0 = r4			  ## avctp_user.c:245:1
 1e075d2:    56 01             	{pc, r6-r4} = [sp++]			  ## avctp_user.c:245:1


bt_event_update_to_user:
 1e075d4:    76 01             	[--sp] = {rets, r6-r4}			  ## user_interface.c:297:0
 1e075d6:    f4 0b             	sp += -24			  ## user_interface.c:297:0
 1e075d8:    34 08             	r4 = r3			  ## user_interface.c:297:0
 1e075da:    25 08             	r5 = r2			  ## user_interface.c:297:0
 1e075dc:    16 08             	r6 = r1			  ## user_interface.c:297:0
 1e075de:    01 08             	r1 = r0			  ## user_interface.c:297:0
 1e075e0:    00 71             	r0 = 16			  ## user_interface.c:300:12
 1e075e2:    90 f5 00 00       	h[sp] = r0			  ## user_interface.c:300:12
 1e075e6:    00 a0             	r0 = sp + 0			  ## user_interface.c:300:12
 1e075e8:    05 22             	if (r1 == 0) goto 10 <bt_event_update_to_user+0x20 : 1e075f4 >			  ## user_interface.c:300:12
 1e075ea:    80 80             	r0 += 8
 1e075ec:    10 80             	r0 += 1			  ## user_interface.c:302:9
 1e075ee:    62 70             	r2 = 6			  ## user_interface.c:302:9
 1e075f0:    97 f3 78 fc       	call 3143920 <memcpy : 106ee4 >			  ## user_interface.c:302:9
 1e075f4:    1e 02             	[sp+4] = r6			  ## user_interface.c:304:12
 1e075f6:    d5 f5 08 00       	b[sp+8] = r5			  ## user_interface.c:305:18
 1e075fa:    4c 02             	[sp+16] = r4			  ## user_interface.c:306:18
 1e075fc:    00 a0             	r0 = sp + 0			  ## user_interface.c:306:18
 1e075fe:    80 f3 89 29       	call 21266 <sys_event_notify : 1e0c914 >			  ## user_interface.c:307:5
 1e07602:    0c 0a             	sp += 24
 1e07604:    56 01             	{pc, r6-r4} = [sp++]			  ## user_interface.c:309:1


update_bt_current_status:
 1e07606:    79 01             	[--sp] = {rets, r9-r4}			  ## avctp_user.c:653:0
 1e07608:    28 08             	r8 = r2			  ## avctp_user.c:653:0
 1e0760a:    14 08             	r4 = r1			  ## avctp_user.c:653:0
 1e0760c:    05 08             	r5 = r0			  ## avctp_user.c:653:0
 1e0760e:    a6 7a             	r6 = 170			  ## avctp_user.c:653:0
 1e07610:    c9 ff c0 1a 00 00 	r9 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:653:0
 1e07616:    1d 2a             	if (r5 == 0) goto 58 <update_bt_current_status+0x4C : 1e07652 >			  ## avctp_user.c:653:0
 1e07618:    c7 17             	call -114 <get_conn_for_addr : 1e075a8 >			  ## avctp_user.c:661:25
 1e0761a:    07 08             	r7 = r0			  ## avctp_user.c:661:25
 1e0761c:    1a 2e             	if (r7 == 0) goto 52 <update_bt_current_status+0x4C : 1e07652 >
 1e0761e:    e4 e0 04 00       	if (r4 == 14) goto 8 <update_bt_current_status+0x24 : 1e0762a >
 1e07622:    b4 e0 02 00       	if (r4 == 11) goto 4 <update_bt_current_status+0x24 : 1e0762a >
 1e07626:    30 5e             	r0 = h[r7 + 6] (u)			  ## avctp_user.c:672:19
 1e07628:    06 20             	if (r0 == 0) goto 12 <update_bt_current_status+0x30 : 1e07636 >			  ## avctp_user.c:672:19
 1e0762a:    90 fc b0 00       	r0 = r9 + 176
 1e0762e:    62 70             	r2 = 6
 1e07630:    51 08             	r1 = r5
 1e07632:    97 f3 57 fc       	call 3143854 <memcpy : 106ee4 >
 1e07636:    00 6f             	r0 = b[r7 + 16] (u)
 1e07638:    08 e0 09 00       	if (r8 == 0) goto 18 <update_bt_current_status+0x48 : 1e0764e >
 1e0763c:    31 4e             	r1 = [r7 + 12]
 1e0763e:    21 fd 0f 19       	r1 = r1 & 15			  ## avctp_user.c:680:30
 1e07642:    11 fd 05 19       	r1 = r1 ^ 5			  ## avctp_user.c:680:30
 1e07646:    01 22             	if (r1 == 0) goto 2 <update_bt_current_status+0x44 : 1e0764a >			  ## avctp_user.c:680:30
 1e07648:    e8 72             	r8 = 46			  ## avctp_user.c:682:9
 1e0764a:    18 f9 0b 70       	b[r7 + 11] = r8
 1e0764e:    81 fd 30 60       	r6 = uextra(r0, p:6, l:1)			  ## avctp_user.c:687:28
 1e07652:    09 28             	if (r4 == 0) goto 18 <update_bt_current_status+0x60 : 1e07666 >
 1e07654:    14 f9 f8 90       	b[r9 + 248] = r4			  ## avctp_user.c:690:37
 1e07658:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## avctp_user.c:691:9
 1e0765e:    50 08             	r0 = r5			  ## avctp_user.c:691:9
 1e07660:    42 08             	r2 = r4			  ## avctp_user.c:691:9
 1e07662:    63 08             	r3 = r6			  ## avctp_user.c:691:9
 1e07664:    b7 17             	call -146 <bt_event_update_to_user : 1e075d4 >			  ## avctp_user.c:691:9
 1e07666:    59 01             	{pc, r9-r4} = [sp++]			  ## avctp_user.c:694:1


delete_link_key:
 1e07668:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:350:0
 1e0766a:    f0 0b             	sp += -32			  ## remote_device_db.c:350:0
 1e0766c:    06 06             	r6 = -32			  ## remote_device_db.c:350:0
 1e0766e:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:172:20
 1e07670:    14 08             	r4 = r1			  ## remote_device_db.c:172:20
 1e07672:    05 08             	r5 = r0
 1e07674:    82 00             	call r2			  ## remote_device_db.c:172:10
 1e07676:    39 20             	if (r0 == 0) goto 114 <delete_link_key+0x82 : 1e076ea >			  ## remote_device_db.c:172:10
 1e07678:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:177:25
 1e0767a:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:177:25
 1e0767c:    01 72             	r1 = 32			  ## remote_device_db.c:177:15
 1e0767e:    42 08             	r2 = r4			  ## remote_device_db.c:177:15
 1e07680:    83 00             	call r3			  ## remote_device_db.c:177:15
 1e07682:    00 e2 30 10       	if (r0 != 32) goto 96 <delete_link_key+0x7E : 1e076e6 >
 1e07686:    00 a0             	r0 = sp + 0
 1e07688:    a8 90             	r8 = r0 + 10
 1e0768a:    07 2a             	if (r5 == 0) goto 14 <delete_link_key+0x32 : 1e0769a >			  ## remote_device_db.c:181:13
 1e0768c:    62 70             	r2 = 6			  ## remote_device_db.c:182:18
 1e0768e:    50 08             	r0 = r5			  ## remote_device_db.c:182:18
 1e07690:    81 08             	r1 = r8			  ## remote_device_db.c:182:18
 1e07692:    97 f3 2b fc       	call 3143766 <memcmp : 106eec >			  ## remote_device_db.c:182:18
 1e07696:    10 30             	if (r0 != 0) goto 32 <delete_link_key+0x50 : 1e076b8 >			  ## remote_device_db.c:182:18
 1e07698:    17 18             	goto 46 <delete_link_key+0x60 : 1e076c8 >			  ## remote_device_db.c:182:18
 1e0769a:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:189:23
 1e0769c:    20 70             	r0 = 2			  ## remote_device_db.c:189:13
 1e0769e:    01 72             	r1 = 32			  ## remote_device_db.c:189:13
 1e076a0:    82 00             	call r2			  ## remote_device_db.c:189:13
 1e076a2:    07 a0             	r7 = sp + 0			  ## remote_device_db.c:189:13
 1e076a4:    f1 7f             	r1 = 255			  ## remote_device_db.c:190:13
 1e076a6:    02 72             	r2 = 32			  ## remote_device_db.c:190:13
 1e076a8:    70 08             	r0 = r7			  ## remote_device_db.c:190:13
 1e076aa:    97 f3 21 fc       	call 3143746 <memset : 106ef0 >			  ## remote_device_db.c:190:13
 1e076ae:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:191:23
 1e076b0:    01 72             	r1 = 32			  ## remote_device_db.c:191:13
 1e076b2:    70 08             	r0 = r7			  ## remote_device_db.c:191:13
 1e076b4:    42 08             	r2 = r4			  ## remote_device_db.c:191:13
 1e076b6:    83 00             	call r3			  ## remote_device_db.c:191:13
 1e076b8:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:177:25
 1e076ba:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:177:25
 1e076bc:    01 72             	r1 = 32			  ## remote_device_db.c:177:15
 1e076be:    42 08             	r2 = r4			  ## remote_device_db.c:177:15
 1e076c0:    83 00             	call r3			  ## remote_device_db.c:177:15
 1e076c2:    00 e2 e2 0f       	if (r0 == 32) goto -60 <delete_link_key+0x22 : 1e0768a >
 1e076c6:    0f 18             	goto 30 <delete_link_key+0x7E : 1e076e6 >
 1e076c8:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:183:27
 1e076ca:    20 70             	r0 = 2			  ## remote_device_db.c:183:17
 1e076cc:    01 72             	r1 = 32			  ## remote_device_db.c:183:17
 1e076ce:    82 00             	call r2			  ## remote_device_db.c:183:17
 1e076d0:    05 a0             	r5 = sp + 0			  ## remote_device_db.c:183:17
 1e076d2:    f1 7f             	r1 = 255			  ## remote_device_db.c:184:17
 1e076d4:    02 72             	r2 = 32			  ## remote_device_db.c:184:17
 1e076d6:    50 08             	r0 = r5			  ## remote_device_db.c:184:17
 1e076d8:    97 f3 0a fc       	call 3143700 <memset : 106ef0 >			  ## remote_device_db.c:184:17
 1e076dc:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:185:27
 1e076de:    01 72             	r1 = 32			  ## remote_device_db.c:185:17
 1e076e0:    50 08             	r0 = r5			  ## remote_device_db.c:185:17
 1e076e2:    42 08             	r2 = r4			  ## remote_device_db.c:185:17
 1e076e4:    83 00             	call r3			  ## remote_device_db.c:185:17
 1e076e6:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:195:15
 1e076e8:    80 00             	call r0			  ## remote_device_db.c:195:5
 1e076ea:    10 0a             	sp += 32
 1e076ec:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:354:1


get_is_in_background_flag:
 1e076ee:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## avctp_user.c:2895:0
 1e076f4:    01 61             	r1 = b[r0 + 16] (u)			  ## avctp_user.c:2896:74
 1e076f6:    10 70             	r0 = 1			  ## avctp_user.c:2896:50
 1e076f8:    01 32             	if (r1 != 0) goto 2 <get_is_in_background_flag+0xE : 1e076fc >			  ## avctp_user.c:2896:50
 1e076fa:    00 70             	r0 = 0
 1e076fc:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2896:50
 1e07702:    01 f9 fb 10       	r1 = b[r1 + 251] (u)			  ## avctp_user.c:2896:50
 1e07706:    50 b3             	r0 &= r1			  ## avctp_user.c:2896:50
 1e07708:    20 00             	rts			  ## avctp_user.c:2896:5


le_hci_emit_event:
 1e0770a:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1885:0
 1e0770c:    fa 0b             	sp += -12			  ## hci_vendor.c:1885:0
 1e0770e:    14 08             	r4 = r1			  ## hci_vendor.c:1885:0
 1e07710:    05 08             	r5 = r0			  ## hci_vendor.c:1885:0
 1e07712:    00 70             	r0 = 0			  ## hci_vendor.c:1885:0
 1e07714:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1885:0
 1e0771a:    12 42             	r2 = [r1 + 4]			  ## btstack_linked_list.c:163:16
 1e0771c:    08 02             	[sp] = r0			  ## btstack_linked_list.c:161:25
 1e0771e:    40 92             	r0 = r1 + 4			  ## btstack_linked_list.c:161:25
 1e07720:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e07722:    2a 02             	[sp+8] = r2			  ## btstack_linked_list.c:163:14
 1e07724:    00 a0             	r0 = sp + 0			  ## btstack_linked_list.c:163:14
 1e07726:    0a 18             	goto 20 <le_hci_emit_event+0x32 : 1e0773c >
 1e07728:    06 a0             	r6 = sp + 0
 1e0772a:    60 08             	r0 = r6			  ## hci_vendor.c:1889:100
 1e0772c:    37 15             	call -1426 <btstack_linked_list_iterator_next : 1e0719c >			  ## hci_vendor.c:1889:100
 1e0772e:    17 40             	r7 = [r0 + 4]			  ## hci_vendor.c:1890:16
 1e07730:    40 70             	r0 = 4			  ## hci_vendor.c:1890:9
 1e07732:    01 70             	r1 = 0			  ## hci_vendor.c:1890:9
 1e07734:    52 08             	r2 = r5			  ## hci_vendor.c:1890:9
 1e07736:    43 08             	r3 = r4			  ## hci_vendor.c:1890:9
 1e07738:    87 00             	call r7			  ## hci_vendor.c:1890:9
 1e0773a:    60 08             	r0 = r6			  ## hci_vendor.c:1888:12
 1e0773c:    21 15             	call -1470 <btstack_linked_list_iterator_has_next : 1e07180 >
 1e0773e:    f4 31             	if (r0 != 0) goto -24 <le_hci_emit_event+0x1E : 1e07728 >
 1e07740:    06 0a             	sp += 12
 1e07742:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1892:1


get_database:
 1e07744:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:33:0
 1e07746:    08 06             	r8 = -32			  ## remote_device_db.c:33:0
 1e07748:    03 f6 00 80       	r3 = [r8 + 0]			  ## remote_device_db.c:37:20
 1e0774c:    25 08             	r5 = r2			  ## remote_device_db.c:37:20
 1e0774e:    16 08             	r6 = r1
 1e07750:    04 08             	r4 = r0
 1e07752:    83 00             	call r3			  ## remote_device_db.c:37:10
 1e07754:    20 20             	if (r0 == 0) goto 64 <get_database+0x52 : 1e07796 >			  ## remote_device_db.c:37:10
 1e07756:    a7 98             	r7 = r4 + 10
 1e07758:    03 f6 08 80       	r3 = [r8 + 8]			  ## remote_device_db.c:42:25
 1e0775c:    01 72             	r1 = 32			  ## remote_device_db.c:42:15
 1e0775e:    40 08             	r0 = r4			  ## remote_device_db.c:42:15
 1e07760:    52 08             	r2 = r5			  ## remote_device_db.c:42:15
 1e07762:    83 00             	call r3			  ## remote_device_db.c:42:15
 1e07764:    00 e2 12 10       	if (r0 != 32) goto 36 <get_database+0x48 : 1e0778c >
 1e07768:    62 70             	r2 = 6			  ## remote_device_db.c:47:14
 1e0776a:    60 08             	r0 = r6			  ## remote_device_db.c:47:14
 1e0776c:    71 08             	r1 = r7			  ## remote_device_db.c:47:14
 1e0776e:    97 f3 bd fb       	call 3143546 <memcmp : 106eec >			  ## remote_device_db.c:47:14
 1e07772:    f2 31             	if (r0 != 0) goto -28 <get_database+0x14 : 1e07758 >			  ## remote_device_db.c:47:14
 1e07774:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_db.c:48:21
 1e07776:    85 f9 02 40       	r5 = b[r4 ++= 2] (u)			  ## remote_device_db.c:48:21
 1e0777a:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## remote_device_db.c:48:21
 1e0777e:    e1 71             	r1 = 30			  ## remote_device_db.c:48:28
 1e07780:    40 08             	r0 = r4			  ## remote_device_db.c:48:28
 1e07782:    97 f3 d5 fb       	call 3143594 <chip_crc16 : 106f30 >			  ## remote_device_db.c:48:28
 1e07786:    14 70             	r4 = 1			  ## remote_device_db.c:48:28
 1e07788:    05 f2 01 00       	if (r5 == r0) goto 2 <get_database+0x4A : 1e0778e >
 1e0778c:    04 70             	r4 = 0
 1e0778e:    00 f6 04 80       	r0 = [r8 + 4]			  ## remote_device_db.c:58:15
 1e07792:    80 00             	call r0			  ## remote_device_db.c:58:5
 1e07794:    01 18             	goto 2 <get_database+0x54 : 1e07798 >			  ## remote_device_db.c:58:5
 1e07796:    04 70             	r4 = 0
 1e07798:    40 08             	r0 = r4			  ## remote_device_db.c:61:1
 1e0779a:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:61:1


get_link_key:
 1e0779c:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:250:0
 1e0779e:    e8 0b             	sp += -48			  ## remote_device_db.c:250:0
 1e077a0:    25 08             	r5 = r2			  ## remote_device_db.c:250:0
 1e077a2:    14 08             	r4 = r1			  ## remote_device_db.c:250:0
 1e077a4:    06 08             	r6 = r0			  ## remote_device_db.c:250:0
 1e077a6:    12 16             	call -988 <get_remote_test_flag : 1e073cc >			  ## remote_device_db.c:256:9
 1e077a8:    08 20             	if (r0 == 0) goto 16 <get_link_key+0x1E : 1e077ba >			  ## remote_device_db.c:256:9
 1e077aa:    c1 ff b0 6c e0 01 	r1 = 31485104 <own_private_linkkey : 1e06cb0 >			  ## remote_device_db.c:257:9
 1e077b0:    02 71             	r2 = 16			  ## remote_device_db.c:257:9
 1e077b2:    40 08             	r0 = r4			  ## remote_device_db.c:257:9
 1e077b4:    97 f3 96 fb       	call 3143468 <memcpy : 106ee4 >
 1e077b8:    0a 18             	goto 20 <get_link_key+0x32 : 1e077ce >
 1e077ba:    c0 ff 8d 09 00 00 	r0 = 2445 <temp_link_key_flag : 98d >			  ## remote_device_db.c:265:9
 1e077c0:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:265:9
 1e077c2:    09 20             	if (r0 == 0) goto 18 <get_link_key+0x3A : 1e077d6 >			  ## remote_device_db.c:265:9
 1e077c4:    01 70             	r1 = 0			  ## remote_device_db.c:266:9
 1e077c6:    02 71             	r2 = 16			  ## remote_device_db.c:266:9
 1e077c8:    40 08             	r0 = r4			  ## remote_device_db.c:266:9
 1e077ca:    97 f3 91 fb       	call 3143458 <memset : 106ef0 >			  ## remote_device_db.c:266:9
 1e077ce:    15 70             	r5 = 1
 1e077d0:    50 08             	r0 = r5			  ## remote_device_db.c:302:1
 1e077d2:    18 0a             	sp += 48			  ## remote_device_db.c:302:1
 1e077d4:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:302:1
 1e077d6:    00 a0             	r0 = sp + 0
 1e077d8:    61 08             	r1 = r6			  ## remote_device_db.c:270:10
 1e077da:    52 08             	r2 = r5			  ## remote_device_db.c:270:10
 1e077dc:    b3 17             	call -154 <get_database : 1e07744 >			  ## remote_device_db.c:270:10
 1e077de:    05 70             	r5 = 0
 1e077e0:    f7 21             	if (r0 == 0) goto -18 <get_link_key+0x34 : 1e077d0 >
 1e077e2:    bd 02             	[sp+44] = r5			  ## remote_device_db.c:280:5
 1e077e4:    ad 02             	[sp+40] = r5			  ## remote_device_db.c:280:5
 1e077e6:    9d 02             	[sp+36] = r5			  ## remote_device_db.c:280:5
 1e077e8:    8d 02             	[sp+32] = r5			  ## remote_device_db.c:280:5
 1e077ea:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:280:5
 1e077ec:    06 91             	r6 = r0 + 16			  ## remote_device_db.c:281:32
 1e077ee:    00 a2             	r0 = sp + 32
 1e077f0:    02 71             	r2 = 16			  ## remote_device_db.c:281:10
 1e077f2:    61 08             	r1 = r6			  ## remote_device_db.c:281:10
 1e077f4:    97 f3 7a fb       	call 3143412 <memcmp : 106eec >			  ## remote_device_db.c:281:10
 1e077f8:    eb 21             	if (r0 == 0) goto -42 <get_link_key+0x34 : 1e077d0 >			  ## remote_device_db.c:281:10
 1e077fa:    02 71             	r2 = 16			  ## remote_device_db.c:286:5
 1e077fc:    40 08             	r0 = r4			  ## remote_device_db.c:286:5
 1e077fe:    61 08             	r1 = r6			  ## remote_device_db.c:286:5
 1e07800:    d9 1f             	goto -78 <get_link_key+0x18 : 1e077b4 >			  ## remote_device_db.c:286:5


put_database:
 1e07802:    7f 01             	[--sp] = {rets, r15-r4}			  ## remote_device_db.c:65:0
 1e07804:    c2 0b             	sp += -124			  ## remote_device_db.c:65:0
 1e07806:    06 06             	r6 = -32			  ## remote_device_db.c:65:0
 1e07808:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:438:20
 1e0780a:    14 08             	r4 = r1			  ## remote_device_db.c:438:20
 1e0780c:    0b 08             	r11 = r0			  ## remote_device_db.c:438:20
 1e0780e:    82 00             	call r2			  ## remote_device_db.c:438:10
 1e07810:    79 20             	if (r0 == 0) goto 242 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:438:10
 1e07812:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:443:25
 1e07814:    c0 a5             	r0 = sp + 92			  ## remote_device_db.c:443:25
 1e07816:    01 72             	r1 = 32			  ## remote_device_db.c:443:15
 1e07818:    42 08             	r2 = r4			  ## remote_device_db.c:443:15
 1e0781a:    83 00             	call r3			  ## remote_device_db.c:443:15
 1e0781c:    08 70             	r8 = 0
 1e0781e:    00 e2 39 10       	if (r0 != 32) goto 114 <put_database+0x92 : 1e07894 >
 1e07822:    c0 a5             	r0 = sp + 92
 1e07824:    05 fd 02 09       	r5 = r0 | 2
 1e07828:    ca ff ff ff 00 00 	r10 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e0782e:    1f 18             	goto 62 <put_database+0x6C : 1e0786e >
 1e07830:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:456:34
 1e07834:    98 f2 06 a0       	ifs (r8 >= r9) goto 12 <put_database+0x42 : 1e07844 >
 1e07838:    c0 a1             	r0 = sp + 28
 1e0783a:    c1 a5             	r1 = sp + 92
 1e0783c:    02 72             	r2 = 32			  ## remote_device_db.c:458:13
 1e0783e:    97 f3 51 fb       	call 3143330 <memcpy : 106ee4 >			  ## remote_device_db.c:458:13
 1e07842:    98 08             	r8 = r9			  ## remote_device_db.c:458:13
 1e07844:    a9 f2 1f 00       	if (r9 == r10) goto 62 <put_database+0x84 : 1e07886 >
 1e07848:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:464:18
 1e0784c:    e1 71             	r1 = 30			  ## remote_device_db.c:464:25
 1e0784e:    50 08             	r0 = r5			  ## remote_device_db.c:464:25
 1e07850:    97 f3 6e fb       	call 3143388 <chip_crc16 : 106f30 >			  ## remote_device_db.c:464:25
 1e07854:    07 f2 17 10       	if (r7 != r0) goto 46 <put_database+0x84 : 1e07886 >			  ## remote_device_db.c:464:25
 1e07858:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:468:29
 1e0785c:    98 f2 13 a0       	ifs (r8 >= r9) goto 38 <put_database+0x84 : 1e07886 >
 1e07860:    c0 a1             	r0 = sp + 28
 1e07862:    c1 a5             	r1 = sp + 92
 1e07864:    02 72             	r2 = 32			  ## remote_device_db.c:470:13
 1e07866:    97 f3 3d fb       	call 3143290 <memcpy : 106ee4 >			  ## remote_device_db.c:470:13
 1e0786a:    98 08             	r8 = r9			  ## remote_device_db.c:470:13
 1e0786c:    0c 18             	goto 24 <put_database+0x84 : 1e07886 >
 1e0786e:    80 f5 5e 00       	r0 = h[sp+94] (u)			  ## remote_device_db.c:448:18
 1e07872:    a0 f2 08 00       	if (r0 == r10) goto 16 <put_database+0x84 : 1e07886 >			  ## remote_device_db.c:448:18
 1e07876:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:451:18
 1e0787a:    e1 71             	r1 = 30			  ## remote_device_db.c:451:25
 1e0787c:    50 08             	r0 = r5			  ## remote_device_db.c:451:25
 1e0787e:    97 f3 57 fb       	call 3143342 <chip_crc16 : 106f30 >			  ## remote_device_db.c:451:25
 1e07882:    07 f2 d5 0f       	if (r7 == r0) goto -86 <put_database+0x2E : 1e07830 >			  ## remote_device_db.c:451:25
 1e07886:    23 4c             	r3 = [r6 + 8]
 1e07888:    c0 a5             	r0 = sp + 92
 1e0788a:    01 72             	r1 = 32
 1e0788c:    42 08             	r2 = r4
 1e0788e:    83 00             	call r3
 1e07890:    00 e2 ed 0f       	if (r0 == 32) goto -38 <put_database+0x6C : 1e0786e >
 1e07894:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:475:15
 1e07896:    80 00             	call r0			  ## remote_device_db.c:475:5
 1e07898:    08 e0 34 00       	if (r8 == 0) goto 104 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:475:5
 1e0789c:    b0 fc 0a 00       	r0 = r11 + 10			  ## remote_device_db.c:76:14
 1e078a0:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:76:14
 1e078a2:    a1 80             	r1 += 10			  ## remote_device_db.c:76:14
 1e078a4:    62 70             	r2 = 6			  ## remote_device_db.c:76:14
 1e078a6:    97 f3 21 fb       	call 3143234 <memcmp : 106eec >			  ## remote_device_db.c:76:14
 1e078aa:    2c 30             	if (r0 != 0) goto 88 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:76:14
 1e078ac:    b0 fc 10 00       	r0 = r11 + 16			  ## remote_device_db.c:77:14
 1e078b0:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:77:14
 1e078b2:    01 81             	r1 += 16			  ## remote_device_db.c:77:14
 1e078b4:    02 71             	r2 = 16			  ## remote_device_db.c:77:14
 1e078b6:    97 f3 19 fb       	call 3143218 <memcmp : 106eec >			  ## remote_device_db.c:77:14
 1e078ba:    24 30             	if (r0 != 0) goto 72 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:77:14
 1e078bc:    00 f9 06 b0       	r0 = b[r11 + 6] (u)			  ## remote_device_db.c:78:17
 1e078c0:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## remote_device_db.c:78:42
 1e078c4:    10 f2 1e 10       	if (r0 != r1) goto 60 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:78:42
 1e078c8:    00 f9 07 b0       	r0 = b[r11 + 7] (u)			  ## remote_device_db.c:79:17
 1e078cc:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## remote_device_db.c:79:42
 1e078d0:    10 f2 18 10       	if (r0 != r1) goto 48 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:79:42
 1e078d4:    00 f9 04 b0       	r0 = b[r11 + 4] (u)			  ## remote_device_db.c:80:17
 1e078d8:    c1 f5 20 00       	r1 = b[sp+32] (u)			  ## remote_device_db.c:80:40
 1e078dc:    10 f2 12 10       	if (r0 != r1) goto 36 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:80:40
 1e078e0:    00 f9 08 b0       	r0 = b[r11 + 8] (u)			  ## remote_device_db.c:81:17
 1e078e4:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## remote_device_db.c:81:47
 1e078e8:    10 f2 0c 10       	if (r0 != r1) goto 24 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:81:47
 1e078ec:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## remote_device_db.c:82:17
 1e078f0:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## remote_device_db.c:82:48
 1e078f4:    10 f2 06 10       	if (r0 != r1) goto 12 <put_database+0x102 : 1e07904 >			  ## remote_device_db.c:82:48
 1e078f8:    00 f9 05 b0       	r0 = b[r11 + 5] (u)			  ## remote_device_db.c:83:17
 1e078fc:    c1 f5 21 00       	r1 = b[sp+33] (u)			  ## remote_device_db.c:83:55
 1e07900:    10 f2 c7 00       	if (r0 == r1) goto 398 <put_database+0x290 : 1e07a92 >			  ## remote_device_db.c:83:55
 1e07904:    00 4c             	r0 = [r6 + 0]			  ## remote_device_db.c:88:20
 1e07906:    80 00             	call r0			  ## remote_device_db.c:88:10
 1e07908:    c4 20             	if (r0 == 0) goto 392 <put_database+0x290 : 1e07a92 >			  ## remote_device_db.c:88:10
 1e0790a:    c0 a3             	r0 = sp + 60
 1e0790c:    01 91             	r1 = r0 + 16
 1e0790e:    19 02             	[sp+4] = r1
 1e07910:    b1 fc 10 00       	r1 = r11 + 16
 1e07914:    09 02             	[sp] = r1
 1e07916:    a1 90             	r1 = r0 + 10
 1e07918:    39 02             	[sp+12] = r1
 1e0791a:    1b f5 10 00       	[sp+16] = r11
 1e0791e:    b1 fc 0a 00       	r1 = r11 + 10
 1e07922:    29 02             	[sp+8] = r1
 1e07924:    0d fd 02 09       	r13 = r0 | 2
 1e07928:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e0792e:    05 70             	r5 = 0
 1e07930:    8b 08             	r11 = r8
 1e07932:    0f 70             	r15 = 0
 1e07934:    00 70             	r0 = 0
 1e07936:    58 02             	[sp+20] = r0
 1e07938:    09 70             	r9 = 0
 1e0793a:    0c 70             	r12 = 0
 1e0793c:    5a 08             	r10 = r5
 1e0793e:    be 08             	r14 = r11
 1e07940:    1f f5 18 00       	[sp+24] = r15
 1e07944:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:93:25
 1e07946:    80 00             	call r0			  ## remote_device_db.c:93:15
 1e07948:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:95:25
 1e0794a:    07 08             	r7 = r0			  ## remote_device_db.c:93:15
 1e0794c:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:93:15
 1e0794e:    01 72             	r1 = 32			  ## remote_device_db.c:95:15
 1e07950:    42 08             	r2 = r4			  ## remote_device_db.c:95:15
 1e07952:    83 00             	call r3			  ## remote_device_db.c:95:15
 1e07954:    cf 08             	r15 = r12			  ## remote_device_db.c:95:15
 1e07956:    17 18             	goto 46 <put_database+0x184 : 1e07986 >			  ## remote_device_db.c:95:15
 1e07958:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:108:23
 1e0795a:    20 70             	r0 = 2			  ## remote_device_db.c:108:13
 1e0795c:    01 72             	r1 = 32			  ## remote_device_db.c:108:13
 1e0795e:    82 00             	call r2			  ## remote_device_db.c:108:13
 1e07960:    c5 a3             	r5 = sp + 60			  ## remote_device_db.c:108:13
 1e07962:    f1 7f             	r1 = 255			  ## remote_device_db.c:109:13
 1e07964:    02 72             	r2 = 32			  ## remote_device_db.c:109:13
 1e07966:    50 08             	r0 = r5			  ## remote_device_db.c:109:13
 1e07968:    97 f3 c2 fa       	call 3143044 <memset : 106ef0 >			  ## remote_device_db.c:109:13
 1e0796c:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:110:23
 1e0796e:    01 72             	r1 = 32			  ## remote_device_db.c:110:13
 1e07970:    50 08             	r0 = r5			  ## remote_device_db.c:110:13
 1e07972:    42 08             	r2 = r4			  ## remote_device_db.c:110:13
 1e07974:    83 00             	call r3			  ## remote_device_db.c:110:13
 1e07976:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:93:25
 1e07978:    80 00             	call r0			  ## remote_device_db.c:93:15
 1e0797a:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:95:25
 1e0797c:    07 08             	r7 = r0			  ## remote_device_db.c:93:15
 1e0797e:    01 72             	r1 = 32			  ## remote_device_db.c:95:15
 1e07980:    50 08             	r0 = r5			  ## remote_device_db.c:95:15
 1e07982:    42 08             	r2 = r4			  ## remote_device_db.c:95:15
 1e07984:    83 00             	call r3			  ## remote_device_db.c:95:15
 1e07986:    20 04             	r0 = r0.l (u)
 1e07988:    00 e2 52 10       	if (r0 != 32) goto 164 <put_database+0x22E : 1e07a30 >
 1e0798c:    80 f5 3e 00       	r0 = h[sp+62] (u)			  ## remote_device_db.c:100:18
 1e07990:    80 f2 0f 10       	if (r0 != r8) goto 30 <put_database+0x1B0 : 1e079b2 >			  ## remote_device_db.c:100:18
 1e07994:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:93:25
 1e07996:    80 00             	call r0			  ## remote_device_db.c:93:15
 1e07998:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:95:25
 1e0799a:    05 08             	r5 = r0			  ## remote_device_db.c:93:15
 1e0799c:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:93:15
 1e0799e:    01 72             	r1 = 32			  ## remote_device_db.c:95:15
 1e079a0:    42 08             	r2 = r4			  ## remote_device_db.c:95:15
 1e079a2:    83 00             	call r3			  ## remote_device_db.c:95:15
 1e079a4:    20 04             	r0 = r0.l (u)			  ## remote_device_db.c:96:13
 1e079a6:    9f b0             	r15 |= 2			  ## remote_device_db.c:102:22
 1e079a8:    5f 02             	[sp+20] = r7			  ## remote_device_db.c:93:15
 1e079aa:    57 08             	r7 = r5			  ## remote_device_db.c:93:15
 1e079ac:    00 e2 ee 0f       	if (r0 == 32) goto -36 <put_database+0x18A : 1e0798c >			  ## remote_device_db.c:93:15
 1e079b0:    3f 18             	goto 126 <put_database+0x22E : 1e07a30 >			  ## remote_device_db.c:93:15
 1e079b2:    85 f5 3c 00       	r5 = h[sp+60] (u)			  ## remote_device_db.c:106:18
 1e079b6:    e1 71             	r1 = 30			  ## remote_device_db.c:106:25
 1e079b8:    d0 08             	r0 = r13			  ## remote_device_db.c:106:25
 1e079ba:    97 f3 b9 fa       	call 3143026 <chip_crc16 : 106f30 >			  ## remote_device_db.c:106:25
 1e079be:    05 f2 cb 1f       	if (r5 != r0) goto -106 <put_database+0x156 : 1e07958 >			  ## remote_device_db.c:106:25
 1e079c2:    8b f5 3e 00       	r11 = h[sp+62] (u)			  ## remote_device_db.c:113:34
 1e079c6:    0c fd 04 f9       	r12 = r15 | 4			  ## remote_device_db.c:116:22
 1e079ca:    e6 fd 00 0e       	r0 = r14.l (u)			  ## remote_device_db.c:113:27
 1e079ce:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1D2 : 1e079d4 >			  ## remote_device_db.c:113:27
 1e079d2:    fc 08             	r12 = r15			  ## remote_device_db.c:113:13
 1e079d4:    7f 08             	r15 = r7			  ## remote_device_db.c:113:13
 1e079d6:    b0 f2 02 80       	if (r0 > r11) goto 4 <put_database+0x1DC : 1e079de >			  ## remote_device_db.c:113:13
 1e079da:    0f f5 18 00       	r15 = [sp+24]			  ## remote_device_db.c:113:13
 1e079de:    e6 fd 00 1a       	r1 = r10.l (u)			  ## remote_device_db.c:120:27
 1e079e2:    b5 08             	r5 = r11			  ## remote_device_db.c:120:13
 1e079e4:    51 f2 01 30       	if (r1 < r5) goto 2 <put_database+0x1E8 : 1e079ea >			  ## remote_device_db.c:120:13
 1e079e8:    a5 08             	r5 = r10			  ## remote_device_db.c:120:13
 1e079ea:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1EE : 1e079f0 >
 1e079ee:    eb 08             	r11 = r14			  ## remote_device_db.c:113:13
 1e079f0:    e6 fd 00 09       	r0 = r9.l (u)			  ## remote_device_db.c:124:23
 1e079f4:    5a 08             	r10 = r5			  ## remote_device_db.c:124:23
 1e079f6:    be 08             	r14 = r11			  ## remote_device_db.c:124:23
 1e079f8:    1f f5 18 00       	[sp+24] = r15			  ## remote_device_db.c:124:23
 1e079fc:    a3 31             	if (r0 != 0) goto -186 <put_database+0x142 : 1e07944 >			  ## remote_device_db.c:124:23
 1e079fe:    62 70             	r2 = 6			  ## remote_device_db.c:124:27
 1e07a00:    20 02             	r0 = [sp+8]			  ## remote_device_db.c:124:27
 1e07a02:    31 02             	r1 = [sp+12]			  ## remote_device_db.c:124:27
 1e07a04:    97 f3 72 fa       	call 3142884 <memcmp : 106eec >			  ## remote_device_db.c:124:27
 1e07a08:    09 70             	r9 = 0			  ## remote_device_db.c:124:27
 1e07a0a:    98 31             	if (r0 != 0) goto -208 <put_database+0x13A : 1e0793c >			  ## remote_device_db.c:124:27
 1e07a0c:    02 71             	r2 = 16			  ## remote_device_db.c:125:17
 1e07a0e:    00 02             	r0 = [sp]			  ## remote_device_db.c:125:17
 1e07a10:    11 02             	r1 = [sp+4]			  ## remote_device_db.c:125:17
 1e07a12:    97 f3 6b fa       	call 3142870 <memcmp : 106eec >			  ## remote_device_db.c:125:17
 1e07a16:    09 20             	if (r0 == 0) goto 18 <put_database+0x228 : 1e07a2a >			  ## remote_device_db.c:125:17
 1e07a18:    40 02             	r0 = [sp+16]
 1e07a1a:    f1 7f             	r1 = 255
 1e07a1c:    69 60             	b[r0 + 6] = r1			  ## remote_device_db.c:126:33
 1e07a1e:    79 60             	b[r0 + 7] = r1			  ## remote_device_db.c:127:33
 1e07a20:    01 70             	r1 = 0			  ## remote_device_db.c:127:33
 1e07a22:    59 60             	b[r0 + 5] = r1			  ## remote_device_db.c:128:46
 1e07a24:    99 60             	b[r0 + 9] = r1			  ## remote_device_db.c:129:38
 1e07a26:    31 70             	r1 = 3			  ## remote_device_db.c:130:37
 1e07a28:    89 60             	b[r0 + 8] = r1			  ## remote_device_db.c:130:37
 1e07a2a:    1c b0             	r12 |= 1			  ## remote_device_db.c:134:22
 1e07a2c:    79 08             	r9 = r7			  ## remote_device_db.c:134:22
 1e07a2e:    86 1f             	goto -244 <put_database+0x13A : 1e0793c >			  ## remote_device_db.c:134:22
 1e07a30:    a0 fc 01 00       	r0 = r10 + 1			  ## remote_device_db.c:139:35
 1e07a34:    22 04             	r2 = r0.l (u)			  ## remote_device_db.c:139:35
 1e07a36:    83 08             	r3 = r8			  ## remote_device_db.c:139:35
 1e07a38:    11 70             	r1 = 1			  ## remote_device_db.c:139:35
 1e07a3a:    32 f2 01 00       	if (r2 == r3) goto 2 <put_database+0x23E : 1e07a40 >			  ## remote_device_db.c:139:35
 1e07a3e:    01 08             	r1 = r0			  ## remote_device_db.c:140:9
 1e07a40:    45 02             	r5 = [sp+16]
 1e07a42:    29 6a             	b[r5 + 2] = r1			  ## remote_device_db.c:139:19
 1e07a44:    08 d2             	r0 = r1 >> 8			  ## remote_device_db.c:139:19
 1e07a46:    38 6a             	b[r5 + 3] = r0			  ## remote_device_db.c:139:19
 1e07a48:    20 9a             	r0 = r5 + 2			  ## remote_device_db.c:139:9
 1e07a4a:    e1 71             	r1 = 30			  ## remote_device_db.c:143:15
 1e07a4c:    97 f3 70 fa       	call 3142880 <chip_crc16 : 106f30 >			  ## remote_device_db.c:143:15
 1e07a50:    08 6a             	b[r5 + 0] = r0			  ## remote_device_db.c:143:13
 1e07a52:    01 d2             	r1 = r0 >> 8			  ## remote_device_db.c:143:13
 1e07a54:    e6 fd 00 0f       	r0 = r15.l (u)			  ## remote_device_db.c:146:9
 1e07a58:    19 6a             	b[r5 + 1] = r1			  ## remote_device_db.c:143:13
 1e07a5a:    0a 20             	if (r0 == 0) goto 20 <put_database+0x26E : 1e07a70 >			  ## remote_device_db.c:143:13
 1e07a5c:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <put_database+0x278 : 1e07a7a >
 1e07a60:    09 f5 14 00       	r9 = [sp+20]
 1e07a64:    21 f3 09 00       	if ((r0 & 2) != 0) goto 18 <put_database+0x278 : 1e07a7a >
 1e07a68:    09 f5 18 00       	r9 = [sp+24]
 1e07a6c:    22 f3 05 00       	if ((r0 & 4) != 0) goto 10 <put_database+0x278 : 1e07a7a >
 1e07a70:    60 4c             	r0 = [r6 + 24]
 1e07a72:    80 00             	call r0
 1e07a74:    81 fc e1 ff       	r1 = r8 + -31
 1e07a78:    49 b0             	r9 = r0 + r1
 1e07a7a:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:159:15
 1e07a7c:    e6 fd 00 19       	r1 = r9.l (u)			  ## remote_device_db.c:159:23
 1e07a80:    00 70             	r0 = 0			  ## remote_device_db.c:159:5
 1e07a82:    82 00             	call r2			  ## remote_device_db.c:159:5
 1e07a84:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:160:15
 1e07a86:    01 72             	r1 = 32			  ## remote_device_db.c:160:5
 1e07a88:    50 08             	r0 = r5			  ## remote_device_db.c:160:5
 1e07a8a:    42 08             	r2 = r4			  ## remote_device_db.c:160:5
 1e07a8c:    83 00             	call r3			  ## remote_device_db.c:160:5
 1e07a8e:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:162:15
 1e07a90:    80 00             	call r0			  ## remote_device_db.c:162:5
 1e07a92:    3e 0a             	sp += 124
 1e07a94:    5f 01             	{pc, r15-r4} = [sp++]


put_link_key:
 1e07a96:    77 01             	[--sp] = {rets, r7-r4}			  ## remote_device_db.c:305:0
 1e07a98:    f0 0b             	sp += -32			  ## remote_device_db.c:305:0
 1e07a9a:    24 08             	r4 = r2			  ## remote_device_db.c:305:0
 1e07a9c:    15 08             	r5 = r1			  ## remote_device_db.c:305:0
 1e07a9e:    06 08             	r6 = r0			  ## remote_device_db.c:305:0
 1e07aa0:    95 14             	call -1750 <get_remote_test_flag : 1e073cc >			  ## remote_device_db.c:308:9
 1e07aa2:    2a 30             	if (r0 != 0) goto 84 <put_link_key+0x62 : 1e07af8 >			  ## remote_device_db.c:308:9
 1e07aa4:    c0 ff 8d 09 00 00 	r0 = 2445 <temp_link_key_flag : 98d >			  ## remote_device_db.c:312:9
 1e07aaa:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:312:9
 1e07aac:    25 30             	if (r0 != 0) goto 74 <put_link_key+0x62 : 1e07af8 >			  ## remote_device_db.c:312:9
 1e07aae:    00 a0             	r0 = sp + 0
 1e07ab0:    61 08             	r1 = r6			  ## remote_device_db.c:320:10
 1e07ab2:    42 08             	r2 = r4			  ## remote_device_db.c:320:10
 1e07ab4:    47 16             	call -882 <get_database : 1e07744 >			  ## remote_device_db.c:320:10
 1e07ab6:    12 30             	if (r0 != 0) goto 36 <put_link_key+0x46 : 1e07adc >
 1e07ab8:    00 a0             	r0 = sp + 0
 1e07aba:    01 70             	r1 = 0			  ## remote_device_db.c:321:9
 1e07abc:    02 72             	r2 = 32			  ## remote_device_db.c:321:9
 1e07abe:    07 70             	r7 = 0			  ## remote_device_db.c:321:9
 1e07ac0:    97 f3 16 fa       	call 3142700 <memset : 106ef0 >			  ## remote_device_db.c:321:9
 1e07ac4:    f0 7f             	r0 = 255			  ## remote_device_db.c:322:30
 1e07ac6:    d0 f5 07 00       	b[sp+7] = r0			  ## remote_device_db.c:322:30
 1e07aca:    d0 f5 06 00       	b[sp+6] = r0			  ## remote_device_db.c:323:31
 1e07ace:    d7 f5 05 00       	b[sp+5] = r7			  ## remote_device_db.c:324:43
 1e07ad2:    d7 f5 09 00       	b[sp+9] = r7			  ## remote_device_db.c:325:36
 1e07ad6:    30 70             	r0 = 3			  ## remote_device_db.c:326:35
 1e07ad8:    d0 f5 08 00       	b[sp+8] = r0			  ## remote_device_db.c:326:35
 1e07adc:    07 a0             	r7 = sp + 0
 1e07ade:    a0 9e             	r0 = r7 + 10			  ## remote_device_db.c:328:5
 1e07ae0:    62 70             	r2 = 6			  ## remote_device_db.c:328:5
 1e07ae2:    61 08             	r1 = r6			  ## remote_device_db.c:328:5
 1e07ae4:    97 f3 fe f9       	call 3142652 <memcpy : 106ee4 >			  ## remote_device_db.c:328:5
 1e07ae8:    00 9f             	r0 = r7 + 16			  ## remote_device_db.c:329:5
 1e07aea:    02 71             	r2 = 16			  ## remote_device_db.c:329:5
 1e07aec:    51 08             	r1 = r5			  ## remote_device_db.c:329:5
 1e07aee:    97 f3 f9 f9       	call 3142642 <memcpy : 106ee4 >			  ## remote_device_db.c:329:5
 1e07af2:    70 08             	r0 = r7			  ## remote_device_db.c:336:5
 1e07af4:    41 08             	r1 = r4			  ## remote_device_db.c:336:5
 1e07af6:    85 16             	call -758 <put_database : 1e07802 >			  ## remote_device_db.c:336:5
 1e07af8:    10 0a             	sp += 32
 1e07afa:    57 01             	{pc, r7-r4} = [sp++]			  ## remote_device_db.c:337:1


handle_remote_dev_type:
 1e07afc:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:583:0
 1e07afe:    e8 0b             	sp += -48			  ## remote_device_db.c:583:0
 1e07b00:    14 08             	r4 = r1			  ## remote_device_db.c:583:0
 1e07b02:    05 08             	r5 = r0			  ## remote_device_db.c:583:0
 1e07b04:    06 70             	r6 = 0			  ## remote_device_db.c:583:0
 1e07b06:    62 14             	call -1852 <get_remote_test_flag : 1e073cc >			  ## remote_device_db.c:586:17
 1e07b08:    03 20             	if (r0 == 0) goto 6 <handle_remote_dev_type+0x14 : 1e07b10 >			  ## remote_device_db.c:586:17
 1e07b0a:    60 08             	r0 = r6			  ## remote_device_db.c:619:1
 1e07b0c:    18 0a             	sp += 48			  ## remote_device_db.c:619:1
 1e07b0e:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:619:1
 1e07b10:    00 a1             	r0 = sp + 16
 1e07b12:    02 70             	r2 = 0			  ## remote_device_db.c:590:10
 1e07b14:    51 08             	r1 = r5			  ## remote_device_db.c:590:10
 1e07b16:    16 16             	call -980 <get_database : 1e07744 >			  ## remote_device_db.c:590:10
 1e07b18:    07 20             	if (r0 == 0) goto 14 <handle_remote_dev_type+0x2C : 1e07b28 >
 1e07b1a:    c0 f5 14 00       	r0 = b[sp+20] (u)
 1e07b1e:    06 08             	r6 = r0
 1e07b20:    01 ff ff 40 22 00 	if (r4 != 255) goto 68 <handle_remote_dev_type+0x6E : 1e07b6a >
 1e07b26:    f1 1f             	goto -30 <handle_remote_dev_type+0xE : 1e07b0a >
 1e07b28:    00 ff ff 40 ee ff 	if (r4 == 255) goto -36 <handle_remote_dev_type+0xE : 1e07b0a >
 1e07b2e:    00 70             	r0 = 0
 1e07b30:    38 02             	[sp+12] = r0			  ## remote_device_db.c:596:13
 1e07b32:    28 02             	[sp+8] = r0			  ## remote_device_db.c:596:13
 1e07b34:    18 02             	[sp+4] = r0			  ## remote_device_db.c:596:13
 1e07b36:    08 02             	[sp] = r0			  ## remote_device_db.c:596:13
 1e07b38:    06 a1             	r6 = sp + 16			  ## remote_device_db.c:596:13
 1e07b3a:    01 70             	r1 = 0			  ## remote_device_db.c:597:13
 1e07b3c:    02 72             	r2 = 32			  ## remote_device_db.c:597:13
 1e07b3e:    60 08             	r0 = r6			  ## remote_device_db.c:597:13
 1e07b40:    97 f3 d6 f9       	call 3142572 <memset : 106ef0 >			  ## remote_device_db.c:597:13
 1e07b44:    a0 9c             	r0 = r6 + 10			  ## remote_device_db.c:598:13
 1e07b46:    62 70             	r2 = 6			  ## remote_device_db.c:598:13
 1e07b48:    51 08             	r1 = r5			  ## remote_device_db.c:598:13
 1e07b4a:    97 f3 cb f9       	call 3142550 <memcpy : 106ee4 >			  ## remote_device_db.c:598:13
 1e07b4e:    f0 7f             	r0 = 255			  ## remote_device_db.c:599:34
 1e07b50:    d0 f5 17 00       	b[sp+23] = r0			  ## remote_device_db.c:599:34
 1e07b54:    d0 f5 16 00       	b[sp+22] = r0			  ## remote_device_db.c:600:35
 1e07b58:    30 70             	r0 = 3			  ## remote_device_db.c:601:39
 1e07b5a:    d0 f5 18 00       	b[sp+24] = r0			  ## remote_device_db.c:601:39
 1e07b5e:    01 a0             	r1 = sp + 0			  ## remote_device_db.c:601:39
 1e07b60:    02 70             	r2 = 0			  ## remote_device_db.c:602:13
 1e07b62:    50 08             	r0 = r5			  ## remote_device_db.c:602:13
 1e07b64:    98 17             	call -208 <put_link_key : 1e07a96 >			  ## remote_device_db.c:602:13
 1e07b66:    c0 f5 14 00       	r0 = b[sp+20] (u)			  ## remote_device_db.c:602:13
 1e07b6a:    06 70             	r6 = 0
 1e07b6c:    40 f2 cd 0f       	if (r0 == r4) goto -102 <handle_remote_dev_type+0xE : 1e07b0a >
 1e07b70:    d4 f5 14 00       	b[sp+20] = r4			  ## remote_device_db.c:614:28
 1e07b74:    00 a1             	r0 = sp + 16			  ## remote_device_db.c:614:28
 1e07b76:    01 70             	r1 = 0			  ## remote_device_db.c:616:9
 1e07b78:    44 16             	call -888 <put_database : 1e07802 >			  ## remote_device_db.c:616:9
 1e07b7a:    c7 1f             	goto -114 <handle_remote_dev_type+0xE : 1e07b0a >


check_l2cap_authentication_flag:
 1e07b7c:    78 01             	[--sp] = {rets, r8-r4}			  ## l2cap.c:229:0
 1e07b7e:    c3 ff 98 1a 00 00 	r3 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:229:0
 1e07b84:    03 46             	r3 = [r3 + 0]			  ## l2cap.c:229:0
 1e07b86:    28 08             	r8 = r2			  ## l2cap.c:229:0
 1e07b88:    16 08             	r6 = r1			  ## l2cap.c:229:0
 1e07b8a:    07 08             	r7 = r0			  ## l2cap.c:229:0
 1e07b8c:    34 fc 2c 00       	r4 = r3 + 44			  ## l2cap.c:229:0
 1e07b90:    62 70             	r2 = 6			  ## l2cap.c:232:14
 1e07b92:    41 08             	r1 = r4			  ## l2cap.c:232:14
 1e07b94:    97 f3 aa f9       	call 3142484 <memcmp : 106eec >			  ## l2cap.c:232:14
 1e07b98:    0f 30             	if (r0 != 0) goto 30 <.GJTIE521_0_0_+0x6 : 1e07bb8 >			  ## l2cap.c:232:14
 1e07b9a:    60 68             	r0 = b[r4 + 6] (u)			  ## l2cap.c:233:71
 1e07b9c:    21 fd 0f 09       	r1 = r0 & 15			  ## l2cap.c:233:71
 1e07ba0:    a1 e0 0a 10       	if (r1 != 10) goto 20 <.GJTIE521_0_0_+0x6 : 1e07bb8 >			  ## l2cap.c:233:71
 1e07ba4:    61 fc dc ff       	r1 = r6 + -36			  ## l2cap.c:235:17
 1e07ba8:    31 e0 33 80       	if (r1 > 3) goto 102 <.GJTIE521_0_0_+0x60 : 1e07c12 >			  ## l2cap.c:235:17
 1e07bac:    a1 00             	tbb [r1]


.GJTIS521_0_0_:
 1e07bae:    02     < 2 : 0x2 >
 1e07baf:    27     < 39 : 0x27 >
 1e07bb0:    2e     < 46 : 0x2E >
 1e07bb1:    34     < 52 : 0x34 >
 1e07bb2:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:242:93
 1e07bb6:    2d 18             	goto 90 <.GJTIE521_0_0_+0x60 : 1e07c12 >			  ## l2cap.c:242:93
 1e07bb8:    01 fd 02 69       	r1 = r6 | 2			  ## l2cap.c:255:9
 1e07bbc:    00 72             	r0 = 32			  ## l2cap.c:255:9
 1e07bbe:    61 e2 1c 10       	if (r1 != 38) goto 56 <.GJTIE521_0_0_+0x48 : 1e07bfa >			  ## l2cap.c:255:9
 1e07bc2:    65 68             	r5 = b[r4 + 6] (u)
 1e07bc4:    21 fd 0f 59       	r1 = r5 & 15			  ## l2cap.c:257:71
 1e07bc8:    a1 e0 17 00       	if (r1 == 10) goto 46 <.GJTIE521_0_0_+0x48 : 1e07bfa >			  ## l2cap.c:257:71
 1e07bcc:    62 70             	r2 = 6			  ## l2cap.c:258:17
 1e07bce:    40 08             	r0 = r4			  ## l2cap.c:258:17
 1e07bd0:    71 08             	r1 = r7			  ## l2cap.c:258:17
 1e07bd2:    97 f3 87 f9       	call 3142414 <memcpy : 106ee4 >			  ## l2cap.c:258:17
 1e07bd6:    20 fd f0 59       	r0 = r5 & 240			  ## l2cap.c:259:79
 1e07bda:    00 fd 0a 09       	r0 = r0 | 10			  ## l2cap.c:259:79
 1e07bde:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:259:79
 1e07be0:    46 e2 04 10       	if (r6 != 36) goto 8 <.GJTIE521_0_0_+0x3A : 1e07bec >			  ## l2cap.c:260:21
 1e07be4:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:262:96
 1e07be8:    a0 70             	r0 = 10			  ## l2cap.c:263:93
 1e07bea:    05 18             	goto 10 <.GJTIE521_0_0_+0x44 : 1e07bf6 >			  ## l2cap.c:263:93
 1e07bec:    00 72             	r0 = 32			  ## l2cap.c:266:96
 1e07bee:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:266:96
 1e07bf0:    a0 70             	r0 = 10			  ## l2cap.c:267:93
 1e07bf2:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:267:93
 1e07bf6:    68 68             	b[r4 + 6] = r0
 1e07bf8:    80 08             	r0 = r8
 1e07bfa:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e07bfc:    00 70             	r0 = 0
 1e07bfe:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:238:90
 1e07c00:    28 58             	h[r4 + 4] = r0			  ## l2cap.c:238:90
 1e07c02:    08 48             	[r4 + 0] = r0			  ## l2cap.c:238:90
 1e07c04:    00 72             	r0 = 32			  ## l2cap.c:239:93
 1e07c06:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:239:93
 1e07c08:    04 18             	goto 8 <.GJTIE521_0_0_+0x60 : 1e07c12 >			  ## l2cap.c:239:93
 1e07c0a:    a0 70             	r0 = 10			  ## l2cap.c:245:90
 1e07c0c:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:245:90
 1e07c10:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:245:90
 1e07c12:    70 68             	r0 = b[r4 + 7] (u)			  ## l2cap.c:250:78
 1e07c14:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e07c16:    00 d1             	r0 = r0 >> 4			  ## l2cap.c:248:78
 1e07c18:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1


remote_dev_company_ioctrl:
 1e07c1a:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:278:0
 1e07c1c:    24 08             	r4 = r2			  ## l2cap.c:278:0
 1e07c1e:    16 08             	r6 = r1			  ## l2cap.c:278:0
 1e07c20:    05 08             	r5 = r0			  ## l2cap.c:278:0
 1e07c22:    71 72             	r1 = 39			  ## l2cap.c:278:0
 1e07c24:    01 2c             	if (r6 == 0) goto 2 <remote_dev_company_ioctrl+0xE : 1e07c28 >			  ## l2cap.c:278:0
 1e07c26:    61 72             	r1 = 38			  ## l2cap.c:278:0
 1e07c28:    a9 17             	call -174 <check_l2cap_authentication_flag : 1e07b7c >			  ## l2cap.c:285:11
 1e07c2a:    04 2c             	if (r6 == 0) goto 8 <remote_dev_company_ioctrl+0x1A : 1e07c34 >			  ## l2cap.c:285:11
 1e07c2c:    03 28             	if (r4 == 0) goto 6 <remote_dev_company_ioctrl+0x1A : 1e07c34 >
 1e07c2e:    50 08             	r0 = r5			  ## l2cap.c:287:9
 1e07c30:    41 08             	r1 = r4			  ## l2cap.c:287:9
 1e07c32:    64 17             	call -312 <handle_remote_dev_type : 1e07afc >			  ## l2cap.c:287:9
 1e07c34:    56 01             	{pc, r6-r4} = [sp++]


connection_address_for_handle:
 1e07c36:    c0 f3 d4 75       	goto 60328 <lmp_private_remote_addr_for_handler : 1e167e2 >			  ## hci_vendor.c:117:0


hci_disconnect_cmd:
 1e07c3a:    c0 f3 98 76       	goto 60720 <lmp_hci_disconnect : 1e1696e >			  ## hci_vendor.c:1678:0


hci_get_outgoing_acl_packet_buffer:
 1e07c3e:    34 00             	[--sp] = rets			  ## hci_vendor.c:1271:0
 1e07c40:    40 80             	r0 += 4			  ## hci_vendor.c:1272:55
 1e07c42:    80 f3 fb 76       	call 60918 <lmp_private_get_tx_packet_buffer : 1e16a3c >			  ## hci_vendor.c:1272:18
 1e07c46:    30 00             	pc = [sp++]			  ## hci_vendor.c:1274:5


bt_store_16:
 1e07c48:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:159:0
 1e07c4c:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e07c4e:    11 80             	r1 += 1			  ## utils.c:160:15
 1e07c50:    61 04             	r1 = r1.l (u)			  ## utils.c:161:5
 1e07c52:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:161:19
 1e07c56:    20 00             	rts			  ## utils.c:162:1


l2cap_create_signaling_internal:
 1e07c58:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap_signaling.c:85:0
 1e07c5a:    fe 0b             	sp += -4			  ## l2cap_signaling.c:85:0
 1e07c5c:    76 02             	r6 = [sp+28]			  ## l2cap_signaling.c:85:0
 1e07c5e:    25 08             	r5 = r2			  ## l2cap_signaling.c:85:0
 1e07c60:    04 08             	r4 = r0			  ## l2cap_signaling.c:85:0
 1e07c62:    0e 02             	[sp] = r6			  ## l2cap_signaling.c:85:0
 1e07c64:    02 fd 20 1a       	r2 = r1 | 8192			  ## l2cap_signaling.c:93:39
 1e07c68:    01 70             	r1 = 0			  ## l2cap_signaling.c:93:5
 1e07c6a:    ee 17             	call -36 <bt_store_16 : 1e07c48 >			  ## l2cap_signaling.c:93:5
 1e07c6c:    61 70             	r1 = 6			  ## l2cap_signaling.c:95:5
 1e07c6e:    52 08             	r2 = r5			  ## l2cap_signaling.c:95:5
 1e07c70:    eb 17             	call -42 <bt_store_16 : 1e07c48 >			  ## l2cap_signaling.c:95:5
 1e07c72:    60 02             	r0 = [sp+24]
 1e07c74:    99 c0             	r1 = r3 << 2			  ## l2cap_signaling.c:103:50
 1e07c76:    c2 ff 14 6c e0 01 	r2 = 31484948 <l2cap_signaling_commands_format : 1e06c14 >			  ## l2cap_signaling.c:103:14
 1e07c7c:    21 09             	r1 += r2			  ## l2cap_signaling.c:103:50
 1e07c7e:    06 f6 fc 1f       	r6 = [r1 + -4]			  ## l2cap_signaling.c:103:14
 1e07c82:    8b 68             	b[r4 + 8] = r3			  ## l2cap_signaling.c:97:19
 1e07c84:    98 68             	b[r4 + 9] = r0			  ## l2cap_signaling.c:99:19
 1e07c86:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e07c8a:    2e 20             	if (r0 == 0) goto 92 <l2cap_create_signaling_internal+0x90 : 1e07ce8 >
 1e07c8c:    c3 70             	r3 = 12
 1e07c8e:    10 04             	r0 = r0.b0 (s)			  ## l2cap_signaling.c:105:17
 1e07c90:    01 fc cf ff       	r1 = r0 + -49			  ## l2cap_signaling.c:105:9
 1e07c94:    21 e0 12 20       	if (r1 >= 2) goto 36 <l2cap_create_signaling_internal+0x64 : 1e07cbc >			  ## l2cap_signaling.c:105:9
 1e07c98:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:108:20
 1e07c9a:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:108:20
 1e07c9c:    09 02             	[sp] = r1			  ## l2cap_signaling.c:108:20
 1e07c9e:    00 40             	r0 = [r0 + 0]			  ## l2cap_signaling.c:108:20
 1e07ca0:    e1 04             	r1 = r3.l (u)			  ## l2cap_signaling.c:110:13
 1e07ca2:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:110:31
 1e07ca6:    02 f9 ff 6f       	r2 = b[r6 + -1] (u)			  ## l2cap_signaling.c:111:17
 1e07caa:    11 96             	r1 = r3 + 1			  ## l2cap_signaling.c:110:27
 1e07cac:    22 e3 17 10       	if (r2 != 50) goto 46 <l2cap_create_signaling_internal+0x86 : 1e07cde >			  ## l2cap_signaling.c:110:27
 1e07cb0:    61 04             	r1 = r1.l (u)			  ## l2cap_signaling.c:112:17
 1e07cb2:    00 d2             	r0 = r0 >> 8			  ## l2cap_signaling.c:112:42
 1e07cb4:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:112:35
 1e07cb8:    23 80             	r3 += 2			  ## l2cap_signaling.c:112:31
 1e07cba:    12 18             	goto 36 <l2cap_create_signaling_internal+0x88 : 1e07ce0 >			  ## l2cap_signaling.c:112:31
 1e07cbc:    40 e4 10 10       	if (r0 != 68) goto 32 <l2cap_create_signaling_internal+0x88 : 1e07ce0 >
 1e07cc0:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:117:20
 1e07cc2:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:117:20
 1e07cc4:    09 02             	[sp] = r1			  ## l2cap_signaling.c:117:20
 1e07cc6:    01 02             	r1 = [sp]			  ## l2cap_signaling.c:119:20
 1e07cc8:    05 40             	r5 = [r0 + 0]			  ## l2cap_signaling.c:117:20
 1e07cca:    40 92             	r0 = r1 + 4			  ## l2cap_signaling.c:119:20
 1e07ccc:    08 02             	[sp] = r0			  ## l2cap_signaling.c:119:20
 1e07cce:    01 42             	r1 = [r1 + 0]			  ## l2cap_signaling.c:119:20
 1e07cd0:    e7 04             	r7 = r3.l (u)			  ## l2cap_signaling.c:122:21
 1e07cd2:    c0 b9             	r0 = r4 + r7			  ## l2cap_signaling.c:122:21
 1e07cd4:    52 08             	r2 = r5			  ## l2cap_signaling.c:122:13
 1e07cd6:    97 f3 05 f9       	call 3142154 <memcpy : 106ee4 >			  ## l2cap_signaling.c:122:13
 1e07cda:    c3 bb             	r3 = r5 + r7			  ## l2cap_signaling.c:124:17
 1e07cdc:    01 18             	goto 2 <l2cap_create_signaling_internal+0x88 : 1e07ce0 >			  ## l2cap_signaling.c:124:17
 1e07cde:    13 08             	r3 = r1
 1e07ce0:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e07ce4:    d4 31             	if (r0 != 0) goto -88 <l2cap_create_signaling_internal+0x36 : 1e07c8e >			  ## l2cap_signaling.c:104:12
 1e07ce6:    01 18             	goto 2 <l2cap_create_signaling_internal+0x92 : 1e07cea >			  ## l2cap_signaling.c:104:12
 1e07ce8:    c3 70             	r3 = 12
 1e07cea:    30 fc fc ff       	r0 = r3 + -4			  ## l2cap_signaling.c:137:37
 1e07cee:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:137:5
 1e07cf0:    21 70             	r1 = 2			  ## l2cap_signaling.c:137:5
 1e07cf2:    40 08             	r0 = r4			  ## l2cap_signaling.c:137:5
 1e07cf4:    a9 17             	call -174 <bt_store_16 : 1e07c48 >			  ## l2cap_signaling.c:137:5
 1e07cf6:    30 fc f8 ff       	r0 = r3 + -8			  ## l2cap_signaling.c:139:41
 1e07cfa:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:139:5
 1e07cfc:    41 70             	r1 = 4			  ## l2cap_signaling.c:139:5
 1e07cfe:    40 08             	r0 = r4			  ## l2cap_signaling.c:139:5
 1e07d00:    a3 17             	call -186 <bt_store_16 : 1e07c48 >			  ## l2cap_signaling.c:139:5
 1e07d02:    30 fc f4 ff       	r0 = r3 + -12			  ## l2cap_signaling.c:141:37
 1e07d06:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:141:5
 1e07d08:    a1 70             	r1 = 10			  ## l2cap_signaling.c:141:5
 1e07d0a:    40 08             	r0 = r4			  ## l2cap_signaling.c:141:5
 1e07d0c:    9d 17             	call -198 <bt_store_16 : 1e07c48 >			  ## l2cap_signaling.c:141:5
 1e07d0e:    e0 04             	r0 = r3.l (u)			  ## l2cap_signaling.c:147:5
 1e07d10:    02 0a             	sp += 4			  ## l2cap_signaling.c:147:5
 1e07d12:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap_signaling.c:147:5


bredr_hci_send_acl_packet:
 1e07d14:    c0 f3 9e 76       	goto 60732 <lmp_hci_send_packet : 1e16a54 >			  ## hci_vendor.c:1278:0


l2cap_send_signaling_packet:
 1e07d18:    63 01             	[--sp] = {r3}			  ## l2cap.c:500:0
 1e07d1a:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:500:0
 1e07d1c:    f8 0b             	sp += -16			  ## l2cap.c:500:0
 1e07d1e:    26 08             	r6 = r2			  ## l2cap.c:500:0
 1e07d20:    14 08             	r4 = r1			  ## l2cap.c:500:0
 1e07d22:    05 08             	r5 = r0			  ## l2cap.c:500:0
 1e07d24:    a0 c0             	r0 = r4 << 2			  ## l2cap_signaling.c:159:50
 1e07d26:    c1 ff 14 6c e0 01 	r1 = 31484948 <l2cap_signaling_commands_format : 1e06c14 >			  ## l2cap_signaling.c:159:14
 1e07d2c:    10 09             	r0 += r1			  ## l2cap_signaling.c:159:50
 1e07d2e:    01 f6 fc 0f       	r1 = [r0 + -4]			  ## l2cap_signaling.c:159:14
 1e07d32:    40 a2             	r0 = sp + 36
 1e07d34:    28 02             	[sp+8] = r0			  ## l2cap.c:506:5
 1e07d36:    38 02             	[sp+12] = r0			  ## l2cap.c:506:5
 1e07d38:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e07d3c:    1c 24             	if (r2 == 0) goto 56 <l2cap_send_signaling_packet+0x5E : 1e07d76 >
 1e07d3e:    80 70             	r0 = 8
 1e07d40:    92 04             	r2 = r2.b0 (s)			  ## l2cap_signaling.c:161:17
 1e07d42:    23 fc cf ff       	r3 = r2 + -49			  ## l2cap_signaling.c:161:9
 1e07d46:    23 e0 0a 20       	if (r3 >= 2) goto 20 <l2cap_send_signaling_packet+0x46 : 1e07d5e >			  ## l2cap_signaling.c:161:9
 1e07d4a:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:164:20
 1e07d4c:    42 80             	r2 += 4			  ## l2cap_signaling.c:164:20
 1e07d4e:    3a 02             	[sp+12] = r2			  ## l2cap_signaling.c:164:20
 1e07d50:    03 f9 ff 1f       	r3 = b[r1 + -1] (u)			  ## l2cap_signaling.c:167:17
 1e07d54:    22 70             	r2 = 2			  ## l2cap_signaling.c:167:17
 1e07d56:    23 e3 09 00       	if (r3 == 50) goto 18 <l2cap_send_signaling_packet+0x54 : 1e07d6c >			  ## l2cap_signaling.c:167:17
 1e07d5a:    12 70             	r2 = 1
 1e07d5c:    07 18             	goto 14 <l2cap_send_signaling_packet+0x54 : 1e07d6c >
 1e07d5e:    42 e4 06 10       	if (r2 != 68) goto 12 <l2cap_send_signaling_packet+0x56 : 1e07d6e >
 1e07d62:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:173:20
 1e07d64:    43 94             	r3 = r2 + 4			  ## l2cap_signaling.c:173:20
 1e07d66:    3b 02             	[sp+12] = r3			  ## l2cap_signaling.c:173:20
 1e07d68:    02 44             	r2 = [r2 + 0]			  ## l2cap_signaling.c:173:20
 1e07d6a:    20 04             	r0 = r0.l (u)			  ## l2cap_signaling.c:174:17
 1e07d6c:    20 09             	r0 += r2
 1e07d6e:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e07d72:    e6 35             	if (r2 != 0) goto -52 <l2cap_send_signaling_packet+0x28 : 1e07d40 >			  ## l2cap_signaling.c:160:12
 1e07d74:    01 18             	goto 2 <l2cap_send_signaling_packet+0x60 : 1e07d78 >			  ## l2cap_signaling.c:160:12
 1e07d76:    80 70             	r0 = 8
 1e07d78:    20 04             	r0 = r0.l (u)			  ## l2cap.c:510:18
 1e07d7a:    61 17             	call -318 <hci_get_outgoing_acl_packet_buffer : 1e07c3e >			  ## l2cap.c:510:18
 1e07d7c:    07 08             	r7 = r0			  ## l2cap.c:510:18
 1e07d7e:    02 3e             	if (r7 != 0) goto 4 <l2cap_send_signaling_packet+0x6C : 1e07d84 >
 1e07d80:    8f f3 49 db       	call 2078354 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e07d84:    40 a2             	r0 = sp + 36
 1e07d86:    28 02             	[sp+8] = r0			  ## l2cap.c:512:5
 1e07d88:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:188:12
 1e07d8a:    80 05             	r0 = r6.b0 (u)			  ## l2cap_signaling.c:188:72
 1e07d8c:    12 70             	r2 = 1			  ## l2cap_signaling.c:188:12
 1e07d8e:    08 02             	[sp] = r0			  ## l2cap_signaling.c:188:12
 1e07d90:    70 08             	r0 = r7			  ## l2cap_signaling.c:188:12
 1e07d92:    51 08             	r1 = r5			  ## l2cap_signaling.c:188:12
 1e07d94:    43 08             	r3 = r4			  ## l2cap_signaling.c:188:12
 1e07d96:    60 17             	call -320 <l2cap_create_signaling_internal : 1e07c58 >			  ## l2cap_signaling.c:188:12
 1e07d98:    01 08             	r1 = r0			  ## l2cap_signaling.c:188:12
 1e07d9a:    70 08             	r0 = r7			  ## l2cap.c:516:12
 1e07d9c:    bb 17             	call -138 <bredr_hci_send_acl_packet : 1e07d14 >			  ## l2cap.c:516:12
 1e07d9e:    08 0a             	sp += 16			  ## l2cap.c:516:12
 1e07da0:    17 01             	{rets, r7-r4} = [sp++]			  ## l2cap.c:516:12
 1e07da2:    02 0a             	sp += 4			  ## l2cap.c:516:12
 1e07da4:    20 00             	rts			  ## l2cap.c:516:12


hci_number_free_acl_slots_for_connection_type:
 1e07da6:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_vendor.c:1958:0
 1e07da8:    c2 ff 60 18 00 00 	r2 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1958:0
 1e07dae:    04 44             	r4 = [r2 + 0]			  ## hci_vendor.c:1958:0
 1e07db0:    01 70             	r1 = 0			  ## hci_vendor.c:1958:0
 1e07db2:    03 70             	r3 = 0			  ## hci_vendor.c:1958:0
 1e07db4:    09 28             	if (r4 == 0) goto 18 <hci_number_free_acl_slots_for_connection_type+0x22 : 1e07dc8 >			  ## hci_vendor.c:1958:0
 1e07db6:    35 48             	r5 = [r4 + 12]			  ## hci_vendor.c:1965:25
 1e07db8:    00 ff ff 50 03 00 	if (r5 == 255) goto 6 <hci_number_free_acl_slots_for_connection_type+0x1E : 1e07dc4 >			  ## hci_vendor.c:1965:25
 1e07dbe:    05 f9 b6 44       	r5 = b[r4 + 1206] (u)
 1e07dc2:    53 09             	r3 += r5			  ## hci_vendor.c:1969:33
 1e07dc4:    04 48             	r4 = [r4 + 0]
 1e07dc6:    f7 39             	if (r4 != 0) goto -18 <hci_number_free_acl_slots_for_connection_type+0x10 : 1e07db6 >
 1e07dc8:    02 f9 1a 22       	r2 = b[r2 + 538] (u)			  ## hci_vendor.c:1981:22
 1e07dcc:    03 24             	if (r2 == 0) goto 6 <hci_number_free_acl_slots_for_connection_type+0x2E : 1e07dd4 >			  ## hci_vendor.c:1981:22
 1e07dce:    e1 b4             	r1 = r2 - r3			  ## hci_vendor.c:1983:63
 1e07dd0:    01 e0 08 b0       	ifs (r1 < 0) goto 16 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e07de4 >
 1e07dd4:    00 ff fe 00 05 00 	if (r0 == 254) goto 10 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e07de4 >
 1e07dda:    01 ff ff 00 04 00 	if (r0 != 255) goto 8 <hci_number_free_acl_slots_for_connection_type+0x42 : 1e07de8 >
 1e07de0:    10 70             	r0 = 1
 1e07de2:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2015:1
 1e07de4:    00 70             	r0 = 0
 1e07de6:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2015:1
 1e07de8:    10 70             	r0 = 1			  ## hci_vendor.c:2013:9
 1e07dea:    01 24             	if (r2 == 0) goto 2 <hci_number_free_acl_slots_for_connection_type+0x48 : 1e07dee >
 1e07dec:    10 08             	r0 = r1			  ## hci_vendor.c:2013:9
 1e07dee:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2015:1


hci_number_free_acl_slots_for_handle:
 1e07df0:    34 00             	[--sp] = rets			  ## hci_vendor.c:2018:0
 1e07df2:    bf f3 e3 f9       	call -3130 <le_hci_connection_for_handle : 1e071bc >			  ## hci_vendor.c:2020:39
 1e07df6:    03 20             	if (r0 == 0) goto 6 <hci_number_free_acl_slots_for_handle+0xE : 1e07dfe >
 1e07df8:    30 40             	r0 = [r0 + 12]			  ## hci_vendor.c:2024:70
 1e07dfa:    88 01             	{rets} = [sp++]			  ## hci_vendor.c:2024:12
 1e07dfc:    d4 1f             	goto -88 <hci_number_free_acl_slots_for_connection_type : 1e07da6 >			  ## hci_vendor.c:2024:12
 1e07dfe:    00 70             	r0 = 0
 1e07e00:    30 00             	pc = [sp++]			  ## hci_vendor.c:2025:1


hci_can_send_acl_packet_now:
 1e07e02:    34 00             	[--sp] = rets			  ## hci_vendor.c:1781:0
 1e07e04:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1782:22
 1e07e0a:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1782:22
 1e07e0e:    01 08             	r1 = r0			  ## hci_vendor.c:1782:22
 1e07e10:    00 70             	r0 = 0
 1e07e12:    07 34             	if (r2 != 0) goto 14 <hci_can_send_acl_packet_now+0x20 : 1e07e22 >
 1e07e14:    10 08             	r0 = r1			  ## hci_vendor.c:2042:12
 1e07e16:    ec 17             	call -40 <hci_number_free_acl_slots_for_handle : 1e07df0 >			  ## hci_vendor.c:2042:12
 1e07e18:    01 08             	r1 = r0			  ## hci_vendor.c:2042:12
 1e07e1a:    10 70             	r0 = 1			  ## hci_vendor.c:2042:61
 1e07e1c:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_packet_now+0x20 : 1e07e22 >			  ## hci_vendor.c:2042:61
 1e07e20:    00 70             	r0 = 0			  ## hci_vendor.c:2042:61
 1e07e22:    30 00             	pc = [sp++]			  ## hci_vendor.c:1786:1


hci_reserve_packet_buffer:
 1e07e24:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1789:0
 1e07e2a:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1790:22
 1e07e2e:    00 70             	r0 = 0			  ## hci_vendor.c:1790:22
 1e07e30:    03 34             	if (r2 != 0) goto 6 <hci_reserve_packet_buffer+0x14 : 1e07e38 >			  ## hci_vendor.c:1790:22
 1e07e32:    10 70             	r0 = 1
 1e07e34:    10 f9 15 12       	b[r1 + 533] = r0			  ## hci_vendor.c:1793:45
 1e07e38:    20 00             	rts			  ## hci_vendor.c:1795:1


le_hci_send_acl_packet_fragments:
 1e07e3a:    7b 01             	[--sp] = {rets, r11-r4}			  ## hci_vendor.c:1123:0
 1e07e3c:    cb ff 60 18 00 00 	r11 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1123:0
 1e07e42:    04 f7 1c b2       	r4 = h[r11 + 540] (u)			  ## hci_vendor.c:1123:0
 1e07e46:    0a 08             	r10 = r0			  ## hci_vendor.c:1123:0
 1e07e48:    09 70             	r9 = 0			  ## hci_vendor.c:1123:0
 1e07e4a:    c8 ff ff df 00 00 	r8 = 57343 <_nv_pre_end+0x24FF : dfff >			  ## hci_vendor.c:1123:0
 1e07e50:    05 f7 16 b2       	r5 = h[r11 + 534] (u)			  ## hci_vendor.c:1131:54
 1e07e54:    00 f7 18 b2       	r0 = h[r11 + 536] (u)			  ## hci_vendor.c:1132:46
 1e07e58:    67 b1             	r7 = r0 - r5			  ## hci_vendor.c:1132:88
 1e07e5a:    46 08             	r6 = r4			  ## hci_vendor.c:1136:13
 1e07e5c:    47 f2 01 c0       	ifs (r7 > r4) goto 2 <le_hci_send_acl_packet_fragments+0x28 : 1e07e62 >			  ## hci_vendor.c:1136:13
 1e07e60:    76 08             	r6 = r7			  ## hci_vendor.c:1136:13
 1e07e62:    50 fc fc ff       	r0 = r5 + -4			  ## hci_vendor.c:1131:76
 1e07e66:    23 04             	r3 = r0.l (u)			  ## hci_vendor.c:1131:76
 1e07e68:    0e 26             	if (r3 == 0) goto 28 <le_hci_send_acl_packet_fragments+0x4C : 1e07e86 >			  ## hci_vendor.c:1131:76
 1e07e6a:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## hci_vendor.c:1143:41
 1e07e6e:    01 f9 08 b0       	r1 = b[r11 + 8] (u)			  ## hci_vendor.c:1143:41
 1e07e72:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1144:60
 1e07e76:    00 fd 10 1a       	r0 = r1 | 4096			  ## hci_vendor.c:1144:60
 1e07e7a:    e2 fd 80 20       	r2 = r0 & r8			  ## hci_vendor.c:1145:13
 1e07e7e:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1143:41
 1e07e82:    31 08             	r1 = r3			  ## hci_vendor.c:1145:13
 1e07e84:    e1 16             	call -574 <bt_store_16 : 1e07c48 >			  ## hci_vendor.c:1145:13
 1e07e86:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1149:9
 1e07e8a:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1149:9
 1e07e8c:    51 fc fe ff       	r1 = r5 + -2			  ## hci_vendor.c:1149:68
 1e07e90:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1149:9
 1e07e92:    da 16             	call -588 <bt_store_16 : 1e07c48 >			  ## hci_vendor.c:1149:9
 1e07e94:    00 f9 b6 a4       	r0 = b[r10 + 1206] (u)			  ## hci_vendor.c:1152:41
 1e07e98:    10 80             	r0 += 1			  ## hci_vendor.c:1152:41
 1e07e9a:    10 f9 b6 a4       	b[r10 + 1206] = r0			  ## hci_vendor.c:1152:41
 1e07e9e:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x74 : 1e07eae >			  ## hci_vendor.c:1155:13
 1e07ea2:    00 f7 16 b2       	r0 = h[r11 + 534] (u)			  ## hci_vendor.c:1157:48
 1e07ea6:    60 09             	r0 += r6			  ## hci_vendor.c:1157:48
 1e07ea8:    10 f7 16 b2       	h[r11 + 534] = r0			  ## hci_vendor.c:1157:48
 1e07eac:    04 18             	goto 8 <le_hci_send_acl_packet_fragments+0x7C : 1e07eb6 >			  ## hci_vendor.c:1157:48
 1e07eae:    19 f7 16 b2       	h[r11 + 534] = r9			  ## hci_vendor.c:1160:48
 1e07eb2:    19 f7 18 b2       	h[r11 + 536] = r9			  ## hci_vendor.c:1161:55
 1e07eb6:    80 fb b0 03       	r0 = r3 + r11			  ## hci_vendor.c:1165:28
 1e07eba:    80 80             	r0 += 8			  ## hci_vendor.c:1165:28
 1e07ebc:    41 9c             	r1 = r6 + 4			  ## hci_vendor.c:1166:57
 1e07ebe:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1168:9
 1e07ec0:    80 f3 6d 4d       	call 39642 <le_hci_send_acl_packet : 1e1199e >			  ## hci_vendor.c:1168:9
 1e07ec4:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x9A : 1e07ed4 >			  ## hci_vendor.c:1171:13
 1e07ec8:    00 f7 0a a0       	r0 = h[r10 + 10] (u)			  ## hci_vendor.c:2042:12
 1e07ecc:    91 17             	call -222 <hci_number_free_acl_slots_for_handle : 1e07df0 >			  ## hci_vendor.c:2042:12
 1e07ece:    00 e0 bf cf       	ifs (r0 > 0) goto -130 <le_hci_send_acl_packet_fragments+0x16 : 1e07e50 >			  ## hci_vendor.c:2042:12
 1e07ed2:    5b 01             	{pc, r11-r4} = [sp++]			  ## hci_vendor.c:2042:12
 1e07ed4:    b0 fc 15 02       	r0 = r11 + 533			  ## hci_vendor.c:1875:45
 1e07ed8:    01 70             	r1 = 0			  ## hci_vendor.c:1875:45
 1e07eda:    52 70             	r2 = 5			  ## hci_vendor.c:1875:45
 1e07edc:    97 f3 08 f8       	call 3141648 <memset : 106ef0 >			  ## hci_vendor.c:1875:45
 1e07ee0:    5b 01             	{pc, r11-r4} = [sp++]


hci_le_send_acl_packet_buffer:
 1e07ee2:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1223:0
 1e07ee4:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1223:0
 1e07eea:    01 f9 15 72       	r1 = b[r7 + 533] (u)			  ## hci_vendor.c:1225:23
 1e07eee:    05 08             	r5 = r0			  ## hci_vendor.c:1225:23
 1e07ef0:    74 75             	r4 = 87			  ## hci_vendor.c:1225:23
 1e07ef2:    1e 22             	if (r1 == 0) goto 60 <hci_le_send_acl_packet_buffer+0x4E : 1e07f30 >			  ## hci_vendor.c:1225:23
 1e07ef4:    90 6e             	r0 = b[r7 + 9] (u)			  ## hci_vendor.c:1230:35
 1e07ef6:    81 6e             	r1 = b[r7 + 8] (u)			  ## hci_vendor.c:1230:35
 1e07ef8:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:1230:35
 1e07efa:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:1230:35
 1e07efe:    e0 fd 10 60       	r6 = r0 | r1			  ## hci_vendor.c:1230:35
 1e07f02:    60 08             	r0 = r6			  ## hci_vendor.c:2042:12
 1e07f04:    75 17             	call -278 <hci_number_free_acl_slots_for_handle : 1e07df0 >			  ## hci_vendor.c:2042:12
 1e07f06:    00 e0 0c d0       	ifs (r0 <= 0) goto 24 <hci_le_send_acl_packet_buffer+0x40 : 1e07f22 >			  ## hci_vendor.c:2042:12
 1e07f0a:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1238:39
 1e07f0c:    bf f3 56 f9       	call -3412 <le_hci_connection_for_handle : 1e071bc >			  ## hci_vendor.c:1238:39
 1e07f10:    0c 20             	if (r0 == 0) goto 24 <hci_le_send_acl_packet_buffer+0x48 : 1e07f2a >
 1e07f12:    15 f7 18 72       	h[r7 + 536] = r5			  ## hci_vendor.c:1250:47
 1e07f16:    41 70             	r1 = 4			  ## hci_vendor.c:1252:40
 1e07f18:    11 f7 16 72       	h[r7 + 534] = r1			  ## hci_vendor.c:1252:40
 1e07f1c:    8e 17             	call -228 <le_hci_send_acl_packet_fragments : 1e07e3a >			  ## hci_vendor.c:1254:12
 1e07f1e:    04 70             	r4 = 0
 1e07f20:    07 18             	goto 14 <hci_le_send_acl_packet_buffer+0x4E : 1e07f30 >
 1e07f22:    00 70             	r0 = 0			  ## hci_vendor.c:1875:45
 1e07f24:    10 f9 15 72       	b[r7 + 533] = r0			  ## hci_vendor.c:1875:45
 1e07f28:    03 18             	goto 6 <hci_le_send_acl_packet_buffer+0x4E : 1e07f30 >			  ## hci_vendor.c:1875:45
 1e07f2a:    04 70             	r4 = 0
 1e07f2c:    14 f9 15 72       	b[r7 + 533] = r4			  ## hci_vendor.c:1875:45
 1e07f30:    40 08             	r0 = r4			  ## hci_vendor.c:1255:1
 1e07f32:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1255:1


l2cap_send_le_signaling_packet:
 1e07f34:    63 01             	[--sp] = {r3}			  ## l2cap.c:523:0
 1e07f36:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:523:0
 1e07f38:    fa 0b             	sp += -12			  ## l2cap.c:523:0
 1e07f3a:    26 08             	r6 = r2			  ## l2cap.c:523:0
 1e07f3c:    14 08             	r4 = r1			  ## l2cap.c:523:0
 1e07f3e:    05 08             	r5 = r0			  ## l2cap.c:523:0
 1e07f40:    60 17             	call -320 <hci_can_send_acl_packet_now : 1e07e02 >			  ## l2cap.c:529:10
 1e07f42:    0e 20             	if (r0 == 0) goto 28 <l2cap_send_le_signaling_packet+0x2C : 1e07f60 >			  ## l2cap.c:529:10
 1e07f44:    6f 17             	call -290 <hci_reserve_packet_buffer : 1e07e24 >			  ## l2cap.c:533:5
 1e07f46:    c0 a1             	r0 = sp + 28			  ## l2cap.c:533:5
 1e07f48:    28 02             	[sp+8] = r0			  ## l2cap.c:537:5
 1e07f4a:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:194:12
 1e07f4c:    81 05             	r1 = r6.b0 (u)			  ## l2cap_signaling.c:194:72
 1e07f4e:    c0 ff 68 18 00 00 	r0 = 6248 <report_irq_stack_end+0x8 : 1868 >			  ## l2cap_signaling.c:194:12
 1e07f54:    52 70             	r2 = 5			  ## l2cap_signaling.c:194:12
 1e07f56:    09 02             	[sp] = r1			  ## l2cap_signaling.c:194:12
 1e07f58:    51 08             	r1 = r5			  ## l2cap_signaling.c:194:12
 1e07f5a:    43 08             	r3 = r4			  ## l2cap_signaling.c:194:12
 1e07f5c:    7d 16             	call -774 <l2cap_create_signaling_internal : 1e07c58 >			  ## l2cap_signaling.c:194:12
 1e07f5e:    c1 17             	call -126 <hci_le_send_acl_packet_buffer : 1e07ee2 >			  ## l2cap.c:541:5
 1e07f60:    06 0a             	sp += 12
 1e07f62:    16 01             	{rets, r6-r4} = [sp++]			  ## l2cap.c:542:1
 1e07f64:    02 0a             	sp += 4			  ## l2cap.c:542:1
 1e07f66:    20 00             	rts			  ## l2cap.c:542:1


btstack_memory_l2cap_channel_free:
 1e07f68:    41 70             	r1 = 4			  ## btstack_memory.c:133:0
 1e07f6a:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:133:0
 1e07f6c:    05 24             	if (r2 == 0) goto 10 <btstack_memory_l2cap_channel_free+0x10 : 1e07f78 >			  ## btstack_memory.c:133:0
 1e07f6e:    23 08             	r3 = r2			  ## btstack_memory.c:133:0
 1e07f70:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_l2cap_channel_free+0x14 : 1e07f7c >			  ## btstack_memory.c:133:0
 1e07f74:    03 46             	r3 = [r3 + 0]			  ## btstack_memory.c:133:0
 1e07f76:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_l2cap_channel_free+0x8 : 1e07f70 >			  ## btstack_memory.c:133:0
 1e07f78:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e07f7a:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e07f7c:    20 00             	rts			  ## btstack_memory.c:135:1


l2cap_dispatch:
 1e07f7e:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:310:0
 1e07f80:    fe 0b             	sp += -4			  ## l2cap.c:310:0
 1e07f82:    36 40             	r6 = [r0 + 12]			  ## l2cap.c:311:18
 1e07f84:    f4 50             	r4 = h[r0 + 30] (u)			  ## l2cap.c:314:94
 1e07f86:    25 08             	r5 = r2			  ## l2cap.c:314:94
 1e07f88:    03 2c             	if (r6 == 0) goto 6 <l2cap_dispatch+0x12 : 1e07f90 >			  ## l2cap.c:311:9
 1e07f8a:    10 08             	r0 = r1			  ## l2cap.c:312:9
 1e07f8c:    41 08             	r1 = r4			  ## l2cap.c:312:9
 1e07f8e:    09 18             	goto 18 <l2cap_dispatch+0x24 : 1e07fa2 >
 1e07f90:    c2 ff 98 1a 00 00 	r2 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:314:11
 1e07f96:    02 44             	r2 = [r2 + 0]			  ## l2cap.c:314:11
 1e07f98:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:314:49
 1e07f9a:    06 44             	r6 = [r2 + 0]			  ## l2cap.c:314:24
 1e07f9c:    0b 02             	[sp] = r3			  ## l2cap.c:314:9
 1e07f9e:    42 08             	r2 = r4			  ## l2cap.c:314:9
 1e07fa0:    53 08             	r3 = r5			  ## l2cap.c:314:9
 1e07fa2:    86 00             	call r6
 1e07fa4:    02 0a             	sp += 4
 1e07fa6:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:316:1


l2cap_emit_channel_opened:
 1e07fa8:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:319:0
 1e07faa:    f4 0b             	sp += -24			  ## l2cap.c:319:0
 1e07fac:    04 08             	r4 = r0			  ## l2cap.c:319:0
 1e07fae:    00 77             	r0 = 112			  ## l2cap.c:325:14
 1e07fb0:    d0 f5 03 00       	b[sp+3] = r0			  ## l2cap.c:325:14
 1e07fb4:    30 71             	r0 = 19			  ## l2cap.c:325:14
 1e07fb6:    d0 f5 04 00       	b[sp+4] = r0			  ## l2cap.c:326:14
 1e07fba:    d1 f5 05 00       	b[sp+5] = r1			  ## l2cap.c:327:14
 1e07fbe:    35 a0             	r5 = sp + 3			  ## l2cap.c:327:14
 1e07fc0:    30 9a             	r0 = r5 + 3			  ## l2cap.c:328:19
 1e07fc2:    61 99             	r1 = r4 + 22			  ## l2cap.c:328:29
 1e07fc4:    62 70             	r2 = 6			  ## utils.c:188:5
 1e07fc6:    97 f3 8d f7       	call 3141402 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e07fca:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:329:37
 1e07fcc:    d0 f5 0c 00       	b[sp+12] = r0			  ## utils.c:160:19
 1e07fd0:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07fd2:    d0 f5 0d 00       	b[sp+13] = r0			  ## utils.c:161:19
 1e07fd6:    e0 58             	r0 = h[r4 + 28] (u)			  ## l2cap.c:330:55
 1e07fd8:    d0 f5 0e 00       	b[sp+14] = r0			  ## utils.c:160:19
 1e07fdc:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07fde:    d0 f5 0f 00       	b[sp+15] = r0			  ## utils.c:161:19
 1e07fe2:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:331:55
 1e07fe4:    d0 f5 10 00       	b[sp+16] = r0			  ## utils.c:160:19
 1e07fe8:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07fea:    d0 f5 11 00       	b[sp+17] = r0			  ## utils.c:161:19
 1e07fee:    00 59             	r0 = h[r4 + 32] (u)			  ## l2cap.c:332:55
 1e07ff0:    d0 f5 12 00       	b[sp+18] = r0			  ## utils.c:160:19
 1e07ff4:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07ff6:    d0 f5 13 00       	b[sp+19] = r0			  ## utils.c:161:19
 1e07ffa:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:333:55
 1e07ffc:    d0 f5 14 00       	b[sp+20] = r0			  ## utils.c:160:19
 1e08000:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08002:    d0 f5 15 00       	b[sp+21] = r0			  ## utils.c:161:19
 1e08006:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:334:55
 1e08008:    d0 f5 16 00       	b[sp+22] = r0			  ## utils.c:160:19
 1e0800c:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0800e:    d0 f5 17 00       	b[sp+23] = r0			  ## utils.c:161:19
 1e08012:    41 70             	r1 = 4			  ## l2cap.c:335:5
 1e08014:    53 71             	r3 = 21			  ## l2cap.c:335:5
 1e08016:    40 08             	r0 = r4			  ## l2cap.c:335:5
 1e08018:    52 08             	r2 = r5			  ## l2cap.c:335:5
 1e0801a:    b1 17             	call -158 <l2cap_dispatch : 1e07f7e >			  ## l2cap.c:335:5
 1e0801c:    0c 0a             	sp += 24			  ## l2cap.c:335:5
 1e0801e:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:336:1


l2cap_emit_credits:
 1e08020:    34 00             	[--sp] = rets			  ## l2cap.c:367:0
 1e08022:    fc 0b             	sp += -8			  ## l2cap.c:367:0
 1e08024:    42 77             	r2 = 116			  ## l2cap.c:372:14
 1e08026:    d2 f5 03 00       	b[sp+3] = r2			  ## l2cap.c:372:14
 1e0802a:    32 70             	r2 = 3			  ## l2cap.c:372:14
 1e0802c:    d2 f5 04 00       	b[sp+4] = r2			  ## l2cap.c:373:14
 1e08030:    f2 50             	r2 = h[r0 + 30] (u)			  ## l2cap.c:374:54
 1e08032:    d2 f5 05 00       	b[sp+5] = r2			  ## utils.c:160:19
 1e08036:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e08038:    d2 f5 06 00       	b[sp+6] = r2			  ## utils.c:161:19
 1e0803c:    d1 f5 07 00       	b[sp+7] = r1			  ## l2cap.c:375:14
 1e08040:    32 a0             	r2 = sp + 3			  ## l2cap.c:375:14
 1e08042:    41 70             	r1 = 4			  ## l2cap.c:376:5
 1e08044:    53 70             	r3 = 5			  ## l2cap.c:376:5
 1e08046:    9b 17             	call -202 <l2cap_dispatch : 1e07f7e >			  ## l2cap.c:376:5
 1e08048:    04 0a             	sp += 8
 1e0804a:    30 00             	pc = [sp++]			  ## l2cap.c:377:1


l2cap_emit_channel_closed:
 1e0804c:    34 00             	[--sp] = rets			  ## l2cap.c:339:0
 1e0804e:    fe 0b             	sp += -4			  ## l2cap.c:339:0
 1e08050:    11 77             	r1 = 113			  ## l2cap.c:344:14
 1e08052:    d1 f5 00 00       	b[sp] = r1			  ## l2cap.c:344:14
 1e08056:    21 70             	r1 = 2			  ## l2cap.c:344:14
 1e08058:    d1 f5 01 00       	b[sp+1] = r1			  ## l2cap.c:345:14
 1e0805c:    f1 50             	r1 = h[r0 + 30] (u)			  ## l2cap.c:346:54
 1e0805e:    d1 f5 02 00       	b[sp+2] = r1			  ## utils.c:160:19
 1e08062:    09 d2             	r1 = r1 >> 8			  ## utils.c:161:21
 1e08064:    d1 f5 03 00       	b[sp+3] = r1			  ## utils.c:161:19
 1e08068:    02 a0             	r2 = sp + 0			  ## utils.c:161:19
 1e0806a:    41 70             	r1 = 4			  ## l2cap.c:347:5
 1e0806c:    43 70             	r3 = 4			  ## l2cap.c:347:5
 1e0806e:    87 17             	call -242 <l2cap_dispatch : 1e07f7e >			  ## l2cap.c:347:5
 1e08070:    02 0a             	sp += 4
 1e08072:    30 00             	pc = [sp++]			  ## l2cap.c:348:1


l2cap_finialize_channel_close:
 1e08074:    74 01             	[--sp] = {rets, r4}			  ## l2cap.c:2189:0
 1e08076:    04 08             	r4 = r0			  ## l2cap.c:2189:0
 1e08078:    10 70             	r0 = 1			  ## l2cap.c:2190:38
 1e0807a:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:2190:38
 1e0807c:    40 08             	r0 = r4			  ## l2cap.c:2191:5
 1e0807e:    e6 17             	call -52 <l2cap_emit_channel_closed : 1e0804c >			  ## l2cap.c:2191:5
 1e08080:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2193:5
 1e08086:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:2193:5
 1e08088:    80 80             	r0 += 8			  ## l2cap.c:2193:5
 1e0808a:    41 08             	r1 = r4			  ## l2cap.c:2193:5
 1e0808c:    bf f3 5c f7       	call -4424 <btstack_linked_list_remove : 1e06f48 >			  ## l2cap.c:2193:5
 1e08090:    40 08             	r0 = r4			  ## l2cap.c:2207:5
 1e08092:    14 01             	{rets, r4} = [sp++]			  ## l2cap.c:2207:5
 1e08094:    69 1f             	goto -302 <btstack_memory_l2cap_channel_free : 1e07f68 >			  ## l2cap.c:2207:5


btstack_linked_list_iterator_init:
 1e08096:    c0 f4 00 09       	[r0 + 0] = 0			  ## btstack_linked_list.c:160:0
 1e0809a:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:162:14
 1e0809c:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:163:16
 1e0809e:    29 40             	[r0 + 8] = r1			  ## btstack_linked_list.c:163:14
 1e080a0:    20 00             	rts			  ## btstack_linked_list.c:164:1


hci_connections_get_iterator:
 1e080a2:    c1 ff 60 18 00 00 	r1 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:1798:0
 1e080a8:    f6 1f             	goto -20 <btstack_linked_list_iterator_init : 1e08096 >			  ## hci_vendor.c:1799:5


l2cap_run:
 1e080aa:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:617:0
 1e080ac:    e6 0b             	sp += -52			  ## l2cap.c:617:0
 1e080ae:    cb ff 98 1a 00 00 	r11 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:617:0
 1e080b4:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:631:12
 1e080b8:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:631:42
 1e080ba:    70 22             	if (r1 == 0) goto 224 <l2cap_run+0xF2 : 1e0819c >			  ## l2cap.c:631:42
 1e080bc:    18 70             	r8 = 1
 1e080be:    0a 70             	r10 = 0
 1e080c0:    49 70             	r9 = 4
 1e080c2:    17 70             	r7 = 1
 1e080c4:    f1 60             	r1 = b[r0 + 15] (u)
 1e080c6:    96 50             	r6 = h[r0 + 18] (u)			  ## l2cap.c:635:73
 1e080c8:    e4 60             	r4 = b[r0 + 14] (u)			  ## l2cap.c:634:71
 1e080ca:    65 50             	r5 = h[r0 + 12] (u)			  ## l2cap.c:633:71
 1e080cc:    91 e0 12 d0       	ifs (r1 <= 9) goto 36 <l2cap_run+0x4A : 1e080f4 >			  ## l2cap.c:633:71
 1e080d0:    a1 e0 1e 00       	if (r1 == 10) goto 60 <l2cap_run+0x66 : 1e08110 >
 1e080d4:    41 e1 28 00       	if (r1 == 20) goto 80 <l2cap_run+0x7E : 1e08128 >
 1e080d8:    f1 e1 43 10       	if (r1 != 31) goto 134 <l2cap_run+0xB8 : 1e08162 >
 1e080dc:    50 08             	r0 = r5			  ## l2cap.c:681:22
 1e080de:    91 16             	call -734 <hci_can_send_acl_packet_now : 1e07e02 >			  ## l2cap.c:681:22
 1e080e0:    58 20             	if (r0 == 0) goto 176 <l2cap_run+0xE8 : 1e08192 >			  ## l2cap.c:681:22
 1e080e2:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:686:17
 1e080e6:    11 70             	r1 = 1			  ## l2cap.c:686:17
 1e080e8:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:686:17
 1e080ec:    50 08             	r0 = r5			  ## l2cap.c:686:17
 1e080ee:    42 08             	r2 = r4			  ## l2cap.c:686:17
 1e080f0:    63 08             	r3 = r6			  ## l2cap.c:686:17
 1e080f2:    28 18             	goto 80 <l2cap_run+0x9A : 1e08144 >			  ## l2cap.c:686:17
 1e080f4:    11 e0 28 00       	if (r1 == 1) goto 80 <l2cap_run+0x9E : 1e08148 >
 1e080f8:    21 e0 33 10       	if (r1 != 2) goto 102 <l2cap_run+0xB8 : 1e08162 >
 1e080fc:    18 f5 08 00       	[sp+8] = r8			  ## l2cap.c:641:13
 1e08100:    1e 02             	[sp+4] = r6			  ## l2cap.c:641:13
 1e08102:    31 70             	r1 = 3			  ## l2cap.c:641:13
 1e08104:    03 70             	r3 = 0			  ## l2cap.c:641:13
 1e08106:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:641:13
 1e0810a:    50 08             	r0 = r5			  ## l2cap.c:641:13
 1e0810c:    42 08             	r2 = r4			  ## l2cap.c:641:13
 1e0810e:    28 18             	goto 80 <l2cap_run+0xB6 : 1e08160 >			  ## l2cap.c:641:13
 1e08110:    26 e0 1c 10       	if (r6 != 2) goto 56 <l2cap_run+0xA2 : 1e0814c >			  ## l2cap.c:651:17
 1e08114:    a0 40             	r0 = [r0 + 40]			  ## l2cap.c:652:62
 1e08116:    78 02             	[sp+28] = r0			  ## l2cap.c:652:21
 1e08118:    c0 a1             	r0 = sp + 28			  ## l2cap.c:652:21
 1e0811a:    28 02             	[sp+8] = r0			  ## l2cap.c:654:17
 1e0811c:    19 f5 04 00       	[sp+4] = r9			  ## l2cap.c:654:17
 1e08120:    b1 70             	r1 = 11			  ## l2cap.c:654:17
 1e08122:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:654:17
 1e08126:    19 18             	goto 50 <l2cap_run+0xB0 : 1e0815a >			  ## l2cap.c:654:17
 1e08128:    50 08             	r0 = r5			  ## l2cap.c:669:22
 1e0812a:    6b 16             	call -810 <hci_can_send_acl_packet_now : 1e07e02 >			  ## l2cap.c:669:22
 1e0812c:    32 20             	if (r0 == 0) goto 100 <l2cap_run+0xE8 : 1e08192 >			  ## l2cap.c:669:22
 1e0812e:    3e 02             	[sp+12] = r6			  ## l2cap.c:674:17
 1e08130:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:674:17
 1e08134:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:674:17
 1e08138:    51 71             	r1 = 21			  ## l2cap.c:674:17
 1e0813a:    03 70             	r3 = 0			  ## l2cap.c:674:17
 1e0813c:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:674:17
 1e08140:    50 08             	r0 = r5			  ## l2cap.c:674:17
 1e08142:    42 08             	r2 = r4			  ## l2cap.c:674:17
 1e08144:    f7 16             	call -530 <l2cap_send_le_signaling_packet : 1e07f34 >
 1e08146:    0d 18             	goto 26 <l2cap_run+0xB8 : 1e08162 >
 1e08148:    11 70             	r1 = 1			  ## l2cap.c:662:13
 1e0814a:    07 18             	goto 14 <l2cap_run+0xB0 : 1e0815a >			  ## l2cap.c:662:13
 1e0814c:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:657:17
 1e08150:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:657:17
 1e08154:    b1 70             	r1 = 11			  ## l2cap.c:657:17
 1e08156:    18 f5 00 00       	[sp] = r8			  ## l2cap.c:657:17
 1e0815a:    50 08             	r0 = r5
 1e0815c:    42 08             	r2 = r4
 1e0815e:    63 08             	r3 = r6
 1e08160:    db 15             	call -1098 <l2cap_send_signaling_packet : 1e07d18 >
 1e08162:    00 f6 00 b0       	r0 = [r11 + 0]
 1e08166:    91 40             	r1 = [r0 + 36]
 1e08168:    00 f3 11 70       	if ((r7 & 1) == 0) goto 34 <l2cap_run+0xE4 : 1e0818e >
 1e0816c:    f1 8f             	r1 += -1			  ## l2cap.c:705:66
 1e0816e:    99 40             	[r0 + 36] = r1			  ## l2cap.c:705:66
 1e08170:    11 e0 0d b0       	ifs (r1 < 1) goto 26 <l2cap_run+0xE4 : 1e0818e >			  ## l2cap.c:705:66
 1e08174:    42 91             	r2 = r0 + 20			  ## l2cap.c:708:21
 1e08176:    03 70             	r3 = 0			  ## l2cap.c:708:21
 1e08178:    11 44             	r1 = [r2 + 4]			  ## l2cap.c:708:13
 1e0817a:    04 44             	r4 = [r2 + 0]			  ## l2cap.c:708:13
 1e0817c:    11 f6 fc 2f       	[r2 + -4] = r1			  ## l2cap.c:708:13
 1e08180:    14 f6 f8 2f       	[r2 + -8] = r4			  ## l2cap.c:708:13
 1e08184:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:707:55
 1e08186:    13 80             	r3 += 1			  ## l2cap.c:708:128
 1e08188:    82 80             	r2 += 8			  ## l2cap.c:707:23
 1e0818a:    13 f2 f5 bf       	ifs (r3 < r1) goto -22 <l2cap_run+0xCE : 1e08178 >			  ## l2cap.c:707:23
 1e0818e:    9a 33             	if (r1 != 0) goto -204 <l2cap_run+0x1A : 1e080c4 >
 1e08190:    05 18             	goto 10 <l2cap_run+0xF2 : 1e0819c >
 1e08192:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:631:12
 1e08196:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:631:42
 1e08198:    07 70             	r7 = 0			  ## l2cap.c:631:42
 1e0819a:    94 33             	if (r1 != 0) goto -216 <l2cap_run+0x1A : 1e080c4 >			  ## l2cap.c:631:42
 1e0819c:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:713:46
 1e0819e:    05 e0 57 01       	if (r5 == 0) goto 686 <.GJTIE555_0_0_+0x270 : 1e08450 >
 1e081a2:    c9 ff 90 09 00 00 	r9 = 2448 <stack_configs_app : 990 >
 1e081a8:    38 70             	r8 = 3
 1e081aa:    16 7e             	r6 = 225
 1e081ac:    1a 70             	r10 = 1
 1e081ae:    0e 70             	r14 = 0
 1e081b0:    7c 70             	r12 = 7
 1e081b2:    9f 70             	r15 = 9
 1e081b4:    54 08             	r4 = r5
 1e081b6:    20 69             	r0 = b[r4 + 18] (u)
 1e081b8:    05 48             	r5 = [r4 + 0]			  ## l2cap.c:716:20
 1e081ba:    e0 8f             	r0 += -2			  ## l2cap.c:720:9
 1e081bc:    c0 e0 46 81       	if (r0 > 12) goto 652 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:720:9
 1e081c0:    41 c0             	r1 = r0 << 1
 1e081c2:    0d 99             	r13 = r4 + 16			  ## l2cap.c:720:26
 1e081c4:    b1 00             	tbh [r1]			  ## l2cap.c:720:26


.GJTIL555_0_0_:
 1e081c6:    0d 00     < 13 : 0xD >
 1e081c8:    43 01     < 323 : 0x143 >
 1e081ca:    43 01     < 323 : 0x143 >
 1e081cc:    43 01     < 323 : 0x143 >
 1e081ce:    43 01     < 323 : 0x143 >
 1e081d0:    51 00     < 81 : 0x51 >
 1e081d2:    43 01     < 323 : 0x143 >
 1e081d4:    43 01     < 323 : 0x143 >
 1e081d6:    82 00     < 130 : 0x82 >
 1e081d8:    a5 00     < 165 : 0xA5 >
 1e081da:    b7 00     < 183 : 0xB7 >
 1e081dc:    c6 00     < 198 : 0xC6 >
 1e081de:    dd 00     < 221 : 0xDD >
 1e081e0:    18 f9 02 d0       	b[r13 + 2] = r8			  ## l2cap.c:725:46
 1e081e4:    00 f9 0b d0       	r0 = b[r13 + 11] (u)			  ## l2cap.c:727:13
 1e081e8:    01 f9 0a d0       	r1 = b[r13 + 10] (u)			  ## l2cap.c:727:13
 1e081ec:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:727:13
 1e081f0:    91 f5 30 00       	h[sp+48] = r1			  ## l2cap.c:727:13
 1e081f4:    00 f9 09 d0       	r0 = b[r13 + 9] (u)			  ## l2cap.c:727:13
 1e081f8:    01 f9 08 d0       	r1 = b[r13 + 8] (u)			  ## l2cap.c:727:13
 1e081fc:    02 f9 07 d0       	r2 = b[r13 + 7] (u)			  ## l2cap.c:727:13
 1e08200:    03 f9 06 d0       	r3 = b[r13 + 6] (u)			  ## l2cap.c:727:13
 1e08204:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:727:13
 1e08208:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## l2cap.c:727:13
 1e0820c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## l2cap.c:727:13
 1e08210:    bb 02             	[sp+44] = r3			  ## l2cap.c:727:13
 1e08212:    01 70             	r1 = 0
 1e08214:    00 70             	r0 = 0
 1e08216:    d1 e0 08 00       	if (r1 == 13) goto 16 <.GJTIE555_0_0_+0x4A : 1e0822a >
 1e0821a:    fa fd 10 26       	r2 = r6 >> r1			  ## hci_vendor.c:1648:38
 1e0821e:    20 f3 04 20       	if ((r2 & 1) != 0) goto 8 <.GJTIE555_0_0_+0x4A : 1e0822a >			  ## hci_vendor.c:1648:38
 1e08222:    f8 fd 10 2a       	r2 = r10 << r1			  ## hci_vendor.c:1652:31
 1e08226:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1652:26
 1e08228:    50 b4             	r0 |= r2			  ## hci_vendor.c:1652:26
 1e0822a:    11 80             	r1 += 1			  ## hci_vendor.c:1647:26
 1e0822c:    01 e1 f3 1f       	if (r1 != 16) goto -26 <.GJTIE555_0_0_+0x36 : 1e08216 >
 1e08230:    01 f9 14 90       	r1 = b[r9 + 20] (u)			  ## hci_vendor.c:1669:29
 1e08234:    02 f9 13 90       	r2 = b[r9 + 19] (u)			  ## hci_vendor.c:1669:29
 1e08238:    03 f9 12 90       	r3 = b[r9 + 18] (u)			  ## hci_vendor.c:1669:29
 1e0823c:    04 f9 11 90       	r4 = b[r9 + 17] (u)			  ## hci_vendor.c:1669:29
 1e08240:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:1669:29
 1e08244:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:1669:29
 1e08248:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:1669:29
 1e0824c:    01 fb aa ff       	r1 = -86 <bank_code_load_addr+0x1E5586 : 1ffffaa >			  ## hci_vendor.c:1669:9
 1e08250:    33 f3 01 40       	if ((r4 & 524288) != 0) goto 2 <.GJTIE555_0_0_+0x76 : 1e08256 >			  ## hci_vendor.c:1669:9
 1e08254:    01 70             	r1 = 0
 1e08256:    42 04             	r2 = r1.b0 (u)			  ## hci_vendor.c:1672:5
 1e08258:    01 fb 06 33       	r1 = 13062 <vCreateTaskStack+0x64 : 3306 >			  ## hci_vendor.c:1656:18
 1e0825c:    d0 b2             	r0 ^= r1			  ## hci_vendor.c:1656:18
 1e0825e:    21 04             	r1 = r0.l (u)			  ## hci_vendor.c:1672:5
 1e08260:    c0 a2             	r0 = sp + 44			  ## hci_vendor.c:1672:5
 1e08262:    80 f3 25 74       	call 59466 <lmp_hci_create_connection : 1e16ab0 >			  ## hci_vendor.c:1672:5
 1e08266:    f2 18             	goto 484 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## hci_vendor.c:1672:5
 1e08268:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:786:44
 1e0826a:    23 f3 93 00       	if ((r0 & 8) != 0) goto 294 <.GJTIE555_0_0_+0x1B4 : 1e08394 >			  ## l2cap.c:786:44
 1e0826e:    02 f3 e1 00       	if ((r0 & 4) == 0) goto 450 <.GJTIE555_0_0_+0x254 : 1e08434 >
 1e08272:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:610:107
 1e08276:    10 b2             	r0 |= 16			  ## l2cap.c:605:107
 1e08278:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e0827a:    01 f6 00 b0       	r1 = [r11 + 0]			  ## l2cap.c:123:9
 1e0827e:    12 fc 28 00       	r2 = r1 + 40			  ## l2cap.c:123:9
 1e08282:    c3 64             	r3 = b[r2 + 12] (u)			  ## l2cap.c:123:39
 1e08284:    1d 96             	r13 = r3 + 1			  ## l2cap.c:126:55
 1e08286:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e08288:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE555_0_0_+0xB0 : 1e08290 >			  ## l2cap.c:126:55
 1e0828e:    d1 08             	r1 = r13			  ## l2cap.c:123:9
 1e08290:    c9 64             	b[r2 + 12] = r1
 1e08292:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:828:57
 1e08294:    02 64             	r2 = b[r2 + 0] (u)			  ## l2cap.c:829:21
 1e08296:    24 f3 cd 20       	if ((r2 & 16) != 0) goto 410 <.GJTIE555_0_0_+0x254 : 1e08434 >			  ## l2cap.c:829:21
 1e0829a:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:843:39
 1e0829e:    20 70             	r0 = 2			  ## l2cap.c:844:39
 1e082a0:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:844:39
 1e082a4:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:845:85
 1e082a6:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e082aa:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e082ac:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e082b0:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:846:126
 1e082b2:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:846:21
 1e082b4:    02 a2             	r2 = sp + 32			  ## l2cap.c:846:21
 1e082b6:    2a 02             	[sp+8] = r2			  ## l2cap.c:846:21
 1e082b8:    42 70             	r2 = 4			  ## l2cap.c:846:21
 1e082ba:    1a 02             	[sp+4] = r2			  ## l2cap.c:846:21
 1e082bc:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:846:85
 1e082be:    41 70             	r1 = 4			  ## l2cap.c:846:21
 1e082c0:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:846:21
 1e082c4:    29 15             	call -1454 <l2cap_send_signaling_packet : 1e07d18 >			  ## l2cap.c:846:21
 1e082c6:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:846:21
 1e082c8:    b5 18             	goto 362 <.GJTIE555_0_0_+0x254 : 1e08434 >			  ## l2cap.c:846:21
 1e082ca:    d0 fc 06 00       	r0 = r13 + 6			  ## l2cap.c:770:49
 1e082ce:    31 72             	r1 = 35			  ## l2cap.c:770:17
 1e082d0:    02 70             	r2 = 0			  ## l2cap.c:770:17
 1e082d2:    54 14             	call -1880 <check_l2cap_authentication_flag : 1e07b7c >			  ## l2cap.c:770:17
 1e082d4:    10 e2 03 10       	if (r0 != 33) goto 6 <.GJTIE555_0_0_+0xFE : 1e082de >			  ## l2cap.c:770:17
 1e082d8:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## l2cap.c:771:17
 1e082dc:    b7 20             	if (r0 == 0) goto 366 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:771:17
 1e082de:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## l2cap.c:774:48
 1e082e2:    50 e0 e9 00       	if (r0 == 5) goto 466 <.GJTIE555_0_0_+0x2D8 : 1e084b8 >			  ## l2cap.c:774:48
 1e082e6:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e082ea:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e082ee:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e082f0:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e082f2:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE555_0_0_+0x11A : 1e082fa >			  ## l2cap.c:126:55
 1e082f8:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e082fa:    11 f9 34 00       	b[r0 + 52] = r1
 1e082fe:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:778:57
 1e08300:    50 70             	r0 = 5			  ## l2cap.c:779:51
 1e08302:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:779:51
 1e08304:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:780:17
 1e08306:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:780:83
 1e08308:    a1 70             	r1 = 10			  ## l2cap.c:780:17
 1e0830a:    23 70             	r3 = 2			  ## l2cap.c:780:17
 1e0830c:    05 15             	call -1526 <l2cap_send_signaling_packet : 1e07d18 >			  ## l2cap.c:780:17
 1e0830e:    9e 18             	goto 316 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:780:17
 1e08310:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:736:79
 1e08312:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:736:13
 1e08314:    51 69             	r1 = b[r4 + 21] (u)			  ## l2cap.c:736:127
 1e08316:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:736:13
 1e0831a:    19 02             	[sp+4] = r1			  ## l2cap.c:736:13
 1e0831c:    31 70             	r1 = 3			  ## l2cap.c:736:13
 1e0831e:    03 70             	r3 = 0			  ## l2cap.c:736:13
 1e08320:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:736:13
 1e08324:    f9 14             	call -1550 <l2cap_send_signaling_packet : 1e07d18 >			  ## l2cap.c:736:13
 1e08326:    50 69             	r0 = b[r4 + 21] (u)			  ## l2cap.c:737:44
 1e08328:    10 e0 4f 10       	if (r0 != 1) goto 158 <.GJTIE555_0_0_+0x1EA : 1e083ca >			  ## l2cap.c:737:17
 1e0832c:    f0 70             	r0 = 15			  ## l2cap.c:739:50
 1e0832e:    10 f9 02 d0       	b[r13 + 2] = r0			  ## l2cap.c:739:50
 1e08332:    8c 18             	goto 280 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:739:50
 1e08334:    1c f9 12 40       	b[r4 + 18] = r12			  ## l2cap.c:749:46
 1e08338:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e0833a:    10 b1             	r0 |= 4			  ## l2cap.c:605:107
 1e0833c:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e0833e:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:764:121
 1e08340:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:764:79
 1e08342:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:764:13
 1e08344:    04 59             	r4 = h[r4 + 32] (u)			  ## l2cap.c:764:159
 1e08346:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:764:13
 1e0834a:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:764:13
 1e0834e:    31 70             	r1 = 3			  ## l2cap.c:764:13
 1e08350:    14 18             	goto 40 <.GJTIE555_0_0_+0x19A : 1e0837a >			  ## l2cap.c:764:13
 1e08352:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e08356:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e0835a:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e0835c:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e0835e:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE555_0_0_+0x186 : 1e08366 >			  ## l2cap.c:126:55
 1e08364:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e08366:    11 f9 34 00       	b[r0 + 52] = r1
 1e0836a:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:864:53
 1e0836c:    1f f9 12 40       	b[r4 + 18] = r15			  ## l2cap.c:865:46
 1e08370:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:866:122
 1e08372:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:866:13
 1e08374:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:866:161
 1e08376:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:866:81
 1e08378:    61 70             	r1 = 6			  ## l2cap.c:866:13
 1e0837a:    0c 02             	[sp] = r4
 1e0837c:    cd 14             	call -1638 <l2cap_send_signaling_packet : 1e07d18 >
 1e0837e:    66 18             	goto 204 <.GJTIE555_0_0_+0x26C : 1e0844c >
 1e08380:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:858:124
 1e08382:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:858:82
 1e08384:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:858:13
 1e08386:    07 59             	r7 = h[r4 + 32] (u)			  ## l2cap.c:858:162
 1e08388:    71 70             	r1 = 7			  ## l2cap.c:858:13
 1e0838a:    0f 02             	[sp] = r7			  ## l2cap.c:858:13
 1e0838c:    c5 14             	call -1654 <l2cap_send_signaling_packet : 1e07d18 >			  ## l2cap.c:858:13
 1e0838e:    40 08             	r0 = r4			  ## l2cap.c:859:13
 1e08390:    71 16             	call -798 <l2cap_finialize_channel_close : 1e08074 >			  ## l2cap.c:859:13
 1e08392:    5c 18             	goto 184 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:859:13
 1e08394:    31 fd 08 09       	r1 = r0 & 4294967287			  ## l2cap.c:610:107
 1e08398:    22 fd 01 0a       	r2 = r0 & 256			  ## l2cap.c:789:58
 1e0839c:    d3 d0             	r3 = r2 >> 3			  ## l2cap.c:789:21
 1e0839e:    b3 b2             	r3 ^= 32			  ## l2cap.c:789:21
 1e083a0:    51 b6             	r1 |= r3			  ## l2cap.c:789:21
 1e083a2:    89 58             	h[r4 + 16] = r1			  ## l2cap.c:610:42
 1e083a4:    f2 fd 40 d2       	r13 = r2 >> 8			  ## l2cap.c:789:21
 1e083a8:    29 f3 18 10       	if ((r1 & 512) != 0) goto 48 <.GJTIE555_0_0_+0x1FC : 1e083dc >			  ## l2cap.c:789:21
 1e083ac:    26 f3 24 10       	if ((r1 & 64) != 0) goto 72 <.GJTIE555_0_0_+0x218 : 1e083f8 >
 1e083b0:    10 04             	r0 = r0.b0 (s)			  ## l2cap.c:803:65
 1e083b2:    00 e0 3c b0       	ifs (r0 < 0) goto 120 <.GJTIE555_0_0_+0x24E : 1e0842e >			  ## l2cap.c:803:65
 1e083b6:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:820:128
 1e083b8:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:820:86
 1e083ba:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:820:21
 1e083bc:    1e f5 0c 00       	[sp+12] = r14			  ## l2cap.c:820:21
 1e083c0:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:820:21
 1e083c4:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:820:21
 1e083c8:    12 18             	goto 36 <.GJTIE555_0_0_+0x20E : 1e083ee >			  ## l2cap.c:820:21
 1e083ca:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:742:17
 1e083ce:    80 80             	r0 += 8			  ## l2cap.c:742:17
 1e083d0:    41 08             	r1 = r4			  ## l2cap.c:742:17
 1e083d2:    bf f3 b9 f5       	call -5262 <btstack_linked_list_remove : 1e06f48 >			  ## l2cap.c:742:17
 1e083d6:    40 08             	r0 = r4			  ## l2cap.c:743:17
 1e083d8:    c7 15             	call -1138 <btstack_memory_l2cap_channel_free : 1e07f68 >			  ## l2cap.c:743:17
 1e083da:    38 18             	goto 112 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:743:17
 1e083dc:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:795:128
 1e083de:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:795:86
 1e083e0:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:795:21
 1e083e2:    1e f5 0c 00       	[sp+12] = r14			  ## l2cap.c:795:21
 1e083e6:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:795:21
 1e083ea:    18 f5 04 00       	[sp+4] = r8			  ## l2cap.c:795:21
 1e083ee:    51 70             	r1 = 5
 1e083f0:    1d f5 00 00       	[sp] = r13
 1e083f4:    91 14             	call -1758 <l2cap_send_signaling_packet : 1e07d18 >
 1e083f6:    1b 18             	goto 54 <.GJTIE555_0_0_+0x24E : 1e0842e >
 1e083f8:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:798:39
 1e083fc:    20 70             	r0 = 2			  ## l2cap.c:799:39
 1e083fe:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:799:39
 1e08402:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:800:79
 1e08404:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e08408:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0840a:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e0840e:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:801:128
 1e08410:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:801:86
 1e08412:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:801:21
 1e08414:    01 a2             	r1 = sp + 32			  ## l2cap.c:801:21
 1e08416:    39 02             	[sp+12] = r1			  ## l2cap.c:801:21
 1e08418:    41 70             	r1 = 4			  ## l2cap.c:801:21
 1e0841a:    29 02             	[sp+8] = r1			  ## l2cap.c:801:21
 1e0841c:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:801:21
 1e08420:    51 70             	r1 = 5			  ## l2cap.c:801:21
 1e08422:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:801:21
 1e08426:    78 14             	call -1808 <l2cap_send_signaling_packet : 1e07d18 >			  ## l2cap.c:801:21
 1e08428:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:610:97
 1e0842a:    70 b3             	r0 &= 4294967231			  ## l2cap.c:610:107
 1e0842c:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:610:42
 1e0842e:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:610:97
 1e08430:    70 b4             	r0 &= 4294967039			  ## l2cap.c:610:107
 1e08432:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:610:42
 1e08434:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:849:17
 1e08438:    20 e2 08 10       	if (r0 != 34) goto 16 <.GJTIE555_0_0_+0x26C : 1e0844c >			  ## l2cap.c:849:17
 1e0843c:    80 70             	r0 = 8			  ## l2cap.c:850:50
 1e0843e:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:850:50
 1e08440:    01 70             	r1 = 0			  ## l2cap.c:851:17
 1e08442:    40 08             	r0 = r4			  ## l2cap.c:851:17
 1e08444:    b1 15             	call -1182 <l2cap_emit_channel_opened : 1e07fa8 >			  ## l2cap.c:851:17
 1e08446:    11 70             	r1 = 1			  ## l2cap.c:852:17
 1e08448:    40 08             	r0 = r4			  ## l2cap.c:852:17
 1e0844a:    ea 15             	call -1068 <l2cap_emit_credits : 1e08020 >			  ## l2cap.c:852:17
 1e0844c:    05 e0 b2 1e       	if (r5 != 0) goto -668 <l2cap_run+0x10A : 1e081b4 >
 1e08450:    00 a1             	r0 = sp + 16
 1e08452:    27 16             	call -946 <hci_connections_get_iterator : 1e080a2 >			  ## l2cap.c:879:9
 1e08454:    bf f3 94 f6       	call -4824 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## l2cap.c:880:16
 1e08458:    2f 20             	if (r0 == 0) goto 94 <.GJTIE555_0_0_+0x2D8 : 1e084b8 >			  ## l2cap.c:880:16
 1e0845a:    05 70             	r5 = 0
 1e0845c:    00 a1             	r0 = sp + 16
 1e0845e:    bf f3 9d f6       	call -4806 <btstack_linked_list_iterator_next : 1e0719c >			  ## l2cap.c:884:71
 1e08462:    04 08             	r4 = r0			  ## l2cap.c:884:71
 1e08464:    30 48             	r0 = [r4 + 12]			  ## l2cap.c:886:29
 1e08466:    10 e0 23 80       	if (r0 > 1) goto 70 <.GJTIE555_0_0_+0x2D0 : 1e084b0 >			  ## l2cap.c:886:29
 1e0846a:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:889:18
 1e0846c:    ca 14             	call -1644 <hci_can_send_acl_packet_now : 1e07e02 >			  ## l2cap.c:889:18
 1e0846e:    20 20             	if (r0 == 0) goto 64 <.GJTIE555_0_0_+0x2D0 : 1e084b0 >			  ## l2cap.c:889:18
 1e08470:    50 48             	r0 = [r4 + 20]			  ## l2cap.c:892:33
 1e08472:    40 e0 10 00       	if (r0 == 4) goto 32 <.GJTIE555_0_0_+0x2B6 : 1e08496 >			  ## l2cap.c:892:33
 1e08476:    20 e0 14 00       	if (r0 == 2) goto 40 <.GJTIE555_0_0_+0x2C2 : 1e084a2 >
 1e0847a:    10 e0 19 10       	if (r0 != 1) goto 50 <.GJTIE555_0_0_+0x2D0 : 1e084b0 >
 1e0847e:    5d 48             	[r4 + 20] = r5			  ## l2cap.c:894:59
 1e08480:    d3 58             	r3 = h[r4 + 26] (u)			  ## l2cap.c:896:48
 1e08482:    82 69             	r2 = b[r4 + 24] (u)			  ## l2cap.c:895:109
 1e08484:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:895:17
 1e08486:    e6 58             	r6 = h[r4 + 28] (u)			  ## l2cap.c:896:82
 1e08488:    f1 58             	r1 = h[r4 + 30] (u)			  ## l2cap.c:896:116
 1e0848a:    04 59             	r4 = h[r4 + 32] (u)			  ## l2cap.c:896:145
 1e0848c:    2c 02             	[sp+8] = r4			  ## l2cap.c:895:17
 1e0848e:    19 02             	[sp+4] = r1			  ## l2cap.c:895:17
 1e08490:    21 71             	r1 = 18			  ## l2cap.c:895:17
 1e08492:    0e 02             	[sp] = r6			  ## l2cap.c:895:17
 1e08494:    0c 18             	goto 24 <.GJTIE555_0_0_+0x2CE : 1e084ae >			  ## l2cap.c:895:17
 1e08496:    5d 48             	[r4 + 20] = r5			  ## l2cap.c:903:59
 1e08498:    82 69             	r2 = b[r4 + 24] (u)			  ## l2cap.c:904:110
 1e0849a:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:904:17
 1e0849c:    31 71             	r1 = 19			  ## l2cap.c:904:17
 1e0849e:    13 70             	r3 = 1			  ## l2cap.c:904:17
 1e084a0:    06 18             	goto 12 <.GJTIE555_0_0_+0x2CE : 1e084ae >			  ## l2cap.c:904:17
 1e084a2:    c5 f4 03 49       	[r4 + 20] = 3			  ## l2cap.c:899:59
 1e084a6:    82 69             	r2 = b[r4 + 24] (u)			  ## l2cap.c:900:110
 1e084a8:    50 58             	r0 = h[r4 + 10] (u)			  ## l2cap.c:900:17
 1e084aa:    31 71             	r1 = 19			  ## l2cap.c:900:17
 1e084ac:    03 70             	r3 = 0			  ## l2cap.c:900:17
 1e084ae:    42 15             	call -1404 <l2cap_send_le_signaling_packet : 1e07f34 >
 1e084b0:    00 a1             	r0 = sp + 16
 1e084b2:    bf f3 65 f6       	call -4918 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## l2cap.c:880:16
 1e084b6:    d2 31             	if (r0 != 0) goto -92 <.GJTIE555_0_0_+0x27C : 1e0845c >
 1e084b8:    1a 0a             	sp += 52
 1e084ba:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:913:1


l2cap_register_signaling_response:
 1e084bc:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:1365:0
 1e084be:    c4 ff 98 1a 00 00 	r4 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:1367:9
 1e084c4:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:1367:9
 1e084c6:    95 48             	r5 = [r4 + 36]			  ## l2cap.c:1367:39
 1e084c8:    25 e0 15 c0       	ifs (r5 > 2) goto 42 <l2cap_register_signaling_response+0x3A : 1e084f6 >			  ## l2cap.c:1367:39
 1e084cc:    ed c0             	r5 = r5 << 3			  ## l2cap.c:1368:118
 1e084ce:    c6 98             	r6 = r4 + 12			  ## l2cap.c:1368:118
 1e084d0:    10 f8 00 65       	h[r6+r5] = r0			  ## l2cap.c:1368:125
 1e084d4:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1369:89
 1e084d6:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1369:118
 1e084d8:    60 09             	r0 += r6			  ## l2cap.c:1369:118
 1e084da:    39 60             	b[r0 + 3] = r1			  ## l2cap.c:1369:123
 1e084dc:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1370:89
 1e084de:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1370:118
 1e084e0:    60 09             	r0 += r6			  ## l2cap.c:1370:118
 1e084e2:    2a 60             	b[r0 + 2] = r2			  ## l2cap.c:1370:125
 1e084e4:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1371:89
 1e084e6:    41 02             	r1 = [sp+16]			  ## l2cap.c:1371:89
 1e084e8:    c2 c0             	r2 = r0 << 3			  ## l2cap.c:1371:118
 1e084ea:    62 09             	r2 += r6			  ## l2cap.c:1371:118
 1e084ec:    2b 54             	h[r2 + 4] = r3			  ## l2cap.c:1371:122
 1e084ee:    39 54             	h[r2 + 6] = r1			  ## l2cap.c:1372:123
 1e084f0:    10 80             	r0 += 1			  ## l2cap.c:1373:66
 1e084f2:    98 48             	[r4 + 36] = r0			  ## l2cap.c:1373:66
 1e084f4:    da 15             	call -1100 <l2cap_run : 1e080aa >			  ## l2cap.c:1374:9
 1e084f6:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:1376:1


btstack_memory_l2cap_channel_get:
 1e084f8:    41 70             	r1 = 4			  ## btstack_memory.c:129:0
 1e084fa:    00 42             	r0 = [r1 + 0]			  ## btstack_memory.c:66:23
 1e084fc:    03 20             	if (r0 == 0) goto 6 <btstack_memory_l2cap_channel_get+0xC : 1e08504 >
 1e084fe:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e08500:    0a 42             	[r1 + 0] = r2			  ## btstack_memory.c:72:23
 1e08502:    20 00             	rts			  ## btstack_memory.c:130:5
 1e08504:    00 70             	r0 = 0
 1e08506:    20 00             	rts			  ## btstack_memory.c:130:5


btstack_linked_list_add:
 1e08508:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:83:0
 1e0850a:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_add+0xE : 1e08516 >			  ## btstack_linked_list.c:83:0
 1e0850c:    23 08             	r3 = r2			  ## btstack_linked_list.c:83:0
 1e0850e:    13 f2 04 00       	if (r3 == r1) goto 8 <btstack_linked_list_add+0x12 : 1e0851a >			  ## btstack_linked_list.c:83:0
 1e08512:    03 46             	r3 = [r3 + 0]			  ## btstack_linked_list.c:83:0
 1e08514:    fc 37             	if (r3 != 0) goto -8 <btstack_linked_list_add+0x6 : 1e0850e >			  ## btstack_linked_list.c:83:0
 1e08516:    0a 42             	[r1 + 0] = r2			  ## btstack_linked_list.c:92:16
 1e08518:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:93:11
 1e0851a:    20 00             	rts			  ## btstack_linked_list.c:94:1


l2cap_signaling_handler_channel:
 1e0851c:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:1566:0
 1e0851e:    fe 0b             	sp += -4			  ## l2cap.c:1566:0
 1e08520:    04 08             	r4 = r0			  ## l2cap.c:1566:0
 1e08522:    00 62             	r0 = b[r1 + 0] (u)			  ## l2cap.c:1568:22
 1e08524:    22 69             	r2 = b[r4 + 18] (u)			  ## l2cap.c:1568:22
 1e08526:    60 e0 0e 10       	if (r0 != 6) goto 28 <l2cap_signaling_handler_channel+0x2A : 1e08546 >			  ## l2cap.c:1575:9
 1e0852a:    d2 e0 0a 80       	if (r2 > 13) goto 20 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e0852e:    10 70             	r0 = 1
 1e08530:    80 0c             	r0 <<= r2
 1e08532:    60 ff 0e 01 05 00 	if ((r0 & 9088) == 0) goto 10 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e08538:    10 62             	r0 = b[r1 + 1] (u)			  ## l2cap.c:1569:22
 1e0853a:    38 69             	b[r4 + 19] = r0			  ## l2cap.c:1359:46
 1e0853c:    e0 70             	r0 = 14			  ## l2cap.c:1360:38
 1e0853e:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1360:38
 1e08540:    b4 15             	call -1176 <l2cap_run : 1e080aa >			  ## l2cap.c:1361:5
 1e08542:    02 0a             	sp += 4
 1e08544:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap.c:1709:1
 1e08546:    b2 8f             	r2 += -5			  ## l2cap.c:1591:5
 1e08548:    42 e0 fb 8f       	if (r2 > 4) goto -10 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:1591:5
 1e0854c:    c5 ff 98 1a 00 00 	r5 = 6808 <l2cap_stack : 1a98 >
 1e08552:    a2 00             	tbb [r2]


.GJTIS559_0_0_:
 1e08554:    04     < 4 : 0x4 >
 1e08555:    30     < 48 : 0x30 >
 1e08556:    46     < 70 : 0x46 >
 1e08557:    03     < 3 : 0x3 >
 1e08558:    8a     < 138 : 0x8A >
 1e08559:    00     < 0 : 0x0 >
 1e0855a:    f3 1f             	goto -26 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e0855c:    b0 e0 f1 1f       	if (r0 != 11) goto -30 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e08560:    60 70             	r0 = 6			  ## l2cap.c:1598:50
 1e08562:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1598:50
 1e08564:    30 62             	r0 = b[r1 + 3] (u)			  ## l2cap.c:1531:23
 1e08566:    22 62             	r2 = b[r1 + 2] (u)			  ## l2cap.c:1531:23
 1e08568:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## l2cap.c:1531:23
 1e0856c:    40 94             	r0 = r2 + 4			  ## l2cap.c:1531:21
 1e0856e:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1533:18
 1e08570:    50 e0 17 30       	if (r0 < 5) goto 46 <.GJTIE559_0_0_+0x48 : 1e085a2 >			  ## l2cap.c:1533:18
 1e08574:    43 70             	r3 = 4
 1e08576:    42 70             	r2 = 4
 1e08578:    25 94             	r5 = r2 + 2			  ## l2cap.c:1535:13
 1e0857a:    65 05             	r5 = r5.l (u)			  ## l2cap.c:1536:24
 1e0857c:    46 b3             	r6 = r1 + r5			  ## l2cap.c:1536:24
 1e0857e:    17 6c             	r7 = b[r6 + 1] (u)			  ## l2cap.c:1536:24
 1e08580:    06 6c             	r6 = b[r6 + 0] (u)			  ## l2cap.c:1536:24
 1e08582:    c8 fd 40 67       	r6 <= insert(r7, p:8, l:8)			  ## l2cap.c:1536:24
 1e08586:    07 3c             	if (r6 != 0) goto 14 <.GJTIE559_0_0_+0x3C : 1e08596 >			  ## l2cap.c:1536:24
 1e08588:    13 09             	r3 += r1			  ## l2cap.c:1534:24
 1e0858a:    16 66             	r6 = b[r3 + 1] (u)			  ## l2cap.c:1534:24
 1e0858c:    03 66             	r3 = b[r3 + 0] (u)			  ## l2cap.c:1534:24
 1e0858e:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## l2cap.c:1534:24
 1e08592:    23 e0 8f 00       	if (r3 == 2) goto 286 <.GJTIE559_0_0_+0x15A : 1e086b4 >			  ## l2cap.c:1534:24
 1e08596:    42 80             	r2 += 4			  ## l2cap.c:1533:12
 1e08598:    25 80             	r5 += 2			  ## l2cap.c:1537:13
 1e0859a:    a3 04             	r3 = r2.l (u)			  ## l2cap.c:1533:12
 1e0859c:    52 08             	r2 = r5			  ## l2cap.c:1533:12
 1e0859e:    03 f2 eb 3f       	if (r3 < r0) goto -42 <.GJTIE559_0_0_+0x1E : 1e08578 >			  ## l2cap.c:1533:12
 1e085a2:    e3 58             	r3 = h[r4 + 28] (u)			  ## l2cap.c:1600:123
 1e085a4:    42 69             	r2 = b[r4 + 20] (u)			  ## l2cap.c:1600:82
 1e085a6:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:1600:17
 1e085a8:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:1600:155
 1e085aa:    21 70             	r1 = 2			  ## l2cap.c:1600:17
 1e085ac:    0c 02             	[sp] = r4			  ## l2cap.c:1600:17
 1e085ae:    bf f3 b3 fb       	call -2202 <l2cap_send_signaling_packet : 1e07d18 >			  ## l2cap.c:1600:17
 1e085b2:    c7 1f             	goto -114 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:1600:17
 1e085b4:    30 e0 c5 1f       	if (r0 != 3) goto -118 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e085b8:    80 62             	r0 = b[r1 + 8] (u)			  ## l2cap.c:1611:22
 1e085ba:    92 62             	r2 = b[r1 + 9] (u)			  ## l2cap.c:1611:22
 1e085bc:    03 08             	r3 = r0			  ## l2cap.c:1611:22
 1e085be:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1611:22
 1e085c2:    e2 04             	r2 = r3.l (u)			  ## l2cap.c:1611:22
 1e085c4:    12 e0 bd 0f       	if (r2 == 1) goto -134 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:1611:22
 1e085c8:    5f 34             	if (r2 != 0) goto 190 <.GJTIE559_0_0_+0x12E : 1e08688 >
 1e085ca:    50 62             	r0 = b[r1 + 5] (u)			  ## l2cap.c:1617:57
 1e085cc:    41 62             	r1 = b[r1 + 4] (u)			  ## l2cap.c:1617:57
 1e085ce:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1617:57
 1e085d2:    09 59             	h[r4 + 32] = r1			  ## l2cap.c:1617:55
 1e085d4:    70 70             	r0 = 7			  ## l2cap.c:1618:50
 1e085d6:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1618:50
 1e085d8:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e085da:    10 b1             	r0 |= 4			  ## l2cap.c:605:107
 1e085dc:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e085de:    b1 1f             	goto -158 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:605:42
 1e085e0:    50 e0 47 00       	if (r0 == 5) goto 142 <.GJTIE559_0_0_+0x118 : 1e08672 >			  ## l2cap.c:1652:9
 1e085e4:    40 e0 85 10       	if (r0 != 4) goto 266 <.GJTIE559_0_0_+0x198 : 1e086f2 >
 1e085e8:    82 58             	r2 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e085ea:    00 fd 08 29       	r0 = r2 | 8			  ## l2cap.c:605:107
 1e085ee:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e085f0:    63 62             	r3 = b[r1 + 6] (u)			  ## l2cap.c:1475:17
 1e085f2:    15 62             	r5 = b[r1 + 1] (u)			  ## l2cap.c:1476:48
 1e085f4:    3d 69             	b[r4 + 19] = r5			  ## l2cap.c:1476:46
 1e085f6:    00 f3 04 30       	if ((r3 & 1) == 0) goto 8 <.GJTIE559_0_0_+0xA8 : 1e08602 >			  ## l2cap.c:1476:46
 1e085fa:    00 fb 08 01       	r0 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## l2cap.c:605:107
 1e085fe:    50 b4             	r0 |= r2			  ## l2cap.c:605:107
 1e08600:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e08602:    32 62             	r2 = b[r1 + 3] (u)			  ## l2cap.c:1485:27
 1e08604:    23 62             	r3 = b[r1 + 2] (u)			  ## l2cap.c:1485:27
 1e08606:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1485:27
 1e0860a:    42 96             	r2 = r3 + 4			  ## l2cap.c:1485:25
 1e0860c:    a2 04             	r2 = r2.l (u)			  ## l2cap.c:1487:22
 1e0860e:    92 e0 27 30       	if (r2 < 9) goto 78 <.GJTIE559_0_0_+0x106 : 1e08660 >			  ## l2cap.c:1487:22
 1e08612:    83 70             	r3 = 8
 1e08614:    85 70             	r5 = 8
 1e08616:    16 9a             	r6 = r5 + 1			  ## l2cap.c:1492:16
 1e08618:    07 fa 00 13       	r7 = b[r1+r3] (u)			  ## l2cap.c:1488:30
 1e0861c:    a3 05             	r3 = r6.l (u)			  ## l2cap.c:1493:22
 1e0861e:    03 fa 00 13       	r3 = b[r1+r3] (u)			  ## l2cap.c:1493:22
 1e08622:    36 fd 80 79       	r6 = r7 & 4294967167			  ## l2cap.c:1489:43
 1e08626:    25 80             	r5 += 2			  ## l2cap.c:1493:33
 1e08628:    16 e0 0b 10       	if (r6 != 1) goto 22 <.GJTIE559_0_0_+0xE8 : 1e08642 >			  ## l2cap.c:1493:33
 1e0862c:    23 e0 09 10       	if (r3 != 2) goto 18 <.GJTIE559_0_0_+0xE8 : 1e08642 >
 1e08630:    66 05             	r6 = r5.l (u)			  ## l2cap.c:1496:57
 1e08632:    16 09             	r6 += r1			  ## l2cap.c:1496:57
 1e08634:    17 6c             	r7 = b[r6 + 1] (u)			  ## l2cap.c:1496:57
 1e08636:    06 6c             	r6 = b[r6 + 0] (u)			  ## l2cap.c:1496:57
 1e08638:    d8 fd 40 67       	r6 <= insert(r7, p:8, l:24)			  ## l2cap.c:1496:57
 1e0863c:    2e 59             	h[r4 + 36] = r6			  ## l2cap.c:1496:55
 1e0863e:    06 74             	r6 = 64
 1e08640:    09 18             	goto 18 <.GJTIE559_0_0_+0xFA : 1e08654 >
 1e08642:    d7 05             	r7 = r7.b0 (s)			  ## l2cap.c:1488:30
 1e08644:    07 e0 08 b0       	ifs (r7 < 0) goto 16 <.GJTIE559_0_0_+0xFE : 1e08658 >			  ## l2cap.c:1488:30
 1e08648:    f6 8f             	r6 += -1			  ## l2cap.c:1519:55
 1e0864a:    87 05             	r7 = r6.b0 (u)			  ## l2cap.c:1519:55
 1e0864c:    06 fb 00 02       	r6 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## l2cap.c:1519:55
 1e08650:    67 e0 02 30       	if (r7 < 6) goto 4 <.GJTIE559_0_0_+0xFE : 1e08658 >			  ## l2cap.c:1519:55
 1e08654:    50 bc             	r0 |= r6			  ## l2cap.c:605:107
 1e08656:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:605:42
 1e08658:    35 09             	r5 += r3			  ## l2cap.c:1523:17
 1e0865a:    63 05             	r3 = r5.l (u)			  ## l2cap.c:1487:16
 1e0865c:    23 f2 db 3f       	if (r3 < r2) goto -74 <.GJTIE559_0_0_+0xBC : 1e08616 >			  ## l2cap.c:1487:16
 1e08660:    28 f3 47 00       	if ((r0 & 256) != 0) goto 142 <.GJTIE559_0_0_+0x198 : 1e086f2 >
 1e08664:    10 b0             	r0 |= 1			  ## l2cap.c:605:107
 1e08666:    44 18             	goto 136 <.GJTIE559_0_0_+0x196 : 1e086f0 >			  ## l2cap.c:605:107
 1e08668:    70 e0 6b 1f       	if (r0 != 7) goto -298 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e0866c:    40 08             	r0 = r4			  ## l2cap.c:1690:13
 1e0866e:    02 15             	call -1532 <l2cap_finialize_channel_close : 1e08074 >			  ## l2cap.c:1690:13
 1e08670:    68 1f             	goto -304 <l2cap_signaling_handler_channel+0x26 : 1e08542 >
 1e08672:    90 62             	r0 = b[r1 + 9] (u)			  ## l2cap.c:1664:22
 1e08674:    81 62             	r1 = b[r1 + 8] (u)			  ## l2cap.c:1664:22
 1e08676:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1664:22
 1e0867a:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1664:22
 1e0867c:    10 e0 12 00       	if (r0 == 1) goto 36 <.GJTIE559_0_0_+0x14A : 1e086a4 >			  ## l2cap.c:1665:17
 1e08680:    16 30             	if (r0 != 0) goto 44 <.GJTIE559_0_0_+0x154 : 1e086ae >
 1e08682:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:605:97
 1e08684:    90 b0             	r0 |= 2			  ## l2cap.c:605:107
 1e08686:    34 18             	goto 104 <.GJTIE559_0_0_+0x196 : 1e086f0 >			  ## l2cap.c:605:107
 1e08688:    11 70             	r1 = 1			  ## l2cap.c:1628:50
 1e0868a:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1628:50
 1e0868c:    30 86             	r0 += 99			  ## l2cap.c:1631:96
 1e0868e:    01 04             	r1 = r0.b0 (u)			  ## l2cap.c:1631:17
 1e08690:    40 08             	r0 = r4			  ## l2cap.c:1631:17
 1e08692:    8a 14             	call -1772 <l2cap_emit_channel_opened : 1e07fa8 >			  ## l2cap.c:1631:17
 1e08694:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1639:17
 1e08696:    80 80             	r0 += 8			  ## l2cap.c:1639:17
 1e08698:    41 08             	r1 = r4			  ## l2cap.c:1639:17
 1e0869a:    bf f3 55 f4       	call -5974 <btstack_linked_list_remove : 1e06f48 >			  ## l2cap.c:1639:17
 1e0869e:    40 08             	r0 = r4			  ## l2cap.c:1640:17
 1e086a0:    63 14             	call -1850 <btstack_memory_l2cap_channel_free : 1e07f68 >			  ## l2cap.c:1640:17
 1e086a2:    4f 1f             	goto -354 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:1640:17
 1e086a4:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1667:40
 1e086a6:    00 f9 28 00       	r0 = b[r0 + 40] (u)			  ## l2cap.c:1667:24
 1e086aa:    24 f3 18 00       	if ((r0 & 16) != 0) goto 48 <.GJTIE559_0_0_+0x184 : 1e086de >			  ## l2cap.c:1667:24
 1e086ae:    d0 70             	r0 = 13			  ## l2cap.c:1673:50
 1e086b0:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1673:50
 1e086b2:    1f 18             	goto 62 <.GJTIE559_0_0_+0x198 : 1e086f2 >			  ## l2cap.c:1673:50
 1e086b4:    40 94             	r0 = r2 + 4			  ## l2cap.c:1539:66
 1e086b6:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1539:66
 1e086b8:    10 09             	r0 += r1			  ## l2cap.c:1539:66
 1e086ba:    01 60             	r1 = b[r0 + 0] (u)			  ## l2cap.c:1539:66
 1e086bc:    12 60             	r2 = b[r0 + 1] (u)			  ## l2cap.c:1539:66
 1e086be:    23 60             	r3 = b[r0 + 2] (u)			  ## l2cap.c:1539:66
 1e086c0:    30 60             	r0 = b[r0 + 3] (u)			  ## l2cap.c:1539:66
 1e086c2:    15 08             	r5 = r1			  ## l2cap.c:1539:66
 1e086c4:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## l2cap.c:1539:66
 1e086c8:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## l2cap.c:1539:66
 1e086cc:    c8 fd c0 50       	r5 <= insert(r0, p:24, l:8)			  ## l2cap.c:1539:66
 1e086d0:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:1539:64
 1e086d2:    24 f3 66 1f       	if ((r1 & 16) != 0) goto -308 <.GJTIE559_0_0_+0x48 : 1e085a2 >			  ## l2cap.c:1539:64
 1e086d6:    00 70             	r0 = 0			  ## l2cap.c:1543:57
 1e086d8:    10 f9 26 40       	b[r4 + 38] = r0			  ## l2cap.c:1543:57
 1e086dc:    62 1f             	goto -316 <.GJTIE559_0_0_+0x48 : 1e085a2 >			  ## l2cap.c:1543:57
 1e086de:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:610:97
 1e086e0:    01 70             	r1 = 0			  ## l2cap.c:1669:57
 1e086e2:    11 f9 26 40       	b[r4 + 38] = r1			  ## l2cap.c:1669:57
 1e086e6:    71 70             	r1 = 7			  ## l2cap.c:1670:50
 1e086e8:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1670:50
 1e086ea:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:610:107
 1e086ee:    10 b1             	r0 |= 4			  ## l2cap.c:605:107
 1e086f0:    88 58             	h[r4 + 16] = r0
 1e086f2:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:1555:37
 1e086f4:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:1679:13
 1e086f8:    20 e2 23 1f       	if (r0 != 34) goto -442 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:1679:13
 1e086fc:    80 70             	r0 = 8			  ## l2cap.c:1681:46
 1e086fe:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1681:46
 1e08700:    01 70             	r1 = 0			  ## l2cap.c:1682:13
 1e08702:    40 08             	r0 = r4			  ## l2cap.c:1682:13
 1e08704:    51 14             	call -1886 <l2cap_emit_channel_opened : 1e07fa8 >			  ## l2cap.c:1682:13
 1e08706:    11 70             	r1 = 1			  ## l2cap.c:1683:13
 1e08708:    40 08             	r0 = r4			  ## l2cap.c:1683:13
 1e0870a:    8a 14             	call -1772 <l2cap_emit_credits : 1e08020 >			  ## l2cap.c:1683:13
 1e0870c:    1a 1f             	goto -460 <l2cap_signaling_handler_channel+0x26 : 1e08542 >			  ## l2cap.c:1683:13


l2cap_get_channel_for_local_cid:
 1e0870e:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:465:0
 1e08710:    05 08             	r5 = r0			  ## l2cap.c:465:0
 1e08712:    97 f3 43 f3       	call 3139206 <local_irq_disable : 106d9c >			  ## l2cap.c:468:5
 1e08716:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:469:33
 1e0871c:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:469:33
 1e0871e:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:469:33
 1e08720:    05 28             	if (r4 == 0) goto 10 <l2cap_get_channel_for_local_cid+0x1E : 1e0872c >
 1e08722:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:471:40
 1e08724:    50 f2 06 00       	if (r0 == r5) goto 12 <l2cap_get_channel_for_local_cid+0x26 : 1e08734 >			  ## l2cap.c:471:40
 1e08728:    04 48             	r4 = [r4 + 0]
 1e0872a:    fb 39             	if (r4 != 0) goto -10 <l2cap_get_channel_for_local_cid+0x14 : 1e08722 >
 1e0872c:    97 f3 34 f3       	call 3139176 <local_irq_enable : 106d98 >			  ## l2cap.c:477:5
 1e08730:    04 70             	r4 = 0			  ## l2cap.c:477:5
 1e08732:    02 18             	goto 4 <l2cap_get_channel_for_local_cid+0x2A : 1e08738 >
 1e08734:    97 f3 30 f3       	call 3139168 <local_irq_enable : 106d98 >			  ## l2cap.c:472:13
 1e08738:    40 08             	r0 = r4			  ## l2cap.c:479:1
 1e0873a:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:479:1


l2cap_packet_handler:
 1e0873c:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:2007:0
 1e0873e:    e2 0b             	sp += -60			  ## l2cap.c:2007:0
 1e08740:    29 08             	r9 = r2			  ## l2cap.c:2007:0
 1e08742:    1f 08             	r15 = r1			  ## l2cap.c:2007:0
 1e08744:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2007:0
 1e0874a:    20 e0 28 00       	if (r0 == 2) goto 80 <.GJTIE561_1_1_+0x1C : 1e0879e >			  ## l2cap.c:2008:5
 1e0874e:    40 e0 9a 12       	if (r0 != 4) goto 1332 <.GJTIE561_0_0_+0x4AC : 1e08c86 >
 1e08752:    00 62             	r0 = b[r1 + 0] (u)
 1e08754:    01 fc fd ff       	r1 = r0 + -3			  ## l2cap.c:1166:5
 1e08758:    01 e1 42 81       	if (r1 > 16) goto 644 <.GJTIE561_0_0_+0x206 : 1e089e0 >
 1e0875c:    48 c0             	r0 = r1 << 1
 1e0875e:    b0 00             	tbh [r0]


.GJTIL561_1_1_:
 1e08760:    b6 01     < 438 : 0x1B6 >
 1e08762:    7c 02     < 636 : 0x27C >
 1e08764:    fe 01     < 510 : 0x1FE >
 1e08766:    11 00     < 17 : 0x11 >
 1e08768:    7c 02     < 636 : 0x27C >
 1e0876a:    11 00     < 17 : 0x11 >
 1e0876c:    7c 02     < 636 : 0x27C >
 1e0876e:    7c 02     < 636 : 0x27C >
 1e08770:    7c 02     < 636 : 0x27C >
 1e08772:    7c 02     < 636 : 0x27C >
 1e08774:    7c 02     < 636 : 0x27C >
 1e08776:    7a 02     < 634 : 0x27A >
 1e08778:    7a 02     < 634 : 0x27A >
 1e0877a:    7c 02     < 636 : 0x27C >
 1e0877c:    7c 02     < 636 : 0x27C >
 1e0877e:    7c 02     < 636 : 0x27C >
 1e08780:    54 02     < 596 : 0x254 >
 1e08782:    02 f9 04 f0       	r2 = b[r15 + 4] (u)
 1e08786:    00 f9 03 f0       	r0 = b[r15 + 3] (u)
 1e0878a:    01 f9 02 f0       	r1 = b[r15 + 2] (u)
 1e0878e:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)
 1e08792:    20 04             	r0 = r0.l (u)
 1e08794:    01 e0 55 02       	if (r1 == 0) goto 1194 <.GJTIE561_0_0_+0x468 : 1e08c42 >
 1e08798:    bf f3 4f fa       	call -2914 <hci_disconnect_cmd : 1e07c3a >
 1e0879c:    5b 1a             	goto 1206 <.GJTIE561_0_0_+0x47A : 1e08c54 >
 1e0879e:    70 62             	r0 = b[r1 + 7] (u)			  ## l2cap.c:1937:22
 1e087a0:    61 62             	r1 = b[r1 + 6] (u)			  ## l2cap.c:1937:22
 1e087a2:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1937:22
 1e087a6:    60 04             	r0 = r1.l (u)
 1e087a8:    01 fc ff ff       	r1 = r0 + -1			  ## l2cap.c:1944:5
 1e087ac:    51 e0 38 81       	if (r1 > 5) goto 624 <.GJTIE561_0_0_+0x246 : 1e08a20 >			  ## l2cap.c:1944:5
 1e087b0:    03 f9 01 f0       	r3 = b[r15 + 1] (u)			  ## l2cap.c:1938:31
 1e087b4:    02 f9 00 f0       	r2 = b[r15 + 0] (u)			  ## l2cap.c:1938:31
 1e087b8:    1b c2             	r3 = r3 << 8			  ## l2cap.c:1938:31
 1e087ba:    23 fd 0f 3a       	r3 = r3 & 3840			  ## l2cap.c:1938:31
 1e087be:    e0 fd 20 43       	r4 = r3 | r2			  ## l2cap.c:1938:31
 1e087c2:    4c 02             	[sp+16] = r4			  ## l2cap.c:1938:31
 1e087c4:    4d c0             	r5 = r1 << 1			  ## l2cap.c:1938:31
 1e087c6:    c4 ff a8 1a 00 00 	r4 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:1938:31
 1e087cc:    b5 00             	tbh [r5]			  ## l2cap.c:1938:31


.GJTIL561_0_0_:
 1e087ce:    06 00     < 6 : 0x6 >
 1e087d0:    29 01     < 297 : 0x129 >
 1e087d2:    29 01     < 297 : 0x129 >
 1e087d4:    35 01     < 309 : 0x135 >
 1e087d6:    42 01     < 322 : 0x142 >
 1e087d8:    73 01     < 371 : 0x173 >
 1e087da:    99 e0 52 32       	if (r9 < 9) goto 1188 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >
 1e087de:    c0 a2             	r0 = sp + 44
 1e087e0:    20 80             	r0 += 2
 1e087e2:    38 02             	[sp+12] = r0
 1e087e4:    84 70             	r4 = 8
 1e087e6:    0e 70             	r14 = 0
 1e087e8:    40 02             	r0 = [sp+16]
 1e087ea:    27 04             	r7 = r0.l (u)
 1e087ec:    c8 ff 30 1b 00 00 	r8 = 6960 <__user_info+0x70 : 1b30 >
 1e087f2:    dc 18             	goto 440 <.GJTIE561_0_0_+0x1D2 : 1e089ac >
 1e087f4:    a1 e0 37 00       	if (r1 == 10) goto 110 <.GJTIE561_0_0_+0x8C : 1e08866 >			  ## l2cap.c:1727:5
 1e087f8:    21 e0 3e 10       	if (r1 != 2) goto 124 <.GJTIE561_0_0_+0x9E : 1e08878 >
 1e087fc:    60 6c             	r0 = b[r6 + 6] (u)			  ## l2cap.c:1730:26
 1e087fe:    71 6c             	r1 = b[r6 + 7] (u)			  ## l2cap.c:1730:26
 1e08800:    52 6c             	r2 = b[r6 + 5] (u)			  ## l2cap.c:1729:26
 1e08802:    0a f9 04 60       	r10 = b[r6 + 4] (u)			  ## l2cap.c:1729:26
 1e08806:    0b c2             	r3 = r1 << 8			  ## l2cap.c:1730:26
 1e08808:    f0 fd 40 c2       	r12 = r2 << 8			  ## l2cap.c:1729:26
 1e0880c:    81 08             	r1 = r8			  ## l2cap.c:1729:26
 1e0880e:    32 42             	r2 = [r1 + 12]			  ## avctp_user.c:2719:19
 1e08810:    1d f3 02 20       	if ((r2 & 536870912) == 0) goto 4 <.GJTIE561_0_0_+0x3E : 1e08818 >			  ## avctp_user.c:2719:19
 1e08814:    1e f9 11 10       	b[r1 + 17] = r14			  ## avctp_user.c:2720:29
 1e08818:    81 81             	r1 += 24			  ## avctp_user.c:2718:5
 1e0881a:    82 fc 18 00       	r2 = r8 + 24			  ## avctp_user.c:2718:5
 1e0881e:    21 f2 f6 3f       	if (r1 < r2) goto -20 <.GJTIE561_0_0_+0x34 : 1e0880e >			  ## avctp_user.c:2718:5
 1e08822:    c1 ff 98 1a 00 00 	r1 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:2215:33
 1e08828:    0b f6 00 10       	r11 = [r1 + 0]			  ## l2cap.c:2215:33
 1e0882c:    0d f6 04 b0       	r13 = [r11 + 4]			  ## l2cap.c:2215:33
 1e08830:    e0 fd 00 23       	r2 = r3 | r0			  ## l2cap.c:1730:26
 1e08834:    0d e0 0c 00       	if (r13 == 0) goto 24 <.GJTIE561_0_0_+0x76 : 1e08850 >			  ## l2cap.c:1730:26
 1e08838:    e0 fd a0 cc       	r12 = r12 | r10			  ## l2cap.c:1729:26
 1e0883c:    00 f7 04 d0       	r0 = h[r13 + 4] (u)			  ## l2cap.c:2217:22
 1e08840:    e6 fd 00 1c       	r1 = r12.l (u)			  ## l2cap.c:2217:26
 1e08844:    10 f2 2f 00       	if (r0 == r1) goto 94 <.GJTIE561_0_0_+0xCC : 1e088a6 >			  ## l2cap.c:2217:26
 1e08848:    0d f6 00 d0       	r13 = [r13 + 0]
 1e0884c:    0d e0 f6 1f       	if (r13 != 0) goto -20 <.GJTIE561_0_0_+0x62 : 1e0883c >
 1e08850:    a3 04             	r3 = r2.l (u)			  ## l2cap.c:1388:9
 1e08852:    21 70             	r1 = 2			  ## l2cap.c:1388:9
 1e08854:    20 70             	r0 = 2			  ## l2cap.c:1388:9
 1e08856:    08 02             	[sp] = r0
 1e08858:    70 08             	r0 = r7
 1e0885a:    52 08             	r2 = r5
 1e0885c:    2f 16             	call -930 <l2cap_register_signaling_response : 1e084bc >
 1e0885e:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >
 1e08864:    b3 18             	goto 358 <.GJTIE561_0_0_+0x1F2 : 1e089cc >
 1e08866:    50 6c             	r0 = b[r6 + 5] (u)			  ## l2cap.c:1746:28
 1e08868:    41 6c             	r1 = b[r6 + 4] (u)			  ## l2cap.c:1746:28
 1e0886a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1746:28
 1e0886e:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1747:13
 1e08870:    a1 70             	r1 = 10			  ## l2cap.c:1747:13
 1e08872:    03 70             	r3 = 0			  ## l2cap.c:1747:13
 1e08874:    08 02             	[sp] = r0			  ## l2cap.c:1747:13
 1e08876:    a7 18             	goto 334 <.GJTIE561_0_0_+0x1EC : 1e089c6 >			  ## l2cap.c:1747:13
 1e08878:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1762:37
 1e0887c:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:1762:37
 1e0887e:    a6 20             	if (r0 == 0) goto 332 <.GJTIE561_0_0_+0x1F2 : 1e089cc >
 1e08880:    53 6c             	r3 = b[r6 + 5] (u)			  ## l2cap.c:1757:16
 1e08882:    42 6c             	r2 = b[r6 + 4] (u)			  ## l2cap.c:1757:16
 1e08884:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## l2cap.c:1757:16
 1e08888:    23 50             	r3 = h[r0 + 4] (u)			  ## l2cap.c:1764:26
 1e0888a:    73 f2 09 10       	if (r3 != r7) goto 18 <.GJTIE561_0_0_+0xC6 : 1e088a0 >			  ## l2cap.c:1764:26
 1e0888e:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE561_0_0_+0xC0 : 1e0889a >
 1e08892:    f3 50             	r3 = h[r0 + 30] (u)			  ## l2cap.c:1773:25
 1e08894:    23 f2 04 10       	if (r3 != r2) goto 8 <.GJTIE561_0_0_+0xC6 : 1e088a0 >			  ## l2cap.c:1773:25
 1e08898:    81 18             	goto 258 <.GJTIE561_0_0_+0x1C2 : 1e0899c >			  ## l2cap.c:1773:25
 1e0889a:    43 61             	r3 = b[r0 + 20] (u)			  ## l2cap.c:1767:52
 1e0889c:    53 f2 7e 00       	if (r3 == r5) goto 252 <.GJTIE561_0_0_+0x1C2 : 1e0899c >			  ## l2cap.c:1767:52
 1e088a0:    00 40             	r0 = [r0 + 0]
 1e088a2:    f2 31             	if (r0 != 0) goto -28 <.GJTIE561_0_0_+0xAE : 1e08888 >
 1e088a4:    93 18             	goto 294 <.GJTIE561_0_0_+0x1F2 : 1e089cc >
 1e088a6:    2a 02             	[sp+8] = r2
 1e088a8:    70 08             	r0 = r7			  ## l2cap.c:1392:27
 1e088aa:    bf f3 c4 f9       	call -3192 <connection_address_for_handle : 1e07c36 >			  ## l2cap.c:1392:27
 1e088ae:    03 08             	r3 = r0			  ## l2cap.c:1392:27
 1e088b0:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >
 1e088b6:    8a 26             	if (r3 == 0) goto 276 <.GJTIE561_0_0_+0x1F2 : 1e089cc >
 1e088b8:    1f 16             	call -962 <btstack_memory_l2cap_channel_get : 1e084f8 >			  ## l2cap.c:1400:35
 1e088ba:    0a 08             	r10 = r0			  ## l2cap.c:1400:35
 1e088bc:    72 20             	if (r0 == 0) goto 228 <.GJTIE561_0_0_+0x1C8 : 1e089a2 >			  ## l2cap.c:1400:35
 1e088be:    60 81             	r0 += 22			  ## l2cap.c:1408:5
 1e088c0:    62 70             	r2 = 6			  ## l2cap.c:1408:5
 1e088c2:    18 02             	[sp+4] = r0			  ## l2cap.c:1408:5
 1e088c4:    31 08             	r1 = r3			  ## l2cap.c:1408:5
 1e088c6:    97 f3 0d f3       	call 3139098 <memcpy : 106ee4 >			  ## l2cap.c:1408:5
 1e088ca:    1c f7 1c a0       	h[r10 + 28] = r12			  ## l2cap.c:1409:36
 1e088ce:    40 02             	r0 = [sp+16]			  ## l2cap.c:1410:21
 1e088d0:    10 f7 04 a0       	h[r10 + 4] = r0			  ## l2cap.c:1410:21
 1e088d4:    00 f6 08 d0       	r0 = [r13 + 8]			  ## l2cap.c:1411:36
 1e088d8:    10 f6 08 a0       	[r10 + 8] = r0			  ## l2cap.c:1411:25
 1e088dc:    00 f6 0c d0       	r0 = [r13 + 12]			  ## l2cap.c:1412:40
 1e088e0:    10 f6 0c a0       	[r10 + 12] = r0			  ## l2cap.c:1412:29
 1e088e4:    00 f7 36 b0       	r0 = h[r11 + 54] (u)			  ## l2cap.c:133:59
 1e088e8:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e088ea:    11 f7 36 b0       	h[r11 + 54] = r1			  ## l2cap.c:133:59
 1e088ee:    10 f7 1e a0       	h[r10 + 30] = r0			  ## l2cap.c:1413:43
 1e088f2:    20 02             	r0 = [sp+8]			  ## l2cap.c:1414:43
 1e088f4:    10 f7 20 a0       	h[r10 + 32] = r0			  ## l2cap.c:1414:43
 1e088f8:    00 f7 06 d0       	r0 = h[r13 + 6] (u)			  ## l2cap.c:1415:54
 1e088fc:    10 f7 22 a0       	h[r10 + 34] = r0			  ## l2cap.c:1415:43
 1e08900:    01 fb 9c 02       	r1 = 668 <_MASK_MEM_SIZE+0x8 : 29c >			  ## l2cap.c:1416:43
 1e08904:    11 f7 24 a0       	h[r10 + 36] = r1			  ## l2cap.c:1416:43
 1e08908:    15 f9 13 a0       	b[r10 + 19] = r5			  ## l2cap.c:1417:46
 1e0890c:    01 f9 28 b0       	r1 = b[r11 + 40] (u)			  ## l2cap.c:1419:39
 1e08910:    89 d0             	r1 = r1 >> 2			  ## l2cap.c:1419:9
 1e08912:    21 fd 04 19       	r1 = r1 & 4			  ## l2cap.c:1419:9
 1e08916:    11 f9 26 a0       	b[r10 + 38] = r1			  ## l2cap.c:1419:9
 1e0891a:    03 ff 9d 02 04 00 	if (r0 < 669) goto 8 <.GJTIE561_0_0_+0x14E : 1e08928 >			  ## l2cap.c:1419:9
 1e08920:    00 fb 9c 02       	r0 = 668 <_MASK_MEM_SIZE+0x8 : 29c >			  ## l2cap.c:1426:46
 1e08924:    10 f7 22 a0       	h[r10 + 34] = r0			  ## l2cap.c:1426:46
 1e08928:    40 70             	r0 = 4			  ## l2cap.c:1430:38
 1e0892a:    10 f9 12 a0       	b[r10 + 18] = r0			  ## l2cap.c:1430:38
 1e0892e:    1e f7 10 a0       	h[r10 + 16] = r14			  ## l2cap.c:1431:42
 1e08932:    b0 fc 08 00       	r0 = r11 + 8			  ## l2cap.c:1434:5
 1e08936:    a1 08             	r1 = r10			  ## l2cap.c:1434:5
 1e08938:    e7 15             	call -1074 <btstack_linked_list_add : 1e08508 >			  ## l2cap.c:1434:5
 1e0893a:    20 77             	r0 = 114			  ## l2cap.c:356:14
 1e0893c:    d0 f5 2c 00       	b[sp+44] = r0			  ## l2cap.c:356:14
 1e08940:    e0 70             	r0 = 14			  ## l2cap.c:357:14
 1e08942:    d0 f5 2d 00       	b[sp+45] = r0			  ## l2cap.c:357:14
 1e08946:    62 70             	r2 = 6			  ## utils.c:188:5
 1e08948:    30 02             	r0 = [sp+12]			  ## utils.c:188:5
 1e0894a:    11 02             	r1 = [sp+4]			  ## utils.c:188:5
 1e0894c:    97 f3 ca f2       	call 3138964 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e08950:    00 f7 04 a0       	r0 = h[r10 + 4] (u)			  ## l2cap.c:359:37
 1e08954:    d0 f5 34 00       	b[sp+52] = r0			  ## utils.c:160:19
 1e08958:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e0895a:    d0 f5 35 00       	b[sp+53] = r0			  ## utils.c:161:19
 1e0895e:    00 f7 1c a0       	r0 = h[r10 + 28] (u)			  ## l2cap.c:360:55
 1e08962:    d0 f5 36 00       	b[sp+54] = r0			  ## utils.c:160:19
 1e08966:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08968:    d0 f5 37 00       	b[sp+55] = r0			  ## utils.c:161:19
 1e0896c:    00 f7 1e a0       	r0 = h[r10 + 30] (u)			  ## l2cap.c:361:55
 1e08970:    d0 f5 38 00       	b[sp+56] = r0			  ## utils.c:160:19
 1e08974:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08976:    d0 f5 39 00       	b[sp+57] = r0			  ## utils.c:161:19
 1e0897a:    00 f7 20 a0       	r0 = h[r10 + 32] (u)			  ## l2cap.c:362:55
 1e0897e:    d0 f5 3a 00       	b[sp+58] = r0			  ## utils.c:160:19
 1e08982:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e08984:    d0 f5 3b 00       	b[sp+59] = r0			  ## utils.c:161:19
 1e08988:    c2 a2             	r2 = sp + 44			  ## utils.c:161:19
 1e0898a:    41 70             	r1 = 4			  ## l2cap.c:363:5
 1e0898c:    03 71             	r3 = 16			  ## l2cap.c:363:5
 1e0898e:    a0 08             	r0 = r10			  ## l2cap.c:363:5
 1e08990:    bf f3 f5 fa       	call -2582 <l2cap_dispatch : 1e07f7e >			  ## l2cap.c:363:5
 1e08994:    ca ff 98 1a 00 00 	r10 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:363:5
 1e0899a:    18 18             	goto 48 <.GJTIE561_0_0_+0x1F2 : 1e089cc >			  ## l2cap.c:363:5
 1e0899c:    61 08             	r1 = r6
 1e0899e:    be 15             	call -1156 <l2cap_signaling_handler_channel : 1e0851c >
 1e089a0:    15 18             	goto 42 <.GJTIE561_0_0_+0x1F2 : 1e089cc >
 1e089a2:    20 02             	r0 = [sp+8]			  ## l2cap.c:1403:9
 1e089a4:    23 04             	r3 = r0.l (u)			  ## l2cap.c:1403:9
 1e089a6:    21 70             	r1 = 2			  ## l2cap.c:1403:9
 1e089a8:    40 70             	r0 = 4			  ## l2cap.c:1403:9
 1e089aa:    55 1f             	goto -342 <.GJTIE561_0_0_+0x7C : 1e08856 >			  ## l2cap.c:1403:9
 1e089ac:    80 fb 40 6f       	r6 = r15 + r4			  ## l2cap.c:1950:55
 1e089b0:    01 6c             	r1 = b[r6 + 0] (u)			  ## l2cap.c:1717:17
 1e089b2:    15 6c             	r5 = b[r6 + 1] (u)			  ## l2cap.c:1718:17
 1e089b4:    04 22             	if (r1 == 0) goto 8 <.GJTIE561_0_0_+0x1E4 : 1e089be >			  ## l2cap.c:1718:17
 1e089b6:    91 e0 02 00       	if (r1 == 9) goto 4 <.GJTIE561_0_0_+0x1E4 : 1e089be >
 1e089ba:    c1 e0 1b 3f       	if (r1 < 12) goto -458 <.GJTIE561_0_0_+0x1A : 1e087f4 >
 1e089be:    11 70             	r1 = 1			  ## l2cap.c:1722:9
 1e089c0:    03 70             	r3 = 0			  ## l2cap.c:1722:9
 1e089c2:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:1722:9
 1e089c6:    70 08             	r0 = r7
 1e089c8:    52 08             	r2 = r5
 1e089ca:    78 15             	call -1296 <l2cap_register_signaling_response : 1e084bc >
 1e089cc:    30 6c             	r0 = b[r6 + 3] (u)			  ## l2cap.c:1953:69
 1e089ce:    21 6c             	r1 = b[r6 + 2] (u)			  ## l2cap.c:1953:69
 1e089d0:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1953:69
 1e089d4:    40 b8             	r0 = r4 + r1			  ## l2cap.c:1953:67
 1e089d6:    40 80             	r0 += 4			  ## l2cap.c:1953:28
 1e089d8:    24 04             	r4 = r0.l (u)			  ## l2cap.c:1948:16
 1e089da:    94 f2 e7 3f       	if (r4 < r9) goto -50 <.GJTIE561_0_0_+0x1D2 : 1e089ac >			  ## l2cap.c:1948:16
 1e089de:    51 19             	goto 674 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1948:16
 1e089e0:    80 e1 22 01       	if (r0 == 24) goto 580 <.GJTIE561_0_0_+0x44E : 1e08c28 >
 1e089e4:    30 e7 38 11       	if (r0 != 115) goto 624 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e089e8:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1330:37
 1e089ec:    02 f9 03 f0       	r2 = b[r15 + 3] (u)			  ## l2cap.c:1325:18
 1e089f0:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1325:18
 1e089f4:    21 42             	r1 = [r1 + 8]			  ## l2cap.c:1325:18
 1e089f6:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)			  ## l2cap.c:1325:18
 1e089fa:    0d 22             	if (r1 == 0) goto 26 <.GJTIE561_0_0_+0x23C : 1e08a16 >			  ## l2cap.c:1325:18
 1e089fc:    02 70             	r2 = 0
 1e089fe:    23 04             	r3 = r0.l (u)
 1e08a00:    24 52             	r4 = h[r1 + 4] (u)			  ## l2cap.c:1332:27
 1e08a02:    34 f2 04 10       	if (r4 != r3) goto 8 <.GJTIE561_0_0_+0x234 : 1e08a0e >			  ## l2cap.c:1332:27
 1e08a06:    e4 52             	r4 = h[r1 + 28] (u)			  ## l2cap.c:1332:76
 1e08a08:    14 e0 01 00       	if (r4 == 1) goto 2 <.GJTIE561_0_0_+0x234 : 1e08a0e >
 1e08a0c:    12 70             	r2 = 1
 1e08a0e:    01 42             	r1 = [r1 + 0]
 1e08a10:    f7 33             	if (r1 != 0) goto -18 <.GJTIE561_0_0_+0x226 : 1e08a00 >
 1e08a12:    02 e0 21 11       	if (r2 != 0) goto 578 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e08a16:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1339:9
 1e08a18:    31 71             	r1 = 19			  ## l2cap.c:1339:9
 1e08a1a:    bf f3 0e f9       	call -3556 <hci_disconnect_cmd : 1e07c3a >			  ## l2cap.c:1339:9
 1e08a1e:    1c 19             	goto 568 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1339:9
 1e08a20:    76 16             	call -788 <l2cap_get_channel_for_local_cid : 1e0870e >			  ## l2cap.c:1995:36
 1e08a22:    00 e0 2e 01       	if (r0 == 0) goto 604 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >
 1e08a26:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:1997:57
 1e08a2a:    91 fc f8 ff       	r1 = r9 + -8			  ## l2cap.c:1997:93
 1e08a2e:    63 04             	r3 = r1.l (u)			  ## l2cap.c:1997:13
 1e08a30:    61 70             	r1 = 6			  ## l2cap.c:1997:13
 1e08a32:    bf f3 a4 fa       	call -2744 <l2cap_dispatch : 1e07f7e >			  ## l2cap.c:1997:13
 1e08a36:    25 19             	goto 586 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >
 1e08a38:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:1977:90
 1e08a3a:    04 e0 22 01       	if (r4 == 0) goto 580 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1977:90
 1e08a3e:    40 02             	r0 = [sp+16]			  ## l2cap.c:1978:17
 1e08a40:    21 04             	r1 = r0.l (u)			  ## l2cap.c:1978:17
 1e08a42:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:1978:128
 1e08a46:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:1978:164
 1e08a4a:    23 04             	r3 = r0.l (u)			  ## l2cap.c:1978:17
 1e08a4c:    80 70             	r0 = 8			  ## l2cap.c:1978:17
 1e08a4e:    84 00             	call r4			  ## l2cap.c:1978:17
 1e08a50:    18 19             	goto 560 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1978:17
 1e08a52:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## l2cap.c:1963:28
 1e08a56:    01 f9 0a f0       	r1 = b[r15 + 10] (u)			  ## l2cap.c:1963:28
 1e08a5a:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:1963:28
 1e08a5e:    c0 92             	r0 = r1 + 12			  ## l2cap.c:1964:43
 1e08a60:    90 f2 0f 81       	if (r0 > r9) goto 542 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1964:43
 1e08a64:    05 f9 09 f0       	r5 = b[r15 + 9] (u)			  ## l2cap.c:1962:31
 1e08a68:    07 f9 08 f0       	r7 = b[r15 + 8] (u)			  ## l2cap.c:1819:22
 1e08a6c:    f6 fc 08 00       	r6 = r15 + 8			  ## l2cap.c:1967:76
 1e08a70:    21 70             	r1 = 2			  ## l2cap.c:1820:22
 1e08a72:    60 08             	r0 = r6			  ## l2cap.c:1820:22
 1e08a74:    bf f3 7d f3       	call -6406 <little_endian_read_16 : 1e07172 >			  ## l2cap.c:1820:22
 1e08a78:    77 e0 03 01       	if (r7 == 7) goto 518 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1820:22
 1e08a7c:    c4 ff 9c 1a 00 00 	r4 = 6812 <le_l2cap_event_packet_handler : 1a9c >
 1e08a82:    37 e1 f4 00       	if (r7 == 19) goto 488 <.GJTIE561_0_0_+0x494 : 1e08c6e >
 1e08a86:    27 e1 f4 10       	if (r7 != 18) goto 488 <.GJTIE561_0_0_+0x498 : 1e08c72 >
 1e08a8a:    80 e0 f2 30       	if (r0 < 8) goto 484 <.GJTIE561_0_0_+0x498 : 1e08c72 >
 1e08a8e:    40 02             	r0 = [sp+16]			  ## l2cap.c:1831:22
 1e08a90:    27 04             	r7 = r0.l (u)			  ## l2cap.c:1831:22
 1e08a92:    70 08             	r0 = r7			  ## l2cap.c:1831:22
 1e08a94:    bf f3 92 f3       	call -6364 <le_hci_connection_for_handle : 1e071bc >			  ## l2cap.c:1831:22
 1e08a98:    02 08             	r2 = r0			  ## l2cap.c:1831:22
 1e08a9a:    02 e0 6e 01       	if (r2 == 0) goto 732 <.GJTIE561_0_0_+0x5A0 : 1e08d7a >
 1e08a9e:    00 65             	r0 = b[r2 + 16] (u)			  ## l2cap.c:1833:29
 1e08aa0:    00 e0 32 01       	if (r0 == 0) goto 612 <.GJTIE561_0_0_+0x52E : 1e08d08 >			  ## l2cap.c:1833:17
 1e08aa4:    02 f9 11 f0       	r2 = b[r15 + 17] (u)			  ## l2cap.c:1837:17
 1e08aa8:    00 70             	r0 = 0
 1e08aaa:    f1 71             	r1 = 31			  ## l2cap.c:1837:17
 1e08aac:    03 70             	r3 = 0			  ## l2cap.c:1837:17
 1e08aae:    08 02             	[sp] = r0			  ## l2cap.c:1837:17
 1e08ab0:    70 08             	r0 = r7			  ## l2cap.c:1837:17
 1e08ab2:    e6 18             	goto 460 <.GJTIE561_0_0_+0x4A6 : 1e08c80 >			  ## l2cap.c:1837:17
 1e08ab4:    24 48             	r4 = [r4 + 8]			  ## l2cap.c:1985:97
 1e08ab6:    e5 28             	if (r4 == 0) goto 458 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1985:97
 1e08ab8:    40 02             	r0 = [sp+16]			  ## l2cap.c:1986:17
 1e08aba:    21 04             	r1 = r0.l (u)			  ## l2cap.c:1986:17
 1e08abc:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:1986:134
 1e08ac0:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:1986:170
 1e08ac4:    23 04             	r3 = r0.l (u)			  ## l2cap.c:1986:17
 1e08ac6:    90 70             	r0 = 9			  ## l2cap.c:1986:17
 1e08ac8:    84 00             	call r4			  ## l2cap.c:1986:17
 1e08aca:    db 18             	goto 438 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1986:17
 1e08acc:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e08ad0:    01 f9 09 f0       	r1 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e08ad4:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e08ad8:    91 f5 20 00       	h[sp+32] = r1			  ## utils.c:188:5
 1e08adc:    00 f9 08 f0       	r0 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e08ae0:    01 f9 07 f0       	r1 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e08ae4:    02 f9 06 f0       	r2 = b[r15 + 6] (u)			  ## utils.c:188:5
 1e08ae8:    03 f9 05 f0       	r3 = b[r15 + 5] (u)			  ## utils.c:188:5
 1e08aec:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e08af0:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e08af4:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e08af8:    7b 02             	[sp+28] = r3			  ## utils.c:188:5
 1e08afa:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e08afe:    90 b0             	r0 |= 2			  ## l2cap.c:1214:42
 1e08b00:    20 e0 aa 00       	if (r0 == 2) goto 340 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1214:42
 1e08b04:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1217:13
 1e08b08:    c0 20             	if (r0 == 0) goto 384 <.GJTIE561_0_0_+0x4B0 : 1e08c8a >			  ## l2cap.c:1217:13
 1e08b0a:    c0 a1             	r0 = sp + 28
 1e08b0c:    51 72             	r1 = 37			  ## l2cap.c:1225:13
 1e08b0e:    02 70             	r2 = 0			  ## l2cap.c:1225:13
 1e08b10:    bf f3 34 f8       	call -3992 <check_l2cap_authentication_flag : 1e07b7c >			  ## l2cap.c:1225:13
 1e08b14:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1076:44
 1e08b18:    20 42             	r0 = [r1 + 8]			  ## l2cap.c:1077:16
 1e08b1a:    9e 20             	if (r0 == 0) goto 316 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1077:16
 1e08b1c:    05 f9 02 f0       	r5 = b[r15 + 2] (u)			  ## l2cap.c:1227:62
 1e08b20:    84 92             	r4 = r1 + 8			  ## l2cap.c:1076:57
 1e08b22:    46 08             	r6 = r4			  ## l2cap.c:1076:57
 1e08b24:    67 08             	r7 = r6
 1e08b26:    06 08             	r6 = r0
 1e08b28:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1079:15
 1e08b2a:    c1 a1             	r1 = sp + 28			  ## l2cap.c:1079:15
 1e08b2c:    62 70             	r2 = 6			  ## l2cap.c:1079:15
 1e08b2e:    97 f3 dd f1       	call 3138490 <memcmp : 106eec >			  ## l2cap.c:1079:15
 1e08b32:    10 30             	if (r0 != 0) goto 32 <.GJTIE561_0_0_+0x37A : 1e08b54 >			  ## l2cap.c:1079:13
 1e08b34:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1080:34
 1e08b36:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1080:22
 1e08b38:    20 6d             	r0 = b[r6 + 18] (u)			  ## l2cap.c:1081:44
 1e08b3a:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1081:90
 1e08b3c:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE561_0_0_+0x374 : 1e08b4e >			  ## l2cap.c:1081:90
 1e08b40:    60 08             	r0 = r6			  ## l2cap.c:1083:17
 1e08b42:    51 08             	r1 = r5			  ## l2cap.c:1083:17
 1e08b44:    bf f3 30 fa       	call -2976 <l2cap_emit_channel_opened : 1e07fa8 >			  ## l2cap.c:1083:17
 1e08b48:    60 08             	r0 = r6			  ## l2cap.c:1086:17
 1e08b4a:    bf f3 0d fa       	call -3046 <btstack_memory_l2cap_channel_free : 1e07f68 >			  ## l2cap.c:1086:17
 1e08b4e:    06 48             	r6 = [r4 + 0]			  ## l2cap.c:1077:16
 1e08b50:    eb 3d             	if (r6 != 0) goto -42 <.GJTIE561_0_0_+0x34E : 1e08b28 >
 1e08b52:    82 18             	goto 260 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e08b54:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1077:16
 1e08b56:    64 08             	r4 = r6			  ## l2cap.c:1077:16
 1e08b58:    e5 31             	if (r0 != 0) goto -54 <.GJTIE561_0_0_+0x34A : 1e08b24 >			  ## l2cap.c:1077:16
 1e08b5a:    7e 18             	goto 252 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1077:16
 1e08b5c:    72 e0 7c 30       	if (r2 < 7) goto 248 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e08b60:    00 f9 06 f0       	r0 = b[r15 + 6] (u)			  ## l2cap.c:1253:21
 1e08b64:    90 b0             	r0 |= 2			  ## l2cap.c:1261:13
 1e08b66:    00 04             	r0 = r0.b0 (u)			  ## l2cap.c:1261:13
 1e08b68:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1261:13
 1e08b6c:    00 f9 0c f0       	r0 = b[r15 + 12] (u)			  ## utils.c:188:5
 1e08b70:    02 f9 0b f0       	r2 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e08b74:    01 f9 04 f0       	r1 = b[r15 + 4] (u)			  ## l2cap.c:1276:18
 1e08b78:    04 f9 03 f0       	r4 = b[r15 + 3] (u)			  ## l2cap.c:1276:18
 1e08b7c:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e08b80:    92 f5 18 00       	h[sp+24] = r2			  ## utils.c:188:5
 1e08b84:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e08b88:    03 f9 09 f0       	r3 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e08b8c:    05 f9 08 f0       	r5 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e08b90:    06 f9 07 f0       	r6 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e08b94:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e08b98:    02 f6 00 a0       	r2 = [r10 + 0]			  ## l2cap.c:1279:33
 1e08b9c:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## utils.c:188:5
 1e08ba0:    d0 fd 80 63       	r6 <= insert(r3, p:16, l:16)			  ## utils.c:188:5
 1e08ba4:    5e 02             	[sp+20] = r6			  ## utils.c:188:5
 1e08ba6:    20 44             	r0 = [r2 + 8]			  ## l2cap.c:1280:20
 1e08ba8:    29 20             	if (r0 == 0) goto 82 <.GJTIE561_0_0_+0x422 : 1e08bfc >			  ## l2cap.c:1280:20
 1e08baa:    86 94             	r6 = r2 + 8			  ## l2cap.c:1279:46
 1e08bac:    c8 fd 40 41       	r4 <= insert(r1, p:8, l:8)			  ## l2cap.c:1276:18
 1e08bb0:    65 08             	r5 = r6			  ## l2cap.c:1276:18
 1e08bb2:    57 08             	r7 = r5
 1e08bb4:    05 08             	r5 = r0
 1e08bb6:    61 9b             	r1 = r5 + 22			  ## l2cap.c:1286:17
 1e08bb8:    40 a1             	r0 = sp + 20			  ## l2cap.c:1286:17
 1e08bba:    62 70             	r2 = 6			  ## l2cap.c:1286:17
 1e08bbc:    97 f3 96 f1       	call 3138348 <memcmp : 106eec >			  ## l2cap.c:1286:17
 1e08bc0:    1a 30             	if (r0 != 0) goto 52 <.GJTIE561_0_0_+0x41C : 1e08bf6 >			  ## l2cap.c:1286:17
 1e08bc2:    20 5a             	r0 = h[r5 + 4] (u)			  ## l2cap.c:1287:21
 1e08bc4:    02 20             	if (r0 == 0) goto 4 <.GJTIE561_0_0_+0x3F0 : 1e08bca >			  ## l2cap.c:1287:21
 1e08bc6:    40 f2 16 10       	if (r0 != r4) goto 44 <.GJTIE561_0_0_+0x41C : 1e08bf6 >
 1e08bca:    00 4e             	r0 = [r7 + 0]			  ## l2cap.c:1290:36
 1e08bcc:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:1290:42
 1e08bce:    01 9b             	r1 = r5 + 16			  ## l2cap.c:1286:17
 1e08bd0:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1290:30
 1e08bd2:    20 62             	r0 = b[r1 + 2] (u)			  ## l2cap.c:1291:53
 1e08bd4:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1291:80
 1e08bd6:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE561_0_0_+0x408 : 1e08be2 >			  ## l2cap.c:1291:80
 1e08bda:    50 08             	r0 = r5			  ## l2cap.c:1295:25
 1e08bdc:    bf f3 36 fa       	call -2964 <l2cap_emit_channel_closed : 1e0804c >			  ## l2cap.c:1295:25
 1e08be0:    04 18             	goto 8 <.GJTIE561_0_0_+0x410 : 1e08bea >			  ## l2cap.c:1295:25
 1e08be2:    01 75             	r1 = 80			  ## l2cap.c:1293:25
 1e08be4:    50 08             	r0 = r5			  ## l2cap.c:1293:25
 1e08be6:    bf f3 df f9       	call -3138 <l2cap_emit_channel_opened : 1e07fa8 >			  ## l2cap.c:1293:25
 1e08bea:    50 08             	r0 = r5			  ## l2cap.c:1297:21
 1e08bec:    bf f3 bc f9       	call -3208 <btstack_memory_l2cap_channel_free : 1e07f68 >			  ## l2cap.c:1297:21
 1e08bf0:    05 4c             	r5 = [r6 + 0]			  ## l2cap.c:1280:20
 1e08bf2:    e1 3b             	if (r5 != 0) goto -62 <.GJTIE561_0_0_+0x3DC : 1e08bb6 >			  ## l2cap.c:1280:20
 1e08bf4:    03 18             	goto 6 <.GJTIE561_0_0_+0x422 : 1e08bfc >			  ## l2cap.c:1280:20
 1e08bf6:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1280:20
 1e08bf8:    56 08             	r6 = r5			  ## l2cap.c:1280:20
 1e08bfa:    db 31             	if (r0 != 0) goto -74 <.GJTIE561_0_0_+0x3D8 : 1e08bb2 >			  ## l2cap.c:1280:20
 1e08bfc:    40 a1             	r0 = sp + 20
 1e08bfe:    51 72             	r1 = 37			  ## l2cap.c:1307:9
 1e08c00:    02 70             	r2 = 0			  ## l2cap.c:1307:9
 1e08c02:    bf f3 bb f7       	call -4234 <check_l2cap_authentication_flag : 1e07b7c >			  ## l2cap.c:1307:9
 1e08c06:    28 18             	goto 80 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1307:9
 1e08c08:    bf f3 4f fa       	call -2914 <l2cap_run : 1e080aa >			  ## l2cap.c:1312:9
 1e08c0c:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:384:33
 1e08c10:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:384:33
 1e08c12:    22 2a             	if (r5 == 0) goto 68 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e08c14:    20 6b             	r0 = b[r5 + 18] (u)			  ## l2cap.c:389:44
 1e08c16:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE561_0_0_+0x448 : 1e08c22 >			  ## l2cap.c:389:44
 1e08c1a:    11 70             	r1 = 1			  ## l2cap.c:393:17
 1e08c1c:    50 08             	r0 = r5			  ## l2cap.c:393:17
 1e08c1e:    bf f3 ff f9       	call -3074 <l2cap_emit_credits : 1e08020 >			  ## l2cap.c:393:17
 1e08c22:    05 4a             	r5 = [r5 + 0]
 1e08c24:    f7 3b             	if (r5 != 0) goto -18 <.GJTIE561_0_0_+0x43A : 1e08c14 >
 1e08c26:    18 18             	goto 48 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e08c28:    f5 fc 02 00       	r5 = r15 + 2			  ## l2cap.c:1342:55
 1e08c2c:    71 72             	r1 = 39			  ## l2cap.c:1342:22
 1e08c2e:    02 70             	r2 = 0			  ## l2cap.c:1342:22
 1e08c30:    50 08             	r0 = r5			  ## l2cap.c:1342:22
 1e08c32:    bf f3 a3 f7       	call -4282 <check_l2cap_authentication_flag : 1e07b7c >			  ## l2cap.c:1342:22
 1e08c36:    01 08             	r1 = r0			  ## l2cap.c:1342:22
 1e08c38:    0f 22             	if (r1 == 0) goto 30 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1342:22
 1e08c3a:    50 08             	r0 = r5			  ## l2cap.c:1345:13
 1e08c3c:    bf f3 5e f7       	call -4420 <handle_remote_dev_type : 1e07afc >			  ## l2cap.c:1345:13
 1e08c40:    0b 18             	goto 22 <.GJTIE561_0_0_+0x47E : 1e08c58 >			  ## l2cap.c:1345:13
 1e08c42:    bf f3 f8 f7       	call -4112 <connection_address_for_handle : 1e07c36 >
 1e08c46:    08 20             	if (r0 == 0) goto 16 <.GJTIE561_0_0_+0x47E : 1e08c58 >
 1e08c48:    41 72             	r1 = 36
 1e08c4a:    22 72             	r2 = 34
 1e08c4c:    bf f3 96 f7       	call -4308 <check_l2cap_authentication_flag : 1e07b7c >
 1e08c50:    bf f3 72 f1       	call -7452 <stack_run_loop_resume : 1e06f38 >
 1e08c54:    bf f3 29 fa       	call -2990 <l2cap_run : 1e080aa >
 1e08c58:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1354:5
 1e08c5c:    04 40             	r4 = [r0 + 0]			  ## l2cap.c:1354:18
 1e08c5e:    00 70             	r0 = 0			  ## l2cap.c:1354:5
 1e08c60:    41 70             	r1 = 4			  ## l2cap.c:1354:5
 1e08c62:    02 70             	r2 = 0			  ## l2cap.c:1354:5
 1e08c64:    19 f5 00 00       	[sp] = r9			  ## l2cap.c:1354:5
 1e08c68:    f3 08             	r3 = r15			  ## l2cap.c:1354:5
 1e08c6a:    84 00             	call r4			  ## l2cap.c:1354:5
 1e08c6c:    0c 18             	goto 24 <.GJTIE561_0_0_+0x4AC : 1e08c86 >			  ## l2cap.c:1354:5
 1e08c6e:    20 e0 2e 20       	if (r0 >= 2) goto 92 <.GJTIE561_0_0_+0x4F4 : 1e08cce >
 1e08c72:    02 70             	r2 = 0			  ## l2cap.c:1969:17
 1e08c74:    40 02             	r0 = [sp+16]			  ## l2cap.c:1969:17
 1e08c76:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1969:17
 1e08c78:    f1 71             	r1 = 31			  ## l2cap.c:1969:17
 1e08c7a:    03 70             	r3 = 0			  ## l2cap.c:1969:17
 1e08c7c:    0a 02             	[sp] = r2			  ## l2cap.c:1969:17
 1e08c7e:    52 08             	r2 = r5			  ## l2cap.c:1969:17
 1e08c80:    1d 14             	call -1990 <l2cap_register_signaling_response : 1e084bc >
 1e08c82:    bf f3 12 fa       	call -3036 <l2cap_run : 1e080aa >			  ## l2cap.c:2003:5
 1e08c86:    1e 0a             	sp += 60
 1e08c88:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:2018:1
 1e08c8a:    04 f6 00 a0       	r4 = [r10 + 0]			  ## l2cap.c:1097:33
 1e08c8e:    26 48             	r6 = [r4 + 8]			  ## l2cap.c:1097:33
 1e08c90:    e1 2d             	if (r6 == 0) goto -62 <.GJTIE561_0_0_+0x47A : 1e08c54 >
 1e08c92:    00 f9 04 f0       	r0 = b[r15 + 4] (u)			  ## l2cap.c:1218:22
 1e08c96:    07 f9 03 f0       	r7 = b[r15 + 3] (u)			  ## l2cap.c:1218:22
 1e08c9a:    f5 fc 05 00       	r5 = r15 + 5			  ## l2cap.c:1212:32
 1e08c9e:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## l2cap.c:1218:22
 1e08ca2:    a8 70             	r8 = 10			  ## l2cap.c:1218:22
 1e08ca4:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1099:15
 1e08ca6:    62 70             	r2 = 6			  ## l2cap.c:1099:15
 1e08ca8:    51 08             	r1 = r5			  ## l2cap.c:1099:15
 1e08caa:    97 f3 1f f1       	call 3138110 <memcmp : 106eec >			  ## l2cap.c:1099:15
 1e08cae:    0c 30             	if (r0 != 0) goto 24 <.GJTIE561_0_0_+0x4EE : 1e08cc8 >			  ## l2cap.c:1099:15
 1e08cb0:    00 9d             	r0 = r6 + 16			  ## l2cap.c:1099:15
 1e08cb2:    20 60             	r0 = b[r0 + 2] (u)			  ## l2cap.c:1100:44
 1e08cb4:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1100:90
 1e08cb6:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE561_0_0_+0x4EE : 1e08cc8 >			  ## l2cap.c:1100:90
 1e08cba:    18 f9 12 60       	b[r6 + 18] = r8			  ## l2cap.c:1102:50
 1e08cbe:    2f 5c             	h[r6 + 4] = r7			  ## l2cap.c:1103:33
 1e08cc0:    b0 59             	r0 = h[r4 + 54] (u)			  ## l2cap.c:133:59
 1e08cc2:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e08cc4:    b9 59             	h[r4 + 54] = r1			  ## l2cap.c:133:59
 1e08cc6:    f8 5c             	h[r6 + 30] = r0			  ## l2cap.c:1104:54
 1e08cc8:    06 4c             	r6 = [r6 + 0]
 1e08cca:    ec 3d             	if (r6 != 0) goto -40 <.GJTIE561_0_0_+0x4CA : 1e08ca4 >
 1e08ccc:    c3 1f             	goto -122 <.GJTIE561_0_0_+0x47A : 1e08c54 >
 1e08cce:    41 70             	r1 = 4			  ## l2cap.c:1916:18
 1e08cd0:    45 70             	r5 = 4			  ## l2cap.c:1916:18
 1e08cd2:    60 08             	r0 = r6			  ## l2cap.c:1916:18
 1e08cd4:    bf f3 4d f2       	call -7014 <little_endian_read_16 : 1e07172 >			  ## l2cap.c:1916:18
 1e08cd8:    71 77             	r1 = 119			  ## l2cap.c:1788:14
 1e08cda:    d1 f5 1c 00       	b[sp+28] = r1			  ## l2cap.c:1788:14
 1e08cde:    d5 f5 1d 00       	b[sp+29] = r5			  ## l2cap.c:1789:14
 1e08ce2:    d2 f5 1e 00       	b[sp+30] = r2			  ## utils.c:83:19
 1e08ce6:    19 d2             	r1 = r3 >> 8			  ## utils.c:84:21
 1e08ce8:    02 48             	r2 = [r4 + 0]			  ## l2cap.c:1798:10
 1e08cea:    d1 f5 1f 00       	b[sp+31] = r1			  ## utils.c:84:19
 1e08cee:    d0 f5 20 00       	b[sp+32] = r0			  ## utils.c:83:19
 1e08cf2:    00 d2             	r0 = r0 >> 8			  ## utils.c:84:21
 1e08cf4:    d0 f5 21 00       	b[sp+33] = r0			  ## utils.c:84:19
 1e08cf8:    c4 25             	if (r2 == 0) goto -120 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## utils.c:84:19
 1e08cfa:    c2 a1             	r2 = sp + 28
 1e08cfc:    40 70             	r0 = 4			  ## l2cap.c:1801:5
 1e08cfe:    01 70             	r1 = 0			  ## l2cap.c:1801:5
 1e08d00:    63 70             	r3 = 6			  ## l2cap.c:1801:5
 1e08d02:    bf f3 77 c0       	call -32530 <cbk_packet_handler : 1e00df4 >			  ## l2cap.c:1801:5
 1e08d06:    bd 1f             	goto -134 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1801:5
 1e08d08:    c0 ff 7e 1a 00 00 	r0 = 6782 <report_bss_size+0xEA : 1a7e >			  ## hci_vendor.c:2184:27
 1e08d0e:    51 50             	r1 = h[r0 + 10] (u)			  ## hci_vendor.c:2184:27
 1e08d10:    49 02             	[sp+16] = r1			  ## hci_vendor.c:2184:27
 1e08d12:    0b f7 08 00       	r11 = h[r0 + 8] (u)			  ## hci_vendor.c:2184:27
 1e08d16:    0c f7 06 00       	r12 = h[r0 + 6] (u)			  ## hci_vendor.c:2184:27
 1e08d1a:    0d f7 04 00       	r13 = h[r0 + 4] (u)			  ## hci_vendor.c:2184:27
 1e08d1e:    0e f7 02 00       	r14 = h[r0 + 2] (u)			  ## hci_vendor.c:2184:27
 1e08d22:    0a f7 00 00       	r10 = h[r0 + 0] (u)			  ## hci_vendor.c:2184:27
 1e08d26:    41 70             	r1 = 4			  ## l2cap.c:1843:45
 1e08d28:    49 70             	r9 = 4			  ## l2cap.c:1843:45
 1e08d2a:    60 08             	r0 = r6			  ## l2cap.c:1843:45
 1e08d2c:    bf f3 21 f2       	call -7102 <little_endian_read_16 : 1e07172 >			  ## l2cap.c:1843:45
 1e08d30:    08 08             	r8 = r0			  ## l2cap.c:1843:45
 1e08d32:    61 70             	r1 = 6			  ## l2cap.c:1844:45
 1e08d34:    60 08             	r0 = r6			  ## l2cap.c:1844:45
 1e08d36:    bf f3 1c f2       	call -7112 <little_endian_read_16 : 1e07172 >			  ## l2cap.c:1844:45
 1e08d3a:    07 08             	r7 = r0			  ## l2cap.c:1844:45
 1e08d3c:    81 70             	r1 = 8			  ## l2cap.c:1845:40
 1e08d3e:    60 08             	r0 = r6			  ## l2cap.c:1845:40
 1e08d40:    bf f3 17 f2       	call -7122 <little_endian_read_16 : 1e07172 >			  ## l2cap.c:1845:40
 1e08d44:    03 08             	r3 = r0			  ## l2cap.c:1845:40
 1e08d46:    a1 70             	r1 = 10			  ## l2cap.c:1846:47
 1e08d48:    60 08             	r0 = r6			  ## l2cap.c:1846:47
 1e08d4a:    bf f3 12 f2       	call -7132 <little_endian_read_16 : 1e07172 >			  ## l2cap.c:1846:47
 1e08d4e:    a8 f2 11 30       	if (r8 < r10) goto 34 <.GJTIE561_0_0_+0x59A : 1e08d74 >
 1e08d52:    e7 f2 0f 80       	if (r7 > r14) goto 30 <.GJTIE561_0_0_+0x59A : 1e08d74 >
 1e08d56:    d3 f2 0d 30       	if (r3 < r13) goto 26 <.GJTIE561_0_0_+0x59A : 1e08d74 >
 1e08d5a:    c3 f2 0b 80       	if (r3 > r12) goto 22 <.GJTIE561_0_0_+0x59A : 1e08d74 >
 1e08d5e:    b0 f2 09 30       	if (r0 < r11) goto 18 <.GJTIE561_0_0_+0x59A : 1e08d74 >
 1e08d62:    41 02             	r1 = [sp+16]
 1e08d64:    10 f2 06 80       	if (r0 > r1) goto 12 <.GJTIE561_0_0_+0x59A : 1e08d74 >
 1e08d68:    18 f7 1a 20       	h[r2 + 26] = r8			  ## l2cap.c:1885:50
 1e08d6c:    ef 54             	h[r2 + 28] = r7			  ## l2cap.c:1886:50
 1e08d6e:    fb 54             	h[r2 + 30] = r3			  ## l2cap.c:1887:45
 1e08d70:    08 55             	h[r2 + 32] = r0			  ## l2cap.c:1888:52
 1e08d72:    29 70             	r9 = 2			  ## l2cap.c:1888:52
 1e08d74:    19 f6 14 20       	[r2 + 20] = r9			  ## l2cap.c:1890:59
 1e08d78:    8d 65             	b[r2 + 24] = r5			  ## l2cap.c:1892:56
 1e08d7a:    00 48             	r0 = [r4 + 0]			  ## l2cap.c:1899:14
 1e08d7c:    82 21             	if (r0 == 0) goto -252 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1899:14
 1e08d7e:    60 77             	r0 = 118			  ## l2cap.c:1903:18
 1e08d80:    d0 f5 22 00       	b[sp+34] = r0			  ## l2cap.c:1903:18
 1e08d84:    80 70             	r0 = 8			  ## l2cap.c:1903:18
 1e08d86:    d0 f5 23 00       	b[sp+35] = r0			  ## l2cap.c:1904:18
 1e08d8a:    00 f9 0e f0       	r0 = b[r15 + 14] (u)			  ## l2cap.c:1905:9
 1e08d8e:    01 f9 12 f0       	r1 = b[r15 + 18] (u)			  ## l2cap.c:1905:9
 1e08d92:    02 f9 0c f0       	r2 = b[r15 + 12] (u)			  ## l2cap.c:1905:9
 1e08d96:    03 f9 0d f0       	r3 = b[r15 + 13] (u)			  ## l2cap.c:1905:9
 1e08d9a:    04 f9 13 f0       	r4 = b[r15 + 19] (u)			  ## l2cap.c:1905:9
 1e08d9e:    05 f9 11 f0       	r5 = b[r15 + 17] (u)			  ## l2cap.c:1905:9
 1e08da2:    06 f9 10 f0       	r6 = b[r15 + 16] (u)			  ## l2cap.c:1905:9
 1e08da6:    07 f9 0f f0       	r7 = b[r15 + 15] (u)			  ## l2cap.c:1905:9
 1e08daa:    d4 f5 2b 00       	b[sp+43] = r4			  ## l2cap.c:1905:9
 1e08dae:    d5 f5 29 00       	b[sp+41] = r5			  ## l2cap.c:1905:9
 1e08db2:    d6 f5 28 00       	b[sp+40] = r6			  ## l2cap.c:1905:9
 1e08db6:    d7 f5 27 00       	b[sp+39] = r7			  ## l2cap.c:1905:9
 1e08dba:    d3 f5 25 00       	b[sp+37] = r3			  ## l2cap.c:1905:9
 1e08dbe:    d2 f5 24 00       	b[sp+36] = r2			  ## l2cap.c:1905:9
 1e08dc2:    c8 fd 40 14       	r1 <= insert(r4, p:8, l:8)			  ## l2cap.c:1905:9
 1e08dc6:    d0 fd 80 61       	r6 <= insert(r1, p:16, l:16)			  ## l2cap.c:1905:9
 1e08dca:    31 d4             	r1 = r6 >> 16			  ## l2cap.c:1905:9
 1e08dcc:    d1 f5 2a 00       	b[sp+42] = r1			  ## l2cap.c:1905:9
 1e08dd0:    c8 fd 40 07       	r0 <= insert(r7, p:8, l:8)			  ## l2cap.c:1905:9
 1e08dd4:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## l2cap.c:1905:9
 1e08dd8:    10 d4             	r0 = r2 >> 16			  ## l2cap.c:1905:9
 1e08dda:    d0 f5 26 00       	b[sp+38] = r0			  ## l2cap.c:1905:9
 1e08dde:    22 a2             	r2 = sp + 34			  ## l2cap.c:1905:9
 1e08de0:    40 70             	r0 = 4			  ## l2cap.c:1908:9
 1e08de2:    01 70             	r1 = 0			  ## l2cap.c:1908:9
 1e08de4:    a3 70             	r3 = 10			  ## l2cap.c:1908:9
 1e08de6:    bf f3 05 c0       	call -32758 <cbk_packet_handler : 1e00df4 >			  ## l2cap.c:1908:9
 1e08dea:    4b 1f             	goto -362 <.GJTIE561_0_0_+0x4A8 : 1e08c82 >			  ## l2cap.c:1908:9


btstack_memory_le_hci_connection_free:
 1e08dec:    c1 ff 94 1a 00 00 	r1 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:226:0
 1e08df2:    01 42             	r1 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e08df4:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e08df6:    05 24             	if (r2 == 0) goto 10 <btstack_memory_le_hci_connection_free+0x16 : 1e08e02 >
 1e08df8:    23 08             	r3 = r2
 1e08dfa:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_le_hci_connection_free+0x1A : 1e08e06 >
 1e08dfe:    03 46             	r3 = [r3 + 0]
 1e08e00:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_le_hci_connection_free+0xE : 1e08dfa >
 1e08e02:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e08e04:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e08e06:    20 00             	rts			  ## btstack_memory.c:228:1


le_hci_connection_for_bd_addr_and_type:
 1e08e08:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_vendor.c:308:0
 1e08e0a:    fa 0b             	sp += -12			  ## hci_vendor.c:308:0
 1e08e0c:    14 08             	r4 = r1			  ## hci_vendor.c:308:0
 1e08e0e:    05 08             	r5 = r0			  ## hci_vendor.c:308:0
 1e08e10:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:162:14
 1e08e16:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e08e18:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e08e1a:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e08e1c:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e08e1e:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e08e20:    00 a0             	r0 = sp + 0
 1e08e22:    bf f3 ad f1       	call -7334 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## hci_vendor.c:311:12
 1e08e26:    0e 20             	if (r0 == 0) goto 28 <le_hci_connection_for_bd_addr_and_type+0x3C : 1e08e44 >
 1e08e28:    00 a0             	r0 = sp + 0
 1e08e2a:    bf f3 b7 f1       	call -7314 <btstack_linked_list_iterator_next : 1e0719c >			  ## hci_vendor.c:312:67
 1e08e2e:    06 08             	r6 = r0			  ## hci_vendor.c:312:67
 1e08e30:    30 4c             	r0 = [r6 + 12]			  ## hci_vendor.c:313:25
 1e08e32:    40 f2 f5 1f       	if (r0 != r4) goto -22 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e08e20 >			  ## hci_vendor.c:313:25
 1e08e36:    41 9c             	r1 = r6 + 4			  ## hci_vendor.c:316:38
 1e08e38:    62 70             	r2 = 6			  ## hci_vendor.c:316:13
 1e08e3a:    50 08             	r0 = r5			  ## hci_vendor.c:316:13
 1e08e3c:    97 f3 56 f0       	call 3137708 <memcmp : 106eec >			  ## hci_vendor.c:316:13
 1e08e40:    ef 31             	if (r0 != 0) goto -34 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e08e20 >			  ## hci_vendor.c:316:13
 1e08e42:    01 18             	goto 2 <le_hci_connection_for_bd_addr_and_type+0x3E : 1e08e46 >			  ## hci_vendor.c:316:13
 1e08e44:    06 70             	r6 = 0
 1e08e46:    60 08             	r0 = r6			  ## hci_vendor.c:322:1
 1e08e48:    06 0a             	sp += 12			  ## hci_vendor.c:322:1
 1e08e4a:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_vendor.c:322:1


le_create_connection_for_bd_addr_and_type:
 1e08e4c:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:283:0
 1e08e4e:    c2 ff 94 1a 00 00 	r2 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:223:29
 1e08e54:    02 44             	r2 = [r2 + 0]			  ## btstack_memory.c:223:29
 1e08e56:    04 44             	r4 = [r2 + 0]			  ## btstack_memory.c:66:23
 1e08e58:    15 08             	r5 = r1
 1e08e5a:    06 08             	r6 = r0
 1e08e5c:    20 28             	if (r4 == 0) goto 64 <le_create_connection_for_bd_addr_and_type+0x52 : 1e08e9e >
 1e08e5e:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:72:31
 1e08e60:    08 44             	[r2 + 0] = r0			  ## btstack_memory.c:72:23
 1e08e62:    01 70             	r1 = 0			  ## hci_vendor.c:290:5
 1e08e64:    02 fb c8 04       	r2 = 1224 <BTCTLER_CONTROLLER_DATA_SIZE+0xC : 4c8 >			  ## hci_vendor.c:290:5
 1e08e68:    07 70             	r7 = 0			  ## hci_vendor.c:290:5
 1e08e6a:    40 08             	r0 = r4			  ## hci_vendor.c:290:5
 1e08e6c:    97 f3 40 f0       	call 3137664 <memset : 106ef0 >			  ## hci_vendor.c:290:5
 1e08e70:    40 98             	r0 = r4 + 4			  ## hci_vendor.c:291:5
 1e08e72:    62 70             	r2 = 6			  ## hci_vendor.c:291:5
 1e08e74:    61 08             	r1 = r6			  ## hci_vendor.c:291:5
 1e08e76:    97 f3 35 f0       	call 3137642 <memcpy : 106ee4 >			  ## hci_vendor.c:291:5
 1e08e7a:    3d 48             	[r4 + 12] = r5			  ## hci_vendor.c:292:24
 1e08e7c:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## hci_vendor.c:293:22
 1e08e82:    58 58             	h[r4 + 10] = r0			  ## hci_vendor.c:293:22
 1e08e84:    5f 48             	[r4 + 20] = r7			  ## hci_vendor.c:298:41
 1e08e86:    40 fc b0 04       	r0 = r4 + 1200			  ## hci_vendor.c:298:41
 1e08e8a:    6f 60             	b[r0 + 6] = r7			  ## hci_vendor.c:296:33
 1e08e8c:    2f 50             	h[r0 + 4] = r7			  ## hci_vendor.c:296:33
 1e08e8e:    1f 50             	h[r0 + 2] = r7			  ## hci_vendor.c:296:33
 1e08e90:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:300:5
 1e08e96:    41 08             	r1 = r4			  ## hci_vendor.c:300:5
 1e08e98:    bf f3 36 fb       	call -2452 <btstack_linked_list_add : 1e08508 >			  ## hci_vendor.c:300:5
 1e08e9c:    01 18             	goto 2 <le_create_connection_for_bd_addr_and_type+0x54 : 1e08ea0 >			  ## hci_vendor.c:300:5
 1e08e9e:    04 70             	r4 = 0
 1e08ea0:    40 08             	r0 = r4			  ## hci_vendor.c:302:1
 1e08ea2:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:302:1


hci_run_for_acl_data_send:
 1e08ea4:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:2046:0
 1e08ea6:    fa 0b             	sp += -12			  ## hci_vendor.c:2046:0
 1e08ea8:    c6 ff 60 18 00 00 	r6 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2046:0
 1e08eae:    00 f7 18 62       	r0 = h[r6 + 536] (u)			  ## hci_vendor.c:2053:22
 1e08eb2:    21 20             	if (r0 == 0) goto 66 <hci_run_for_acl_data_send+0x52 : 1e08ef6 >			  ## hci_vendor.c:2053:22
 1e08eb4:    90 6c             	r0 = b[r6 + 9] (u)			  ## hci_vendor.c:2054:39
 1e08eb6:    81 6c             	r1 = b[r6 + 8] (u)			  ## hci_vendor.c:2054:39
 1e08eb8:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:2054:39
 1e08eba:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:2054:39
 1e08ebe:    e0 fd 10 40       	r4 = r0 | r1			  ## hci_vendor.c:2054:39
 1e08ec2:    40 08             	r0 = r4			  ## hci_vendor.c:2042:12
 1e08ec4:    bf f3 94 f7       	call -4312 <hci_number_free_acl_slots_for_handle : 1e07df0 >			  ## hci_vendor.c:2042:12
 1e08ec8:    10 e0 15 b0       	ifs (r0 < 1) goto 42 <hci_run_for_acl_data_send+0x52 : 1e08ef6 >			  ## hci_vendor.c:2042:12
 1e08ecc:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:2056:47
 1e08ece:    50 08             	r0 = r5			  ## hci_vendor.c:2056:47
 1e08ed0:    bf f3 74 f1       	call -7448 <le_hci_connection_for_handle : 1e071bc >			  ## hci_vendor.c:2056:47
 1e08ed4:    04 08             	r4 = r0			  ## hci_vendor.c:2056:47
 1e08ed6:    09 28             	if (r4 == 0) goto 18 <hci_run_for_acl_data_send+0x46 : 1e08eea >			  ## hci_vendor.c:2057:17
 1e08ed8:    50 08             	r0 = r5			  ## hci_vendor.c:2042:12
 1e08eda:    bf f3 89 f7       	call -4334 <hci_number_free_acl_slots_for_handle : 1e07df0 >			  ## hci_vendor.c:2042:12
 1e08ede:    00 e0 0a d0       	ifs (r0 <= 0) goto 20 <hci_run_for_acl_data_send+0x52 : 1e08ef6 >			  ## hci_vendor.c:2042:12
 1e08ee2:    40 08             	r0 = r4			  ## hci_vendor.c:2059:21
 1e08ee4:    bf f3 a9 f7       	call -4270 <le_hci_send_acl_packet_fragments : 1e07e3a >			  ## hci_vendor.c:2059:21
 1e08ee8:    1d 18             	goto 58 <hci_run_for_acl_data_send+0x80 : 1e08f24 >			  ## hci_vendor.c:2059:21
 1e08eea:    60 fc 15 02       	r0 = r6 + 533			  ## hci_vendor.c:2065:52
 1e08eee:    01 70             	r1 = 0			  ## hci_vendor.c:2065:52
 1e08ef0:    52 70             	r2 = 5			  ## hci_vendor.c:2065:52
 1e08ef2:    97 f3 fd ef       	call 3137530 <memset : 106ef0 >			  ## hci_vendor.c:2065:52
 1e08ef6:    04 4c             	r4 = [r6 + 0]
 1e08ef8:    15 28             	if (r4 == 0) goto 42 <hci_run_for_acl_data_send+0x80 : 1e08f24 >
 1e08efa:    05 70             	r5 = 0
 1e08efc:    c6 ff ff ff 00 00 	r6 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e08f02:    50 48             	r0 = [r4 + 20]			  ## hci_vendor.c:2074:25
 1e08f04:    30 e0 0c 10       	if (r0 != 3) goto 24 <hci_run_for_acl_data_send+0x7C : 1e08f20 >			  ## hci_vendor.c:2074:25
 1e08f08:    5d 48             	[r4 + 20] = r5			  ## hci_vendor.c:2075:55
 1e08f0a:    d1 58             	r1 = h[r4 + 26] (u)			  ## hci_vendor.c:2094:13
 1e08f0c:    dd 58             	h[r4 + 26] = r5			  ## hci_vendor.c:2078:46
 1e08f0e:    f3 58             	r3 = h[r4 + 30] (u)			  ## hci_vendor.c:2094:13
 1e08f10:    e2 58             	r2 = h[r4 + 28] (u)			  ## hci_vendor.c:2094:13
 1e08f12:    50 58             	r0 = h[r4 + 10] (u)			  ## hci_vendor.c:2094:13
 1e08f14:    07 59             	r7 = h[r4 + 32] (u)			  ## hci_vendor.c:2094:13
 1e08f16:    2e 02             	[sp+8] = r6			  ## hci_vendor.c:2094:13
 1e08f18:    1d 02             	[sp+4] = r5			  ## hci_vendor.c:2094:13
 1e08f1a:    0f 02             	[sp] = r7			  ## hci_vendor.c:2094:13
 1e08f1c:    80 f3 51 69       	call 53922 <ll_hci_connection_update : 1e161c2 >			  ## hci_vendor.c:2094:13
 1e08f20:    04 48             	r4 = [r4 + 0]
 1e08f22:    ef 39             	if (r4 != 0) goto -34 <hci_run_for_acl_data_send+0x5E : 1e08f02 >
 1e08f24:    06 0a             	sp += 12
 1e08f26:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:2106:1


btstack_task:
 1e08f28:    70 0b             	sp += -288			  ## btstack_task.c:81:0
 1e08f2a:    bf f3 97 f2       	call -6866 <btstack_task_init : 1e0745c >			  ## btstack_task.c:85:5
 1e08f2e:    00 70             	r0 = 0			  ## btstack_task.c:89:5
 1e08f30:    31 70             	r1 = 3			  ## btstack_task.c:89:5
 1e08f32:    b2 72             	r2 = 43			  ## btstack_task.c:89:5
 1e08f34:    0a 70             	r10 = 0			  ## btstack_task.c:89:5
 1e08f36:    bf f3 66 f3       	call -6452 <update_bt_current_status : 1e07606 >			  ## btstack_task.c:89:5
 1e08f3a:    c0 ff 80 09 00 00 	r0 = 2432 <is_btstack_lowpower_active : 980 >			  ## btstack_task.c:89:5
 1e08f40:    1a f9 00 00       	b[r0 + 0] = r10			  ## btstack_task.c:89:5
 1e08f44:    c0 a1             	r0 = sp + 28			  ## btstack_task.c:89:5
 1e08f46:    cb 90             	r11 = r0 + 12
 1e08f48:    51 ac             	r1 = sp + 197
 1e08f4a:    c1 80             	r1 += 12
 1e08f4c:    69 02             	[sp+24] = r1
 1e08f4e:    e1 aa             	r1 = sp + 174
 1e08f50:    41 80             	r1 += 4
 1e08f52:    19 02             	[sp+4] = r1
 1e08f54:    6c 90             	r12 = r0 + 6
 1e08f56:    7d 90             	r13 = r0 + 7
 1e08f58:    b1 90             	r1 = r0 + 11
 1e08f5a:    09 02             	[sp] = r1
 1e08f5c:    9e 90             	r14 = r0 + 9
 1e08f5e:    4f 90             	r15 = r0 + 4
 1e08f60:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e08f66:    1b f5 14 00       	[sp+20] = r11
 1e08f6a:    1c f5 10 00       	[sp+16] = r12
 1e08f6e:    1d f5 0c 00       	[sp+12] = r13
 1e08f72:    1e f5 08 00       	[sp+8] = r14
 1e08f76:    c1 a1             	r1 = sp + 28
 1e08f78:    00 70             	r0 = 0			  ## btstack_task.c:98:15
 1e08f7a:    02 72             	r2 = 32			  ## btstack_task.c:98:15
 1e08f7c:    97 f3 28 ef       	call 3137104 <os_taskq_pend : 106dd0 >			  ## btstack_task.c:98:15
 1e08f80:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btstack_task+0x4E : 1e08f76 >			  ## btstack_task.c:100:13
 1e08f84:    70 02             	r0 = [sp+28]			  ## btstack_task.c:104:17
 1e08f86:    90 09             	r0 += r9			  ## btstack_task.c:104:9
 1e08f88:    50 e0 64 83       	if (r0 > 5) goto 1736 <.GJTIE572_2_2_+0x542 : 1e09654 >			  ## btstack_task.c:104:9
 1e08f8c:    41 c0             	r1 = r0 << 1
 1e08f8e:    b1 00             	tbh [r1]


.GJTIL572_0_0_:
 1e08f90:    06 00     < 6 : 0x6 >
 1e08f92:    5d 00     < 93 : 0x5D >
 1e08f94:    62 03     < 866 : 0x362 >
 1e08f96:    76 00     < 118 : 0x76 >
 1e08f98:    62 03     < 866 : 0x362 >
 1e08f9a:    7d 00     < 125 : 0x7D >
 1e08f9c:    c1 f5 20 00       	r1 = b[sp+32] (u)
 1e08fa0:    10 fc fd ff       	r0 = r1 + -3			  ## hci_vendor.c:391:5
 1e08fa4:    05 70             	r5 = 0			  ## hci_vendor.c:391:5
 1e08fa6:    50 e1 a0 80       	if (r0 > 21) goto 320 <.GJTIE572_1_1_+0x110 : 1e090ea >			  ## hci_vendor.c:391:5
 1e08faa:    41 c0             	r1 = r0 << 1
 1e08fac:    b1 00             	tbh [r1]


.GJTIL572_1_1_:
 1e08fae:    16 00     < 22 : 0x16 >
 1e08fb0:    f8 00     < 248 : 0xF8 >
 1e08fb2:    09 01     < 265 : 0x109 >
 1e08fb4:    2f 01     < 303 : 0x12F >
 1e08fb6:    40 03     < 832 : 0x340 >
 1e08fb8:    5b 01     < 347 : 0x15B >
 1e08fba:    40 03     < 832 : 0x340 >
 1e08fbc:    40 03     < 832 : 0x340 >
 1e08fbe:    40 03     < 832 : 0x340 >
 1e08fc0:    40 03     < 832 : 0x340 >
 1e08fc2:    40 03     < 832 : 0x340 >
 1e08fc4:    9e 02     < 670 : 0x29E >
 1e08fc6:    40 03     < 832 : 0x340 >
 1e08fc8:    40 03     < 832 : 0x340 >
 1e08fca:    40 03     < 832 : 0x340 >
 1e08fcc:    40 03     < 832 : 0x340 >
 1e08fce:    62 01     < 354 : 0x162 >
 1e08fd0:    88 01     < 392 : 0x188 >
 1e08fd2:    40 03     < 832 : 0x340 >
 1e08fd4:    9a 01     < 410 : 0x19A >
 1e08fd6:    c2 01     < 450 : 0x1C2 >
 1e08fd8:    fb 01     < 507 : 0x1FB >
 1e08fda:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:602:14
 1e08fde:    50 e0 04 03       	if (r0 == 5) goto 1544 <.GJTIE572_2_2_+0x4D8 : 1e095ea >			  ## hci_vendor.c:602:13
 1e08fe2:    00 e0 24 13       	if (r0 != 0) goto 1608 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e08fe6:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:603:17
 1e08fea:    10 e0 20 13       	if (r0 != 1) goto 1600 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:603:17
 1e08fee:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e08ff4:    03 08             	r3 = r0
 1e08ff6:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e08ff8:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e08ffa:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e08ffc:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e08ffe:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09002:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09006:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0900a:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0900c:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e0900e:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e09010:    24 fd 01 09       	r4 = r0 & 1			  ## hci_vendor.c:160:12
 1e09014:    01 af             	r1 = sp + 240			  ## hci_vendor.c:160:12
 1e09016:    e0 08             	r0 = r14			  ## remote_device_db.c:344:9
 1e09018:    42 08             	r2 = r4			  ## remote_device_db.c:344:9
 1e0901a:    bf f3 bf f3       	call -6274 <get_link_key : 1e0779c >			  ## remote_device_db.c:344:9
 1e0901e:    05 20             	if (r0 == 0) goto 10 <.GJTIE572_1_1_+0x50 : 1e0902a >			  ## remote_device_db.c:344:9
 1e09020:    01 af             	r1 = sp + 240
 1e09022:    e0 08             	r0 = r14			  ## remote_device_db.c:345:9
 1e09024:    42 08             	r2 = r4			  ## remote_device_db.c:345:9
 1e09026:    bf f3 36 f5       	call -5524 <put_link_key : 1e07a96 >			  ## remote_device_db.c:345:9
 1e0902a:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:605:21
 1e09030:    30 61             	r0 = b[r0 + 19] (u)			  ## hci_vendor.c:605:21
 1e09032:    23 f3 fc 02       	if ((r0 & 8) != 0) goto 1528 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:605:21
 1e09036:    f1 7f             	r1 = 255			  ## hci_vendor.c:608:32
 1e09038:    e0 08             	r0 = r14			  ## hci_vendor.c:608:32
 1e0903a:    bf f3 5f f5       	call -5442 <handle_remote_dev_type : 1e07afc >			  ## hci_vendor.c:608:32
 1e0903e:    02 08             	r2 = r0			  ## hci_vendor.c:608:32
 1e09040:    11 70             	r1 = 1			  ## hci_vendor.c:609:21
 1e09042:    e0 08             	r0 = r14			  ## hci_vendor.c:609:21
 1e09044:    bf f3 e9 f5       	call -5166 <remote_dev_company_ioctrl : 1e07c1a >			  ## hci_vendor.c:609:21
 1e09048:    f2 1a             	goto 1508 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:609:21
 1e0904a:    84 02             	r4 = [sp+32]			  ## btstack_task.c:109:35
 1e0904c:    16 68             	r6 = b[r4 + 1] (u)			  ## hci_vendor.c:1106:22
 1e0904e:    00 68             	r0 = b[r4 + 0] (u)			  ## hci_vendor.c:1106:22
 1e09050:    31 c2             	r1 = r6 << 8			  ## hci_vendor.c:1106:22
 1e09052:    21 fd 0f 1a       	r1 = r1 & 3840			  ## hci_vendor.c:1106:22
 1e09056:    50 b2             	r0 |= r1			  ## hci_vendor.c:1106:22
 1e09058:    00 e5 28 20       	if (r0 >= 80) goto 80 <.GJTIE572_1_1_+0xD2 : 1e090ac >			  ## hci_vendor.c:1106:22
 1e0905c:    08 f5 24 00       	r8 = [sp+36]			  ## btstack_task.c:109:43
 1e09060:    37 68             	r7 = b[r4 + 3] (u)			  ## hci_vendor.c:966:22
 1e09062:    25 68             	r5 = b[r4 + 2] (u)			  ## hci_vendor.c:966:22
 1e09064:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:118:48
 1e09066:    80 f3 bc 6b       	call 55160 <lmp_private_remote_addr_for_handler : 1e167e2 >			  ## hci_vendor.c:118:12
 1e0906a:    00 e0 f3 02       	if (r0 == 0) goto 1510 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e0906e:    82 fd 20 06       	r0 = uextra(r6, p:4, l:2)			  ## hci_vendor.c:974:5
 1e09072:    20 e0 73 00       	if (r0 == 2) goto 230 <.GJTIE572_2_2_+0x4A : 1e0915c >			  ## hci_vendor.c:974:5
 1e09076:    10 e0 77 00       	if (r0 == 1) goto 238 <.GJTIE572_2_2_+0x56 : 1e09168 >
 1e0907a:    ec 1a             	goto 1496 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e0907c:    80 02             	r0 = [sp+32]			  ## btstack_task.c:112:35
 1e0907e:    97 f3 c5 ee       	call 3136906 <os_sem_post : 106e0c >			  ## btstack_task.c:112:13
 1e09082:    40 71             	r0 = 20			  ## btstack_task.c:113:13
 1e09084:    97 f3 98 ee       	call 3136816 <os_time_dly : 106db8 >			  ## btstack_task.c:113:13
 1e09088:    e5 1a             	goto 1482 <.GJTIE572_2_2_+0x542 : 1e09654 >			  ## btstack_task.c:113:13
 1e0908a:    c0 ff 98 1a 00 00 	r0 = 6808 <l2cap_stack : 1a98 >			  ## l2cap.c:403:33
 1e09090:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:403:33
 1e09092:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:403:33
 1e09094:    04 e0 de 02       	if (r4 == 0) goto 1468 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e09098:    20 69             	r0 = b[r4 + 18] (u)			  ## l2cap.c:407:44
 1e0909a:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE572_1_1_+0xCC : 1e090a6 >			  ## l2cap.c:407:44
 1e0909e:    01 70             	r1 = 0			  ## l2cap.c:410:13
 1e090a0:    40 08             	r0 = r4			  ## l2cap.c:410:13
 1e090a2:    bf f3 bd f7       	call -4230 <l2cap_emit_credits : 1e08020 >			  ## l2cap.c:410:13
 1e090a6:    04 48             	r4 = [r4 + 0]
 1e090a8:    f7 39             	if (r4 != 0) goto -18 <.GJTIE572_1_1_+0xBE : 1e09098 >
 1e090aa:    d4 1a             	goto 1448 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e090ac:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1007:33
 1e090ae:    bf f3 85 f0       	call -7926 <le_hci_connection_for_handle : 1e071bc >			  ## hci_vendor.c:1007:33
 1e090b2:    31 68             	r1 = b[r4 + 3] (u)			  ## hci_vendor.c:1009:22
 1e090b4:    26 68             	r6 = b[r4 + 2] (u)			  ## hci_vendor.c:1009:22
 1e090b6:    08 08             	r8 = r0			  ## hci_vendor.c:1007:33
 1e090b8:    14 20             	if (r0 == 0) goto 40 <.GJTIE572_1_1_+0x108 : 1e090e2 >
 1e090ba:    10 68             	r0 = b[r4 + 1] (u)			  ## hci_vendor.c:1008:21
 1e090bc:    d8 fd 40 61       	r6 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:1009:22
 1e090c0:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## hci_vendor.c:1016:5
 1e090c4:    85 fc b2 04       	r5 = r8 + 1202			  ## hci_vendor.c:1016:5
 1e090c8:    20 e0 52 00       	if (r0 == 2) goto 164 <.GJTIE572_2_2_+0x5E : 1e09170 >			  ## hci_vendor.c:1016:5
 1e090cc:    10 e0 09 10       	if (r0 != 1) goto 18 <.GJTIE572_1_1_+0x108 : 1e090e2 >
 1e090d0:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1020:13
 1e090d2:    07 20             	if (r0 == 0) goto 14 <.GJTIE572_1_1_+0x108 : 1e090e2 >			  ## hci_vendor.c:1020:13
 1e090d4:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1024:43
 1e090d6:    81 b0             	r1 = r0 + r2			  ## hci_vendor.c:1024:41
 1e090d8:    03 ff 12 12 25 02 	if (r1 < 530) goto 1098 <.GJTIE572_2_2_+0x416 : 1e09528 >			  ## hci_vendor.c:1024:13
 1e090de:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1025:41
 1e090e2:    40 08             	r0 = r4
 1e090e4:    80 f3 85 68       	call 53514 <ll_hci_private_free_dma_rx : 1e161f2 >
 1e090e8:    b5 1a             	goto 1386 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e090ea:    10 fc cf ff       	r0 = r1 + -49
 1e090ee:    d0 e0 9e 82       	if (r0 > 13) goto 1340 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e090f2:    41 c0             	r1 = r0 << 1
 1e090f4:    b1 00             	tbh [r1]


.GJTIL572_2_2_:
 1e090f6:    0e 00     < 14 : 0xE >
 1e090f8:    9c 02     < 668 : 0x29C >
 1e090fa:    6f 01     < 367 : 0x16F >
 1e090fc:    71 01     < 369 : 0x171 >
 1e090fe:    9c 02     < 668 : 0x29C >
 1e09100:    74 01     < 372 : 0x174 >
 1e09102:    9c 02     < 668 : 0x29C >
 1e09104:    9c 02     < 668 : 0x29C >
 1e09106:    9c 02     < 668 : 0x29C >
 1e09108:    9c 02     < 668 : 0x29C >
 1e0910a:    81 01     < 385 : 0x181 >
 1e0910c:    9c 02     < 668 : 0x29C >
 1e0910e:    9c 02     < 668 : 0x29C >
 1e09110:    8b 01     < 395 : 0x18B >
 1e09112:    00 70             	r0 = 0			  ## hci_vendor.c:464:9
 1e09114:    12 73             	r2 = 49			  ## hci_vendor.c:464:9
 1e09116:    03 70             	r3 = 0			  ## hci_vendor.c:464:9
 1e09118:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:464:9
 1e0911e:    bf f3 59 f2       	call -6990 <bt_event_update_to_user : 1e075d4 >			  ## hci_vendor.c:464:9
 1e09122:    03 18             	goto 6 <.GJTIE572_2_2_+0x18 : 1e0912a >			  ## hci_vendor.c:464:9
 1e09124:    30 70             	r0 = 3			  ## hci_vendor.c:467:13
 1e09126:    97 f3 47 ee       	call 3136654 <os_time_dly : 106db8 >			  ## hci_vendor.c:467:13
 1e0912a:    bf f3 e0 f2       	call -6720 <get_is_in_background_flag : 1e076ee >
 1e0912e:    fa 31             	if (r0 != 0) goto -12 <.GJTIE572_2_2_+0x12 : 1e09124 >
 1e09130:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e09136:    03 08             	r3 = r0
 1e09138:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:473:71
 1e0913a:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:473:71
 1e0913c:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:473:71
 1e0913e:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:473:71
 1e09140:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:473:71
 1e09144:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:473:71
 1e09148:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:473:71
 1e0914c:    82 fd c0 03       	r0 = uextra(r3, p:24, l:2)			  ## hci_vendor.c:473:9
 1e09150:    82 fd d0 13       	r1 = uextra(r3, p:26, l:2)			  ## hci_vendor.c:473:9
 1e09154:    1a d7             	r2 = r3 >> 28			  ## hci_vendor.c:474:110
 1e09156:    80 f3 42 6c       	call 55428 <lmp_hci_io_capability_request_reply : 1e169de >			  ## hci_vendor.c:473:9
 1e0915a:    69 1a             	goto 1234 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:473:9
 1e0915c:    e6 fd 00 08       	r0 = r8.l (u)
 1e09160:    c8 fd 40 57       	r5 <= insert(r7, p:8, l:8)			  ## hci_vendor.c:966:22
 1e09164:    50 e0 c8 81       	if (r0 > 5) goto 912 <.GJTIE572_2_2_+0x3E6 : 1e094f8 >			  ## hci_vendor.c:966:22
 1e09168:    40 08             	r0 = r4
 1e0916a:    80 f3 c4 6c       	call 55688 <lmp_hci_private_free_acl_packet : 1e16af6 >
 1e0916e:    68 1a             	goto 1232 <.GJTIE572_2_2_+0x52E : 1e09640 >
 1e09170:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1057:19
 1e09172:    02 20             	if (r0 == 0) goto 4 <.GJTIE572_2_2_+0x66 : 1e09178 >			  ## hci_vendor.c:1057:19
 1e09174:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1058:41
 1e09178:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:1062:33
 1e0917a:    47 68             	r7 = b[r4 + 4] (u)			  ## hci_vendor.c:1062:33
 1e0917c:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1062:33
 1e09180:    e0 05             	r0 = r7.l (u)			  ## hci_vendor.c:1066:27
 1e09182:    49 90             	r9 = r0 + 4			  ## hci_vendor.c:1066:40
 1e09184:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1066:13
 1e09186:    90 f2 c8 21       	if (r0 >= r9) goto 912 <.GJTIE572_2_2_+0x408 : 1e0951a >			  ## hci_vendor.c:1066:13
 1e0918a:    03 ff 0e 02 10 02 	if (r0 < 526) goto 1056 <.GJTIE572_2_2_+0x49E : 1e095b0 >			  ## hci_vendor.c:1081:17
 1e09190:    40 08             	r0 = r4			  ## hci_vendor.c:1082:17
 1e09192:    80 f3 2e 68       	call 53340 <ll_hci_private_free_dma_rx : 1e161f2 >			  ## hci_vendor.c:1082:17
 1e09196:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >			  ## hci_vendor.c:1082:17
 1e0919c:    5b 1a             	goto 1206 <.GJTIE572_2_2_+0x542 : 1e09654 >			  ## hci_vendor.c:1082:17
 1e0919e:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:553:14
 1e091a2:    0a 20             	if (r0 == 0) goto 20 <.GJTIE572_2_2_+0xA6 : 1e091b8 >			  ## hci_vendor.c:553:14
 1e091a4:    20 e0 69 02       	if (r0 == 2) goto 1234 <.GJTIE572_2_2_+0x568 : 1e0967a >
 1e091a8:    10 e0 6a 12       	if (r0 != 1) goto 1236 <.GJTIE572_2_2_+0x56E : 1e09680 >
 1e091ac:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:560:17
 1e091b2:    30 61             	r0 = b[r0 + 19] (u)			  ## hci_vendor.c:560:17
 1e091b4:    23 f3 9f 02       	if ((r0 & 8) != 0) goto 1342 <.GJTIE572_2_2_+0x5E4 : 1e096f6 >			  ## hci_vendor.c:560:17
 1e091b8:    10 70             	r0 = 1
 1e091ba:    80 f3 33 6c       	call 55398 <lmp_hci_accept_connection_request : 1e16a24 >
 1e091be:    37 1a             	goto 1134 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e091c0:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## hci_vendor.c:768:18
 1e091c4:    c5 f5 23 00       	r5 = b[sp+35] (u)			  ## hci_vendor.c:768:18
 1e091c8:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:768:18
 1e091cc:    d8 fd 40 51       	r5 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:768:18
 1e091d0:    64 05             	r4 = r5.l (u)			  ## hci_vendor.c:768:18
 1e091d2:    f4 e4 c1 81       	if (r4 > 79) goto 898 <.GJTIE572_2_2_+0x446 : 1e09558 >			  ## hci_vendor.c:771:13
 1e091d6:    c1 f5 26 00       	r1 = b[sp+38] (u)			  ## hci_vendor.c:766:21
 1e091da:    c2 f5 25 00       	r2 = b[sp+37] (u)			  ## hci_vendor.c:765:21
 1e091de:    00 e0 26 12       	if (r0 != 0) goto 1100 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:765:21
 1e091e2:    d0 76             	r0 = 109			  ## hci_vendor.c:215:14
 1e091e4:    d0 f5 ae 00       	b[sp+174] = r0			  ## hci_vendor.c:215:14
 1e091e8:    80 70             	r0 = 8			  ## hci_vendor.c:216:14
 1e091ea:    d0 f5 af 00       	b[sp+175] = r0			  ## hci_vendor.c:216:14
 1e091ee:    d2 f5 b0 00       	b[sp+176] = r2			  ## hci_vendor.c:217:14
 1e091f2:    d1 f5 b1 00       	b[sp+177] = r1			  ## hci_vendor.c:218:14
 1e091f6:    62 70             	r2 = 6			  ## utils.c:188:5
 1e091f8:    10 02             	r0 = [sp+4]			  ## utils.c:188:5
 1e091fa:    01 02             	r1 = [sp]			  ## utils.c:188:5
 1e091fc:    97 f3 72 ee       	call 3136740 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e09200:    e1 aa             	r1 = sp + 174			  ## utils.c:188:5
 1e09202:    40 70             	r0 = 4			  ## hci_vendor.c:220:5
 1e09204:    a2 70             	r2 = 10			  ## hci_vendor.c:220:5
 1e09206:    bf f3 99 fa       	call -2766 <l2cap_packet_handler : 1e0873c >			  ## hci_vendor.c:220:5
 1e0920a:    11 1a             	goto 1058 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:220:5
 1e0920c:    c0 f5 24 00       	r0 = b[sp+36] (u)
 1e09210:    c4 f5 23 00       	r4 = b[sp+35] (u)
 1e09214:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:435:13
 1e09218:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:435:13
 1e0921c:    01 e0 df 01       	if (r1 == 0) goto 958 <.GJTIE572_2_2_+0x4CC : 1e095de >			  ## hci_vendor.c:435:13
 1e09220:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:439:56
 1e09222:    50 08             	r0 = r5			  ## hci_vendor.c:439:20
 1e09224:    80 f3 dd 6a       	call 54714 <lmp_private_remote_addr_for_handler : 1e167e2 >			  ## hci_vendor.c:439:20
 1e09228:    c1 ff 90 09 00 00 	r1 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:439:20
 1e0922e:    16 08             	r6 = r1			  ## hci_vendor.c:439:20
 1e09230:    41 6d             	r1 = b[r6 + 20] (u)			  ## hci_vendor.c:160:32
 1e09232:    32 6d             	r2 = b[r6 + 19] (u)			  ## hci_vendor.c:160:32
 1e09234:    23 6d             	r3 = b[r6 + 18] (u)			  ## hci_vendor.c:160:32
 1e09236:    16 6d             	r6 = b[r6 + 17] (u)			  ## hci_vendor.c:160:32
 1e09238:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0923c:    c8 fd 40 63       	r6 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09240:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e09244:    b1 d1             	r1 = r6 >> 6			  ## hci_vendor.c:160:69
 1e09246:    f2 d4             	r2 = r6 >> 19			  ## hci_vendor.c:160:32
 1e09248:    51 b4             	r1 |= r2			  ## hci_vendor.c:160:47
 1e0924a:    21 fd 01 19       	r1 = r1 & 1			  ## hci_vendor.c:442:17
 1e0924e:    bf f3 0b f2       	call -7146 <delete_link_key : 1e07668 >			  ## hci_vendor.c:442:17
 1e09252:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:445:17
 1e09256:    60 e0 e6 01       	if (r0 == 6) goto 972 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:445:17
 1e0925a:    51 70             	r1 = 5			  ## hci_vendor.c:448:17
 1e0925c:    50 08             	r0 = r5			  ## hci_vendor.c:448:17
 1e0925e:    80 f3 86 6b       	call 55052 <lmp_hci_disconnect : 1e1696e >			  ## hci_vendor.c:448:17
 1e09262:    e1 19             	goto 962 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:448:17
 1e09264:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:454:18
 1e09268:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:454:18
 1e0926c:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:454:18
 1e09270:    da 19             	goto 948 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:454:18
 1e09272:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:521:29
 1e09276:    00 e0 da 01       	if (r0 == 0) goto 948 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:521:29
 1e0927a:    35 70             	r5 = 3
 1e0927c:    06 70             	r6 = 0
 1e0927e:    f0 08             	r0 = r15			  ## hci_vendor.c:522:26
 1e09280:    51 08             	r1 = r5			  ## hci_vendor.c:522:26
 1e09282:    bf f3 76 ef       	call -8468 <little_endian_read_16 : 1e07172 >			  ## hci_vendor.c:522:26
 1e09286:    04 08             	r4 = r0			  ## hci_vendor.c:522:26
 1e09288:    04 e5 13 30       	if (r4 < 80) goto 38 <.GJTIE572_2_2_+0x1A0 : 1e092b2 >			  ## hci_vendor.c:522:26
 1e0928c:    21 9a             	r1 = r5 + 2			  ## hci_vendor.c:528:24
 1e0928e:    f0 08             	r0 = r15			  ## hci_vendor.c:529:40
 1e09290:    bf f3 6f ef       	call -8482 <little_endian_read_16 : 1e07172 >			  ## hci_vendor.c:529:40
 1e09294:    07 08             	r7 = r0			  ## hci_vendor.c:529:40
 1e09296:    45 80             	r5 += 4			  ## hci_vendor.c:530:24
 1e09298:    40 08             	r0 = r4			  ## hci_vendor.c:532:45
 1e0929a:    bf f3 8f ef       	call -8418 <le_hci_connection_for_handle : 1e071bc >			  ## hci_vendor.c:532:45
 1e0929e:    09 20             	if (r0 == 0) goto 18 <.GJTIE572_2_2_+0x1A0 : 1e092b2 >
 1e092a0:    03 f9 b6 04       	r3 = b[r0 + 1206] (u)			  ## hci_vendor.c:537:21
 1e092a4:    e2 b7             	r2 = r3 - r7			  ## hci_vendor.c:539:48
 1e092a6:    01 70             	r1 = 0			  ## hci_vendor.c:537:21
 1e092a8:    73 f2 01 30       	if (r3 < r7) goto 2 <.GJTIE572_2_2_+0x19C : 1e092ae >			  ## hci_vendor.c:537:21
 1e092ac:    21 08             	r1 = r2			  ## hci_vendor.c:537:21
 1e092ae:    11 f9 b6 04       	b[r0 + 1206] = r1			  ## hci_vendor.c:539:48
 1e092b2:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:521:29
 1e092b6:    16 80             	r6 += 1			  ## hci_vendor.c:521:41
 1e092b8:    06 f2 e1 bf       	ifs (r6 < r0) goto -62 <.GJTIE572_2_2_+0x16C : 1e0927e >
 1e092bc:    b4 19             	goto 872 <.GJTIE572_2_2_+0x514 : 1e09626 >
 1e092be:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:415:18
 1e092c2:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:415:18
 1e092c6:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:415:18
 1e092ca:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:416:52
 1e092cc:    80 f3 89 6a       	call 54546 <lmp_private_remote_addr_for_handler : 1e167e2 >			  ## hci_vendor.c:416:16
 1e092d0:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## hci_vendor.c:417:13
 1e092d4:    01 e0 a0 01       	if (r1 == 0) goto 832 <.GJTIE572_2_2_+0x506 : 1e09618 >			  ## hci_vendor.c:417:13
 1e092d8:    21 e0 a5 11       	if (r1 != 2) goto 842 <.GJTIE572_2_2_+0x514 : 1e09626 >
 1e092dc:    02 72             	r2 = 32			  ## hci_vendor.c:421:13
 1e092de:    23 70             	r3 = 2			  ## hci_vendor.c:421:13
 1e092e0:    9d 19             	goto 826 <.GJTIE572_2_2_+0x50A : 1e0961c >			  ## hci_vendor.c:421:13
 1e092e2:    00 70             	r0 = 0			  ## hci_vendor.c:705:9
 1e092e4:    62 71             	r2 = 22			  ## hci_vendor.c:705:9
 1e092e6:    03 70             	r3 = 0			  ## hci_vendor.c:705:9
 1e092e8:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:705:9
 1e092ee:    bf f3 71 f1       	call -7454 <bt_event_update_to_user : 1e075d4 >			  ## hci_vendor.c:705:9
 1e092f2:    03 18             	goto 6 <.GJTIE572_2_2_+0x1E8 : 1e092fa >			  ## hci_vendor.c:705:9
 1e092f4:    30 70             	r0 = 3			  ## hci_vendor.c:708:13
 1e092f6:    97 f3 5f ed       	call 3136190 <os_time_dly : 106db8 >			  ## hci_vendor.c:708:13
 1e092fa:    bf f3 f8 f1       	call -7184 <get_is_in_background_flag : 1e076ee >
 1e092fe:    fa 31             	if (r0 != 0) goto -12 <.GJTIE572_2_2_+0x1E2 : 1e092f4 >
 1e09300:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e09306:    03 08             	r3 = r0
 1e09308:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e0930a:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e0930c:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e0930e:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e09310:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09314:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09318:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0931c:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0931e:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e09320:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e09322:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:713:9
 1e09326:    c0 08             	r0 = r12			  ## hci_vendor.c:713:9
 1e09328:    bf f3 9e f1       	call -7364 <delete_link_key : 1e07668 >			  ## hci_vendor.c:713:9
 1e0932c:    80 f3 84 6b       	call 55048 <lmp_hci_pin_code_request_reply : 1e16a38 >			  ## hci_vendor.c:722:13
 1e09330:    7e 19             	goto 764 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:722:13
 1e09332:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e09338:    04 08             	r4 = r0
 1e0933a:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e0933c:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e0933e:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e09340:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e09342:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09346:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0934a:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0934e:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e09350:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e09352:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e09354:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:678:32
 1e09358:    e1 a9             	r1 = sp + 158			  ## hci_vendor.c:678:32
 1e0935a:    c0 08             	r0 = r12			  ## hci_vendor.c:678:32
 1e0935c:    bf f3 1e f2       	call -7108 <get_link_key : 1e0779c >			  ## hci_vendor.c:678:32
 1e09360:    41 69             	r1 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e09362:    32 69             	r2 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e09364:    23 69             	r3 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e09366:    14 69             	r4 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e09368:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e0936c:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09370:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e09374:    a1 d1             	r1 = r4 >> 6			  ## hci_vendor.c:160:69
 1e09376:    e2 d4             	r2 = r4 >> 19			  ## hci_vendor.c:160:32
 1e09378:    51 b4             	r1 |= r2			  ## hci_vendor.c:160:47
 1e0937a:    22 fd 01 19       	r2 = r1 & 1			  ## remote_device_db.c:217:10
 1e0937e:    04 08             	r4 = r0			  ## hci_vendor.c:678:32
 1e09380:    e0 fb 00 01       	r0 = sp + 256
 1e09384:    c1 08             	r1 = r12			  ## remote_device_db.c:217:10
 1e09386:    bf f3 dd f1       	call -7238 <get_database : 1e07744 >			  ## remote_device_db.c:217:10
 1e0938a:    31 70             	r1 = 3			  ## hci_vendor.c:680:62
 1e0938c:    02 20             	if (r0 == 0) goto 4 <.GJTIE572_2_2_+0x280 : 1e09392 >			  ## hci_vendor.c:680:62
 1e0938e:    c1 f5 08 01       	r1 = b[sp+264] (u)			  ## hci_vendor.c:680:62
 1e09392:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >			  ## hci_vendor.c:680:60
 1e09398:    69 50             	h[r0 + 12] = r1			  ## hci_vendor.c:680:60
 1e0939a:    04 e0 23 01       	if (r4 == 0) goto 582 <.GJTIE572_2_2_+0x4D2 : 1e095e4 >			  ## hci_vendor.c:684:17
 1e0939e:    80 f3 47 6b       	call 54926 <lmp_hci_link_key_request_reply : 1e16a30 >			  ## hci_vendor.c:687:17
 1e093a2:    58 19             	goto 688 <.GJTIE572_2_2_+0x542 : 1e09654 >			  ## hci_vendor.c:687:17
 1e093a4:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e093aa:    03 08             	r3 = r0
 1e093ac:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e093ae:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e093b0:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e093b2:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e093b4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e093b8:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e093bc:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e093c0:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e093c2:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e093c4:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e093c6:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:698:9
 1e093ca:    c0 08             	r0 = r12			  ## hci_vendor.c:698:9
 1e093cc:    b1 08             	r1 = r11			  ## hci_vendor.c:698:9
 1e093ce:    bf f3 62 f3       	call -6460 <put_link_key : 1e07a96 >			  ## hci_vendor.c:698:9
 1e093d2:    2d 19             	goto 602 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:698:9
 1e093d4:    32 73             	r2 = 51			  ## hci_vendor.c:481:9
 1e093d6:    01 18             	goto 2 <.GJTIE572_2_2_+0x2C8 : 1e093da >			  ## hci_vendor.c:481:9
 1e093d8:    42 73             	r2 = 52			  ## hci_vendor.c:487:9
 1e093da:    03 70             	r3 = 0
 1e093dc:    10 18             	goto 32 <.GJTIE572_2_2_+0x2EC : 1e093fe >
 1e093de:    11 70             	r1 = 1			  ## hci_vendor.c:123:12
 1e093e0:    d0 08             	r0 = r13			  ## hci_vendor.c:123:12
 1e093e2:    80 f3 fe 6a       	call 54780 <lmp_private_handler_for_remote_addr : 1e169e2 >			  ## hci_vendor.c:123:12
 1e093e6:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:500:13
 1e093ea:    04 08             	r4 = r0			  ## hci_vendor.c:123:12
 1e093ec:    01 e0 1b 01       	if (r1 == 0) goto 566 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:123:12
 1e093f0:    51 70             	r1 = 5			  ## hci_vendor.c:501:13
 1e093f2:    80 f3 bc 6a       	call 54648 <lmp_hci_disconnect : 1e1696e >			  ## hci_vendor.c:501:13
 1e093f6:    17 19             	goto 558 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:501:13
 1e093f8:    c3 f5 23 00       	r3 = b[sp+35] (u)			  ## hci_vendor.c:493:80
 1e093fc:    b2 73             	r2 = 59			  ## hci_vendor.c:493:9
 1e093fe:    c0 08             	r0 = r12
 1e09400:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e09406:    bf f3 e5 f0       	call -7734 <bt_event_update_to_user : 1e075d4 >
 1e0940a:    11 19             	goto 546 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e0940c:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:818:21
 1e09410:    10 e0 39 01       	if (r0 == 1) goto 626 <.GJTIE572_2_2_+0x574 : 1e09686 >			  ## hci_vendor.c:818:13
 1e09414:    a0 e0 5b 01       	if (r0 == 10) goto 694 <.GJTIE572_2_2_+0x5BC : 1e096ce >
 1e09418:    20 e0 67 10       	if (r0 != 2) goto 206 <.GJTIE572_2_2_+0x3D8 : 1e094ea >
 1e0941c:    c7 f5 23 00       	r7 = b[sp+35] (u)			  ## hci_vendor.c:329:23
 1e09420:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:825:56
 1e09424:    28 90             	r8 = r0 + 2			  ## hci_vendor.c:825:66
 1e09426:    54 2e             	if (r7 == 0) goto 168 <.GJTIE572_2_2_+0x3BE : 1e094d0 >
 1e09428:    e6 fd 00 08       	r0 = r8.l (u)
 1e0942c:    50 e0 50 30       	if (r0 < 5) goto 160 <.GJTIE572_2_2_+0x3BE : 1e094d0 >
 1e09430:    4e 70             	r14 = 4
 1e09432:    19 70             	r9 = 1
 1e09434:    80 fb e0 1f       	r1 = r15 + r14
 1e09438:    80 62             	r0 = b[r1 + 8] (u)			  ## hci_vendor.c:336:43
 1e0943a:    22 7e             	r2 = 226			  ## hci_vendor.c:339:22
 1e0943c:    d2 f5 c5 00       	b[sp+197] = r2			  ## hci_vendor.c:339:22
 1e09440:    04 08             	r4 = r0			  ## utils.c:232:12
 1e09442:    f0 e1 01 30       	if (r0 < 31) goto 2 <.GJTIE572_2_2_+0x336 : 1e09448 >			  ## utils.c:232:12
 1e09446:    f4 71             	r4 = 31
 1e09448:    a2 98             	r2 = r4 + 10			  ## hci_vendor.c:337:33
 1e0944a:    d2 f5 c6 00       	b[sp+198] = r2			  ## hci_vendor.c:340:22
 1e0944e:    22 62             	r2 = b[r1 + 2] (u)			  ## hci_vendor.c:341:9
 1e09450:    63 62             	r3 = b[r1 + 6] (u)			  ## hci_vendor.c:341:9
 1e09452:    06 62             	r6 = b[r1 + 0] (u)			  ## hci_vendor.c:341:9
 1e09454:    0c f9 01 10       	r12 = b[r1 + 1] (u)			  ## hci_vendor.c:341:9
 1e09458:    0b f9 07 10       	r11 = b[r1 + 7] (u)			  ## hci_vendor.c:341:9
 1e0945c:    0a f9 05 10       	r10 = b[r1 + 5] (u)			  ## hci_vendor.c:341:9
 1e09460:    0d f9 04 10       	r13 = b[r1 + 4] (u)			  ## hci_vendor.c:341:9
 1e09464:    31 62             	r1 = b[r1 + 3] (u)			  ## hci_vendor.c:341:9
 1e09466:    db f5 ce 00       	b[sp+206] = r11			  ## hci_vendor.c:341:9
 1e0946a:    da f5 cc 00       	b[sp+204] = r10			  ## hci_vendor.c:341:9
 1e0946e:    dd f5 cb 00       	b[sp+203] = r13			  ## hci_vendor.c:341:9
 1e09472:    d1 f5 ca 00       	b[sp+202] = r1			  ## hci_vendor.c:341:9
 1e09476:    dc f5 c8 00       	b[sp+200] = r12			  ## hci_vendor.c:341:9
 1e0947a:    d6 f5 c7 00       	b[sp+199] = r6			  ## hci_vendor.c:341:9
 1e0947e:    c8 fd 40 3b       	r3 <= insert(r11, p:8, l:8)			  ## hci_vendor.c:341:9
 1e09482:    d0 fd 80 d3       	r13 <= insert(r3, p:16, l:16)			  ## hci_vendor.c:341:9
 1e09486:    f2 fd 80 3d       	r3 = r13 >> 16			  ## hci_vendor.c:341:9
 1e0948a:    d3 f5 cd 00       	b[sp+205] = r3			  ## hci_vendor.c:341:9
 1e0948e:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:341:9
 1e09492:    e1 fc 09 00       	r1 = r14 + 9			  ## hci_vendor.c:344:38
 1e09496:    43 b8             	r3 = r4 + r1			  ## hci_vendor.c:344:42
 1e09498:    03 fa 00 f3       	r3 = b[r15+r3] (u)			  ## hci_vendor.c:344:24
 1e0949c:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:341:9
 1e094a0:    32 d4             	r2 = r6 >> 16			  ## hci_vendor.c:341:9
 1e094a2:    d2 f5 c9 00       	b[sp+201] = r2			  ## hci_vendor.c:341:9
 1e094a6:    d3 f5 cf 00       	b[sp+207] = r3			  ## hci_vendor.c:344:22
 1e094aa:    d0 f5 d0 00       	b[sp+208] = r0			  ## hci_vendor.c:345:22
 1e094ae:    f1 09             	r1 += r15			  ## hci_vendor.c:346:30
 1e094b0:    60 02             	r0 = [sp+24]			  ## hci_vendor.c:346:9
 1e094b2:    42 08             	r2 = r4			  ## hci_vendor.c:346:9
 1e094b4:    97 f3 16 ed       	call 3136044 <memcpy : 106ee4 >			  ## hci_vendor.c:346:9
 1e094b8:    c1 98             	r1 = r4 + 12			  ## hci_vendor.c:347:13
 1e094ba:    50 ac             	r0 = sp + 197
 1e094bc:    bf f3 25 f1       	call -7606 <le_hci_emit_event : 1e0770a >			  ## hci_vendor.c:349:9
 1e094c0:    80 fb 40 0e       	r0 = r14 + r4			  ## hci_vendor.c:348:31
 1e094c4:    ae 90             	r14 = r0 + 10			  ## hci_vendor.c:348:16
 1e094c6:    79 f2 03 a0       	ifs (r9 >= r7) goto 6 <.GJTIE572_2_2_+0x3BE : 1e094d0 >
 1e094ca:    19 80             	r9 += 1			  ## hci_vendor.c:335:33
 1e094cc:    8e f2 b2 bf       	ifs (r14 < r8) goto -156 <.GJTIE572_2_2_+0x322 : 1e09434 >			  ## hci_vendor.c:335:33
 1e094d0:    0a 70             	r10 = 0
 1e094d2:    0b f5 14 00       	r11 = [sp+20]
 1e094d6:    0c f5 10 00       	r12 = [sp+16]
 1e094da:    0d f5 0c 00       	r13 = [sp+12]
 1e094de:    0e f5 08 00       	r14 = [sp+8]
 1e094e2:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e094e8:    a2 18             	goto 324 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e094ea:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e094ee:    11 90             	r1 = r0 + 1
 1e094f0:    f0 08             	r0 = r15
 1e094f2:    bf f3 0a f1       	call -7660 <le_hci_emit_event : 1e0770a >
 1e094f6:    ae 18             	goto 348 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e094f8:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:985:24
 1e094fa:    41 68             	r1 = b[r4 + 4] (u)			  ## hci_vendor.c:985:24
 1e094fc:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:985:24
 1e09500:    40 92             	r0 = r1 + 4			  ## hci_vendor.c:988:40
 1e09502:    05 f2 9d 30       	if (r5 < r0) goto 314 <.GJTIE572_2_2_+0x52E : 1e09640 >			  ## hci_vendor.c:988:40
 1e09506:    40 9a             	r0 = r5 + 4			  ## hci_vendor.c:989:74
 1e09508:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:989:13
 1e0950a:    20 70             	r0 = 2			  ## hci_vendor.c:989:13
 1e0950c:    41 08             	r1 = r4			  ## hci_vendor.c:989:13
 1e0950e:    bf f3 15 f9       	call -3542 <l2cap_packet_handler : 1e0873c >			  ## hci_vendor.c:989:13
 1e09512:    40 08             	r0 = r4			  ## hci_vendor.c:990:13
 1e09514:    80 f3 fb 6a       	call 54774 <lmp_hci_private_try_free_acl_packet : 1e16b0e >			  ## hci_vendor.c:990:13
 1e09518:    93 18             	goto 294 <.GJTIE572_2_2_+0x52E : 1e09640 >			  ## hci_vendor.c:990:13
 1e0951a:    40 9c             	r0 = r6 + 4			  ## hci_vendor.c:1078:74
 1e0951c:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1078:13
 1e0951e:    20 70             	r0 = 2			  ## hci_vendor.c:1078:13
 1e09520:    41 08             	r1 = r4			  ## hci_vendor.c:1078:13
 1e09522:    bf f3 0b f9       	call -3562 <l2cap_packet_handler : 1e0873c >			  ## hci_vendor.c:1078:13
 1e09526:    54 18             	goto 168 <.GJTIE572_2_2_+0x4BE : 1e095d0 >			  ## hci_vendor.c:1078:13
 1e09528:    80 09             	r0 += r8			  ## hci_vendor.c:1033:17
 1e0952a:    00 fc a0 02       	r0 = r0 + 672			  ## hci_vendor.c:1033:17
 1e0952e:    41 98             	r1 = r4 + 4			  ## hci_vendor.c:1033:79
 1e09530:    97 f3 d8 ec       	call 3135920 <memcpy : 106ee4 >			  ## hci_vendor.c:1033:9
 1e09534:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1034:37
 1e09536:    60 09             	r0 += r6			  ## hci_vendor.c:1034:37
 1e09538:    08 5a             	h[r5 + 0] = r0			  ## hci_vendor.c:1034:37
 1e0953a:    11 5a             	r1 = h[r5 + 2] (u)			  ## hci_vendor.c:1037:44
 1e0953c:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1037:13
 1e0953e:    80 92             	r0 = r1 + 8			  ## hci_vendor.c:1037:79
 1e09540:    02 f2 49 30       	if (r2 < r0) goto 146 <.GJTIE572_2_2_+0x4C4 : 1e095d6 >			  ## hci_vendor.c:1037:79
 1e09544:    81 fc a0 02       	r1 = r8 + 672			  ## hci_vendor.c:1046:56
 1e09548:    20 70             	r0 = 2			  ## hci_vendor.c:1046:13
 1e0954a:    bf f3 f7 f8       	call -3602 <l2cap_packet_handler : 1e0873c >			  ## hci_vendor.c:1046:13
 1e0954e:    1a f7 02 50       	h[r5 + 2] = r10			  ## hci_vendor.c:1048:44
 1e09552:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1049:41
 1e09556:    3f 18             	goto 126 <.GJTIE572_2_2_+0x4C4 : 1e095d6 >			  ## hci_vendor.c:1049:41
 1e09558:    76 30             	if (r0 != 0) goto 236 <.GJTIE572_2_2_+0x534 : 1e09646 >
 1e0955a:    c5 ff 60 18 00 00 	r5 = 6240 <report_irq_stack_end : 1860 >
 1e09560:    00 f7 18 52       	r0 = h[r5 + 536] (u)			  ## hci_vendor.c:792:34
 1e09564:    06 20             	if (r0 == 0) goto 12 <.GJTIE572_2_2_+0x460 : 1e09572 >			  ## hci_vendor.c:792:34
 1e09566:    50 fc 15 02       	r0 = r5 + 533			  ## hci_vendor.c:794:56
 1e0956a:    01 70             	r1 = 0			  ## hci_vendor.c:794:56
 1e0956c:    52 70             	r2 = 5			  ## hci_vendor.c:794:56
 1e0956e:    97 f3 bf ec       	call 3135870 <memset : 106ef0 >			  ## hci_vendor.c:794:56
 1e09572:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:798:43
 1e09576:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:798:53
 1e09578:    f0 08             	r0 = r15			  ## hci_vendor.c:798:17
 1e0957a:    bf f3 c6 f0       	call -7796 <le_hci_emit_event : 1e0770a >			  ## hci_vendor.c:798:17
 1e0957e:    00 4a             	r0 = [r5 + 0]			  ## btstack_linked_list.c:163:16
 1e09580:    1a f5 b8 00       	[sp+184] = r10			  ## btstack_linked_list.c:161:25
 1e09584:    15 f5 bc 00       	[sp+188] = r5			  ## btstack_linked_list.c:162:14
 1e09588:    10 f5 c0 00       	[sp+192] = r0			  ## btstack_linked_list.c:163:14
 1e0958c:    0c 18             	goto 24 <.GJTIE572_2_2_+0x494 : 1e095a6 >			  ## btstack_linked_list.c:163:14
 1e0958e:    80 ab             	r0 = sp + 184
 1e09590:    bf f3 04 ee       	call -9208 <btstack_linked_list_iterator_next : 1e0719c >			  ## hci_vendor.c:274:61
 1e09594:    01 08             	r1 = r0			  ## hci_vendor.c:274:61
 1e09596:    50 52             	r0 = h[r1 + 10] (u)			  ## hci_vendor.c:275:19
 1e09598:    40 f2 05 10       	if (r0 != r4) goto 10 <.GJTIE572_2_2_+0x494 : 1e095a6 >			  ## hci_vendor.c:275:19
 1e0959c:    50 08             	r0 = r5			  ## hci_vendor.c:276:13
 1e0959e:    bf f3 d3 ec       	call -9818 <btstack_linked_list_remove : 1e06f48 >			  ## hci_vendor.c:276:13
 1e095a2:    10 08             	r0 = r1			  ## hci_vendor.c:277:13
 1e095a4:    23 14             	call -1978 <btstack_memory_le_hci_connection_free : 1e08dec >			  ## hci_vendor.c:277:13
 1e095a6:    80 ab             	r0 = sp + 184
 1e095a8:    bf f3 ea ed       	call -9260 <btstack_linked_list_iterator_has_next : 1e07180 >
 1e095ac:    f0 31             	if (r0 != 0) goto -32 <.GJTIE572_2_2_+0x47C : 1e0958e >
 1e095ae:    52 18             	goto 164 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e095b0:    88 fc a0 02       	r8 = r8 + 672			  ## hci_vendor.c:1087:21
 1e095b4:    46 90             	r6 = r0 + 4			  ## hci_vendor.c:1087:75
 1e095b6:    80 08             	r0 = r8			  ## hci_vendor.c:1087:13
 1e095b8:    41 08             	r1 = r4			  ## hci_vendor.c:1087:13
 1e095ba:    62 08             	r2 = r6			  ## hci_vendor.c:1087:13
 1e095bc:    97 f3 92 ec       	call 3135780 <memcpy : 106ee4 >			  ## hci_vendor.c:1087:13
 1e095c0:    0e 5a             	h[r5 + 0] = r6			  ## hci_vendor.c:1088:44
 1e095c2:    1f 5a             	h[r5 + 2] = r7			  ## hci_vendor.c:1089:44
 1e095c4:    e6 fd 00 29       	r2 = r9.l (u)			  ## hci_vendor.c:1090:13
 1e095c8:    21 70             	r1 = 2			  ## hci_vendor.c:1090:13
 1e095ca:    80 08             	r0 = r8			  ## hci_vendor.c:1090:13
 1e095cc:    bf f3 3c f3       	call -6536 <bt_store_16 : 1e07c48 >			  ## hci_vendor.c:1090:13
 1e095d0:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e095d6:    40 08             	r0 = r4
 1e095d8:    80 f3 0b 66       	call 52246 <ll_hci_private_free_dma_rx : 1e161f2 >
 1e095dc:    3a 18             	goto 116 <.GJTIE572_2_2_+0x540 : 1e09652 >
 1e095de:    80 f3 24 69       	call 53832 <lmp_hci_set_connection_encryption : 1e1682a >			  ## hci_vendor.c:436:13
 1e095e2:    25 18             	goto 74 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:436:13
 1e095e4:    80 f3 26 6a       	call 54348 <lmp_hci_link_key_request_negative_reply : 1e16a34 >			  ## hci_vendor.c:689:17
 1e095e8:    35 18             	goto 106 <.GJTIE572_2_2_+0x542 : 1e09654 >			  ## hci_vendor.c:689:17
 1e095ea:    c0 ff 90 09 00 00 	r0 = 2448 <stack_configs_app : 990 >
 1e095f0:    03 08             	r3 = r0
 1e095f2:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:160:32
 1e095f4:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:160:32
 1e095f6:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:160:32
 1e095f8:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:160:32
 1e095fa:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e095fe:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e09602:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e09606:    98 d1             	r0 = r3 >> 6			  ## hci_vendor.c:160:69
 1e09608:    d9 d4             	r1 = r3 >> 19			  ## hci_vendor.c:160:32
 1e0960a:    50 b2             	r0 |= r1			  ## hci_vendor.c:160:47
 1e0960c:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:630:17
 1e09610:    e0 08             	r0 = r14			  ## hci_vendor.c:630:17
 1e09612:    bf f3 29 f0       	call -8110 <delete_link_key : 1e07668 >			  ## hci_vendor.c:630:17
 1e09616:    0b 18             	goto 22 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:630:17
 1e09618:    02 72             	r2 = 32			  ## hci_vendor.c:428:13
 1e0961a:    03 70             	r3 = 0			  ## hci_vendor.c:428:13
 1e0961c:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e09622:    bf f3 d7 ef       	call -8274 <bt_event_update_to_user : 1e075d4 >
 1e09626:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:944:16
 1e09628:    45 08             	r5 = r4			  ## hci_vendor.c:944:16
 1e0962a:    f0 e4 0c 80       	if (r0 > 79) goto 24 <.GJTIE572_2_2_+0x534 : 1e09646 >			  ## hci_vendor.c:944:16
 1e0962e:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:945:56
 1e09632:    12 90             	r2 = r0 + 1			  ## hci_vendor.c:945:66
 1e09634:    40 70             	r0 = 4			  ## hci_vendor.c:945:9
 1e09636:    f1 08             	r1 = r15			  ## hci_vendor.c:945:9
 1e09638:    bf f3 80 f8       	call -3840 <l2cap_packet_handler : 1e0873c >			  ## hci_vendor.c:945:9
 1e0963c:    60 05             	r0 = r5.l (u)			  ## hci_vendor.c:957:18
 1e0963e:    0a 20             	if (r0 == 0) goto 20 <.GJTIE572_2_2_+0x542 : 1e09654 >			  ## hci_vendor.c:957:18
 1e09640:    80 f3 57 6a       	call 54446 <lmp_hci_host_num_of_completed_packets : 1e16af2 >
 1e09644:    07 18             	goto 14 <.GJTIE572_2_2_+0x542 : 1e09654 >
 1e09646:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:950:39
 1e0964a:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:950:49
 1e0964c:    f0 08             	r0 = r15			  ## hci_vendor.c:950:13
 1e0964e:    bf f3 5c f0       	call -8008 <le_hci_emit_event : 1e0770a >			  ## hci_vendor.c:950:13
 1e09652:    28 14             	call -1968 <hci_run_for_acl_data_send : 1e08ea4 >
 1e09654:    c0 ff 84 09 00 00 	r0 = 2436 <stack_run_loop_head : 984 >
 1e0965a:    04 40             	r4 = [r0 + 0]
 1e0965c:    06 28             	if (r4 == 0) goto 12 <.GJTIE572_2_2_+0x558 : 1e0966a >
 1e0965e:    11 48             	r1 = [r4 + 4]			  ## run_loop.c:37:16
 1e09660:    02 22             	if (r1 == 0) goto 4 <.GJTIE572_2_2_+0x554 : 1e09666 >			  ## run_loop.c:37:16
 1e09662:    40 08             	r0 = r4			  ## run_loop.c:38:13
 1e09664:    81 00             	call r1			  ## run_loop.c:38:13
 1e09666:    04 48             	r4 = [r4 + 0]
 1e09668:    fa 39             	if (r4 != 0) goto -12 <.GJTIE572_2_2_+0x54C : 1e0965e >
 1e0966a:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## btstack_task.c:137:13
 1e09670:    00 e0 81 0c       	if (r0 == 0) goto -1790 <btstack_task+0x4E : 1e08f76 >			  ## btstack_task.c:137:13
 1e09674:    8f f3 c4 b4       	call 2058632 <umoddi3.bc : 0 >			  ## btstack_task.c:138:13
 1e09678:    7e 1c             	goto -1796 <btstack_task+0x4E : 1e08f76 >			  ## btstack_task.c:138:13
 1e0967a:    80 f3 d5 69       	call 54186 <lmp_hci_accept_sco_connection_request : 1e16a28 >			  ## hci_vendor.c:568:13
 1e0967e:    d7 1f             	goto -82 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:568:13
 1e09680:    80 f3 d4 69       	call 54184 <lmp_hci_reject_connection_request : 1e16a2c >			  ## hci_vendor.c:572:13
 1e09684:    d4 1f             	goto -88 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:572:13
 1e09686:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:868:29
 1e0968a:    b0 08             	r0 = r11			  ## hci_vendor.c:870:24
 1e0968c:    41 08             	r1 = r4			  ## hci_vendor.c:870:24
 1e0968e:    bf f3 bb fb       	call -2186 <le_hci_connection_for_bd_addr_and_type : 1e08e08 >			  ## hci_vendor.c:870:24
 1e09692:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## hci_vendor.c:877:21
 1e09696:    02 08             	r2 = r0			  ## hci_vendor.c:870:24
 1e09698:    24 32             	if (r1 != 0) goto 72 <.GJTIE572_2_2_+0x5D0 : 1e096e2 >
 1e0969a:    06 34             	if (r2 != 0) goto 12 <.GJTIE572_2_2_+0x596 : 1e096a8 >
 1e0969c:    b0 08             	r0 = r11			  ## hci_vendor.c:905:28
 1e0969e:    41 08             	r1 = r4			  ## hci_vendor.c:905:28
 1e096a0:    bf f3 d4 fb       	call -2136 <le_create_connection_for_bd_addr_and_type : 1e08e4c >			  ## hci_vendor.c:905:28
 1e096a4:    02 08             	r2 = r0			  ## hci_vendor.c:905:28
 1e096a6:    c3 25             	if (r2 == 0) goto -122 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e096a8:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## hci_vendor.c:913:31
 1e096ac:    08 65             	b[r2 + 16] = r0			  ## hci_vendor.c:913:29
 1e096ae:    41 70             	r1 = 4			  ## hci_vendor.c:914:36
 1e096b0:    f0 08             	r0 = r15			  ## hci_vendor.c:914:36
 1e096b2:    bf f3 5e ed       	call -9540 <little_endian_read_16 : 1e07172 >			  ## hci_vendor.c:914:36
 1e096b6:    04 08             	r4 = r0			  ## hci_vendor.c:914:36
 1e096b8:    5c 54             	h[r2 + 10] = r4			  ## hci_vendor.c:914:34
 1e096ba:    25 fc b6 04       	r5 = r2 + 1206			  ## hci_vendor.c:914:34
 1e096be:    e0 9a             	r0 = r5 + 14			  ## hci_vendor.c:917:50
 1e096c0:    71 9a             	r1 = r5 + 7			  ## hci_vendor.c:917:68
 1e096c2:    80 f3 60 65       	call 51904 <hci_ll_get_device_address : 1e16186 >			  ## hci_vendor.c:917:17
 1e096c6:    10 9a             	r0 = r5 + 1			  ## hci_vendor.c:918:39
 1e096c8:    80 f3 36 65       	call 51820 <le_controller_get_mac : 1e16138 >			  ## hci_vendor.c:918:17
 1e096cc:    ac 1f             	goto -168 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:918:17
 1e096ce:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:833:29
 1e096d2:    b0 08             	r0 = r11			  ## hci_vendor.c:835:24
 1e096d4:    41 08             	r1 = r4			  ## hci_vendor.c:835:24
 1e096d6:    bf f3 97 fb       	call -2258 <le_hci_connection_for_bd_addr_and_type : 1e08e08 >			  ## hci_vendor.c:835:24
 1e096da:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## btstack_event.h:3699:16
 1e096de:    02 08             	r2 = r0			  ## hci_vendor.c:835:24
 1e096e0:    0e 22             	if (r1 == 0) goto 28 <.GJTIE572_2_2_+0x5EC : 1e096fe >			  ## hci_vendor.c:838:21
 1e096e2:    02 24             	if (r2 == 0) goto 4 <.GJTIE572_2_2_+0x5D6 : 1e096e8 >
 1e096e4:    bf f3 82 fb       	call -2300 <btstack_memory_le_hci_connection_free : 1e08dec >
 1e096e8:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e096ec:    11 90             	r1 = r0 + 1
 1e096ee:    f0 08             	r0 = r15
 1e096f0:    bf f3 0b f0       	call -8170 <le_hci_emit_event : 1e0770a >
 1e096f4:    9c 1f             	goto -200 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e096f6:    a0 7a             	r0 = 170			  ## hci_vendor.c:561:17
 1e096f8:    80 f3 94 69       	call 54056 <lmp_hci_accept_connection_request : 1e16a24 >			  ## hci_vendor.c:561:17
 1e096fc:    98 1f             	goto -208 <.GJTIE572_2_2_+0x51C : 1e0962e >			  ## hci_vendor.c:561:17
 1e096fe:    06 34             	if (r2 != 0) goto 12 <.GJTIE572_2_2_+0x5FA : 1e0970c >
 1e09700:    b0 08             	r0 = r11			  ## hci_vendor.c:849:28
 1e09702:    41 08             	r1 = r4			  ## hci_vendor.c:849:28
 1e09704:    bf f3 a2 fb       	call -2236 <le_create_connection_for_bd_addr_and_type : 1e08e4c >			  ## hci_vendor.c:849:28
 1e09708:    02 08             	r2 = r0			  ## hci_vendor.c:849:28
 1e0970a:    91 25             	if (r2 == 0) goto -222 <.GJTIE572_2_2_+0x51C : 1e0962e >
 1e0970c:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## btstack_event.h:3719:16
 1e09710:    08 65             	b[r2 + 16] = r0			  ## hci_vendor.c:856:29
 1e09712:    41 70             	r1 = 4			  ## btstack_event.h:3709:16
 1e09714:    f0 08             	r0 = r15			  ## btstack_event.h:3709:16
 1e09716:    bf f3 2c ed       	call -9640 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:3709:16
 1e0971a:    04 08             	r4 = r0			  ## btstack_event.h:3709:16
 1e0971c:    5c 54             	h[r2 + 10] = r4			  ## hci_vendor.c:857:34
 1e0971e:    83 1f             	goto -250 <.GJTIE572_2_2_+0x514 : 1e09626 >			  ## hci_vendor.c:857:34


hci_can_send_acl_le_packet_now:
 1e09720:    34 00             	[--sp] = rets			  ## hci_vendor.c:2033:0
 1e09722:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## hci_vendor.c:2034:22
 1e09728:    01 f9 15 02       	r1 = b[r0 + 533] (u)			  ## hci_vendor.c:2034:22
 1e0972c:    00 70             	r0 = 0			  ## hci_vendor.c:2034:22
 1e0972e:    07 32             	if (r1 != 0) goto 14 <hci_can_send_acl_le_packet_now+0x1E : 1e0973e >			  ## hci_vendor.c:2034:22
 1e09730:    bf f3 39 f3       	call -6542 <hci_number_free_acl_slots_for_connection_type : 1e07da6 >			  ## hci_vendor.c:2029:12
 1e09734:    01 08             	r1 = r0			  ## hci_vendor.c:2029:12
 1e09736:    10 70             	r0 = 1			  ## hci_vendor.c:2029:72
 1e09738:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_le_packet_now+0x1E : 1e0973e >			  ## hci_vendor.c:2029:72
 1e0973c:    00 70             	r0 = 0			  ## hci_vendor.c:2029:72
 1e0973e:    30 00             	pc = [sp++]			  ## hci_vendor.c:2038:1


l2cap_notify_channel_can_send:
 1e09740:    79 01             	[--sp] = {rets, r9-r4}			  ## l2cap.c:428:0
 1e09742:    fe 0b             	sp += -4			  ## l2cap.c:428:0
 1e09744:    c4 ff ac 1a 00 00 	r4 = 6828 <l2cap_fixed_channels+0x4 : 1aac >			  ## l2cap.c:428:0
 1e0974a:    05 70             	r5 = 0			  ## l2cap.c:428:0
 1e0974c:    88 77             	r8 = 120			  ## l2cap.c:428:0
 1e0974e:    29 70             	r9 = 2			  ## l2cap.c:428:0
 1e09750:    06 70             	r6 = 0			  ## l2cap.c:428:0
 1e09752:    07 f6 fc 4f       	r7 = [r4 + -4]			  ## l2cap.c:431:38
 1e09756:    20 2e             	if (r7 == 0) goto 64 <l2cap_notify_channel_can_send+0x58 : 1e09798 >
 1e09758:    00 68             	r0 = b[r4 + 0] (u)			  ## l2cap.c:434:38
 1e0975a:    1e 20             	if (r0 == 0) goto 60 <l2cap_notify_channel_can_send+0x58 : 1e09798 >			  ## l2cap.c:434:38
 1e0975c:    26 e0 20 00       	if (r6 == 2) goto 64 <l2cap_notify_channel_can_send+0x60 : 1e097a0 >
 1e09760:    df 17             	call -66 <hci_can_send_acl_le_packet_now : 1e09720 >			  ## l2cap.c:439:24
 1e09762:    1a 20             	if (r0 == 0) goto 52 <l2cap_notify_channel_can_send+0x58 : 1e09798 >
 1e09764:    0d 68             	b[r4 + 0] = r5			  ## l2cap.c:446:58
 1e09766:    06 2c             	if (r6 == 0) goto 12 <l2cap_notify_channel_can_send+0x34 : 1e09774 >			  ## l2cap.c:446:58
 1e09768:    26 e0 06 00       	if (r6 == 2) goto 12 <l2cap_notify_channel_can_send+0x38 : 1e09778 >
 1e0976c:    16 e0 06 10       	if (r6 != 1) goto 12 <l2cap_notify_channel_can_send+0x3C : 1e0977c >
 1e09770:    60 70             	r0 = 6
 1e09772:    05 18             	goto 10 <l2cap_notify_channel_can_send+0x3E : 1e0977e >
 1e09774:    40 70             	r0 = 4
 1e09776:    03 18             	goto 6 <l2cap_notify_channel_can_send+0x3E : 1e0977e >
 1e09778:    20 70             	r0 = 2
 1e0977a:    01 18             	goto 2 <l2cap_notify_channel_can_send+0x3E : 1e0977e >
 1e0977c:    00 70             	r0 = 0
 1e0977e:    d8 f5 00 00       	b[sp] = r8			  ## l2cap.c:191:14
 1e09782:    d9 f5 01 00       	b[sp+1] = r9			  ## l2cap.c:192:14
 1e09786:    d0 f5 02 00       	b[sp+2] = r0			  ## utils.c:160:19
 1e0978a:    d5 f5 03 00       	b[sp+3] = r5			  ## utils.c:161:19
 1e0978e:    21 04             	r1 = r0.l (u)			  ## l2cap.c:195:5
 1e09790:    02 a0             	r2 = sp + 0			  ## l2cap.c:195:5
 1e09792:    40 70             	r0 = 4			  ## l2cap.c:195:5
 1e09794:    43 70             	r3 = 4			  ## l2cap.c:195:5
 1e09796:    87 00             	call r7			  ## l2cap.c:195:5
 1e09798:    16 80             	r6 += 1			  ## l2cap.c:430:54
 1e0979a:    84 80             	r4 += 8			  ## l2cap.c:430:19
 1e0979c:    36 e0 d9 1f       	if (r6 != 3) goto -78 <l2cap_notify_channel_can_send+0x12 : 1e09752 >			  ## l2cap.c:430:19
 1e097a0:    02 0a             	sp += 4
 1e097a2:    59 01             	{pc, r9-r4} = [sp++]			  ## l2cap.c:449:1


l2cap_hci_event_handler:
 1e097a4:    34 00             	[--sp] = rets			  ## l2cap.c:1114:0
 1e097a6:    00 64             	r0 = b[r2 + 0] (u)			  ## btstack_event.h:40:16
 1e097a8:    f0 e0 06 00       	if (r0 == 15) goto 12 <l2cap_hci_event_handler+0x14 : 1e097b8 >			  ## l2cap.c:1116:5
 1e097ac:    30 e1 06 10       	if (r0 != 19) goto 12 <l2cap_hci_event_handler+0x18 : 1e097bc >
 1e097b0:    bf f3 7b f4       	call -5898 <l2cap_run : 1e080aa >			  ## l2cap.c:1120:9
 1e097b4:    88 01             	{rets} = [sp++]			  ## l2cap.c:1122:9
 1e097b6:    c4 1f             	goto -120 <l2cap_notify_channel_can_send : 1e09740 >			  ## l2cap.c:1122:9
 1e097b8:    bf f3 77 f4       	call -5906 <l2cap_run : 1e080aa >			  ## l2cap.c:1127:9
 1e097bc:    30 00             	pc = [sp++]			  ## l2cap.c:1150:1


user_cmd_loop_suspend:
 1e097be:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2918:0
 1e097c4:    00 f7 fa 10       	r0 = h[r1 + 250] (u)			  ## avctp_user.c:2919:35
 1e097c8:    02 fd 01 0a       	r2 = r0 | 256			  ## avctp_user.c:2919:35
 1e097cc:    00 70             	r0 = 0			  ## avctp_user.c:2920:5
 1e097ce:    12 f7 fa 10       	h[r1 + 250] = r2			  ## avctp_user.c:2919:35
 1e097d2:    20 00             	rts			  ## avctp_user.c:2920:5


user_cmd_loop_resume:
 1e097d4:    c1 ff c0 1a 00 00 	r1 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2923:0
 1e097da:    00 f7 fa 10       	r0 = h[r1 + 250] (u)			  ## avctp_user.c:2924:35
 1e097de:    32 fd 01 0a       	r2 = r0 & 4294967039			  ## avctp_user.c:2924:35
 1e097e2:    00 70             	r0 = 0			  ## avctp_user.c:2925:5
 1e097e4:    12 f7 fa 10       	h[r1 + 250] = r2			  ## avctp_user.c:2924:35
 1e097e8:    20 00             	rts			  ## avctp_user.c:2925:5


btstack_run_loop_remove_timer:
 1e097ea:    20 04             	r0 = r0.l (u)			  ## btstack_sys_timer.c:169:0
 1e097ec:    c0 f3 87 0c       	goto 6414 <sys_timer_del : 1e0b0fe >			  ## btstack_sys_timer.c:174:5


user_cmd_loop_release:
 1e097f0:    75 01             	[--sp] = {rets, r5, r4}			  ## avctp_user.c:2900:0
 1e097f2:    c5 ff c0 1a 00 00 	r5 = 6848 <__user_info : 1ac0 >			  ## avctp_user.c:2900:0
 1e097f8:    00 f9 fa 50       	r0 = b[r5 + 250] (u)			  ## avctp_user.c:2902:9
 1e097fc:    04 70             	r4 = 0			  ## avctp_user.c:2902:9
 1e097fe:    26 f3 1a 00       	if ((r0 & 64) != 0) goto 52 <user_cmd_loop_release+0x46 : 1e09836 >			  ## avctp_user.c:2902:9
 1e09802:    50 fc 70 00       	r0 = r5 + 112
 1e09806:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:2906:20
 1e09808:    1d f3 02 10       	if ((r1 & 536870912) == 0) goto 4 <user_cmd_loop_release+0x20 : 1e09810 >			  ## avctp_user.c:2906:20
 1e0980c:    31 50             	r1 = h[r0 + 6] (u)			  ## avctp_user.c:2906:38
 1e0980e:    12 32             	if (r1 != 0) goto 36 <user_cmd_loop_release+0x44 : 1e09834 >			  ## avctp_user.c:2906:38
 1e09810:    80 81             	r0 += 24			  ## avctp_user.c:2905:5
 1e09812:    51 fc 88 00       	r1 = r5 + 136			  ## avctp_user.c:2905:5
 1e09816:    10 f2 f6 3f       	if (r0 < r1) goto -20 <user_cmd_loop_release+0x16 : 1e09806 >			  ## avctp_user.c:2905:5
 1e0981a:    50 fc 64 00       	r0 = r5 + 100			  ## avctp_user.c:2910:5
 1e0981e:    bf f3 9c eb       	call -10440 <stack_run_loop_remove : 1e06f5a >			  ## avctp_user.c:2910:5
 1e09822:    00 f6 a0 50       	r0 = [r5 + 160]			  ## avctp_user.c:2910:5
 1e09826:    e1 17             	call -62 <btstack_run_loop_remove_timer : 1e097ea >			  ## avctp_user.c:2911:5
 1e09828:    00 f7 fa 50       	r0 = h[r5 + 250] (u)			  ## avctp_user.c:2912:30
 1e0982c:    10 b3             	r0 |= 64			  ## avctp_user.c:2912:30
 1e0982e:    10 f7 fa 50       	h[r5 + 250] = r0			  ## avctp_user.c:2912:30
 1e09832:    01 18             	goto 2 <user_cmd_loop_release+0x46 : 1e09836 >			  ## avctp_user.c:2912:30
 1e09834:    14 70             	r4 = 1
 1e09836:    40 08             	r0 = r4			  ## avctp_user.c:2914:1
 1e09838:    55 01             	{pc, r5, r4} = [sp++]			  ## avctp_user.c:2914:1


user_client_gatt_event:
 1e0983a:    20 00             	rts			  ## client_user.c:320:0


update_connectiong_mac_addr:
 1e0983c:    c1 ff bc 1b 00 00 	r1 = 7100 <__user_info+0xFC : 1bbc >			  ## avctp_user.c:1195:0
 1e09842:    c2 f4 00 19       	[r1 + 8] = 0			  ## avctp_user.c:1198:25
 1e09846:    03 08             	r3 = r0			  ## avctp_user.c:1198:25
 1e09848:    60 70             	r0 = 6
 1e0984a:    68 62             	b[r1 + 6] = r0			  ## avctp_user.c:1199:29
 1e0984c:    62 70             	r2 = 6			  ## avctp_user.c:1200:5
 1e0984e:    10 08             	r0 = r1			  ## avctp_user.c:1200:5
 1e09850:    31 08             	r1 = r3			  ## avctp_user.c:1200:5
 1e09852:    d7 f3 47 eb       	goto 3135118 <memcpy : 106ee4 >			  ## avctp_user.c:1200:5


aec_sco_connection_start:
 1e09856:    77 01             	[--sp] = {rets, r7-r4}			  ## bt_audio.c:121:0
 1e09858:    c6 ff 90 09 00 00 	r6 = 2448 <stack_configs_app : 990 >			  ## bt_audio.c:121:0
 1e0985e:    43 6d             	r3 = b[r6 + 20] (u)			  ## bt_audio.c:123:29
 1e09860:    34 6d             	r4 = b[r6 + 19] (u)			  ## bt_audio.c:123:29
 1e09862:    25 6d             	r5 = b[r6 + 18] (u)			  ## bt_audio.c:123:29
 1e09864:    17 6d             	r7 = b[r6 + 17] (u)			  ## bt_audio.c:123:29
 1e09866:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## bt_audio.c:123:29
 1e0986a:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## bt_audio.c:123:29
 1e0986e:    d0 fd 80 74       	r7 <= insert(r4, p:16, l:16)			  ## bt_audio.c:123:29
 1e09872:    23 08             	r3 = r2
 1e09874:    15 08             	r5 = r1
 1e09876:    04 08             	r4 = r0
 1e09878:    2e f3 2f 70       	if ((r7 & 16384) != 0) goto 94 <aec_sco_connection_start+0x84 : 1e098da >
 1e0987c:    2d f3 22 70       	if ((r7 & 8192) != 0) goto 68 <aec_sco_connection_start+0x6E : 1e098c4 >			  ## bt_audio.c:126:9
 1e09880:    20 6d             	r0 = b[r6 + 18] (u)			  ## bt_audio.c:127:50
 1e09882:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:127:50
 1e09884:    12 6d             	r2 = b[r6 + 17] (u)			  ## bt_audio.c:127:50
 1e09886:    47 6d             	r7 = b[r6 + 20] (u)			  ## bt_audio.c:127:50
 1e09888:    4f 6d             	b[r6 + 20] = r7			  ## bt_audio.c:127:50
 1e0988a:    1a 6d             	b[r6 + 17] = r2			  ## bt_audio.c:127:50
 1e0988c:    c8 fd 40 17       	r1 <= insert(r7, p:8, l:8)			  ## bt_audio.c:127:50
 1e09890:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)			  ## bt_audio.c:127:50
 1e09894:    d0 fd 80 21       	r2 <= insert(r1, p:16, l:16)			  ## bt_audio.c:127:50
 1e09898:    10 d4             	r0 = r2 >> 16			  ## bt_audio.c:127:50
 1e0989a:    38 6d             	b[r6 + 19] = r0			  ## bt_audio.c:127:50
 1e0989c:    00 fd 40 2a       	r0 = r2 | 16384			  ## bt_audio.c:127:50
 1e098a0:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:127:50
 1e098a2:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:127:50
 1e098a4:    90 9d             	r0 = r6 + 25			  ## bt_audio.c:128:9
 1e098a6:    62 70             	r2 = 6			  ## bt_audio.c:128:9
 1e098a8:    31 08             	r1 = r3			  ## bt_audio.c:128:9
 1e098aa:    97 f3 1b eb       	call 3135030 <memcpy : 106ee4 >			  ## bt_audio.c:128:9
 1e098ae:    d0 fd 80 45       	r4 <= insert(r5, p:16, l:16)			  ## bt_audio.c:134:107
 1e098b2:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:134:9
 1e098b8:    00 70             	r0 = 0			  ## bt_audio.c:134:9
 1e098ba:    92 71             	r2 = 25			  ## bt_audio.c:134:9
 1e098bc:    43 08             	r3 = r4			  ## bt_audio.c:134:9
 1e098be:    17 01             	{rets, r7-r4} = [sp++]			  ## bt_audio.c:134:9
 1e098c0:    ff f3 88 ee       	goto -8944 <bt_event_update_to_user : 1e075d4 >			  ## bt_audio.c:134:9
 1e098c4:    c1 ff 20 a1 e0 01 	r1 = 31498528 <send_sco_disconn : 1e0a120 >			  ## bt_audio.c:142:29
 1e098ca:    00 70             	r0 = 0			  ## bt_audio.c:142:29
 1e098cc:    42 76             	r2 = 100			  ## bt_audio.c:142:29
 1e098ce:    80 f3 a6 0d       	call 6988 <sys_timeout_add : 1e0b41e >			  ## bt_audio.c:142:29
 1e098d2:    c1 ff b0 09 00 00 	r1 = 2480 <disable_sco_timer : 9b0 >			  ## bt_audio.c:142:27
 1e098d8:    08 52             	h[r1 + 0] = r0			  ## bt_audio.c:142:27
 1e098da:    57 01             	{pc, r7-r4} = [sp++]			  ## bt_audio.c:145:1


free_conn_for_addr:
 1e098dc:    77 01             	[--sp] = {rets, r7-r4}			  ## avctp_user.c:307:0
 1e098de:    16 08             	r6 = r1			  ## avctp_user.c:307:0
 1e098e0:    05 08             	r5 = r0			  ## avctp_user.c:307:0
 1e098e2:    bf f3 61 ee       	call -9022 <get_conn_for_addr : 1e075a8 >			  ## avctp_user.c:308:25
 1e098e6:    04 08             	r4 = r0			  ## avctp_user.c:308:25
 1e098e8:    c7 ff c0 1a 00 00 	r7 = 6848 <__user_info : 1ac0 >
 1e098ee:    0d 2c             	if (r6 == 0) goto 26 <free_conn_for_addr+0x2E : 1e0990a >
 1e098f0:    0c 28             	if (r4 == 0) goto 24 <free_conn_for_addr+0x2E : 1e0990a >
 1e098f2:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:313:23
 1e098f4:    26 f3 03 00       	if ((r0 & 64) != 0) goto 6 <free_conn_for_addr+0x22 : 1e098fe >			  ## avctp_user.c:313:23
 1e098f8:    70 fc 89 00       	r0 = r7 + 137			  ## avctp_user.c:316:17
 1e098fc:    02 18             	goto 4 <free_conn_for_addr+0x26 : 1e09902 >			  ## avctp_user.c:316:17
 1e098fe:    70 fc f2 00       	r0 = r7 + 242			  ## avctp_user.c:314:17
 1e09902:    62 70             	r2 = 6
 1e09904:    51 08             	r1 = r5
 1e09906:    97 f3 ed ea       	call 3134938 <memcpy : 106ee4 >
 1e0990a:    15 28             	if (r4 == 0) goto 42 <free_conn_for_addr+0x5A : 1e09936 >
 1e0990c:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:323:22
 1e0990e:    31 48             	r1 = [r4 + 12]			  ## avctp_user.c:323:22
 1e09910:    08 69             	b[r4 + 16] = r0			  ## avctp_user.c:323:22
 1e09912:    30 fd 20 1c       	r0 = r1 & 3758096383			  ## avctp_user.c:323:22
 1e09916:    38 48             	[r4 + 12] = r0			  ## avctp_user.c:323:22
 1e09918:    00 f7 fa 70       	r0 = h[r7 + 250] (u)			  ## avctp_user.c:324:37
 1e0991c:    31 fd 07 09       	r1 = r0 & 4294967288			  ## avctp_user.c:324:37
 1e09920:    70 80             	r0 += 7			  ## avctp_user.c:324:37
 1e09922:    20 fd 07 09       	r0 = r0 & 7			  ## avctp_user.c:324:37
 1e09926:    50 b2             	r0 |= r1			  ## avctp_user.c:324:37
 1e09928:    10 f7 fa 70       	h[r7 + 250] = r0			  ## avctp_user.c:324:37
 1e0992c:    01 70             	r1 = 0			  ## avctp_user.c:328:9
 1e0992e:    82 71             	r2 = 24			  ## avctp_user.c:328:9
 1e09930:    40 08             	r0 = r4			  ## avctp_user.c:328:9
 1e09932:    97 f3 dd ea       	call 3134906 <memset : 106ef0 >			  ## avctp_user.c:328:9
 1e09936:    70 fc 70 00       	r0 = r7 + 112
 1e0993a:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:332:19
 1e0993c:    3d f3 06 10       	if ((r1 & 536870912) != 0) goto 12 <free_conn_for_addr+0x70 : 1e0994c >			  ## avctp_user.c:332:19
 1e09940:    80 81             	r0 += 24			  ## avctp_user.c:330:5
 1e09942:    71 fc 88 00       	r1 = r7 + 136			  ## avctp_user.c:330:5
 1e09946:    10 f2 f8 3f       	if (r0 < r1) goto -16 <free_conn_for_addr+0x5E : 1e0993a >			  ## avctp_user.c:330:5
 1e0994a:    57 01             	{pc, r7-r4} = [sp++]
 1e0994c:    21 50             	r1 = h[r0 + 4] (u)			  ## avctp_user.c:334:13
 1e0994e:    11 f7 b4 70       	h[r7 + 180] = r1			  ## avctp_user.c:334:13
 1e09952:    00 40             	r0 = [r0 + 0]			  ## avctp_user.c:334:13
 1e09954:    10 f6 b0 70       	[r7 + 176] = r0			  ## avctp_user.c:334:13
 1e09958:    57 01             	{pc, r7-r4} = [sp++]			  ## avctp_user.c:334:13


packet_handler:
 1e0995a:    79 01             	[--sp] = {rets, r9-r4}			  ## btstack_main.c:188:0
 1e0995c:    fc 0b             	sp += -8			  ## btstack_main.c:188:0
 1e0995e:    34 08             	r4 = r3			  ## btstack_main.c:188:0
 1e09960:    41 e0 3e 11       	if (r1 != 4) goto 636 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## btstack_main.c:188:0
 1e09964:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_main.c:188:0
 1e09966:    c0 e6 23 c0       	ifs (r0 > 108) goto 70 <packet_handler+0x56 : 1e099b0 >			  ## btstack_main.c:194:9
 1e0996a:    c6 ff 90 09 00 00 	r6 = 2448 <stack_configs_app : 990 >
 1e09970:    30 e0 30 00       	if (r0 == 3) goto 96 <.GJTIE584_0_0_+0x6 : 1e099d4 >
 1e09974:    50 e0 49 00       	if (r0 == 5) goto 146 <.GJTIE584_0_0_+0x3C : 1e09a0a >
 1e09978:    c0 e2 32 11       	if (r0 != 44) goto 612 <.GJTIE584_0_0_+0x212 : 1e09be0 >
 1e0997c:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:271:13
 1e0997e:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:271:13
 1e09980:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:271:13
 1e09984:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:271:13
 1e09988:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:271:13
 1e0998a:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:271:13
 1e0998c:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:271:13
 1e0998e:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:271:13
 1e09990:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:271:13
 1e09994:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:271:13
 1e09998:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:271:13
 1e0999c:    0b 02             	[sp] = r3			  ## btstack_main.c:271:13
 1e0999e:    11 69             	r1 = b[r4 + 17] (u)			  ## btstack_main.c:272:50
 1e099a0:    02 69             	r2 = b[r4 + 16] (u)			  ## btstack_main.c:272:50
 1e099a2:    20 69             	r0 = b[r4 + 18] (u)			  ## btstack_main.c:272:13
 1e099a4:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## btstack_main.c:272:50
 1e099a8:    a1 04             	r1 = r2.l (u)			  ## btstack_main.c:272:13
 1e099aa:    02 a0             	r2 = sp + 0			  ## btstack_main.c:272:13
 1e099ac:    54 17             	call -344 <aec_sco_connection_start : 1e09856 >			  ## btstack_main.c:272:13
 1e099ae:    18 19             	goto 560 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## btstack_main.c:272:13
 1e099b0:    01 fc 0a ff       	r1 = r0 + -246
 1e099b4:    81 e0 4b 80       	if (r1 > 8) goto 150 <.GJTIE584_0_0_+0x80 : 1e09a4e >
 1e099b8:    48 c0             	r0 = r1 << 1
 1e099ba:    b0 00             	tbh [r0]


.GJTIL584_0_0_:
 1e099bc:    09 00     < 9 : 0x9 >
 1e099be:    66 00     < 102 : 0x66 >
 1e099c0:    12 01     < 274 : 0x112 >
 1e099c2:    69 00     < 105 : 0x69 >
 1e099c4:    12 01     < 274 : 0x112 >
 1e099c6:    12 01     < 274 : 0x112 >
 1e099c8:    12 01     < 274 : 0x112 >
 1e099ca:    12 01     < 274 : 0x112 >
 1e099cc:    6f 00     < 111 : 0x6F >
 1e099ce:    00 70             	r0 = 0			  ## btstack_main.c:340:13
 1e099d0:    31 73             	r1 = 51			  ## btstack_main.c:340:13
 1e099d2:    5f 18             	goto 190 <.GJTIE584_0_0_+0xC4 : 1e09a92 >			  ## btstack_main.c:340:13
 1e099d4:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:197:13
 1e099d6:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:197:13
 1e099d8:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:197:13
 1e099dc:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:197:13
 1e099e0:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:197:13
 1e099e2:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:197:13
 1e099e4:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:197:13
 1e099e6:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:197:13
 1e099e8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:197:13
 1e099ec:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:197:13
 1e099f0:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:197:13
 1e099f4:    0b 02             	[sp] = r3			  ## btstack_main.c:197:13
 1e099f6:    21 68             	r1 = b[r4 + 2] (u)			  ## btstack_main.c:198:17
 1e099f8:    b0 68             	r0 = b[r4 + 11] (u)			  ## btstack_main.c:198:17
 1e099fa:    5a 22             	if (r1 == 0) goto 180 <.GJTIE584_0_0_+0xE2 : 1e09ab0 >			  ## btstack_main.c:198:17
 1e099fc:    10 e0 f0 10       	if (r0 != 1) goto 480 <.GJTIE584_0_0_+0x212 : 1e09be0 >
 1e09a00:    05 a0             	r5 = sp + 0
 1e09a02:    01 70             	r1 = 0			  ## btstack_main.c:217:21
 1e09a04:    50 08             	r0 = r5			  ## btstack_main.c:217:21
 1e09a06:    6a 17             	call -300 <free_conn_for_addr : 1e098dc >			  ## btstack_main.c:217:21
 1e09a08:    e3 18             	goto 454 <.GJTIE584_0_0_+0x202 : 1e09bd0 >			  ## btstack_main.c:217:21
 1e09a0a:    c0 68             	r0 = b[r4 + 12] (u)			  ## utils.c:188:5
 1e09a0c:    b1 68             	r1 = b[r4 + 11] (u)			  ## utils.c:188:5
 1e09a0e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e09a12:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e09a16:    a0 68             	r0 = b[r4 + 10] (u)			  ## utils.c:188:5
 1e09a18:    91 68             	r1 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e09a1a:    82 68             	r2 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e09a1c:    73 68             	r3 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e09a1e:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e09a22:    95 02             	r5 = [sp+36]			  ## utils.c:188:5
 1e09a24:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e09a28:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e09a2c:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e09a2e:    00 a0             	r0 = sp + 0			  ## utils.c:188:5
 1e09a30:    05 17             	call -502 <update_connectiong_mac_addr : 1e0983c >			  ## btstack_main.c:245:13
 1e09a32:    75 e0 d5 30       	if (r5 < 7) goto 426 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## btstack_main.c:245:13
 1e09a36:    60 68             	r0 = b[r4 + 6] (u)			  ## btstack_main.c:247:21
 1e09a38:    47 20             	if (r0 == 0) goto 142 <.GJTIE584_0_0_+0xFA : 1e09ac8 >			  ## btstack_main.c:247:21
 1e09a3a:    20 e0 45 00       	if (r0 == 2) goto 138 <.GJTIE584_0_0_+0xFA : 1e09ac8 >
 1e09a3e:    10 e0 cf 10       	if (r0 != 1) goto 414 <.GJTIE584_0_0_+0x212 : 1e09be0 >
 1e09a42:    05 a0             	r5 = sp + 0
 1e09a44:    11 70             	r1 = 1			  ## btstack_main.c:249:21
 1e09a46:    50 08             	r0 = r5			  ## btstack_main.c:249:21
 1e09a48:    49 17             	call -366 <free_conn_for_addr : 1e098dc >			  ## btstack_main.c:249:21
 1e09a4a:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:253:105
 1e09a4c:    c2 18             	goto 388 <.GJTIE584_0_0_+0x204 : 1e09bd2 >			  ## btstack_main.c:253:105
 1e09a4e:    d0 e6 c7 10       	if (r0 != 109) goto 398 <.GJTIE584_0_0_+0x212 : 1e09be0 >
 1e09a52:    90 68             	r0 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e09a54:    81 68             	r1 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e09a56:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e09a5a:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e09a5e:    70 68             	r0 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e09a60:    61 68             	r1 = b[r4 + 6] (u)			  ## utils.c:188:5
 1e09a62:    52 68             	r2 = b[r4 + 5] (u)			  ## utils.c:188:5
 1e09a64:    43 68             	r3 = b[r4 + 4] (u)			  ## utils.c:188:5
 1e09a66:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e09a6a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e09a6e:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e09a72:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e09a74:    30 68             	r0 = b[r4 + 3] (u)			  ## btstack_main.c:285:18
 1e09a76:    10 e0 b3 10       	if (r0 != 1) goto 358 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## btstack_main.c:285:18
 1e09a7a:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:290:101
 1e09a7c:    00 a0             	r0 = sp + 0			  ## btstack_main.c:290:101
 1e09a7e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:290:21
 1e09a84:    d2 76             	r2 = 109			  ## btstack_main.c:290:21
 1e09a86:    aa 18             	goto 340 <.GJTIE584_0_0_+0x20E : 1e09bdc >			  ## btstack_main.c:290:21
 1e09a88:    00 70             	r0 = 0			  ## btstack_main.c:336:13
 1e09a8a:    81 70             	r1 = 8			  ## btstack_main.c:336:13
 1e09a8c:    02 18             	goto 4 <.GJTIE584_0_0_+0xC4 : 1e09a92 >			  ## btstack_main.c:336:13
 1e09a8e:    20 98             	r0 = r4 + 2			  ## btstack_main.c:331:39
 1e09a90:    51 70             	r1 = 5			  ## btstack_main.c:331:13
 1e09a92:    02 70             	r2 = 0
 1e09a94:    bf f3 b7 ed       	call -9362 <update_bt_current_status : 1e07606 >
 1e09a98:    a3 18             	goto 326 <.GJTIE584_0_0_+0x212 : 1e09be0 >
 1e09a9a:    20 68             	r0 = b[r4 + 2] (u)			  ## btstack_main.c:297:17
 1e09a9c:    42 20             	if (r0 == 0) goto 132 <.GJTIE584_0_0_+0x154 : 1e09b22 >			  ## btstack_main.c:297:17
 1e09a9e:    bf f3 75 ec       	call -10006 <set_remote_test_flag : 1e0738c >			  ## btstack_main.c:298:17
 1e09aa2:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:300:97
 1e09aa4:    02 68             	r2 = b[r4 + 0] (u)			  ## btstack_main.c:300:17
 1e09aa6:    00 a0             	r0 = sp + 0			  ## btstack_main.c:300:17
 1e09aa8:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:300:17
 1e09aae:    96 18             	goto 300 <.GJTIE584_0_0_+0x20E : 1e09bdc >			  ## btstack_main.c:300:17
 1e09ab0:    10 e0 41 10       	if (r0 != 1) goto 130 <.GJTIE584_0_0_+0x168 : 1e09b36 >			  ## btstack_main.c:199:21
 1e09ab4:    40 68             	r0 = b[r4 + 4] (u)			  ## btstack_main.c:201:62
 1e09ab6:    37 68             	r7 = b[r4 + 3] (u)			  ## btstack_main.c:201:62
 1e09ab8:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## btstack_main.c:201:62
 1e09abc:    00 a0             	r0 = sp + 0			  ## btstack_main.c:201:62
 1e09abe:    bf f3 73 ed       	call -9498 <get_conn_for_addr : 1e075a8 >			  ## avctp_user.c:267:12
 1e09ac2:    41 20             	if (r0 == 0) goto 130 <.GJTIE584_0_0_+0x178 : 1e09b46 >
 1e09ac4:    3f 50             	h[r0 + 6] = r7			  ## avctp_user.c:270:34
 1e09ac6:    81 18             	goto 258 <.GJTIE584_0_0_+0x1FC : 1e09bca >			  ## avctp_user.c:270:34
 1e09ac8:    40 6d             	r0 = b[r6 + 20] (u)			  ## bt_audio.c:148:30
 1e09aca:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:148:30
 1e09acc:    22 6d             	r2 = b[r6 + 18] (u)			  ## bt_audio.c:148:30
 1e09ace:    13 6d             	r3 = b[r6 + 17] (u)			  ## bt_audio.c:148:30
 1e09ad0:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:148:30
 1e09ad4:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:148:30
 1e09ad8:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## bt_audio.c:148:30
 1e09adc:    0e f3 80 30       	if ((r3 & 16384) == 0) goto 256 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## bt_audio.c:148:30
 1e09ae0:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:156:5
 1e09ae6:    00 70             	r0 = 0			  ## bt_audio.c:156:5
 1e09ae8:    92 71             	r2 = 25			  ## bt_audio.c:156:5
 1e09aea:    f3 7f             	r3 = 255			  ## bt_audio.c:156:5
 1e09aec:    bf f3 72 ed       	call -9500 <bt_event_update_to_user : 1e075d4 >			  ## bt_audio.c:156:5
 1e09af0:    40 6d             	r0 = b[r6 + 20] (u)			  ## bt_audio.c:157:46
 1e09af2:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:157:46
 1e09af4:    22 6d             	r2 = b[r6 + 18] (u)			  ## bt_audio.c:157:46
 1e09af6:    13 6d             	r3 = b[r6 + 17] (u)			  ## bt_audio.c:157:46
 1e09af8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:157:46
 1e09afc:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:157:46
 1e09b00:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## bt_audio.c:157:46
 1e09b04:    30 fd 40 3a       	r0 = r3 & 4294950911			  ## bt_audio.c:157:46
 1e09b08:    18 6d             	b[r6 + 17] = r0			  ## bt_audio.c:157:46
 1e09b0a:    01 d6             	r1 = r0 >> 24			  ## bt_audio.c:157:46
 1e09b0c:    49 6d             	b[r6 + 20] = r1			  ## bt_audio.c:157:46
 1e09b0e:    01 d4             	r1 = r0 >> 16			  ## bt_audio.c:157:46
 1e09b10:    39 6d             	b[r6 + 19] = r1			  ## bt_audio.c:157:46
 1e09b12:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:157:46
 1e09b14:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:157:46
 1e09b16:    90 9d             	r0 = r6 + 25			  ## bt_audio.c:157:46
 1e09b18:    01 70             	r1 = 0			  ## bt_audio.c:158:5
 1e09b1a:    62 70             	r2 = 6			  ## bt_audio.c:158:5
 1e09b1c:    97 f3 e8 e9       	call 3134416 <memset : 106ef0 >			  ## bt_audio.c:158:5
 1e09b20:    5f 18             	goto 190 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## bt_audio.c:158:5
 1e09b22:    bf f3 53 ec       	call -10074 <get_remote_test_flag : 1e073cc >			  ## btstack_main.c:311:24
 1e09b26:    5c 20             	if (r0 == 0) goto 184 <.GJTIE584_0_0_+0x212 : 1e09be0 >
 1e09b28:    00 a0             	r0 = sp + 0
 1e09b2a:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:312:17
 1e09b30:    e2 7f             	r2 = 254			  ## btstack_main.c:312:17
 1e09b32:    03 70             	r3 = 0			  ## btstack_main.c:312:17
 1e09b34:    53 18             	goto 166 <.GJTIE584_0_0_+0x20E : 1e09bdc >			  ## btstack_main.c:312:17
 1e09b36:    90 b0             	r0 |= 2			  ## btstack_main.c:211:58
 1e09b38:    20 e0 52 10       	if (r0 != 2) goto 164 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## btstack_main.c:211:58
 1e09b3c:    02 a0             	r2 = sp + 0
 1e09b3e:    20 70             	r0 = 2			  ## btstack_main.c:213:21
 1e09b40:    e1 71             	r1 = 30			  ## btstack_main.c:213:21
 1e09b42:    89 16             	call -750 <aec_sco_connection_start : 1e09856 >			  ## btstack_main.c:213:21
 1e09b44:    4d 18             	goto 154 <.GJTIE584_0_0_+0x212 : 1e09be0 >			  ## btstack_main.c:213:21
 1e09b46:    c0 ff c0 1a 00 00 	r0 = 6848 <__user_info : 1ac0 >
 1e09b4c:    05 fc 70 00       	r5 = r0 + 112
 1e09b50:    31 4a             	r1 = [r5 + 12]			  ## avctp_user.c:274:20
 1e09b52:    1d f3 06 10       	if ((r1 & 536870912) == 0) goto 12 <.GJTIE584_0_0_+0x194 : 1e09b62 >			  ## avctp_user.c:274:20
 1e09b56:    85 81             	r5 += 24			  ## avctp_user.c:273:5
 1e09b58:    01 fc 88 00       	r1 = r0 + 136			  ## avctp_user.c:273:5
 1e09b5c:    15 f2 f8 3f       	if (r5 < r1) goto -16 <.GJTIE584_0_0_+0x182 : 1e09b50 >			  ## avctp_user.c:273:5
 1e09b60:    34 18             	goto 104 <.GJTIE584_0_0_+0x1FC : 1e09bca >			  ## avctp_user.c:273:5
 1e09b62:    02 6b             	r2 = b[r5 + 16] (u)			  ## avctp_user.c:274:20
 1e09b64:    0a 6b             	b[r5 + 16] = r2			  ## avctp_user.c:275:26
 1e09b66:    91 be             	r1 |= 536870912			  ## avctp_user.c:275:26
 1e09b68:    39 4a             	[r5 + 12] = r1			  ## avctp_user.c:275:26
 1e09b6a:    01 f7 fa 00       	r1 = h[r0 + 250] (u)			  ## avctp_user.c:276:41
 1e09b6e:    32 fd 07 19       	r2 = r1 & 4294967288			  ## avctp_user.c:276:41
 1e09b72:    11 80             	r1 += 1			  ## avctp_user.c:276:41
 1e09b74:    21 fd 07 19       	r1 = r1 & 7			  ## avctp_user.c:276:41
 1e09b78:    51 b4             	r1 |= r2			  ## avctp_user.c:276:41
 1e09b7a:    11 f7 fa 00       	h[r0 + 250] = r1			  ## avctp_user.c:276:41
 1e09b7e:    08 f6 0c 50       	r8 = [r5 + 12]			  ## avctp_user.c:277:30
 1e09b82:    09 f9 10 50       	r9 = b[r5 + 16] (u)			  ## avctp_user.c:277:30
 1e09b86:    01 a0             	r1 = sp + 0			  ## avctp_user.c:277:30
 1e09b88:    62 70             	r2 = 6			  ## avctp_user.c:280:13
 1e09b8a:    50 08             	r0 = r5			  ## avctp_user.c:280:13
 1e09b8c:    97 f3 aa e9       	call 3134292 <memcpy : 106ee4 >			  ## avctp_user.c:280:13
 1e09b90:    00 70             	r0 = 0			  ## avctp_user.c:280:13
 1e09b92:    a8 6a             	b[r5 + 10] = r0			  ## avctp_user.c:281:46
 1e09b94:    3f 5a             	h[r5 + 6] = r7			  ## avctp_user.c:282:38
 1e09b96:    20 fd 87 99       	r0 = r9 & 135			  ## avctp_user.c:285:29
 1e09b9a:    08 6b             	b[r5 + 16] = r0			  ## avctp_user.c:285:29
 1e09b9c:    c0 ff f0 0f f0 ff 	r0 = 4293922800 <bank_code_load_addr+0xE65CC : 1f00ff0 >			  ## avctp_user.c:285:29
 1e09ba2:    e2 fd 80 00       	r0 = r0 & r8			  ## avctp_user.c:285:29
 1e09ba6:    00 fd 05 09       	r0 = r0 | 5			  ## avctp_user.c:285:29
 1e09baa:    38 4a             	[r5 + 12] = r0			  ## avctp_user.c:285:29
 1e09bac:    40 6d             	r0 = b[r6 + 20] (u)			  ## avctp_user.c:286:53
 1e09bae:    21 6d             	r1 = b[r6 + 18] (u)			  ## avctp_user.c:286:53
 1e09bb0:    12 6d             	r2 = b[r6 + 17] (u)			  ## avctp_user.c:286:53
 1e09bb2:    33 6d             	r3 = b[r6 + 19] (u)			  ## avctp_user.c:286:53
 1e09bb4:    48 6d             	b[r6 + 20] = r0			  ## avctp_user.c:286:53
 1e09bb6:    29 6d             	b[r6 + 18] = r1			  ## avctp_user.c:286:53
 1e09bb8:    1a 6d             	b[r6 + 17] = r2			  ## avctp_user.c:286:53
 1e09bba:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## avctp_user.c:286:53
 1e09bbe:    d0 fd 80 23       	r2 <= insert(r3, p:16, l:16)			  ## avctp_user.c:286:53
 1e09bc2:    00 fd 20 2b       	r0 = r2 | 2097152			  ## avctp_user.c:286:53
 1e09bc6:    00 d4             	r0 = r0 >> 16			  ## avctp_user.c:286:53
 1e09bc8:    38 6d             	b[r6 + 19] = r0			  ## avctp_user.c:286:53
 1e09bca:    05 a0             	r5 = sp + 0
 1e09bcc:    50 08             	r0 = r5			  ## btstack_main.c:204:21
 1e09bce:    36 16             	call -916 <update_connectiong_mac_addr : 1e0983c >			  ## btstack_main.c:204:21
 1e09bd0:    23 68             	r3 = b[r4 + 2] (u)
 1e09bd2:    02 68             	r2 = b[r4 + 0] (u)
 1e09bd4:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e09bda:    50 08             	r0 = r5
 1e09bdc:    bf f3 fa ec       	call -9740 <bt_event_update_to_user : 1e075d4 >
 1e09be0:    04 0a             	sp += 8
 1e09be2:    59 01             	{pc, r9-r4} = [sp++]			  ## btstack_main.c:344:1


att_send_set_mtu_size:
 1e09be4:    77 01             	[--sp] = {rets, r7-r4}			  ## att_send.c:526:0
 1e09be6:    c5 ff c8 1b 00 00 	r5 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:526:0
 1e09bec:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:527:5
 1e09bee:    14 08             	r4 = r1			  ## att_send.c:527:5
 1e09bf0:    1f 24             	if (r2 == 0) goto 62 <att_send_set_mtu_size+0x4C : 1e09c30 >
 1e09bf2:    22 fc b0 00       	r2 = r2 + 176			  ## att_send.c:110:28
 1e09bf6:    01 70             	r1 = 0			  ## att_send.c:110:28
 1e09bf8:    06 70             	r6 = 0			  ## att_send.c:110:28
 1e09bfa:    03 70             	r3 = 0			  ## att_send.c:110:28
 1e09bfc:    07 f8 00 26       	r7 = h[r2+r6] (u)			  ## att_send.c:110:28
 1e09c00:    07 f2 06 00       	if (r7 == r0) goto 12 <att_send_set_mtu_size+0x2C : 1e09c10 >			  ## att_send.c:110:13
 1e09c04:    11 80             	r1 += 1			  ## att_send.c:109:23
 1e09c06:    13 80             	r3 += 1			  ## att_send.c:109:43
 1e09c08:    26 80             	r6 += 2			  ## att_send.c:109:23
 1e09c0a:    a3 e0 f7 bf       	ifs (r3 < 10) goto -18 <att_send_set_mtu_size+0x18 : 1e09bfc >			  ## att_send.c:109:23
 1e09c0e:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:546:1
 1e09c10:    40 04             	r0 = r1.b0 (u)			  ## att_send.c:532:19
 1e09c12:    a0 e0 0d 80       	if (r0 > 10) goto 26 <att_send_set_mtu_size+0x4C : 1e09c30 >
 1e09c16:    97 f3 c1 e8       	call 3133826 <local_irq_disable : 106d9c >			  ## att_send.c:536:5
 1e09c1a:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:538:20
 1e09c1c:    01 f7 d8 00       	r1 = h[r0 + 216] (u)			  ## att_send.c:538:28
 1e09c20:    60 09             	r0 += r6			  ## att_send.c:538:28
 1e09c22:    41 f2 01 80       	if (r1 > r4) goto 2 <att_send_set_mtu_size+0x44 : 1e09c28 >			  ## att_send.c:538:28
 1e09c26:    14 08             	r4 = r1			  ## att_send.c:540:5
 1e09c28:    14 f7 c4 00       	h[r0 + 196] = r4
 1e09c2c:    97 f3 b4 e8       	call 3133800 <local_irq_enable : 106d98 >			  ## att_send.c:544:5
 1e09c30:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:546:1


l2cap_request_can_send_fix_channel_now_event:
 1e09c32:    c0 ff a8 1a 00 00 	r0 = 6824 <l2cap_fixed_channels : 1aa8 >			  ## l2cap.c:2126:0
 1e09c38:    11 70             	r1 = 1			  ## l2cap.c:2133:58
 1e09c3a:    49 60             	b[r0 + 4] = r1			  ## l2cap.c:2133:58
 1e09c3c:    81 1d             	goto -1278 <l2cap_notify_channel_can_send : 1e09740 >			  ## l2cap.c:2134:5


l2cap_can_send_fixed_channel_packet_now:
 1e09c3e:    ff f3 e0 f0       	goto -7744 <hci_can_send_acl_packet_now : 1e07e02 >			  ## l2cap.c:2138:0


l2cap_reserve_packet_buffer:
 1e09c42:    ff f3 ef f0       	goto -7714 <hci_reserve_packet_buffer : 1e07e24 >			  ## l2cap.c:2054:0


little_endian_store_16:
 1e09c46:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:82:0
 1e09c4a:    12 d2             	r2 = r2 >> 8			  ## utils.c:84:21
 1e09c4c:    11 80             	r1 += 1			  ## utils.c:83:15
 1e09c4e:    61 04             	r1 = r1.l (u)			  ## utils.c:84:5
 1e09c50:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:84:19
 1e09c54:    20 00             	rts			  ## utils.c:85:1


l2cap_send_prepared_connectionless:
 1e09c56:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:2077:0
 1e09c58:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## l2cap.c:2077:0
 1e09c5e:    02 f9 15 72       	r2 = b[r7 + 533] (u)			  ## hci_vendor.c:1881:25
 1e09c62:    14 08             	r4 = r1			  ## hci_vendor.c:1881:25
 1e09c64:    05 08             	r5 = r0			  ## hci_vendor.c:1881:25
 1e09c66:    76 75             	r6 = 87			  ## hci_vendor.c:1881:25
 1e09c68:    17 24             	if (r2 == 0) goto 46 <l2cap_send_prepared_connectionless+0x42 : 1e09c98 >			  ## hci_vendor.c:1881:25
 1e09c6a:    bf f3 c1 f0       	call -7806 <hci_number_free_acl_slots_for_handle : 1e07df0 >			  ## hci_vendor.c:2042:12
 1e09c6e:    10 e0 13 b0       	ifs (r0 < 1) goto 38 <l2cap_send_prepared_connectionless+0x42 : 1e09c98 >			  ## hci_vendor.c:2042:12
 1e09c72:    80 9e             	r0 = r7 + 8			  ## l2cap.c:2066:5
 1e09c74:    01 70             	r1 = 0			  ## l2cap.c:2066:5
 1e09c76:    03 70             	r3 = 0			  ## l2cap.c:2066:5
 1e09c78:    52 08             	r2 = r5			  ## l2cap.c:2066:5
 1e09c7a:    e5 17             	call -54 <little_endian_store_16 : 1e09c46 >			  ## l2cap.c:2066:5
 1e09c7c:    41 98             	r1 = r4 + 4			  ## l2cap.c:2068:48
 1e09c7e:    62 04             	r2 = r1.l (u)			  ## l2cap.c:2068:5
 1e09c80:    21 70             	r1 = 2			  ## l2cap.c:2068:5
 1e09c82:    e1 17             	call -62 <little_endian_store_16 : 1e09c46 >			  ## l2cap.c:2068:5
 1e09c84:    41 70             	r1 = 4			  ## l2cap.c:2070:5
 1e09c86:    45 70             	r5 = 4			  ## l2cap.c:2070:5
 1e09c88:    42 08             	r2 = r4			  ## l2cap.c:2070:5
 1e09c8a:    dd 17             	call -70 <little_endian_store_16 : 1e09c46 >			  ## l2cap.c:2070:5
 1e09c8c:    ed 6e             	b[r7 + 14] = r5			  ## utils.c:83:19
 1e09c8e:    fb 6e             	b[r7 + 15] = r3			  ## utils.c:84:19
 1e09c90:    80 98             	r0 = r4 + 8			  ## l2cap.c:2095:58
 1e09c92:    bf f3 26 f1       	call -7604 <hci_le_send_acl_packet_buffer : 1e07ee2 >			  ## l2cap.c:2095:12
 1e09c96:    06 08             	r6 = r0			  ## l2cap.c:2095:12
 1e09c98:    60 08             	r0 = r6			  ## l2cap.c:2096:1
 1e09c9a:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap.c:2096:1


btstack_set_timer:
 1e09c9c:    74 01             	[--sp] = {rets, r4}			  ## btstack_sys_timer.c:106:0
 1e09c9e:    04 08             	r4 = r0			  ## btstack_sys_timer.c:106:0
 1e09ca0:    22 48             	r2 = [r4 + 8]			  ## btstack_sys_timer.c:142:41
 1e09ca2:    20 fd 0f 19       	r0 = r1 & 15			  ## btstack_sys_timer.c:71:9
 1e09ca6:    31 fd 0f 2b       	r1 = r2 & 4293984255			  ## btstack_sys_timer.c:143:20
 1e09caa:    c4 fd 80 10       	r1 <= insert(r0, p:16, l:4)			  ## btstack_sys_timer.c:143:20
 1e09cae:    29 48             	[r4 + 8] = r1			  ## btstack_sys_timer.c:143:20
 1e09cb0:    a2 04             	r2 = r2.l (u)			  ## btstack_sys_timer.c:144:55
 1e09cb2:    30 e0 06 00       	if (r0 == 3) goto 12 <btstack_set_timer+0x26 : 1e09cc2 >			  ## btstack_sys_timer.c:71:9
 1e09cb6:    20 e0 09 00       	if (r0 == 2) goto 18 <btstack_set_timer+0x30 : 1e09ccc >
 1e09cba:    10 e0 06 10       	if (r0 != 1) goto 12 <btstack_set_timer+0x2E : 1e09cca >
 1e09cbe:    a2 70             	r2 = 10
 1e09cc0:    05 18             	goto 10 <btstack_set_timer+0x30 : 1e09ccc >
 1e09cc2:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## btstack_sys_timer.c:77:25
 1e09cc6:    12 0e             	r2 = r2 * r0			  ## btstack_sys_timer.c:77:25
 1e09cc8:    01 18             	goto 2 <btstack_set_timer+0x30 : 1e09ccc >
 1e09cca:    02 70             	r2 = 0
 1e09ccc:    31 48             	r1 = [r4 + 12]			  ## btstack_sys_timer.c:145:59
 1e09cce:    40 08             	r0 = r4			  ## btstack_sys_timer.c:145:19
 1e09cd0:    80 f3 a1 0b       	call 5954 <sys_timer_add : 1e0b416 >			  ## btstack_sys_timer.c:145:19
 1e09cd4:    18 48             	[r4 + 4] = r0			  ## btstack_sys_timer.c:145:17
 1e09cd6:    54 01             	{pc, r4} = [sp++]			  ## btstack_sys_timer.c:148:1


btstack_memory_gatt_client_get:
 1e09cd8:    c0 ff 94 1a 00 00 	r0 = 6804 <le_stack_pool : 1a94 >			  ## btstack_memory.c:244:0
 1e09cde:    01 40             	r1 = [r0 + 0]			  ## btstack_memory.c:245:38
 1e09ce0:    10 42             	r0 = [r1 + 4]			  ## btstack_memory.c:66:23
 1e09ce2:    03 20             	if (r0 == 0) goto 6 <btstack_memory_gatt_client_get+0x12 : 1e09cea >
 1e09ce4:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e09ce6:    1a 42             	[r1 + 4] = r2			  ## btstack_memory.c:72:23
 1e09ce8:    20 00             	rts			  ## btstack_memory.c:245:5
 1e09cea:    00 70             	r0 = 0
 1e09cec:    20 00             	rts			  ## btstack_memory.c:245:5


l2cap_max_le_mtu:
 1e09cee:    c0 ff 88 09 00 00 	r0 = 2440 <le_att_mtu_size : 988 >			  ## l2cap.c:934:0
 1e09cf4:    01 60             	r1 = b[r0 + 0] (u)			  ## l2cap.c:934:0
 1e09cf6:    80 7c             	r0 = 200			  ## l2cap.c:934:0
 1e09cf8:    02 32             	if (r1 != 0) goto 4 <l2cap_max_le_mtu+0x10 : 1e09cfe >			  ## l2cap.c:934:0
 1e09cfa:    00 fb 05 02       	r0 = 517 <BTCTLER_CONTROLLER_BSS_SIZE+0x45 : 205 >			  ## l2cap.c:934:0
 1e09cfe:    20 00             	rts			  ## l2cap.c:936:5


reverse_128:
 1e09d00:    f2 70             	r2 = 15			  ## utils.c:144:0
 1e09d02:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e09d06:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e09d0a:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e09d0c:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_128+0x2 : 1e09d02 >			  ## utils.c:123:5
 1e09d10:    20 00             	rts			  ## utils.c:146:1


att_operation_cmd_send:
 1e09d12:    79 01             	[--sp] = {rets, r9-r4}			  ## att_send.c:354:0
 1e09d14:    c8 ff c8 1b 00 00 	r8 = 7112 <att_s_hdl : 1bc8 >			  ## att_send.c:354:0
 1e09d1a:    04 f6 00 80       	r4 = [r8 + 0]			  ## att_send.c:354:0
 1e09d1e:    09 f5 1c 00       	r9 = [sp+28]			  ## att_send.c:354:0
 1e09d22:    47 fc b0 00       	r7 = r4 + 176			  ## att_send.c:109:5
 1e09d26:    04 70             	r4 = 0			  ## att_send.c:109:5
 1e09d28:    06 70             	r6 = 0			  ## att_send.c:109:5
 1e09d2a:    85 f7 02 70       	r5 = h[r7 ++= 2] (u)			  ## att_send.c:110:28
 1e09d2e:    05 f2 07 00       	if (r5 == r0) goto 14 <att_operation_cmd_send+0x2E : 1e09d40 >			  ## att_send.c:110:13
 1e09d32:    16 80             	r6 += 1			  ## att_send.c:109:43
 1e09d34:    14 80             	r4 += 1			  ## att_send.c:109:23
 1e09d36:    a6 e0 f8 bf       	ifs (r6 < 10) goto -16 <att_operation_cmd_send+0x18 : 1e09d2a >			  ## att_send.c:109:23
 1e09d3a:    07 70             	r7 = 0
 1e09d3c:    04 70             	r4 = 0
 1e09d3e:    3a 18             	goto 116 <.GJTIE632_0_0_+0x5C : 1e09db4 >
 1e09d40:    05 05             	r5 = r4.b0 (u)			  ## att_send.c:358:43
 1e09d42:    07 70             	r7 = 0			  ## att_send.c:358:43
 1e09d44:    04 70             	r4 = 0			  ## att_send.c:358:43
 1e09d46:    a5 e0 35 80       	if (r5 > 10) goto 106 <.GJTIE632_0_0_+0x5C : 1e09db4 >			  ## att_send.c:358:43
 1e09d4a:    f1 8f             	r1 += -1			  ## att_send.c:366:5
 1e09d4c:    51 e0 0a 80       	if (r1 > 5) goto 20 <.GJTIE632_0_0_+0xC : 1e09d64 >			  ## att_send.c:366:5
 1e09d50:    a1 00             	tbb [r1]


.GJTIS632_0_0_:
 1e09d52:    03     < 3 : 0x3 >
 1e09d53:    0a     < 10 : 0xA >
 1e09d54:    10     < 16 : 0x10 >
 1e09d55:    14     < 20 : 0x14 >
 1e09d56:    18     < 24 : 0x18 >
 1e09d57:    1d     < 29 : 0x1D >
 1e09d58:    21 08             	r1 = r2			  ## att_send.c:368:19
 1e09d5a:    32 08             	r2 = r3			  ## att_send.c:368:19
 1e09d5c:    93 08             	r3 = r9			  ## att_send.c:368:19
 1e09d5e:    80 f3 0a 03       	call 1556 <att_server_notify : 1e0a376 >			  ## att_send.c:368:19
 1e09d62:    18 18             	goto 48 <.GJTIE632_0_0_+0x3C : 1e09d94 >
 1e09d64:    27 18             	goto 78 <.GJTIE632_0_0_+0x5C : 1e09db4 >
 1e09d66:    21 08             	r1 = r2			  ## att_send.c:372:19
 1e09d68:    32 08             	r2 = r3			  ## att_send.c:372:19
 1e09d6a:    93 08             	r3 = r9			  ## att_send.c:372:19
 1e09d6c:    80 f3 2f 03       	call 1630 <att_server_indicate : 1e0a3ce >			  ## att_send.c:372:19
 1e09d70:    11 18             	goto 34 <.GJTIE632_0_0_+0x3C : 1e09d94 >
 1e09d72:    21 08             	r1 = r2			  ## att_send.c:384:19
 1e09d74:    80 f3 25 09       	call 4682 <gatt_client_read_value_of_characteristic_using_value_handle : 1e0afc2 >			  ## att_send.c:384:19
 1e09d78:    0d 18             	goto 26 <.GJTIE632_0_0_+0x3C : 1e09d94 >
 1e09d7a:    21 08             	r1 = r2			  ## att_send.c:388:19
 1e09d7c:    80 f3 36 09       	call 4716 <gatt_client_read_long_value_of_characteristic_using_value_handle : 1e0afec >			  ## att_send.c:388:19
 1e09d80:    09 18             	goto 18 <.GJTIE632_0_0_+0x3C : 1e09d94 >
 1e09d82:    21 08             	r1 = r2			  ## att_send.c:380:19
 1e09d84:    92 08             	r2 = r9			  ## att_send.c:380:19
 1e09d86:    80 f3 04 09       	call 4616 <gatt_client_write_value_of_characteristic : 1e0af92 >			  ## att_send.c:380:19
 1e09d8a:    04 18             	goto 8 <.GJTIE632_0_0_+0x3C : 1e09d94 >
 1e09d8c:    21 08             	r1 = r2			  ## att_send.c:376:19
 1e09d8e:    92 08             	r2 = r9			  ## att_send.c:376:19
 1e09d90:    80 f3 f8 05       	call 3056 <gatt_client_write_value_of_characteristic_without_response : 1e0a984 >			  ## att_send.c:376:19
 1e09d94:    01 fc 70 ff       	r1 = r0 + -144			  ## att_send.c:398:5
 1e09d98:    17 70             	r7 = 1			  ## att_send.c:398:5
 1e09d9a:    51 e0 06 80       	if (r1 > 5) goto 12 <.GJTIE632_0_0_+0x52 : 1e09daa >			  ## att_send.c:398:5
 1e09d9e:    12 70             	r2 = 1
 1e09da0:    f8 fd 10 12       	r1 = r2 << r1
 1e09da4:    61 ff 31 19 04 00 	if ((r1 & 49) != 0) goto 8 <.GJTIE632_0_0_+0x5A : 1e09db2 >
 1e09daa:    70 e5 02 00       	if (r0 == 87) goto 4 <.GJTIE632_0_0_+0x5A : 1e09db2 >
 1e09dae:    c5 21             	if (r0 == 0) goto -118 <att_operation_cmd_send+0x28 : 1e09d3a >
 1e09db0:    01 18             	goto 2 <.GJTIE632_0_0_+0x5C : 1e09db4 >
 1e09db2:    74 75             	r4 = 87
 1e09db4:    00 f6 00 80       	r0 = [r8 + 0]
 1e09db8:    17 f9 da 00       	b[r0 + 218] = r7
 1e09dbc:    40 08             	r0 = r4			  ## att_send.c:424:1
 1e09dbe:    59 01             	{pc, r9-r4} = [sp++]			  ## att_send.c:424:1


__ble_thread_loop_handler:
 1e09dc0:    7c 01             	[--sp] = {rets, r12-r4}			  ## btstack_main.c:752:0
 1e09dc2:    e6 0b             	sp += -52			  ## btstack_main.c:752:0
 1e09dc4:    c5 ff 28 1c 00 00 	r5 = 7208 <btstack_global_info : 1c28 >			  ## btstack_main.c:752:0
 1e09dca:    90 4a             	r0 = [r5 + 36]			  ## btstack_main.c:752:0
 1e09dcc:    80 f3 54 15       	call 10920 <cbuf_get_data_size : 1e0c878 >			  ## btstack_main.c:552:12
 1e09dd0:    fc 20             	if (r0 == 0) goto 504 <.GJTIE635_1_1_+0x66 : 1e09fca >			  ## btstack_main.c:552:12
 1e09dd2:    1b 70             	r11 = 1
 1e09dd4:    0a 70             	r10 = 0
 1e09dd6:    c8 ff 8c 09 00 00 	r8 = 2444 <gap_request_connection_parameter_update.le_con_param_update_identifier : 98c >
 1e09ddc:    c9 ff 68 0f 00 00 	r9 = 3944 <config_hci_ll_param.0 : f68 >
 1e09de2:    c4 9a             	r4 = r5 + 12			  ## btstack_main.c:553:9
 1e09de4:    01 a2             	r1 = sp + 32			  ## btstack_main.c:553:9
 1e09de6:    42 70             	r2 = 4			  ## btstack_main.c:553:9
 1e09de8:    40 08             	r0 = r4			  ## btstack_main.c:553:9
 1e09dea:    80 f3 46 15       	call 10892 <cbuf_read : 1e0c87a >			  ## btstack_main.c:553:9
 1e09dee:    80 f5 22 00       	r0 = h[sp+34] (u)			  ## btstack_main.c:554:13
 1e09df2:    05 20             	if (r0 == 0) goto 10 <__ble_thread_loop_handler+0x3E : 1e09dfe >			  ## btstack_main.c:554:13
 1e09df4:    82 c0             	r2 = r0 << 2			  ## btstack_main.c:555:68
 1e09df6:    c1 a0             	r1 = sp + 12			  ## btstack_main.c:555:68
 1e09df8:    40 08             	r0 = r4			  ## btstack_main.c:555:13
 1e09dfa:    80 f3 3e 15       	call 10876 <cbuf_read : 1e0c87a >			  ## btstack_main.c:555:13
 1e09dfe:    80 f5 20 00       	r0 = h[sp+32] (u)
 1e09e02:    01 fc ff ff       	r1 = r0 + -1			  ## btstack_main.c:561:9
 1e09e06:    a1 e1 22 80       	if (r1 > 26) goto 68 <.GJTIE635_0_0_+0xA : 1e09e4e >			  ## btstack_main.c:561:9
 1e09e0a:    48 c0             	r0 = r1 << 1
 1e09e0c:    b0 00             	tbh [r0]


.GJTIL635_0_0_:
 1e09e0e:    1b 00     < 27 : 0x1B >
 1e09e10:    32 00     < 50 : 0x32 >
 1e09e12:    40 00     < 64 : 0x40 >
 1e09e14:    46 00     < 70 : 0x46 >
 1e09e16:    4c 00     < 76 : 0x4C >
 1e09e18:    52 00     < 82 : 0x52 >
 1e09e1a:    da 00     < 218 : 0xDA >
 1e09e1c:    56 00     < 86 : 0x56 >
 1e09e1e:    da 00     < 218 : 0xDA >
 1e09e20:    da 00     < 218 : 0xDA >
 1e09e22:    5c 00     < 92 : 0x5C >
 1e09e24:    79 00     < 121 : 0x79 >
 1e09e26:    da 00     < 218 : 0xDA >
 1e09e28:    da 00     < 218 : 0xDA >
 1e09e2a:    7f 00     < 127 : 0x7F >
 1e09e2c:    84 00     < 132 : 0x84 >
 1e09e2e:    87 00     < 135 : 0x87 >
 1e09e30:    96 00     < 150 : 0x96 >
 1e09e32:    9d 00     < 157 : 0x9D >
 1e09e34:    da 00     < 218 : 0xDA >
 1e09e36:    a4 00     < 164 : 0xA4 >
 1e09e38:    b2 00     < 178 : 0xB2 >
 1e09e3a:    b9 00     < 185 : 0xB9 >
 1e09e3c:    da 00     < 218 : 0xDA >
 1e09e3e:    da 00     < 218 : 0xDA >
 1e09e40:    da 00     < 218 : 0xDA >
 1e09e42:    bc 00     < 188 : 0xBC >
 1e09e44:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:563:13
 1e09e48:    80 f3 d6 61       	call 50092 <ll_hci_adv_enable : 1e161f8 >			  ## btstack_main.c:563:13
 1e09e4c:    ba 18             	goto 372 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:563:13
 1e09e4e:    01 ff 82 00 b7 00 	if (r0 != 130) goto 366 <.GJTIE635_1_1_+0x5E : 1e09fc2 >
 1e09e54:    40 02             	r0 = [sp+16]			  ## btstack_main.c:668:68
 1e09e56:    23 50             	r3 = h[r0 + 4] (u)			  ## btstack_main.c:669:17
 1e09e58:    12 50             	r2 = h[r0 + 2] (u)			  ## btstack_main.c:669:17
 1e09e5a:    01 50             	r1 = h[r0 + 0] (u)			  ## btstack_main.c:669:17
 1e09e5c:    34 50             	r4 = h[r0 + 6] (u)			  ## btstack_main.c:669:17
 1e09e5e:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:669:17
 1e09e62:    1b f5 08 00       	[sp+8] = r11			  ## btstack_main.c:669:17
 1e09e66:    1b f5 04 00       	[sp+4] = r11			  ## btstack_main.c:669:17
 1e09e6a:    0c 02             	[sp] = r4			  ## btstack_main.c:669:17
 1e09e6c:    80 f3 a9 61       	call 50002 <ll_hci_connection_update : 1e161c2 >			  ## btstack_main.c:669:17
 1e09e70:    a8 18             	goto 336 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:669:17
 1e09e72:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:527:5
 1e09e76:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:527:5
 1e09e7a:    c1 f5 14 00       	r1 = b[sp+20] (u)			  ## btstack_main.c:527:5
 1e09e7e:    9a f5 28 00       	h[sp+40] = r10			  ## btstack_main.c:526:5
 1e09e82:    1a f5 24 00       	[sp+36] = r10			  ## btstack_main.c:526:5
 1e09e86:    19 02             	[sp+4] = r1			  ## btstack_main.c:527:5
 1e09e88:    41 a2             	r1 = sp + 36			  ## btstack_main.c:527:5
 1e09e8a:    03 70             	r3 = 0			  ## btstack_main.c:527:5
 1e09e8c:    51 18             	goto 162 <.GJTIE635_0_0_+0xEC : 1e09f30 >			  ## btstack_main.c:527:5
 1e09e8e:    41 02             	r1 = [sp+16]			  ## btstack_main.c:575:53
 1e09e90:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:575:13
 1e09e94:    80 f3 f1 61       	call 50146 <ll_hci_adv_set_data : 1e1627a >			  ## btstack_main.c:575:13
 1e09e98:    94 18             	goto 296 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:575:13
 1e09e9a:    41 02             	r1 = [sp+16]			  ## btstack_main.c:579:67
 1e09e9c:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:579:13
 1e09ea0:    80 f3 16 62       	call 50220 <ll_hci_adv_scan_response_set_data : 1e162d0 >			  ## btstack_main.c:579:13
 1e09ea4:    8e 18             	goto 284 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:579:13
 1e09ea6:    30 02             	r0 = [sp+12]			  ## btstack_main.c:622:21
 1e09ea8:    8c 20             	if (r0 == 0) goto 280 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:622:21
 1e09eaa:    20 04             	r0 = r0.l (u)			  ## btstack_main.c:623:21
 1e09eac:    80 f3 c6 62       	call 50572 <ll_hci_disconnect : 1e1643c >			  ## btstack_main.c:623:21
 1e09eb0:    88 18             	goto 272 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:623:21
 1e09eb2:    30 02             	r0 = [sp+12]			  ## btstack_main.c:605:63
 1e09eb4:    10 f6 b0 50       	[r5 + 176] = r0			  ## btstack_main.c:605:53
 1e09eb8:    84 18             	goto 264 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:605:53
 1e09eba:    bf f3 da e7       	call -12364 <att_get_default_conn_handle : 1e06e72 >			  ## btstack_main.c:610:39
 1e09ebe:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:610:17
 1e09ec2:    90 16             	call -736 <att_send_set_mtu_size : 1e09be4 >			  ## btstack_main.c:610:17
 1e09ec4:    7e 18             	goto 252 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:610:17
 1e09ec6:    40 02             	r0 = [sp+16]			  ## btstack_main.c:676:68
 1e09ec8:    0c f7 06 00       	r12 = h[r0 + 6] (u)			  ## btstack_main.c:678:94
 1e09ecc:    27 50             	r7 = h[r0 + 4] (u)			  ## btstack_main.c:678:71
 1e09ece:    16 50             	r6 = h[r0 + 2] (u)			  ## btstack_main.c:677:113
 1e09ed0:    04 50             	r4 = h[r0 + 0] (u)			  ## btstack_main.c:677:85
 1e09ed2:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## l2cap.c:2027:39
 1e09ed6:    bf f3 71 e9       	call -11550 <le_hci_connection_for_handle : 1e071bc >			  ## l2cap.c:2027:39
 1e09eda:    73 20             	if (r0 == 0) goto 230 <.GJTIE635_1_1_+0x5E : 1e09fc2 >
 1e09edc:    dc 50             	h[r0 + 26] = r4			  ## l2cap.c:2032:38
 1e09ede:    ee 50             	h[r0 + 28] = r6			  ## l2cap.c:2033:38
 1e09ee0:    ff 50             	h[r0 + 30] = r7			  ## l2cap.c:2034:33
 1e09ee2:    1c f7 20 00       	h[r0 + 32] = r12			  ## l2cap.c:2035:40
 1e09ee6:    1b f6 14 00       	[r0 + 20] = r11			  ## l2cap.c:2036:47
 1e09eea:    01 f9 00 80       	r1 = b[r8 + 0] (u)			  ## l2cap.c:2037:50
 1e09eee:    89 61             	b[r0 + 24] = r1			  ## l2cap.c:2037:48
 1e09ef0:    bf f3 db f0       	call -7754 <l2cap_run : 1e080aa >			  ## l2cap.c:2038:5
 1e09ef4:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## l2cap.c:2040:39
 1e09ef8:    10 80             	r0 += 1			  ## l2cap.c:2040:39
 1e09efa:    10 f9 00 80       	b[r8 + 0] = r0			  ## l2cap.c:2041:40
 1e09efe:    61 18             	goto 194 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## l2cap.c:2041:40
 1e09f00:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:588:17
 1e09f04:    11 70             	r1 = 1			  ## btstack_main.c:588:17
 1e09f06:    80 f3 89 62       	call 50450 <ll_hci_scan_enable : 1e1641c >			  ## btstack_main.c:588:17
 1e09f0a:    5b 18             	goto 182 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:588:17
 1e09f0c:    30 02             	r0 = [sp+12]			  ## btstack_main.c:630:64
 1e09f0e:    61 90             	r1 = r0 + 6			  ## btstack_main.c:632:79
 1e09f10:    80 f3 a3 62       	call 50502 <ll_hci_create_conn : 1e1645a >			  ## btstack_main.c:632:17
 1e09f14:    56 18             	goto 172 <.GJTIE635_1_1_+0x5E : 1e09fc2 >
 1e09f16:    80 f3 fc 62       	call 50680 <ll_hci_create_conn_cancel : 1e16512 >			  ## btstack_main.c:638:17
 1e09f1a:    53 18             	goto 166 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:638:17
 1e09f1c:    61 02             	r1 = [sp+24]			  ## btstack_main.c:571:72
 1e09f1e:    83 f9 01 10       	r3 = b[r1 ++= 1] (u)			  ## btstack_main.c:536:5
 1e09f22:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:536:5
 1e09f26:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:536:5
 1e09f2a:    c4 f5 14 00       	r4 = b[sp+20] (u)			  ## btstack_main.c:536:5
 1e09f2e:    1c 02             	[sp+4] = r4			  ## btstack_main.c:536:5
 1e09f30:    09 02             	[sp] = r1
 1e09f32:    01 08             	r1 = r0
 1e09f34:    80 f3 69 61       	call 49874 <ll_hci_adv_set_params : 1e1620a >
 1e09f38:    44 18             	goto 136 <.GJTIE635_1_1_+0x5E : 1e09fc2 >
 1e09f3a:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:645:17
 1e09f3e:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:645:17
 1e09f42:    80 f3 ee 62       	call 50652 <ll_hci_vendor_send_key_num : 1e16522 >			  ## btstack_main.c:645:17
 1e09f46:    3d 18             	goto 122 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:645:17
 1e09f48:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:650:17
 1e09f4c:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:650:17
 1e09f50:    80 f3 f7 62       	call 50670 <ll_vendor_latency_hold_cnt : 1e16542 >			  ## btstack_main.c:650:17
 1e09f54:    36 18             	goto 108 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:650:17
 1e09f56:    30 02             	r0 = [sp+12]			  ## btstack_main.c:583:37
 1e09f58:    30 e0 33 80       	if (r0 > 3) goto 102 <.GJTIE635_1_1_+0x5E : 1e09fc2 >
 1e09f5c:    41 02             	r1 = [sp+16]			  ## btstack_main.c:583:46
 1e09f5e:    a0 00             	tbb [r0]


.GJTIS635_1_1_:
 1e09f60:    02     < 2 : 0x2 >
 1e09f61:    19     < 25 : 0x19 >
 1e09f62:    21     < 33 : 0x21 >
 1e09f63:    29     < 41 : 0x29 >
 1e09f64:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## btstack_main.c:807:42
 1e09f68:    21 fd 03 19       	r1 = r1 & 3			  ## btstack_main.c:807:42
 1e09f6c:    30 fd 03 09       	r0 = r0 & 4294967292			  ## btstack_main.c:807:42
 1e09f70:    25 18             	goto 74 <.GJTIE635_1_1_+0x58 : 1e09fbc >			  ## btstack_main.c:807:42
 1e09f72:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:594:17
 1e09f76:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:594:17
 1e09f7a:    80 f3 4f 62       	call 50334 <ll_hci_scan_enable : 1e1641c >			  ## btstack_main.c:594:17
 1e09f7e:    21 18             	goto 66 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:594:17
 1e09f80:    80 f3 ec 01       	call 984 <att_server_send_request : 1e0a35c >			  ## btstack_main.c:662:17
 1e09f84:    1e 18             	goto 60 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:662:17
 1e09f86:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:616:17
 1e09f8a:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:616:17
 1e09f8e:    2a 16             	call -940 <att_send_set_mtu_size : 1e09be4 >			  ## btstack_main.c:616:17
 1e09f90:    18 18             	goto 48 <.GJTIE635_1_1_+0x5E : 1e09fc2 >			  ## btstack_main.c:616:17
 1e09f92:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## btstack_main.c:811:43
 1e09f96:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## btstack_main.c:811:43
 1e09f9a:    89 c0             	r1 = r1 << 2			  ## btstack_main.c:811:43
 1e09f9c:    21 fd 0c 19       	r1 = r1 & 12			  ## btstack_main.c:811:43
 1e09fa0:    0d 18             	goto 26 <.GJTIE635_1_1_+0x58 : 1e09fbc >			  ## btstack_main.c:811:43
 1e09fa2:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## btstack_main.c:815:44
 1e09fa6:    30 fd 30 09       	r0 = r0 & 4294967247			  ## btstack_main.c:815:44
 1e09faa:    09 c1             	r1 = r1 << 4			  ## btstack_main.c:815:44
 1e09fac:    21 fd 30 19       	r1 = r1 & 48			  ## btstack_main.c:815:44
 1e09fb0:    05 18             	goto 10 <.GJTIE635_1_1_+0x58 : 1e09fbc >			  ## btstack_main.c:815:44
 1e09fb2:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## btstack_main.c:819:49
 1e09fb6:    89 c1             	r1 = r1 << 6			  ## btstack_main.c:819:49
 1e09fb8:    20 fd 3f 09       	r0 = r0 & 63			  ## btstack_main.c:819:49
 1e09fbc:    50 b2             	r0 |= r1
 1e09fbe:    10 f9 00 90       	b[r9 + 0] = r0
 1e09fc2:    90 4a             	r0 = [r5 + 36]
 1e09fc4:    80 f3 58 14       	call 10416 <cbuf_get_data_size : 1e0c878 >			  ## btstack_main.c:552:12
 1e09fc8:    0c 31             	if (r0 != 0) goto -488 <__ble_thread_loop_handler+0x22 : 1e09de2 >			  ## btstack_main.c:552:12
 1e09fca:    c6 ff c8 1b 00 00 	r6 = 7112 <att_s_hdl : 1bc8 >
 1e09fd0:    04 4c             	r4 = [r6 + 0]			  ## att_send.c:506:5
 1e09fd2:    5f 28             	if (r4 == 0) goto 190 <.GJTIE635_1_1_+0x12E : 1e0a092 >			  ## att_send.c:506:5
 1e09fd4:    00 f9 da 40       	r0 = b[r4 + 218] (u)			  ## att_send.c:509:17
 1e09fd8:    0d 20             	if (r0 == 0) goto 26 <.GJTIE635_1_1_+0x90 : 1e09ff4 >			  ## att_send.c:509:17
 1e09fda:    03 f6 ac 40       	r3 = [r4 + 172]			  ## att_send.c:510:149
 1e09fde:    32 59             	r2 = h[r4 + 38] (u)			  ## att_send.c:510:9
 1e09fe0:    20 59             	r0 = h[r4 + 36] (u)			  ## att_send.c:510:9
 1e09fe2:    41 59             	r1 = h[r4 + 40] (u)			  ## att_send.c:510:93
 1e09fe4:    34 fd f0 1a       	r4 = r1 & 4294905855			  ## att_send.c:510:9
 1e09fe8:    09 d3             	r1 = r1 >> 12			  ## att_send.c:510:93
 1e09fea:    0c 02             	[sp] = r4			  ## att_send.c:510:9
 1e09fec:    92 16             	call -732 <att_operation_cmd_send : 1e09d12 >			  ## att_send.c:510:9
 1e09fee:    04 4c             	r4 = [r6 + 0]
 1e09ff0:    11 70             	r1 = 1
 1e09ff2:    01 18             	goto 2 <.GJTIE635_1_1_+0x92 : 1e09ff6 >
 1e09ff4:    01 70             	r1 = 0
 1e09ff6:    60 48             	r0 = [r4 + 24]
 1e09ff8:    80 f3 3e 14       	call 10364 <cbuf_get_data_size : 1e0c878 >			  ## att_send.c:514:9
 1e09ffc:    2e 20             	if (r0 == 0) goto 92 <.GJTIE635_1_1_+0xF6 : 1e0a05a >			  ## att_send.c:514:9
 1e09ffe:    08 fb ff 0f       	r8 = 4095 <sys_clock_limit+0x4F : fff >
 1e0a002:    00 f9 da 40       	r0 = b[r4 + 218] (u)			  ## att_send.c:473:21
 1e0a006:    2a 30             	if (r0 != 0) goto 84 <.GJTIE635_1_1_+0xF8 : 1e0a05c >			  ## att_send.c:473:21
 1e0a008:    60 48             	r0 = [r4 + 24]
 1e0a00a:    80 f3 35 14       	call 10346 <cbuf_get_data_size : 1e0c878 >			  ## att_send.c:478:18
 1e0a00e:    26 20             	if (r0 == 0) goto 76 <.GJTIE635_1_1_+0xF8 : 1e0a05c >			  ## att_send.c:478:18
 1e0a010:    c1 a2             	r1 = sp + 44
 1e0a012:    62 70             	r2 = 6			  ## att_send.c:482:9
 1e0a014:    40 08             	r0 = r4			  ## att_send.c:482:9
 1e0a016:    80 f3 30 14       	call 10336 <cbuf_read : 1e0c87a >			  ## att_send.c:482:9
 1e0a01a:    87 f5 30 00       	r7 = h[sp+48] (u)			  ## att_send.c:483:23
 1e0a01e:    34 fd f0 7a       	r4 = r7 & 4294905855			  ## att_send.c:483:23
 1e0a022:    87 f0 06 00       	if ((r7 & r8) == 0) goto 12 <.GJTIE635_1_1_+0xCE : 1e0a032 >			  ## att_send.c:483:23
 1e0a026:    00 4c             	r0 = [r6 + 0]			  ## att_send.c:484:24
 1e0a028:    01 f6 ac 00       	r1 = [r0 + 172]			  ## att_send.c:484:56
 1e0a02c:    42 08             	r2 = r4			  ## att_send.c:484:13
 1e0a02e:    80 f3 24 14       	call 10312 <cbuf_read : 1e0c87a >			  ## att_send.c:484:13
 1e0a032:    00 4c             	r0 = [r6 + 0]			  ## att_send.c:487:109
 1e0a034:    03 f6 ac 00       	r3 = [r0 + 172]			  ## att_send.c:487:117
 1e0a038:    82 f5 2e 00       	r2 = h[sp+46] (u)			  ## att_send.c:487:19
 1e0a03c:    80 f5 2c 00       	r0 = h[sp+44] (u)			  ## att_send.c:487:19
 1e0a040:    39 d3             	r1 = r7 >> 12			  ## att_send.c:487:75
 1e0a042:    0c 02             	[sp] = r4			  ## att_send.c:487:19
 1e0a044:    66 16             	call -820 <att_operation_cmd_send : 1e09d12 >			  ## att_send.c:487:19
 1e0a046:    04 4c             	r4 = [r6 + 0]			  ## att_send.c:487:19
 1e0a048:    70 e5 db 1f       	if (r0 != 87) goto -74 <.GJTIE635_1_1_+0x9E : 1e0a002 >
 1e0a04c:    40 fc 24 00       	r0 = r4 + 36			  ## att_send.c:491:29
 1e0a050:    c1 a2             	r1 = sp + 44
 1e0a052:    62 70             	r2 = 6			  ## att_send.c:491:13
 1e0a054:    97 f3 46 e7       	call 3133068 <memcpy : 106ee4 >			  ## att_send.c:491:13
 1e0a058:    01 18             	goto 2 <.GJTIE635_1_1_+0xF8 : 1e0a05c >
 1e0a05a:    1b 22             	if (r1 == 0) goto 54 <.GJTIE635_1_1_+0x12E : 1e0a092 >
 1e0a05c:    1a 28             	if (r4 == 0) goto 52 <.GJTIE635_1_1_+0x12E : 1e0a092 >
 1e0a05e:    40 fc b0 00       	r0 = r4 + 176			  ## att_send.c:120:13
 1e0a062:    01 70             	r1 = 0			  ## att_send.c:120:13
 1e0a064:    82 f7 02 00       	r2 = h[r0 ++= 2] (u)			  ## att_send.c:120:13
 1e0a068:    04 34             	if (r2 != 0) goto 8 <.GJTIE635_1_1_+0x10E : 1e0a072 >			  ## att_send.c:120:13
 1e0a06a:    11 80             	r1 += 1			  ## att_send.c:119:35
 1e0a06c:    91 e0 fa df       	ifs (r1 <= 9) goto -12 <.GJTIE635_1_1_+0x100 : 1e0a064 >
 1e0a070:    10 18             	goto 32 <.GJTIE635_1_1_+0x12E : 1e0a092 >
 1e0a072:    00 f9 b5 50       	r0 = b[r5 + 181] (u)			  ## btstack_main.c:1046:33
 1e0a076:    20 fd 07 09       	r0 = r0 & 7			  ## att_send.c:202:9
 1e0a07a:    20 e0 06 00       	if (r0 == 2) goto 12 <.GJTIE635_1_1_+0x126 : 1e0a08a >			  ## att_send.c:202:9
 1e0a07e:    10 e0 06 00       	if (r0 == 1) goto 12 <.GJTIE635_1_1_+0x12A : 1e0a08e >
 1e0a082:    07 30             	if (r0 != 0) goto 14 <.GJTIE635_1_1_+0x12E : 1e0a092 >
 1e0a084:    80 f3 ec 01       	call 984 <att_server_request_can_send_now_event : 1e0a460 >			  ## att_send.c:205:13
 1e0a088:    04 18             	goto 8 <.GJTIE635_1_1_+0x12E : 1e0a092 >			  ## att_send.c:205:13
 1e0a08a:    80 f3 e9 01       	call 978 <att_server_request_can_send_now_event : 1e0a460 >			  ## att_send.c:213:13
 1e0a08e:    80 f3 c2 07       	call 3972 <gatt_client_request_can_send_now_event : 1e0b016 >
 1e0a092:    00 f6 b0 50       	r0 = [r5 + 176]			  ## btstack_main.c:760:30
 1e0a096:    01 20             	if (r0 == 0) goto 2 <.GJTIE635_1_1_+0x136 : 1e0a09a >			  ## btstack_main.c:760:30
 1e0a098:    80 00             	call r0			  ## btstack_main.c:761:9
 1e0a09a:    00 f9 b4 50       	r0 = b[r5 + 180] (u)			  ## btstack_main.c:764:31
 1e0a09e:    20 fd f0 09       	r0 = r0 & 240			  ## btstack_main.c:764:40
 1e0a0a2:    01 ff a0 00 25 00 	if (r0 != 160) goto 74 <.GJTIE635_1_1_+0x18E : 1e0a0f2 >			  ## btstack_main.c:764:40
 1e0a0a8:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## btstack_linked_list.c:60:12
 1e0a0ae:    00 40             	r0 = [r0 + 0]			  ## btstack_linked_list.c:60:12
 1e0a0b0:    20 30             	if (r0 != 0) goto 64 <.GJTIE635_1_1_+0x18E : 1e0a0f2 >
 1e0a0b2:    c0 ff 04 1c 00 00 	r0 = 7172 <btstack_stack : 1c04 >			  ## btstack_main.c:766:50
 1e0a0b8:    11 40             	r1 = [r0 + 4]			  ## btstack_main.c:766:50
 1e0a0ba:    c4 ff 94 1a 00 00 	r4 = 6804 <le_stack_pool : 1a94 >
 1e0a0c0:    09 48             	[r4 + 0] = r1			  ## btstack_memory.c:438:19
 1e0a0c2:    20 42             	r0 = [r1 + 8]			  ## btstack_memory.c:444:9
 1e0a0c4:    05 20             	if (r0 == 0) goto 10 <.GJTIE635_1_1_+0x16C : 1e0a0d0 >			  ## btstack_memory.c:444:9
 1e0a0c6:    80 f3 70 0c       	call 6368 <free : 1e0b9aa >			  ## btstack_memory.c:445:9
 1e0a0ca:    01 48             	r1 = [r4 + 0]			  ## btstack_memory.c:446:9
 1e0a0cc:    c2 f4 00 19       	[r1 + 8] = 0			  ## btstack_memory.c:446:53
 1e0a0d0:    30 42             	r0 = [r1 + 12]			  ## btstack_memory.c:451:9
 1e0a0d2:    05 20             	if (r0 == 0) goto 10 <.GJTIE635_1_1_+0x17A : 1e0a0de >			  ## btstack_memory.c:451:9
 1e0a0d4:    80 f3 69 0c       	call 6354 <free : 1e0b9aa >			  ## btstack_memory.c:452:9
 1e0a0d8:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:453:9
 1e0a0da:    c3 f4 00 09       	[r0 + 12] = 0			  ## btstack_memory.c:453:47
 1e0a0de:    00 f9 b4 50       	r0 = b[r5 + 180] (u)			  ## btstack_main.c:767:38
 1e0a0e2:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <.GJTIE635_1_1_+0x188 : 1e0a0ec >			  ## btstack_main.c:767:38
 1e0a0e8:    80 f3 2c 60       	call 49240 <ll_hci_destory : 1e16144 >			  ## btstack_main.c:769:17
 1e0a0ec:    00 70             	r0 = 0			  ## btstack_main.c:771:43
 1e0a0ee:    10 f9 b4 50       	b[r5 + 180] = r0			  ## btstack_main.c:771:43
 1e0a0f2:    1a 0a             	sp += 52
 1e0a0f4:    5c 01             	{pc, r12-r4} = [sp++]			  ## btstack_main.c:778:1


reverse_bd_addr:
 1e0a0f6:    52 70             	r2 = 5			  ## utils.c:153:0
 1e0a0f8:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e0a0fc:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e0a100:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e0a102:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_bd_addr+0x2 : 1e0a0f8 >			  ## utils.c:123:5
 1e0a106:    20 00             	rts			  ## utils.c:155:1


l2cap_release_packet_buffer:
 1e0a108:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## l2cap.c:2059:0
 1e0a10e:    01 70             	r1 = 0			  ## hci_vendor.c:1875:45
 1e0a110:    11 f9 15 02       	b[r0 + 533] = r1			  ## hci_vendor.c:1875:45
 1e0a114:    20 00             	rts			  ## l2cap.c:2061:1


btstack_linked_list_empty:
 1e0a116:    01 08             	r1 = r0			  ## btstack_linked_list.c:59:0
 1e0a118:    10 70             	r0 = 1			  ## btstack_linked_list.c:60:18
 1e0a11a:    01 22             	if (r1 == 0) goto 2 <btstack_linked_list_empty+0x8 : 1e0a11e >			  ## btstack_linked_list.c:60:18
 1e0a11c:    00 70             	r0 = 0			  ## btstack_linked_list.c:60:18
 1e0a11e:    20 00             	rts			  ## btstack_linked_list.c:60:5


send_sco_disconn:
 1e0a120:    74 01             	[--sp] = {rets, r4}			  ## bt_audio.c:111:0
 1e0a122:    c4 ff b0 09 00 00 	r4 = 2480 <disable_sco_timer : 9b0 >			  ## bt_audio.c:111:0
 1e0a128:    00 58             	r0 = h[r4 + 0] (u)			  ## bt_audio.c:113:9
 1e0a12a:    04 20             	if (r0 == 0) goto 8 <send_sco_disconn+0x14 : 1e0a134 >
 1e0a12c:    80 f3 d4 08       	call 4520 <sys_timeout_del : 1e0b2d8 >			  ## bt_audio.c:115:9
 1e0a130:    00 70             	r0 = 0			  ## bt_audio.c:116:27
 1e0a132:    08 58             	h[r4 + 0] = r0			  ## bt_audio.c:116:27
 1e0a134:    54 01             	{pc, r4} = [sp++]			  ## bt_audio.c:118:1


a2dp_suspend:
 1e0a136:    00 70             	r0 = 0			  ## a2dp.c:1417:0
 1e0a138:    20 00             	rts			  ## a2dp.c:1422:1


a2dp_resume:
 1e0a13a:    00 70             	r0 = 0			  ## a2dp.c:1424:0
 1e0a13c:    20 00             	rts			  ## a2dp.c:1429:1


a2dp_release:
 1e0a13e:    00 70             	r0 = 0			  ## a2dp.c:1402:0
 1e0a140:    20 00             	rts			  ## a2dp.c:1415:1


__sink_media_close:
 1e0a142:    74 01             	[--sp] = {rets, r4}			  ## a2dp_sink.c:49:0
 1e0a144:    04 08             	r4 = r0			  ## a2dp_sink.c:49:0
 1e0a146:    50 49             	r0 = [r4 + 84]			  ## a2dp_sink.c:52:17
 1e0a148:    06 20             	if (r0 == 0) goto 12 <__sink_media_close+0x14 : 1e0a156 >			  ## a2dp_sink.c:52:17
 1e0a14a:    51 40             	r1 = [r0 + 20]			  ## a2dp_sink.c:60:40
 1e0a14c:    02 22             	if (r1 == 0) goto 4 <__sink_media_close+0x10 : 1e0a152 >			  ## a2dp_sink.c:60:40
 1e0a14e:    40 08             	r0 = r4			  ## a2dp_sink.c:61:9
 1e0a150:    81 00             	call r1			  ## a2dp_sink.c:61:9
 1e0a152:    d5 f4 00 49       	[r4 + 84] = 0			  ## a2dp_sink.c:63:18
 1e0a156:    54 01             	{pc, r4} = [sp++]			  ## a2dp_sink.c:73:1


__sink_channel_open:
 1e0a158:    34 00             	[--sp] = rets			  ## a2dp_sink.c:77:0
 1e0a15a:    01 22             	if (r1 == 0) goto 2 <__sink_channel_open+0x6 : 1e0a15e >			  ## a2dp_sink.c:77:0
 1e0a15c:    f2 17             	call -28 <__sink_media_close : 1e0a142 >			  ## a2dp_sink.c:80:9
 1e0a15e:    00 70             	r0 = 0			  ## a2dp_sink.c:82:5
 1e0a160:    30 00             	pc = [sp++]			  ## a2dp_sink.c:82:5


__sink_event_credits:
 1e0a162:    20 00             	rts			  ## a2dp_sink.c:86:0


__sink_media_packet:
 1e0a164:    78 01             	[--sp] = {rets, r8-r4}			  ## a2dp_sink.c:110:0
 1e0a166:    24 08             	r4 = r2			  ## a2dp_sink.c:110:0
 1e0a168:    15 08             	r5 = r1			  ## a2dp_sink.c:110:0
 1e0a16a:    06 08             	r6 = r0			  ## a2dp_sink.c:110:0
 1e0a16c:    c4 e0 32 30       	if (r4 < 12) goto 100 <__sink_media_packet+0x70 : 1e0a1d4 >			  ## a2dp_sink.c:110:0
 1e0a170:    01 f7 4a 60       	r1 = h[r6 + 74] (u)			  ## a2dp_sink.c:120:32
 1e0a174:    10 70             	r0 = 1			  ## a2dp_sink.c:120:32
 1e0a176:    01 32             	if (r1 != 0) goto 2 <__sink_media_packet+0x16 : 1e0a17a >			  ## a2dp_sink.c:120:32
 1e0a178:    00 70             	r0 = 0			  ## a2dp_sink.c:120:9
 1e0a17a:    11 6a             	r1 = b[r5 + 1] (u)			  ## a2dp_sink.c:118:43
 1e0a17c:    02 6a             	r2 = b[r5 + 0] (u)			  ## a2dp_sink.c:118:43
 1e0a17e:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## a2dp_sink.c:118:43
 1e0a182:    91 c0             	r1 = r2 << 2			  ## a2dp_sink.c:118:46
 1e0a184:    21 fd 3c 19       	r1 = r1 & 60			  ## a2dp_sink.c:118:46
 1e0a188:    c1 80             	r1 += 12			  ## a2dp_sink.c:118:33
 1e0a18a:    11 b0             	r1 |= 1			  ## a2dp_sink.c:118:50
 1e0a18c:    08 b2             	r8 = r1 + r0			  ## a2dp_sink.c:120:9
 1e0a18e:    84 f2 21 30       	if (r4 < r8) goto 66 <__sink_media_packet+0x70 : 1e0a1d4 >
 1e0a192:    50 4d             	r0 = [r6 + 84]			  ## a2dp_sink.c:129:17
 1e0a194:    08 20             	if (r0 == 0) goto 16 <__sink_media_packet+0x42 : 1e0a1a6 >			  ## a2dp_sink.c:129:17
 1e0a196:    32 40             	r2 = [r0 + 12]			  ## a2dp_sink.c:156:19
 1e0a198:    80 fb 80 05       	r0 = r5 + r8			  ## a2dp_sink.c:156:32
 1e0a19c:    90 fb 80 14       	r1 = r4 - r8			  ## a2dp_sink.c:156:47
 1e0a1a0:    61 04             	r1 = r1.l (u)			  ## a2dp_sink.c:156:5
 1e0a1a2:    18 01             	{rets, r8-r4} = [sp++]			  ## a2dp_sink.c:156:5
 1e0a1a4:    92 00             	goto r2			  ## a2dp_sink.c:156:5
 1e0a1a6:    c0 ff 8c 6b e0 01 	r0 = 31484812 <btstack_code_start : 1e06b8c >
 1e0a1ac:    c7 ff 8c 6b e0 01 	r7 = 31484812 <btstack_code_start : 1e06b8c >
 1e0a1b2:    07 f2 0d 20       	if (r7 >= r0) goto 26 <__sink_media_packet+0x6C : 1e0a1d0 >
 1e0a1b6:    01 f9 5d 60       	r1 = b[r6 + 93] (u)			  ## a2dp_sink.c:132:43
 1e0a1ba:    02 4e             	r2 = [r7 + 0]			  ## a2dp_sink.c:36:20
 1e0a1bc:    12 f2 04 00       	if (r2 == r1) goto 8 <__sink_media_packet+0x64 : 1e0a1c8 >			  ## a2dp_sink.c:36:20
 1e0a1c0:    87 81             	r7 += 24			  ## a2dp_sink.c:35:5
 1e0a1c2:    07 f2 fa 3f       	if (r7 < r0) goto -12 <__sink_media_packet+0x56 : 1e0a1ba >
 1e0a1c6:    04 18             	goto 8 <__sink_media_packet+0x6C : 1e0a1d0 >
 1e0a1c8:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:37:24
 1e0a1ca:    00 70             	r0 = 0			  ## a2dp_sink.c:37:17
 1e0a1cc:    81 00             	call r1			  ## a2dp_sink.c:37:17
 1e0a1ce:    03 20             	if (r0 == 0) goto 6 <__sink_media_packet+0x72 : 1e0a1d6 >			  ## a2dp_sink.c:37:17
 1e0a1d0:    d5 f4 00 69       	[r6 + 84] = 0			  ## a2dp_sink.c:132:22
 1e0a1d4:    58 01             	{pc, r8-r4} = [sp++]			  ## a2dp_sink.c:158:1
 1e0a1d6:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:40:20
 1e0a1d8:    10 70             	r0 = 1			  ## a2dp_sink.c:40:13
 1e0a1da:    81 00             	call r1			  ## a2dp_sink.c:40:13
 1e0a1dc:    5f 4d             	[r6 + 84] = r7			  ## a2dp_sink.c:132:22
 1e0a1de:    21 4e             	r1 = [r7 + 8]			  ## a2dp_sink.c:136:23
 1e0a1e0:    60 08             	r0 = r6			  ## a2dp_sink.c:136:9
 1e0a1e2:    81 00             	call r1			  ## a2dp_sink.c:136:9
 1e0a1e4:    50 4d             	r0 = [r6 + 84]			  ## a2dp_sink.c:136:9
 1e0a1e6:    d7 1f             	goto -82 <__sink_media_packet+0x32 : 1e0a196 >			  ## a2dp_sink.c:136:9


__sink_media_suspend:
 1e0a1e8:    ac 1f             	goto -168 <__sink_media_close : 1e0a142 >			  ## a2dp_sink.c:162:0


avctp_suspend:
 1e0a1ea:    00 70             	r0 = 0			  ## avctp.c:1282:0
 1e0a1ec:    20 00             	rts			  ## avctp.c:1297:1


avctp_resume:
 1e0a1ee:    00 70             	r0 = 0			  ## avctp.c:1278:0
 1e0a1f0:    20 00             	rts			  ## avctp.c:1279:5


avctp_release:
 1e0a1f2:    00 70             	r0 = 0			  ## avctp.c:1260:0
 1e0a1f4:    20 00             	rts			  ## avctp.c:1276:1


hfp_suspend:
 1e0a1f6:    00 70             	r0 = 0			  ## hfp_profile.c:2013:0
 1e0a1f8:    20 00             	rts			  ## hfp_profile.c:2019:1


hfp_resume:
 1e0a1fa:    00 70             	r0 = 0			  ## hfp_profile.c:2005:0
 1e0a1fc:    20 00             	rts			  ## hfp_profile.c:2011:1


hfp_release:
 1e0a1fe:    00 70             	r0 = 0			  ## hfp_profile.c:1988:0
 1e0a200:    20 00             	rts			  ## hfp_profile.c:2002:1


hid_suspend:
 1e0a202:    00 70             	r0 = 0			  ## hid.c:807:0
 1e0a204:    20 00             	rts			  ## hid.c:813:1


hid_resume:
 1e0a206:    00 70             	r0 = 0			  ## hid.c:798:0
 1e0a208:    20 00             	rts			  ## hid.c:804:1


hid_release:
 1e0a20a:    00 70             	r0 = 0			  ## hid.c:781:0
 1e0a20c:    20 00             	rts			  ## hid.c:795:1


spp_suspend:
 1e0a20e:    00 70             	r0 = 0			  ## spp_profile.c:342:0
 1e0a210:    20 00             	rts			  ## spp_profile.c:343:5


spp_resume:
 1e0a212:    00 70             	r0 = 0			  ## spp_profile.c:338:0
 1e0a214:    20 00             	rts			  ## spp_profile.c:339:5


spp_release:
 1e0a216:    00 70             	r0 = 0			  ## spp_profile.c:323:0
 1e0a218:    20 00             	rts			  ## spp_profile.c:335:1


sdp_suspend:
 1e0a21a:    00 70             	r0 = 0			  ## sdp.c:961:0
 1e0a21c:    20 00             	rts			  ## sdp.c:962:5


sdp_resume:
 1e0a21e:    00 70             	r0 = 0			  ## sdp.c:957:0
 1e0a220:    20 00             	rts			  ## sdp.c:958:5


sdp_release:
 1e0a222:    00 70             	r0 = 0			  ## sdp.c:933:0
 1e0a224:    20 00             	rts			  ## sdp.c:954:1


iap_suspend:
 1e0a226:    00 70             	r0 = 0			  ## iap_profile.c:374:0
 1e0a228:    20 00             	rts			  ## iap_profile.c:375:5


iap_resume:
 1e0a22a:    00 70             	r0 = 0			  ## iap_profile.c:370:0
 1e0a22c:    20 00             	rts			  ## iap_profile.c:371:5


iap_release:
 1e0a22e:    00 70             	r0 = 0			  ## iap_profile.c:354:0
 1e0a230:    20 00             	rts			  ## iap_profile.c:367:1


hci_packet_handler:
 1e0a232:    7a 01             	[--sp] = {rets, r10-r4}			  ## btstack_task.c:147:0
 1e0a234:    fc 0b             	sp += -8			  ## btstack_task.c:147:0
 1e0a236:    24 08             	r4 = r2			  ## btstack_task.c:147:0
 1e0a238:    15 08             	r5 = r1			  ## btstack_task.c:147:0
 1e0a23a:    06 08             	r6 = r0			  ## btstack_task.c:147:0
 1e0a23c:    30 98             	r0 = r4 + 3			  ## btstack_task.c:147:0
 1e0a23e:    f2 fd 10 80       	r8 = r0 >> 2			  ## btstack_task.c:147:0
 1e0a242:    c7 ff 85 f1 e0 01 	r7 = 31519109 <bluetooth_base_uuid+0x17B : 1e0f185 >			  ## btstack_task.c:147:0
 1e0a248:    c9 ff 02 00 40 00 	r9 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## btstack_task.c:147:0
 1e0a24e:    9a fc ff ff       	r10 = r9 + -1			  ## btstack_task.c:147:0
 1e0a252:    1f 18             	goto 62 <hci_packet_handler+0x60 : 1e0a292 >			  ## btstack_task.c:147:0
 1e0a254:    70 08             	r0 = r7			  ## btstack_task.c:153:19
 1e0a256:    a1 08             	r1 = r10			  ## btstack_task.c:153:19
 1e0a258:    82 08             	r2 = r8			  ## btstack_task.c:153:19
 1e0a25a:    53 08             	r3 = r5			  ## btstack_task.c:153:19
 1e0a25c:    06 18             	goto 12 <hci_packet_handler+0x38 : 1e0a26a >			  ## btstack_task.c:153:19
 1e0a25e:    0d 02             	[sp] = r5			  ## btstack_task.c:157:20
 1e0a260:    1c 02             	[sp+4] = r4			  ## btstack_task.c:158:20
 1e0a262:    03 a0             	r3 = sp + 0			  ## btstack_task.c:158:20
 1e0a264:    22 70             	r2 = 2			  ## btstack_task.c:159:19
 1e0a266:    70 08             	r0 = r7			  ## btstack_task.c:159:19
 1e0a268:    91 08             	r1 = r9			  ## btstack_task.c:159:19
 1e0a26a:    97 f3 b9 e5       	call 3132274 <os_taskq_post_type : 106de0 >
 1e0a26e:    50 e1 14 10       	if (r0 != 21) goto 40 <hci_packet_handler+0x68 : 1e0a29a >
 1e0a272:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0a276:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0a27a:    61 ff ff 09 0d 00 	if ((r0 & 255) != 0) goto 26 <hci_packet_handler+0x68 : 1e0a29a >
 1e0a280:    8f f3 be c7       	call 2068348 <report_data_code_begin : 3200 >			  ## btstack_task.c:172:21
 1e0a284:    71 08             	r1 = r7			  ## btstack_task.c:172:14
 1e0a286:    97 f3 35 e6       	call 3132522 <strcmp : 106ef4 >			  ## btstack_task.c:172:14
 1e0a28a:    07 20             	if (r0 == 0) goto 14 <hci_packet_handler+0x68 : 1e0a29a >			  ## btstack_task.c:172:14
 1e0a28c:    20 70             	r0 = 2			  ## btstack_task.c:176:9
 1e0a28e:    97 f3 93 e5       	call 3132198 <os_time_dly : 106db8 >			  ## btstack_task.c:176:9
 1e0a292:    26 e0 e4 0f       	if (r6 == 2) goto -56 <hci_packet_handler+0x2C : 1e0a25e >			  ## btstack_task.c:151:9
 1e0a296:    46 e0 dd 0f       	if (r6 == 4) goto -70 <hci_packet_handler+0x22 : 1e0a254 >
 1e0a29a:    04 0a             	sp += 8
 1e0a29c:    5a 01             	{pc, r10-r4} = [sp++]


sm_encryption_key_size:
 1e0a29e:    34 00             	[--sp] = rets			  ## sm.c:4529:0
 1e0a2a0:    bf f3 8c e7       	call -12520 <le_hci_connection_for_handle : 1e071bc >			  ## sm.c:4520:36
 1e0a2a4:    01 08             	r1 = r0			  ## sm.c:4520:36
 1e0a2a6:    13 fc 24 00       	r3 = r1 + 36			  ## sm.c:4524:22
 1e0a2aa:    00 70             	r0 = 0			  ## sm.c:4524:22
 1e0a2ac:    02 70             	r2 = 0			  ## sm.c:4521:9
 1e0a2ae:    01 22             	if (r1 == 0) goto 2 <sm_encryption_key_size+0x14 : 1e0a2b2 >			  ## sm.c:4521:9
 1e0a2b0:    32 08             	r2 = r3			  ## sm.c:4521:9
 1e0a2b2:    03 22             	if (r1 == 0) goto 6 <sm_encryption_key_size+0x1C : 1e0a2ba >
 1e0a2b4:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:4534:19
 1e0a2b6:    01 22             	if (r1 == 0) goto 2 <sm_encryption_key_size+0x1C : 1e0a2ba >			  ## sm.c:4534:19
 1e0a2b8:    60 65             	r0 = b[r2 + 22] (u)			  ## sm.c:4537:12
 1e0a2ba:    30 00             	pc = [sp++]			  ## sm.c:4538:1


sm_authenticated:
 1e0a2bc:    34 00             	[--sp] = rets			  ## sm.c:4541:0
 1e0a2be:    bf f3 7d e7       	call -12550 <le_hci_connection_for_handle : 1e071bc >			  ## sm.c:4520:36
 1e0a2c2:    01 08             	r1 = r0			  ## sm.c:4520:36
 1e0a2c4:    13 fc 24 00       	r3 = r1 + 36			  ## sm.c:4524:22
 1e0a2c8:    00 70             	r0 = 0			  ## sm.c:4524:22
 1e0a2ca:    02 70             	r2 = 0			  ## sm.c:4521:9
 1e0a2cc:    01 22             	if (r1 == 0) goto 2 <sm_authenticated+0x14 : 1e0a2d0 >			  ## sm.c:4521:9
 1e0a2ce:    32 08             	r2 = r3			  ## sm.c:4521:9
 1e0a2d0:    03 22             	if (r1 == 0) goto 6 <sm_authenticated+0x1C : 1e0a2d8 >
 1e0a2d2:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:4546:19
 1e0a2d4:    01 22             	if (r1 == 0) goto 2 <sm_authenticated+0x1C : 1e0a2d8 >			  ## sm.c:4546:19
 1e0a2d6:    50 65             	r0 = b[r2 + 21] (u)			  ## sm.c:4549:12
 1e0a2d8:    30 00             	pc = [sp++]			  ## sm.c:4550:1


search_ios_ancs_server:
 1e0a2da:    06 01             	{r6-r4} = [sp++]
 1e0a2dc:    00 ff ff 00 28 d0 	if (r0 == 255) goto -24496 <port_edge_wkup_set_callback+0x8 : 1e04332 >
 1e0a2e2:    00 2d             	if (r6 == 0) goto -512 <.GJTIE635_1_1_+0x180 : 1e0a0e4 >
 1e0a2e4:    12 1e             	goto -988 <.GJTIE635_0_0_+0xC6 : 1e09f0a >
 1e0a2e6:    4b 0f             	r3 = r1 * r5
 1e0a2e8:    a4 99             	r4 = r4 + 26
 1e0a2ea:    4e ce             	r6 = r1 <<< 25
 1e0a2ec:    b5 31             	if (r0 != 0) goto -150 <hci_packet_handler+0x26 : 1e0a258 >
 1e0a2ee:    f4 05             	r4 = r7.l (s)
 1e0a2f0:    79 00             	sti r9


att_global_info_init:
 1e0a2f2:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:75:0
 1e0a2f8:    01 70             	r1 = 0			  ## att_dispatch.c:76:5
 1e0a2fa:    c2 73             	r2 = 60			  ## att_dispatch.c:76:5
 1e0a2fc:    d7 f3 f8 e5       	goto 3132400 <memset : 106ef0 >			  ## att_dispatch.c:76:5


att_server_init:
 1e0a300:    34 00             	[--sp] = rets			  ## att_server.c:650:0
 1e0a302:    c3 ff e0 1c 00 00 	r3 = 7392 <att_global_info : 1ce0 >			  ## att_db.c:297:32
 1e0a308:    c0 ff f4 a4 e0 01 	r0 = 31499508 <att_event_packet_handler : 1e0a4f4 >			  ## att_server.c:657:54
 1e0a30e:    98 46             	[r3 + 36] = r0			  ## att_server.c:657:54
 1e0a310:    30 fc 20 00       	r0 = r3 + 32			  ## att_server.c:657:54
 1e0a314:    bf f3 7c e8       	call -12040 <hci_add_event_handler : 1e07410 >			  ## att_server.c:658:5
 1e0a318:    c0 ff 9a a6 e0 01 	r0 = 31499930 <att_packet_handler.1746 : 1e0a69a >			  ## att_dispatch.c:145:32
 1e0a31e:    18 46             	[r3 + 4] = r0			  ## att_dispatch.c:145:32
 1e0a320:    bf f3 7b e8       	call -12042 <l2cap_register_fixed_channel : 1e0741a >			  ## att_dispatch.c:146:5
 1e0a324:    c0 ff a0 e9 e0 01 	r0 = 31517088 <profile_data : 1e0e9a0 >			  ## att_db.c:287:20
 1e0a32a:    38 46             	[r3 + 12] = r0			  ## att_db.c:287:20
 1e0a32c:    c0 ff 00 0b e0 01 	r0 = 31460096 <att_read_callback : 1e00b00 >			  ## att_db.c:292:31
 1e0a332:    48 46             	[r3 + 16] = r0			  ## att_db.c:292:31
 1e0a334:    c0 ff 0a 0c e0 01 	r0 = 31460362 <att_write_callback : 1e00c0a >			  ## att_db.c:297:32
 1e0a33a:    58 46             	[r3 + 20] = r0			  ## att_db.c:297:32
 1e0a33c:    30 00             	pc = [sp++]			  ## att_server.c:673:1


att_server_register_packet_handler:
 1e0a33e:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:690:0
 1e0a344:    c1 ff f4 0d e0 01 	r1 = 31460852 <cbk_packet_handler : 1e00df4 >			  ## att_server.c:692:39
 1e0a34a:    c9 40             	[r0 + 48] = r1			  ## att_server.c:692:39
 1e0a34c:    20 00             	rts			  ## att_server.c:694:1


att_dispatch_server_request_can_send_now_event:
 1e0a34e:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:186:0
 1e0a354:    11 70             	r1 = 1			  ## att_dispatch.c:187:45
 1e0a356:    99 60             	b[r0 + 9] = r1			  ## att_dispatch.c:187:45
 1e0a358:    ff f3 6b fc       	goto -1834 <l2cap_request_can_send_fix_channel_now_event : 1e09c32 >			  ## att_dispatch.c:188:5


att_server_send_request:
 1e0a35c:    f8 1f             	goto -16 <att_dispatch_server_request_can_send_now_event : 1e0a34e >			  ## att_server.c:785:0


att_server_for_handle:
 1e0a35e:    34 00             	[--sp] = rets			  ## att_server.c:83:0
 1e0a360:    bf f3 2c e7       	call -12712 <le_hci_connection_for_handle : 1e071bc >			  ## att_server.c:88:43
 1e0a364:    01 08             	r1 = r0			  ## att_server.c:88:43
 1e0a366:    12 fc 5c 00       	r2 = r1 + 92			  ## att_server.c:92:29
 1e0a36a:    00 70             	r0 = 0			  ## att_server.c:92:29
 1e0a36c:    01 22             	if (r1 == 0) goto 2 <att_server_for_handle+0x12 : 1e0a370 >			  ## att_server.c:92:29
 1e0a36e:    20 08             	r0 = r2			  ## att_server.c:89:9
 1e0a370:    30 00             	pc = [sp++]			  ## att_server.c:93:1


att_dispatch_server_can_send_now:
 1e0a372:    ff f3 64 fc       	goto -1848 <l2cap_can_send_fixed_channel_packet_now : 1e09c3e >			  ## att_dispatch.c:163:0


att_server_notify:
 1e0a376:    78 01             	[--sp] = {rets, r8-r4}			  ## att_server.c:729:0
 1e0a378:    36 08             	r6 = r3			  ## att_server.c:729:0
 1e0a37a:    28 08             	r8 = r2			  ## att_server.c:729:0
 1e0a37c:    17 08             	r7 = r1			  ## att_server.c:729:0
 1e0a37e:    04 08             	r4 = r0			  ## att_server.c:729:0
 1e0a380:    ee 17             	call -36 <att_server_for_handle : 1e0a35e >			  ## att_server.c:734:32
 1e0a382:    05 08             	r5 = r0			  ## att_server.c:734:32
 1e0a384:    20 2a             	if (r5 == 0) goto 64 <att_server_notify+0x50 : 1e0a3c6 >
 1e0a386:    40 08             	r0 = r4			  ## att_server.c:739:10
 1e0a388:    f4 17             	call -24 <att_dispatch_server_can_send_now : 1e0a372 >			  ## att_server.c:739:10
 1e0a38a:    1f 20             	if (r0 == 0) goto 62 <att_server_notify+0x54 : 1e0a3ca >			  ## att_server.c:739:10
 1e0a38c:    bf f3 59 fc       	call -1870 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## att_server.c:743:5
 1e0a390:    c3 ff 60 18 00 00 	r3 = 6240 <report_irq_stack_end : 1860 >			  ## att_db.c:1251:5
 1e0a396:    b0 71             	r0 = 27			  ## att_db.c:1263:24
 1e0a398:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1263:24
 1e0a39a:    00 97             	r0 = r3 + 16			  ## att_db.c:1263:24
 1e0a39c:    11 70             	r1 = 1			  ## att_db.c:1247:5
 1e0a39e:    72 08             	r2 = r7			  ## att_db.c:1247:5
 1e0a3a0:    bf f3 51 fc       	call -1886 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:1247:5
 1e0a3a4:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1248:21
 1e0a3a6:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1248:41
 1e0a3aa:    46 f2 01 c0       	ifs (r6 > r4) goto 2 <att_server_notify+0x3A : 1e0a3b0 >
 1e0a3ae:    64 08             	r4 = r6			  ## att_db.c:1248:9
 1e0a3b0:    22 05             	r2 = r4.l (u)			  ## att_db.c:1251:40
 1e0a3b2:    30 97             	r0 = r3 + 19			  ## att_db.c:1251:5
 1e0a3b4:    81 08             	r1 = r8			  ## att_db.c:1251:5
 1e0a3b6:    97 f3 95 e5       	call 3132202 <memcpy : 106ee4 >			  ## att_db.c:1251:5
 1e0a3ba:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:746:12
 1e0a3bc:    31 98             	r1 = r4 + 3			  ## att_db.c:1252:22
 1e0a3be:    61 04             	r1 = r1.l (u)			  ## att_server.c:746:12
 1e0a3c0:    18 01             	{rets, r8-r4} = [sp++]			  ## att_server.c:746:12
 1e0a3c2:    ff f3 48 fc       	goto -1904 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## att_server.c:746:12
 1e0a3c6:    20 70             	r0 = 2
 1e0a3c8:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:747:1
 1e0a3ca:    70 75             	r0 = 87
 1e0a3cc:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:747:1


att_server_indicate:
 1e0a3ce:    79 01             	[--sp] = {rets, r9-r4}			  ## att_server.c:750:0
 1e0a3d0:    39 08             	r9 = r3			  ## att_server.c:750:0
 1e0a3d2:    28 08             	r8 = r2			  ## att_server.c:750:0
 1e0a3d4:    14 08             	r4 = r1			  ## att_server.c:750:0
 1e0a3d6:    07 08             	r7 = r0			  ## att_server.c:750:0
 1e0a3d8:    c2 17             	call -124 <att_server_for_handle : 1e0a35e >			  ## att_server.c:755:32
 1e0a3da:    05 08             	r5 = r0			  ## att_server.c:755:32
 1e0a3dc:    33 2a             	if (r5 == 0) goto 102 <att_server_indicate+0x76 : 1e0a444 >
 1e0a3de:    50 4a             	r0 = [r5 + 20]			  ## att_server.c:760:21
 1e0a3e0:    06 79             	r6 = 144			  ## att_server.c:760:21
 1e0a3e2:    31 30             	if (r0 != 0) goto 98 <att_server_indicate+0x78 : 1e0a446 >			  ## att_server.c:760:21
 1e0a3e4:    70 08             	r0 = r7			  ## att_server.c:763:10
 1e0a3e6:    c5 17             	call -118 <att_dispatch_server_can_send_now : 1e0a372 >			  ## att_server.c:763:10
 1e0a3e8:    30 20             	if (r0 == 0) goto 96 <att_server_indicate+0x7C : 1e0a44a >			  ## att_server.c:763:10
 1e0a3ea:    5c 4a             	[r5 + 20] = r4			  ## att_server.c:768:41
 1e0a3ec:    06 70             	r6 = 0			  ## att_server.c:768:41
 1e0a3ee:    7e 4a             	[r5 + 28] = r6			  ## att_server.c:770:5
 1e0a3f0:    6e 4a             	[r5 + 24] = r6			  ## att_server.c:770:5
 1e0a3f2:    00 fb 30 75       	r0 = 30000 <nvbss_size+0x1F0 : 7530 >			  ## att_server.c:771:57
 1e0a3f6:    88 4a             	[r5 + 32] = r0			  ## att_server.c:771:57
 1e0a3f8:    c0 ff de a8 e0 01 	r0 = 31500510 <att_handle_value_indication_timeout : 1e0a8de >			  ## att_server.c:772:48
 1e0a3fe:    98 4a             	[r5 + 36] = r0			  ## att_server.c:772:48
 1e0a400:    ad 4a             	[r5 + 40] = r5			  ## att_server.c:773:48
 1e0a402:    80 9b             	r0 = r5 + 24			  ## att_server.c:770:25
 1e0a404:    21 78             	r1 = 130			  ## att_server.c:774:5
 1e0a406:    bf f3 49 fc       	call -1902 <btstack_set_timer : 1e09c9c >			  ## att_server.c:774:5
 1e0a40a:    bf f3 1a fc       	call -1996 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## att_server.c:776:5
 1e0a40e:    c3 ff 60 18 00 00 	r3 = 6240 <report_irq_stack_end : 1860 >			  ## att_db.c:1251:5
 1e0a414:    d0 71             	r0 = 29			  ## att_db.c:1275:24
 1e0a416:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1275:24
 1e0a418:    00 97             	r0 = r3 + 16			  ## att_db.c:1275:24
 1e0a41a:    11 70             	r1 = 1			  ## att_db.c:1247:5
 1e0a41c:    42 08             	r2 = r4			  ## att_db.c:1247:5
 1e0a41e:    bf f3 12 fc       	call -2012 <little_endian_store_16 : 1e09c46 >			  ## att_db.c:1247:5
 1e0a422:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1248:21
 1e0a424:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1248:41
 1e0a428:    49 f2 01 c0       	ifs (r9 > r4) goto 2 <att_server_indicate+0x60 : 1e0a42e >
 1e0a42c:    94 08             	r4 = r9			  ## att_db.c:1248:9
 1e0a42e:    22 05             	r2 = r4.l (u)			  ## att_db.c:1251:40
 1e0a430:    30 97             	r0 = r3 + 19			  ## att_db.c:1251:5
 1e0a432:    81 08             	r1 = r8			  ## att_db.c:1251:5
 1e0a434:    97 f3 56 e5       	call 3132076 <memcpy : 106ee4 >			  ## att_db.c:1251:5
 1e0a438:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:779:5
 1e0a43a:    31 98             	r1 = r4 + 3			  ## att_db.c:1252:22
 1e0a43c:    61 04             	r1 = r1.l (u)			  ## att_server.c:779:5
 1e0a43e:    bf f3 0a fc       	call -2028 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## att_server.c:779:5
 1e0a442:    01 18             	goto 2 <att_server_indicate+0x78 : 1e0a446 >			  ## att_server.c:779:5
 1e0a444:    26 70             	r6 = 2
 1e0a446:    60 08             	r0 = r6			  ## att_server.c:781:1
 1e0a448:    59 01             	{pc, r9-r4} = [sp++]			  ## att_server.c:781:1
 1e0a44a:    76 75             	r6 = 87
 1e0a44c:    fc 1f             	goto -8 <att_server_indicate+0x78 : 1e0a446 >


att_dispatch_client_can_send_now:
 1e0a44e:    ff f3 f6 fb       	goto -2068 <l2cap_can_send_fixed_channel_packet_now : 1e09c3e >			  ## att_dispatch.c:154:0


att_dispatch_client_request_can_send_now_event:
 1e0a452:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:174:0
 1e0a458:    11 70             	r1 = 1			  ## att_dispatch.c:175:45
 1e0a45a:    89 60             	b[r0 + 8] = r1			  ## att_dispatch.c:175:45
 1e0a45c:    ff f3 e9 fb       	goto -2094 <l2cap_request_can_send_fix_channel_now_event : 1e09c32 >			  ## att_dispatch.c:176:5


att_server_request_can_send_now_event:
 1e0a460:    c0 ff e0 1c 00 00 	r0 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:705:0
 1e0a466:    01 f9 38 00       	r1 = b[r0 + 56] (u)			  ## att_server.c:708:42
 1e0a46a:    11 b0             	r1 |= 1			  ## att_server.c:708:42
 1e0a46c:    11 f9 38 00       	b[r0 + 56] = r1			  ## att_server.c:708:42
 1e0a470:    6e 1f             	goto -292 <att_dispatch_server_request_can_send_now_event : 1e0a34e >			  ## att_server.c:709:9


att_packet_handler:
 1e0a472:    79 01             	[--sp] = {rets, r9-r4}			  ## att_dispatch.c:80:0
 1e0a474:    39 08             	r9 = r3			  ## att_dispatch.c:80:0
 1e0a476:    25 08             	r5 = r2			  ## att_dispatch.c:80:0
 1e0a478:    16 08             	r6 = r1			  ## att_dispatch.c:80:0
 1e0a47a:    c7 ff e0 1c 00 00 	r7 = 7392 <att_global_info : 1ce0 >			  ## att_dispatch.c:80:0
 1e0a480:    40 e0 0a 00       	if (r0 == 4) goto 20 <att_packet_handler+0x26 : 1e0a498 >			  ## att_dispatch.c:81:5
 1e0a484:    80 e0 2d 10       	if (r0 != 8) goto 90 <att_packet_handler+0x70 : 1e0a4e2 >
 1e0a488:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:84:13
 1e0a48a:    20 f3 23 00       	if ((r0 & 1) != 0) goto 70 <att_packet_handler+0x62 : 1e0a4d4 >
 1e0a48e:    14 4e             	r4 = [r7 + 4]			  ## att_dispatch.c:96:26
 1e0a490:    25 38             	if (r4 != 0) goto 74 <att_packet_handler+0x6A : 1e0a4dc >			  ## att_dispatch.c:96:26
 1e0a492:    04 4e             	r4 = [r7 + 0]			  ## att_dispatch.c:98:30
 1e0a494:    23 38             	if (r4 != 0) goto 70 <att_packet_handler+0x6A : 1e0a4dc >			  ## att_dispatch.c:98:30
 1e0a496:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1
 1e0a498:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:108:13
 1e0a49a:    80 e7 22 10       	if (r0 != 120) goto 68 <att_packet_handler+0x70 : 1e0a4e2 >
 1e0a49e:    08 f6 04 70       	r8 = [r7 + 4]			  ## att_dispatch.c:111:21
 1e0a4a2:    08 e0 09 00       	if (r8 == 0) goto 18 <att_packet_handler+0x46 : 1e0a4b8 >			  ## att_dispatch.c:111:21
 1e0a4a6:    90 6e             	r0 = b[r7 + 9] (u)			  ## att_dispatch.c:111:40
 1e0a4a8:    07 20             	if (r0 == 0) goto 14 <att_packet_handler+0x46 : 1e0a4b8 >			  ## att_dispatch.c:111:40
 1e0a4aa:    00 70             	r0 = 0
 1e0a4ac:    98 6e             	b[r7 + 9] = r0			  ## att_dispatch.c:112:53
 1e0a4ae:    40 70             	r0 = 4			  ## att_dispatch.c:113:13
 1e0a4b0:    88 00             	call r8			  ## att_dispatch.c:113:13
 1e0a4b2:    bf f3 35 f9       	call -3478 <hci_can_send_acl_le_packet_now : 1e09720 >			  ## att_dispatch.c:115:18
 1e0a4b6:    15 20             	if (r0 == 0) goto 42 <att_packet_handler+0x70 : 1e0a4e2 >			  ## att_dispatch.c:115:18
 1e0a4b8:    08 f6 00 70       	r8 = [r7 + 0]
 1e0a4bc:    08 e0 11 00       	if (r8 == 0) goto 34 <att_packet_handler+0x70 : 1e0a4e2 >
 1e0a4c0:    80 6e             	r0 = b[r7 + 8] (u)
 1e0a4c2:    0f 20             	if (r0 == 0) goto 30 <att_packet_handler+0x70 : 1e0a4e2 >
 1e0a4c4:    00 70             	r0 = 0			  ## att_dispatch.c:120:53
 1e0a4c6:    88 6e             	b[r7 + 8] = r0			  ## att_dispatch.c:120:53
 1e0a4c8:    40 70             	r0 = 4			  ## att_dispatch.c:121:13
 1e0a4ca:    61 08             	r1 = r6			  ## att_dispatch.c:121:13
 1e0a4cc:    52 08             	r2 = r5			  ## att_dispatch.c:121:13
 1e0a4ce:    93 08             	r3 = r9			  ## att_dispatch.c:121:13
 1e0a4d0:    88 00             	call r8			  ## att_dispatch.c:121:13
 1e0a4d2:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1
 1e0a4d4:    04 4e             	r4 = [r7 + 0]			  ## att_dispatch.c:86:17
 1e0a4d6:    02 38             	if (r4 != 0) goto 4 <att_packet_handler+0x6A : 1e0a4dc >			  ## att_dispatch.c:86:17
 1e0a4d8:    14 4e             	r4 = [r7 + 4]			  ## att_dispatch.c:87:17
 1e0a4da:    03 28             	if (r4 == 0) goto 6 <att_packet_handler+0x70 : 1e0a4e2 >			  ## att_dispatch.c:87:17
 1e0a4dc:    80 70             	r0 = 8
 1e0a4de:    84 00             	call r4
 1e0a4e0:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1
 1e0a4e2:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:127:1


att_run_for_context:
 1e0a4e4:    34 00             	[--sp] = rets			  ## att_server.c:442:0
 1e0a4e6:    01 40             	r1 = [r0 + 0]			  ## att_server.c:443:25
 1e0a4e8:    11 e0 03 10       	if (r1 != 1) goto 6 <att_run_for_context+0xE : 1e0a4f2 >			  ## att_server.c:443:25
 1e0a4ec:    c0 f4 03 09       	[r0 + 0] = 3			  ## att_server.c:489:27
 1e0a4f0:    2e 17             	call -420 <att_dispatch_server_request_can_send_now_event : 1e0a34e >			  ## att_server.c:490:9
 1e0a4f2:    30 00             	pc = [sp++]			  ## att_server.c:496:1


att_event_packet_handler:
 1e0a4f4:    76 01             	[--sp] = {rets, r6-r4}			  ## att_server.c:176:0
 1e0a4f6:    24 08             	r4 = r2			  ## att_server.c:176:0
 1e0a4f8:    40 e0 8c 10       	if (r0 != 4) goto 280 <.GJTIE641_0_0_+0xD0 : 1e0a614 >			  ## att_server.c:176:0
 1e0a4fc:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:176:0
 1e0a4fe:    d0 e3 19 c0       	ifs (r0 > 61) goto 50 <att_event_packet_handler+0x40 : 1e0a534 >			  ## att_server.c:191:9
 1e0a502:    50 e0 28 00       	if (r0 == 5) goto 80 <.GJTIE641_0_0_+0x12 : 1e0a556 >
 1e0a506:    80 e0 02 00       	if (r0 == 8) goto 4 <att_event_packet_handler+0x1A : 1e0a50e >
 1e0a50a:    00 e3 83 10       	if (r0 != 48) goto 262 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a50e:    31 70             	r1 = 3			  ## att_server.c:227:26
 1e0a510:    40 08             	r0 = r4			  ## att_server.c:227:26
 1e0a512:    bf f3 2e e6       	call -13220 <little_endian_read_16 : 1e07172 >			  ## att_server.c:227:26
 1e0a516:    04 08             	r4 = r0			  ## att_server.c:227:26
 1e0a518:    22 17             	call -444 <att_server_for_handle : 1e0a35e >			  ## att_server.c:228:26
 1e0a51a:    05 08             	r5 = r0			  ## att_server.c:228:26
 1e0a51c:    7b 2a             	if (r5 == 0) goto 246 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a51e:    40 08             	r0 = r4			  ## att_server.c:232:58
 1e0a520:    bf f3 bd fe       	call -646 <sm_encryption_key_size : 1e0a29e >			  ## att_server.c:232:58
 1e0a524:    10 f9 32 50       	b[r5 + 50] = r0			  ## att_server.c:232:56
 1e0a528:    40 08             	r0 = r4			  ## att_server.c:233:52
 1e0a52a:    bf f3 c7 fe       	call -626 <sm_authenticated : 1e0a2bc >			  ## att_server.c:233:52
 1e0a52e:    10 f9 33 50       	b[r5 + 51] = r0			  ## att_server.c:233:50
 1e0a532:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0a534:    01 fc 28 ff       	r1 = r0 + -216
 1e0a538:    41 e0 18 80       	if (r1 > 4) goto 48 <.GJTIE641_0_0_+0x28 : 1e0a56c >
 1e0a53c:    a1 00             	tbb [r1]


.GJTIS641_0_0_:
 1e0a53e:    03     < 3 : 0x3 >
 1e0a53f:    44     < 68 : 0x44 >
 1e0a540:    50     < 80 : 0x50 >
 1e0a541:    6b     < 107 : 0x6B >
 1e0a542:    61     < 97 : 0x61 >
 1e0a543:    00     < 0 : 0x0 >
 1e0a544:    21 70             	r1 = 2			  ## btstack_event.h:2856:16
 1e0a546:    40 08             	r0 = r4			  ## btstack_event.h:2856:16
 1e0a548:    bf f3 13 e6       	call -13274 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:2856:16
 1e0a54c:    08 17             	call -496 <att_server_for_handle : 1e0a35e >			  ## att_server.c:252:26
 1e0a54e:    62 20             	if (r0 == 0) goto 196 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a550:    c4 f4 01 09       	[r0 + 16] = 1			  ## att_server.c:257:42
 1e0a554:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0a556:    31 70             	r1 = 3			  ## btstack_event.h:324:16
 1e0a558:    40 08             	r0 = r4			  ## btstack_event.h:324:16
 1e0a55a:    bf f3 0a e6       	call -13292 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:324:16
 1e0a55e:    ff 16             	call -514 <att_server_for_handle : 1e0a35e >			  ## att_server.c:240:26
 1e0a560:    59 20             	if (r0 == 0) goto 178 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a562:    01 70             	r1 = 0
 1e0a564:    69 51             	h[r0 + 44] = r1			  ## att_server.c:245:47
 1e0a566:    59 40             	[r0 + 20] = r1			  ## att_server.c:246:49
 1e0a568:    09 40             	[r0 + 0] = r1			  ## att_server.c:247:31
 1e0a56a:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0a56c:    e0 e3 52 10       	if (r0 != 62) goto 164 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a570:    20 68             	r0 = b[r4 + 2] (u)			  ## att_server.c:194:21
 1e0a572:    10 e0 4f 10       	if (r0 != 1) goto 158 <.GJTIE641_0_0_+0xD0 : 1e0a614 >			  ## att_server.c:194:21
 1e0a576:    41 70             	r1 = 4			  ## att_server.c:196:30
 1e0a578:    40 08             	r0 = r4			  ## att_server.c:196:30
 1e0a57a:    bf f3 fa e5       	call -13324 <little_endian_read_16 : 1e07172 >			  ## att_server.c:196:30
 1e0a57e:    06 08             	r6 = r0			  ## att_server.c:196:30
 1e0a580:    ee 16             	call -548 <att_server_for_handle : 1e0a35e >			  ## att_server.c:197:30
 1e0a582:    05 08             	r5 = r0			  ## att_server.c:197:30
 1e0a584:    47 2a             	if (r5 == 0) goto 142 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a586:    70 68             	r0 = b[r4 + 7] (u)			  ## att_server.c:202:46
 1e0a588:    48 6a             	b[r5 + 4] = r0			  ## att_server.c:202:44
 1e0a58a:    80 98             	r0 = r4 + 8			  ## att_server.c:203:34
 1e0a58c:    51 9a             	r1 = r5 + 5			  ## att_server.c:203:45
 1e0a58e:    bf f3 b2 fd       	call -1180 <reverse_bd_addr : 1e0a0f6 >			  ## att_server.c:203:17
 1e0a592:    6e 5b             	h[r5 + 44] = r6			  ## att_server.c:204:51
 1e0a594:    02 70             	r2 = 0			  ## att_server.c:204:51
 1e0a596:    0a 4a             	[r5 + 0] = r2			  ## att_server.c:206:35
 1e0a598:    70 71             	r0 = 23			  ## att_server.c:207:44
 1e0a59a:    78 5b             	h[r5 + 46] = r0			  ## att_server.c:207:44
 1e0a59c:    bf f3 a7 fb       	call -2226 <l2cap_max_le_mtu : 1e09cee >			  ## att_server.c:208:50
 1e0a5a0:    03 ff 05 02 02 00 	if (r0 < 517) goto 4 <.GJTIE641_0_0_+0x66 : 1e0a5aa >			  ## att_server.c:208:50
 1e0a5a6:    00 fb 05 02       	r0 = 517 <BTCTLER_CONTROLLER_BSS_SIZE+0x45 : 205 >			  ## att_server.c:209:21
 1e0a5aa:    88 5b             	h[r5 + 48] = r0			  ## att_server.c:208:48
 1e0a5ac:    50 fc 30 00       	r0 = r5 + 48			  ## att_server.c:208:48
 1e0a5b0:    2a 60             	b[r0 + 2] = r2			  ## att_server.c:212:60
 1e0a5b2:    3a 60             	b[r0 + 3] = r2			  ## att_server.c:213:54
 1e0a5b4:    4a 60             	b[r0 + 4] = r2			  ## att_server.c:214:51
 1e0a5b6:    c3 f4 ff 5f       	[r5 + 12] = 4294967295			  ## att_server.c:215:51
 1e0a5ba:    00 f9 3d 52       	r0 = b[r5 + 573] (u)			  ## att_server.c:216:44
 1e0a5be:    70 b0             	r0 &= 4294967294			  ## att_server.c:216:44
 1e0a5c0:    10 f9 3d 52       	b[r5 + 573] = r0			  ## att_server.c:216:44
 1e0a5c4:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1
 1e0a5c6:    21 70             	r1 = 2			  ## btstack_event.h:2889:16
 1e0a5c8:    40 08             	r0 = r4			  ## btstack_event.h:2889:16
 1e0a5ca:    bf f3 d2 e5       	call -13404 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:2889:16
 1e0a5ce:    c7 16             	call -626 <att_server_for_handle : 1e0a35e >			  ## att_server.c:272:26
 1e0a5d0:    21 20             	if (r0 == 0) goto 66 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a5d2:    c4 f4 00 09       	[r0 + 16] = 0			  ## att_server.c:277:42
 1e0a5d6:    c3 f4 ff 0f       	[r0 + 12] = 4294967295			  ## att_server.c:278:47
 1e0a5da:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:279:13
 1e0a5dc:    83 1f             	goto -250 <att_run_for_context : 1e0a4e4 >			  ## att_server.c:279:13
 1e0a5de:    21 70             	r1 = 2			  ## btstack_event.h:2922:16
 1e0a5e0:    40 08             	r0 = r4			  ## btstack_event.h:2922:16
 1e0a5e2:    bf f3 c6 e5       	call -13428 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:2922:16
 1e0a5e6:    bb 16             	call -650 <att_server_for_handle : 1e0a35e >			  ## att_server.c:261:26
 1e0a5e8:    02 08             	r2 = r0			  ## att_server.c:261:26
 1e0a5ea:    14 24             	if (r2 == 0) goto 40 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a5ec:    c4 f4 00 29       	[r2 + 16] = 0			  ## att_server.c:265:42
 1e0a5f0:    21 71             	r1 = 18			  ## btstack_event.h:2972:16
 1e0a5f2:    40 08             	r0 = r4			  ## btstack_event.h:2972:16
 1e0a5f4:    bf f3 bd e5       	call -13446 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:2972:16
 1e0a5f8:    38 44             	[r2 + 12] = r0			  ## att_server.c:266:47
 1e0a5fa:    20 08             	r0 = r2			  ## att_server.c:268:13
 1e0a5fc:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:268:13
 1e0a5fe:    72 1f             	goto -284 <att_run_for_context : 1e0a4e4 >			  ## att_server.c:268:13
 1e0a600:    21 70             	r1 = 2			  ## btstack_event.h:3018:16
 1e0a602:    40 08             	r0 = r4			  ## btstack_event.h:3018:16
 1e0a604:    bf f3 b5 e5       	call -13462 <little_endian_read_16 : 1e07172 >			  ## btstack_event.h:3018:16
 1e0a608:    aa 16             	call -684 <att_server_for_handle : 1e0a35e >			  ## att_server.c:283:26
 1e0a60a:    04 20             	if (r0 == 0) goto 8 <.GJTIE641_0_0_+0xD0 : 1e0a614 >
 1e0a60c:    b1 68             	r1 = b[r4 + 11] (u)			  ## btstack_event.h:3048:16
 1e0a60e:    11 f9 34 00       	b[r0 + 52] = r1			  ## att_server.c:287:47
 1e0a612:    9d 16             	call -710 <att_dispatch_server_request_can_send_now_event : 1e0a34e >			  ## att_server.c:288:13
 1e0a614:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:298:1


att_emit_mtu_event:
 1e0a616:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:133:0
 1e0a618:    fc 0b             	sp += -8			  ## att_server.c:133:0
 1e0a61a:    c5 ff e0 1c 00 00 	r5 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:133:0
 1e0a620:    c4 4a             	r4 = [r5 + 48]			  ## att_server.c:134:18
 1e0a622:    13 08             	r3 = r1			  ## att_server.c:134:18
 1e0a624:    02 08             	r2 = r0
 1e0a626:    15 28             	if (r4 == 0) goto 42 <att_emit_mtu_event+0x3C : 1e0a652 >
 1e0a628:    50 7b             	r0 = 181			  ## att_server.c:140:18
 1e0a62a:    d0 f5 02 00       	b[sp+2] = r0			  ## att_server.c:140:18
 1e0a62e:    40 70             	r0 = 4			  ## att_server.c:140:18
 1e0a630:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:141:18
 1e0a634:    24 a0             	r4 = sp + 2			  ## att_server.c:141:18
 1e0a636:    21 70             	r1 = 2			  ## att_server.c:142:5
 1e0a638:    40 08             	r0 = r4			  ## att_server.c:142:5
 1e0a63a:    bf f3 04 fb       	call -2552 <little_endian_store_16 : 1e09c46 >			  ## att_server.c:142:5
 1e0a63e:    41 70             	r1 = 4			  ## att_server.c:144:5
 1e0a640:    32 08             	r2 = r3			  ## att_server.c:144:5
 1e0a642:    bf f3 00 fb       	call -2560 <little_endian_store_16 : 1e09c46 >			  ## att_server.c:144:5
 1e0a646:    c5 4a             	r5 = [r5 + 48]			  ## att_server.c:145:13
 1e0a648:    40 70             	r0 = 4			  ## att_server.c:145:5
 1e0a64a:    01 70             	r1 = 0			  ## att_server.c:145:5
 1e0a64c:    63 70             	r3 = 6			  ## att_server.c:145:5
 1e0a64e:    42 08             	r2 = r4			  ## att_server.c:145:5
 1e0a650:    85 00             	call r5			  ## att_server.c:145:5
 1e0a652:    04 0a             	sp += 8
 1e0a654:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:146:1


att_handle_value_indication_notify_client:
 1e0a656:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:116:0
 1e0a658:    fc 0b             	sp += -8			  ## att_server.c:116:0
 1e0a65a:    c5 ff e0 1c 00 00 	r5 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:116:0
 1e0a660:    c4 4a             	r4 = [r5 + 48]			  ## att_server.c:117:18
 1e0a662:    23 08             	r3 = r2			  ## att_server.c:117:18
 1e0a664:    12 08             	r2 = r1
 1e0a666:    17 28             	if (r4 == 0) goto 46 <att_handle_value_indication_notify_client+0x40 : 1e0a696 >
 1e0a668:    61 7b             	r1 = 182			  ## att_server.c:123:18
 1e0a66a:    d1 f5 01 00       	b[sp+1] = r1			  ## att_server.c:123:18
 1e0a66e:    51 70             	r1 = 5			  ## att_server.c:123:18
 1e0a670:    d1 f5 02 00       	b[sp+2] = r1			  ## att_server.c:124:18
 1e0a674:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:125:18
 1e0a678:    14 a0             	r4 = sp + 1			  ## att_server.c:125:18
 1e0a67a:    31 70             	r1 = 3			  ## att_server.c:126:5
 1e0a67c:    40 08             	r0 = r4			  ## att_server.c:126:5
 1e0a67e:    bf f3 e2 fa       	call -2620 <little_endian_store_16 : 1e09c46 >			  ## att_server.c:126:5
 1e0a682:    51 70             	r1 = 5			  ## att_server.c:128:5
 1e0a684:    32 08             	r2 = r3			  ## att_server.c:128:5
 1e0a686:    bf f3 de fa       	call -2628 <little_endian_store_16 : 1e09c46 >			  ## att_server.c:128:5
 1e0a68a:    c5 4a             	r5 = [r5 + 48]			  ## att_server.c:129:13
 1e0a68c:    40 70             	r0 = 4			  ## att_server.c:129:5
 1e0a68e:    01 70             	r1 = 0			  ## att_server.c:129:5
 1e0a690:    73 70             	r3 = 7			  ## att_server.c:129:5
 1e0a692:    42 08             	r2 = r4			  ## att_server.c:129:5
 1e0a694:    85 00             	call r5			  ## att_server.c:129:5
 1e0a696:    04 0a             	sp += 8
 1e0a698:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:130:1


att_packet_handler.1746:
 1e0a69a:    7c 01             	[--sp] = {rets, r12-r4}			  ## att_server.c:562:0
 1e0a69c:    f8 0b             	sp += -16			  ## att_server.c:562:0
 1e0a69e:    35 08             	r5 = r3			  ## att_server.c:562:0
 1e0a6a0:    24 08             	r4 = r2			  ## att_server.c:562:0
 1e0a6a2:    80 e0 bd 00       	if (r0 == 8) goto 378 <att_packet_handler.1746+0x186 : 1e0a820 >			  ## att_server.c:566:5
 1e0a6a6:    40 e0 18 11       	if (r0 != 4) goto 560 <att_packet_handler.1746+0x240 : 1e0a8da >
 1e0a6aa:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:569:13
 1e0a6ac:    80 e7 15 11       	if (r0 != 120) goto 554 <att_packet_handler.1746+0x240 : 1e0a8da >
 1e0a6b0:    00 a0             	r0 = sp + 0
 1e0a6b2:    bf f3 f6 ec       	call -9748 <hci_connections_get_iterator : 1e080a2 >			  ## att_server.c:507:5
 1e0a6b6:    bf f3 63 e5       	call -13626 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## att_server.c:508:12
 1e0a6ba:    cc ff e0 1c 00 00 	r12 = 7392 <att_global_info : 1ce0 >			  ## att_server.c:508:12
 1e0a6c0:    92 20             	if (r0 == 0) goto 292 <att_packet_handler.1746+0x14C : 1e0a7e6 >			  ## att_server.c:508:12
 1e0a6c2:    cb ff 60 18 00 00 	r11 = 6240 <report_irq_stack_end : 1860 >
 1e0a6c8:    09 70             	r9 = 0
 1e0a6ca:    c8 ff da a2 e0 01 	r8 = 31498970 <search_ios_ancs_server : 1e0a2da >
 1e0a6d0:    2a 70             	r10 = 2
 1e0a6d2:    00 a0             	r0 = sp + 0
 1e0a6d4:    bf f3 62 e5       	call -13628 <btstack_linked_list_iterator_next : 1e0719c >			  ## att_server.c:509:67
 1e0a6d8:    05 08             	r5 = r0			  ## att_server.c:509:67
 1e0a6da:    00 f9 99 52       	r0 = b[r5 + 665] (u)			  ## att_server.c:511:25
 1e0a6de:    20 f3 7e 00       	if ((r0 & 1) != 0) goto 252 <att_packet_handler.1746+0x144 : 1e0a7de >			  ## att_server.c:511:25
 1e0a6e2:    54 fc 5c 00       	r4 = r5 + 92
 1e0a6e6:    01 48             	r1 = [r4 + 0]			  ## att_server.c:515:25
 1e0a6e8:    57 fc 98 02       	r7 = r5 + 664			  ## att_server.c:515:25
 1e0a6ec:    31 e0 1d 10       	if (r1 != 3) goto 58 <att_packet_handler.1746+0x90 : 1e0a72a >			  ## att_server.c:515:13
 1e0a6f0:    bf f3 a7 fa       	call -2738 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## att_server.c:391:5
 1e0a6f4:    b2 59             	r2 = h[r4 + 54] (u)			  ## att_server.c:393:37
 1e0a6f6:    40 fc 2c 00       	r0 = r4 + 44			  ## att_server.c:393:69
 1e0a6fa:    46 fc 38 00       	r6 = r4 + 56			  ## att_server.c:393:81
 1e0a6fe:    b3 fc 10 00       	r3 = r11 + 16			  ## att_server.c:393:37
 1e0a702:    61 08             	r1 = r6			  ## att_server.c:393:37
 1e0a704:    bf f3 85 d3       	call -22774 <att_handle_request : 1e04e12 >			  ## att_server.c:393:37
 1e0a708:    01 08             	r1 = r0			  ## att_server.c:393:37
 1e0a70a:    41 e0 2a 30       	if (r1 < 4) goto 84 <att_packet_handler.1746+0xC8 : 1e0a762 >			  ## att_server.c:397:9
 1e0a70e:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:397:13
 1e0a712:    10 e0 35 10       	if (r0 != 1) goto 106 <att_packet_handler.1746+0xE6 : 1e0a780 >			  ## att_server.c:397:13
 1e0a716:    00 f9 14 b0       	r0 = b[r11 + 20] (u)			  ## att_server.c:398:9
 1e0a71a:    80 e0 31 10       	if (r0 != 8) goto 98 <att_packet_handler.1746+0xE6 : 1e0a780 >			  ## att_server.c:398:9
 1e0a71e:    00 f9 8f 50       	r0 = b[r5 + 143] (u)			  ## att_server.c:399:36
 1e0a722:    2e 20             	if (r0 == 0) goto 92 <att_packet_handler.1746+0xE6 : 1e0a780 >			  ## att_server.c:399:36
 1e0a724:    bf f3 f0 fc       	call -1568 <l2cap_release_packet_buffer : 1e0a108 >			  ## att_server.c:403:13
 1e0a728:    5a 18             	goto 180 <att_packet_handler.1746+0x144 : 1e0a7de >			  ## att_server.c:403:13
 1e0a72a:    25 f3 58 00       	if ((r0 & 32) != 0) goto 176 <att_packet_handler.1746+0x144 : 1e0a7de >
 1e0a72e:    21 f3 3d 00       	if ((r0 & 2) != 0) goto 122 <att_packet_handler.1746+0x112 : 1e0a7ac >
 1e0a732:    20 fd 1c 09       	r0 = r0 & 28			  ## att_server.c:529:36
 1e0a736:    40 e0 52 10       	if (r0 != 4) goto 164 <att_packet_handler.1746+0x144 : 1e0a7de >			  ## att_server.c:529:36
 1e0a73a:    bf f3 82 fa       	call -2812 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## att_server.c:368:10
 1e0a73e:    4e 20             	if (r0 == 0) goto 156 <att_packet_handler.1746+0x142 : 1e0a7dc >			  ## att_server.c:368:10
 1e0a740:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:373:5
 1e0a744:    72 71             	r2 = 23			  ## att_server.c:373:5
 1e0a746:    81 08             	r1 = r8			  ## att_server.c:373:5
 1e0a748:    97 f3 cc e3       	call 3131288 <memcpy : 106ee4 >			  ## att_server.c:373:5
 1e0a74c:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:375:9
 1e0a74e:    71 71             	r1 = 23			  ## att_server.c:375:9
 1e0a750:    bf f3 81 fa       	call -2814 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## att_server.c:375:9
 1e0a754:    3b 30             	if (r0 != 0) goto 118 <att_packet_handler.1746+0x132 : 1e0a7cc >			  ## att_server.c:375:9
 1e0a756:    10 6e             	r0 = b[r7 + 1] (u)			  ## att_server.c:380:34
 1e0a758:    20 fd c3 09       	r0 = r0 & 195			  ## att_server.c:380:34
 1e0a75c:    00 fd 28 09       	r0 = r0 | 40			  ## att_server.c:531:46
 1e0a760:    3c 18             	goto 120 <att_packet_handler.1746+0x140 : 1e0a7da >			  ## att_server.c:531:46
 1e0a762:    19 f6 00 40       	[r4 + 0] = r9			  ## att_server.c:416:23
 1e0a766:    0e 32             	if (r1 != 0) goto 28 <att_packet_handler.1746+0xEA : 1e0a784 >			  ## att_server.c:416:23
 1e0a768:    bf f3 ce fc       	call -1636 <l2cap_release_packet_buffer : 1e0a108 >			  ## att_server.c:419:9
 1e0a76c:    00 6c             	r0 = b[r6 + 0] (u)			  ## att_server.c:422:13
 1e0a76e:    30 e0 36 10       	if (r0 != 3) goto 108 <att_packet_handler.1746+0x144 : 1e0a7de >			  ## att_server.c:422:13
 1e0a772:    10 6e             	r0 = b[r7 + 1] (u)			  ## att_server.c:423:38
 1e0a774:    f0 b2             	r0 &= 4294967263			  ## att_server.c:423:38
 1e0a776:    18 6e             	b[r7 + 1] = r0			  ## att_server.c:423:38
 1e0a778:    71 59             	r1 = h[r4 + 46] (u)			  ## att_server.c:425:13
 1e0a77a:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:425:13
 1e0a77c:    4c 17             	call -360 <att_emit_mtu_event : 1e0a616 >			  ## att_server.c:425:13
 1e0a77e:    2f 18             	goto 94 <att_packet_handler.1746+0x144 : 1e0a7de >			  ## att_server.c:425:13
 1e0a780:    19 f6 00 40       	[r4 + 0] = r9			  ## att_server.c:416:23
 1e0a784:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:430:5
 1e0a786:    bf f3 66 fa       	call -2868 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## att_server.c:430:5
 1e0a78a:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:434:9
 1e0a78e:    30 e0 03 10       	if (r0 != 3) goto 6 <att_packet_handler.1746+0xFE : 1e0a798 >			  ## att_server.c:434:9
 1e0a792:    71 59             	r1 = h[r4 + 46] (u)			  ## att_server.c:436:9
 1e0a794:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:436:9
 1e0a796:    3f 17             	call -386 <att_emit_mtu_event : 1e0a616 >			  ## att_server.c:436:9
 1e0a798:    00 f9 38 c0       	r0 = b[r12 + 56] (u)			  ## att_server.c:519:34
 1e0a79c:    20 f3 3e 00       	if ((r0 & 1) != 0) goto 124 <att_packet_handler.1746+0x182 : 1e0a81c >			  ## att_server.c:519:34
 1e0a7a0:    00 f6 34 c0       	r0 = [r12 + 52]
 1e0a7a4:    bf f3 b7 fc       	call -1682 <btstack_linked_list_empty : 1e0a116 >			  ## att_server.c:519:63
 1e0a7a8:    1a 30             	if (r0 != 0) goto 52 <att_packet_handler.1746+0x144 : 1e0a7de >			  ## att_server.c:519:63
 1e0a7aa:    38 18             	goto 112 <att_packet_handler.1746+0x182 : 1e0a81c >			  ## att_server.c:519:63
 1e0a7ac:    bf f3 49 fa       	call -2926 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## att_server.c:329:10
 1e0a7b0:    15 20             	if (r0 == 0) goto 42 <att_packet_handler.1746+0x142 : 1e0a7dc >			  ## att_server.c:329:10
 1e0a7b2:    1a f9 10 b0       	b[r11 + 16] = r10			  ## att_server.c:333:16
 1e0a7b6:    82 59             	r2 = h[r4 + 48] (u)			  ## att_server.c:334:5
 1e0a7b8:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:333:16
 1e0a7bc:    11 70             	r1 = 1			  ## att_server.c:334:5
 1e0a7be:    bf f3 42 fa       	call -2940 <little_endian_store_16 : 1e09c46 >			  ## att_server.c:334:5
 1e0a7c2:    60 59             	r0 = h[r4 + 44] (u)			  ## att_server.c:335:9
 1e0a7c4:    31 70             	r1 = 3			  ## att_server.c:335:9
 1e0a7c6:    bf f3 46 fa       	call -2932 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## att_server.c:335:9
 1e0a7ca:    03 20             	if (r0 == 0) goto 6 <att_packet_handler.1746+0x138 : 1e0a7d2 >			  ## att_server.c:335:9
 1e0a7cc:    bf f3 9c fc       	call -1736 <l2cap_release_packet_buffer : 1e0a108 >
 1e0a7d0:    05 18             	goto 10 <att_packet_handler.1746+0x142 : 1e0a7dc >
 1e0a7d2:    10 6e             	r0 = b[r7 + 1] (u)			  ## att_server.c:340:34
 1e0a7d4:    20 fd dd 09       	r0 = r0 & 221			  ## att_server.c:340:34
 1e0a7d8:    90 b2             	r0 |= 32			  ## att_server.c:526:46
 1e0a7da:    18 6e             	b[r7 + 1] = r0
 1e0a7dc:    b8 15             	call -1168 <att_dispatch_server_request_can_send_now_event : 1e0a34e >
 1e0a7de:    00 a0             	r0 = sp + 0
 1e0a7e0:    bf f3 ce e4       	call -13924 <btstack_linked_list_iterator_has_next : 1e07180 >			  ## att_server.c:508:12
 1e0a7e4:    76 31             	if (r0 != 0) goto -276 <att_packet_handler.1746+0x38 : 1e0a6d2 >
 1e0a7e6:    03 f6 34 c0       	r3 = [r12 + 52]
 1e0a7ea:    30 08             	r0 = r3			  ## att_server.c:538:13
 1e0a7ec:    bf f3 93 fc       	call -1754 <btstack_linked_list_empty : 1e0a116 >			  ## att_server.c:538:13
 1e0a7f0:    45 30             	if (r0 != 0) goto 138 <att_packet_handler.1746+0x1E2 : 1e0a87c >			  ## att_server.c:538:13
 1e0a7f2:    44 56             	r4 = h[r3 + 8] (u)			  ## att_server.c:546:14
 1e0a7f4:    c0 fc 34 00       	r0 = r12 + 52			  ## att_server.c:542:9
 1e0a7f8:    31 08             	r1 = r3			  ## att_server.c:542:9
 1e0a7fa:    bf f3 a5 e3       	call -14518 <btstack_linked_list_remove : 1e06f48 >			  ## att_server.c:542:9
 1e0a7fe:    20 46             	r0 = [r3 + 8]			  ## att_server.c:543:34
 1e0a800:    11 46             	r1 = [r3 + 4]			  ## att_server.c:543:17
 1e0a802:    81 00             	call r1			  ## att_server.c:543:9
 1e0a804:    40 08             	r0 = r4			  ## att_server.c:546:14
 1e0a806:    b5 15             	call -1174 <att_dispatch_server_can_send_now : 1e0a372 >			  ## att_server.c:546:14
 1e0a808:    ee 31             	if (r0 != 0) goto -36 <att_packet_handler.1746+0x14C : 1e0a7e6 >			  ## att_server.c:546:14
 1e0a80a:    00 f6 34 c0       	r0 = [r12 + 52]
 1e0a80e:    bf f3 82 fc       	call -1788 <btstack_linked_list_empty : 1e0a116 >			  ## att_server.c:547:18
 1e0a812:    04 20             	if (r0 == 0) goto 8 <att_packet_handler.1746+0x182 : 1e0a81c >			  ## att_server.c:547:18
 1e0a814:    00 f9 38 c0       	r0 = b[r12 + 56] (u)			  ## att_server.c:547:77
 1e0a818:    00 f3 5f 00       	if ((r0 & 1) == 0) goto 190 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:547:77
 1e0a81c:    98 15             	call -1232 <att_dispatch_server_request_can_send_now_event : 1e0a34e >
 1e0a81e:    5d 18             	goto 186 <att_packet_handler.1746+0x240 : 1e0a8da >
 1e0a820:    10 08             	r0 = r1			  ## att_server.c:577:22
 1e0a822:    9d 15             	call -1222 <att_server_for_handle : 1e0a35e >			  ## att_server.c:577:22
 1e0a824:    06 08             	r6 = r0			  ## att_server.c:577:22
 1e0a826:    59 2c             	if (r6 == 0) goto 178 <att_packet_handler.1746+0x240 : 1e0a8da >
 1e0a828:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:584:13
 1e0a82a:    20 e5 3a 00       	if (r0 == 82) goto 116 <att_packet_handler.1746+0x208 : 1e0a8a2 >			  ## att_server.c:584:56
 1e0a82e:    e0 e1 0b 10       	if (r0 != 30) goto 22 <att_packet_handler.1746+0x1AE : 1e0a848 >
 1e0a832:    51 4c             	r1 = [r6 + 20]			  ## att_server.c:584:71
 1e0a834:    09 22             	if (r1 == 0) goto 18 <att_packet_handler.1746+0x1AE : 1e0a848 >			  ## att_server.c:584:71
 1e0a836:    70 4c             	r0 = [r6 + 28]
 1e0a838:    bf f3 d7 f7       	call -4178 <btstack_run_loop_remove_timer : 1e097ea >			  ## att_server.c:160:5
 1e0a83c:    a2 5c             	r2 = h[r6 + 20] (u)			  ## att_server.c:588:13
 1e0a83e:    00 70             	r0 = 0			  ## att_server.c:588:13
 1e0a840:    58 4c             	[r6 + 20] = r0			  ## att_server.c:587:49
 1e0a842:    61 5d             	r1 = h[r6 + 44] (u)			  ## att_server.c:588:13
 1e0a844:    08 17             	call -496 <att_handle_value_indication_notify_client : 1e0a656 >			  ## att_server.c:588:13
 1e0a846:    49 18             	goto 146 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:588:13
 1e0a848:    08 ff 05 52 46 00 	if (r5 > 517) goto 140 <att_packet_handler.1746+0x240 : 1e0a8da >
 1e0a84e:    01 4c             	r1 = [r6 + 0]			  ## att_server.c:607:25
 1e0a850:    44 32             	if (r1 != 0) goto 136 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:607:25
 1e0a852:    61 fc 3c 02       	r1 = r6 + 572
 1e0a856:    12 62             	r2 = b[r1 + 1] (u)			  ## att_server.c:612:30
 1e0a858:    23 fd 1c 29       	r3 = r2 & 28			  ## att_server.c:612:30
 1e0a85c:    83 e0 32 10       	if (r3 != 8) goto 100 <att_packet_handler.1746+0x22A : 1e0a8c4 >			  ## att_server.c:612:30
 1e0a860:    10 e0 27 00       	if (r0 == 1) goto 78 <att_packet_handler.1746+0x218 : 1e0a8b2 >			  ## att_server.c:613:13
 1e0a864:    70 e0 2e 10       	if (r0 != 7) goto 92 <att_packet_handler.1746+0x22A : 1e0a8c4 >
 1e0a868:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:617:46
 1e0a86c:    00 fd 14 09       	r0 = r0 | 20			  ## att_server.c:617:46
 1e0a870:    18 62             	b[r1 + 1] = r0			  ## att_server.c:618:42
 1e0a872:    12 42             	r2 = [r1 + 4]			  ## att_server.c:619:33
 1e0a874:    27 24             	if (r2 == 0) goto 78 <att_packet_handler.1746+0x22A : 1e0a8c4 >			  ## att_server.c:619:33
 1e0a876:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:620:21
 1e0a878:    21 70             	r1 = 2			  ## att_server.c:620:21
 1e0a87a:    23 18             	goto 70 <att_packet_handler.1746+0x228 : 1e0a8c2 >			  ## att_server.c:620:21
 1e0a87c:    00 f9 38 c0       	r0 = b[r12 + 56] (u)			  ## att_server.c:554:17
 1e0a880:    00 f3 2b 00       	if ((r0 & 1) == 0) goto 86 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:554:17
 1e0a884:    70 b0             	r0 &= 4294967294			  ## att_server.c:555:42
 1e0a886:    10 f9 38 c0       	b[r12 + 56] = r0			  ## att_server.c:555:42
 1e0a88a:    04 f6 30 c0       	r4 = [r12 + 48]			  ## att_server.c:150:18
 1e0a88e:    25 28             	if (r4 == 0) goto 74 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:150:18
 1e0a890:    70 7b             	r0 = 183			  ## att_server.c:154:13
 1e0a892:    90 f5 0e 00       	h[sp+14] = r0			  ## att_server.c:154:13
 1e0a896:    e2 a0             	r2 = sp + 14			  ## att_server.c:154:13
 1e0a898:    40 70             	r0 = 4			  ## att_server.c:155:5
 1e0a89a:    01 70             	r1 = 0			  ## att_server.c:155:5
 1e0a89c:    23 70             	r3 = 2			  ## att_server.c:155:5
 1e0a89e:    84 00             	call r4			  ## att_server.c:155:5
 1e0a8a0:    1c 18             	goto 56 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:155:5
 1e0a8a2:    60 fc 2c 00       	r0 = r6 + 44			  ## att_server.c:596:45
 1e0a8a6:    03 70             	r3 = 0			  ## att_server.c:596:13
 1e0a8a8:    41 08             	r1 = r4			  ## att_server.c:596:13
 1e0a8aa:    52 08             	r2 = r5			  ## att_server.c:596:13
 1e0a8ac:    bf f3 b1 d2       	call -23198 <att_handle_request : 1e04e12 >			  ## att_server.c:596:13
 1e0a8b0:    14 18             	goto 40 <att_packet_handler.1746+0x240 : 1e0a8da >			  ## att_server.c:596:13
 1e0a8b2:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:627:46
 1e0a8b6:    10 b2             	r0 |= 16			  ## att_server.c:627:46
 1e0a8b8:    18 62             	b[r1 + 1] = r0			  ## att_server.c:628:42
 1e0a8ba:    12 42             	r2 = [r1 + 4]			  ## att_server.c:629:33
 1e0a8bc:    03 24             	if (r2 == 0) goto 6 <att_packet_handler.1746+0x22A : 1e0a8c4 >			  ## att_server.c:629:33
 1e0a8be:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:630:21
 1e0a8c0:    11 70             	r1 = 1			  ## att_server.c:630:21
 1e0a8c2:    82 00             	call r2
 1e0a8c4:    c0 f4 01 69       	[r6 + 0] = 1			  ## att_server.c:640:27
 1e0a8c8:    bd 5d             	h[r6 + 54] = r5			  ## att_server.c:641:34
 1e0a8ca:    60 fc 38 00       	r0 = r6 + 56			  ## att_server.c:642:9
 1e0a8ce:    41 08             	r1 = r4			  ## att_server.c:642:9
 1e0a8d0:    52 08             	r2 = r5			  ## att_server.c:642:9
 1e0a8d2:    97 f3 07 e3       	call 3130894 <memcpy : 106ee4 >			  ## att_server.c:642:9
 1e0a8d6:    60 08             	r0 = r6			  ## att_server.c:644:9
 1e0a8d8:    05 16             	call -1014 <att_run_for_context : 1e0a4e4 >			  ## att_server.c:644:9
 1e0a8da:    08 0a             	sp += 16
 1e0a8dc:    5c 01             	{pc, r12-r4} = [sp++]			  ## att_server.c:647:1


att_handle_value_indication_timeout:
 1e0a8de:    34 00             	[--sp] = rets			  ## att_server.c:164:0
 1e0a8e0:    40 40             	r0 = [r0 + 16]			  ## att_server.c:165:52
 1e0a8e2:    04 20             	if (r0 == 0) goto 8 <att_handle_value_indication_timeout+0xE : 1e0a8ec >
 1e0a8e4:    61 51             	r1 = h[r0 + 44] (u)			  ## att_server.c:172:5
 1e0a8e6:    a2 50             	r2 = h[r0 + 20] (u)			  ## att_server.c:172:5
 1e0a8e8:    10 79             	r0 = 145			  ## att_server.c:172:5
 1e0a8ea:    b5 16             	call -662 <att_handle_value_indication_notify_client : 1e0a656 >			  ## att_server.c:172:5
 1e0a8ec:    30 00             	pc = [sp++]			  ## att_server.c:173:1


provide_context_for_conn_handle:
 1e0a8ee:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:217:0
 1e0a8f0:    c5 ff 1c 1d 00 00 	r5 = 7452 <gatt_client_global_info : 1d1c >			  ## gatt_client.c:217:0
 1e0a8f6:    04 4a             	r4 = [r5 + 0]			  ## gatt_client.c:217:0
 1e0a8f8:    06 08             	r6 = r0			  ## gatt_client.c:217:0
 1e0a8fa:    05 28             	if (r4 == 0) goto 10 <provide_context_for_conn_handle+0x18 : 1e0a906 >			  ## gatt_client.c:217:0
 1e0a8fc:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:206:25
 1e0a8fe:    60 f2 1a 00       	if (r0 == r6) goto 52 <provide_context_for_conn_handle+0x48 : 1e0a936 >			  ## gatt_client.c:206:25
 1e0a902:    04 48             	r4 = [r4 + 0]
 1e0a904:    fb 39             	if (r4 != 0) goto -10 <provide_context_for_conn_handle+0xE : 1e0a8fc >
 1e0a906:    bf f3 e7 f9       	call -3122 <btstack_memory_gatt_client_get : 1e09cd8 >			  ## gatt_client.c:223:15
 1e0a90a:    04 08             	r4 = r0			  ## gatt_client.c:223:15
 1e0a90c:    13 28             	if (r4 == 0) goto 38 <provide_context_for_conn_handle+0x46 : 1e0a934 >			  ## gatt_client.c:223:15
 1e0a90e:    01 70             	r1 = 0			  ## gatt_client.c:228:5
 1e0a910:    02 78             	r2 = 128			  ## gatt_client.c:228:5
 1e0a912:    07 70             	r7 = 0			  ## gatt_client.c:228:5
 1e0a914:    97 f3 ec e2       	call 3130840 <memset : 106ef0 >			  ## gatt_client.c:228:5
 1e0a918:    6e 58             	h[r4 + 12] = r6			  ## gatt_client.c:229:25
 1e0a91a:    70 71             	r0 = 23			  ## gatt_client.c:230:18
 1e0a91c:    b8 58             	h[r4 + 22] = r0			  ## gatt_client.c:230:18
 1e0a91e:    6f 48             	[r4 + 24] = r7			  ## gatt_client.c:231:24
 1e0a920:    1f 48             	[r4 + 4] = r7			  ## gatt_client.c:232:32
 1e0a922:    50 08             	r0 = r5			  ## gatt_client.c:233:5
 1e0a924:    41 08             	r1 = r4			  ## gatt_client.c:233:5
 1e0a926:    bf f3 ef ed       	call -9250 <btstack_linked_list_add : 1e08508 >			  ## gatt_client.c:233:5
 1e0a92a:    40 6b             	r0 = b[r5 + 20] (u)			  ## gatt_client.c:236:17
 1e0a92c:    04 20             	if (r0 == 0) goto 8 <provide_context_for_conn_handle+0x48 : 1e0a936 >			  ## gatt_client.c:236:17
 1e0a92e:    c6 f4 02 49       	[r4 + 24] = 2			  ## gatt_client.c:237:28
 1e0a932:    01 18             	goto 2 <provide_context_for_conn_handle+0x48 : 1e0a936 >			  ## gatt_client.c:237:28
 1e0a934:    04 70             	r4 = 0
 1e0a936:    40 08             	r0 = r4			  ## gatt_client.c:240:1
 1e0a938:    57 01             	{pc, r7-r4} = [sp++]			  ## gatt_client.c:240:1


peripheral_mtu:
 1e0a93a:    34 00             	[--sp] = rets			  ## gatt_client.c:146:0
 1e0a93c:    02 08             	r2 = r0			  ## gatt_client.c:146:0
 1e0a93e:    a3 04             	r3 = r2.l (u)			  ## gatt_client.c:146:0
 1e0a940:    bf f3 d5 f9       	call -3158 <l2cap_max_le_mtu : 1e09cee >			  ## gatt_client.c:147:27
 1e0a944:    30 f2 01 30       	if (r0 < r3) goto 2 <peripheral_mtu+0x10 : 1e0a94a >			  ## gatt_client.c:147:27
 1e0a948:    20 08             	r0 = r2			  ## gatt_client.c:147:9
 1e0a94a:    20 04             	r0 = r0.l (u)			  ## gatt_client.c:152:1
 1e0a94c:    30 00             	pc = [sp++]			  ## gatt_client.c:152:1


att_write_request:
 1e0a94e:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:406:0
 1e0a950:    34 08             	r4 = r3			  ## gatt_client.c:406:0
 1e0a952:    23 08             	r3 = r2			  ## gatt_client.c:406:0
 1e0a954:    15 08             	r5 = r1			  ## gatt_client.c:406:0
 1e0a956:    06 08             	r6 = r0			  ## gatt_client.c:406:0
 1e0a958:    bf f3 73 f9       	call -3354 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:407:5
 1e0a95c:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:411:5
 1e0a962:    0e 6f             	b[r7 + 16] = r6			  ## gatt_client.c:409:16
 1e0a964:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:409:16
 1e0a966:    11 70             	r1 = 1			  ## gatt_client.c:410:5
 1e0a968:    32 08             	r2 = r3			  ## gatt_client.c:410:5
 1e0a96a:    bf f3 6c f9       	call -3368 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:410:5
 1e0a96e:    51 02             	r1 = [sp+20]
 1e0a970:    30 9f             	r0 = r7 + 19			  ## gatt_client.c:411:5
 1e0a972:    42 08             	r2 = r4			  ## gatt_client.c:411:5
 1e0a974:    97 f3 b6 e2       	call 3130732 <memcpy : 106ee4 >			  ## gatt_client.c:411:5
 1e0a978:    30 98             	r0 = r4 + 3			  ## gatt_client.c:413:91
 1e0a97a:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:413:5
 1e0a97c:    50 08             	r0 = r5			  ## gatt_client.c:413:5
 1e0a97e:    17 01             	{rets, r7-r4} = [sp++]			  ## gatt_client.c:413:5
 1e0a980:    ff f3 69 f9       	goto -3374 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:413:5


gatt_client_write_value_of_characteristic_without_response:
 1e0a984:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:2053:0
 1e0a986:    fe 0b             	sp += -4			  ## gatt_client.c:2053:0
 1e0a988:    35 08             	r5 = r3			  ## gatt_client.c:2053:0
 1e0a98a:    24 08             	r4 = r2			  ## gatt_client.c:2053:0
 1e0a98c:    16 08             	r6 = r1			  ## gatt_client.c:2053:0
 1e0a98e:    af 17             	call -162 <provide_context_for_conn_handle : 1e0a8ee >			  ## gatt_client.c:2054:33
 1e0a990:    07 08             	r7 = r0			  ## gatt_client.c:2054:33
 1e0a992:    16 2e             	if (r7 == 0) goto 44 <gatt_client_write_value_of_characteristic_without_response+0x3C : 1e0a9c0 >
 1e0a994:    11 4e             	r1 = [r7 + 4]			  ## gatt_client.c:254:21
 1e0a996:    50 79             	r0 = 149			  ## gatt_client.c:254:21
 1e0a998:    14 32             	if (r1 != 0) goto 40 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0a9c2 >			  ## gatt_client.c:254:21
 1e0a99a:    b0 5e             	r0 = h[r7 + 22] (u)			  ## gatt_client.c:2067:24
 1e0a99c:    ce 17             	call -100 <peripheral_mtu : 1e0a93a >			  ## gatt_client.c:2067:24
 1e0a99e:    01 fc fd ff       	r1 = r0 + -3			  ## gatt_client.c:2067:51
 1e0a9a2:    70 79             	r0 = 151			  ## gatt_client.c:2067:51
 1e0a9a4:    14 f2 0d c0       	ifs (r4 > r1) goto 26 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0a9c2 >			  ## gatt_client.c:2067:51
 1e0a9a8:    60 5e             	r0 = h[r7 + 12] (u)			  ## gatt_client.c:2070:10
 1e0a9aa:    bf f3 50 fd       	call -1376 <att_dispatch_client_can_send_now : 1e0a44e >			  ## gatt_client.c:2070:10
 1e0a9ae:    0b 20             	if (r0 == 0) goto 22 <gatt_client_write_value_of_characteristic_without_response+0x42 : 1e0a9c6 >			  ## gatt_client.c:2070:10
 1e0a9b0:    61 5e             	r1 = h[r7 + 12] (u)			  ## gatt_client.c:2074:5
 1e0a9b2:    20 75             	r0 = 82			  ## gatt_client.c:2074:5
 1e0a9b4:    0d 02             	[sp] = r5			  ## gatt_client.c:2074:5
 1e0a9b6:    62 08             	r2 = r6			  ## gatt_client.c:2074:5
 1e0a9b8:    43 08             	r3 = r4			  ## gatt_client.c:2074:5
 1e0a9ba:    c9 17             	call -110 <att_write_request : 1e0a94e >			  ## gatt_client.c:2074:5
 1e0a9bc:    00 70             	r0 = 0			  ## gatt_client.c:2074:5
 1e0a9be:    01 18             	goto 2 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0a9c2 >			  ## gatt_client.c:2074:5
 1e0a9c0:    60 75             	r0 = 86
 1e0a9c2:    02 0a             	sp += 4
 1e0a9c4:    57 01             	{pc, r7-r4} = [sp++]			  ## gatt_client.c:2076:1
 1e0a9c6:    40 79             	r0 = 148
 1e0a9c8:    fc 1f             	goto -8 <gatt_client_write_value_of_characteristic_without_response+0x3E : 1e0a9c2 >


gatt_client_timeout_stop:
 1e0a9ca:    90 41             	r0 = [r0 + 100]			  ## gatt_client.c:183:0
 1e0a9cc:    ff f3 0d f7       	goto -4582 <btstack_run_loop_remove_timer : 1e097ea >			  ## gatt_client.c:185:5


provide_context_for_conn_handle_and_start_timer:
 1e0a9d0:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:243:0
 1e0a9d2:    8d 17             	call -230 <provide_context_for_conn_handle : 1e0a8ee >			  ## gatt_client.c:244:30
 1e0a9d4:    04 08             	r4 = r0			  ## gatt_client.c:244:30
 1e0a9d6:    11 28             	if (r4 == 0) goto 34 <provide_context_for_conn_handle_and_start_timer+0x2A : 1e0a9fa >
 1e0a9d8:    f8 17             	call -16 <gatt_client_timeout_stop : 1e0a9ca >			  ## gatt_client.c:191:5
 1e0a9da:    00 70             	r0 = 0			  ## gatt_client.c:193:5
 1e0a9dc:    98 49             	[r4 + 100] = r0			  ## gatt_client.c:193:5
 1e0a9de:    88 49             	[r4 + 96] = r0			  ## gatt_client.c:193:5
 1e0a9e0:    da f4 1e 49       	[r4 + 104] = 30			  ## gatt_client.c:194:45
 1e0a9e4:    c0 ff 6c b0 e0 01 	r0 = 31502444 <gatt_client_timeout_handler : 1e0b06c >			  ## gatt_client.c:195:36
 1e0a9ea:    b8 49             	[r4 + 108] = r0			  ## gatt_client.c:195:36
 1e0a9ec:    cc 49             	[r4 + 112] = r4			  ## gatt_client.c:196:36
 1e0a9ee:    40 fc 60 00       	r0 = r4 + 96			  ## gatt_client.c:193:25
 1e0a9f2:    31 78             	r1 = 131			  ## gatt_client.c:197:5
 1e0a9f4:    bf f3 52 f9       	call -3420 <btstack_set_timer : 1e09c9c >			  ## gatt_client.c:197:5
 1e0a9f8:    01 18             	goto 2 <provide_context_for_conn_handle_and_start_timer+0x2C : 1e0a9fc >			  ## gatt_client.c:197:5
 1e0a9fa:    04 70             	r4 = 0
 1e0a9fc:    40 08             	r0 = r4			  ## gatt_client.c:250:1
 1e0a9fe:    54 01             	{pc, r4} = [sp++]			  ## gatt_client.c:250:1


emit_gatt_complete_event:
 1e0aa00:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:659:0
 1e0aa02:    fc 0b             	sp += -8			  ## gatt_client.c:659:0
 1e0aa04:    03 08             	r3 = r0			  ## gatt_client.c:659:0
 1e0aa06:    00 7a             	r0 = 160			  ## gatt_client.c:662:15
 1e0aa08:    d0 f5 03 00       	b[sp+3] = r0			  ## gatt_client.c:662:15
 1e0aa0c:    30 70             	r0 = 3			  ## gatt_client.c:663:15
 1e0aa0e:    d0 f5 04 00       	b[sp+4] = r0			  ## gatt_client.c:663:15
 1e0aa12:    62 56             	r2 = h[r3 + 12] (u)			  ## gatt_client.c:664:5
 1e0aa14:    14 08             	r4 = r1			  ## gatt_client.c:664:5
 1e0aa16:    30 a0             	r0 = sp + 3
 1e0aa18:    21 70             	r1 = 2			  ## gatt_client.c:664:5
 1e0aa1a:    bf f3 14 f9       	call -3544 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:664:5
 1e0aa1e:    d4 f5 07 00       	b[sp+7] = r4			  ## gatt_client.c:665:15
 1e0aa22:    24 46             	r4 = [r3 + 8]			  ## gatt_client.c:666:32
 1e0aa24:    05 28             	if (r4 == 0) goto 10 <emit_gatt_complete_event+0x30 : 1e0aa30 >
 1e0aa26:    32 a0             	r2 = sp + 3
 1e0aa28:    40 70             	r0 = 4			  ## gatt_client.c:624:5
 1e0aa2a:    01 70             	r1 = 0			  ## gatt_client.c:624:5
 1e0aa2c:    53 70             	r3 = 5			  ## gatt_client.c:624:5
 1e0aa2e:    84 00             	call r4			  ## gatt_client.c:624:5
 1e0aa30:    04 0a             	sp += 8
 1e0aa32:    54 01             	{pc, r4} = [sp++]			  ## gatt_client.c:667:1


att_read_by_type_or_group_request_for_uuid16:
 1e0aa34:    76 01             	[--sp] = {rets, r6-r4}			  ## gatt_client.c:328:0
 1e0aa36:    24 08             	r4 = r2			  ## gatt_client.c:328:0
 1e0aa38:    15 08             	r5 = r1			  ## gatt_client.c:328:0
 1e0aa3a:    06 08             	r6 = r0			  ## gatt_client.c:328:0
 1e0aa3c:    bf f3 01 f9       	call -3582 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:329:5
 1e0aa40:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:331:16
 1e0aa46:    0e 61             	b[r0 + 16] = r6			  ## gatt_client.c:331:16
 1e0aa48:    00 81             	r0 += 16			  ## gatt_client.c:331:16
 1e0aa4a:    11 70             	r1 = 1			  ## gatt_client.c:332:5
 1e0aa4c:    32 08             	r2 = r3			  ## gatt_client.c:332:5
 1e0aa4e:    bf f3 fa f8       	call -3596 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:332:5
 1e0aa52:    42 02             	r2 = [sp+16]
 1e0aa54:    31 70             	r1 = 3			  ## gatt_client.c:333:5
 1e0aa56:    bf f3 f6 f8       	call -3604 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:333:5
 1e0aa5a:    51 70             	r1 = 5			  ## gatt_client.c:334:5
 1e0aa5c:    52 08             	r2 = r5			  ## gatt_client.c:334:5
 1e0aa5e:    bf f3 f2 f8       	call -3612 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:334:5
 1e0aa62:    71 70             	r1 = 7			  ## gatt_client.c:336:5
 1e0aa64:    40 08             	r0 = r4			  ## gatt_client.c:336:5
 1e0aa66:    16 01             	{rets, r6-r4} = [sp++]			  ## gatt_client.c:336:5
 1e0aa68:    ff f3 f5 f8       	goto -3606 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:336:5


att_find_by_type_value_request:
 1e0aa6c:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:300:0
 1e0aa6e:    25 08             	r5 = r2			  ## gatt_client.c:300:0
 1e0aa70:    16 08             	r6 = r1			  ## gatt_client.c:300:0
 1e0aa72:    04 08             	r4 = r0			  ## gatt_client.c:300:0
 1e0aa74:    bf f3 e5 f8       	call -3638 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:301:5
 1e0aa78:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:308:5
 1e0aa7e:    60 70             	r0 = 6			  ## gatt_client.c:304:16
 1e0aa80:    08 6f             	b[r7 + 16] = r0			  ## gatt_client.c:304:16
 1e0aa82:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:304:16
 1e0aa84:    11 70             	r1 = 1			  ## gatt_client.c:305:5
 1e0aa86:    62 08             	r2 = r6			  ## gatt_client.c:305:5
 1e0aa88:    bf f3 dd f8       	call -3654 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:305:5
 1e0aa8c:    31 70             	r1 = 3			  ## gatt_client.c:306:5
 1e0aa8e:    52 08             	r2 = r5			  ## gatt_client.c:306:5
 1e0aa90:    bf f3 d9 f8       	call -3662 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:306:5
 1e0aa94:    51 70             	r1 = 5			  ## gatt_client.c:307:5
 1e0aa96:    02 fb 00 28       	r2 = 10240 <lrc.7+0x80 : 2800 >			  ## gatt_client.c:307:5
 1e0aa9a:    bf f3 d4 f8       	call -3672 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:307:5
 1e0aa9e:    55 02             	r5 = [sp+20]			  ## gatt_client.c:307:5
 1e0aaa0:    70 9f             	r0 = r7 + 23			  ## gatt_client.c:308:5
 1e0aaa2:    31 08             	r1 = r3			  ## gatt_client.c:308:5
 1e0aaa4:    52 08             	r2 = r5			  ## gatt_client.c:308:5
 1e0aaa6:    97 f3 1d e2       	call 3130426 <memcpy : 106ee4 >			  ## gatt_client.c:308:5
 1e0aaaa:    70 9a             	r0 = r5 + 7			  ## gatt_client.c:310:91
 1e0aaac:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:310:5
 1e0aaae:    40 08             	r0 = r4			  ## gatt_client.c:310:5
 1e0aab0:    17 01             	{rets, r7-r4} = [sp++]			  ## gatt_client.c:310:5
 1e0aab2:    ff f3 d0 f8       	goto -3680 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:310:5


att_read_by_type_or_group_request_for_uuid128:
 1e0aab6:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:341:0
 1e0aab8:    24 08             	r4 = r2			  ## gatt_client.c:341:0
 1e0aaba:    15 08             	r5 = r1			  ## gatt_client.c:341:0
 1e0aabc:    06 08             	r6 = r0			  ## gatt_client.c:341:0
 1e0aabe:    bf f3 c0 f8       	call -3712 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:342:5
 1e0aac2:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:347:5
 1e0aac8:    80 70             	r0 = 8			  ## gatt_client.c:344:16
 1e0aaca:    08 6f             	b[r7 + 16] = r0			  ## gatt_client.c:344:16
 1e0aacc:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:344:16
 1e0aace:    11 70             	r1 = 1			  ## gatt_client.c:345:5
 1e0aad0:    42 08             	r2 = r4			  ## gatt_client.c:345:5
 1e0aad2:    bf f3 b8 f8       	call -3728 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:345:5
 1e0aad6:    31 70             	r1 = 3			  ## gatt_client.c:346:5
 1e0aad8:    32 08             	r2 = r3			  ## gatt_client.c:346:5
 1e0aada:    bf f3 b4 f8       	call -3736 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:346:5
 1e0aade:    51 9f             	r1 = r7 + 21			  ## gatt_client.c:347:5
 1e0aae0:    60 08             	r0 = r6			  ## gatt_client.c:347:5
 1e0aae2:    bf f3 0d f9       	call -3558 <reverse_128 : 1e09d00 >			  ## gatt_client.c:347:5
 1e0aae6:    51 71             	r1 = 21			  ## gatt_client.c:349:5
 1e0aae8:    50 08             	r0 = r5			  ## gatt_client.c:349:5
 1e0aaea:    17 01             	{rets, r7-r4} = [sp++]			  ## gatt_client.c:349:5
 1e0aaec:    ff f3 b3 f8       	goto -3738 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:349:5


send_gatt_characteristic_request:
 1e0aaf0:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:511:0
 1e0aaf2:    fe 0b             	sp += -4			  ## gatt_client.c:511:0
 1e0aaf4:    01 f9 50 00       	r1 = b[r0 + 80] (u)			  ## gatt_client.c:512:21
 1e0aaf8:    09 22             	if (r1 == 0) goto 18 <send_gatt_characteristic_request+0x1C : 1e0ab0c >			  ## gatt_client.c:512:21
 1e0aafa:    84 51             	r4 = h[r0 + 48] (u)			  ## gatt_client.c:516:174
 1e0aafc:    73 51             	r3 = h[r0 + 46] (u)			  ## gatt_client.c:516:142
 1e0aafe:    e1 50             	r1 = h[r0 + 28] (u)			  ## gatt_client.c:515:25
 1e0ab00:    62 50             	r2 = h[r0 + 12] (u)			  ## gatt_client.c:516:118
 1e0ab02:    21 22             	if (r1 == 0) goto 66 <send_gatt_characteristic_request+0x56 : 1e0ab46 >			  ## gatt_client.c:516:118
 1e0ab04:    80 70             	r0 = 8			  ## gatt_client.c:518:13
 1e0ab06:    0c 02             	[sp] = r4			  ## gatt_client.c:518:13
 1e0ab08:    95 17             	call -214 <att_read_by_type_or_group_request_for_uuid16 : 1e0aa34 >			  ## gatt_client.c:518:13
 1e0ab0a:    22 18             	goto 68 <send_gatt_characteristic_request+0x60 : 1e0ab50 >			  ## gatt_client.c:518:13
 1e0ab0c:    63 50             	r3 = h[r0 + 12] (u)			  ## gatt_client.c:323:5
 1e0ab0e:    84 51             	r4 = h[r0 + 48] (u)			  ## gatt_client.c:320:5
 1e0ab10:    75 51             	r5 = h[r0 + 46] (u)			  ## gatt_client.c:319:5
 1e0ab12:    bf f3 96 f8       	call -3796 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:316:5
 1e0ab16:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:318:16
 1e0ab1c:    81 70             	r1 = 8			  ## gatt_client.c:318:16
 1e0ab1e:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:318:16
 1e0ab20:    00 81             	r0 += 16			  ## gatt_client.c:318:16
 1e0ab22:    11 70             	r1 = 1			  ## gatt_client.c:319:5
 1e0ab24:    52 08             	r2 = r5			  ## gatt_client.c:319:5
 1e0ab26:    bf f3 8f e8       	call -12002 <bt_store_16 : 1e07c48 >			  ## gatt_client.c:319:5
 1e0ab2a:    31 70             	r1 = 3			  ## gatt_client.c:320:5
 1e0ab2c:    42 08             	r2 = r4			  ## gatt_client.c:320:5
 1e0ab2e:    bf f3 8b e8       	call -12010 <bt_store_16 : 1e07c48 >			  ## gatt_client.c:320:5
 1e0ab32:    51 70             	r1 = 5			  ## gatt_client.c:321:5
 1e0ab34:    02 fb 03 28       	r2 = 10243 <lrc.7+0x83 : 2803 >			  ## gatt_client.c:321:5
 1e0ab38:    bf f3 86 e8       	call -12020 <bt_store_16 : 1e07c48 >			  ## gatt_client.c:321:5
 1e0ab3c:    71 70             	r1 = 7			  ## gatt_client.c:323:5
 1e0ab3e:    30 08             	r0 = r3			  ## gatt_client.c:323:5
 1e0ab40:    bf f3 89 f8       	call -3822 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:323:5
 1e0ab44:    05 18             	goto 10 <send_gatt_characteristic_request+0x60 : 1e0ab50 >			  ## gatt_client.c:323:5
 1e0ab46:    e0 81             	r0 += 30			  ## gatt_client.c:516:85
 1e0ab48:    21 08             	r1 = r2			  ## gatt_client.c:516:13
 1e0ab4a:    32 08             	r2 = r3			  ## gatt_client.c:516:13
 1e0ab4c:    43 08             	r3 = r4			  ## gatt_client.c:516:13
 1e0ab4e:    b3 17             	call -154 <att_read_by_type_or_group_request_for_uuid128 : 1e0aab6 >			  ## gatt_client.c:516:13
 1e0ab50:    02 0a             	sp += 4
 1e0ab52:    55 01             	{pc, r5, r4} = [sp++]			  ## gatt_client.c:522:1


att_read_request:
 1e0ab54:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:354:0
 1e0ab56:    13 08             	r3 = r1			  ## gatt_client.c:354:0
 1e0ab58:    04 08             	r4 = r0			  ## gatt_client.c:354:0
 1e0ab5a:    bf f3 72 f8       	call -3868 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:355:5
 1e0ab5e:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:357:16
 1e0ab64:    a1 70             	r1 = 10			  ## gatt_client.c:357:16
 1e0ab66:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:357:16
 1e0ab68:    00 81             	r0 += 16			  ## gatt_client.c:357:16
 1e0ab6a:    11 70             	r1 = 1			  ## gatt_client.c:358:5
 1e0ab6c:    32 08             	r2 = r3			  ## gatt_client.c:358:5
 1e0ab6e:    bf f3 6a f8       	call -3884 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:358:5
 1e0ab72:    31 70             	r1 = 3			  ## gatt_client.c:360:5
 1e0ab74:    40 08             	r0 = r4			  ## gatt_client.c:360:5
 1e0ab76:    14 01             	{rets, r4} = [sp++]			  ## gatt_client.c:360:5
 1e0ab78:    ff f3 6d f8       	goto -3878 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:360:5


send_gatt_read_blob_request:
 1e0ab7c:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:544:0
 1e0ab7e:    23 08             	r3 = r2			  ## gatt_client.c:544:0
 1e0ab80:    14 08             	r4 = r1			  ## gatt_client.c:544:0
 1e0ab82:    05 08             	r5 = r0			  ## gatt_client.c:544:0
 1e0ab84:    bf f3 5d f8       	call -3910 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:366:5
 1e0ab88:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:368:16
 1e0ab8e:    c1 70             	r1 = 12			  ## gatt_client.c:368:16
 1e0ab90:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:368:16
 1e0ab92:    00 81             	r0 += 16			  ## gatt_client.c:368:16
 1e0ab94:    22 05             	r2 = r4.l (u)			  ## gatt_client.c:369:5
 1e0ab96:    11 70             	r1 = 1			  ## gatt_client.c:369:5
 1e0ab98:    bf f3 55 f8       	call -3926 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:369:5
 1e0ab9c:    e2 04             	r2 = r3.l (u)			  ## gatt_client.c:370:5
 1e0ab9e:    31 70             	r1 = 3			  ## gatt_client.c:370:5
 1e0aba0:    bf f3 51 f8       	call -3934 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:370:5
 1e0aba4:    60 05             	r0 = r5.l (u)			  ## gatt_client.c:372:5
 1e0aba6:    51 70             	r1 = 5			  ## gatt_client.c:372:5
 1e0aba8:    15 01             	{rets, r5, r4} = [sp++]			  ## gatt_client.c:372:5
 1e0abaa:    ff f3 54 f8       	goto -3928 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:372:5


send_gatt_prepare_write_request:
 1e0abae:    78 01             	[--sp] = {rets, r8-r4}			  ## gatt_client.c:564:0
 1e0abb0:    07 08             	r7 = r0			  ## gatt_client.c:564:0
 1e0abb2:    e5 5f             	r5 = h[r7 + 60] (u)			  ## gatt_client.c:565:124
 1e0abb4:    d6 5f             	r6 = h[r7 + 58] (u)			  ## gatt_client.c:565:94
 1e0abb6:    08 f7 0c 70       	r8 = h[r7 + 12] (u)			  ## gatt_client.c:565:70
 1e0abba:    b0 5e             	r0 = h[r7 + 22] (u)			  ## gatt_client.c:466:32
 1e0abbc:    be 16             	call -644 <peripheral_mtu : 1e0a93a >			  ## gatt_client.c:466:32
 1e0abbe:    f1 5f             	r1 = h[r7 + 62] (u)			  ## gatt_client.c:467:53
 1e0abc0:    04 70             	r4 = 0			  ## gatt_client.c:467:53
 1e0abc2:    51 f2 07 90       	if (r1 <= r5) goto 14 <send_gatt_prepare_write_request+0x26 : 1e0abd4 >			  ## gatt_client.c:467:53
 1e0abc6:    b0 8f             	r0 += -5			  ## gatt_client.c:466:59
 1e0abc8:    64 b3             	r4 = r1 - r5			  ## gatt_client.c:470:57
 1e0abca:    21 05             	r1 = r4.l (u)			  ## gatt_client.c:470:57
 1e0abcc:    22 04             	r2 = r0.l (u)			  ## gatt_client.c:471:25
 1e0abce:    12 f2 01 80       	if (r2 > r1) goto 2 <send_gatt_prepare_write_request+0x26 : 1e0abd4 >			  ## gatt_client.c:471:25
 1e0abd2:    04 08             	r4 = r0			  ## gatt_client.c:472:9
 1e0abd4:    03 4f             	r3 = [r7 + 64]			  ## gatt_client.c:565:185
 1e0abd6:    bf f3 34 f8       	call -3992 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:429:5
 1e0abda:    c7 ff 60 18 00 00 	r7 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:434:5
 1e0abe0:    60 71             	r0 = 22			  ## gatt_client.c:431:16
 1e0abe2:    08 6f             	b[r7 + 16] = r0			  ## gatt_client.c:431:16
 1e0abe4:    00 9f             	r0 = r7 + 16			  ## gatt_client.c:431:16
 1e0abe6:    11 70             	r1 = 1			  ## gatt_client.c:432:5
 1e0abe8:    62 08             	r2 = r6			  ## gatt_client.c:432:5
 1e0abea:    bf f3 2c f8       	call -4008 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:432:5
 1e0abee:    31 70             	r1 = 3			  ## gatt_client.c:433:5
 1e0abf0:    52 08             	r2 = r5			  ## gatt_client.c:433:5
 1e0abf2:    bf f3 28 f8       	call -4016 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:433:5
 1e0abf6:    41 b7             	r1 = r3 + r5			  ## gatt_client.c:434:26
 1e0abf8:    50 9f             	r0 = r7 + 21			  ## gatt_client.c:434:5
 1e0abfa:    22 05             	r2 = r4.l (u)			  ## gatt_client.c:434:47
 1e0abfc:    97 f3 72 e1       	call 3130084 <memcpy : 106ee4 >			  ## gatt_client.c:434:5
 1e0ac00:    50 98             	r0 = r4 + 5			  ## gatt_client.c:436:91
 1e0ac02:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:436:5
 1e0ac04:    80 08             	r0 = r8			  ## gatt_client.c:436:5
 1e0ac06:    18 01             	{rets, r8-r4} = [sp++]			  ## gatt_client.c:436:5
 1e0ac08:    ff f3 25 f8       	goto -4022 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:436:5


att_execute_write_request:
 1e0ac0c:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:418:0
 1e0ac0e:    13 08             	r3 = r1			  ## gatt_client.c:418:0
 1e0ac10:    04 08             	r4 = r0			  ## gatt_client.c:418:0
 1e0ac12:    bf f3 16 f8       	call -4052 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:419:5
 1e0ac16:    c0 ff 60 18 00 00 	r0 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:422:16
 1e0ac1c:    81 71             	r1 = 24			  ## gatt_client.c:421:16
 1e0ac1e:    09 61             	b[r0 + 16] = r1			  ## gatt_client.c:421:16
 1e0ac20:    1b 61             	b[r0 + 17] = r3			  ## gatt_client.c:422:16
 1e0ac22:    21 70             	r1 = 2			  ## gatt_client.c:423:5
 1e0ac24:    40 08             	r0 = r4			  ## gatt_client.c:423:5
 1e0ac26:    14 01             	{rets, r4} = [sp++]			  ## gatt_client.c:423:5
 1e0ac28:    ff f3 15 f8       	goto -4054 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:423:5


gatt_client_run:
 1e0ac2c:    79 01             	[--sp] = {rets, r9-r4}			  ## gatt_client.c:1035:0
 1e0ac2e:    f4 0b             	sp += -24			  ## gatt_client.c:1035:0
 1e0ac30:    c0 ff 1c 1d 00 00 	r0 = 7452 <gatt_client_global_info : 1d1c >			  ## gatt_client.c:1035:0
 1e0ac36:    04 40             	r4 = [r0 + 0]			  ## gatt_client.c:1035:0
 1e0ac38:    04 e0 05 01       	if (r4 == 0) goto 522 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:1035:0
 1e0ac3c:    c9 ff 60 18 00 00 	r9 = 6240 <report_irq_stack_end : 1860 >			  ## gatt_client.c:1035:0
 1e0ac42:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:1045:14
 1e0ac44:    bf f3 03 fc       	call -2042 <att_dispatch_client_can_send_now : 1e0a44e >			  ## gatt_client.c:1045:14
 1e0ac48:    b5 20             	if (r0 == 0) goto 362 <.GJTIE628_1_1_+0x6A : 1e0adb4 >			  ## gatt_client.c:1045:14
 1e0ac4a:    60 48             	r0 = [r4 + 24]			  ## gatt_client.c:1052:29
 1e0ac4c:    30 e0 dc 00       	if (r0 == 3) goto 440 <.GJTIE628_1_1_+0xBE : 1e0ae08 >			  ## gatt_client.c:1052:9
 1e0ac50:    10 e0 f9 00       	if (r0 == 1) goto 498 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0ac54:    e3 20             	if (r0 == 0) goto 454 <.GJTIE628_1_1_+0xD2 : 1e0ae1c >
 1e0ac56:    d0 49             	r0 = [r4 + 116]			  ## gatt_client.c:1072:29
 1e0ac58:    10 e0 af 00       	if (r0 == 1) goto 350 <.GJTIE628_1_1_+0x70 : 1e0adba >			  ## gatt_client.c:1072:29
 1e0ac5c:    45 fc 44 00       	r5 = r4 + 68
 1e0ac60:    d0 6a             	r0 = b[r5 + 13] (u)			  ## gatt_client.c:1083:25
 1e0ac62:    c0 30             	if (r0 != 0) goto 384 <.GJTIE628_1_1_+0x9A : 1e0ade4 >			  ## gatt_client.c:1083:25
 1e0ac64:    10 48             	r0 = [r4 + 4]			  ## gatt_client.c:1090:29
 1e0ac66:    06 fc ff ff       	r6 = r0 + -1			  ## gatt_client.c:1090:9
 1e0ac6a:    06 e3 a0 80       	if (r6 > 48) goto 320 <.GJTIE628_1_1_+0x64 : 1e0adae >			  ## gatt_client.c:1090:9
 1e0ac6e:    77 c0             	r7 = r6 << 1
 1e0ac70:    b7 00             	tbh [r7]


.GJTIL628_0_0_:
 1e0ac72:    ec 00     < 236 : 0xEC >
 1e0ac74:    9e 00     < 158 : 0x9E >
 1e0ac76:    f5 00     < 245 : 0xF5 >
 1e0ac78:    9e 00     < 158 : 0x9E >
 1e0ac7a:    05 01     < 261 : 0x105 >
 1e0ac7c:    9e 00     < 158 : 0x9E >
 1e0ac7e:    08 01     < 264 : 0x108 >
 1e0ac80:    9e 00     < 158 : 0x9E >
 1e0ac82:    0d 01     < 269 : 0x10D >
 1e0ac84:    9e 00     < 158 : 0x9E >
 1e0ac86:    23 01     < 291 : 0x123 >
 1e0ac88:    9e 00     < 158 : 0x9E >
 1e0ac8a:    2c 01     < 300 : 0x12C >
 1e0ac8c:    9e 00     < 158 : 0x9E >
 1e0ac8e:    30 01     < 304 : 0x130 >
 1e0ac90:    9e 00     < 158 : 0x9E >
 1e0ac92:    33 01     < 307 : 0x133 >
 1e0ac94:    9e 00     < 158 : 0x9E >
 1e0ac96:    6c 00     < 108 : 0x6C >
 1e0ac98:    9e 00     < 158 : 0x9E >
 1e0ac9a:    77 00     < 119 : 0x77 >
 1e0ac9c:    9e 00     < 158 : 0x9E >
 1e0ac9e:    31 00     < 49 : 0x31 >
 1e0aca0:    9e 00     < 158 : 0x9E >
 1e0aca2:    36 01     < 310 : 0x136 >
 1e0aca4:    9e 00     < 158 : 0x9E >
 1e0aca6:    39 01     < 313 : 0x139 >
 1e0aca8:    9e 00     < 158 : 0x9E >
 1e0acaa:    3c 01     < 316 : 0x13C >
 1e0acac:    9e 00     < 158 : 0x9E >
 1e0acae:    3f 01     < 319 : 0x13F >
 1e0acb0:    9e 00     < 158 : 0x9E >
 1e0acb2:    42 01     < 322 : 0x142 >
 1e0acb4:    9e 00     < 158 : 0x9E >
 1e0acb6:    48 01     < 328 : 0x148 >
 1e0acb8:    9e 00     < 158 : 0x9E >
 1e0acba:    53 01     < 339 : 0x153 >
 1e0acbc:    9e 00     < 158 : 0x9E >
 1e0acbe:    5b 01     < 347 : 0x15B >
 1e0acc0:    9e 00     < 158 : 0x9E >
 1e0acc2:    61 01     < 353 : 0x161 >
 1e0acc4:    9e 00     < 158 : 0x9E >
 1e0acc6:    31 00     < 49 : 0x31 >
 1e0acc8:    9e 00     < 158 : 0x9E >
 1e0acca:    68 01     < 360 : 0x168 >
 1e0accc:    9e 00     < 158 : 0x9E >
 1e0acce:    6b 01     < 363 : 0x16B >
 1e0acd0:    9e 00     < 158 : 0x9E >
 1e0acd2:    71 01     < 369 : 0x171 >
 1e0acd4:    08 f7 3e 40       	r8 = h[r4 + 62] (u)			  ## gatt_client.c:1093:17
 1e0acd8:    b0 58             	r0 = h[r4 + 22] (u)			  ## gatt_client.c:1093:49
 1e0acda:    2f 16             	call -930 <peripheral_mtu : 1e0a93a >			  ## gatt_client.c:1093:49
 1e0acdc:    d0 8f             	r0 += -3			  ## gatt_client.c:1093:76
 1e0acde:    08 f2 8b c0       	ifs (r8 > r0) goto 278 <.GJTIE628_1_1_+0xAE : 1e0adf8 >			  ## gatt_client.c:1093:76
 1e0ace2:    06 e3 64 80       	if (r6 > 48) goto 200 <.GJTIE628_1_1_+0x64 : 1e0adae >
 1e0ace6:    b7 00             	tbh [r7]


.GJTIL628_1_1_:
 1e0ace8:    b1 00     < 177 : 0xB1 >
 1e0acea:    63 00     < 99 : 0x63 >
 1e0acec:    ba 00     < 186 : 0xBA >
 1e0acee:    63 00     < 99 : 0x63 >
 1e0acf0:    ca 00     < 202 : 0xCA >
 1e0acf2:    63 00     < 99 : 0x63 >
 1e0acf4:    cd 00     < 205 : 0xCD >
 1e0acf6:    63 00     < 99 : 0x63 >
 1e0acf8:    d2 00     < 210 : 0xD2 >
 1e0acfa:    63 00     < 99 : 0x63 >
 1e0acfc:    e8 00     < 232 : 0xE8 >
 1e0acfe:    63 00     < 99 : 0x63 >
 1e0ad00:    f1 00     < 241 : 0xF1 >
 1e0ad02:    63 00     < 99 : 0x63 >
 1e0ad04:    f5 00     < 245 : 0xF5 >
 1e0ad06:    63 00     < 99 : 0x63 >
 1e0ad08:    f8 00     < 248 : 0xF8 >
 1e0ad0a:    63 00     < 99 : 0x63 >
 1e0ad0c:    31 00     < 49 : 0x31 >
 1e0ad0e:    63 00     < 99 : 0x63 >
 1e0ad10:    3c 00     < 60 : 0x3C >
 1e0ad12:    63 00     < 99 : 0x63 >
 1e0ad14:    48 01     < 328 : 0x148 >
 1e0ad16:    63 00     < 99 : 0x63 >
 1e0ad18:    fb 00     < 251 : 0xFB >
 1e0ad1a:    63 00     < 99 : 0x63 >
 1e0ad1c:    fe 00     < 254 : 0xFE >
 1e0ad1e:    63 00     < 99 : 0x63 >
 1e0ad20:    01 01     < 257 : 0x101 >
 1e0ad22:    63 00     < 99 : 0x63 >
 1e0ad24:    04 01     < 260 : 0x104 >
 1e0ad26:    63 00     < 99 : 0x63 >
 1e0ad28:    07 01     < 263 : 0x107 >
 1e0ad2a:    63 00     < 99 : 0x63 >
 1e0ad2c:    0d 01     < 269 : 0x10D >
 1e0ad2e:    63 00     < 99 : 0x63 >
 1e0ad30:    18 01     < 280 : 0x118 >
 1e0ad32:    63 00     < 99 : 0x63 >
 1e0ad34:    20 01     < 288 : 0x120 >
 1e0ad36:    63 00     < 99 : 0x63 >
 1e0ad38:    26 01     < 294 : 0x126 >
 1e0ad3a:    63 00     < 99 : 0x63 >
 1e0ad3c:    4b 01     < 331 : 0x14B >
 1e0ad3e:    63 00     < 99 : 0x63 >
 1e0ad40:    2d 01     < 301 : 0x12D >
 1e0ad42:    63 00     < 99 : 0x63 >
 1e0ad44:    30 01     < 304 : 0x130 >
 1e0ad46:    63 00     < 99 : 0x63 >
 1e0ad48:    36 01     < 310 : 0x136 >
 1e0ad4a:    c1 f4 14 49       	[r4 + 4] = 20			  ## gatt_client.c:1152:43
 1e0ad4e:    85 59             	r5 = h[r4 + 48] (u)			  ## gatt_client.c:539:170
 1e0ad50:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:539:138
 1e0ad52:    e1 58             	r1 = h[r4 + 28] (u)			  ## gatt_client.c:536:21
 1e0ad54:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:539:114
 1e0ad56:    20 22             	if (r1 == 0) goto 64 <.GJTIE628_1_1_+0x4E : 1e0ad98 >			  ## gatt_client.c:536:9
 1e0ad58:    80 70             	r0 = 8			  ## gatt_client.c:537:9
 1e0ad5a:    0d 02             	[sp] = r5			  ## gatt_client.c:537:9
 1e0ad5c:    6b 16             	call -810 <att_read_by_type_or_group_request_for_uuid16 : 1e0aa34 >			  ## gatt_client.c:537:9
 1e0ad5e:    27 18             	goto 78 <.GJTIE628_1_1_+0x64 : 1e0adae >			  ## gatt_client.c:537:9
 1e0ad60:    c1 f4 16 49       	[r4 + 4] = 22			  ## gatt_client.c:1157:43
 1e0ad64:    26 49             	r6 = [r4 + 72]			  ## gatt_client.c:550:107
 1e0ad66:    07 5a             	r7 = h[r5 + 0] (u)			  ## gatt_client.c:550:67
 1e0ad68:    08 f7 0c 40       	r8 = h[r4 + 12] (u)			  ## gatt_client.c:550:43
 1e0ad6c:    bf f3 69 f7       	call -4398 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:377:5
 1e0ad70:    e0 70             	r0 = 14			  ## gatt_client.c:379:16
 1e0ad72:    10 f9 10 90       	b[r9 + 16] = r0			  ## gatt_client.c:379:16
 1e0ad76:    16 2e             	if (r7 == 0) goto 44 <.GJTIE628_1_1_+0x5A : 1e0ada4 >
 1e0ad78:    13 70             	r3 = 1
 1e0ad7a:    75 08             	r5 = r7
 1e0ad7c:    82 f7 02 60       	r2 = h[r6 ++= 2] (u)			  ## gatt_client.c:383:9
 1e0ad80:    90 fc 10 00       	r0 = r9 + 16			  ## gatt_client.c:383:9
 1e0ad84:    e1 04             	r1 = r3.l (u)			  ## gatt_client.c:383:9
 1e0ad86:    bf f3 5e f7       	call -4420 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:383:9
 1e0ad8a:    23 80             	r3 += 2			  ## gatt_client.c:382:19
 1e0ad8c:    55 f3 f6 ff       	if (--r5 != 0) goto -20 <.GJTIE628_1_1_+0x32 : 1e0ad7c >			  ## gatt_client.c:382:5
 1e0ad90:    10 70             	r0 = 1			  ## gatt_client.c:383:49
 1e0ad92:    d0 fd 08 07       	r0 <= insert(r7, p:1, l:16)			  ## gatt_client.c:383:49
 1e0ad96:    07 18             	goto 14 <.GJTIE628_1_1_+0x5C : 1e0ada6 >			  ## gatt_client.c:383:49
 1e0ad98:    e0 99             	r0 = r4 + 30			  ## gatt_client.c:539:81
 1e0ad9a:    21 08             	r1 = r2			  ## gatt_client.c:539:9
 1e0ad9c:    32 08             	r2 = r3			  ## gatt_client.c:539:9
 1e0ad9e:    53 08             	r3 = r5			  ## gatt_client.c:539:9
 1e0ada0:    8a 16             	call -748 <att_read_by_type_or_group_request_for_uuid128 : 1e0aab6 >			  ## gatt_client.c:539:9
 1e0ada2:    05 18             	goto 10 <.GJTIE628_1_1_+0x64 : 1e0adae >			  ## gatt_client.c:539:9
 1e0ada4:    10 70             	r0 = 1
 1e0ada6:    21 04             	r1 = r0.l (u)			  ## gatt_client.c:386:5
 1e0ada8:    80 08             	r0 = r8			  ## gatt_client.c:386:5
 1e0adaa:    bf f3 54 f7       	call -4440 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:386:5
 1e0adae:    04 48             	r4 = [r4 + 0]
 1e0adb0:    48 39             	if (r4 != 0) goto -368 <gatt_client_run+0x16 : 1e0ac42 >
 1e0adb2:    49 18             	goto 146 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0adb4:    bf f3 4d fb       	call -2406 <att_dispatch_client_request_can_send_now_event : 1e0a452 >			  ## gatt_client.c:1046:13
 1e0adb8:    46 18             	goto 140 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:1046:13
 1e0adba:    05 f9 7f 40       	r5 = b[r4 + 127] (u)			  ## gatt_client.c:1074:115
 1e0adbe:    66 58             	r6 = h[r4 + 12] (u)			  ## gatt_client.c:1074:59
 1e0adc0:    bf f3 3f f7       	call -4482 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:1021:9
 1e0adc4:    40 20             	if (r0 == 0) goto 128 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:1021:9
 1e0adc6:    90 fc 10 00       	r0 = r9 + 16			  ## gatt_client.c:1027:9
 1e0adca:    41 fc 78 00       	r1 = r4 + 120			  ## gatt_client.c:1074:83
 1e0adce:    52 08             	r2 = r5			  ## gatt_client.c:1027:9
 1e0add0:    97 f3 88 e0       	call 3129616 <memcpy : 106ee4 >			  ## gatt_client.c:1027:9
 1e0add4:    60 08             	r0 = r6			  ## gatt_client.c:1028:15
 1e0add6:    51 08             	r1 = r5			  ## gatt_client.c:1028:15
 1e0add8:    bf f3 3d f7       	call -4486 <l2cap_send_prepared_connectionless : 1e09c56 >			  ## gatt_client.c:1028:15
 1e0addc:    34 30             	if (r0 != 0) goto 104 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0adde:    dd f4 00 49       	[r4 + 116] = 0			  ## gatt_client.c:1075:39
 1e0ade2:    31 18             	goto 98 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:1075:39
 1e0ade4:    00 70             	r0 = 0			  ## gatt_client.c:1084:43
 1e0ade6:    d8 6a             	b[r5 + 13] = r0			  ## gatt_client.c:1084:43
 1e0ade8:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:283:5
 1e0adea:    bf f3 2a f7       	call -4524 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:280:5
 1e0adee:    e0 71             	r0 = 30			  ## gatt_client.c:282:16
 1e0adf0:    10 f9 10 90       	b[r9 + 16] = r0			  ## gatt_client.c:282:16
 1e0adf4:    11 70             	r1 = 1			  ## gatt_client.c:283:5
 1e0adf6:    24 18             	goto 72 <.GJTIE628_1_1_+0xF6 : 1e0ae40 >			  ## gatt_client.c:283:5
 1e0adf8:    c1 f4 00 49       	[r4 + 4] = 0			  ## gatt_client.c:615:35
 1e0adfc:    40 08             	r0 = r4			  ## gatt_client.c:616:5
 1e0adfe:    e5 15             	call -1078 <gatt_client_timeout_stop : 1e0a9ca >			  ## gatt_client.c:616:5
 1e0ae00:    d1 70             	r1 = 13			  ## gatt_client.c:1098:13
 1e0ae02:    40 08             	r0 = r4			  ## gatt_client.c:1098:13
 1e0ae04:    fd 15             	call -1030 <emit_gatt_complete_event : 1e0aa00 >			  ## gatt_client.c:1098:13
 1e0ae06:    1f 18             	goto 62 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:1098:13
 1e0ae08:    c6 f4 02 49       	[r4 + 24] = 2			  ## gatt_client.c:1064:35
 1e0ae0c:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:459:5
 1e0ae0e:    bf f3 6e f7       	call -4388 <l2cap_max_le_mtu : 1e09cee >			  ## gatt_client.c:453:20
 1e0ae12:    04 08             	r4 = r0			  ## gatt_client.c:453:20
 1e0ae14:    bf f3 15 f7       	call -4566 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:455:5
 1e0ae18:    30 70             	r0 = 3			  ## gatt_client.c:455:5
 1e0ae1a:    09 18             	goto 18 <.GJTIE628_1_1_+0xE4 : 1e0ae2e >			  ## gatt_client.c:455:5
 1e0ae1c:    10 70             	r0 = 1
 1e0ae1e:    68 48             	[r4 + 24] = r0			  ## gatt_client.c:1054:35
 1e0ae20:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:447:5
 1e0ae22:    bf f3 64 f7       	call -4408 <l2cap_max_le_mtu : 1e09cee >			  ## gatt_client.c:441:20
 1e0ae26:    04 08             	r4 = r0			  ## gatt_client.c:441:20
 1e0ae28:    bf f3 0b f7       	call -4586 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:443:5
 1e0ae2c:    20 70             	r0 = 2			  ## gatt_client.c:445:16
 1e0ae2e:    10 f9 10 90       	b[r9 + 16] = r0
 1e0ae32:    90 fc 10 00       	r0 = r9 + 16
 1e0ae36:    11 70             	r1 = 1
 1e0ae38:    42 08             	r2 = r4
 1e0ae3a:    bf f3 04 f7       	call -4600 <little_endian_store_16 : 1e09c46 >
 1e0ae3e:    31 70             	r1 = 3
 1e0ae40:    30 08             	r0 = r3
 1e0ae42:    bf f3 08 f7       	call -4592 <l2cap_send_prepared_connectionless : 1e09c56 >
 1e0ae46:    0c 0a             	sp += 24
 1e0ae48:    59 01             	{pc, r9-r4} = [sp++]			  ## gatt_client.c:1261:1
 1e0ae4a:    c1 f4 02 49       	[r4 + 4] = 2			  ## gatt_client.c:1107:43
 1e0ae4e:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:479:5
 1e0ae50:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:479:5
 1e0ae52:    84 59             	r4 = h[r4 + 48] (u)			  ## gatt_client.c:479:5
 1e0ae54:    00 71             	r0 = 16			  ## gatt_client.c:479:5
 1e0ae56:    01 fb 00 28       	r1 = 10240 <lrc.7+0x80 : 2800 >			  ## gatt_client.c:479:5
 1e0ae5a:    5b 18             	goto 182 <.GJTIE628_1_1_+0x1C8 : 1e0af12 >			  ## gatt_client.c:479:5
 1e0ae5c:    c1 f4 04 49       	[r4 + 4] = 4			  ## gatt_client.c:1112:43
 1e0ae60:    e2 58             	r2 = h[r4 + 28] (u)			  ## gatt_client.c:484:21
 1e0ae62:    7d 24             	if (r2 == 0) goto 250 <.GJTIE628_1_1_+0x214 : 1e0af5e >			  ## gatt_client.c:484:9
 1e0ae64:    63 a1             	r3 = sp + 22
 1e0ae66:    01 70             	r1 = 0			  ## gatt_client.c:486:9
 1e0ae68:    30 08             	r0 = r3			  ## gatt_client.c:486:9
 1e0ae6a:    bf f3 ec f6       	call -4648 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:486:9
 1e0ae6e:    82 59             	r2 = h[r4 + 48] (u)			  ## gatt_client.c:487:9
 1e0ae70:    71 59             	r1 = h[r4 + 46] (u)			  ## gatt_client.c:487:9
 1e0ae72:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:487:9
 1e0ae74:    24 70             	r4 = 2			  ## gatt_client.c:487:9
 1e0ae76:    0c 02             	[sp] = r4			  ## gatt_client.c:487:9
 1e0ae78:    f9 15             	call -1038 <att_find_by_type_value_request : 1e0aa6c >			  ## gatt_client.c:487:9
 1e0ae7a:    e5 1f             	goto -54 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:487:9
 1e0ae7c:    c1 f4 06 49       	[r4 + 4] = 6			  ## gatt_client.c:1117:43
 1e0ae80:    02 18             	goto 4 <.GJTIE628_1_1_+0x13C : 1e0ae86 >			  ## gatt_client.c:1117:43
 1e0ae82:    c1 f4 08 49       	[r4 + 4] = 8			  ## gatt_client.c:1122:43
 1e0ae86:    40 08             	r0 = r4
 1e0ae88:    33 16             	call -922 <send_gatt_characteristic_request : 1e0aaf0 >
 1e0ae8a:    dd 1f             	goto -70 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0ae8c:    c1 f4 08 49       	[r4 + 4] = 8			  ## gatt_client.c:1127:43
 1e0ae90:    63 58             	r3 = h[r4 + 12] (u)			  ## gatt_client.c:295:5
 1e0ae92:    85 59             	r5 = h[r4 + 48] (u)			  ## gatt_client.c:293:5
 1e0ae94:    74 59             	r4 = h[r4 + 46] (u)			  ## gatt_client.c:292:5
 1e0ae96:    bf f3 d4 f6       	call -4696 <l2cap_reserve_packet_buffer : 1e09c42 >			  ## gatt_client.c:289:5
 1e0ae9a:    40 70             	r0 = 4			  ## gatt_client.c:289:5
 1e0ae9c:    10 f9 10 90       	b[r9 + 16] = r0			  ## gatt_client.c:291:16
 1e0aea0:    90 fc 10 00       	r0 = r9 + 16			  ## gatt_client.c:291:16
 1e0aea4:    11 70             	r1 = 1			  ## gatt_client.c:292:5
 1e0aea6:    42 08             	r2 = r4			  ## gatt_client.c:292:5
 1e0aea8:    bf f3 cd f6       	call -4710 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:292:5
 1e0aeac:    31 70             	r1 = 3			  ## gatt_client.c:293:5
 1e0aeae:    52 08             	r2 = r5			  ## gatt_client.c:293:5
 1e0aeb0:    bf f3 c9 f6       	call -4718 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:293:5
 1e0aeb4:    51 70             	r1 = 5			  ## gatt_client.c:295:5
 1e0aeb6:    c4 1f             	goto -120 <.GJTIE628_1_1_+0xF6 : 1e0ae40 >			  ## gatt_client.c:295:5
 1e0aeb8:    c1 f4 0c 49       	[r4 + 4] = 12			  ## gatt_client.c:1132:43
 1e0aebc:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:507:5
 1e0aebe:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:507:5
 1e0aec0:    84 59             	r4 = h[r4 + 48] (u)			  ## gatt_client.c:507:5
 1e0aec2:    80 70             	r0 = 8			  ## gatt_client.c:507:5
 1e0aec4:    01 fb 02 28       	r1 = 10242 <lrc.7+0x82 : 2802 >			  ## gatt_client.c:507:5
 1e0aec8:    24 18             	goto 72 <.GJTIE628_1_1_+0x1C8 : 1e0af12 >			  ## gatt_client.c:507:5
 1e0aeca:    c1 f4 0e 49       	[r4 + 4] = 14			  ## gatt_client.c:1137:43
 1e0aece:    91 59             	r1 = h[r4 + 50] (u)			  ## gatt_client.c:502:5
 1e0aed0:    2e 18             	goto 92 <.GJTIE628_1_1_+0x1E4 : 1e0af2e >			  ## gatt_client.c:502:5
 1e0aed2:    c1 f4 10 49       	[r4 + 4] = 16			  ## gatt_client.c:1142:43
 1e0aed6:    2a 18             	goto 84 <.GJTIE628_1_1_+0x1E2 : 1e0af2c >			  ## gatt_client.c:1142:43
 1e0aed8:    c1 f4 12 49       	[r4 + 4] = 18			  ## gatt_client.c:1147:43
 1e0aedc:    2d 18             	goto 90 <.GJTIE628_1_1_+0x1EE : 1e0af38 >			  ## gatt_client.c:1147:43
 1e0aede:    c1 f4 1a 49       	[r4 + 4] = 26			  ## gatt_client.c:1167:43
 1e0aee2:    3a 18             	goto 116 <.GJTIE628_1_1_+0x20E : 1e0af58 >			  ## gatt_client.c:1167:43
 1e0aee4:    c1 f4 1c 49       	[r4 + 4] = 28			  ## gatt_client.c:1177:43
 1e0aee8:    37 18             	goto 110 <.GJTIE628_1_1_+0x20E : 1e0af58 >			  ## gatt_client.c:1177:43
 1e0aeea:    c1 f4 1e 49       	[r4 + 4] = 30			  ## gatt_client.c:1182:43
 1e0aeee:    2e 18             	goto 92 <.GJTIE628_1_1_+0x202 : 1e0af4c >			  ## gatt_client.c:1182:43
 1e0aef0:    c1 f4 20 49       	[r4 + 4] = 32			  ## gatt_client.c:1187:43
 1e0aef4:    02 18             	goto 4 <.GJTIE628_1_1_+0x1B0 : 1e0aefa >			  ## gatt_client.c:1187:43
 1e0aef6:    c1 f4 22 49       	[r4 + 4] = 34			  ## gatt_client.c:1192:43
 1e0aefa:    60 58             	r0 = h[r4 + 12] (u)
 1e0aefc:    01 70             	r1 = 0
 1e0aefe:    86 16             	call -756 <att_execute_write_request : 1e0ac0c >
 1e0af00:    a2 1f             	goto -188 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0af02:    c1 f4 24 49       	[r4 + 4] = 36			  ## gatt_client.c:1197:43
 1e0af06:    73 59             	r3 = h[r4 + 46] (u)			  ## gatt_client.c:580:5
 1e0af08:    62 58             	r2 = h[r4 + 12] (u)			  ## gatt_client.c:580:5
 1e0af0a:    84 59             	r4 = h[r4 + 48] (u)			  ## gatt_client.c:580:5
 1e0af0c:    80 70             	r0 = 8			  ## gatt_client.c:580:5
 1e0af0e:    01 fb 02 29       	r1 = 10498 <stack_mem+0x32 : 2902 >			  ## gatt_client.c:580:5
 1e0af12:    0c 02             	[sp] = r4
 1e0af14:    8f 15             	call -1250 <att_read_by_type_or_group_request_for_uuid16 : 1e0aa34 >
 1e0af16:    97 1f             	goto -210 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0af18:    c1 f4 26 49       	[r4 + 4] = 38			  ## gatt_client.c:1217:43
 1e0af1c:    42 5a             	r2 = h[r5 + 8] (u)			  ## gatt_client.c:560:5
 1e0af1e:    61 58             	r1 = h[r4 + 12] (u)			  ## gatt_client.c:560:5
 1e0af20:    e4 84             	r4 += 78			  ## gatt_client.c:560:125
 1e0af22:    20 71             	r0 = 18			  ## gatt_client.c:560:5
 1e0af24:    23 70             	r3 = 2			  ## gatt_client.c:560:5
 1e0af26:    32 18             	goto 100 <.GJTIE628_1_1_+0x242 : 1e0af8c >			  ## gatt_client.c:560:5
 1e0af28:    c1 f4 28 49       	[r4 + 4] = 40			  ## gatt_client.c:1202:43
 1e0af2c:    d1 59             	r1 = h[r4 + 58] (u)
 1e0af2e:    60 58             	r0 = h[r4 + 12] (u)
 1e0af30:    11 16             	call -990 <att_read_request : 1e0ab54 >
 1e0af32:    89 1f             	goto -238 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0af34:    c1 f4 2a 49       	[r4 + 4] = 42			  ## gatt_client.c:1207:43
 1e0af38:    e2 59             	r2 = h[r4 + 60] (u)
 1e0af3a:    d1 59             	r1 = h[r4 + 58] (u)
 1e0af3c:    60 58             	r0 = h[r4 + 12] (u)
 1e0af3e:    1e 16             	call -964 <send_gatt_read_blob_request : 1e0ab7c >
 1e0af40:    82 1f             	goto -252 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0af42:    c1 f4 2e 49       	[r4 + 4] = 46			  ## gatt_client.c:1222:43
 1e0af46:    08 18             	goto 16 <.GJTIE628_1_1_+0x20E : 1e0af58 >			  ## gatt_client.c:1222:43
 1e0af48:    c1 f4 30 49       	[r4 + 4] = 48			  ## gatt_client.c:1227:43
 1e0af4c:    60 58             	r0 = h[r4 + 12] (u)
 1e0af4e:    11 70             	r1 = 1
 1e0af50:    5d 16             	call -838 <att_execute_write_request : 1e0ac0c >
 1e0af52:    79 1f             	goto -270 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0af54:    c1 f4 32 49       	[r4 + 4] = 50			  ## gatt_client.c:1172:43
 1e0af58:    40 08             	r0 = r4
 1e0af5a:    29 16             	call -942 <send_gatt_prepare_write_request : 1e0abae >
 1e0af5c:    74 1f             	goto -280 <.GJTIE628_1_1_+0xFC : 1e0ae46 >
 1e0af5e:    e0 99             	r0 = r4 + 30			  ## gatt_client.c:491:17
 1e0af60:    65 a0             	r5 = sp + 6			  ## gatt_client.c:491:17
 1e0af62:    51 08             	r1 = r5			  ## gatt_client.c:491:5
 1e0af64:    bf f3 cc f6       	call -4712 <reverse_128 : 1e09d00 >			  ## gatt_client.c:491:5
 1e0af68:    82 59             	r2 = h[r4 + 48] (u)			  ## gatt_client.c:492:5
 1e0af6a:    71 59             	r1 = h[r4 + 46] (u)			  ## gatt_client.c:492:5
 1e0af6c:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:492:5
 1e0af6e:    03 71             	r3 = 16			  ## gatt_client.c:492:5
 1e0af70:    0b 02             	[sp] = r3			  ## gatt_client.c:492:5
 1e0af72:    53 08             	r3 = r5			  ## gatt_client.c:492:5
 1e0af74:    7b 15             	call -1290 <att_find_by_type_value_request : 1e0aa6c >			  ## gatt_client.c:492:5
 1e0af76:    67 1f             	goto -306 <.GJTIE628_1_1_+0xFC : 1e0ae46 >			  ## gatt_client.c:492:5
 1e0af78:    c1 f4 18 49       	[r4 + 4] = 24			  ## gatt_client.c:1162:43
 1e0af7c:    02 18             	goto 4 <.GJTIE628_1_1_+0x238 : 1e0af82 >			  ## gatt_client.c:1162:43
 1e0af7e:    c1 f4 2c 49       	[r4 + 4] = 44			  ## gatt_client.c:1212:43
 1e0af82:    f3 59             	r3 = h[r4 + 62] (u)
 1e0af84:    d2 59             	r2 = h[r4 + 58] (u)
 1e0af86:    61 58             	r1 = h[r4 + 12] (u)
 1e0af88:    04 49             	r4 = [r4 + 64]
 1e0af8a:    20 71             	r0 = 18
 1e0af8c:    0c 02             	[sp] = r4
 1e0af8e:    df 14             	call -1602 <att_write_request : 1e0a94e >
 1e0af90:    5a 1f             	goto -332 <.GJTIE628_1_1_+0xFC : 1e0ae46 >


gatt_client_write_value_of_characteristic:
 1e0af92:    76 01             	[--sp] = {rets, r6-r4}			  ## gatt_client.c:2079:0
 1e0af94:    34 08             	r4 = r3			  ## gatt_client.c:2079:0
 1e0af96:    25 08             	r5 = r2			  ## gatt_client.c:2079:0
 1e0af98:    16 08             	r6 = r1			  ## gatt_client.c:2079:0
 1e0af9a:    1a 15             	call -1484 <provide_context_for_conn_handle_and_start_timer : 1e0a9d0 >			  ## gatt_client.c:2084:33
 1e0af9c:    0f 20             	if (r0 == 0) goto 30 <gatt_client_write_value_of_characteristic+0x2A : 1e0afbc >
 1e0af9e:    12 40             	r2 = [r0 + 4]			  ## gatt_client.c:254:21
 1e0afa0:    51 79             	r1 = 149			  ## gatt_client.c:254:21
 1e0afa2:    0d 34             	if (r2 != 0) goto 26 <gatt_client_write_value_of_characteristic+0x2C : 1e0afbe >			  ## gatt_client.c:254:21
 1e0afa4:    c1 ff 3a 98 e0 01 	r1 = 31496250 <user_client_gatt_event : 1e0983a >			  ## gatt_client.c:2093:26
 1e0afaa:    29 40             	[r0 + 8] = r1			  ## gatt_client.c:2093:26
 1e0afac:    de 51             	h[r0 + 58] = r6			  ## gatt_client.c:2094:34
 1e0afae:    fd 51             	h[r0 + 62] = r5			  ## gatt_client.c:2095:34
 1e0afb0:    0c 41             	[r0 + 64] = r4			  ## gatt_client.c:2096:33
 1e0afb2:    c1 f4 17 09       	[r0 + 4] = 23			  ## gatt_client.c:2097:35
 1e0afb6:    3a 16             	call -908 <gatt_client_run : 1e0ac2c >			  ## gatt_client.c:2098:5
 1e0afb8:    01 70             	r1 = 0
 1e0afba:    01 18             	goto 2 <gatt_client_write_value_of_characteristic+0x2C : 1e0afbe >
 1e0afbc:    61 75             	r1 = 86
 1e0afbe:    10 08             	r0 = r1			  ## gatt_client.c:2100:1
 1e0afc0:    56 01             	{pc, r6-r4} = [sp++]			  ## gatt_client.c:2100:1


gatt_client_read_value_of_characteristic_using_value_handle:
 1e0afc2:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:1926:0
 1e0afc4:    14 08             	r4 = r1			  ## gatt_client.c:1926:0
 1e0afc6:    04 15             	call -1528 <provide_context_for_conn_handle_and_start_timer : 1e0a9d0 >			  ## gatt_client.c:1931:33
 1e0afc8:    0e 20             	if (r0 == 0) goto 28 <gatt_client_read_value_of_characteristic_using_value_handle+0x24 : 1e0afe6 >
 1e0afca:    11 40             	r1 = [r0 + 4]			  ## gatt_client.c:254:21
 1e0afcc:    55 79             	r5 = 149			  ## gatt_client.c:254:21
 1e0afce:    0c 32             	if (r1 != 0) goto 24 <gatt_client_read_value_of_characteristic_using_value_handle+0x26 : 1e0afe8 >			  ## gatt_client.c:254:21
 1e0afd0:    c1 ff 3a 98 e0 01 	r1 = 31496250 <user_client_gatt_event : 1e0983a >			  ## gatt_client.c:1940:26
 1e0afd6:    29 40             	[r0 + 8] = r1			  ## gatt_client.c:1940:26
 1e0afd8:    dc 51             	h[r0 + 58] = r4			  ## gatt_client.c:1941:34
 1e0afda:    05 70             	r5 = 0			  ## gatt_client.c:1941:34
 1e0afdc:    ed 51             	h[r0 + 60] = r5			  ## gatt_client.c:1942:34
 1e0afde:    c1 f4 0f 09       	[r0 + 4] = 15			  ## gatt_client.c:1943:35
 1e0afe2:    24 16             	call -952 <gatt_client_run : 1e0ac2c >			  ## gatt_client.c:1944:5
 1e0afe4:    01 18             	goto 2 <gatt_client_read_value_of_characteristic_using_value_handle+0x26 : 1e0afe8 >
 1e0afe6:    65 75             	r5 = 86
 1e0afe8:    50 08             	r0 = r5			  ## gatt_client.c:1946:1
 1e0afea:    55 01             	{pc, r5, r4} = [sp++]			  ## gatt_client.c:1946:1


gatt_client_read_long_value_of_characteristic_using_value_handle:
 1e0afec:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:2024:0
 1e0afee:    14 08             	r4 = r1			  ## gatt_client.c:2024:0
 1e0aff0:    ef 14             	call -1570 <provide_context_for_conn_handle_and_start_timer : 1e0a9d0 >			  ## gatt_client.c:2006:33
 1e0aff2:    0e 20             	if (r0 == 0) goto 28 <gatt_client_read_long_value_of_characteristic_using_value_handle+0x24 : 1e0b010 >
 1e0aff4:    11 40             	r1 = [r0 + 4]			  ## gatt_client.c:254:21
 1e0aff6:    55 79             	r5 = 149			  ## gatt_client.c:254:21
 1e0aff8:    0c 32             	if (r1 != 0) goto 24 <gatt_client_read_long_value_of_characteristic_using_value_handle+0x26 : 1e0b012 >			  ## gatt_client.c:254:21
 1e0affa:    c1 ff 3a 98 e0 01 	r1 = 31496250 <user_client_gatt_event : 1e0983a >			  ## gatt_client.c:2015:26
 1e0b000:    29 40             	[r0 + 8] = r1			  ## gatt_client.c:2015:26
 1e0b002:    dc 51             	h[r0 + 58] = r4			  ## gatt_client.c:2016:34
 1e0b004:    05 70             	r5 = 0			  ## gatt_client.c:2016:34
 1e0b006:    ed 51             	h[r0 + 60] = r5			  ## gatt_client.c:2017:34
 1e0b008:    c1 f4 11 09       	[r0 + 4] = 17			  ## gatt_client.c:2018:35
 1e0b00c:    0f 16             	call -994 <gatt_client_run : 1e0ac2c >			  ## gatt_client.c:2019:5
 1e0b00e:    01 18             	goto 2 <gatt_client_read_long_value_of_characteristic_using_value_handle+0x26 : 1e0b012 >
 1e0b010:    65 75             	r5 = 86
 1e0b012:    50 08             	r0 = r5			  ## gatt_client.c:2025:5
 1e0b014:    55 01             	{pc, r5, r4} = [sp++]			  ## gatt_client.c:2025:5


gatt_client_request_can_send_now_event:
 1e0b016:    ff f3 1c fa       	goto -3016 <att_dispatch_client_request_can_send_now_event : 1e0a452 >			  ## gatt_client.c:139:0


gatt_client_sync_mtu:
 1e0b01a:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:2493:0
 1e0b01c:    fc 0b             	sp += -8			  ## gatt_client.c:2493:0
 1e0b01e:    c5 ff 1c 1d 00 00 	r5 = 7452 <gatt_client_global_info : 1d1c >			  ## gatt_client.c:2493:0
 1e0b024:    04 4a             	r4 = [r5 + 0]			  ## gatt_client.c:2493:0
 1e0b026:    13 08             	r3 = r1			  ## gatt_client.c:2493:0
 1e0b028:    02 08             	r2 = r0			  ## gatt_client.c:2493:0
 1e0b02a:    1e 28             	if (r4 == 0) goto 60 <gatt_client_sync_mtu+0x4E : 1e0b068 >			  ## gatt_client.c:2493:0
 1e0b02c:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:206:25
 1e0b02e:    20 f2 03 00       	if (r0 == r2) goto 6 <gatt_client_sync_mtu+0x1E : 1e0b038 >			  ## gatt_client.c:206:25
 1e0b032:    04 48             	r4 = [r4 + 0]
 1e0b034:    fb 39             	if (r4 != 0) goto -10 <gatt_client_sync_mtu+0x12 : 1e0b02c >
 1e0b036:    18 18             	goto 48 <gatt_client_sync_mtu+0x4E : 1e0b068 >
 1e0b038:    bb 58             	h[r4 + 22] = r3			  ## gatt_client.c:2504:21
 1e0b03a:    40 4a             	r0 = [r5 + 16]			  ## gatt_client.c:111:18
 1e0b03c:    15 20             	if (r0 == 0) goto 42 <gatt_client_sync_mtu+0x4E : 1e0b068 >			  ## gatt_client.c:111:18
 1e0b03e:    50 7b             	r0 = 181			  ## gatt_client.c:116:18
 1e0b040:    d0 f5 02 00       	b[sp+2] = r0			  ## gatt_client.c:116:18
 1e0b044:    40 70             	r0 = 4			  ## gatt_client.c:116:18
 1e0b046:    d0 f5 03 00       	b[sp+3] = r0			  ## gatt_client.c:117:18
 1e0b04a:    24 a0             	r4 = sp + 2			  ## gatt_client.c:117:18
 1e0b04c:    21 70             	r1 = 2			  ## gatt_client.c:118:5
 1e0b04e:    40 08             	r0 = r4			  ## gatt_client.c:118:5
 1e0b050:    bf f3 f9 f5       	call -5134 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:118:5
 1e0b054:    41 70             	r1 = 4			  ## gatt_client.c:120:5
 1e0b056:    32 08             	r2 = r3			  ## gatt_client.c:120:5
 1e0b058:    bf f3 f5 f5       	call -5142 <little_endian_store_16 : 1e09c46 >			  ## gatt_client.c:120:5
 1e0b05c:    45 4a             	r5 = [r5 + 16]			  ## gatt_client.c:121:15
 1e0b05e:    40 70             	r0 = 4			  ## gatt_client.c:121:5
 1e0b060:    01 70             	r1 = 0			  ## gatt_client.c:121:5
 1e0b062:    63 70             	r3 = 6			  ## gatt_client.c:121:5
 1e0b064:    42 08             	r2 = r4			  ## gatt_client.c:121:5
 1e0b066:    85 00             	call r5			  ## gatt_client.c:121:5
 1e0b068:    04 0a             	sp += 8
 1e0b06a:    55 01             	{pc, r5, r4} = [sp++]


gatt_client_timeout_handler:
 1e0b06c:    74 01             	[--sp] = {rets, r4}			  ## gatt_client.c:173:0
 1e0b06e:    44 40             	r4 = [r0 + 16]			  ## gatt_client.c:174:57
 1e0b070:    09 28             	if (r4 == 0) goto 18 <gatt_client_timeout_handler+0x18 : 1e0b084 >
 1e0b072:    10 48             	r0 = [r4 + 4]			  ## gatt_client.c:254:21
 1e0b074:    07 20             	if (r0 == 0) goto 14 <gatt_client_timeout_handler+0x18 : 1e0b084 >
 1e0b076:    c1 f4 00 49       	[r4 + 4] = 0			  ## gatt_client.c:615:35
 1e0b07a:    40 08             	r0 = r4			  ## gatt_client.c:616:5
 1e0b07c:    a6 14             	call -1716 <gatt_client_timeout_stop : 1e0a9ca >			  ## gatt_client.c:616:5
 1e0b07e:    f1 77             	r1 = 127			  ## gatt_client.c:1269:5
 1e0b080:    40 08             	r0 = r4			  ## gatt_client.c:1269:5
 1e0b082:    be 14             	call -1668 <emit_gatt_complete_event : 1e0aa00 >			  ## gatt_client.c:1269:5
 1e0b084:    54 01             	{pc, r4} = [sp++]			  ## gatt_client.c:180:1


btstack_code_end:
 1e0b086:    00 00             	nop


system_text_start:
 1e0b088:    89 f0 e0 01       	if ((r9 & r8) == 0) goto 960 <__usr_timer_del+0x4 : 1e0b44c >
 1e0b08c:    80 e9 e0 01       	if (r0 == -104) goto 960 <__usr_timer_del+0x8 : 1e0b450 >
 1e0b090:    4a 08             	r10 = r4
 1e0b092:    00 00             	nop


system_code_begin:
 1e0b094:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:443:0
 1e0b096:    04 08             	r4 = r0			  ## timer.c:443:0
 1e0b098:    97 f3 80 de       	call 3128576 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b09c:    c0 ff b0 08 00 00 	r0 = 2224 <timer_head : 8b0 >			  ## spinlock.h:77:5
 1e0b0a2:    05 40             	r5 = [r0 + 0]			  ## spinlock.h:77:5
 1e0b0a4:    05 f2 19 00       	if (r5 == r0) goto 50 <system_code_begin+0x46 : 1e0b0da >
 1e0b0a8:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:450:16
 1e0b0aa:    41 f2 04 00       	if (r1 == r4) goto 8 <system_code_begin+0x22 : 1e0b0b6 >			  ## timer.c:450:16
 1e0b0ae:    05 4a             	r5 = [r5 + 0]
 1e0b0b0:    05 f2 fa 1f       	if (r5 != r0) goto -12 <system_code_begin+0x14 : 1e0b0a8 >
 1e0b0b4:    12 18             	goto 36 <system_code_begin+0x46 : 1e0b0da >
 1e0b0b6:    97 f3 6f de       	call 3128542 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b0ba:    09 18             	goto 18 <system_code_begin+0x3A : 1e0b0ce >
 1e0b0bc:    8f f3 a0 c0       	call 2064704 <report_data_code_begin : 3200 >			  ## timer.c:453:29
 1e0b0c0:    41 4a             	r1 = [r5 + 16]			  ## timer.c:453:51
 1e0b0c2:    97 f3 17 df       	call 3128878 <strcmp : 106ef4 >			  ## timer.c:453:22
 1e0b0c6:    05 20             	if (r0 == 0) goto 10 <system_code_begin+0x3E : 1e0b0d2 >			  ## timer.c:453:22
 1e0b0c8:    10 70             	r0 = 1			  ## timer.c:456:17
 1e0b0ca:    97 f3 75 de       	call 3128554 <os_time_dly : 106db8 >			  ## timer.c:456:17
 1e0b0ce:    e0 6b             	r0 = b[r5 + 30] (u)
 1e0b0d0:    f5 31             	if (r0 != 0) goto -22 <system_code_begin+0x28 : 1e0b0bc >
 1e0b0d2:    97 f3 63 de       	call 3128518 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b0d6:    06 f4 01 5c       	[r5 + 24] |= 16777216			  ## timer.c:459:20
 1e0b0da:    97 f3 5d de       	call 3128506 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b0de:    8f f3 8f c0       	call 2064670 <report_data_code_begin : 3200 >			  ## timer.c:466:12
 1e0b0e2:    03 30             	if (r0 != 0) goto 6 <system_code_begin+0x56 : 1e0b0ea >
 1e0b0e4:    c0 ff 37 f1 e0 01 	r0 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >			  ## timer.c:467:9
 1e0b0ea:    01 fd 30 4b       	r1 = r4 | 3145728			  ## timer.c:470:40
 1e0b0ee:    97 f3 85 de       	call 3128586 <os_taskq_del_type : 106dfc >			  ## timer.c:470:5
 1e0b0f2:    c0 ff 50 26 00 00 	r0 = 9808 <sys_timer_sem : 2650 >			  ## timer.c:472:5
 1e0b0f8:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:472:5
 1e0b0fa:    d7 f3 87 de       	goto 3128590 <os_sem_post : 106e0c >			  ## timer.c:472:5


sys_timer_del:
 1e0b0fe:    ca 1f             	goto -108 <system_code_begin : 1e0b094 >			  ## timer.c:476:0


usr_timer_del:
 1e0b100:    75 01             	[--sp] = {rets, r5, r4}			  ## usr_timer.c:210:0
 1e0b102:    04 08             	r4 = r0			  ## usr_timer.c:210:0
 1e0b104:    97 f3 4a de       	call 3128468 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b108:    00 70             	r0 = 0
 1e0b10a:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >
 1e0b110:    c2 c0             	r2 = r0 << 3			  ## usr_timer.c:217:35
 1e0b112:    43 b4             	r3 = r2 + r1			  ## usr_timer.c:217:35
 1e0b114:    02 f6 78 31       	r2 = [r3 + 376]			  ## usr_timer.c:217:35
 1e0b118:    33 fc 78 01       	r3 = r3 + 376			  ## usr_timer.c:217:35
 1e0b11c:    32 f2 09 00       	if (r2 == r3) goto 18 <usr_timer_del+0x32 : 1e0b132 >
 1e0b120:    e5 54             	r5 = h[r2 + 28] (u)			  ## usr_timer.c:220:20
 1e0b122:    45 f2 04 00       	if (r5 == r4) goto 8 <usr_timer_del+0x2E : 1e0b12e >			  ## usr_timer.c:220:20
 1e0b126:    02 44             	r2 = [r2 + 0]
 1e0b128:    32 f2 fa 1f       	if (r2 != r3) goto -12 <usr_timer_del+0x20 : 1e0b120 >
 1e0b12c:    02 18             	goto 4 <usr_timer_del+0x32 : 1e0b132 >
 1e0b12e:    06 f4 01 2c       	[r2 + 24] |= 16777216			  ## usr_timer.c:222:24
 1e0b132:    10 80             	r0 += 1			  ## usr_timer.c:215:46
 1e0b134:    20 e0 ec 1f       	if (r0 != 2) goto -40 <usr_timer_del+0x10 : 1e0b110 >
 1e0b138:    15 01             	{rets, r5, r4} = [sp++]			  ## spinlock.h:88:5
 1e0b13a:    d7 f3 2d de       	goto 3128410 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


__get_min_precesion:
 1e0b13e:    77 01             	[--sp] = {rets, r7-r4}			  ## usr_timer.c:109:0
 1e0b140:    04 fb e8 03       	r4 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## usr_timer.c:109:0
 1e0b144:    05 70             	r5 = 0			  ## usr_timer.c:109:0
 1e0b146:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## usr_timer.c:109:0
 1e0b14c:    81 bb             	r1 = r5 + r6			  ## list.h:124:18
 1e0b14e:    00 f6 78 11       	r0 = [r1 + 376]			  ## list.h:124:18
 1e0b152:    11 fc 78 01       	r1 = r1 + 376			  ## list.h:124:18
 1e0b156:    01 f2 0b 00       	if (r1 == r0) goto 22 <__get_min_precesion+0x32 : 1e0b170 >			  ## list.h:124:18
 1e0b15a:    57 40             	r7 = [r0 + 20]			  ## usr_timer.c:124:23
 1e0b15c:    8f f3 9b c0       	call 2064694 <jiffies_msec : 3296 >			  ## usr_timer.c:124:33
 1e0b160:    20 be             	r0 = r7 - r0			  ## usr_timer.c:124:31
 1e0b162:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x2A : 1e0b168 >
 1e0b166:    10 70             	r0 = 1			  ## usr_timer.c:125:13
 1e0b168:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x30 : 1e0b16e >
 1e0b16c:    40 08             	r0 = r4			  ## usr_timer.c:128:13
 1e0b16e:    04 08             	r4 = r0
 1e0b170:    85 80             	r5 += 8			  ## usr_timer.c:113:23
 1e0b172:    05 e1 eb 1f       	if (r5 != 16) goto -42 <__get_min_precesion+0xE : 1e0b14c >			  ## usr_timer.c:113:23
 1e0b176:    c5 ff b0 08 00 00 	r5 = 2224 <timer_head : 8b0 >
 1e0b17c:    06 4a             	r6 = [r5 + 0]
 1e0b17e:    56 f2 11 00       	if (r6 == r5) goto 34 <__get_min_precesion+0x66 : 1e0b1a4 >
 1e0b182:    b0 6d             	r0 = b[r6 + 27] (u)			  ## usr_timer.c:134:13
 1e0b184:    20 f3 0b 00       	if ((r0 & 1) != 0) goto 22 <__get_min_precesion+0x60 : 1e0b19e >			  ## usr_timer.c:134:13
 1e0b188:    57 4c             	r7 = [r6 + 20]			  ## usr_timer.c:137:23
 1e0b18a:    8f f3 84 c0       	call 2064648 <jiffies_msec : 3296 >			  ## usr_timer.c:137:33
 1e0b18e:    20 be             	r0 = r7 - r0			  ## usr_timer.c:137:31
 1e0b190:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x58 : 1e0b196 >
 1e0b194:    10 70             	r0 = 1			  ## usr_timer.c:138:13
 1e0b196:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x5E : 1e0b19c >
 1e0b19a:    40 08             	r0 = r4			  ## usr_timer.c:141:13
 1e0b19c:    04 08             	r4 = r0
 1e0b19e:    06 4c             	r6 = [r6 + 0]
 1e0b1a0:    56 f2 ef 1f       	if (r6 != r5) goto -34 <__get_min_precesion+0x44 : 1e0b182 >
 1e0b1a4:    40 08             	r0 = r4			  ## usr_timer.c:148:5
 1e0b1a6:    57 01             	{pc, r7-r4} = [sp++]			  ## usr_timer.c:148:5


__precesion_sort:
 1e0b1a8:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:92:0
 1e0b1aa:    02 42             	r2 = [r1 + 0]			  ## usr_timer.c:92:0
 1e0b1ac:    12 f2 0b 00       	if (r2 == r1) goto 22 <__precesion_sort+0x1E : 1e0b1c6 >			  ## usr_timer.c:92:0
 1e0b1b0:    63 40             	r3 = [r0 + 24]			  ## usr_timer.c:92:0
 1e0b1b2:    33 fd ff 3c       	r3 = r3 & 16777215			  ## usr_timer.c:92:0
 1e0b1b6:    64 44             	r4 = [r2 + 24]			  ## usr_timer.c:98:26
 1e0b1b8:    34 fd ff 4c       	r4 = r4 & 16777215			  ## usr_timer.c:98:26
 1e0b1bc:    43 f2 06 30       	if (r3 < r4) goto 12 <__precesion_sort+0x24 : 1e0b1cc >			  ## usr_timer.c:98:26
 1e0b1c0:    02 44             	r2 = [r2 + 0]
 1e0b1c2:    12 f2 f8 1f       	if (r2 != r1) goto -16 <__precesion_sort+0xE : 1e0b1b6 >
 1e0b1c6:    13 42             	r3 = [r1 + 4]			  ## list.h:154:28
 1e0b1c8:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e0b1ca:    03 18             	goto 6 <__precesion_sort+0x2A : 1e0b1d2 >			  ## list.h:137:16
 1e0b1cc:    13 44             	r3 = [r2 + 4]			  ## list.h:154:28
 1e0b1ce:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0b1d0:    21 08             	r1 = r2			  ## list.h:137:16
 1e0b1d2:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0b1d4:    1b 40             	[r0 + 4] = r3			  ## list.h:139:16
 1e0b1d6:    08 46             	[r3 + 0] = r0			  ## list.h:140:16
 1e0b1d8:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:106:1


__usr_timer_add:
 1e0b1da:    79 01             	[--sp] = {rets, r9-r4}			  ## usr_timer.c:169:0
 1e0b1dc:    37 08             	r7 = r3			  ## usr_timer.c:169:0
 1e0b1de:    28 08             	r8 = r2			  ## usr_timer.c:169:0
 1e0b1e0:    16 08             	r6 = r1			  ## usr_timer.c:169:0
 1e0b1e2:    04 08             	r4 = r0			  ## usr_timer.c:169:0
 1e0b1e4:    97 f3 da dd       	call 3128244 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b1e8:    09 f5 1c 00       	r9 = [sp+28]
 1e0b1ec:    00 70             	r0 = 0
 1e0b1ee:    c5 ff 70 21 00 00 	r5 = 8560 <timer_pool : 2170 >
 1e0b1f4:    f1 6b             	r1 = b[r5 + 31] (u)			  ## usr_timer.c:40:27
 1e0b1f6:    0d 22             	if (r1 == 0) goto 26 <__usr_timer_add+0x38 : 1e0b212 >			  ## usr_timer.c:40:13
 1e0b1f8:    10 80             	r0 += 1			  ## usr_timer.c:39:50
 1e0b1fa:    05 82             	r5 += 32			  ## usr_timer.c:39:23
 1e0b1fc:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__usr_timer_add+0x1A : 1e0b1f4 >			  ## usr_timer.c:39:23
 1e0b200:    97 f3 ca dd       	call 3128212 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b204:    00 72             	r0 = 32			  ## usr_timer.c:56:29
 1e0b206:    80 f3 cb 03       	call 1942 <malloc : 1e0b9a0 >			  ## usr_timer.c:56:29
 1e0b20a:    05 08             	r5 = r0			  ## usr_timer.c:56:29
 1e0b20c:    06 3a             	if (r5 != 0) goto 12 <__usr_timer_add+0x40 : 1e0b21a >
 1e0b20e:    06 70             	r6 = 0
 1e0b210:    56 18             	goto 172 <__usr_timer_add+0xE4 : 1e0b2be >
 1e0b212:    10 70             	r0 = 1			  ## usr_timer.c:41:32
 1e0b214:    f8 6b             	b[r5 + 31] = r0			  ## usr_timer.c:41:32
 1e0b216:    97 f3 bf dd       	call 3128190 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b21a:    3c 4a             	[r5 + 12] = r4			  ## usr_timer.c:62:13
 1e0b21c:    2e 4a             	[r5 + 8] = r6			  ## usr_timer.c:63:13
 1e0b21e:    60 4a             	r0 = [r5 + 24]			  ## usr_timer.c:64:13
 1e0b220:    06 70             	r6 = 0			  ## usr_timer.c:64:13
 1e0b222:    ee 6b             	b[r5 + 30] = r6			  ## usr_timer.c:66:16
 1e0b224:    31 fd ff 8c       	r1 = r8 & 16777215			  ## usr_timer.c:64:13
 1e0b228:    7a c6             	r2 = r7 << 25			  ## usr_timer.c:67:16
 1e0b22a:    22 fd 02 2c       	r2 = r2 & 33554432			  ## usr_timer.c:67:16
 1e0b22e:    51 b4             	r1 |= r2			  ## usr_timer.c:64:13
 1e0b230:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## usr_timer.c:64:13
 1e0b234:    50 b2             	r0 |= r1			  ## usr_timer.c:67:16
 1e0b236:    68 4a             	[r5 + 24] = r0			  ## usr_timer.c:67:16
 1e0b238:    8f f3 2d c0       	call 2064474 <jiffies_msec : 3296 >			  ## usr_timer.c:68:18
 1e0b23c:    80 09             	r0 += r8			  ## usr_timer.c:68:33
 1e0b23e:    58 4a             	[r5 + 20] = r0			  ## usr_timer.c:68:16
 1e0b240:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## usr_timer.c:68:16
 1e0b246:    00 f7 42 40       	r0 = h[r4 + 66] (u)			  ## usr_timer.c:69:13
 1e0b24a:    10 80             	r0 += 1			  ## usr_timer.c:69:13
 1e0b24c:    10 f7 42 40       	h[r4 + 66] = r0			  ## usr_timer.c:69:13
 1e0b250:    21 04             	r1 = r0.l (u)			  ## usr_timer.c:70:9
 1e0b252:    e8 5a             	h[r5 + 28] = r0			  ## usr_timer.c:69:11
 1e0b254:    02 22             	if (r1 == 0) goto 4 <__usr_timer_add+0x80 : 1e0b25a >			  ## usr_timer.c:69:11
 1e0b256:    05 3a             	if (r5 != 0) goto 10 <__usr_timer_add+0x88 : 1e0b262 >
 1e0b258:    32 18             	goto 100 <__usr_timer_add+0xE4 : 1e0b2be >
 1e0b25a:    10 70             	r0 = 1			  ## usr_timer.c:71:15
 1e0b25c:    e8 5a             	h[r5 + 28] = r0			  ## usr_timer.c:71:15
 1e0b25e:    10 f7 42 40       	h[r4 + 66] = r0			  ## usr_timer.c:72:19
 1e0b262:    97 f3 9b dd       	call 3128118 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b266:    e0 5a             	r0 = h[r5 + 28] (u)			  ## spinlock.h:77:5
 1e0b268:    01 70             	r1 = 0
 1e0b26a:    ca c0             	r2 = r1 << 3			  ## usr_timer.c:19:9
 1e0b26c:    03 b5             	r3 = r2 + r4			  ## usr_timer.c:19:9
 1e0b26e:    02 f6 78 31       	r2 = [r3 + 376]			  ## usr_timer.c:19:9
 1e0b272:    33 fc 78 01       	r3 = r3 + 376			  ## usr_timer.c:19:9
 1e0b276:    32 f2 07 00       	if (r2 == r3) goto 14 <__usr_timer_add+0xAE : 1e0b288 >			  ## usr_timer.c:19:9
 1e0b27a:    e6 54             	r6 = h[r2 + 28] (u)			  ## usr_timer.c:20:29
 1e0b27c:    27 04             	r7 = r0.l (u)			  ## usr_timer.c:20:23
 1e0b27e:    67 f2 0a 00       	if (r7 == r6) goto 20 <__usr_timer_add+0xBC : 1e0b296 >
 1e0b282:    02 44             	r2 = [r2 + 0]
 1e0b284:    32 f2 f9 1f       	if (r2 != r3) goto -14 <__usr_timer_add+0xA0 : 1e0b27a >
 1e0b288:    26 04             	r6 = r0.l (u)			  ## usr_timer.c:25:13
 1e0b28a:    11 80             	r1 += 1			  ## usr_timer.c:18:46
 1e0b28c:    03 2c             	if (r6 == 0) goto 6 <__usr_timer_add+0xBA : 1e0b294 >
 1e0b28e:    11 e0 ec df       	ifs (r1 <= 1) goto -40 <__usr_timer_add+0x90 : 1e0b26a >
 1e0b292:    04 18             	goto 8 <__usr_timer_add+0xC2 : 1e0b29c >
 1e0b294:    00 70             	r0 = 0
 1e0b296:    10 80             	r0 += 1
 1e0b298:    e8 5a             	h[r5 + 28] = r0
 1e0b29a:    e6 1f             	goto -52 <__usr_timer_add+0x8E : 1e0b268 >
 1e0b29c:    f0 fd 18 09       	r0 = r9 << 3			  ## usr_timer.c:179:31
 1e0b2a0:    40 09             	r0 += r4			  ## usr_timer.c:179:31
 1e0b2a2:    04 fc 78 01       	r4 = r0 + 376			  ## usr_timer.c:179:31
 1e0b2a6:    4b 17             	call -362 <__get_min_precesion : 1e0b13e >			  ## usr_timer.c:185:20
 1e0b2a8:    07 08             	r7 = r0			  ## usr_timer.c:185:20
 1e0b2aa:    50 08             	r0 = r5			  ## usr_timer.c:187:5
 1e0b2ac:    41 08             	r1 = r4			  ## usr_timer.c:187:5
 1e0b2ae:    7c 17             	call -264 <__precesion_sort : 1e0b1a8 >			  ## usr_timer.c:187:5
 1e0b2b0:    87 f2 03 90       	if (r7 <= r8) goto 6 <__usr_timer_add+0xE0 : 1e0b2ba >			  ## usr_timer.c:187:5
 1e0b2b4:    80 08             	r0 = r8			  ## usr_timer.c:191:9
 1e0b2b6:    bf f3 b6 aa       	call -43668 <timer1_run : 1e00826 >			  ## usr_timer.c:191:9
 1e0b2ba:    97 f3 6d dd       	call 3128026 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b2be:    60 08             	r0 = r6			  ## usr_timer.c:199:1
 1e0b2c0:    59 01             	{pc, r9-r4} = [sp++]			  ## usr_timer.c:199:1


usr_timer_add:
 1e0b2c2:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:202:0
 1e0b2c4:    fe 0b             	sp += -4			  ## usr_timer.c:202:0
 1e0b2c6:    34 08             	r4 = r3			  ## usr_timer.c:202:0
 1e0b2c8:    28 fb 00 33       	r3 = rets			  ## usr_timer.c:204:5
 1e0b2cc:    03 70             	r3 = 0			  ## usr_timer.c:206:12
 1e0b2ce:    0c 02             	[sp] = r4			  ## usr_timer.c:206:12
 1e0b2d0:    84 17             	call -248 <__usr_timer_add : 1e0b1da >			  ## usr_timer.c:206:12
 1e0b2d2:    20 04             	r0 = r0.l (u)			  ## usr_timer.c:206:5
 1e0b2d4:    02 0a             	sp += 4			  ## usr_timer.c:206:5
 1e0b2d6:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:206:5


sys_timeout_del:
 1e0b2d8:    dd 1e             	goto -582 <system_code_begin : 1e0b094 >			  ## timer.c:481:0


usr_timeout_del:
 1e0b2da:    12 1f             	goto -476 <usr_timer_del : 1e0b100 >			  ## usr_timer.c:240:0


sys_timer_modify:
 1e0b2dc:    77 01             	[--sp] = {rets, r7-r4}			  ## timer.c:290:0
 1e0b2de:    14 08             	r4 = r1			  ## timer.c:290:0
 1e0b2e0:    06 08             	r6 = r0			  ## timer.c:290:0
 1e0b2e2:    97 f3 5b dd       	call 3127990 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b2e6:    2b 17             	call -426 <__get_min_precesion : 1e0b13e >			  ## timer.c:295:20
 1e0b2e8:    c1 ff b0 08 00 00 	r1 = 2224 <timer_head : 8b0 >			  ## timer.c:295:20
 1e0b2ee:    07 42             	r7 = [r1 + 0]			  ## timer.c:295:20
 1e0b2f0:    05 08             	r5 = r0			  ## timer.c:295:20
 1e0b2f2:    17 f2 10 00       	if (r7 == r1) goto 32 <sys_timer_modify+0x3A : 1e0b316 >
 1e0b2f6:    e0 5e             	r0 = h[r7 + 28] (u)			  ## timer.c:298:16
 1e0b2f8:    60 f2 04 00       	if (r0 == r6) goto 8 <sys_timer_modify+0x28 : 1e0b304 >			  ## timer.c:298:16
 1e0b2fc:    07 4e             	r7 = [r7 + 0]
 1e0b2fe:    17 f2 fa 1f       	if (r7 != r1) goto -12 <sys_timer_modify+0x1A : 1e0b2f6 >
 1e0b302:    09 18             	goto 18 <sys_timer_modify+0x3A : 1e0b316 >
 1e0b304:    b0 6f             	r0 = b[r7 + 27] (u)			  ## timer.c:299:21
 1e0b306:    41 08             	r1 = r4			  ## timer.c:299:21
 1e0b308:    c8 fd c0 10       	r1 <= insert(r0, p:24, l:8)			  ## timer.c:299:21
 1e0b30c:    69 4e             	[r7 + 24] = r1			  ## timer.c:299:21
 1e0b30e:    8f f3 c2 bf       	call 2064260 <jiffies_msec : 3296 >			  ## timer.c:300:26
 1e0b312:    40 09             	r0 += r4			  ## timer.c:300:41
 1e0b314:    58 4e             	[r7 + 20] = r0			  ## timer.c:300:24
 1e0b316:    45 f2 03 90       	if (r5 <= r4) goto 6 <sys_timer_modify+0x44 : 1e0b320 >
 1e0b31a:    40 08             	r0 = r4			  ## timer.c:306:9
 1e0b31c:    bf f3 83 aa       	call -43770 <timer1_run : 1e00826 >			  ## timer.c:306:9
 1e0b320:    97 f3 3a dd       	call 3127924 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b324:    c0 ff 50 26 00 00 	r0 = 9808 <sys_timer_sem : 2650 >			  ## timer.c:311:5
 1e0b32a:    17 01             	{rets, r7-r4} = [sp++]			  ## timer.c:311:5
 1e0b32c:    d7 f3 6e dd       	goto 3128028 <os_sem_post : 106e0c >			  ## timer.c:311:5


__sys_timer_add:
 1e0b330:    78 01             	[--sp] = {rets, r8-r4}			  ## timer.c:239:0
 1e0b332:    36 08             	r6 = r3			  ## timer.c:239:0
 1e0b334:    28 08             	r8 = r2			  ## timer.c:239:0
 1e0b336:    17 08             	r7 = r1			  ## timer.c:239:0
 1e0b338:    04 08             	r4 = r0			  ## timer.c:239:0
 1e0b33a:    97 f3 2f dd       	call 3127902 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b33e:    00 70             	r0 = 0
 1e0b340:    c5 ff 70 21 00 00 	r5 = 8560 <timer_pool : 2170 >
 1e0b346:    f1 6b             	r1 = b[r5 + 31] (u)			  ## timer.c:192:27
 1e0b348:    0d 22             	if (r1 == 0) goto 26 <__sys_timer_add+0x34 : 1e0b364 >			  ## timer.c:192:13
 1e0b34a:    10 80             	r0 += 1			  ## timer.c:191:50
 1e0b34c:    05 82             	r5 += 32			  ## timer.c:191:23
 1e0b34e:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__sys_timer_add+0x16 : 1e0b346 >			  ## timer.c:191:23
 1e0b352:    97 f3 21 dd       	call 3127874 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b356:    00 72             	r0 = 32			  ## timer.c:209:29
 1e0b358:    80 f3 22 03       	call 1604 <malloc : 1e0b9a0 >			  ## timer.c:209:29
 1e0b35c:    05 08             	r5 = r0			  ## timer.c:209:29
 1e0b35e:    06 3a             	if (r5 != 0) goto 12 <__sys_timer_add+0x3C : 1e0b36c >
 1e0b360:    04 70             	r4 = 0
 1e0b362:    57 18             	goto 174 <__sys_timer_add+0xE2 : 1e0b412 >
 1e0b364:    10 70             	r0 = 1			  ## timer.c:193:32
 1e0b366:    f8 6b             	b[r5 + 31] = r0			  ## timer.c:193:32
 1e0b368:    97 f3 16 dd       	call 3127852 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b36c:    3c 4a             	[r5 + 12] = r4			  ## timer.c:215:13
 1e0b36e:    2f 4a             	[r5 + 8] = r7			  ## timer.c:216:13
 1e0b370:    60 4a             	r0 = [r5 + 24]			  ## timer.c:217:13
 1e0b372:    01 70             	r1 = 0			  ## timer.c:217:13
 1e0b374:    e9 6b             	b[r5 + 30] = r1			  ## timer.c:219:16
 1e0b376:    31 fd ff 8c       	r1 = r8 & 16777215			  ## timer.c:217:13
 1e0b37a:    72 c6             	r2 = r6 << 25			  ## timer.c:220:16
 1e0b37c:    22 fd 02 2c       	r2 = r2 & 33554432			  ## timer.c:220:16
 1e0b380:    51 b4             	r1 |= r2			  ## timer.c:217:13
 1e0b382:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## timer.c:217:13
 1e0b386:    50 b2             	r0 |= r1			  ## timer.c:220:16
 1e0b388:    68 4a             	[r5 + 24] = r0			  ## timer.c:220:16
 1e0b38a:    8f f3 84 bf       	call 2064136 <jiffies_msec : 3296 >			  ## timer.c:221:18
 1e0b38e:    80 09             	r0 += r8			  ## timer.c:221:33
 1e0b390:    58 4a             	[r5 + 20] = r0			  ## timer.c:221:16
 1e0b392:    8f f3 35 bf       	call 2063978 <report_data_code_begin : 3200 >			  ## timer.c:222:16
 1e0b396:    03 30             	if (r0 != 0) goto 6 <__sys_timer_add+0x6E : 1e0b39e >			  ## timer.c:222:16
 1e0b398:    c0 ff 37 f1 e0 01 	r0 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >			  ## timer.c:226:9
 1e0b39e:    48 4a             	[r5 + 16] = r0			  ## timer.c:222:14
 1e0b3a0:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## timer.c:222:14
 1e0b3a6:    01 f7 42 00       	r1 = h[r0 + 66] (u)			  ## timer.c:229:13
 1e0b3aa:    11 80             	r1 += 1			  ## timer.c:229:13
 1e0b3ac:    11 f7 42 00       	h[r0 + 66] = r1			  ## timer.c:229:13
 1e0b3b0:    62 04             	r2 = r1.l (u)			  ## timer.c:230:9
 1e0b3b2:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:229:11
 1e0b3b4:    04 34             	if (r2 != 0) goto 8 <__sys_timer_add+0x8E : 1e0b3be >			  ## timer.c:229:11
 1e0b3b6:    11 70             	r1 = 1			  ## timer.c:231:15
 1e0b3b8:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:231:15
 1e0b3ba:    11 f7 42 00       	h[r0 + 66] = r1			  ## timer.c:232:19
 1e0b3be:    97 f3 ed dc       	call 3127770 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b3c2:    bd 16             	call -646 <__get_min_precesion : 1e0b13e >			  ## timer.c:249:20
 1e0b3c4:    e4 5a             	r4 = h[r5 + 28] (u)			  ## timer.c:249:20
 1e0b3c6:    c1 ff b0 08 00 00 	r1 = 2224 <timer_head : 8b0 >
 1e0b3cc:    02 42             	r2 = [r1 + 0]
 1e0b3ce:    03 18             	goto 6 <__sys_timer_add+0xA6 : 1e0b3d6 >
 1e0b3d0:    43 08             	r3 = r4
 1e0b3d2:    14 96             	r4 = r3 + 1
 1e0b3d4:    ec 5a             	h[r5 + 28] = r4
 1e0b3d6:    12 f2 08 00       	if (r2 == r1) goto 16 <__sys_timer_add+0xBA : 1e0b3ea >
 1e0b3da:    23 08             	r3 = r2
 1e0b3dc:    e6 56             	r6 = h[r3 + 28] (u)			  ## timer.c:67:25
 1e0b3de:    27 05             	r7 = r4.l (u)			  ## timer.c:67:19
 1e0b3e0:    67 f2 f6 0f       	if (r7 == r6) goto -20 <__sys_timer_add+0xA0 : 1e0b3d0 >
 1e0b3e4:    03 46             	r3 = [r3 + 0]
 1e0b3e6:    13 f2 f9 1f       	if (r3 != r1) goto -14 <__sys_timer_add+0xAC : 1e0b3dc >
 1e0b3ea:    26 05             	r6 = r4.l (u)			  ## timer.c:72:9
 1e0b3ec:    03 70             	r3 = 0			  ## timer.c:72:9
 1e0b3ee:    f1 2d             	if (r6 == 0) goto -30 <__sys_timer_add+0xA2 : 1e0b3d2 >			  ## timer.c:72:9
 1e0b3f0:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e0b3f2:    1d 42             	[r1 + 4] = r5			  ## list.h:137:16
 1e0b3f4:    09 4a             	[r5 + 0] = r1			  ## list.h:138:16
 1e0b3f6:    1a 4a             	[r5 + 4] = r2			  ## list.h:139:16
 1e0b3f8:    0d 44             	[r2 + 0] = r5			  ## list.h:140:16
 1e0b3fa:    80 f2 03 90       	if (r0 <= r8) goto 6 <__sys_timer_add+0xD4 : 1e0b404 >			  ## list.h:140:16
 1e0b3fe:    80 08             	r0 = r8			  ## timer.c:256:9
 1e0b400:    bf f3 11 aa       	call -43998 <timer1_run : 1e00826 >			  ## timer.c:256:9
 1e0b404:    97 f3 c8 dc       	call 3127696 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b408:    c0 ff 50 26 00 00 	r0 = 9808 <sys_timer_sem : 2650 >			  ## timer.c:261:5
 1e0b40e:    97 f3 fd dc       	call 3127802 <os_sem_post : 106e0c >			  ## timer.c:261:5
 1e0b412:    20 05             	r0 = r4.l (u)			  ## timer.c:266:1
 1e0b414:    58 01             	{pc, r8-r4} = [sp++]			  ## timer.c:266:1


sys_timer_add:
 1e0b416:    28 fb 00 33       	r3 = rets			  ## timer.c:269:0
 1e0b41a:    03 70             	r3 = 0			  ## timer.c:274:12
 1e0b41c:    89 1f             	goto -238 <__sys_timer_add : 1e0b330 >			  ## timer.c:274:12


sys_timeout_add:
 1e0b41e:    32 e0 01 80       	if (r2 > 3) goto 2 <sys_timeout_add+0x6 : 1e0b424 >			  ## timer.c:278:0
 1e0b422:    32 70             	r2 = 3			  ## timer.c:283:6
 1e0b424:    28 fb 00 33       	r3 = rets			  ## timer.c:280:5
 1e0b428:    13 70             	r3 = 1			  ## timer.c:286:12
 1e0b42a:    82 1f             	goto -252 <__sys_timer_add : 1e0b330 >			  ## timer.c:286:12


usr_timeout_add:
 1e0b42c:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:232:0
 1e0b42e:    fe 0b             	sp += -4			  ## usr_timer.c:232:0
 1e0b430:    12 08             	r2 = r1			  ## usr_timer.c:232:0
 1e0b432:    01 08             	r1 = r0			  ## usr_timer.c:232:0
 1e0b434:    28 fb 00 03       	r0 = rets			  ## usr_timer.c:234:5
 1e0b438:    14 70             	r4 = 1			  ## usr_timer.c:236:12
 1e0b43a:    00 70             	r0 = 0			  ## usr_timer.c:236:12
 1e0b43c:    13 70             	r3 = 1			  ## usr_timer.c:236:12
 1e0b43e:    0c 02             	[sp] = r4			  ## usr_timer.c:236:12
 1e0b440:    cc 16             	call -616 <__usr_timer_add : 1e0b1da >			  ## usr_timer.c:236:12
 1e0b442:    20 04             	r0 = r0.l (u)			  ## usr_timer.c:236:5
 1e0b444:    02 0a             	sp += 4			  ## usr_timer.c:236:5
 1e0b446:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:236:5


__usr_timer_del:
 1e0b448:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:79:0
 1e0b44a:    04 08             	r4 = r0			  ## usr_timer.c:79:0
 1e0b44c:    97 f3 a6 dc       	call 3127628 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b450:    01 48             	r1 = [r4 + 0]			  ## list.h:165:36
 1e0b452:    12 48             	r2 = [r4 + 4]			  ## list.h:165:23
 1e0b454:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0b456:    c0 ff 70 21 00 00 	r0 = 8560 <timer_pool : 2170 >			  ## list.h:159:16
 1e0b45c:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0b45e:    04 f2 09 30       	if (r4 < r0) goto 18 <__usr_timer_del+0x2C : 1e0b474 >
 1e0b462:    00 fc 40 01       	r0 = r0 + 320
 1e0b466:    04 f2 05 20       	if (r4 >= r0) goto 10 <__usr_timer_del+0x2C : 1e0b474 >
 1e0b46a:    00 70             	r0 = 0			  ## timer.c:83:21
 1e0b46c:    f8 69             	b[r4 + 31] = r0			  ## timer.c:83:21
 1e0b46e:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e0b470:    d7 f3 92 dc       	goto 3127588 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b474:    97 f3 90 dc       	call 3127584 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b478:    40 08             	r0 = r4			  ## usr_timer.c:85:9
 1e0b47a:    14 01             	{rets, r4} = [sp++]			  ## usr_timer.c:85:9
 1e0b47c:    c0 f3 95 02       	goto 1322 <free : 1e0b9aa >			  ## usr_timer.c:85:9


usr_timer_schedule:
 1e0b480:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:299:0
 1e0b482:    97 f3 8b dc       	call 3127574 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b486:    05 70             	r5 = 0
 1e0b488:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >
 1e0b48e:    cb ff 01 00 00 40 	r11 = 1073741825 <umoddi3.bc+0x1 : 1 >
 1e0b494:    c9 ff 0a 00 00 b0 	r9 = 2952790026 <report_overlay_size+0x6 : a >
 1e0b49a:    ca ff f6 ff ff 4f 	r10 = 1342177270 <bank_code_load_addr+0x1E55D2 : 1fffff6 >
 1e0b4a0:    e8 c0             	r0 = r5 << 3			  ## usr_timer.c:307:35
 1e0b4a2:    80 09             	r0 += r8			  ## usr_timer.c:307:35
 1e0b4a4:    07 f6 78 01       	r7 = [r0 + 376]			  ## usr_timer.c:309:9
 1e0b4a8:    06 fc 78 01       	r6 = r0 + 376			  ## usr_timer.c:307:35
 1e0b4ac:    67 f2 37 00       	if (r7 == r6) goto 110 <usr_timer_schedule+0x9E : 1e0b51e >
 1e0b4b0:    74 08             	r4 = r7
 1e0b4b2:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:310:17
 1e0b4b4:    07 48             	r7 = [r4 + 0]			  ## usr_timer.c:310:17
 1e0b4b6:    20 f3 2a 00       	if ((r0 & 1) != 0) goto 84 <usr_timer_schedule+0x8E : 1e0b50e >
 1e0b4ba:    8f f3 bc be       	call 2063736 <jiffies_half_msec : 3236 >			  ## usr_timer.c:315:29
 1e0b4be:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:316:32
 1e0b4c0:    10 80             	r0 += 1			  ## usr_timer.c:315:49
 1e0b4c2:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:315:54
 1e0b4c4:    01 f2 09 90       	if (r1 <= r0) goto 18 <usr_timer_schedule+0x5A : 1e0b4da >
 1e0b4c8:    22 b2             	r2 = r1 - r0			  ## usr_timer.c:316:56
 1e0b4ca:    b2 f2 06 30       	if (r2 < r11) goto 12 <usr_timer_schedule+0x5A : 1e0b4da >			  ## usr_timer.c:316:56
 1e0b4ce:    80 fb 90 21       	r2 = r1 + r9			  ## usr_timer.c:318:36
 1e0b4d2:    a1 f2 01 80       	if (r1 > r10) goto 2 <usr_timer_schedule+0x58 : 1e0b4d8 >			  ## usr_timer.c:318:36
 1e0b4d6:    02 08             	r2 = r0			  ## usr_timer.c:317:25
 1e0b4d8:    5a 48             	[r4 + 20] = r2
 1e0b4da:    8f f3 ac be       	call 2063704 <jiffies_half_msec : 3236 >			  ## usr_timer.c:323:22
 1e0b4de:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:323:22
 1e0b4e0:    10 80             	r0 += 1			  ## usr_timer.c:323:22
 1e0b4e2:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:323:22
 1e0b4e4:    10 f2 19 b0       	ifs (r0 < r1) goto 50 <usr_timer_schedule+0x9A : 1e0b51a >			  ## usr_timer.c:323:22
 1e0b4e8:    97 f3 56 dc       	call 3127468 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b4ec:    21 48             	r1 = [r4 + 8]			  ## usr_timer.c:328:28
 1e0b4ee:    02 22             	if (r1 == 0) goto 4 <usr_timer_schedule+0x74 : 1e0b4f4 >			  ## usr_timer.c:328:28
 1e0b4f0:    30 48             	r0 = [r4 + 12]			  ## usr_timer.c:329:36
 1e0b4f2:    81 00             	call r1			  ## usr_timer.c:329:25
 1e0b4f4:    97 f3 52 dc       	call 3127460 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b4f8:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:332:25
 1e0b4fa:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <usr_timer_schedule+0x8E : 1e0b50e >			  ## usr_timer.c:332:25
 1e0b4fe:    8f f3 ca be       	call 2063764 <jiffies_msec : 3296 >			  ## usr_timer.c:337:38
 1e0b502:    61 48             	r1 = [r4 + 24]			  ## usr_timer.c:337:59
 1e0b504:    31 fd ff 1c       	r1 = r1 & 16777215			  ## usr_timer.c:337:59
 1e0b508:    10 09             	r0 += r1			  ## usr_timer.c:337:53
 1e0b50a:    58 48             	[r4 + 20] = r0			  ## usr_timer.c:337:36
 1e0b50c:    06 18             	goto 12 <usr_timer_schedule+0x9A : 1e0b51a >			  ## usr_timer.c:337:36
 1e0b50e:    97 f3 43 dc       	call 3127430 <local_irq_enable : 106d98 >
 1e0b512:    40 08             	r0 = r4
 1e0b514:    99 17             	call -206 <__usr_timer_del : 1e0b448 >
 1e0b516:    97 f3 41 dc       	call 3127426 <local_irq_disable : 106d9c >
 1e0b51a:    67 f2 c9 1f       	if (r7 != r6) goto -110 <usr_timer_schedule+0x30 : 1e0b4b0 >
 1e0b51e:    15 80             	r5 += 1			  ## usr_timer.c:305:46
 1e0b520:    25 e0 be 1f       	if (r5 != 2) goto -132 <usr_timer_schedule+0x20 : 1e0b4a0 >
 1e0b524:    0c 16             	call -1000 <__get_min_precesion : 1e0b13e >			  ## usr_timer.c:344:16
 1e0b526:    bf f3 7e a9       	call -44292 <timer1_run : 1e00826 >			  ## usr_timer.c:344:5
 1e0b52a:    97 f3 35 dc       	call 3127402 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b52e:    c0 ff 50 26 00 00 	r0 = 9808 <sys_timer_sem : 2650 >			  ## usr_timer.c:348:5
 1e0b534:    1b 01             	{rets, r11-r4} = [sp++]			  ## usr_timer.c:348:5
 1e0b536:    d7 f3 69 dc       	goto 3127506 <os_sem_post : 106e0c >			  ## usr_timer.c:348:5


usr_timer_modify:
 1e0b53a:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:245:0
 1e0b53c:    1a 08             	r10 = r1			  ## usr_timer.c:245:0
 1e0b53e:    05 08             	r5 = r0			  ## usr_timer.c:245:0
 1e0b540:    97 f3 2c dc       	call 3127384 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b544:    39 fd ff ac       	r9 = r10 & 16777215
 1e0b548:    04 70             	r4 = 0
 1e0b54a:    f9 15             	call -1038 <__get_min_precesion : 1e0b13e >			  ## usr_timer.c:250:20
 1e0b54c:    08 08             	r8 = r0			  ## usr_timer.c:250:20
 1e0b54e:    cb ff c0 23 00 00 	r11 = 9152 <cur_ch : 23c0 >
 1e0b554:    e0 c0             	r0 = r4 << 3			  ## usr_timer.c:254:35
 1e0b556:    b0 09             	r0 += r11			  ## usr_timer.c:254:35
 1e0b558:    06 f6 78 01       	r6 = [r0 + 376]			  ## usr_timer.c:254:35
 1e0b55c:    07 fc 78 01       	r7 = r0 + 376			  ## usr_timer.c:254:35
 1e0b560:    76 f2 18 00       	if (r6 == r7) goto 48 <usr_timer_modify+0x5A : 1e0b594 >
 1e0b564:    e0 5c             	r0 = h[r6 + 28] (u)			  ## usr_timer.c:257:20
 1e0b566:    50 f2 04 00       	if (r0 == r5) goto 8 <usr_timer_modify+0x38 : 1e0b572 >			  ## usr_timer.c:257:20
 1e0b56a:    06 4c             	r6 = [r6 + 0]
 1e0b56c:    76 f2 fa 1f       	if (r6 != r7) goto -12 <usr_timer_modify+0x2A : 1e0b564 >
 1e0b570:    11 18             	goto 34 <usr_timer_modify+0x5A : 1e0b594 >
 1e0b572:    60 4c             	r0 = [r6 + 24]			  ## usr_timer.c:258:25
 1e0b574:    20 fd ff 0c       	r0 = r0 & 4278190080			  ## usr_timer.c:258:25
 1e0b578:    e0 fd 90 00       	r0 = r0 | r9			  ## usr_timer.c:258:25
 1e0b57c:    68 4c             	[r6 + 24] = r0			  ## usr_timer.c:258:25
 1e0b57e:    8f f3 8a be       	call 2063636 <jiffies_msec : 3296 >			  ## usr_timer.c:259:30
 1e0b582:    a0 09             	r0 += r10			  ## usr_timer.c:259:45
 1e0b584:    58 4c             	[r6 + 20] = r0			  ## usr_timer.c:259:28
 1e0b586:    00 4c             	r0 = [r6 + 0]			  ## list.h:165:36
 1e0b588:    11 4c             	r1 = [r6 + 4]			  ## list.h:165:23
 1e0b58a:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0b58c:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0b58e:    60 08             	r0 = r6			  ## usr_timer.c:261:17
 1e0b590:    71 08             	r1 = r7			  ## usr_timer.c:261:17
 1e0b592:    0a 16             	call -1004 <__precesion_sort : 1e0b1a8 >			  ## usr_timer.c:261:17
 1e0b594:    14 80             	r4 += 1			  ## usr_timer.c:252:46
 1e0b596:    24 e0 dd 1f       	if (r4 != 2) goto -70 <usr_timer_modify+0x1A : 1e0b554 >
 1e0b59a:    a8 f2 03 90       	if (r8 <= r10) goto 6 <usr_timer_modify+0x6A : 1e0b5a4 >
 1e0b59e:    a0 08             	r0 = r10			  ## usr_timer.c:268:9
 1e0b5a0:    bf f3 41 a9       	call -44414 <timer1_run : 1e00826 >			  ## usr_timer.c:268:9
 1e0b5a4:    1b 01             	{rets, r11-r4} = [sp++]			  ## spinlock.h:88:5
 1e0b5a6:    d7 f3 f7 db       	goto 3127278 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_timer_init:
 1e0b5aa:    34 00             	[--sp] = rets			  ## timer.c:527:0
 1e0b5ac:    c0 ff 50 26 00 00 	r0 = 9808 <sys_timer_sem : 2650 >			  ## timer.c:530:5
 1e0b5b2:    01 70             	r1 = 0			  ## timer.c:530:5
 1e0b5b4:    97 f3 24 dc       	call 3127368 <os_sem_create : 106e00 >			  ## timer.c:530:5
 1e0b5b8:    c0 ff 30 b6 e0 01 	r0 = 31503920 <sys_timer_task : 1e0b630 >			  ## timer.c:532:5
 1e0b5be:    c2 ff 2e f1 e0 01 	r2 = 31519022 <bluetooth_base_uuid+0x124 : 1e0f12e >			  ## timer.c:532:5
 1e0b5c4:    01 70             	r1 = 0			  ## timer.c:532:5
 1e0b5c6:    80 f3 71 0b       	call 5858 <task_create : 1e0ccac >			  ## timer.c:532:5
 1e0b5ca:    c0 ff 38 25 00 00 	r0 = 9528 <usr_timer_head : 2538 >			  ## timer.c:532:5
 1e0b5d0:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0b5d2:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0b5d4:    81 90             	r1 = r0 + 8			  ## list.h:188:16
 1e0b5d6:    29 40             	[r0 + 8] = r1			  ## list.h:188:16
 1e0b5d8:    39 40             	[r0 + 12] = r1			  ## list.h:189:16
 1e0b5da:    88 01             	{rets} = [sp++]			  ## usr_timer.c:361:5
 1e0b5dc:    ff f3 d6 c0       	goto -32340 <timer1_init : 1e0378c >			  ## usr_timer.c:361:5


usr_systimer_callback:
 1e0b5e0:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## usr_timer.c:282:0
 1e0b5e6:    01 f6 80 01       	r1 = [r0 + 384]			  ## list.h:124:18
 1e0b5ea:    02 fc 80 01       	r2 = r0 + 384			  ## list.h:124:18
 1e0b5ee:    10 70             	r0 = 1			  ## list.h:124:23
 1e0b5f0:    21 f2 01 00       	if (r1 == r2) goto 2 <usr_systimer_callback+0x16 : 1e0b5f6 >			  ## list.h:124:23
 1e0b5f4:    00 70             	r0 = 0			  ## list.h:124:23
 1e0b5f6:    20 00             	rts			  ## usr_timer.c:295:5


__timer_del:
 1e0b5f8:    74 01             	[--sp] = {rets, r4}			  ## timer.c:90:0
 1e0b5fa:    04 08             	r4 = r0			  ## timer.c:90:0
 1e0b5fc:    97 f3 ce db       	call 3127196 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b600:    01 48             	r1 = [r4 + 0]			  ## list.h:165:36
 1e0b602:    12 48             	r2 = [r4 + 4]			  ## list.h:165:23
 1e0b604:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0b606:    c0 ff 70 21 00 00 	r0 = 8560 <timer_pool : 2170 >			  ## list.h:159:16
 1e0b60c:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0b60e:    04 f2 09 30       	if (r4 < r0) goto 18 <__timer_del+0x2C : 1e0b624 >
 1e0b612:    00 fc 40 01       	r0 = r0 + 320
 1e0b616:    04 f2 05 20       	if (r4 >= r0) goto 10 <__timer_del+0x2C : 1e0b624 >
 1e0b61a:    00 70             	r0 = 0			  ## timer.c:83:21
 1e0b61c:    f8 69             	b[r4 + 31] = r0			  ## timer.c:83:21
 1e0b61e:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e0b620:    d7 f3 ba db       	goto 3127156 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b624:    97 f3 b8 db       	call 3127152 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b628:    40 08             	r0 = r4			  ## timer.c:99:9
 1e0b62a:    14 01             	{rets, r4} = [sp++]			  ## timer.c:99:9
 1e0b62c:    c0 f3 bd 01       	goto 890 <free : 1e0b9aa >			  ## timer.c:99:9


sys_timer_task:
 1e0b630:    f8 0b             	sp += -16			  ## timer.c:496:0
 1e0b632:    c7 ff b0 08 00 00 	r7 = 2224 <timer_head : 8b0 >			  ## timer.c:496:0
 1e0b638:    c8 ff 50 26 00 00 	r8 = 9808 <sys_timer_sem : 2650 >			  ## timer.c:496:0
 1e0b63e:    0e 70             	r14 = 0			  ## timer.c:496:0
 1e0b640:    a9 70             	r9 = 10			  ## timer.c:496:0
 1e0b642:    cd ff 01 00 00 40 	r13 = 1073741825 <umoddi3.bc+0x1 : 1 >			  ## timer.c:496:0
 1e0b648:    4b fb b0 9c       	r11 = r9 + 2952790016			  ## timer.c:496:0
 1e0b64c:    cc ff f6 ff ff 4f 	r12 = 1342177270 <bank_code_load_addr+0x1E55D2 : 1fffff6 >			  ## timer.c:496:0
 1e0b652:    1f 70             	r15 = 1			  ## timer.c:496:0
 1e0b654:    ca ff 37 f1 e0 01 	r10 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >			  ## timer.c:496:0
 1e0b65a:    c4 ff 70 21 00 00 	r4 = 8560 <timer_pool : 2170 >			  ## timer.c:496:0
 1e0b660:    97 f3 9c db       	call 3127096 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b664:    06 4e             	r6 = [r7 + 0]			  ## timer.c:113:5
 1e0b666:    76 f2 66 00       	if (r6 == r7) goto 204 <sys_timer_task+0x106 : 1e0b736 >
 1e0b66a:    65 08             	r5 = r6
 1e0b66c:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:114:13
 1e0b66e:    06 4a             	r6 = [r5 + 0]			  ## timer.c:114:13
 1e0b670:    20 f3 2d 00       	if ((r0 & 1) != 0) goto 90 <sys_timer_task+0x9E : 1e0b6ce >
 1e0b674:    8f f3 df bd       	call 2063294 <jiffies_half_msec : 3236 >			  ## timer.c:126:21
 1e0b678:    51 4a             	r1 = [r5 + 20]			  ## timer.c:127:24
 1e0b67a:    10 80             	r0 += 1			  ## timer.c:126:41
 1e0b67c:    40 d0             	r0 = r0 >> 1			  ## timer.c:126:46
 1e0b67e:    22 b2             	r2 = r1 - r0			  ## timer.c:127:48
 1e0b680:    01 f2 09 90       	if (r1 <= r0) goto 18 <sys_timer_task+0x66 : 1e0b696 >			  ## timer.c:127:48
 1e0b684:    d2 f2 07 30       	if (r2 < r13) goto 14 <sys_timer_task+0x66 : 1e0b696 >
 1e0b688:    80 fb b0 21       	r2 = r1 + r11			  ## timer.c:129:28
 1e0b68c:    c1 f2 01 80       	if (r1 > r12) goto 2 <sys_timer_task+0x62 : 1e0b692 >			  ## timer.c:129:28
 1e0b690:    02 08             	r2 = r0			  ## timer.c:128:17
 1e0b692:    5a 4a             	[r5 + 20] = r2
 1e0b694:    21 08             	r1 = r2			  ## timer.c:134:13
 1e0b696:    10 f2 4b b0       	ifs (r0 < r1) goto 150 <sys_timer_task+0x100 : 1e0b730 >
 1e0b69a:    1f f9 1e 50       	b[r5 + 30] = r15			  ## timer.c:138:20
 1e0b69e:    97 f3 7b db       	call 3127030 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b6a2:    20 4a             	r0 = [r5 + 8]			  ## timer.c:142:26
 1e0b6a4:    08 02             	[sp] = r0			  ## timer.c:142:16
 1e0b6a6:    1f f5 04 00       	[sp+4] = r15			  ## timer.c:143:16
 1e0b6aa:    30 4a             	r0 = [r5 + 12]			  ## timer.c:144:26
 1e0b6ac:    28 02             	[sp+8] = r0			  ## timer.c:144:16
 1e0b6ae:    40 4a             	r0 = [r5 + 16]			  ## timer.c:145:45
 1e0b6b0:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:145:65
 1e0b6b2:    01 fd 30 1b       	r1 = r1 | 3145728			  ## timer.c:145:63
 1e0b6b6:    03 a0             	r3 = sp + 0			  ## timer.c:145:63
 1e0b6b8:    32 70             	r2 = 3			  ## timer.c:145:15
 1e0b6ba:    97 f3 91 db       	call 3127074 <os_taskq_post_type : 106de0 >			  ## timer.c:145:15
 1e0b6be:    1e f9 1e 50       	b[r5 + 30] = r14			  ## timer.c:147:20
 1e0b6c2:    d0 e0 16 c0       	ifs (r0 > 13) goto 44 <sys_timer_task+0xC2 : 1e0b6f2 >			  ## timer.c:150:13
 1e0b6c6:    25 20             	if (r0 == 0) goto 74 <sys_timer_task+0xE2 : 1e0b712 >
 1e0b6c8:    40 e0 18 00       	if (r0 == 4) goto 48 <sys_timer_task+0xCC : 1e0b6fc >
 1e0b6cc:    2d 18             	goto 90 <sys_timer_task+0xF8 : 1e0b728 >
 1e0b6ce:    10 4a             	r0 = [r5 + 4]			  ## list.h:165:23
 1e0b6d0:    18 4c             	[r6 + 4] = r0			  ## list.h:159:16
 1e0b6d2:    0e 40             	[r0 + 0] = r6			  ## list.h:160:16
 1e0b6d4:    45 f2 07 30       	if (r5 < r4) goto 14 <sys_timer_task+0xB6 : 1e0b6e6 >			  ## list.h:160:16
 1e0b6d8:    40 fc 40 01       	r0 = r4 + 320
 1e0b6dc:    05 f2 03 20       	if (r5 >= r0) goto 6 <sys_timer_task+0xB6 : 1e0b6e6 >
 1e0b6e0:    1e f9 1f 50       	b[r5 + 31] = r14			  ## timer.c:83:21
 1e0b6e4:    25 18             	goto 74 <sys_timer_task+0x100 : 1e0b730 >
 1e0b6e6:    97 f3 57 db       	call 3126958 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b6ea:    50 08             	r0 = r5			  ## timer.c:119:17
 1e0b6ec:    80 f3 5d 01       	call 698 <free : 1e0b9aa >			  ## timer.c:119:17
 1e0b6f0:    1d 18             	goto 58 <sys_timer_task+0xFC : 1e0b72c >			  ## timer.c:119:17
 1e0b6f2:    e0 e0 03 00       	if (r0 == 14) goto 6 <sys_timer_task+0xCC : 1e0b6fc >
 1e0b6f6:    50 e1 19 00       	if (r0 == 21) goto 50 <sys_timer_task+0xFC : 1e0b72c >
 1e0b6fa:    16 18             	goto 44 <sys_timer_task+0xF8 : 1e0b728 >
 1e0b6fc:    1a f6 10 50       	[r5 + 16] = r10			  ## timer.c:160:22
 1e0b700:    e0 5a             	r0 = h[r5 + 28] (u)			  ## timer.c:161:63
 1e0b702:    01 fd 30 0b       	r1 = r0 | 3145728			  ## timer.c:161:61
 1e0b706:    03 a0             	r3 = sp + 0			  ## timer.c:161:61
 1e0b708:    32 70             	r2 = 3			  ## timer.c:161:13
 1e0b70a:    a0 08             	r0 = r10			  ## timer.c:161:13
 1e0b70c:    97 f3 68 db       	call 3126992 <os_taskq_post_type : 106de0 >			  ## timer.c:161:13
 1e0b710:    0d 18             	goto 26 <sys_timer_task+0xFC : 1e0b72c >			  ## timer.c:161:13
 1e0b712:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:151:17
 1e0b714:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <sys_timer_task+0xF8 : 1e0b728 >			  ## timer.c:151:17
 1e0b718:    8f f3 bd bd       	call 2063226 <jiffies_msec : 3296 >			  ## timer.c:155:30
 1e0b71c:    61 4a             	r1 = [r5 + 24]			  ## timer.c:155:50
 1e0b71e:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:155:50
 1e0b722:    10 09             	r0 += r1			  ## timer.c:155:45
 1e0b724:    58 4a             	[r5 + 20] = r0			  ## timer.c:155:28
 1e0b726:    02 18             	goto 4 <sys_timer_task+0xFC : 1e0b72c >			  ## timer.c:155:28
 1e0b728:    50 08             	r0 = r5
 1e0b72a:    66 17             	call -308 <__timer_del : 1e0b5f8 >
 1e0b72c:    97 f3 36 db       	call 3126892 <local_irq_disable : 106d9c >
 1e0b730:    76 f2 9b 1f       	if (r6 != r7) goto -202 <sys_timer_task+0x3A : 1e0b66a >
 1e0b734:    06 4e             	r6 = [r7 + 0]
 1e0b736:    76 f2 0a 00       	if (r6 == r7) goto 20 <sys_timer_task+0x11E : 1e0b74e >
 1e0b73a:    f0 07             	r0 = -1
 1e0b73c:    55 4c             	r5 = [r6 + 20]			  ## timer.c:172:33
 1e0b73e:    50 f2 01 80       	if (r0 > r5) goto 2 <sys_timer_task+0x114 : 1e0b744 >			  ## timer.c:172:33
 1e0b742:    05 08             	r5 = r0			  ## timer.c:172:19
 1e0b744:    06 4c             	r6 = [r6 + 0]
 1e0b746:    50 08             	r0 = r5
 1e0b748:    76 f2 f8 1f       	if (r6 != r7) goto -16 <sys_timer_task+0x10C : 1e0b73c >
 1e0b74c:    01 18             	goto 2 <sys_timer_task+0x120 : 1e0b750 >
 1e0b74e:    f5 07             	r5 = -1
 1e0b750:    f6 14             	call -1556 <__get_min_precesion : 1e0b13e >			  ## timer.c:175:16
 1e0b752:    bf f3 68 a8       	call -44848 <timer1_run : 1e00826 >			  ## timer.c:175:5
 1e0b756:    97 f3 1f db       	call 3126846 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b75a:    f5 ef 08 00       	if (r5 == -1) goto 16 <sys_timer_task+0x13E : 1e0b76e >			  ## timer.c:508:13
 1e0b75e:    8f f3 9a bd       	call 2063156 <jiffies_msec : 3296 >			  ## timer.c:509:32
 1e0b762:    20 ba             	r0 = r5 - r0			  ## timer.c:509:30
 1e0b764:    a0 e0 05 30       	if (r0 < 10) goto 10 <sys_timer_task+0x142 : 1e0b772 >			  ## timer.c:511:17
 1e0b768:    c0 fe 90 10       	r1 = r0 / r9 (u)			  ## timer.c:509:48
 1e0b76c:    03 18             	goto 6 <sys_timer_task+0x144 : 1e0b774 >			  ## timer.c:509:48
 1e0b76e:    01 70             	r1 = 0			  ## timer.c:519:13
 1e0b770:    01 18             	goto 2 <sys_timer_task+0x144 : 1e0b774 >			  ## timer.c:519:13
 1e0b772:    21 70             	r1 = 2			  ## timer.c:515:17
 1e0b774:    80 08             	r0 = r8
 1e0b776:    97 f3 47 db       	call 3126926 <os_sem_pend : 106e08 >
 1e0b77a:    72 1f             	goto -284 <sys_timer_task+0x30 : 1e0b660 >


sys_timer_re_run:
 1e0b77c:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:317:0
 1e0b77e:    04 08             	r4 = r0			  ## timer.c:317:0
 1e0b780:    97 f3 0c db       	call 3126808 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b784:    c0 ff b0 08 00 00 	r0 = 2224 <timer_head : 8b0 >			  ## spinlock.h:77:5
 1e0b78a:    05 40             	r5 = [r0 + 0]			  ## spinlock.h:77:5
 1e0b78c:    05 f2 0e 00       	if (r5 == r0) goto 28 <sys_timer_re_run+0x30 : 1e0b7ac >
 1e0b790:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:323:16
 1e0b792:    41 f2 04 00       	if (r1 == r4) goto 8 <sys_timer_re_run+0x22 : 1e0b79e >			  ## timer.c:323:16
 1e0b796:    05 4a             	r5 = [r5 + 0]
 1e0b798:    05 f2 fa 1f       	if (r5 != r0) goto -12 <sys_timer_re_run+0x14 : 1e0b790 >
 1e0b79c:    07 18             	goto 14 <sys_timer_re_run+0x30 : 1e0b7ac >
 1e0b79e:    8f f3 7a bd       	call 2063092 <jiffies_msec : 3296 >			  ## timer.c:324:26
 1e0b7a2:    61 4a             	r1 = [r5 + 24]			  ## timer.c:324:46
 1e0b7a4:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:324:46
 1e0b7a8:    10 09             	r0 += r1			  ## timer.c:324:41
 1e0b7aa:    58 4a             	[r5 + 20] = r0			  ## timer.c:324:24
 1e0b7ac:    97 f3 f4 da       	call 3126760 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b7b0:    c0 ff 50 26 00 00 	r0 = 9808 <sys_timer_sem : 2650 >			  ## timer.c:331:5
 1e0b7b6:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:331:5
 1e0b7b8:    d7 f3 28 db       	goto 3126864 <os_sem_post : 106e0c >			  ## timer.c:331:5


sys_timer_set_user_data:
 1e0b7bc:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:335:0
 1e0b7be:    14 08             	r4 = r1			  ## timer.c:335:0
 1e0b7c0:    05 08             	r5 = r0			  ## timer.c:335:0
 1e0b7c2:    97 f3 eb da       	call 3126742 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b7c6:    c0 ff b0 08 00 00 	r0 = 2224 <timer_head : 8b0 >			  ## spinlock.h:77:5
 1e0b7cc:    01 40             	r1 = [r0 + 0]			  ## spinlock.h:77:5
 1e0b7ce:    01 f2 07 00       	if (r1 == r0) goto 14 <sys_timer_set_user_data+0x24 : 1e0b7e0 >
 1e0b7d2:    e2 52             	r2 = h[r1 + 28] (u)			  ## timer.c:341:16
 1e0b7d4:    52 f2 01 10       	if (r2 != r5) goto 2 <sys_timer_set_user_data+0x1E : 1e0b7da >			  ## timer.c:341:16
 1e0b7d8:    3c 42             	[r1 + 12] = r4			  ## timer.c:342:21
 1e0b7da:    01 42             	r1 = [r1 + 0]
 1e0b7dc:    01 f2 f9 1f       	if (r1 != r0) goto -14 <sys_timer_set_user_data+0x16 : 1e0b7d2 >
 1e0b7e0:    15 01             	{rets, r5, r4} = [sp++]			  ## spinlock.h:88:5
 1e0b7e2:    d7 f3 d9 da       	goto 3126706 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


vAssertCalled:
 1e0b7e6:    97 f3 d9 da       	call 3126706 <local_irq_disable : 106d9c >			  ## FreeRTOSConfig.h:174:0
 1e0b7ea:    ff 1f             	goto -2 <vAssertCalled+0x4 : 1e0b7ea >			  ## FreeRTOSConfig.h:185:5


pvPortMalloc:
 1e0b7ec:    7a 01             	[--sp] = {rets, r10-r4}			  ## heap_mmu.c:174:0
 1e0b7ee:    04 08             	r4 = r0			  ## heap_mmu.c:174:0
 1e0b7f0:    d5 28             	if (r4 == 0) goto 426 <pvPortMalloc+0x1B0 : 1e0b99c >			  ## heap_mmu.c:174:0
 1e0b7f2:    97 f3 d3 da       	call 3126694 <local_irq_disable : 106d9c >			  ## heap_mmu.c:184:5
 1e0b7f6:    08 00             	csync			  ## heap_mmu.c:184:5
 1e0b7f8:    ca ff c0 23 00 00 	r10 = 9152 <cur_ch : 23c0 >			  ## heap_mmu.c:184:5
 1e0b7fe:    00 f6 e4 a0       	r0 = [r10 + 228]			  ## heap_mmu.c:188:13
 1e0b802:    24 30             	if (r0 != 0) goto 72 <pvPortMalloc+0x60 : 1e0b84c >			  ## heap_mmu.c:188:13
 1e0b804:    97 f3 60 db       	call 3126976 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0b808:    01 78             	r1 = 128			  ## sbrk.c:78:20
 1e0b80a:    97 f3 57 db       	call 3126958 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0b80e:    05 08             	r5 = r0			  ## sbrk.c:78:20
 1e0b810:    97 f3 5c db       	call 3126968 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0b814:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0b816:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0b818:    97 f3 50 db       	call 3126944 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0b81c:    a1 fc e4 00       	r1 = r10 + 228
 1e0b820:    ad 43             	[r1 + 104] = r5			  ## heap_mmu.c:462:28
 1e0b822:    02 70             	r2 = 0			  ## heap_mmu.c:462:28
 1e0b824:    9a 43             	[r1 + 100] = r2			  ## heap_mmu.c:463:23
 1e0b826:    63 fb 7f 59       	r3 = 127 - r5			  ## heap_mmu.c:443:22
 1e0b82a:    30 09             	r0 += r3			  ## heap_mmu.c:443:22
 1e0b82c:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:443:22
 1e0b830:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:443:22
 1e0b834:    50 09             	r0 += r5			  ## heap_mmu.c:469:43
 1e0b836:    80 8f             	r0 += -8			  ## heap_mmu.c:470:15
 1e0b838:    30 fd 03 09       	r0 = r0 & 4294967292			  ## heap_mmu.c:471:15
 1e0b83c:    08 42             	[r1 + 0] = r0			  ## heap_mmu.c:473:11
 1e0b83e:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:474:23
 1e0b840:    1a 40             	[r0 + 4] = r2			  ## heap_mmu.c:475:28
 1e0b842:    62 b1             	r2 = r0 - r5			  ## heap_mmu.c:481:46
 1e0b844:    0a 4a             	[r5 + 0] = r2			  ## heap_mmu.c:481:34
 1e0b846:    18 4a             	[r5 + 4] = r0			  ## heap_mmu.c:482:39
 1e0b848:    1a 42             	[r1 + 4] = r2			  ## heap_mmu.c:489:36
 1e0b84a:    2a 42             	[r1 + 8] = r2			  ## heap_mmu.c:490:25
 1e0b84c:    c8 ff 00 00 68 69 	r8 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:198:26
 1e0b852:    84 f1 51 00       	if ((r4 & r8) != 0) goto 162 <pvPortMalloc+0x10C : 1e0b8f8 >			  ## heap_mmu.c:198:26
 1e0b856:    41 98             	r1 = r4 + 4			  ## heap_mmu.c:202:29
 1e0b858:    22 fd 03 19       	r2 = r1 & 3			  ## heap_mmu.c:208:67
 1e0b85c:    62 fb 04 29       	r2 = 4 - r2			  ## heap_mmu.c:208:52
 1e0b860:    45 b4             	r5 = r2 + r1			  ## heap_mmu.c:208:29
 1e0b862:    61 ff 03 59 9a 00 	if ((r5 & 3) != 0) goto 308 <pvPortMalloc+0x1B0 : 1e0b99c >
 1e0b868:    22 ff 01 5b 97 00 	if (r5 >= 65536) goto 302 <pvPortMalloc+0x1B0 : 1e0b99c >
 1e0b86e:    01 f6 ec a0       	r1 = [r10 + 236]			  ## heap_mmu.c:219:54
 1e0b872:    52 fc ff ff       	r2 = r5 + -1			  ## heap_mmu.c:219:35
 1e0b876:    12 f2 3f 20       	if (r2 >= r1) goto 126 <pvPortMalloc+0x10C : 1e0b8f8 >			  ## heap_mmu.c:219:35
 1e0b87a:    03 f6 4c a1       	r3 = [r10 + 332]			  ## heap_mmu.c:223:34
 1e0b87e:    a2 fc 48 01       	r2 = r10 + 328			  ## heap_mmu.c:223:34
 1e0b882:    37 08             	r7 = r3
 1e0b884:    01 4e             	r1 = [r7 + 0]			  ## heap_mmu.c:226:34
 1e0b886:    26 08             	r6 = r2			  ## heap_mmu.c:226:34
 1e0b888:    51 f2 03 20       	if (r1 >= r5) goto 6 <pvPortMalloc+0xA6 : 1e0b892 >
 1e0b88c:    13 4e             	r3 = [r7 + 4]			  ## heap_mmu.c:226:73
 1e0b88e:    72 08             	r2 = r7			  ## heap_mmu.c:226:73
 1e0b890:    f8 37             	if (r3 != 0) goto -16 <pvPortMalloc+0x96 : 1e0b882 >
 1e0b892:    07 f2 31 00       	if (r7 == r0) goto 98 <pvPortMalloc+0x10C : 1e0b8f8 >
 1e0b896:    09 f6 04 60       	r9 = [r6 + 4]			  ## heap_mmu.c:238:71
 1e0b89a:    80 fb 50 09       	r0 = r9 + r5			  ## heap_mmu.c:242:82
 1e0b89e:    22 fd 7f 09       	r2 = r0 & 127			  ## heap_mmu.c:243:48
 1e0b8a2:    63 fb 80 29       	r3 = 128 - r2			  ## heap_mmu.c:243:36
 1e0b8a6:    92 fc 80 00       	r2 = r9 + 128			  ## heap_mmu.c:241:46
 1e0b8aa:    73 e0 03 80       	if (r3 > 7) goto 6 <pvPortMalloc+0xC8 : 1e0b8b4 >			  ## heap_mmu.c:241:46
 1e0b8ae:    35 09             	r5 += r3			  ## heap_mmu.c:244:37
 1e0b8b0:    80 fb 90 05       	r0 = r5 + r9			  ## heap_mmu.c:245:78
 1e0b8b4:    32 fd 7f 29       	r2 = r2 & 4294967168			  ## heap_mmu.c:241:59
 1e0b8b8:    60 ff 7f 09 0c 00 	if ((r0 & 127) == 0) goto 24 <pvPortMalloc+0xEA : 1e0b8d6 >
 1e0b8be:    71 09             	r1 += r7			  ## heap_mmu.c:248:63
 1e0b8c0:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## heap_mmu.c:249:66
 1e0b8c4:    31 fd 7f 09       	r1 = r0 & 4294967168			  ## heap_mmu.c:249:39
 1e0b8c8:    f0 87             	r0 += 127			  ## heap_mmu.c:250:40
 1e0b8ca:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:250:40
 1e0b8ce:    31 f2 01 00       	if (r1 == r3) goto 2 <pvPortMalloc+0xE8 : 1e0b8d4 >
 1e0b8d2:    01 08             	r1 = r0			  ## heap_mmu.c:249:29
 1e0b8d4:    10 08             	r0 = r1
 1e0b8d6:    a4 b0             	r4 = r0 - r2			  ## heap_mmu.c:256:46
 1e0b8d8:    14 e0 19 b0       	ifs (r4 < 1) goto 50 <pvPortMalloc+0x122 : 1e0b90e >
 1e0b8dc:    60 ff 7f 49 02 00 	if ((r4 & 127) == 0) goto 4 <pvPortMalloc+0xFA : 1e0b8e6 >
 1e0b8e2:    8f f3 98 bd       	call 2063152 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0b8e6:    02 e0 0f d0       	ifs (r2 <= 0) goto 30 <pvPortMalloc+0x11C : 1e0b908 >
 1e0b8ea:    20 08             	r0 = r2			  ## sbrk.c:78:20
 1e0b8ec:    41 08             	r1 = r4			  ## sbrk.c:78:20
 1e0b8ee:    97 f3 e5 da       	call 3126730 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0b8f2:    f0 ef 0c 10       	if (r0 != -1) goto 24 <pvPortMalloc+0x122 : 1e0b90e >
 1e0b8f6:    09 18             	goto 18 <pvPortMalloc+0x11E : 1e0b90a >
 1e0b8f8:    97 f3 4e da       	call 3126428 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0b8fc:    04 70             	r4 = 0			  ## heap_mmu.c:326:5
 1e0b8fe:    61 ff 03 49 4d 00 	if ((r4 & 3) != 0) goto 154 <pvPortMalloc+0x1B2 : 1e0b99e >			  ## heap_mmu.c:339:5
 1e0b904:    40 08             	r0 = r4			  ## heap_mmu.c:341:5
 1e0b906:    5a 01             	{pc, r10-r4} = [sp++]			  ## heap_mmu.c:341:5
 1e0b908:    1b 24             	if (r2 == 0) goto 54 <pvPortMalloc+0x154 : 1e0b940 >
 1e0b90a:    8f f3 84 bd       	call 2063112 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0b90e:    10 4e             	r0 = [r7 + 4]			  ## heap_mmu.c:264:65
 1e0b910:    18 4c             	[r6 + 4] = r0			  ## heap_mmu.c:264:54
 1e0b912:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:270:44
 1e0b914:    61 b1             	r1 = r0 - r5			  ## heap_mmu.c:270:55
 1e0b916:    81 e0 2e 30       	if (r1 < 8) goto 92 <pvPortMalloc+0x18A : 1e0b976 >			  ## heap_mmu.c:270:55
 1e0b91a:    44 bf             	r4 = r7 + r5			  ## heap_mmu.c:275:73
 1e0b91c:    61 ff 03 49 3d 00 	if ((r4 & 3) != 0) goto 122 <pvPortMalloc+0x1B0 : 1e0b99c >
 1e0b922:    61 ff 7f 49 1e 00 	if ((r4 & 127) != 0) goto 60 <pvPortMalloc+0x178 : 1e0b964 >
 1e0b928:    70 09             	r0 += r7			  ## heap_mmu.c:282:65
 1e0b92a:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:283:52
 1e0b92e:    04 f2 19 00       	if (r4 == r0) goto 50 <pvPortMalloc+0x178 : 1e0b964 >
 1e0b932:    14 e0 09 b0       	ifs (r4 < 1) goto 18 <pvPortMalloc+0x15C : 1e0b948 >			  ## sbrk.c:74:13
 1e0b936:    01 78             	r1 = 128			  ## sbrk.c:75:20
 1e0b938:    40 08             	r0 = r4			  ## sbrk.c:75:20
 1e0b93a:    97 f3 bf da       	call 3126654 <vmalloc_ : 106ebc >			  ## sbrk.c:75:20
 1e0b93e:    0e 18             	goto 28 <pvPortMalloc+0x170 : 1e0b95c >
 1e0b940:    97 f3 c2 da       	call 3126660 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0b944:    02 08             	r2 = r0			  ## sbrk.c:77:20
 1e0b946:    d1 1f             	goto -94 <pvPortMalloc+0xFE : 1e0b8ea >
 1e0b948:    f4 ef 0a 10       	if (r4 != -1) goto 20 <pvPortMalloc+0x174 : 1e0b960 >
 1e0b94c:    97 f3 be da       	call 3126652 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0b950:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0b952:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0b954:    97 f3 b2 da       	call 3126628 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0b958:    00 fc 80 00       	r0 = r0 + 128			  ## sbrk.c:81:41
 1e0b95c:    f0 ef 02 10       	if (r0 != -1) goto 4 <pvPortMalloc+0x178 : 1e0b964 >
 1e0b960:    8f f3 59 bd       	call 2063026 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0b964:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:292:63
 1e0b966:    60 b1             	r0 = r0 - r5			  ## heap_mmu.c:292:74
 1e0b968:    90 f6 00 75       	[r7+r5] = r0			  ## heap_mmu.c:292:52
 1e0b96c:    0d 4e             	[r7 + 0] = r5			  ## heap_mmu.c:293:45
 1e0b96e:    10 4c             	r0 = [r6 + 4]			  ## heap_mmu.c:295:76
 1e0b970:    18 48             	[r4 + 4] = r0			  ## heap_mmu.c:295:57
 1e0b972:    1c 4c             	[r6 + 4] = r4			  ## heap_mmu.c:296:58
 1e0b974:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:296:58
 1e0b976:    a1 fc e8 00       	r1 = r10 + 232
 1e0b97a:    12 42             	r2 = [r1 + 4]			  ## heap_mmu.c:301:41
 1e0b97c:    20 b4             	r0 = r2 - r0			  ## heap_mmu.c:301:41
 1e0b97e:    18 42             	[r1 + 4] = r0			  ## heap_mmu.c:301:41
 1e0b980:    01 42             	r1 = [r1 + 0]			  ## heap_mmu.c:303:47
 1e0b982:    94 fc 04 00       	r4 = r9 + 4			  ## heap_mmu.c:238:88
 1e0b986:    10 f2 02 20       	if (r0 >= r1) goto 4 <pvPortMalloc+0x1A2 : 1e0b98e >			  ## heap_mmu.c:238:88
 1e0b98a:    10 f6 e8 a0       	[r10 + 232] = r0			  ## heap_mmu.c:304:56
 1e0b98e:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:311:41
 1e0b990:    e0 fd 80 00       	r0 = r0 | r8			  ## heap_mmu.c:311:41
 1e0b994:    08 4e             	[r7 + 0] = r0			  ## heap_mmu.c:311:41
 1e0b996:    97 f3 ff d9       	call 3126270 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0b99a:    b1 1f             	goto -158 <pvPortMalloc+0x112 : 1e0b8fe >			  ## heap_mmu.c:326:5
 1e0b99c:    24 17             	call -440 <vAssertCalled : 1e0b7e6 >
 1e0b99e:    23 17             	call -442 <vAssertCalled : 1e0b7e6 >			  ## heap_mmu.c:339:5


malloc:
 1e0b9a0:    34 00             	[--sp] = rets			  ## memory.c:20:0
 1e0b9a2:    28 fb 00 13       	r1 = rets			  ## memory.c:22:5
 1e0b9a6:    22 17             	call -444 <pvPortMalloc : 1e0b7ec >			  ## memory.c:26:11
 1e0b9a8:    30 00             	pc = [sp++]			  ## memory.c:30:5


free:
 1e0b9aa:    78 01             	[--sp] = {rets, r8-r4}			  ## memory.c:34:0
 1e0b9ac:    7b 20             	if (r0 == 0) goto 246 <free+0xFA : 1e0baa4 >			  ## memory.c:34:0
 1e0b9ae:    05 fc fc ff       	r5 = r0 + -4			  ## memory.c:34:0
 1e0b9b2:    00 4a             	r0 = [r5 + 0]			  ## heap_mmu.c:366:22
 1e0b9b4:    c1 ff 00 00 68 69 	r1 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:366:33
 1e0b9ba:    e2 fd 10 20       	r2 = r0 & r1			  ## heap_mmu.c:366:33
 1e0b9be:    12 f2 7c 10       	if (r2 != r1) goto 248 <free+0x110 : 1e0baba >			  ## heap_mmu.c:366:13
 1e0b9c2:    54 08             	r4 = r5			  ## heap_mmu.c:358:13
 1e0b9c4:    c1 ff ff ff 97 96 	r1 = 2526543871 <uECC_vli_cmp_unsafe+0x879003 : 97ffff >			  ## heap_mmu.c:370:32
 1e0b9ca:    50 b3             	r0 &= r1			  ## heap_mmu.c:370:32
 1e0b9cc:    08 4a             	[r5 + 0] = r0			  ## heap_mmu.c:370:32
 1e0b9ce:    97 f3 e5 d9       	call 3126218 <local_irq_disable : 106d9c >			  ## heap_mmu.c:373:13
 1e0b9d2:    08 00             	csync			  ## heap_mmu.c:373:13
 1e0b9d4:    02 4a             	r2 = [r5 + 0]			  ## heap_mmu.c:376:48
 1e0b9d6:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## heap_mmu.c:376:48
 1e0b9dc:    80 fc ec 00       	r0 = r8 + 236			  ## heap_mmu.c:376:48
 1e0b9e0:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:376:37
 1e0b9e2:    21 09             	r1 += r2			  ## heap_mmu.c:376:37
 1e0b9e4:    51 f6 5c 00       	[r0 ++= 92] = r1			  ## heap_mmu.c:376:37
 1e0b9e8:    06 08             	r6 = r0
 1e0b9ea:    10 4c             	r0 = [r6 + 4]			  ## heap_mmu.c:512:44
 1e0b9ec:    40 f2 fc 3f       	if (r0 < r4) goto -8 <free+0x3E : 1e0b9e8 >			  ## heap_mmu.c:512:5
 1e0b9f0:    03 4c             	r3 = [r6 + 0]			  ## heap_mmu.c:519:28
 1e0b9f2:    c1 bc             	r1 = r6 + r3			  ## heap_mmu.c:519:14
 1e0b9f4:    41 f2 08 00       	if (r1 == r4) goto 16 <free+0x5E : 1e0ba08 >			  ## heap_mmu.c:519:14
 1e0b9f8:    51 fc 80 00       	r1 = r5 + 128			  ## heap_mmu.c:526:34
 1e0b9fc:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:526:47
 1e0ba00:    47 08             	r7 = r4
 1e0ba02:    23 08             	r3 = r2			  ## heap_mmu.c:537:33
 1e0ba04:    14 08             	r4 = r1			  ## heap_mmu.c:537:33
 1e0ba06:    0a 18             	goto 20 <free+0x72 : 1e0ba1c >
 1e0ba08:    23 09             	r3 += r2			  ## heap_mmu.c:520:32
 1e0ba0a:    31 fd 7f 69       	r1 = r6 & 4294967168			  ## heap_mmu.c:522:67
 1e0ba0e:    37 fd 7f 59       	r7 = r5 & 4294967168			  ## heap_mmu.c:522:25
 1e0ba12:    0b 4c             	[r6 + 0] = r3			  ## heap_mmu.c:520:32
 1e0ba14:    17 f2 01 00       	if (r7 == r1) goto 2 <free+0x70 : 1e0ba1a >			  ## heap_mmu.c:520:32
 1e0ba18:    74 08             	r4 = r7			  ## heap_mmu.c:522:13
 1e0ba1a:    67 08             	r7 = r6
 1e0ba1c:    52 09             	r2 += r5			  ## heap_mmu.c:506:49
 1e0ba1e:    c5 be             	r5 = r7 + r3			  ## heap_mmu.c:537:14
 1e0ba20:    41 fc 7f 00       	r1 = r4 + 127			  ## heap_mmu.c:531:22
 1e0ba24:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:531:22
 1e0ba28:    60 ff 7f 49 01 00 	if ((r4 & 127) == 0) goto 2 <free+0x86 : 1e0ba30 >
 1e0ba2e:    14 08             	r4 = r1			  ## heap_mmu.c:530:9
 1e0ba30:    01 f6 e4 80       	r1 = [r8 + 228]			  ## heap_mmu.c:538:44
 1e0ba34:    10 f2 10 00       	if (r0 == r1) goto 32 <free+0xAE : 1e0ba58 >
 1e0ba38:    05 f2 0e 10       	if (r5 != r0) goto 28 <free+0xAE : 1e0ba58 >
 1e0ba3c:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:541:101
 1e0ba3e:    13 09             	r3 += r1			  ## heap_mmu.c:542:41
 1e0ba40:    0b 4e             	[r7 + 0] = r3			  ## heap_mmu.c:542:41
 1e0ba42:    13 40             	r3 = [r0 + 4]			  ## heap_mmu.c:543:77
 1e0ba44:    01 09             	r1 += r0			  ## heap_mmu.c:541:70
 1e0ba46:    d1 b0             	r1 ^= r0			  ## heap_mmu.c:546:42
 1e0ba48:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:547:40
 1e0ba4c:    1b 4e             	[r7 + 4] = r3			  ## heap_mmu.c:543:46
 1e0ba4e:    f1 e7 01 80       	if (r1 > 127) goto 2 <free+0xAA : 1e0ba54 >			  ## heap_mmu.c:543:46
 1e0ba52:    20 08             	r0 = r2			  ## heap_mmu.c:546:17
 1e0ba54:    02 08             	r2 = r0
 1e0ba56:    01 18             	goto 2 <free+0xB0 : 1e0ba5a >
 1e0ba58:    18 4e             	[r7 + 4] = r0
 1e0ba5a:    30 fd 7f 29       	r0 = r2 & 4294967168			  ## heap_mmu.c:559:18
 1e0ba5e:    22 b1             	r2 = r0 - r4			  ## heap_mmu.c:562:30
 1e0ba60:    12 e0 1b b0       	ifs (r2 < 1) goto 54 <free+0xF0 : 1e0ba9a >			  ## heap_mmu.c:562:30
 1e0ba64:    65 fb 00 29       	r5 = 0 - r2			  ## heap_mmu.c:565:46
 1e0ba68:    60 ff 7f 59 02 00 	if ((r5 & 127) == 0) goto 4 <free+0xC8 : 1e0ba72 >
 1e0ba6e:    8f f3 d2 bc       	call 2062756 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0ba72:    f4 ef 05 00       	if (r4 == -1) goto 10 <free+0xD6 : 1e0ba80 >
 1e0ba76:    60 ff 7f 49 02 00 	if ((r4 & 127) == 0) goto 4 <free+0xD6 : 1e0ba80 >
 1e0ba7c:    8f f3 cb bc       	call 2062742 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0ba80:    15 e0 07 b0       	ifs (r5 < 1) goto 14 <free+0xE8 : 1e0ba92 >			  ## sbrk.c:72:9
 1e0ba84:    14 e0 0f b0       	ifs (r4 < 1) goto 30 <free+0xFC : 1e0baa6 >			  ## sbrk.c:74:13
 1e0ba88:    40 08             	r0 = r4			  ## sbrk.c:75:20
 1e0ba8a:    51 08             	r1 = r5
 1e0ba8c:    97 f3 16 da       	call 3126316 <vmalloc_ : 106ebc >
 1e0ba90:    04 18             	goto 8 <free+0xF0 : 1e0ba9a >
 1e0ba92:    40 08             	r0 = r4			  ## sbrk.c:89:9
 1e0ba94:    21 08             	r1 = r2			  ## sbrk.c:89:9
 1e0ba96:    97 f3 13 da       	call 3126310 <vfree_ : 106ec0 >			  ## sbrk.c:89:9
 1e0ba9a:    76 f2 01 00       	if (r6 == r7) goto 2 <free+0xF6 : 1e0baa0 >
 1e0ba9e:    1f 4c             	[r6 + 4] = r7			  ## heap_mmu.c:572:37
 1e0baa0:    97 f3 7a d9       	call 3126004 <local_irq_enable : 106d98 >			  ## heap_mmu.c:381:13
 1e0baa4:    58 01             	{pc, r8-r4} = [sp++]			  ## memory.c:39:1
 1e0baa6:    06 28             	if (r4 == 0) goto 12 <free+0x10A : 1e0bab4 >
 1e0baa8:    f4 ef f7 1f       	if (r4 != -1) goto -18 <free+0xF0 : 1e0ba9a >
 1e0baac:    97 f3 0e da       	call 3126300 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0bab0:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0bab2:    eb 1f             	goto -42 <free+0xE0 : 1e0ba8a >			  ## sbrk.c:80:31
 1e0bab4:    97 f3 08 da       	call 3126288 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0bab8:    e8 1f             	goto -48 <free+0xE0 : 1e0ba8a >			  ## sbrk.c:77:20
 1e0baba:    95 16             	call -726 <vAssertCalled : 1e0b7e6 >			  ## heap_mmu.c:386:13


hwi_all_close:
 1e0babc:    79 01             	[--sp] = {rets, r9-r4}			  ## hwi.c:129:0
 1e0babe:    04 70             	r4 = 0			  ## hwi.c:129:0
 1e0bac0:    18 70             	r8 = 1			  ## hwi.c:129:0
 1e0bac2:    c9 ff 00 e1 1b 00 	r9 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:129:0
 1e0bac8:    07 70             	r7 = 0			  ## hwi.c:129:0
 1e0baca:    20 fd 1c 49       	r0 = r4 & 28			  ## hwi.c:120:28
 1e0bace:    f8 fd 00 58       	r5 = r8 << r0			  ## hwi.c:124:28
 1e0bad2:    85 fd 18 07       	r0 = uextra(r7, p:3, l:5)			  ## hwi.c:119:23
 1e0bad6:    96 08             	r6 = r9			  ## hwi.c:124:5
 1e0bad8:    c5 fd 10 60       	r6 <= insert(r0, p:2, l:5)			  ## hwi.c:124:5
 1e0badc:    97 f3 5e d9       	call 3125948 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0bae0:    00 4c             	r0 = [r6 + 0]			  ## hwi.c:124:24
 1e0bae2:    e3 fd 50 00       	r0 = r0 & ~r5			  ## hwi.c:124:24
 1e0bae6:    08 4c             	[r6 + 0] = r0			  ## hwi.c:124:24
 1e0bae8:    97 f3 56 d9       	call 3125932 <local_irq_enable : 106d98 >			  ## hwi.c:125:5
 1e0baec:    17 80             	r7 += 1			  ## hwi.c:132:26
 1e0baee:    44 80             	r4 += 4			  ## hwi.c:132:19
 1e0baf0:    07 e4 eb 1f       	if (r7 != 64) goto -42 <hwi_all_close+0xE : 1e0baca >			  ## hwi.c:132:5
 1e0baf4:    59 01             	{pc, r9-r4} = [sp++]			  ## hwi.c:135:1


bit_clr_ie:
 1e0baf6:    34 00             	[--sp] = rets			  ## hwi.c:116:0
 1e0baf8:    97 f3 50 d9       	call 3125920 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0bafc:    c0 ff 00 e1 1b 00 	r0 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:122:5
 1e0bb02:    01 40             	r1 = [r0 + 0]			  ## hwi.c:124:24
 1e0bb04:    71 be             	r1 &= 4026531839			  ## hwi.c:124:24
 1e0bb06:    09 40             	[r0 + 0] = r1			  ## hwi.c:124:24
 1e0bb08:    88 01             	{rets} = [sp++]			  ## hwi.c:125:5
 1e0bb0a:    d7 f3 45 d9       	goto 3125898 <local_irq_enable : 106d98 >			  ## hwi.c:125:5


request_irq:
 1e0bb0e:    77 01             	[--sp] = {rets, r7-r4}			  ## hwi.c:38:0
 1e0bb10:    14 08             	r4 = r1			  ## hwi.c:38:0
 1e0bb12:    c1 ff 00 ff 00 00 	r1 = 65280 <_IRQ_MEM_ADDR : ff00 >			  ## hwi.c:43:5
 1e0bb18:    b2 f6 00 10       	[r1+r0<<2] = r2			  ## hwi.c:43:20
 1e0bb1c:    81 c0             	r1 = r0 << 2			  ## hwi.c:43:5
 1e0bb1e:    25 fd 1c 19       	r5 = r1 & 28			  ## hwi.c:46:28
 1e0bb22:    f1 70             	r1 = 15			  ## hwi.c:46:28
 1e0bb24:    f8 fd 50 61       	r6 = r1 << r5			  ## hwi.c:48:35
 1e0bb28:    c0 d0             	r0 = r0 >> 3			  ## hwi.c:45:23
 1e0bb2a:    c7 ff 00 e1 1b 00 	r7 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:54:27
 1e0bb30:    c5 fd 10 70       	r7 <= insert(r0, p:2, l:5)			  ## hwi.c:54:27
 1e0bb34:    97 f3 32 d9       	call 3125860 <local_irq_disable : 106d9c >			  ## hwi.c:51:5
 1e0bb38:    00 4e             	r0 = [r7 + 0]			  ## hwi.c:54:27
 1e0bb3a:    e3 fd 60 00       	r0 = r0 & ~r6			  ## hwi.c:54:46
 1e0bb3e:    61 c0             	r1 = r4 << 1			  ## hwi.c:47:35
 1e0bb40:    21 fd 0e 19       	r1 = r1 & 14			  ## hwi.c:47:35
 1e0bb44:    11 b0             	r1 |= 1			  ## hwi.c:47:41
 1e0bb46:    41 0d             	r1 <<= r5			  ## hwi.c:49:39
 1e0bb48:    50 b2             	r0 |= r1			  ## hwi.c:54:58
 1e0bb4a:    08 4e             	[r7 + 0] = r0			  ## hwi.c:54:24
 1e0bb4c:    97 f3 24 d9       	call 3125832 <local_irq_enable : 106d98 >			  ## hwi.c:56:5
 1e0bb50:    57 01             	{pc, r7-r4} = [sp++]			  ## hwi.c:57:1


cpu_reset.1068:
 1e0bb52:    cf f3 60 bc       	goto 2062528 <p33_soft_reset : 3416 >			  ## cpu.h:146:0


os_enter_deepsleep:
 1e0bb56:    20 00             	rts			  ## port_overwrite.c:546:0


os_exit_deepsleep:
 1e0bb58:    34 00             	[--sp] = rets			  ## port_overwrite.c:550:0
 1e0bb5a:    c2 ff de 33 00 00 	r2 = 13278 <begin_of_data : 33de >			  ## port_overwrite.c:552:5
 1e0bb60:    30 70             	r0 = 3			  ## port_overwrite.c:552:5
 1e0bb62:    11 70             	r1 = 1			  ## port_overwrite.c:552:5
 1e0bb64:    d4 17             	call -88 <request_irq : 1e0bb0e >			  ## port_overwrite.c:552:5
 1e0bb66:    c2 ff 4c 33 00 00 	r2 = 13132 <vAppSoftwareInterruptISR : 334c >			  ## port_overwrite.c:554:5
 1e0bb6c:    f0 73             	r0 = 63			  ## port_overwrite.c:554:5
 1e0bb6e:    01 70             	r1 = 0			  ## port_overwrite.c:554:5
 1e0bb70:    88 01             	{rets} = [sp++]			  ## port_overwrite.c:554:5
 1e0bb72:    cd 1f             	goto -102 <request_irq : 1e0bb0e >			  ## port_overwrite.c:554:5


clock_critical_enter.1072:
 1e0bb74:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:308:0
 1e0bb7a:    c0 f4 00 09       	[r0 + 0] = 0			  ## port_overwrite.c:309:14
 1e0bb7e:    20 00             	rts			  ## port_overwrite.c:310:1


clock_critical_exit.1073:
 1e0bb80:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:313:0
 1e0bb86:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:314:14
 1e0bb8a:    c1 ff d0 31 00 00 	r1 = 12752 <hdl.15 : 31d0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0bb90:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0bb92:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0bb94:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0bb98:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:315:14
 1e0bb9a:    c0 f4 01 09       	[r0 + 0] = 1			  ## port_overwrite.c:316:14
 1e0bb9e:    20 00             	rts			  ## port_overwrite.c:317:1


vFillingTaskStack:
 1e0bba0:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:224:0
 1e0bba2:    01 08             	r1 = r0			  ## port_overwrite.c:224:0
 1e0bba4:    8f f3 d0 bb       	call 2062240 <uxTaskStack : 3348 >			  ## port_overwrite.c:225:26
 1e0bba8:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:226:26
 1e0bbaa:    04 fc 80 00       	r4 = r0 + 128
 1e0bbae:    30 fd 7f 19       	r0 = r1 & 4294967168			  ## port_overwrite.c:226:26
 1e0bbb2:    21 b1             	r1 = r0 - r4			  ## port_overwrite.c:226:81
 1e0bbb4:    40 08             	r0 = r4			  ## port_overwrite.c:230:5
 1e0bbb6:    97 f3 81 d9       	call 3126018 <vmalloc_ : 106ebc >			  ## port_overwrite.c:230:5
 1e0bbba:    a0 75             	r0 = 90			  ## port_overwrite.c:232:5
 1e0bbbc:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:232:5
 1e0bbbe:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:232:5
 1e0bbc0:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:232:5
 1e0bbc2:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:232:5
 1e0bbc4:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:233:1


maskrom_init:
 1e0bbc6:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:237:0
 1e0bbc8:    f4 0b             	sp += -24			  ## port_overwrite.c:237:0
 1e0bbca:    c0 ff 8e 09 e0 01 	r0 = 31459726 <assert_printf : 1e0098e >			  ## port_overwrite.c:240:5
 1e0bbd0:    58 02             	[sp+20] = r0			  ## port_overwrite.c:240:5
 1e0bbd2:    c0 ff 8c 09 e0 01 	r0 = 31459724 <log_putbyte : 1e0098c >			  ## port_overwrite.c:240:5
 1e0bbd8:    48 02             	[sp+16] = r0			  ## port_overwrite.c:240:5
 1e0bbda:    c0 ff e0 c4 e0 01 	r0 = 31507680 <idle_hook : 1e0c4e0 >			  ## port_overwrite.c:240:5
 1e0bbe0:    38 02             	[sp+12] = r0			  ## port_overwrite.c:240:5
 1e0bbe2:    00 70             	r0 = 0			  ## port_overwrite.c:240:5
 1e0bbe4:    28 02             	[sp+8] = r0			  ## port_overwrite.c:240:5
 1e0bbe6:    c0 ff b4 33 00 00 	r0 = 13236 <vAppPortStartFirstTask : 33b4 >			  ## port_overwrite.c:240:5
 1e0bbec:    18 02             	[sp+4] = r0			  ## port_overwrite.c:240:5
 1e0bbee:    c4 ff 52 bc e0 01 	r4 = 31505490 <suppress_tick_and_sleep : 1e0bc52 >			  ## port_overwrite.c:240:5
 1e0bbf4:    c0 ff aa b9 e0 01 	r0 = 31504810 <free : 1e0b9aa >			  ## port_overwrite.c:240:5
 1e0bbfa:    c1 ff a0 b9 e0 01 	r1 = 31504800 <malloc : 1e0b9a0 >			  ## port_overwrite.c:240:5
 1e0bc00:    c2 ff 0a c7 e0 01 	r2 = 31508234 <vPortVFreeStack : 1e0c70a >			  ## port_overwrite.c:240:5
 1e0bc06:    c3 ff 12 c6 e0 01 	r3 = 31507986 <pvPortVMallocStack : 1e0c612 >			  ## port_overwrite.c:240:5
 1e0bc0c:    0c 02             	[sp] = r4			  ## port_overwrite.c:240:5
 1e0bc0e:    97 f3 93 d9       	call 3126054 <mask_init : 106f38 >			  ## port_overwrite.c:240:5
 1e0bc12:    c0 ff 40 10 00 00 	r0 = 4160 <stack_magic : 1040 >			  ## port_overwrite.c:240:5
 1e0bc18:    20 fb 5a 1f       	r1 = 1515870810			  ## port_overwrite.c:240:5
 1e0bc1c:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:249:5
 1e0bc1e:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:249:5
 1e0bc20:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:249:5
 1e0bc22:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:249:5
 1e0bc24:    c0 ff 50 18 00 00 	r0 = 6224 <stack_magic0 : 1850 >			  ## port_overwrite.c:249:5
 1e0bc2a:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:250:5
 1e0bc2c:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:250:5
 1e0bc2e:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:250:5
 1e0bc30:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:250:5
 1e0bc32:    c0 ff f0 31 00 00 	r0 = 12784 <CurrentTCB : 31f0 >			  ## port_overwrite.c:255:5
 1e0bc38:    c1 ff 50 21 00 00 	r1 = 8528 <highCurrentTCB : 2150 >			  ## port_overwrite.c:255:5
 1e0bc3e:    97 f3 b5 d8       	call 3125610 <os_get_curr_tcb_var : 106dac >			  ## port_overwrite.c:255:5
 1e0bc42:    c2 ff 4c 33 00 00 	r2 = 13132 <vAppSoftwareInterruptISR : 334c >			  ## port_overwrite.c:257:5
 1e0bc48:    f0 73             	r0 = 63			  ## port_overwrite.c:257:5
 1e0bc4a:    01 70             	r1 = 0			  ## port_overwrite.c:257:5
 1e0bc4c:    60 17             	call -320 <request_irq : 1e0bb0e >			  ## port_overwrite.c:257:5
 1e0bc4e:    0c 0a             	sp += 24			  ## port_overwrite.c:257:5
 1e0bc50:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:258:1


suppress_tick_and_sleep:
 1e0bc52:    7f 01             	[--sp] = {rets, r15-r4}			  ## port_overwrite.c:74:0
 1e0bc54:    fa 0b             	sp += -12			  ## port_overwrite.c:74:0
 1e0bc56:    97 f3 a1 d8       	call 3125570 <local_irq_disable : 106d9c >			  ## port_overwrite.c:456:5
 1e0bc5a:    08 00             	csync			  ## port_overwrite.c:456:5
 1e0bc5c:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:456:5
 1e0bc62:    e0 69             	r0 = b[r4 + 30] (u)			  ## port_overwrite.c:457:9
 1e0bc64:    00 e0 38 14       	if (r0 != 0) goto 2160 <suppress_tick_and_sleep+0x886 : 1e0c4d8 >
 1e0bc68:    ce ff c0 47 00 00 	r14 = 18368 <nvbss_begin : 47c0 >
 1e0bc6e:    00 f9 33 e0       	r0 = b[r14 + 51] (u)			  ## port_overwrite.c:457:9
 1e0bc72:    00 e0 31 04       	if (r0 == 0) goto 2146 <suppress_tick_and_sleep+0x886 : 1e0c4d8 >			  ## port_overwrite.c:457:9
 1e0bc76:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1028:20
 1e0bc7a:    0b 30             	if (r0 != 0) goto 22 <suppress_tick_and_sleep+0x40 : 1e0bc92 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1028:20
 1e0bc7c:    01 f9 c8 40       	r1 = b[r4 + 200] (u)
 1e0bc80:    40 71             	r0 = 20			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0bc82:    01 32             	if (r1 != 0) goto 2 <suppress_tick_and_sleep+0x34 : 1e0bc86 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0bc84:    00 70             	r0 = 0
 1e0bc86:    c1 ff f8 20 00 00 	r1 = 8440 <lrc.4 : 20f8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:21
 1e0bc8c:    01 62             	r1 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0bc8e:    01 f2 23 34       	if (r1 < r0) goto 2118 <suppress_tick_and_sleep+0x886 : 1e0c4d8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0bc92:    97 f3 83 d8       	call 3125510 <local_irq_disable : 106d9c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1034:5
 1e0bc96:    08 00             	csync			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1034:5
 1e0bc98:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1905:20
 1e0bc9c:    c1 ff 17 18 1a 00 	r1 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1905:20
 1e0bca2:    10 e0 11 10       	if (r0 != 1) goto 34 <suppress_tick_and_sleep+0x76 : 1e0bcc8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1905:20
 1e0bca6:    00 62             	r0 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1909:9
 1e0bca8:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1909:9
 1e0bcaa:    08 62             	b[r1 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1909:9
 1e0bcac:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1911:52
 1e0bcb0:    01 f9 48 e0       	r1 = b[r14 + 72] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1911:24
 1e0bcb4:    01 f2 17 00       	if (r1 == r0) goto 46 <suppress_tick_and_sleep+0x94 : 1e0bce6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1911:24
 1e0bcb8:    00 f6 44 e1       	r0 = [r14 + 324]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1915:40
 1e0bcbc:    10 f6 40 e1       	[r14 + 320] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1915:27
 1e0bcc0:    bf f3 d6 ba       	call -35412 <__hw_btosc_time_set : 1e03270 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1917:9
 1e0bcc4:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1921:20
 1e0bcc8:    0c 30             	if (r0 != 0) goto 24 <suppress_tick_and_sleep+0x90 : 1e0bce2 >
 1e0bcca:    8f f3 c9 c0       	call 2064786 <__get_lrc_hz : 3e60 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1924:29
 1e0bcce:    10 f6 40 e1       	[r14 + 320] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1924:27
 1e0bcd2:    00 f9 48 e0       	r0 = b[r14 + 72] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1927:24
 1e0bcd6:    81 20             	if (r0 == 0) goto 258 <suppress_tick_and_sleep+0x188 : 1e0bdda >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1927:24
 1e0bcd8:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1933:9
 1e0bcda:    bf f3 25 bb       	call -35254 <__hw_lrc_time_set : 1e03328 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1933:9
 1e0bcde:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1933:9
 1e0bce2:    10 f9 48 e0       	b[r14 + 72] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1936:30
 1e0bce6:    e0 08             	r0 = r14			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1038:13
 1e0bce8:    bf f3 95 bb       	call -35030 <low_power_group_query : 1e03416 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1038:13
 1e0bcec:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1038:13
 1e0bcee:    e5 fc 0c 00       	r5 = r14 + 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1040:13
 1e0bcf2:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1040:13
 1e0bcf4:    bf f3 8f bb       	call -35042 <low_power_group_query : 1e03416 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1040:13
 1e0bcf8:    06 f2 01 30       	if (r6 < r0) goto 2 <suppress_tick_and_sleep+0xAC : 1e0bcfe >
 1e0bcfc:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1042:15
 1e0bcfe:    06 e0 e9 03       	if (r6 == 0) goto 2002 <suppress_tick_and_sleep+0x882 : 1e0c4d4 >
 1e0bd02:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >
 1e0bd08:    02 60             	r2 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:91:9
 1e0bd0a:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:91:9
 1e0bd0c:    04 f3 0b 20       	if ((r2 & 16) == 0) goto 22 <suppress_tick_and_sleep+0xD4 : 1e0bd26 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:91:9
 1e0bd10:    01 60             	r1 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0bd12:    11 b3             	r1 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0bd14:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0bd16:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:25
 1e0bd18:    20 fd 0f 09       	r0 = r0 & 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:38
 1e0bd1c:    c1 ff fc eb e0 01 	r1 = 31517692 <wdt_time : 1e0ebfc >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:16
 1e0bd22:    a1 f6 00 10       	r1 = [r1+r0<<2]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:93:16
 1e0bd26:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1052:24
 1e0bd2a:    08 0e             	r0 = r1 * r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1052:24
 1e0bd2c:    40 d0             	r0 = r0 >> 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1052:41
 1e0bd2e:    02 08             	r2 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0bd30:    06 f2 01 80       	if (r6 > r0) goto 2 <suppress_tick_and_sleep+0xE4 : 1e0bd36 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0bd34:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0bd36:    01 30             	if (r0 != 0) goto 2 <suppress_tick_and_sleep+0xE8 : 1e0bd3a >
 1e0bd38:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1053:21
 1e0bd3a:    bf f3 8b bb       	call -35050 <__lp_timer_is_running : 1e03454 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1057:9
 1e0bd3e:    04 20             	if (r0 == 0) goto 8 <suppress_tick_and_sleep+0xF6 : 1e0bd48 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1057:9
 1e0bd40:    bf f3 8f bb       	call -35042 <__lp_timer_dump : 1e03462 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1058:9
 1e0bd44:    8f f3 67 bb       	call 2062030 <p33_soft_reset : 3416 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0bd48:    00 f6 00 e0       	r0 = [r14 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:124:18
 1e0bd4c:    c6 ff d1 1f 1a 00 	r6 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:124:18
 1e0bd52:    e0 f2 12 00       	if (r0 == r14) goto 36 <suppress_tick_and_sleep+0x128 : 1e0bd7a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1063:9
 1e0bd56:    10 6c             	r0 = b[r6 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1065:13
 1e0bd58:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x10E : 1e0bd60 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1065:13
 1e0bd5c:    bf f3 81 bb       	call -35070 <__lp_timer_dump : 1e03462 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1066:13
 1e0bd60:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1072:13
 1e0bd62:    bf f3 89 bb       	call -35054 <__lp_timer_set_time : 1e03478 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1072:13
 1e0bd66:    00 e0 b5 03       	if (r0 == 0) goto 1898 <suppress_tick_and_sleep+0x882 : 1e0c4d4 >
 1e0bd6a:    10 6c             	r0 = b[r6 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0bd6c:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x122 : 1e0bd74 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0bd70:    bf f3 77 bb       	call -35090 <__lp_timer_dump : 1e03462 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1081:13
 1e0bd74:    bf f3 bf bb       	call -34946 <__lp_timer_get_period : 1e034f6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1084:19
 1e0bd78:    0f 18             	goto 30 <suppress_tick_and_sleep+0x146 : 1e0bd98 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1084:19
 1e0bd7a:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1088:13
 1e0bd7c:    bf f3 7c bb       	call -35080 <__lp_timer_set_time : 1e03478 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1088:13
 1e0bd80:    00 e0 a8 03       	if (r0 == 0) goto 1872 <suppress_tick_and_sleep+0x882 : 1e0c4d4 >
 1e0bd84:    bf f3 b7 bb       	call -34962 <__lp_timer_get_period : 1e034f6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1094:19
 1e0bd88:    ef 07             	r15 = -2
 1e0bd8a:    e0 ef 06 00       	if (r0 == -2) goto 12 <suppress_tick_and_sleep+0x148 : 1e0bd9a >
 1e0bd8e:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1097:13
 1e0bd94:    00 f4 20 19       	[r1 + 0] |= 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1097:13
 1e0bd98:    0f 08             	r15 = r0
 1e0bd9a:    e0 08             	r0 = r14			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1102:5
 1e0bd9c:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1102:5
 1e0bd9e:    bf f3 b8 bb       	call -34960 <__low_power_suspend : 1e03512 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1102:5
 1e0bda2:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1105:5
 1e0bda4:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1105:5
 1e0bda6:    bf f3 b4 bb       	call -34968 <__low_power_suspend : 1e03512 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1105:5
 1e0bdaa:    c6 ff 0c e9 e0 01 	r6 = 31516940 <uart : 1e0e90c >
 1e0bdb0:    c7 ff a0 e8 e0 01 	r7 = 31516832 <syscfg_ops_end : 1e0e8a0 >
 1e0bdb6:    08 70             	r8 = 0
 1e0bdb8:    1d 02             	[sp+4] = r5
 1e0bdba:    67 f2 13 20       	if (r7 >= r6) goto 38 <suppress_tick_and_sleep+0x192 : 1e0bde4 >
 1e0bdbe:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1198:16
 1e0bdc0:    08 20             	if (r0 == 0) goto 16 <suppress_tick_and_sleep+0x180 : 1e0bdd2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1198:16
 1e0bdc2:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1203:13
 1e0bdc4:    06 20             	if (r0 == 0) goto 12 <suppress_tick_and_sleep+0x180 : 1e0bdd2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1203:13
 1e0bdc6:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1207:16
 1e0bdc8:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1207:13
 1e0bdca:    10 e0 0a 00       	if (r0 == 1) goto 20 <suppress_tick_and_sleep+0x190 : 1e0bde2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1207:13
 1e0bdce:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1212:16
 1e0bdd0:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1212:13
 1e0bdd2:    c7 80             	r7 += 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1196:5
 1e0bdd4:    67 f2 f3 3f       	if (r7 < r6) goto -26 <suppress_tick_and_sleep+0x16C : 1e0bdbe >
 1e0bdd8:    05 18             	goto 10 <suppress_tick_and_sleep+0x192 : 1e0bde4 >
 1e0bdda:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1929:13
 1e0bddc:    bf f3 a4 ba       	call -35512 <__hw_lrc_time_set : 1e03328 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1929:13
 1e0bde0:    82 1f             	goto -252 <suppress_tick_and_sleep+0x94 : 1e0bce6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1929:13
 1e0bde2:    18 70             	r8 = 1
 1e0bde4:    18 f6 1c e0       	[r14 + 28] = r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1107:19
 1e0bde8:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:565:5
 1e0bdea:    bf f3 b6 b9       	call -35988 <__hw_lrc_enable : 1e0315a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:565:5
 1e0bdee:    00 f9 47 e0       	r0 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0bdf2:    c5 ff 08 00 1e 00 	r5 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0bdf8:    5a fc 18 19       	r10 = r5 + 6424			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0bdfc:    00 e0 30 11       	if (r0 != 0) goto 608 <suppress_tick_and_sleep+0x40E : 1e0c060 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:567:20
 1e0be00:    c0 ff 98 31 00 00 	r0 = 12696 <update_bss_end : 3198 >
 1e0be06:    00 60             	r0 = b[r0 + 0] (u)
 1e0be08:    00 e0 2a 01       	if (r0 == 0) goto 596 <suppress_tick_and_sleep+0x40E : 1e0c060 >
 1e0be0c:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:93:22
 1e0be10:    28 02             	[sp+8] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0be12:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0be16:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0be1a:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0be1c:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0be20:    30 4a             	r0 = [r5 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0be22:    30 fd e0 0c       	r0 = r0 & 536870911			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0be26:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0be2a:    38 4a             	[r5 + 12] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0be2c:    01 f4 08 aa       	[r10 + 4] |= 2048			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:100:5
 1e0be30:    00 f4 40 ac       	[r10 + 0] |= 1073741824			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:102:5
 1e0be34:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be38:    30 fd 07 09       	r0 = r0 & 4294967288			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be3c:    00 fd 03 09       	r0 = r0 | 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be40:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be44:    c0 ff a0 31 00 00 	r0 = 12704 <hdl.5 : 31a0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be4a:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be4c:    f0 fd 60 c0       	r12 = r0 << 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be50:    f3 70             	r3 = 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be52:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be54:    38 70             	r8 = 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be56:    80 71             	r0 = 24			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be58:    c0 fe 00 bc       	r11 = r12 / r0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be5c:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be5e:    0d 70             	r13 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be60:    09 70             	r9 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be62:    05 70             	r5 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0be64:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0be68:    c6 04             	r6 = r3.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0be6a:    c5 fd 20 06       	r0 <= insert(r6, p:4, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0be6e:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0be72:    bf f3 6b bb       	call -35114 <__hw_xosc_fsck_run : 1e0354c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:123:9
 1e0be76:    a0 fc e4 f7       	r0 = r10 + -2076			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0be7a:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0be7c:    61 fb 03 79       	r1 = 3 - r7
 1e0be80:    60 ff ff 19 08 00 	if ((r1 & 255) == 0) goto 16 <suppress_tick_and_sleep+0x244 : 1e0be96 >
 1e0be86:    11 70             	r1 = 1
 1e0be88:    82 08             	r2 = r8
 1e0be8a:    f2 8f             	r2 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0be8c:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0be8e:    61 ff ff 29 fb ff 	if ((r2 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x238 : 1e0be8a >
 1e0be94:    01 18             	goto 2 <suppress_tick_and_sleep+0x246 : 1e0be98 >
 1e0be96:    11 70             	r1 = 1
 1e0be98:    b0 f2 04 90       	if (r0 <= r11) goto 8 <suppress_tick_and_sleep+0x252 : 1e0bea4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:128:13
 1e0be9c:    61 09             	r1 += r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0be9e:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0bea0:    3d 08             	r13 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0bea2:    03 18             	goto 6 <suppress_tick_and_sleep+0x258 : 1e0beaa >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0bea4:    61 bc             	r1 = r6 - r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0bea6:    09 08             	r9 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0bea8:    34 08             	r4 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0beaa:    17 80             	r7 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:35
 1e0beac:    f8 8f             	r8 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0beae:    13 08             	r3 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0beb0:    57 e0 d8 1f       	if (r7 != 5) goto -80 <suppress_tick_and_sleep+0x212 : 1e0be64 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0beb4:    90 fb b0 05       	r0 = r5 - r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:140:57
 1e0beb8:    90 fb 90 1b       	r1 = r11 - r9			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0bebc:    01 f2 01 30       	if (r1 < r0) goto 2 <suppress_tick_and_sleep+0x270 : 1e0bec2 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0bec0:    d4 08             	r4 = r13			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:143:5
 1e0bec2:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0bec6:    c5 fd 20 04       	r0 <= insert(r4, p:4, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0beca:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0bece:    35 70             	r5 = 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0bed0:    02 70             	r2 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0bed2:    13 70             	r3 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0bed4:    a7 fc e8 e6       	r7 = r10 + -6424
 1e0bed8:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0bedc:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0bede:    51 08             	r1 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0bee0:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0bee4:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0bee8:    bf f3 30 bb       	call -35232 <__hw_xosc_fsck_run : 1e0354c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:161:9
 1e0beec:    70 fc fc 10       	r0 = r7 + 4348			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0bef0:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0bef2:    64 fb 01 29       	r4 = 1 - r2
 1e0bef6:    11 70             	r1 = 1
 1e0bef8:    60 ff ff 49 06 00 	if ((r4 & 255) == 0) goto 12 <suppress_tick_and_sleep+0x2B8 : 1e0bf0a >
 1e0befe:    36 08             	r6 = r3
 1e0bf00:    f6 8f             	r6 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0bf02:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0bf04:    61 ff ff 69 fb ff 	if ((r6 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x2AE : 1e0bf00 >
 1e0bf0a:    45 05             	r5 = r5.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0bf0c:    66 fb 00 19       	r6 = 0 - r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0bf10:    b0 f2 01 80       	if (r0 > r11) goto 2 <suppress_tick_and_sleep+0x2C4 : 1e0bf16 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0bf14:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0bf16:    65 09             	r5 += r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0bf18:    12 80             	r2 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:158:47
 1e0bf1a:    f3 8f             	r3 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0bf1c:    32 e0 dc 1f       	if (r2 != 3) goto -72 <suppress_tick_and_sleep+0x286 : 1e0bed8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0bf20:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0bf24:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0bf26:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0bf2a:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0bf2e:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0bf30:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0bf34:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0bf38:    21 02             	r1 = [sp+8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0bf3a:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0bf3c:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0bf40:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0bf44:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:211:22
 1e0bf48:    08 02             	[sp] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0bf4a:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0bf4e:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0bf52:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0bf54:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0bf58:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:216:15
 1e0bf5c:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0bf60:    31 4e             	r1 = [r7 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0bf62:    31 fd e0 1c       	r1 = r1 & 536870911			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0bf66:    01 fd 80 1c       	r1 = r1 | 2147483648			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0bf6a:    39 4e             	[r7 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0bf6c:    01 f4 08 aa       	[r10 + 4] |= 2048			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:221:5
 1e0bf70:    00 f4 40 ac       	[r10 + 0] |= 1073741824			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:223:5
 1e0bf74:    20 fd 07 09       	r0 = r0 & 7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0bf78:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0bf7a:    20 e0 01 80       	if (r0 > 2) goto 2 <suppress_tick_and_sleep+0x32E : 1e0bf80 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0bf7e:    21 70             	r1 = 2
 1e0bf80:    53 70             	r3 = 5
 1e0bf82:    50 e0 01 80       	if (r0 > 5) goto 2 <suppress_tick_and_sleep+0x336 : 1e0bf88 >
 1e0bf86:    13 08             	r3 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:226:9
 1e0bf88:    80 71             	r0 = 24
 1e0bf8a:    c0 fe 00 2c       	r2 = r12 / r0 (u)
 1e0bf8e:    24 fc fb ff       	r4 = r2 + -5
 1e0bf92:    57 94             	r7 = r2 + 5
 1e0bf94:    f9 07             	r9 = -1
 1e0bf96:    f0 7f             	r0 = 255
 1e0bf98:    28 02             	[sp+8] = r0
 1e0bf9a:    08 70             	r8 = 0
 1e0bf9c:    cc ff 9c eb e0 01 	r12 = 31517596 <adkey_data+0x10 : 1e0eb9c >
 1e0bfa2:    0d 70             	r13 = 0
 1e0bfa4:    fb 7f             	r11 = 255
 1e0bfa6:    00 fa 00 dc       	r0 = b[r13+r12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0bfaa:    01 f6 04 a0       	r1 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0bfae:    30 09             	r0 += r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0bfb0:    c3 fd 00 10       	r1 <= insert(r0, p:0, l:3)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0bfb4:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0bfb8:    bf f3 c8 ba       	call -35440 <__hw_xosc_fsck_run : 1e0354c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:242:9
 1e0bfbc:    a0 fc e4 f7       	r0 = r10 + -2076			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e0bfc0:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e0bfc2:    a1 b0             	r1 = r0 - r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0bfc4:    cd df             	r5 = r1 >>> 31			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0bfc6:    51 09             	r1 += r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0bfc8:    d1 ba             	r1 ^= r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0bfca:    41 04             	r1 = r1.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:248:23
 1e0bfcc:    19 f2 04 90       	if (r9 <= r1) goto 8 <suppress_tick_and_sleep+0x386 : 1e0bfd8 >
 1e0bfd0:    05 fa 00 dc       	r5 = b[r13+r12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:250:34
 1e0bfd4:    c6 ba             	r6 = r5 + r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e0bfd6:    19 08             	r9 = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e0bfd8:    70 f2 0c 20       	if (r0 >= r7) goto 24 <suppress_tick_and_sleep+0x3A2 : 1e0bff4 >
 1e0bfdc:    40 f2 0a 90       	if (r0 <= r4) goto 20 <suppress_tick_and_sleep+0x3A2 : 1e0bff4 >
 1e0bfe0:    e4 fd 00 1b       	r1 = r11.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:23
 1e0bfe4:    80 08             	r0 = r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0bfe6:    00 ff ff 10 01 00 	if (r1 == 255) goto 2 <suppress_tick_and_sleep+0x39C : 1e0bfee >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0bfec:    b0 08             	r0 = r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0bfee:    0b 08             	r11 = r0
 1e0bff0:    18 f5 08 00       	[sp+8] = r8
 1e0bff4:    1d 80             	r13 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:236:50
 1e0bff6:    18 80             	r8 += 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e0bff8:    5d e0 d5 1f       	if (r13 != 5) goto -86 <suppress_tick_and_sleep+0x354 : 1e0bfa6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e0bffc:    a5 fc e8 e6       	r5 = r10 + -6424
 1e0c000:    59 e0 0d 20       	if (r9 >= 5) goto 26 <suppress_tick_and_sleep+0x3CC : 1e0c01e >
 1e0c004:    e4 fd 00 0b       	r0 = r11.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:26
 1e0c008:    21 02             	r1 = [sp+8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:18
 1e0c00a:    41 04             	r1 = r1.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:18
 1e0c00c:    21 b2             	r1 = r1 - r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:24
 1e0c00e:    22 70             	r2 = 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e0c010:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e0c014:    10 09             	r0 += r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:265:37
 1e0c016:    00 04             	r0 = r0.b0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e0c018:    00 fa 00 0c       	r0 = b[r0+r12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e0c01c:    c6 b0             	r6 = r0 + r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:266:21
 1e0c01e:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0c022:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0c024:    dd fd 18 60       	r6 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0c028:    16 f6 04 a0       	[r10 + 4] = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0c02c:    bf f3 8e ba       	call -35556 <__hw_xosc_fsck_run : 1e0354c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:274:5
 1e0c030:    50 fc fc 10       	r0 = r5 + 4348			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e0c034:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e0c036:    00 f6 04 a0       	r0 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0c03a:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0c03c:    10 f6 04 a0       	[r10 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0c040:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0c044:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0c046:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0c04a:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0c04e:    01 02             	r1 = [sp]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0c050:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0c052:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0c056:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0c05a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0c060:    01 f6 50 e1       	r1 = [r14 + 336]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:575:20
 1e0c064:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x418 : 1e0c06a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:575:20
 1e0c066:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:576:9
 1e0c068:    81 00             	call r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:576:9
 1e0c06a:    01 f6 00 a0       	r1 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:491:22
 1e0c06e:    e0 fc 50 00       	r0 = r14 + 80			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:491:22
 1e0c072:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:491:12
 1e0c074:    01 f6 04 a0       	r1 = [r10 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:492:22
 1e0c078:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:492:12
 1e0c07a:    52 fc 00 50       	r2 = r5 + 20480			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:492:12
 1e0c07e:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:499:24
 1e0c080:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:499:12
 1e0c082:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:500:24
 1e0c084:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:500:12
 1e0c086:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:501:24
 1e0c088:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:501:12
 1e0c08a:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:502:24
 1e0c08c:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:502:12
 1e0c08e:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:503:24
 1e0c090:    69 40             	[r0 + 24] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:503:12
 1e0c092:    22 fc 00 01       	r2 = r2 + 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:503:12
 1e0c096:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:508:24
 1e0c098:    79 40             	[r0 + 28] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:508:12
 1e0c09a:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:509:24
 1e0c09c:    89 40             	[r0 + 32] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:509:12
 1e0c09e:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:510:24
 1e0c0a0:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:510:12
 1e0c0a2:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:511:24
 1e0c0a4:    a9 40             	[r0 + 40] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:511:12
 1e0c0a6:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:512:24
 1e0c0a8:    b9 40             	[r0 + 44] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:512:12
 1e0c0aa:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:512:12
 1e0c0ae:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:516:25
 1e0c0b0:    c9 40             	[r0 + 48] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:516:12
 1e0c0b2:    23 fc 00 c4       	r3 = r2 + -15360			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:516:12
 1e0c0b6:    01 46             	r1 = [r3 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:517:22
 1e0c0b8:    d9 40             	[r0 + 52] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:517:12
 1e0c0ba:    11 46             	r1 = [r3 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:518:22
 1e0c0bc:    e9 40             	[r0 + 56] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:518:12
 1e0c0be:    91 44             	r1 = [r2 + 36]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:521:26
 1e0c0c0:    f9 40             	[r0 + 60] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:521:12
 1e0c0c2:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:521:12
 1e0c0c6:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:522:23
 1e0c0c8:    09 41             	[r0 + 64] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:522:12
 1e0c0ca:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:523:23
 1e0c0cc:    19 41             	[r0 + 68] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:523:12
 1e0c0ce:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:523:12
 1e0c0d2:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:525:22
 1e0c0d4:    29 41             	[r0 + 72] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:525:12
 1e0c0d6:    08 70             	r8 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:525:12
 1e0c0d8:    18 f6 00 20       	[r2 + 0] = r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:526:17
 1e0c0dc:    cd ff 95 18 1a 00 	r13 = 1710229 <uECC_vli_cmp_unsafe+0x9A899 : 1a1895 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:526:17
 1e0c0e2:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:534:14
 1e0c0e6:    81 fd 20 11       	r1 = uextra(r1, p:4, l:1)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:534:14
 1e0c0ea:    39 41             	[r0 + 76] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:534:12
 1e0c0ec:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:535:5
 1e0c0f0:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:535:5
 1e0c0f2:    11 f9 05 d0       	b[r13 + 5] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:535:5
 1e0c0f6:    01 f9 02 d0       	r1 = b[r13 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:537:14
 1e0c0fa:    21 fd 01 19       	r1 = r1 & 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:537:14
 1e0c0fe:    49 41             	[r0 + 80] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:537:12
 1e0c100:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:538:5
 1e0c104:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:538:5
 1e0c106:    10 f9 02 d0       	b[r13 + 2] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:538:5
 1e0c10a:    01 f6 50 e1       	r1 = [r14 + 336]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:581:20
 1e0c10e:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x4C2 : 1e0c114 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:581:20
 1e0c110:    20 70             	r0 = 2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:582:9
 1e0c112:    81 00             	call r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:582:9
 1e0c114:    00 f6 1c e0       	r0 = [r14 + 28]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:648:17
 1e0c118:    10 e0 04 10       	if (r0 != 1) goto 8 <suppress_tick_and_sleep+0x4D2 : 1e0c124 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:648:17
 1e0c11c:    00 f9 38 e0       	r0 = b[r14 + 56] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:649:21
 1e0c120:    28 fd 01 09       	r8 = r0 & 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:649:43
 1e0c124:    01 f4 01 59       	[r5 + 4] |= 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:657:24
 1e0c128:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0c12a:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0c12e:    00 fd 03 0a       	r0 = r0 | 768			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0c132:    28 4a             	[r5 + 8] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:658:5
 1e0c134:    08 00             	csync			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:659:5
 1e0c136:    00 4a             	r0 = [r5 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:661:29
 1e0c138:    10 f6 b0 40       	[r4 + 176] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:661:17
 1e0c13c:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:661:17
 1e0c13e:    08 4a             	[r5 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:662:23
 1e0c140:    01 f6 1c e0       	r1 = [r14 + 28]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:18
 1e0c144:    09 f9 47 e0       	r9 = b[r14 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:70
 1e0c148:    11 e0 02 00       	if (r1 == 1) goto 4 <suppress_tick_and_sleep+0x4FE : 1e0c150 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:70
 1e0c14c:    19 e0 47 10       	if (r9 != 1) goto 142 <suppress_tick_and_sleep+0x58C : 1e0c1de >
 1e0c150:    10 70             	r0 = 1
 1e0c152:    11 e0 01 00       	if (r1 == 1) goto 2 <suppress_tick_and_sleep+0x506 : 1e0c158 >
 1e0c156:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:24
 1e0c158:    02 f6 00 a0       	r2 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:390:25
 1e0c15c:    03 f6 00 a0       	r3 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:391:25
 1e0c160:    04 f6 00 a0       	r4 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:392:25
 1e0c164:    41 c6             	r1 = r0 << 25			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:392:25
 1e0c166:    85 fd 30 22       	r2 = uextra(r2, p:6, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:390:58
 1e0c16a:    84 fd 58 33       	r3 = uextra(r3, p:11, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:391:57
 1e0c16e:    84 fd 78 54       	r5 = uextra(r4, p:15, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:392:57
 1e0c172:    0b fb c0 07       	r11 = 1984 <DRIVER_CODE_TOTAL+0x2E : 7c0 >
 1e0c176:    cc ff 01 00 08 19 	r12 = 419954689 <uECC_vli_cmp_unsafe+0xF79005 : 1080001 >
 1e0c17c:    10 70             	r0 = 1
 1e0c17e:    16 70             	r6 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:25
 1e0c180:    32 e0 01 80       	if (r2 > 3) goto 2 <suppress_tick_and_sleep+0x534 : 1e0c186 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:25
 1e0c184:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:25
 1e0c186:    a2 b5             	r2 = r2 - r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:396:19
 1e0c188:    94 c1             	r4 = r2 << 6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:404:32
 1e0c18a:    e2 fd b0 44       	r4 = r4 & r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:404:32
 1e0c18e:    e0 fd 40 61       	r6 = r1 | r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0c192:    17 70             	r7 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:26
 1e0c194:    33 e0 01 80       	if (r3 > 3) goto 2 <suppress_tick_and_sleep+0x548 : 1e0c19a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:26
 1e0c198:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:26
 1e0c19a:    e3 b7             	r3 = r3 - r7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:397:20
 1e0c19c:    dc c2             	r4 = r3 << 11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e0c19e:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e0c1a2:    56 b8             	r6 |= r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0c1a4:    35 e0 01 80       	if (r5 > 3) goto 2 <suppress_tick_and_sleep+0x558 : 1e0c1aa >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0c1a8:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e0c1aa:    25 ba             	r5 = r5 - r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:398:20
 1e0c1ac:    e8 c3             	r0 = r5 << 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e0c1ae:    20 fd 70 03       	r0 = r0 & 491520			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e0c1b2:    50 bc             	r0 |= r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0c1b4:    e0 fd c0 00       	r0 = r0 | r12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:412:60
 1e0c1b8:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:400:30
 1e0c1bc:    32 e0 de 1f       	if (r2 != 3) goto -68 <suppress_tick_and_sleep+0x52A : 1e0c17c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:400:30
 1e0c1c0:    33 e0 dc 1f       	if (r3 != 3) goto -72 <suppress_tick_and_sleep+0x52A : 1e0c17c >
 1e0c1c4:    35 e0 da 1f       	if (r5 != 3) goto -76 <suppress_tick_and_sleep+0x52A : 1e0c17c >
 1e0c1c8:    10 70             	r0 = 1
 1e0c1ca:    19 e0 01 00       	if (r9 == 1) goto 2 <suppress_tick_and_sleep+0x57E : 1e0c1d0 >
 1e0c1ce:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:386:79
 1e0c1d0:    c1 ff f3 94 02 00 	r1 = 169203 <text_size+0x109A7 : 294f3 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:432:56
 1e0c1d6:    c1 fd 70 10       	r1 <= insert(r0, p:14, l:1)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:432:56
 1e0c1da:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:424:26
 1e0c1de:    08 e0 0d 10       	if (r8 != 0) goto 26 <suppress_tick_and_sleep+0x5AA : 1e0c1fc >
 1e0c1e2:    a0 fc e0 2d       	r0 = r10 + 11744
 1e0c1e6:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0c1e8:    31 fd 03 19       	r1 = r1 & 4294967292			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0c1ec:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0c1ee:    19 e0 05 00       	if (r9 == 1) goto 10 <suppress_tick_and_sleep+0x5AA : 1e0c1fc >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:668:28
 1e0c1f2:    00 f6 00 a0       	r0 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:671:32
 1e0c1f6:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:671:32
 1e0c1f8:    10 f6 00 a0       	[r10 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:671:32
 1e0c1fc:    00 f9 00 d0       	r0 = b[r13 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c200:    01 f9 4c e1       	r1 = b[r14 + 332] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c204:    20 fd c7 09       	r0 = r0 & 199			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c208:    c9 c0             	r1 = r1 << 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c20a:    21 fd 38 19       	r1 = r1 & 56			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c20e:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c210:    10 f9 00 d0       	b[r13 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:676:5
 1e0c214:    8f f3 2a be       	call 2063444 <low_power_system_down : 3e6c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1120:5
 1e0c218:    09 f6 50 e0       	r9 = [r14 + 80]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:560:25
 1e0c21c:    84 fd 78 09       	r0 = uextra(r9, p:15, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:447:52
 1e0c220:    84 fd 58 19       	r1 = uextra(r9, p:11, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:446:52
 1e0c224:    03 f6 00 a0       	r3 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:449:21
 1e0c228:    04 f6 00 a0       	r4 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:450:21
 1e0c22c:    05 f6 00 a0       	r5 = [r10 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:451:21
 1e0c230:    85 fd 30 29       	r2 = uextra(r9, p:6, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:445:53
 1e0c234:    85 fd 30 33       	r3 = uextra(r3, p:6, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:449:54
 1e0c238:    84 fd 58 74       	r7 = uextra(r4, p:11, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:450:53
 1e0c23c:    84 fd 78 55       	r5 = uextra(r5, p:15, l:4)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:451:53
 1e0c240:    08 fb c0 07       	r8 = 1984 <DRIVER_CODE_TOTAL+0x2E : 7c0 >
 1e0c244:    cc ff 3f 00 f8 ff 	r12 = 4294443071 <bank_code_load_addr+0x16561B : 1f8003f >
 1e0c24a:    1b 70             	r11 = 1
 1e0c24c:    16 70             	r6 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:27
 1e0c24e:    32 f2 01 80       	if (r2 > r3) goto 2 <suppress_tick_and_sleep+0x602 : 1e0c254 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:27
 1e0c252:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:27
 1e0c254:    63 09             	r3 += r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:454:15
 1e0c256:    9c c1             	r4 = r3 << 6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0c258:    e2 fd 80 44       	r4 = r4 & r8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0c25c:    e2 fd c0 69       	r6 = r9 & r12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0c260:    56 b8             	r6 |= r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:458:9
 1e0c262:    14 70             	r4 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:29
 1e0c264:    71 f2 01 80       	if (r1 > r7) goto 2 <suppress_tick_and_sleep+0x618 : 1e0c26a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:29
 1e0c268:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:29
 1e0c26a:    47 09             	r7 += r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:455:16
 1e0c26c:    fc c2             	r4 = r7 << 11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0c26e:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0c272:    56 b8             	r6 |= r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0c274:    50 f2 01 80       	if (r0 > r5) goto 2 <suppress_tick_and_sleep+0x628 : 1e0c27a >
 1e0c278:    0b 70             	r11 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e0c27a:    b5 09             	r5 += r11			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:456:16
 1e0c27c:    ec c3             	r4 = r5 << 15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0c27e:    24 fd 70 43       	r4 = r4 & 491520			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0c282:    e0 fd 40 96       	r9 = r6 | r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0c286:    19 f6 00 a0       	[r10 + 0] = r9			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:462:26
 1e0c28a:    23 f2 de 1f       	if (r3 != r2) goto -68 <suppress_tick_and_sleep+0x5F8 : 1e0c24a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:462:26
 1e0c28e:    17 f2 dc 1f       	if (r7 != r1) goto -72 <suppress_tick_and_sleep+0x5F8 : 1e0c24a >
 1e0c292:    05 f2 da 1f       	if (r5 != r0) goto -76 <suppress_tick_and_sleep+0x5F8 : 1e0c24a >
 1e0c296:    e0 fc 54 00       	r0 = r14 + 84
 1e0c29a:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:561:24
 1e0c29c:    11 f6 04 a0       	[r10 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:561:22
 1e0c2a0:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:569:21
 1e0c2a2:    a2 fc e8 36       	r2 = r10 + 14056			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:569:21
 1e0c2a6:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:569:19
 1e0c2a8:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:570:21
 1e0c2aa:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:570:19
 1e0c2ac:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:571:22
 1e0c2ae:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:571:20
 1e0c2b0:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:572:21
 1e0c2b2:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:572:19
 1e0c2b4:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:573:20
 1e0c2b6:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:573:18
 1e0c2b8:    61 40             	r1 = [r0 + 24]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:576:21
 1e0c2ba:    22 fc 00 01       	r2 = r2 + 256			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:576:21
 1e0c2be:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:576:19
 1e0c2c0:    71 40             	r1 = [r0 + 28]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:577:21
 1e0c2c2:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:577:19
 1e0c2c4:    81 40             	r1 = [r0 + 32]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:578:22
 1e0c2c6:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:578:20
 1e0c2c8:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:579:20
 1e0c2ca:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:579:18
 1e0c2cc:    a1 40             	r1 = [r0 + 40]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:580:20
 1e0c2ce:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:580:18
 1e0c2d0:    b1 40             	r1 = [r0 + 44]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:583:23
 1e0c2d2:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:583:23
 1e0c2d6:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:583:21
 1e0c2d8:    c1 40             	r1 = [r0 + 48]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:584:20
 1e0c2da:    23 fc 00 c4       	r3 = r2 + -15360			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:584:20
 1e0c2de:    09 46             	[r3 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:584:18
 1e0c2e0:    d1 40             	r1 = [r0 + 52]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:585:20
 1e0c2e2:    19 46             	[r3 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:585:18
 1e0c2e4:    e1 40             	r1 = [r0 + 56]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:588:24
 1e0c2e6:    99 44             	[r2 + 36] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:588:22
 1e0c2e8:    f1 40             	r1 = [r0 + 60]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:589:21
 1e0c2ea:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:589:21
 1e0c2ee:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:589:19
 1e0c2f0:    01 41             	r1 = [r0 + 64]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:590:21
 1e0c2f2:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:590:19
 1e0c2f4:    11 41             	r1 = [r0 + 68]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:592:19
 1e0c2f6:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:592:19
 1e0c2fa:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:592:17
 1e0c2fc:    00 f4 40 29       	[r2 + 0] |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:593:17
 1e0c300:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c304:    22 41             	r2 = [r0 + 72]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c306:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c308:    12 c1             	r2 = r2 << 4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c30a:    22 fd 10 29       	r2 = r2 & 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c30e:    51 b4             	r1 |= r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c310:    11 f9 05 d0       	b[r13 + 5] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:598:5
 1e0c314:    01 f9 02 d0       	r1 = b[r13 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0c318:    30 41             	r0 = [r0 + 76]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0c31a:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0c31c:    20 fd 01 09       	r0 = r0 & 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0c320:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0c322:    10 f9 02 d0       	b[r13 + 2] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/pmu_analog.c:600:5
 1e0c326:    01 f6 54 e1       	r1 = [r14 + 340]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0c32a:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x6DE : 1e0c330 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0c32c:    f0 08             	r0 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:600:9
 1e0c32e:    81 00             	call r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:600:9
 1e0c330:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:604:5
 1e0c332:    bf f3 12 b7       	call -37340 <__hw_lrc_enable : 1e0315a >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:604:5
 1e0c336:    00 f9 31 e0       	r0 = b[r14 + 49] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c33a:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c340:    78 08             	r8 = r7			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c342:    d7 fc 82 ff       	r7 = r13 + -126			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c346:    09 f5 04 00       	r9 = [sp+4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c34a:    75 fc ba 07       	r5 = r7 + 1978			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c34e:    07 20             	if (r0 == 0) goto 14 <suppress_tick_and_sleep+0x70C : 1e0c35e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1125:17
 1e0c350:    bf f3 87 b8       	call -36594 <__lp_timer_dump : 1e03462 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1131:9
 1e0c354:    00 f9 31 e0       	r0 = b[r14 + 49] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1131:9
 1e0c358:    02 20             	if (r0 == 0) goto 4 <suppress_tick_and_sleep+0x70C : 1e0c35e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1131:9
 1e0c35a:    8f f3 5c b8       	call 2060472 <p33_soft_reset : 3416 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0c35e:    01 f6 00 e0       	r1 = [r14 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:124:18
 1e0c362:    bf f3 77 b8       	call -36626 <__lp_timer_is_running : 1e03454 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:716:19
 1e0c366:    e1 f2 88 00       	if (r1 == r14) goto 272 <suppress_tick_and_sleep+0x828 : 1e0c47a >
 1e0c36a:    5b 20             	if (r0 == 0) goto 182 <suppress_tick_and_sleep+0x7D0 : 1e0c422 >
 1e0c36c:    30 6a             	r0 = b[r5 + 3] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:125:12
 1e0c36e:    43 6a             	r3 = b[r5 + 4] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:13
 1e0c370:    52 6a             	r2 = b[r5 + 5] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:13
 1e0c372:    61 6a             	r1 = b[r5 + 6] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:13
 1e0c374:    24 6a             	r4 = b[r5 + 2] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0c376:    14 b3             	r4 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0c378:    2c 6a             	b[r5 + 2] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0c37a:    00 00             	nop			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:131:5
 1e0c37c:    00 00             	nop			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:132:5
 1e0c37e:    24 f9 bc 77       	r4 = b[r7 + 1980] (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e0c382:    f4 ef fc cf       	ifs (r4 > -1) goto -8 <suppress_tick_and_sleep+0x72C : 1e0c37e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e0c386:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:9
 1e0c38a:    c8 fd 80 02       	r0 <= insert(r2, p:16, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:9
 1e0c38e:    b2 6a             	r2 = b[r5 + 11] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:137:12
 1e0c390:    c3 6a             	r3 = b[r5 + 12] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:14
 1e0c392:    d4 6a             	r4 = b[r5 + 13] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:14
 1e0c394:    e6 6a             	r6 = b[r5 + 14] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:14
 1e0c396:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:9
 1e0c39a:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:10
 1e0c39e:    c8 fd 80 24       	r2 <= insert(r4, p:16, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:10
 1e0c3a2:    c8 fd c0 26       	r2 <= insert(r6, p:24, l:8)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:10
 1e0c3a6:    a0 b0             	r0 = r0 - r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:142:16
 1e0c3a8:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0c3ae:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0c3b0:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0c3b2:    bf f3 be d2       	call -23172 <__muldi3 : 1e06932 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:338:18
 1e0c3b6:    02 f6 40 e1       	r2 = [r14 + 320]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:340:13
 1e0c3ba:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:340:11
 1e0c3bc:    bf f3 d8 d2       	call -23120 <__udivdi3 : 1e06970 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:340:11
 1e0c3c0:    01 f6 24 e0       	r1 = [r14 + 36]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:721:26
 1e0c3c4:    11 fc 2c 01       	r1 = r1 + 300			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:721:42
 1e0c3c8:    01 f2 2b 20       	if (r1 >= r0) goto 86 <suppress_tick_and_sleep+0x7D0 : 1e0c422 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:721:42
 1e0c3cc:    bf f3 e1 b8       	call -36414 <__lp_timer_get_pass_time : 1e03592 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:724:27
 1e0c3d0:    00 fc 58 02       	r0 = r0 + 600			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:724:78
 1e0c3d4:    bf f3 f4 b8       	call -36376 <__tcnt_us : 1e035c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e0c3d8:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e0c3da:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e0c3de:    bf f3 ef b8       	call -36386 <__tcnt_us : 1e035c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e0c3e2:    20 bc             	r0 = r6 - r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:19
 1e0c3e4:    01 d6             	r1 = r0 >> 24			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:27
 1e0c3e6:    a9 6a             	b[r5 + 10] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:19
 1e0c3e8:    01 d4             	r1 = r0 >> 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:27
 1e0c3ea:    99 6a             	b[r5 + 9] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:19
 1e0c3ec:    01 d2             	r1 = r0 >> 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:27
 1e0c3ee:    89 6a             	b[r5 + 8] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:19
 1e0c3f0:    78 6a             	b[r5 + 7] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:245:19
 1e0c3f2:    30 d6             	r0 = r6 >> 24			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:27
 1e0c3f4:    68 6a             	b[r5 + 6] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:19
 1e0c3f6:    30 d4             	r0 = r6 >> 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:27
 1e0c3f8:    58 6a             	b[r5 + 5] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:19
 1e0c3fa:    30 d2             	r0 = r6 >> 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:27
 1e0c3fc:    48 6a             	b[r5 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:19
 1e0c3fe:    3e 6a             	b[r5 + 3] = r6			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:253:19
 1e0c400:    bf f3 79 b8       	call -36622 <__lp_timer_get_period : 1e034f6 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:726:27
 1e0c404:    11 6a             	r1 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:39
 1e0c406:    12 6a             	r2 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:61
 1e0c408:    0f 08             	r15 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:726:27
 1e0c40a:    20 fd 20 19       	r0 = r1 & 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:39
 1e0c40e:    31 fd 7f 29       	r1 = r2 & 4294967168			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:61
 1e0c412:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:59
 1e0c414:    10 f9 31 e0       	b[r14 + 49] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:37
 1e0c418:    60 ff a0 09 02 00 	if ((r0 & 160) == 0) goto 4 <suppress_tick_and_sleep+0x7D0 : 1e0c422 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:727:37
 1e0c41e:    bf f3 20 b8       	call -36800 <__lp_timer_dump : 1e03462 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:729:21
 1e0c422:    04 70             	r4 = 0
 1e0c424:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:738:17
 1e0c426:    05 f3 23 00       	if ((r0 & 32) == 0) goto 70 <suppress_tick_and_sleep+0x81E : 1e0c470 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:738:17
 1e0c42a:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:740:17
 1e0c42c:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:740:17
 1e0c42e:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:740:17
 1e0c430:    14 f9 30 e0       	b[r14 + 48] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:611:21
 1e0c434:    06 f6 00 e0       	r6 = [r14 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:613:5
 1e0c438:    e6 f2 0d 00       	if (r6 == r14) goto 26 <suppress_tick_and_sleep+0x804 : 1e0c456 >
 1e0c43c:    60 08             	r0 = r6
 1e0c43e:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:16
 1e0c440:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:16
 1e0c442:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x7FC : 1e0c44e >
 1e0c444:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:31
 1e0c446:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x7FC : 1e0c44e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:614:31
 1e0c448:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:615:31
 1e0c44a:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:615:13
 1e0c44c:    82 00             	call r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:615:13
 1e0c44e:    e6 f2 f5 1f       	if (r6 != r14) goto -22 <suppress_tick_and_sleep+0x7EA : 1e0c43c >
 1e0c452:    06 f6 00 e0       	r6 = [r14 + 0]
 1e0c456:    e6 f2 0b 00       	if (r6 == r14) goto 22 <suppress_tick_and_sleep+0x81E : 1e0c470 >
 1e0c45a:    60 08             	r0 = r6
 1e0c45c:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:16
 1e0c45e:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:16
 1e0c460:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x81A : 1e0c46c >
 1e0c462:    52 42             	r2 = [r1 + 20]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:31
 1e0c464:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x81A : 1e0c46c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:620:31
 1e0c466:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:621:36
 1e0c468:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:621:13
 1e0c46a:    82 00             	call r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:621:13
 1e0c46c:    e6 f2 f5 1f       	if (r6 != r14) goto -22 <suppress_tick_and_sleep+0x808 : 1e0c45a >
 1e0c470:    20 f9 bb 77       	r0 = b[r7 + 1979] (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:746:17
 1e0c474:    00 e0 d6 af       	ifs (r0 >= 0) goto -84 <suppress_tick_and_sleep+0x7D2 : 1e0c424 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:746:17
 1e0c478:    0a 18             	goto 20 <suppress_tick_and_sleep+0x83C : 1e0c48e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:746:17
 1e0c47a:    03 20             	if (r0 == 0) goto 6 <suppress_tick_and_sleep+0x830 : 1e0c482 >
 1e0c47c:    bf f3 89 b8       	call -36590 <__lp_timer_get_pass_time : 1e03592 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:767:23
 1e0c480:    0f 08             	r15 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:767:23
 1e0c482:    00 6a             	r0 = b[r5 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0c484:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0c486:    08 6a             	b[r5 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0c488:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0c48a:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0c48c:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0c48e:    10 6a             	r0 = b[r5 + 1] (u)
 1e0c490:    10 b3             	r0 |= 64
 1e0c492:    18 6a             	b[r5 + 1] = r0
 1e0c494:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:646:21
 1e0c496:    10 f9 30 e0       	b[r14 + 48] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:646:21
 1e0c49a:    00 f6 0c e0       	r0 = [r14 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:647:5
 1e0c49e:    90 f2 0a 00       	if (r0 == r9) goto 20 <suppress_tick_and_sleep+0x864 : 1e0c4b6 >
 1e0c4a2:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:648:16
 1e0c4a4:    04 40             	r4 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:648:16
 1e0c4a6:    04 22             	if (r1 == 0) goto 8 <suppress_tick_and_sleep+0x85E : 1e0c4b0 >
 1e0c4a8:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:31
 1e0c4aa:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:21
 1e0c4ac:    f1 08             	r1 = r15			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:13
 1e0c4ae:    82 00             	call r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:649:13
 1e0c4b0:    40 08             	r0 = r4
 1e0c4b2:    94 f2 f6 1f       	if (r4 != r9) goto -20 <suppress_tick_and_sleep+0x850 : 1e0c4a2 >
 1e0c4b6:    00 6e             	r0 = b[r7 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0c4b8:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0c4ba:    08 6e             	b[r7 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0c4bc:    50 fc 20 00       	r0 = r5 + 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0c4c0:    01 18             	goto 2 <suppress_tick_and_sleep+0x872 : 1e0c4c4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:782:5
 1e0c4c2:    02 00             	idle			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0c4c4:    31 60             	r1 = b[r0 + 3] (u)
 1e0c4c6:    03 f3 fc 1f       	if ((r1 & 8) == 0) goto -8 <suppress_tick_and_sleep+0x870 : 1e0c4c2 >
 1e0c4ca:    81 70             	r1 = 8			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0c4cc:    29 60             	b[r0 + 2] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0c4ce:    01 f9 17 80       	r1 = b[r8 + 23] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0c4d2:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1144:5
 1e0c4d4:    97 f3 60 d4       	call 3123392 <local_irq_enable : 106d98 >
 1e0c4d8:    97 f3 5e d4       	call 3123388 <local_irq_enable : 106d98 >			  ## port_overwrite.c:461:5
 1e0c4dc:    06 0a             	sp += 12			  ## port_overwrite.c:461:5
 1e0c4de:    5f 01             	{pc, r15-r4} = [sp++]			  ## port_overwrite.c:79:1


idle_hook:
 1e0c4e0:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## port_overwrite.c:82:0
 1e0c4e6:    01 60             	r1 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0c4e8:    11 b3             	r1 |= 64			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0c4ea:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/wdt.c:30:18
 1e0c4ec:    02 00             	idle			  ## port_overwrite.c:89:5
 1e0c4ee:    20 00             	rts			  ## port_overwrite.c:93:1


__power_get_timeout:
 1e0c4f0:    76 01             	[--sp] = {rets, r6-r4}			  ## port_overwrite.c:342:0
 1e0c4f2:    c4 ff 0c e9 e0 01 	r4 = 31516940 <uart : 1e0e90c >			  ## port_overwrite.c:342:0
 1e0c4f8:    c5 ff a0 e8 e0 01 	r5 = 31516832 <syscfg_ops_end : 1e0e8a0 >			  ## port_overwrite.c:342:0
 1e0c4fe:    45 f2 0d 20       	if (r5 >= r4) goto 26 <__power_get_timeout+0x2C : 1e0c51c >			  ## port_overwrite.c:342:0
 1e0c502:    16 70             	r6 = 1			  ## port_overwrite.c:342:0
 1e0c504:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1179:16
 1e0c506:    04 20             	if (r0 == 0) goto 8 <__power_get_timeout+0x20 : 1e0c510 >
 1e0c508:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1183:13
 1e0c50a:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1186:20
 1e0c50c:    80 00             	call r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1186:17
 1e0c50e:    56 b1             	r6 &= r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1186:17
 1e0c510:    c5 80             	r5 += 12			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1177:5
 1e0c512:    45 f2 f7 3f       	if (r5 < r4) goto -18 <__power_get_timeout+0x14 : 1e0c504 >
 1e0c516:    60 ff ff 69 2c 00 	if ((r6 & 255) == 0) goto 88 <__power_get_timeout+0x84 : 1e0c574 >
 1e0c51c:    97 f3 ae d4       	call 3123548 <eTaskConfirmSleepModeStatus : 106e7c >			  ## port_overwrite.c:354:20
 1e0c520:    04 08             	r4 = r0			  ## port_overwrite.c:354:20
 1e0c522:    97 f3 a9 d4       	call 3123538 <prvGetExpectedIdleTime : 106e78 >			  ## port_overwrite.c:358:10
 1e0c526:    06 28             	if (r4 == 0) goto 12 <__power_get_timeout+0x44 : 1e0c534 >			  ## port_overwrite.c:358:10
 1e0c528:    24 e0 06 10       	if (r4 != 2) goto 12 <__power_get_timeout+0x48 : 1e0c538 >
 1e0c52c:    bf f3 6b b8       	call -36650 <wdt_close : 1e03606 >			  ## port_overwrite.c:374:17
 1e0c530:    e4 07             	r4 = -2			  ## port_overwrite.c:374:17
 1e0c532:    05 18             	goto 10 <__power_get_timeout+0x4E : 1e0c53e >
 1e0c534:    04 70             	r4 = 0
 1e0c536:    03 18             	goto 6 <__power_get_timeout+0x4E : 1e0c53e >
 1e0c538:    01 fb 10 27       	r1 = 10000 <pmu_voltage+0x20 : 2710 >			  ## port_overwrite.c:358:33
 1e0c53c:    44 0e             	r4 = r0 * r1			  ## port_overwrite.c:358:33
 1e0c53e:    c0 ff f0 e0 1b 00 	r0 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## port_overwrite.c:380:16
 1e0c544:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:380:16
 1e0c546:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:382:18
 1e0c54c:    10 f6 e0 50       	[r5 + 224] = r0			  ## port_overwrite.c:380:14
 1e0c550:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## port_overwrite.c:382:35
 1e0c556:    01 70             	r1 = 0			  ## port_overwrite.c:382:35
 1e0c558:    03 70             	r3 = 0			  ## port_overwrite.c:382:35
 1e0c55a:    bf f3 ea d1       	call -23596 <__muldi3 : 1e06932 >			  ## port_overwrite.c:382:35
 1e0c55e:    c2 ff d0 31 00 00 	r2 = 12752 <hdl.15 : 31d0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0c564:    02 44             	r2 = [r2 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c566:    03 70             	r3 = 0			  ## port_overwrite.c:382:47
 1e0c568:    bf f3 02 d2       	call -23548 <__udivdi3 : 1e06970 >			  ## port_overwrite.c:382:47
 1e0c56c:    10 f6 dc 50       	[r5 + 220] = r0			  ## port_overwrite.c:382:18
 1e0c570:    20 b8             	r0 = r4 - r0			  ## port_overwrite.c:384:8
 1e0c572:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:393:1
 1e0c574:    00 70             	r0 = 0
 1e0c576:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:393:1


__power_suspend_post.1082:
 1e0c578:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:396:0
 1e0c57e:    11 70             	r1 = 1			  ## port_overwrite.c:397:27
 1e0c580:    e9 61             	b[r0 + 30] = r1			  ## port_overwrite.c:397:27
 1e0c582:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:466:14
 1e0c588:    c0 f4 40 09       	[r0 + 0] = 64			  ## port_overwrite.c:466:14
 1e0c58c:    20 00             	rts			  ## port_overwrite.c:399:1


__power_resume.1083:
 1e0c58e:    78 01             	[--sp] = {rets, r8-r4}			  ## port_overwrite.c:402:0
 1e0c590:    14 08             	r4 = r1			  ## port_overwrite.c:402:0
 1e0c592:    c8 ff c0 23 00 00 	r8 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:402:0
 1e0c598:    c7 ff d0 31 00 00 	r7 = 12752 <hdl.15 : 31d0 >			  ## port_overwrite.c:402:0
 1e0c59e:    e4 ef 04 10       	if (r4 != -2) goto 8 <__power_resume.1083+0x1C : 1e0c5aa >			  ## port_overwrite.c:404:9
 1e0c5a2:    00 f6 dc 80       	r0 = [r8 + 220]
 1e0c5a6:    04 4e             	r4 = [r7 + 0]
 1e0c5a8:    1d 18             	goto 58 <__power_resume.1083+0x56 : 1e0c5e4 >
 1e0c5aa:    06 fb 10 27       	r6 = 10000 <pmu_voltage+0x20 : 2710 >			  ## port_overwrite.c:409:28
 1e0c5ae:    c0 fe 60 54       	r5 = r4 / r6 (u)			  ## port_overwrite.c:409:28
 1e0c5b2:    50 08             	r0 = r5			  ## port_overwrite.c:409:9
 1e0c5b4:    97 f3 64 d4       	call 3123400 <vTaskStepTick : 106e80 >			  ## port_overwrite.c:409:9
 1e0c5b8:    c0 ff ac 08 00 00 	r0 = 2220 <jiffies : 8ac >			  ## port_overwrite.c:411:17
 1e0c5be:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:411:17
 1e0c5c0:    51 09             	r1 += r5			  ## port_overwrite.c:411:17
 1e0c5c2:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:411:17
 1e0c5c4:    d0 fe 60 24       	r2 = r4 % r6 (u)			  ## port_overwrite.c:414:29
 1e0c5c8:    04 4e             	r4 = [r7 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0c5ca:    e1 df             	r1 = r4 >>> 31			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c5cc:    03 70             	r3 = 0			  ## port_overwrite.c:418:42
 1e0c5ce:    40 08             	r0 = r4			  ## port_overwrite.c:418:42
 1e0c5d0:    bf f3 af d1       	call -23714 <__muldi3 : 1e06932 >			  ## port_overwrite.c:418:42
 1e0c5d4:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## port_overwrite.c:418:67
 1e0c5da:    03 70             	r3 = 0			  ## port_overwrite.c:418:67
 1e0c5dc:    bf f3 c8 d1       	call -23664 <__udivdi3 : 1e06970 >			  ## port_overwrite.c:418:67
 1e0c5e0:    10 f6 dc 80       	[r8 + 220] = r0			  ## port_overwrite.c:418:22
 1e0c5e4:    01 f6 e0 80       	r1 = [r8 + 224]			  ## port_overwrite.c:474:10
 1e0c5e8:    10 09             	r0 += r1			  ## port_overwrite.c:474:19
 1e0c5ea:    41 76             	r1 = 100			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c5ec:    e0 fe 10 14       	r1 = r4 / r1 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c5f0:    12 fc fe ff       	r2 = r1 + -2			  ## port_overwrite.c:477:31
 1e0c5f4:    f1 8f             	r1 += -1			  ## port_overwrite.c:471:68
 1e0c5f6:    10 f2 01 30       	if (r0 < r1) goto 2 <__power_resume.1083+0x6E : 1e0c5fc >
 1e0c5fa:    20 08             	r0 = r2			  ## port_overwrite.c:474:9
 1e0c5fc:    c2 ff ec e0 1b 00 	r2 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >
 1e0c602:    18 44             	[r2 + 4] = r0
 1e0c604:    29 44             	[r2 + 8] = r1			  ## port_overwrite.c:484:14
 1e0c606:    c0 f4 41 29       	[r2 + 0] = 65			  ## port_overwrite.c:486:14
 1e0c60a:    00 70             	r0 = 0			  ## port_overwrite.c:426:27
 1e0c60c:    10 f9 1e 80       	b[r8 + 30] = r0			  ## port_overwrite.c:426:27
 1e0c610:    58 01             	{pc, r8-r4} = [sp++]			  ## port_overwrite.c:427:1


pvPortVMallocStack:
 1e0c612:    7b 01             	[--sp] = {rets, r11-r4}			  ## heap_mmu.c:639:0
 1e0c614:    08 08             	r8 = r0			  ## heap_mmu.c:639:0
 1e0c616:    97 f3 c1 d3       	call 3123074 <local_irq_disable : 106d9c >			  ## heap_mmu.c:645:5
 1e0c61a:    08 00             	csync			  ## heap_mmu.c:645:5
 1e0c61c:    f2 fd 38 98       	r9 = r8 >> 7			  ## heap_mmu.c:640:34
 1e0c620:    e6 fd 00 09       	r0 = r9.l (u)			  ## heap_mmu.c:640:34
 1e0c624:    ca ff d0 28 00 00 	r10 = 10448 <stack_mem : 28d0 >			  ## heap_mmu.c:640:34
 1e0c62a:    05 f7 4a a0       	r5 = h[r10 + 74] (u)			  ## heap_mmu.c:640:34
 1e0c62e:    01 f7 48 a0       	r1 = h[r10 + 72] (u)			  ## heap_mmu.c:649:28
 1e0c632:    04 70             	r4 = 0			  ## heap_mmu.c:649:28
 1e0c634:    1b 70             	r11 = 1			  ## heap_mmu.c:649:28
 1e0c636:    c7 ff e0 ff 00 00 	r7 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >			  ## heap_mmu.c:649:28
 1e0c63c:    63 04             	r3 = r1.l (u)			  ## heap_mmu.c:649:42
 1e0c63e:    53 f2 13 20       	if (r3 >= r5) goto 38 <pvPortVMallocStack+0x56 : 1e0c668 >			  ## heap_mmu.c:649:5
 1e0c642:    e2 fd 70 31       	r3 = r1 & r7			  ## heap_mmu.c:650:29
 1e0c646:    db d0             	r3 = r3 >> 3			  ## heap_mmu.c:650:13
 1e0c648:    82 f6 00 3a       	r2 = [r3+r10]			  ## heap_mmu.c:650:13
 1e0c64c:    23 fd 1f 19       	r3 = r1 & 31			  ## heap_mmu.c:650:43
 1e0c650:    f8 fd 30 6b       	r6 = r11 << r3			  ## heap_mmu.c:650:43
 1e0c654:    13 98             	r3 = r4 + 1			  ## heap_mmu.c:651:26
 1e0c656:    04 70             	r4 = 0			  ## heap_mmu.c:651:26
 1e0c658:    62 f0 01 00       	if ((r2 & r6) == 0) goto 2 <pvPortVMallocStack+0x4C : 1e0c65e >			  ## heap_mmu.c:651:26
 1e0c65c:    34 08             	r4 = r3			  ## heap_mmu.c:650:13
 1e0c65e:    22 05             	r2 = r4.l (u)			  ## heap_mmu.c:655:13
 1e0c660:    11 80             	r1 += 1			  ## heap_mmu.c:655:13
 1e0c662:    02 f2 eb 3f       	if (r2 < r0) goto -42 <pvPortVMallocStack+0x2A : 1e0c63c >			  ## heap_mmu.c:655:13
 1e0c666:    03 18             	goto 6 <pvPortVMallocStack+0x5C : 1e0c66e >			  ## heap_mmu.c:655:13
 1e0c668:    8f f3 d5 b6       	call 2059690 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0c66c:    01 70             	r1 = 0			  ## cpu.h:148:5
 1e0c66e:    65 04             	r5 = r1.l (u)			  ## heap_mmu.c:663:18
 1e0c670:    90 fb 90 95       	r9 = r5 - r9			  ## heap_mmu.c:663:27
 1e0c674:    e6 fd 00 69       	r6 = r9.l (u)			  ## heap_mmu.c:663:18
 1e0c678:    56 f2 16 20       	if (r6 >= r5) goto 44 <pvPortVMallocStack+0x96 : 1e0c6a8 >			  ## heap_mmu.c:663:18
 1e0c67c:    14 70             	r4 = 1
 1e0c67e:    8b fd 28 06       	r0 = uextra(r6, p:5, l:11)
 1e0c682:    80 c0             	r0 = r0 << 2
 1e0c684:    80 fb a0 70       	r7 = r0 + r10
 1e0c688:    00 4e             	r0 = [r7 + 0]
 1e0c68a:    21 fd 1f 69       	r1 = r6 & 31
 1e0c68e:    f8 fd 10 34       	r3 = r4 << r1
 1e0c692:    30 f1 03 00       	if ((r0 & r3) != 0) goto 6 <pvPortVMallocStack+0x8A : 1e0c69c >
 1e0c696:    8f f3 be b6       	call 2059644 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0c69a:    00 4e             	r0 = [r7 + 0]			  ## cpu.h:148:5
 1e0c69c:    e3 fd 30 00       	r0 = r0 & ~r3			  ## heap_mmu.c:669:37
 1e0c6a0:    16 80             	r6 += 1			  ## heap_mmu.c:666:45
 1e0c6a2:    08 4e             	[r7 + 0] = r0			  ## heap_mmu.c:669:37
 1e0c6a4:    65 f2 eb 1f       	if (r5 != r6) goto -42 <pvPortVMallocStack+0x6C : 1e0c67e >			  ## heap_mmu.c:669:37
 1e0c6a8:    a0 fc 50 00       	r0 = r10 + 80
 1e0c6ac:    01 70             	r1 = 0
 1e0c6ae:    02 40             	r2 = [r0 + 0]			  ## heap_mmu.c:673:28
 1e0c6b0:    10 24             	if (r2 == 0) goto 32 <pvPortVMallocStack+0xC0 : 1e0c6d2 >			  ## heap_mmu.c:673:28
 1e0c6b2:    11 80             	r1 += 1			  ## heap_mmu.c:672:46
 1e0c6b4:    80 80             	r0 += 8			  ## heap_mmu.c:672:19
 1e0c6b6:    e1 e0 fa 9f       	if (r1 <= 14) goto -12 <pvPortVMallocStack+0x9C : 1e0c6ae >			  ## heap_mmu.c:672:19
 1e0c6ba:    f0 fd 38 09       	r0 = r9 << 7			  ## heap_mmu.c:689:54
 1e0c6be:    c1 ff 80 ff 7f 00 	r1 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:689:54
 1e0c6c4:    e2 fd 10 30       	r3 = r0 & r1			  ## heap_mmu.c:689:54
 1e0c6c8:    8f f3 a5 b6       	call 2059594 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0c6cc:    01 f6 3c a0       	r1 = [r10 + 60]			  ## cpu.h:148:5
 1e0c6d0:    11 18             	goto 34 <pvPortVMallocStack+0xE2 : 1e0c6f4 >			  ## cpu.h:148:5
 1e0c6d2:    01 f6 3c a0       	r1 = [r10 + 60]			  ## heap_mmu.c:674:62
 1e0c6d6:    f0 fd 38 29       	r2 = r9 << 7			  ## heap_mmu.c:674:81
 1e0c6da:    c3 ff 80 ff 7f 00 	r3 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:674:81
 1e0c6e0:    53 b5             	r3 &= r2			  ## heap_mmu.c:674:81
 1e0c6e2:    c2 b2             	r2 = r1 + r3			  ## heap_mmu.c:674:68
 1e0c6e4:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:674:41
 1e0c6e6:    18 f6 04 00       	[r0 + 4] = r8			  ## heap_mmu.c:675:41
 1e0c6ea:    00 f9 c8 a0       	r0 = b[r10 + 200] (u)			  ## heap_mmu.c:676:34
 1e0c6ee:    10 80             	r0 += 1			  ## heap_mmu.c:676:34
 1e0c6f0:    10 f9 c8 a0       	b[r10 + 200] = r0			  ## heap_mmu.c:676:34
 1e0c6f4:    c5 b2             	r5 = r1 + r3			  ## heap_mmu.c:689:41
 1e0c6f6:    80 fb 80 05       	r0 = r5 + r8			  ## heap_mmu.c:691:33
 1e0c6fa:    00 88             	r0 += -128			  ## heap_mmu.c:691:47
 1e0c6fc:    01 78             	r1 = 128			  ## heap_mmu.c:693:9
 1e0c6fe:    97 f3 dd d3       	call 3123130 <vmalloc_ : 106ebc >			  ## heap_mmu.c:693:9
 1e0c702:    97 f3 49 d3       	call 3122834 <local_irq_enable : 106d98 >			  ## heap_mmu.c:697:5
 1e0c706:    50 08             	r0 = r5			  ## heap_mmu.c:699:5
 1e0c708:    5b 01             	{pc, r11-r4} = [sp++]			  ## heap_mmu.c:699:5


vPortVFreeStack:
 1e0c70a:    7a 01             	[--sp] = {rets, r10-r4}			  ## heap_mmu.c:703:0
 1e0c70c:    04 08             	r4 = r0			  ## heap_mmu.c:703:0
 1e0c70e:    97 f3 45 d3       	call 3122826 <local_irq_disable : 106d9c >			  ## heap_mmu.c:706:5
 1e0c712:    08 00             	csync			  ## heap_mmu.c:706:5
 1e0c714:    00 70             	r0 = 0			  ## heap_mmu.c:706:5
 1e0c716:    c2 ff d0 28 00 00 	r2 = 10448 <stack_mem : 28d0 >			  ## heap_mmu.c:706:5
 1e0c71c:    01 70             	r1 = 0			  ## heap_mmu.c:706:5
 1e0c71e:    03 70             	r3 = 0			  ## heap_mmu.c:706:5
 1e0c720:    85 b2             	r5 = r1 + r2			  ## heap_mmu.c:711:28
 1e0c722:    46 4b             	r6 = [r5 + 80]			  ## heap_mmu.c:711:28
 1e0c724:    46 f2 09 10       	if (r6 != r4) goto 18 <vPortVFreeStack+0x30 : 1e0c73a >			  ## heap_mmu.c:711:28
 1e0c728:    53 4b             	r3 = [r5 + 84]			  ## heap_mmu.c:713:41
 1e0c72a:    48 4b             	[r5 + 80] = r0			  ## heap_mmu.c:715:41
 1e0c72c:    58 4b             	[r5 + 84] = r0			  ## heap_mmu.c:716:41
 1e0c72e:    05 f9 c8 20       	r5 = b[r2 + 200] (u)			  ## heap_mmu.c:717:34
 1e0c732:    f5 8f             	r5 += -1			  ## heap_mmu.c:717:34
 1e0c734:    15 f9 c8 20       	b[r2 + 200] = r5			  ## heap_mmu.c:717:34
 1e0c738:    db d1             	r3 = r3 >> 7			  ## heap_mmu.c:713:47
 1e0c73a:    81 80             	r1 += 8			  ## heap_mmu.c:710:22
 1e0c73c:    81 e7 f0 1f       	if (r1 != 120) goto -32 <vPortVFreeStack+0x16 : 1e0c720 >			  ## heap_mmu.c:710:22
 1e0c740:    f0 44             	r0 = [r2 + 60]			  ## heap_mmu.c:722:44
 1e0c742:    20 b8             	r0 = r4 - r0			  ## heap_mmu.c:722:31
 1e0c744:    89 fd 38 50       	r5 = uextra(r0, p:7, l:9)			  ## heap_mmu.c:722:22
 1e0c748:    e8 04             	r8 = r3.l (u)			  ## heap_mmu.c:724:47
 1e0c74a:    80 fb 80 65       	r6 = r5 + r8			  ## heap_mmu.c:724:45
 1e0c74e:    65 f2 19 20       	if (r5 >= r6) goto 50 <vPortVFreeStack+0x7A : 1e0c784 >			  ## heap_mmu.c:724:45
 1e0c752:    19 70             	r9 = 1
 1e0c754:    ca ff e0 ff 00 00 	r10 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >
 1e0c75a:    50 08             	r0 = r5
 1e0c75c:    e2 fd a0 15       	r1 = r5 & r10
 1e0c760:    c9 d0             	r1 = r1 >> 3
 1e0c762:    87 b2             	r7 = r1 + r2
 1e0c764:    01 4e             	r1 = [r7 + 0]
 1e0c766:    20 fd 1f 09       	r0 = r0 & 31
 1e0c76a:    f8 fd 00 39       	r3 = r9 << r0
 1e0c76e:    31 f0 03 00       	if ((r1 & r3) == 0) goto 6 <vPortVFreeStack+0x6E : 1e0c778 >
 1e0c772:    8f f3 50 b6       	call 2059424 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0c776:    01 4e             	r1 = [r7 + 0]			  ## cpu.h:148:5
 1e0c778:    51 b6             	r1 |= r3			  ## heap_mmu.c:727:37
 1e0c77a:    15 80             	r5 += 1			  ## heap_mmu.c:724:60
 1e0c77c:    60 05             	r0 = r5.l (u)			  ## heap_mmu.c:724:30
 1e0c77e:    09 4e             	[r7 + 0] = r1			  ## heap_mmu.c:727:37
 1e0c780:    60 f2 ec 3f       	if (r0 < r6) goto -40 <vPortVFreeStack+0x52 : 1e0c75c >			  ## heap_mmu.c:727:37
 1e0c784:    f0 fd 38 18       	r1 = r8 << 7
 1e0c788:    40 08             	r0 = r4			  ## heap_mmu.c:734:5
 1e0c78a:    97 f3 99 d3       	call 3122994 <vfree_ : 106ec0 >			  ## heap_mmu.c:734:5
 1e0c78e:    1a 01             	{rets, r10-r4} = [sp++]			  ## heap_mmu.c:737:5
 1e0c790:    d7 f3 02 d3       	goto 3122692 <local_irq_enable : 106d98 >			  ## heap_mmu.c:737:5


zalloc:
 1e0c794:    75 01             	[--sp] = {rets, r5, r4}			  ## memory.c:42:0
 1e0c796:    04 08             	r4 = r0			  ## memory.c:42:0
 1e0c798:    28 fb 00 03       	r0 = rets			  ## memory.c:44:5
 1e0c79c:    40 08             	r0 = r4			  ## memory.c:46:11
 1e0c79e:    bf f3 25 f8       	call -4022 <pvPortMalloc : 1e0b7ec >			  ## memory.c:46:11
 1e0c7a2:    05 08             	r5 = r0			  ## memory.c:46:11
 1e0c7a4:    04 2a             	if (r5 == 0) goto 8 <zalloc+0x1A : 1e0c7ae >
 1e0c7a6:    01 70             	r1 = 0			  ## memory.c:48:9
 1e0c7a8:    42 08             	r2 = r4			  ## memory.c:48:9
 1e0c7aa:    97 f3 a1 d3       	call 3123010 <memset : 106ef0 >			  ## memory.c:48:9
 1e0c7ae:    50 08             	r0 = r5			  ## memory.c:52:5
 1e0c7b0:    55 01             	{pc, r5, r4} = [sp++]			  ## memory.c:52:5


tick_timer_init:
 1e0c7b2:    34 00             	[--sp] = rets			  ## port_overwrite.c:296:0
 1e0c7b4:    c2 ff de 33 00 00 	r2 = 13278 <begin_of_data : 33de >			  ## port_overwrite.c:297:5
 1e0c7ba:    30 70             	r0 = 3			  ## port_overwrite.c:297:5
 1e0c7bc:    11 70             	r1 = 1			  ## port_overwrite.c:297:5
 1e0c7be:    bf f3 a6 f9       	call -3252 <request_irq : 1e0bb0e >			  ## port_overwrite.c:297:5
 1e0c7c2:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:297:5
 1e0c7c8:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:301:14
 1e0c7cc:    c1 ff d0 31 00 00 	r1 = 12752 <hdl.15 : 31d0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0c7d2:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:1732:20
 1e0c7d4:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c7d6:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c7da:    f1 8f             	r1 += -1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/clock.c:2225:9
 1e0c7dc:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:302:14
 1e0c7de:    c0 f4 41 09       	[r0 + 0] = 65			  ## port_overwrite.c:304:14
 1e0c7e2:    30 00             	pc = [sp++]			  ## port_overwrite.c:305:1


vPortSysSleepInit:
 1e0c7e4:    34 00             	[--sp] = rets			  ## port_overwrite.c:450:0
 1e0c7e6:    c0 ff ec ef e0 01 	r0 = 31518700 <sys_power_ops : 1e0efec >			  ## port_overwrite.c:439:21
 1e0c7ec:    bf f3 77 b9       	call -36114 <low_power_sys_get : 1e03ade >			  ## port_overwrite.c:439:21
 1e0c7f0:    c1 ff 54 21 00 00 	r1 = 8532 <sys_low_power : 2154 >			  ## port_overwrite.c:439:19
 1e0c7f6:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:439:19
 1e0c7f8:    30 00             	pc = [sp++]			  ## port_overwrite.c:452:1


cbuf_init:
 1e0c7fa:    03 70             	r3 = 0			  ## circular_buf.c:261:0
 1e0c7fc:    6b 40             	[r0 + 24] = r3			  ## circular_buf.c:262:23
 1e0c7fe:    5b 40             	[r0 + 20] = r3			  ## circular_buf.c:263:22
 1e0c800:    09 40             	[r0 + 0] = r1			  ## circular_buf.c:264:20
 1e0c802:    29 40             	[r0 + 8] = r1			  ## circular_buf.c:265:23
 1e0c804:    39 40             	[r0 + 12] = r1			  ## circular_buf.c:266:24
 1e0c806:    49 40             	[r0 + 16] = r1			  ## circular_buf.c:267:22
 1e0c808:    21 09             	r1 += r2			  ## circular_buf.c:268:30
 1e0c80a:    19 40             	[r0 + 4] = r1			  ## circular_buf.c:268:18
 1e0c80c:    7a 40             	[r0 + 28] = r2			  ## circular_buf.c:269:24
 1e0c80e:    8b 40             	[r0 + 32] = r3			  ## spinlock.h:70:18
 1e0c810:    20 00             	rts			  ## circular_buf.c:271:1


cbuf_write:
 1e0c812:    77 01             	[--sp] = {rets, r7-r4}			  ## circular_buf.c:127:0
 1e0c814:    24 08             	r4 = r2			  ## circular_buf.c:127:0
 1e0c816:    16 08             	r6 = r1			  ## circular_buf.c:127:0
 1e0c818:    05 08             	r5 = r0			  ## circular_buf.c:127:0
 1e0c81a:    09 2a             	if (r5 == 0) goto 18 <cbuf_write+0x1C : 1e0c82e >			  ## circular_buf.c:127:0
 1e0c81c:    97 f3 be d2       	call 3122556 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c820:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:138:40
 1e0c822:    71 4a             	r1 = [r5 + 28]			  ## circular_buf.c:138:19
 1e0c824:    20 b2             	r0 = r1 - r0			  ## circular_buf.c:138:29
 1e0c826:    40 f2 04 20       	if (r0 >= r4) goto 8 <cbuf_write+0x20 : 1e0c832 >			  ## circular_buf.c:138:9
 1e0c82a:    97 f3 b5 d2       	call 3122538 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c82e:    04 70             	r4 = 0
 1e0c830:    21 18             	goto 66 <cbuf_write+0x62 : 1e0c874 >
 1e0c832:    30 4a             	r0 = [r5 + 12]			  ## circular_buf.c:143:48
 1e0c834:    11 4a             	r1 = [r5 + 4]			  ## circular_buf.c:143:28
 1e0c836:    27 b2             	r7 = r1 - r0			  ## circular_buf.c:143:32
 1e0c838:    47 f2 0c 20       	if (r7 >= r4) goto 24 <cbuf_write+0x42 : 1e0c854 >
 1e0c83c:    61 08             	r1 = r6			  ## circular_buf.c:149:9
 1e0c83e:    72 08             	r2 = r7			  ## circular_buf.c:149:9
 1e0c840:    97 f3 50 d3       	call 3122848 <memcpy : 106ee4 >			  ## circular_buf.c:149:9
 1e0c844:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:150:28
 1e0c846:    c1 bd             	r1 = r6 + r7			  ## circular_buf.c:150:47
 1e0c848:    e6 b9             	r6 = r4 - r7			  ## circular_buf.c:148:26
 1e0c84a:    62 08             	r2 = r6			  ## circular_buf.c:150:9
 1e0c84c:    97 f3 4a d3       	call 3122836 <memcpy : 106ee4 >			  ## circular_buf.c:150:9
 1e0c850:    57 08             	r7 = r5			  ## circular_buf.c:150:9
 1e0c852:    06 18             	goto 12 <cbuf_write+0x4E : 1e0c860 >
 1e0c854:    c7 9a             	r7 = r5 + 12			  ## circular_buf.c:143:48
 1e0c856:    61 08             	r1 = r6			  ## circular_buf.c:145:9
 1e0c858:    42 08             	r2 = r4			  ## circular_buf.c:145:9
 1e0c85a:    97 f3 43 d3       	call 3122822 <memcpy : 106ee4 >			  ## circular_buf.c:145:9
 1e0c85e:    46 08             	r6 = r4			  ## circular_buf.c:145:9
 1e0c860:    00 4e             	r0 = [r7 + 0]
 1e0c862:    60 09             	r0 += r6
 1e0c864:    38 4a             	[r5 + 12] = r0			  ## circular_buf.c:146:28
 1e0c866:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:154:23
 1e0c868:    41 09             	r1 += r4			  ## circular_buf.c:154:23
 1e0c86a:    69 4a             	[r5 + 24] = r1			  ## circular_buf.c:154:23
 1e0c86c:    59 4a             	[r5 + 20] = r1			  ## circular_buf.c:155:22
 1e0c86e:    48 4a             	[r5 + 16] = r0			  ## circular_buf.c:156:22
 1e0c870:    97 f3 92 d2       	call 3122468 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c874:    40 08             	r0 = r4			  ## circular_buf.c:160:1
 1e0c876:    57 01             	{pc, r7-r4} = [sp++]			  ## circular_buf.c:160:1


cbuf_get_data_size:
 1e0c878:    20 00             	rts			  ## circular_buf.c:327:0


cbuf_read:
 1e0c87a:    79 01             	[--sp] = {rets, r9-r4}			  ## circular_buf.c:22:0
 1e0c87c:    24 08             	r4 = r2			  ## circular_buf.c:22:0
 1e0c87e:    18 08             	r8 = r1			  ## circular_buf.c:22:0
 1e0c880:    05 08             	r5 = r0			  ## circular_buf.c:22:0
 1e0c882:    0d 2a             	if (r5 == 0) goto 26 <cbuf_read+0x24 : 1e0c89e >			  ## circular_buf.c:22:0
 1e0c884:    10 4a             	r0 = [r5 + 4]			  ## circular_buf.c:33:49
 1e0c886:    27 4a             	r7 = [r5 + 8]			  ## circular_buf.c:33:23
 1e0c888:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:27:29
 1e0c88a:    07 f2 02 30       	if (r7 < r0) goto 4 <cbuf_read+0x18 : 1e0c892 >
 1e0c88e:    07 4a             	r7 = [r5 + 0]			  ## circular_buf.c:34:44
 1e0c890:    2f 4a             	[r5 + 8] = r7			  ## circular_buf.c:34:27
 1e0c892:    41 f2 06 20       	if (r1 >= r4) goto 12 <cbuf_read+0x28 : 1e0c8a2 >			  ## circular_buf.c:37:9
 1e0c896:    01 70             	r1 = 0			  ## circular_buf.c:38:9
 1e0c898:    80 08             	r0 = r8			  ## circular_buf.c:38:9
 1e0c89a:    97 f3 29 d3       	call 3122770 <memset : 106ef0 >			  ## circular_buf.c:38:9
 1e0c89e:    04 70             	r4 = 0
 1e0c8a0:    23 18             	goto 70 <cbuf_read+0x6E : 1e0c8e8 >
 1e0c8a2:    e0 b1             	r0 = r0 - r7			  ## circular_buf.c:45:34
 1e0c8a4:    46 08             	r6 = r4			  ## circular_buf.c:46:9
 1e0c8a6:    40 f2 01 80       	if (r0 > r4) goto 2 <cbuf_read+0x32 : 1e0c8ac >			  ## circular_buf.c:46:9
 1e0c8aa:    06 08             	r6 = r0			  ## circular_buf.c:46:9
 1e0c8ac:    80 08             	r0 = r8			  ## circular_buf.c:52:5
 1e0c8ae:    71 08             	r1 = r7			  ## circular_buf.c:52:5
 1e0c8b0:    62 08             	r2 = r6			  ## circular_buf.c:52:5
 1e0c8b2:    97 f3 17 d3       	call 3122734 <memcpy : 106ee4 >			  ## circular_buf.c:52:5
 1e0c8b6:    a9 b9             	r9 = r4 - r6			  ## circular_buf.c:49:9
 1e0c8b8:    09 e0 0a 00       	if (r9 == 0) goto 20 <cbuf_read+0x56 : 1e0c8d0 >
 1e0c8bc:    01 4a             	r1 = [r5 + 0]			  ## circular_buf.c:57:50
 1e0c8be:    80 fb 60 08       	r0 = r8 + r6			  ## circular_buf.c:57:29
 1e0c8c2:    92 08             	r2 = r9			  ## circular_buf.c:57:9
 1e0c8c4:    97 f3 0e d3       	call 3122716 <memcpy : 106ee4 >			  ## circular_buf.c:57:9
 1e0c8c8:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:58:29
 1e0c8ca:    80 fb 90 60       	r6 = r0 + r9			  ## circular_buf.c:58:35
 1e0c8ce:    01 18             	goto 2 <cbuf_read+0x58 : 1e0c8d2 >
 1e0c8d0:    76 09             	r6 += r7			  ## circular_buf.c:55:18
 1e0c8d2:    97 f3 63 d2       	call 3122374 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c8d6:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:62:23
 1e0c8d8:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:62:23
 1e0c8da:    68 4a             	[r5 + 24] = r0			  ## circular_buf.c:62:23
 1e0c8dc:    50 4a             	r0 = [r5 + 20]			  ## circular_buf.c:63:22
 1e0c8de:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:63:22
 1e0c8e0:    58 4a             	[r5 + 20] = r0			  ## circular_buf.c:63:22
 1e0c8e2:    2e 4a             	[r5 + 8] = r6			  ## circular_buf.c:64:23
 1e0c8e4:    97 f3 58 d2       	call 3122352 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c8e8:    40 08             	r0 = r4			  ## circular_buf.c:68:1
 1e0c8ea:    59 01             	{pc, r9-r4} = [sp++]			  ## circular_buf.c:68:1


event_pool_init:
 1e0c8ec:    34 00             	[--sp] = rets			  ## event.c:69:0
 1e0c8ee:    00 fb 24 01       	r0 = 292 <DRIVER_RAM_TOTAL+0x32 : 124 >			  ## event.c:70:26
 1e0c8f2:    bf f3 55 f8       	call -3926 <malloc : 1e0b9a0 >			  ## event.c:70:26
 1e0c8f6:    c1 ff 80 08 00 00 	r1 = 2176 <handl : 880 >			  ## event.c:70:24
 1e0c8fc:    48 42             	[r1 + 16] = r0			  ## event.c:70:24
 1e0c8fe:    08 20             	if (r0 == 0) goto 16 <event_pool_init+0x24 : 1e0c910 >			  ## event.c:70:24
 1e0c900:    01 fc 24 00       	r1 = r0 + 36			  ## event.c:75:54
 1e0c904:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## event.c:75:5
 1e0c908:    bf f3 77 ff       	call -274 <cbuf_init : 1e0c7fa >			  ## event.c:75:5
 1e0c90c:    00 70             	r0 = 0			  ## event.c:75:5
 1e0c90e:    30 00             	pc = [sp++]			  ## event.c:78:1
 1e0c910:    40 07             	r0 = -12
 1e0c912:    30 00             	pc = [sp++]			  ## event.c:78:1


sys_event_notify:
 1e0c914:    75 01             	[--sp] = {rets, r5, r4}			  ## event.c:103:0
 1e0c916:    28 fb 00 13       	r1 = rets			  ## event.c:105:5
 1e0c91a:    c5 ff 80 08 00 00 	r5 = 2176 <handl : 880 >
 1e0c920:    41 4a             	r1 = [r5 + 16]			  ## event.c:109:18
 1e0c922:    04 08             	r4 = r0
 1e0c924:    0d 22             	if (r1 == 0) goto 26 <sys_event_notify+0x2C : 1e0c940 >
 1e0c926:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:115:16
 1e0c928:    10 e0 22 10       	if (r0 != 1) goto 68 <sys_event_notify+0x5C : 1e0c970 >			  ## event.c:115:16
 1e0c92c:    97 f3 36 d2       	call 3122284 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c930:    30 6a             	r0 = b[r5 + 3] (u)			  ## event.c:131:21
 1e0c932:    09 20             	if (r0 == 0) goto 18 <sys_event_notify+0x32 : 1e0c946 >			  ## event.c:131:13
 1e0c934:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:132:30
 1e0c936:    30 e0 10 00       	if (r0 == 3) goto 32 <sys_event_notify+0x46 : 1e0c95a >			  ## event.c:132:30
 1e0c93a:    10 e0 0b 00       	if (r0 == 1) goto 22 <sys_event_notify+0x40 : 1e0c954 >
 1e0c93e:    11 18             	goto 34 <sys_event_notify+0x4E : 1e0c962 >
 1e0c940:    d5 17             	call -86 <event_pool_init : 1e0c8ec >			  ## event.c:110:13
 1e0c942:    23 30             	if (r0 != 0) goto 70 <sys_event_notify+0x76 : 1e0c98a >			  ## event.c:110:13
 1e0c944:    f0 1f             	goto -32 <sys_event_notify+0x12 : 1e0c926 >			  ## event.c:110:13
 1e0c946:    40 6a             	r0 = b[r5 + 4] (u)			  ## event.c:142:28
 1e0c948:    0f 20             	if (r0 == 0) goto 30 <sys_event_notify+0x54 : 1e0c968 >			  ## event.c:142:28
 1e0c94a:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:143:30
 1e0c94c:    30 e0 0c 00       	if (r0 == 3) goto 24 <sys_event_notify+0x54 : 1e0c968 >			  ## event.c:143:30
 1e0c950:    10 e0 03 10       	if (r0 != 1) goto 6 <sys_event_notify+0x46 : 1e0c95a >
 1e0c954:    30 48             	r0 = [r4 + 12]
 1e0c956:    58 6a             	b[r5 + 5] = r0
 1e0c958:    04 18             	goto 8 <sys_event_notify+0x4E : 1e0c962 >
 1e0c95a:    30 48             	r0 = [r4 + 12]
 1e0c95c:    51 6a             	r1 = b[r5 + 5] (u)
 1e0c95e:    01 f2 03 10       	if (r1 != r0) goto 6 <sys_event_notify+0x54 : 1e0c968 >
 1e0c962:    15 01             	{rets, r5, r4} = [sp++]
 1e0c964:    d7 f3 18 d2       	goto 3122224 <local_irq_enable : 106d98 >
 1e0c968:    f0 7f             	r0 = 255			  ## event.c:154:28
 1e0c96a:    58 6a             	b[r5 + 5] = r0			  ## event.c:154:28
 1e0c96c:    97 f3 14 d2       	call 3122216 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c970:    40 08             	r0 = r4			  ## event.c:180:9
 1e0c972:    80 f3 7b 54       	call 43254 <sys_event_recode : 1e1726c >			  ## event.c:180:9
 1e0c976:    09 30             	if (r0 != 0) goto 18 <sys_event_notify+0x76 : 1e0c98a >			  ## event.c:180:9
 1e0c978:    40 4a             	r0 = [r5 + 16]			  ## event.c:184:30
 1e0c97a:    82 71             	r2 = 24			  ## event.c:184:11
 1e0c97c:    41 08             	r1 = r4			  ## event.c:184:11
 1e0c97e:    bf f3 48 ff       	call -368 <cbuf_write : 1e0c812 >			  ## event.c:184:11
 1e0c982:    50 4a             	r0 = [r5 + 20]			  ## event.c:191:17
 1e0c984:    02 20             	if (r0 == 0) goto 4 <sys_event_notify+0x76 : 1e0c98a >			  ## event.c:191:17
 1e0c986:    97 f3 41 d2       	call 3122306 <os_sem_post : 106e0c >			  ## event.c:192:9
 1e0c98a:    55 01             	{pc, r5, r4} = [sp++]			  ## event.c:194:1


sys_key_event_disable:
 1e0c98c:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:357:0
 1e0c98e:    f4 0b             	sp += -24			  ## event.c:357:0
 1e0c990:    97 f3 04 d2       	call 3122184 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c994:    c5 ff 80 08 00 00 	r5 = 2176 <handl : 880 >			  ## spinlock.h:77:5
 1e0c99a:    10 70             	r0 = 1			  ## event.c:364:25
 1e0c99c:    38 6a             	b[r5 + 3] = r0			  ## event.c:364:25
 1e0c99e:    f6 7f             	r6 = 255			  ## event.c:365:24
 1e0c9a0:    5e 6a             	b[r5 + 5] = r6			  ## event.c:365:24
 1e0c9a2:    40 4a             	r0 = [r5 + 16]			  ## event.c:367:43
 1e0c9a4:    60 40             	r0 = [r0 + 24]			  ## event.c:367:43
 1e0c9a6:    bf f3 67 ff       	call -306 <cbuf_get_data_size : 1e0c878 >			  ## event.c:367:16
 1e0c9aa:    04 08             	r4 = r0			  ## event.c:367:16
 1e0c9ac:    1c 28             	if (r4 == 0) goto 56 <sys_key_event_disable+0x5A : 1e0c9e6 >
 1e0c9ae:    40 4a             	r0 = [r5 + 16]			  ## event.c:370:33
 1e0c9b0:    01 a0             	r1 = sp + 0			  ## event.c:370:33
 1e0c9b2:    82 71             	r2 = 24			  ## event.c:370:15
 1e0c9b4:    bf f3 61 ff       	call -318 <cbuf_read : 1e0c87a >			  ## event.c:370:15
 1e0c9b8:    16 20             	if (r0 == 0) goto 44 <sys_key_event_disable+0x5A : 1e0c9e6 >
 1e0c9ba:    81 f5 00 00       	r1 = h[sp] (u)			  ## event.c:375:19
 1e0c9be:    24 b8             	r4 = r4 - r0			  ## event.c:374:18
 1e0c9c0:    11 e0 0b 10       	if (r1 != 1) goto 22 <sys_key_event_disable+0x4E : 1e0c9da >
 1e0c9c4:    80 f5 0a 00       	r0 = h[sp+10] (u)			  ## event.c:376:29
 1e0c9c8:    30 e0 04 00       	if (r0 == 3) goto 8 <sys_key_event_disable+0x48 : 1e0c9d4 >			  ## event.c:376:17
 1e0c9cc:    10 e0 0a 10       	if (r0 != 1) goto 20 <sys_key_event_disable+0x58 : 1e0c9e4 >
 1e0c9d0:    36 02             	r6 = [sp+12]			  ## event.c:377:44
 1e0c9d2:    08 18             	goto 16 <sys_key_event_disable+0x58 : 1e0c9e4 >			  ## event.c:377:44
 1e0c9d4:    30 02             	r0 = [sp+12]			  ## event.c:379:49
 1e0c9d6:    06 f2 05 00       	if (r6 == r0) goto 10 <sys_key_event_disable+0x58 : 1e0c9e4 >			  ## event.c:379:49
 1e0c9da:    40 4a             	r0 = [r5 + 16]			  ## event.c:386:28
 1e0c9dc:    01 a0             	r1 = sp + 0			  ## event.c:386:28
 1e0c9de:    82 71             	r2 = 24			  ## event.c:386:9
 1e0c9e0:    bf f3 17 ff       	call -466 <cbuf_write : 1e0c812 >			  ## event.c:386:9
 1e0c9e4:    e4 39             	if (r4 != 0) goto -56 <sys_key_event_disable+0x22 : 1e0c9ae >
 1e0c9e6:    97 f3 d7 d1       	call 3122094 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c9ea:    0c 0a             	sp += 24			  ## spinlock.h:88:5
 1e0c9ec:    56 01             	{pc, r6-r4} = [sp++]			  ## event.c:390:1


sys_key_event_enable:
 1e0c9ee:    34 00             	[--sp] = rets			  ## event.c:393:0
 1e0c9f0:    97 f3 d4 d1       	call 3122088 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c9f4:    c0 ff 80 08 00 00 	r0 = 2176 <handl : 880 >			  ## event.c:395:25
 1e0c9fa:    01 70             	r1 = 0			  ## event.c:395:25
 1e0c9fc:    39 60             	b[r0 + 3] = r1			  ## event.c:395:25
 1e0c9fe:    88 01             	{rets} = [sp++]			  ## spinlock.h:88:5
 1e0ca00:    d7 f3 ca d1       	goto 3122068 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_event_init:
 1e0ca04:    77 01             	[--sp] = {rets, r7-r4}			  ## event.c:674:0
 1e0ca06:    c5 ff 80 08 00 00 	r5 = 2176 <handl : 880 >			  ## event.c:674:0
 1e0ca0c:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:678:17
 1e0ca0e:    04 70             	r4 = 0			  ## event.c:678:17
 1e0ca10:    2c 30             	if (r0 != 0) goto 88 <sys_event_init+0x66 : 1e0ca6a >			  ## event.c:678:17
 1e0ca12:    14 70             	r4 = 1			  ## event.c:682:20
 1e0ca14:    0c 6a             	b[r5 + 0] = r4			  ## event.c:682:20
 1e0ca16:    f0 7f             	r0 = 255			  ## event.c:683:24
 1e0ca18:    58 6a             	b[r5 + 5] = r0			  ## event.c:683:24
 1e0ca1a:    06 70             	r6 = 0			  ## event.c:683:24
 1e0ca1c:    3e 4a             	[r5 + 12] = r6			  ## event.c:684:27
 1e0ca1e:    6e 4a             	[r5 + 24] = r6			  ## spinlock.h:70:18
 1e0ca20:    c7 9b             	r7 = r5 + 28			  ## list.h:188:16
 1e0ca22:    7f 4a             	[r5 + 28] = r7			  ## list.h:188:16
 1e0ca24:    8f 4a             	[r5 + 32] = r7			  ## list.h:189:16
 1e0ca26:    80 73             	r0 = 56			  ## event.c:688:33
 1e0ca28:    bf f3 ba f7       	call -4236 <malloc : 1e0b9a0 >			  ## event.c:688:33
 1e0ca2c:    1d 20             	if (r0 == 0) goto 58 <sys_event_init+0x64 : 1e0ca68 >			  ## event.c:688:33
 1e0ca2e:    4c 61             	b[r0 + 20] = r4			  ## event.c:693:16
 1e0ca30:    3e 40             	[r0 + 12] = r6			  ## event.c:694:20
 1e0ca32:    88 4a             	[r5 + 32] = r0			  ## list.h:137:16
 1e0ca34:    0f 40             	[r0 + 0] = r7			  ## list.h:138:16
 1e0ca36:    1f 40             	[r0 + 4] = r7			  ## list.h:139:16
 1e0ca38:    78 4a             	[r5 + 28] = r0			  ## list.h:140:16
 1e0ca3a:    81 4a             	r1 = [r5 + 32]
 1e0ca3c:    14 f9 30 00       	b[r0 + 48] = r4			  ## event.c:693:16
 1e0ca40:    ae 40             	[r0 + 40] = r6			  ## event.c:694:20
 1e0ca42:    7f 40             	[r0 + 28] = r7			  ## list.h:138:16
 1e0ca44:    89 40             	[r0 + 32] = r1			  ## list.h:139:16
 1e0ca46:    c0 81             	r0 += 28			  ## event.c:696:10
 1e0ca48:    08 42             	[r1 + 0] = r0			  ## list.h:140:16
 1e0ca4a:    88 4a             	[r5 + 32] = r0
 1e0ca4c:    40 4a             	r0 = [r5 + 16]			  ## event.c:703:18
 1e0ca4e:    01 30             	if (r0 != 0) goto 2 <sys_event_init+0x4E : 1e0ca52 >			  ## event.c:703:18
 1e0ca50:    4d 17             	call -358 <event_pool_init : 1e0c8ec >			  ## event.c:704:9
 1e0ca52:    c0 ff 6e ca e0 01 	r0 = 31509102 <sys_event_task : 1e0ca6e >			  ## event.c:706:5
 1e0ca58:    c2 ff 00 f1 e0 01 	r2 = 31518976 <bluetooth_base_uuid+0xF6 : 1e0f100 >			  ## event.c:706:5
 1e0ca5e:    01 70             	r1 = 0			  ## event.c:706:5
 1e0ca60:    04 70             	r4 = 0			  ## event.c:706:5
 1e0ca62:    80 f3 23 01       	call 582 <task_create : 1e0ccac >			  ## event.c:706:5
 1e0ca66:    01 18             	goto 2 <sys_event_init+0x66 : 1e0ca6a >			  ## event.c:706:5
 1e0ca68:    44 07             	r4 = -12
 1e0ca6a:    40 08             	r0 = r4			  ## event.c:709:1
 1e0ca6c:    57 01             	{pc, r7-r4} = [sp++]			  ## event.c:709:1


sys_event_task:
 1e0ca6e:    f4 0b             	sp += -24			  ## event.c:623:0
 1e0ca70:    00 75             	r0 = 80			  ## event.c:625:19
 1e0ca72:    bf f3 95 f7       	call -4310 <malloc : 1e0b9a0 >			  ## event.c:625:19
 1e0ca76:    04 08             	r4 = r0			  ## event.c:625:19
 1e0ca78:    02 38             	if (r4 != 0) goto 4 <sys_event_task+0x10 : 1e0ca7e >			  ## event.c:625:19
 1e0ca7a:    8f f3 cc b4       	call 2058648 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0ca7e:    01 70             	r1 = 0			  ## event.c:628:5
 1e0ca80:    08 70             	r8 = 0			  ## event.c:628:5
 1e0ca82:    40 08             	r0 = r4			  ## event.c:628:5
 1e0ca84:    97 f3 bc d1       	call 3122040 <os_sem_create : 106e00 >			  ## event.c:628:5
 1e0ca88:    c9 ff 80 08 00 00 	r9 = 2176 <handl : 880 >			  ## event.c:628:5
 1e0ca8e:    14 f6 14 90       	[r9 + 20] = r4			  ## event.c:629:17
 1e0ca92:    c4 ff 58 21 00 00 	r4 = 8536 <event : 2158 >			  ## event.c:629:17
 1e0ca98:    cf ff 4c e8 e0 01 	r15 = 31516748 <syscfg_ops_begin : 1e0e84c >			  ## event.c:629:17
 1e0ca9e:    97 f3 7d d1       	call 3121914 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0caa2:    00 f6 10 90       	r0 = [r9 + 16]			  ## event.c:635:33
 1e0caa6:    82 71             	r2 = 24			  ## event.c:635:15
 1e0caa8:    41 08             	r1 = r4			  ## event.c:635:15
 1e0caaa:    bf f3 e6 fe       	call -564 <cbuf_read : 1e0c87a >			  ## event.c:635:15
 1e0caae:    b0 20             	if (r0 == 0) goto 352 <sys_event_task+0x1A2 : 1e0cc10 >
 1e0cab0:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:640:23
 1e0cab2:    10 e0 04 10       	if (r0 != 1) goto 8 <sys_event_task+0x50 : 1e0cabe >
 1e0cab6:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## event.c:641:44
 1e0caba:    10 f9 04 90       	b[r9 + 4] = r0			  ## event.c:641:34
 1e0cabe:    97 f3 6b d1       	call 3121878 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cac2:    00 75             	r0 = 80			  ## event.c:531:24
 1e0cac4:    bf f3 6c f7       	call -4392 <malloc : 1e0b9a0 >			  ## event.c:531:24
 1e0cac8:    0d 08             	r13 = r0			  ## event.c:531:24
 1e0caca:    02 30             	if (r0 != 0) goto 4 <sys_event_task+0x62 : 1e0cad0 >			  ## event.c:531:24
 1e0cacc:    8f f3 a3 b4       	call 2058566 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0cad0:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:535:21
 1e0cad4:    c0 ff 4c e8 e0 01 	r0 = 31516748 <syscfg_ops_begin : 1e0e84c >			  ## event.c:537:5
 1e0cada:    f0 f2 0d 20       	if (r0 >= r15) goto 26 <sys_event_task+0x8A : 1e0caf8 >			  ## event.c:537:5
 1e0cade:    05 08             	r5 = r0
 1e0cae0:    00 4a             	r0 = [r5 + 0]			  ## event.c:538:16
 1e0cae2:    01 58             	r1 = h[r4 + 0] (u)			  ## event.c:538:29
 1e0cae4:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <sys_event_task+0x84 : 1e0caf2 >			  ## event.c:538:29
 1e0cae8:    11 4a             	r1 = [r5 + 4]			  ## event.c:539:16
 1e0caea:    40 08             	r0 = r4			  ## event.c:539:13
 1e0caec:    81 00             	call r1			  ## event.c:539:13
 1e0caee:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:540:24
 1e0caf0:    97 30             	if (r0 != 0) goto 302 <sys_event_task+0x1B2 : 1e0cc20 >			  ## event.c:540:24
 1e0caf2:    85 80             	r5 += 8			  ## event.c:537:5
 1e0caf4:    f5 f2 f4 3f       	if (r5 < r15) goto -24 <sys_event_task+0x72 : 1e0cae0 >
 1e0caf8:    0e f6 0c 90       	r14 = [r9 + 12]			  ## event.c:547:29
 1e0cafc:    97 f3 4e d1       	call 3121820 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0cb00:    07 f6 1c 90       	r7 = [r9 + 28]			  ## event.c:551:5
 1e0cb04:    95 fc 1c 00       	r5 = r9 + 28			  ## event.c:551:5
 1e0cb08:    57 f2 71 00       	if (r7 == r5) goto 226 <sys_event_task+0x180 : 1e0cbee >			  ## event.c:551:5
 1e0cb0c:    0c f7 00 40       	r12 = h[r4 + 0] (u)
 1e0cb10:    02 f9 01 90       	r2 = b[r9 + 1] (u)
 1e0cb14:    10 70             	r0 = 1
 1e0cb16:    11 70             	r1 = 1
 1e0cb18:    c2 f0 01 00       	if ((r2 & r12) == 0) goto 2 <sys_event_task+0xB0 : 1e0cb1e >
 1e0cb1c:    01 70             	r1 = 0
 1e0cb1e:    03 f9 02 90       	r3 = b[r9 + 2] (u)
 1e0cb22:    12 70             	r2 = 1
 1e0cb24:    01 36             	if (r3 != 0) goto 2 <sys_event_task+0xBA : 1e0cb28 >
 1e0cb26:    02 70             	r2 = 0
 1e0cb28:    51 b4             	r1 |= r2
 1e0cb2a:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0xC2 : 1e0cb30 >
 1e0cb2e:    00 70             	r0 = 0
 1e0cb30:    0b f6 04 40       	r11 = [r4 + 4]
 1e0cb34:    e0 fd 10 a0       	r10 = r0 | r1
 1e0cb38:    76 08             	r6 = r7
 1e0cb3a:    40 6d             	r0 = b[r6 + 20] (u)			  ## event.c:552:16
 1e0cb3c:    07 4c             	r7 = [r6 + 0]			  ## event.c:552:16
 1e0cb3e:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0xD8 : 1e0cb46 >
 1e0cb40:    57 f2 fa 1f       	if (r7 != r5) goto -12 <sys_event_task+0xCA : 1e0cb38 >
 1e0cb44:    54 18             	goto 168 <sys_event_task+0x180 : 1e0cbee >
 1e0cb46:    30 4c             	r0 = [r6 + 12]			  ## event.c:552:27
 1e0cb48:    fb 21             	if (r0 == 0) goto -10 <sys_event_task+0xD2 : 1e0cb40 >			  ## event.c:552:27
 1e0cb4a:    b0 5c             	r0 = h[r6 + 22] (u)			  ## event.c:555:18
 1e0cb4c:    c0 f0 f8 ff       	if ((r0 & r12) == 0) goto -16 <sys_event_task+0xD2 : 1e0cb40 >			  ## event.c:555:18
 1e0cb50:    60 4c             	r0 = [r6 + 24]			  ## event.c:558:16
 1e0cb52:    02 20             	if (r0 == 0) goto 4 <sys_event_task+0xEA : 1e0cb58 >			  ## event.c:558:16
 1e0cb54:    b0 f2 f4 1f       	if (r0 != r11) goto -24 <sys_event_task+0xD2 : 1e0cb40 >
 1e0cb58:    0a e0 05 10       	if (r10 != 0) goto 10 <sys_event_task+0xF8 : 1e0cb66 >
 1e0cb5c:    40 4c             	r0 = [r6 + 16]			  ## event.c:564:31
 1e0cb5e:    e1 08             	r1 = r14			  ## event.c:564:21
 1e0cb60:    97 f3 c8 d1       	call 3122064 <strcmp : 106ef4 >			  ## event.c:564:21
 1e0cb64:    ed 31             	if (r0 != 0) goto -38 <sys_event_task+0xD2 : 1e0cb40 >			  ## event.c:564:21
 1e0cb66:    97 f3 17 d1       	call 3121710 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cb6a:    01 70             	r1 = 0			  ## event.c:573:9
 1e0cb6c:    d0 08             	r0 = r13			  ## event.c:573:9
 1e0cb6e:    97 f3 47 d1       	call 3121806 <os_sem_create : 106e00 >			  ## event.c:573:9
 1e0cb72:    30 4c             	r0 = [r6 + 12]			  ## event.c:575:26
 1e0cb74:    08 02             	[sp] = r0			  ## event.c:575:16
 1e0cb76:    00 fb 02 02       	r0 = 514 <BTCTLER_CONTROLLER_BSS_SIZE+0x42 : 202 >			  ## event.c:576:16
 1e0cb7a:    18 02             	[sp+4] = r0			  ## event.c:576:16
 1e0cb7c:    2c 02             	[sp+8] = r4			  ## event.c:577:16
 1e0cb7e:    20 4c             	r0 = [r6 + 8]			  ## event.c:578:26
 1e0cb80:    38 02             	[sp+12] = r0			  ## event.c:578:16
 1e0cb82:    1d f5 10 00       	[sp+16] = r13			  ## event.c:579:16
 1e0cb86:    03 18             	goto 6 <sys_event_task+0x120 : 1e0cb8e >			  ## event.c:579:16
 1e0cb88:    20 70             	r0 = 2			  ## event.c:592:13
 1e0cb8a:    97 f3 15 d1       	call 3121706 <os_time_dly : 106db8 >			  ## event.c:592:13
 1e0cb8e:    40 6d             	r0 = b[r6 + 20] (u)
 1e0cb90:    16 30             	if (r0 != 0) goto 44 <sys_event_task+0x150 : 1e0cbbe >
 1e0cb92:    40 4c             	r0 = [r6 + 16]			  ## event.c:581:45
 1e0cb94:    03 a0             	r3 = sp + 0			  ## event.c:581:45
 1e0cb96:    20 fb 30 1b       	r1 = 3145728			  ## event.c:581:23
 1e0cb9a:    52 70             	r2 = 5			  ## event.c:581:23
 1e0cb9c:    97 f3 20 d1       	call 3121728 <os_taskq_post_type : 106de0 >			  ## event.c:581:23
 1e0cba0:    50 e1 f2 0f       	if (r0 == 21) goto -28 <sys_event_task+0x11A : 1e0cb88 >			  ## event.c:582:17
 1e0cba4:    0c 30             	if (r0 != 0) goto 24 <sys_event_task+0x150 : 1e0cbbe >
 1e0cba6:    00 f6 08 90       	r0 = [r9 + 8]			  ## event.c:583:53
 1e0cbaa:    a1 70             	r1 = 10			  ## event.c:583:65
 1e0cbac:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## event.c:583:65
 1e0cbb0:    d0 08             	r0 = r13			  ## event.c:583:23
 1e0cbb2:    97 f3 29 d1       	call 3121746 <os_sem_pend : 106e08 >			  ## event.c:583:23
 1e0cbb6:    b0 e0 02 10       	if (r0 != 11) goto 4 <sys_event_task+0x150 : 1e0cbbe >
 1e0cbba:    8f f3 2c b4       	call 2058328 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0cbbe:    00 f9 02 90       	r0 = b[r9 + 2] (u)			  ## event.c:595:21
 1e0cbc2:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0x15C : 1e0cbca >			  ## event.c:595:13
 1e0cbc4:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:596:29
 1e0cbc8:    02 18             	goto 4 <sys_event_task+0x160 : 1e0cbce >			  ## event.c:596:29
 1e0cbca:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:598:20
 1e0cbcc:    29 30             	if (r0 != 0) goto 82 <sys_event_task+0x1B2 : 1e0cc20 >			  ## event.c:598:20
 1e0cbce:    97 f3 e5 d0       	call 3121610 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0cbd2:    00 4c             	r0 = [r6 + 0]			  ## event.c:609:22
 1e0cbd4:    70 f2 01 00       	if (r0 == r7) goto 2 <sys_event_task+0x16C : 1e0cbda >
 1e0cbd8:    07 08             	r7 = r0			  ## event.c:609:13
 1e0cbda:    00 f6 0c 90       	r0 = [r9 + 12]			  ## event.c:605:39
 1e0cbde:    01 30             	if (r0 != 0) goto 2 <sys_event_task+0x174 : 1e0cbe2 >
 1e0cbe0:    e0 08             	r0 = r14			  ## event.c:605:28
 1e0cbe2:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0x17A : 1e0cbe8 >
 1e0cbe6:    e0 08             	r0 = r14			  ## event.c:605:28
 1e0cbe8:    0e 08             	r14 = r0
 1e0cbea:    57 f2 8f 1f       	if (r7 != r5) goto -226 <sys_event_task+0x9E : 1e0cb0c >
 1e0cbee:    d0 08             	r0 = r13			  ## event.c:613:5
 1e0cbf0:    bf f3 db f6       	call -4682 <free : 1e0b9aa >			  ## event.c:613:5
 1e0cbf4:    18 f9 02 90       	b[r9 + 2] = r8			  ## event.c:615:31
 1e0cbf8:    97 f3 ce d0       	call 3121564 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cbfc:    97 f3 ce d0       	call 3121564 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0cc00:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:656:23
 1e0cc02:    10 e0 02 10       	if (r0 != 1) goto 4 <sys_event_task+0x19C : 1e0cc0a >			  ## event.c:656:23
 1e0cc06:    18 f9 04 90       	b[r9 + 4] = r8			  ## event.c:657:34
 1e0cc0a:    97 f3 c5 d0       	call 3121546 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cc0e:    47 1f             	goto -370 <sys_event_task+0x30 : 1e0ca9e >			  ## spinlock.h:88:5
 1e0cc10:    97 f3 c2 d0       	call 3121540 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cc14:    00 f6 14 90       	r0 = [r9 + 20]			  ## event.c:638:33
 1e0cc18:    01 70             	r1 = 0			  ## event.c:638:13
 1e0cc1a:    97 f3 f5 d0       	call 3121642 <os_sem_pend : 106e08 >			  ## event.c:638:13
 1e0cc1e:    3f 1f             	goto -386 <sys_event_task+0x30 : 1e0ca9e >			  ## event.c:638:13
 1e0cc20:    d0 08             	r0 = r13
 1e0cc22:    bf f3 c2 f6       	call -4732 <free : 1e0b9aa >
 1e0cc26:    ea 1f             	goto -44 <sys_event_task+0x18E : 1e0cbfc >


register_sys_event_handler:
 1e0cc28:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:226:0
 1e0cc2a:    c5 ff 80 08 00 00 	r5 = 2176 <handl : 880 >			  ## event.c:226:0
 1e0cc30:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:229:18
 1e0cc32:    0f 20             	if (r0 == 0) goto 30 <register_sys_event_handler+0x2A : 1e0cc52 >			  ## event.c:229:18
 1e0cc34:    74 4a             	r4 = [r5 + 28]
 1e0cc36:    c6 9b             	r6 = r5 + 28
 1e0cc38:    64 f2 05 00       	if (r4 == r6) goto 10 <register_sys_event_handler+0x1E : 1e0cc46 >
 1e0cc3c:    40 69             	r0 = b[r4 + 20] (u)			  ## event.c:236:16
 1e0cc3e:    0c 30             	if (r0 != 0) goto 24 <register_sys_event_handler+0x30 : 1e0cc58 >			  ## event.c:236:16
 1e0cc40:    04 48             	r4 = [r4 + 0]
 1e0cc42:    64 f2 fb 1f       	if (r4 != r6) goto -10 <register_sys_event_handler+0x14 : 1e0cc3c >
 1e0cc46:    c0 71             	r0 = 28			  ## event.c:244:33
 1e0cc48:    bf f3 aa f6       	call -4780 <malloc : 1e0b9a0 >			  ## event.c:244:33
 1e0cc4c:    04 08             	r4 = r0			  ## event.c:244:33
 1e0cc4e:    0c 38             	if (r4 != 0) goto 24 <register_sys_event_handler+0x40 : 1e0cc68 >
 1e0cc50:    56 01             	{pc, r6-r4} = [sp++]
 1e0cc52:    d8 16             	call -592 <sys_event_init : 1e0ca04 >			  ## event.c:230:13
 1e0cc54:    2a 30             	if (r0 != 0) goto 84 <register_sys_event_handler+0x82 : 1e0ccaa >			  ## event.c:230:13
 1e0cc56:    ee 1f             	goto -36 <register_sys_event_handler+0xC : 1e0cc34 >			  ## event.c:230:13
 1e0cc58:    97 f3 a0 d0       	call 3121472 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0cc5c:    00 48             	r0 = [r4 + 0]			  ## list.h:165:36
 1e0cc5e:    11 48             	r1 = [r4 + 4]			  ## list.h:165:23
 1e0cc60:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0cc62:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0cc64:    97 f3 98 d0       	call 3121456 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cc68:    00 70             	r0 = 0
 1e0cc6a:    48 69             	b[r4 + 20] = r0			  ## event.c:250:12
 1e0cc6c:    68 48             	[r4 + 24] = r0			  ## event.c:251:13
 1e0cc6e:    c1 ff 2a cd e0 01 	r1 = 31509802 <app_core_event_handler : 1e0cd2a >			  ## event.c:252:16
 1e0cc74:    39 48             	[r4 + 12] = r1			  ## event.c:252:16
 1e0cc76:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## event.c:253:19
 1e0cc7c:    b9 58             	h[r4 + 22] = r1			  ## event.c:253:19
 1e0cc7e:    58 69             	b[r4 + 21] = r0			  ## event.c:254:17
 1e0cc80:    8f f3 be b2       	call 2057596 <report_data_code_begin : 3200 >			  ## event.c:255:16
 1e0cc84:    48 48             	[r4 + 16] = r0			  ## event.c:255:14
 1e0cc86:    02 30             	if (r0 != 0) goto 4 <register_sys_event_handler+0x64 : 1e0cc8c >			  ## event.c:255:14
 1e0cc88:    8f f3 c5 b3       	call 2058122 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0cc8c:    97 f3 86 d0       	call 3121420 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0cc90:    70 4a             	r0 = [r5 + 28]			  ## spinlock.h:77:5
 1e0cc92:    60 f2 03 00       	if (r0 == r6) goto 6 <register_sys_event_handler+0x74 : 1e0cc9c >
 1e0cc96:    00 40             	r0 = [r0 + 0]
 1e0cc98:    60 f2 fd 1f       	if (r0 != r6) goto -6 <register_sys_event_handler+0x6E : 1e0cc96 >
 1e0cc9c:    80 4a             	r0 = [r5 + 32]			  ## list.h:154:28
 1e0cc9e:    8c 4a             	[r5 + 32] = r4			  ## list.h:137:16
 1e0cca0:    0e 48             	[r4 + 0] = r6			  ## list.h:138:16
 1e0cca2:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e0cca4:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e0cca6:    97 f3 77 d0       	call 3121390 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0ccaa:    56 01             	{pc, r6-r4} = [sp++]


task_create:
 1e0ccac:    77 01             	[--sp] = {rets, r7-r4}			  ## task.c:53:0
 1e0ccae:    fc 0b             	sp += -8			  ## task.c:53:0
 1e0ccb0:    26 08             	r6 = r2			  ## task.c:53:0
 1e0ccb2:    14 08             	r4 = r1			  ## task.c:53:0
 1e0ccb4:    05 08             	r5 = r0			  ## task.c:53:0
 1e0ccb6:    c7 ff aa ea e0 01 	r7 = 31517354 <task_info_table+0x6 : 1e0eaaa >			  ## task.c:53:0
 1e0ccbc:    c0 ff 37 f1 e0 01 	r0 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >			  ## task.c:53:0
 1e0ccc2:    61 08             	r1 = r6			  ## task.c:15:14
 1e0ccc4:    97 f3 16 d1       	call 3121708 <strcmp : 106ef4 >			  ## task.c:15:14
 1e0ccc8:    05 20             	if (r0 == 0) goto 10 <task_create+0x28 : 1e0ccd4 >			  ## task.c:15:13
 1e0ccca:    00 f6 06 70       	r0 = [r7 + 6]			  ## task.c:14:34
 1e0ccce:    c7 80             	r7 += 12			  ## task.c:14:5
 1e0ccd0:    f8 31             	if (r0 != 0) goto -16 <task_create+0x16 : 1e0ccc2 >			  ## task.c:14:5
 1e0ccd2:    0b 18             	goto 22 <task_create+0x3E : 1e0ccea >			  ## task.c:14:5
 1e0ccd4:    03 5e             	r3 = h[r7 + 0] (u)			  ## task.c:62:47
 1e0ccd6:    02 f9 fe 7f       	r2 = b[r7 + -2] (u)			  ## task.c:62:11
 1e0ccda:    10 5e             	r0 = h[r7 + 2] (u)			  ## task.c:62:65
 1e0ccdc:    1e 02             	[sp+4] = r6			  ## task.c:62:11
 1e0ccde:    08 02             	[sp] = r0			  ## task.c:62:11
 1e0cce0:    50 08             	r0 = r5			  ## task.c:62:11
 1e0cce2:    41 08             	r1 = r4			  ## task.c:62:11
 1e0cce4:    97 f3 64 d0       	call 3121352 <os_task_create : 106db0 >			  ## task.c:62:11
 1e0cce8:    02 20             	if (r0 == 0) goto 4 <task_create+0x42 : 1e0ccee >
 1e0ccea:    8f f3 94 b3       	call 2058024 <p33_soft_reset : 3416 >
 1e0ccee:    04 0a             	sp += 8
 1e0ccf0:    57 01             	{pc, r7-r4} = [sp++]


task_kill:
 1e0ccf2:    c0 ff 64 f0 e0 01 	r0 = 31518820 <bluetooth_base_uuid+0x5A : 1e0f064 >			  ## task.c:87:0
 1e0ccf8:    d7 f3 66 d0       	goto 3121356 <os_task_del : 106dc8 >			  ## task.c:89:11


get_current_app:
 1e0ccfc:    77 01             	[--sp] = {rets, r7-r4}			  ## app_core.c:395:0
 1e0ccfe:    c5 ff fc 20 00 00 	r5 = 8444 <mutex.1037 : 20fc >			  ## app_core.c:398:5
 1e0cd04:    01 70             	r1 = 0			  ## app_core.c:398:5
 1e0cd06:    04 70             	r4 = 0			  ## app_core.c:398:5
 1e0cd08:    50 08             	r0 = r5			  ## app_core.c:398:5
 1e0cd0a:    97 f3 8b d0       	call 3121430 <os_mutex_pend : 106e24 >			  ## app_core.c:398:5
 1e0cd0e:    c6 ff 78 08 00 00 	r6 = 2168 <head : 878 >			  ## list.h:124:18
 1e0cd14:    07 4c             	r7 = [r6 + 0]			  ## list.h:124:18
 1e0cd16:    50 08             	r0 = r5			  ## app_core.c:404:5
 1e0cd18:    97 f3 86 d0       	call 3121420 <os_mutex_post : 106e28 >			  ## app_core.c:404:5
 1e0cd1c:    70 fc f0 ff       	r0 = r7 + -16			  ## app_core.c:401:15
 1e0cd20:    67 f2 01 00       	if (r7 == r6) goto 2 <get_current_app+0x2A : 1e0cd26 >
 1e0cd24:    04 08             	r4 = r0			  ## app_core.c:400:9
 1e0cd26:    40 08             	r0 = r4			  ## app_core.c:406:5
 1e0cd28:    57 01             	{pc, r7-r4} = [sp++]			  ## app_core.c:406:5


app_core_event_handler:
 1e0cd2a:    34 00             	[--sp] = rets			  ## app_core.c:76:0
 1e0cd2c:    c3 ff 78 08 00 00 	r3 = 2168 <head : 878 >			  ## list.h:124:18
 1e0cd32:    02 46             	r2 = [r3 + 0]			  ## list.h:124:18
 1e0cd34:    01 08             	r1 = r0			  ## list.h:124:18
 1e0cd36:    32 f2 06 00       	if (r2 == r3) goto 12 <app_core_event_handler+0x1C : 1e0cd46 >
 1e0cd3a:    30 44             	r0 = [r2 + 12]			  ## app_core.c:83:18
 1e0cd3c:    13 40             	r3 = [r0 + 4]			  ## app_core.c:83:23
 1e0cd3e:    03 26             	if (r3 == 0) goto 6 <app_core_event_handler+0x1C : 1e0cd46 >			  ## app_core.c:83:23
 1e0cd40:    20 fc f0 ff       	r0 = r2 + -16			  ## app_core.c:82:15
 1e0cd44:    83 00             	call r3			  ## app_core.c:84:17
 1e0cd46:    30 00             	pc = [sp++]			  ## app_core.c:91:1


__start_app:
 1e0cd48:    7d 01             	[--sp] = {rets, r13-r4}			  ## app_core.c:198:0
 1e0cd4a:    09 08             	r9 = r0			  ## app_core.c:198:0
 1e0cd4c:    c8 ff fc 20 00 00 	r8 = 8444 <mutex.1037 : 20fc >			  ## app_core.c:198:0
 1e0cd52:    01 70             	r1 = 0			  ## app_core.c:202:5
 1e0cd54:    0d 70             	r13 = 0			  ## app_core.c:202:5
 1e0cd56:    80 08             	r0 = r8			  ## app_core.c:202:5
 1e0cd58:    97 f3 64 d0       	call 3121352 <os_mutex_pend : 106e24 >			  ## app_core.c:202:5
 1e0cd5c:    ca ff 78 08 00 00 	r10 = 2168 <head : 878 >			  ## app_core.c:202:5
 1e0cd62:    01 f6 00 a0       	r1 = [r10 + 0]			  ## list.h:124:18
 1e0cd66:    10 fc f0 ff       	r0 = r1 + -16			  ## app_core.c:205:15
 1e0cd6a:    a1 f2 01 00       	if (r1 == r10) goto 2 <__start_app+0x28 : 1e0cd70 >
 1e0cd6e:    0d 08             	r13 = r0			  ## app_core.c:204:9
 1e0cd70:    04 f6 04 90       	r4 = [r9 + 4]			  ## app_core.c:216:17
 1e0cd74:    c0 ff 01 2c 1b 0a 	r0 = 169552897 <uECC_vli_cmp_unsafe+0xABC05 : 1b2c01 >			  ## app_core.c:216:5
 1e0cd7a:    04 f2 37 00       	if (r4 == r0) goto 110 <__start_app+0xA4 : 1e0cdec >			  ## app_core.c:216:5
 1e0cd7e:    0b fc ff ff       	r11 = r0 + -1
 1e0cd82:    b4 f2 3f 10       	if (r4 != r11) goto 126 <__start_app+0xBC : 1e0ce04 >
 1e0cd86:    0d e0 57 00       	if (r13 == 0) goto 174 <__start_app+0xF0 : 1e0ce38 >
 1e0cd8a:    00 f6 10 d0       	r0 = [r13 + 16]			  ## list.h:171:36
 1e0cd8e:    01 f6 14 d0       	r1 = [r13 + 20]			  ## list.h:171:23
 1e0cd92:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0cd94:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0cd96:    d0 fc 10 00       	r0 = r13 + 16			  ## app_core.c:223:24
 1e0cd9a:    10 f6 10 d0       	[r13 + 16] = r0			  ## list.h:172:17
 1e0cd9e:    10 f6 14 d0       	[r13 + 20] = r0			  ## list.h:173:17
 1e0cda2:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:224:14
 1e0cda6:    03 40             	r3 = [r0 + 0]			  ## app_core.c:224:19
 1e0cda8:    41 70             	r1 = 4			  ## app_core.c:224:9
 1e0cdaa:    02 70             	r2 = 0			  ## app_core.c:224:9
 1e0cdac:    0c 70             	r12 = 0			  ## app_core.c:224:9
 1e0cdae:    d0 08             	r0 = r13			  ## app_core.c:224:9
 1e0cdb0:    83 00             	call r3			  ## app_core.c:224:9
 1e0cdb2:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:225:14
 1e0cdb6:    03 40             	r3 = [r0 + 0]			  ## app_core.c:225:19
 1e0cdb8:    51 70             	r1 = 5			  ## app_core.c:225:9
 1e0cdba:    02 70             	r2 = 0			  ## app_core.c:225:9
 1e0cdbc:    54 70             	r4 = 5			  ## app_core.c:225:9
 1e0cdbe:    d0 08             	r0 = r13			  ## app_core.c:225:9
 1e0cdc0:    83 00             	call r3			  ## app_core.c:225:9
 1e0cdc2:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:226:20
 1e0cdc6:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:124:18
 1e0cdca:    a0 f2 85 00       	if (r0 == r10) goto 266 <__start_app+0x190 : 1e0ced8 >			  ## list.h:124:18
 1e0cdce:    07 fc f0 ff       	r7 = r0 + -16			  ## app_core.c:231:15
 1e0cdd2:    00 6e             	r0 = b[r7 + 0] (u)			  ## app_core.c:262:18
 1e0cdd4:    20 e0 43 00       	if (r0 == 2) goto 134 <__start_app+0x116 : 1e0ce5e >			  ## app_core.c:262:5
 1e0cdd8:    50 e0 4c 10       	if (r0 != 5) goto 152 <__start_app+0x12C : 1e0ce74 >
 1e0cddc:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:264:20
 1e0cdde:    03 40             	r3 = [r0 + 0]			  ## app_core.c:264:25
 1e0cde0:    01 70             	r1 = 0			  ## app_core.c:264:15
 1e0cde2:    02 70             	r2 = 0			  ## app_core.c:264:15
 1e0cde4:    70 08             	r0 = r7			  ## app_core.c:264:15
 1e0cde6:    83 00             	call r3			  ## app_core.c:264:15
 1e0cde8:    0c 08             	r12 = r0			  ## app_core.c:264:15
 1e0cdea:    42 18             	goto 132 <__start_app+0x128 : 1e0ce70 >
 1e0cdec:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:234:14
 1e0cdf0:    03 40             	r3 = [r0 + 0]			  ## app_core.c:234:19
 1e0cdf2:    44 70             	r4 = 4			  ## app_core.c:234:19
 1e0cdf4:    41 70             	r1 = 4			  ## app_core.c:234:9
 1e0cdf6:    02 70             	r2 = 0			  ## app_core.c:234:9
 1e0cdf8:    0c 70             	r12 = 0			  ## app_core.c:234:9
 1e0cdfa:    d0 08             	r0 = r13			  ## app_core.c:234:9
 1e0cdfc:    83 00             	call r3			  ## app_core.c:234:9
 1e0cdfe:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:235:20
 1e0ce02:    6a 18             	goto 212 <__start_app+0x190 : 1e0ced8 >			  ## app_core.c:235:20
 1e0ce04:    c5 ff f4 09 00 00 	r5 = 2548 <system_data_end : 9f4 >
 1e0ce0a:    c7 ff b4 09 00 00 	r7 = 2484 <system_data_start : 9b4 >
 1e0ce10:    ac 06             	r12 = -22
 1e0ce12:    57 f2 61 20       	if (r7 >= r5) goto 194 <__start_app+0x190 : 1e0ced8 >
 1e0ce16:    06 f6 00 90       	r6 = [r9 + 0]
 1e0ce1a:    06 2c             	if (r6 == 0) goto 12 <__start_app+0xE0 : 1e0ce28 >			  ## app_core.c:181:13
 1e0ce1c:    30 4e             	r0 = [r7 + 12]			  ## app_core.c:182:28
 1e0ce1e:    61 08             	r1 = r6			  ## app_core.c:182:18
 1e0ce20:    97 f3 68 d0       	call 3121360 <strcmp : 106ef4 >			  ## app_core.c:182:18
 1e0ce24:    05 30             	if (r0 != 0) goto 10 <__start_app+0xE8 : 1e0ce30 >			  ## app_core.c:182:18
 1e0ce26:    0a 18             	goto 20 <__start_app+0xF4 : 1e0ce3c >			  ## app_core.c:182:18
 1e0ce28:    10 4e             	r0 = [r7 + 4]			  ## app_core.c:186:20
 1e0ce2a:    50 b9             	r0 &= r4			  ## app_core.c:186:27
 1e0ce2c:    00 d3             	r0 = r0 >> 12			  ## app_core.c:186:17
 1e0ce2e:    06 30             	if (r0 != 0) goto 12 <__start_app+0xF4 : 1e0ce3c >			  ## app_core.c:186:17
 1e0ce30:    07 82             	r7 += 32			  ## app_core.c:180:5
 1e0ce32:    57 f2 f2 3f       	if (r7 < r5) goto -28 <__start_app+0xD2 : 1e0ce1a >
 1e0ce36:    50 18             	goto 160 <__start_app+0x190 : 1e0ced8 >
 1e0ce38:    ac 06             	r12 = -22
 1e0ce3a:    4e 18             	goto 156 <__start_app+0x190 : 1e0ced8 >
 1e0ce3c:    7d f2 44 00       	if (r13 == r7) goto 136 <__start_app+0x180 : 1e0cec8 >
 1e0ce40:    0d e0 c7 0f       	if (r13 == 0) goto -114 <__start_app+0x8A : 1e0cdd2 >
 1e0ce44:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:250:24
 1e0ce48:    03 40             	r3 = [r0 + 0]			  ## app_core.c:250:29
 1e0ce4a:    21 70             	r1 = 2			  ## app_core.c:250:19
 1e0ce4c:    24 70             	r4 = 2			  ## app_core.c:250:19
 1e0ce4e:    d0 08             	r0 = r13			  ## app_core.c:250:19
 1e0ce50:    92 08             	r2 = r9			  ## app_core.c:250:19
 1e0ce52:    83 00             	call r3			  ## app_core.c:250:19
 1e0ce54:    0c 08             	r12 = r0			  ## app_core.c:250:19
 1e0ce56:    40 30             	if (r0 != 0) goto 128 <__start_app+0x190 : 1e0ced8 >
 1e0ce58:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:255:24
 1e0ce5c:    ba 1f             	goto -140 <__start_app+0x8A : 1e0cdd2 >			  ## app_core.c:255:24
 1e0ce5e:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:267:20
 1e0ce60:    03 40             	r3 = [r0 + 0]			  ## app_core.c:267:25
 1e0ce62:    31 70             	r1 = 3			  ## app_core.c:267:15
 1e0ce64:    02 70             	r2 = 0			  ## app_core.c:267:15
 1e0ce66:    70 08             	r0 = r7			  ## app_core.c:267:15
 1e0ce68:    83 00             	call r3			  ## app_core.c:267:15
 1e0ce6a:    0c 08             	r12 = r0			  ## app_core.c:267:15
 1e0ce6c:    10 70             	r0 = 1			  ## app_core.c:268:20
 1e0ce6e:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:268:20
 1e0ce70:    0c e0 0c 10       	if (r12 != 0) goto 24 <__start_app+0x144 : 1e0ce8c >
 1e0ce74:    00 f6 04 90       	r0 = [r9 + 4]			  ## app_core.c:273:17
 1e0ce78:    b0 f2 15 00       	if (r0 == r11) goto 42 <__start_app+0x15E : 1e0cea6 >			  ## app_core.c:273:17
 1e0ce7c:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:276:24
 1e0ce7e:    03 40             	r3 = [r0 + 0]			  ## app_core.c:276:29
 1e0ce80:    11 70             	r1 = 1			  ## app_core.c:276:19
 1e0ce82:    70 08             	r0 = r7			  ## app_core.c:276:19
 1e0ce84:    92 08             	r2 = r9			  ## app_core.c:276:19
 1e0ce86:    83 00             	call r3			  ## app_core.c:276:19
 1e0ce88:    0c 08             	r12 = r0			  ## app_core.c:276:19
 1e0ce8a:    0d 20             	if (r0 == 0) goto 26 <__start_app+0x15E : 1e0cea6 >
 1e0ce8c:    0d e0 24 00       	if (r13 == 0) goto 72 <__start_app+0x190 : 1e0ced8 >
 1e0ce90:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:282:18
 1e0ce94:    03 40             	r3 = [r0 + 0]			  ## app_core.c:282:23
 1e0ce96:    31 70             	r1 = 3			  ## app_core.c:282:13
 1e0ce98:    02 70             	r2 = 0			  ## app_core.c:282:13
 1e0ce9a:    d0 08             	r0 = r13			  ## app_core.c:282:13
 1e0ce9c:    83 00             	call r3			  ## app_core.c:282:13
 1e0ce9e:    10 70             	r0 = 1			  ## app_core.c:283:24
 1e0cea0:    10 f9 00 d0       	b[r13 + 0] = r0			  ## app_core.c:283:24
 1e0cea4:    19 18             	goto 50 <__start_app+0x190 : 1e0ced8 >			  ## app_core.c:283:24
 1e0cea6:    10 70             	r0 = 1			  ## app_core.c:288:16
 1e0cea8:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:288:16
 1e0ceaa:    40 4e             	r0 = [r7 + 16]			  ## list.h:171:36
 1e0ceac:    51 4e             	r1 = [r7 + 20]			  ## list.h:171:23
 1e0ceae:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0ceb0:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0ceb2:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:219:33
 1e0ceb6:    01 9f             	r1 = r7 + 16			  ## app_core.c:290:20
 1e0ceb8:    19 40             	[r0 + 4] = r1			  ## list.h:137:16
 1e0ceba:    48 4e             	[r7 + 16] = r0			  ## list.h:138:16
 1e0cebc:    1a f6 14 70       	[r7 + 20] = r10			  ## list.h:139:16
 1e0cec0:    11 f6 00 a0       	[r10 + 0] = r1			  ## list.h:140:16
 1e0cec4:    0c 70             	r12 = 0			  ## list.h:140:16
 1e0cec6:    08 18             	goto 16 <__start_app+0x190 : 1e0ced8 >
 1e0cec8:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:246:24
 1e0cecc:    03 40             	r3 = [r0 + 0]			  ## app_core.c:246:29
 1e0cece:    11 70             	r1 = 1			  ## app_core.c:246:19
 1e0ced0:    d0 08             	r0 = r13			  ## app_core.c:246:19
 1e0ced2:    92 08             	r2 = r9			  ## app_core.c:246:19
 1e0ced4:    83 00             	call r3			  ## app_core.c:246:19
 1e0ced6:    0c 08             	r12 = r0			  ## app_core.c:246:19
 1e0ced8:    80 08             	r0 = r8			  ## app_core.c:295:5
 1e0ceda:    97 f3 a5 cf       	call 3120970 <os_mutex_post : 106e28 >			  ## app_core.c:295:5
 1e0cede:    c0 08             	r0 = r12			  ## app_core.c:297:5
 1e0cee0:    5d 01             	{pc, r13-r4} = [sp++]			  ## app_core.c:297:5


start_app:
 1e0cee2:    76 01             	[--sp] = {rets, r6-r4}			  ## app_core.c:301:0
 1e0cee4:    f4 0b             	sp += -24			  ## app_core.c:301:0
 1e0cee6:    06 08             	r6 = r0			  ## app_core.c:301:0
 1e0cee8:    20 07             	r0 = -14			  ## app_core.c:302:9
 1e0ceea:    58 02             	[sp+20] = r0			  ## app_core.c:302:9
 1e0ceec:    8f f3 88 b1       	call 2056976 <report_data_code_begin : 3200 >			  ## app_core.c:307:17
 1e0cef0:    c4 ff 37 f1 e0 01 	r4 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >			  ## app_core.c:307:17
 1e0cef6:    41 08             	r1 = r4			  ## app_core.c:307:10
 1e0cef8:    97 f3 fc cf       	call 3121144 <strcmp : 106ef4 >			  ## app_core.c:307:10
 1e0cefc:    3b 20             	if (r0 == 0) goto 118 <start_app+0x92 : 1e0cf74 >			  ## app_core.c:307:10
 1e0cefe:    00 75             	r0 = 80			  ## app_core.c:311:19
 1e0cf00:    bf f3 4e f5       	call -5476 <malloc : 1e0b9a0 >			  ## app_core.c:311:19
 1e0cf04:    05 08             	r5 = r0			  ## app_core.c:311:19
 1e0cf06:    02 3a             	if (r5 != 0) goto 4 <start_app+0x2A : 1e0cf0c >			  ## app_core.c:311:19
 1e0cf08:    8f f3 85 b2       	call 2057482 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0cf0c:    01 70             	r1 = 0			  ## app_core.c:313:5
 1e0cf0e:    50 08             	r0 = r5			  ## app_core.c:313:5
 1e0cf10:    97 f3 76 cf       	call 3120876 <os_sem_create : 106e00 >			  ## app_core.c:313:5
 1e0cf14:    00 72             	r0 = 32			  ## app_core.c:315:12
 1e0cf16:    08 02             	[sp] = r0			  ## app_core.c:315:12
 1e0cf18:    1e 02             	[sp+4] = r6			  ## app_core.c:316:12
 1e0cf1a:    2d 02             	[sp+8] = r5			  ## app_core.c:317:12
 1e0cf1c:    40 a1             	r0 = sp + 20			  ## app_core.c:317:12
 1e0cf1e:    38 02             	[sp+12] = r0			  ## app_core.c:318:12
 1e0cf20:    c6 ff 4c 21 00 00 	r6 = 8524 <start_app.app_msg_type : 214c >			  ## app_core.c:318:12
 1e0cf26:    03 18             	goto 6 <start_app+0x4C : 1e0cf2e >			  ## app_core.c:318:12
 1e0cf28:    10 70             	r0 = 1			  ## app_core.c:323:13
 1e0cf2a:    97 f3 45 cf       	call 3120778 <os_time_dly : 106db8 >			  ## app_core.c:323:13
 1e0cf2e:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:321:55
 1e0cf30:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:321:53
 1e0cf34:    03 a0             	r3 = sp + 0			  ## app_core.c:321:53
 1e0cf36:    42 70             	r2 = 4			  ## app_core.c:321:15
 1e0cf38:    40 08             	r0 = r4			  ## app_core.c:321:15
 1e0cf3a:    97 f3 51 cf       	call 3120802 <os_taskq_post_type : 106de0 >			  ## app_core.c:321:15
 1e0cf3e:    50 e1 f3 0f       	if (r0 == 21) goto -26 <start_app+0x46 : 1e0cf28 >			  ## app_core.c:322:13
 1e0cf42:    14 30             	if (r0 != 0) goto 40 <start_app+0x8A : 1e0cf6c >
 1e0cf44:    81 7c             	r1 = 200			  ## app_core.c:331:23
 1e0cf46:    50 08             	r0 = r5			  ## app_core.c:331:23
 1e0cf48:    97 f3 5e cf       	call 3120828 <os_sem_pend : 106e08 >			  ## app_core.c:331:23
 1e0cf4c:    0c 20             	if (r0 == 0) goto 24 <start_app+0x84 : 1e0cf66 >
 1e0cf4e:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:335:66
 1e0cf50:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:335:64
 1e0cf54:    40 08             	r0 = r4			  ## app_core.c:335:27
 1e0cf56:    97 f3 51 cf       	call 3120802 <os_taskq_del_type : 106dfc >			  ## app_core.c:335:27
 1e0cf5a:    05 20             	if (r0 == 0) goto 10 <start_app+0x84 : 1e0cf66 >
 1e0cf5c:    01 70             	r1 = 0			  ## app_core.c:337:31
 1e0cf5e:    50 08             	r0 = r5			  ## app_core.c:337:31
 1e0cf60:    97 f3 52 cf       	call 3120804 <os_sem_pend : 106e08 >			  ## app_core.c:337:31
 1e0cf64:    ef 31             	if (r0 != 0) goto -34 <start_app+0x62 : 1e0cf44 >
 1e0cf66:    50 08             	r0 = r5			  ## app_core.c:341:13
 1e0cf68:    bf f3 1f f5       	call -5570 <free : 1e0b9aa >			  ## app_core.c:341:13
 1e0cf6c:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:346:17
 1e0cf6e:    10 80             	r0 += 1			  ## app_core.c:346:17
 1e0cf70:    08 5c             	h[r6 + 0] = r0			  ## app_core.c:346:17
 1e0cf72:    02 18             	goto 4 <start_app+0x96 : 1e0cf78 >			  ## app_core.c:346:17
 1e0cf74:    60 08             	r0 = r6			  ## app_core.c:308:16
 1e0cf76:    e8 16             	call -560 <__start_app : 1e0cd48 >			  ## app_core.c:308:16
 1e0cf78:    0c 0a             	sp += 24
 1e0cf7a:    56 01             	{pc, r6-r4} = [sp++]


app_core_msg_handler:
 1e0cf7c:    74 01             	[--sp] = {rets, r4}			  ## app_core.c:94:0
 1e0cf7e:    04 08             	r4 = r0			  ## app_core.c:94:0
 1e0cf80:    10 48             	r0 = [r4 + 4]			  ## app_core.c:95:9
 1e0cf82:    00 e2 07 10       	if (r0 != 32) goto 14 <app_core_msg_handler+0x18 : 1e0cf94 >			  ## app_core.c:95:9
 1e0cf86:    20 48             	r0 = [r4 + 8]			  ## app_core.c:96:55
 1e0cf88:    df 16             	call -578 <__start_app : 1e0cd48 >			  ## app_core.c:96:26
 1e0cf8a:    41 48             	r1 = [r4 + 16]			  ## app_core.c:96:17
 1e0cf8c:    08 42             	[r1 + 0] = r0			  ## app_core.c:96:24
 1e0cf8e:    30 48             	r0 = [r4 + 12]			  ## app_core.c:97:31
 1e0cf90:    97 f3 3c cf       	call 3120760 <os_sem_post : 106e0c >			  ## app_core.c:97:9
 1e0cf94:    54 01             	{pc, r4} = [sp++]			  ## app_core.c:119:1


syscfg_write:
 1e0cf96:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:161:0
 1e0cf98:    28 08             	r8 = r2			  ## syscfg_api.c:161:0
 1e0cf9a:    19 08             	r9 = r1			  ## syscfg_api.c:161:0
 1e0cf9c:    06 08             	r6 = r0			  ## syscfg_api.c:161:0
 1e0cf9e:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:166:44
 1e0cfa2:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:166:44
 1e0cfa4:    c4 ff 68 e8 e0 01 	r4 = 31516776 <cfg_vm : 1e0e868 >			  ## syscfg_api.c:166:44
 1e0cfaa:    10 e3 0d 30       	if (r0 < 49) goto 26 <syscfg_write+0x32 : 1e0cfc8 >			  ## syscfg_api.c:166:44
 1e0cfae:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:169:53
 1e0cfb2:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:169:53
 1e0cfb4:    20 e3 08 30       	if (r0 < 50) goto 16 <syscfg_write+0x32 : 1e0cfc8 >			  ## syscfg_api.c:169:53
 1e0cfb8:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:172:54
 1e0cfbc:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:172:54
 1e0cfbe:    d0 eb 0d 20       	if (r0 >= 189) goto 26 <syscfg_write+0x46 : 1e0cfdc >			  ## syscfg_api.c:172:54
 1e0cfc2:    c4 ff 84 e8 e0 01 	r4 = 31516804 <cfg_bin : 1e0e884 >
 1e0cfc8:    33 48             	r3 = [r4 + 12]			  ## syscfg_api.c:59:14
 1e0cfca:    06 26             	if (r3 == 0) goto 12 <syscfg_write+0x42 : 1e0cfd8 >			  ## syscfg_api.c:59:14
 1e0cfcc:    60 08             	r0 = r6			  ## syscfg_api.c:60:15
 1e0cfce:    91 08             	r1 = r9			  ## syscfg_api.c:60:15
 1e0cfd0:    82 08             	r2 = r8			  ## syscfg_api.c:60:15
 1e0cfd2:    83 00             	call r3			  ## syscfg_api.c:60:15
 1e0cfd4:    07 08             	r7 = r0			  ## syscfg_api.c:60:15
 1e0cfd6:    14 18             	goto 40 <syscfg_write+0x6A : 1e0d000 >
 1e0cfd8:    07 70             	r7 = 0
 1e0cfda:    12 18             	goto 36 <syscfg_write+0x6A : 1e0d000 >
 1e0cfdc:    c5 ff a0 e8 e0 01 	r5 = 31516832 <syscfg_ops_end : 1e0e8a0 >
 1e0cfe2:    c4 ff 4c e8 e0 01 	r4 = 31516748 <syscfg_ops_begin : 1e0e84c >
 1e0cfe8:    07 70             	r7 = 0
 1e0cfea:    54 f2 09 20       	if (r4 >= r5) goto 18 <syscfg_write+0x6A : 1e0d000 >
 1e0cfee:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:177:20
 1e0cff0:    04 22             	if (r1 == 0) goto 8 <syscfg_write+0x64 : 1e0cffa >			  ## syscfg_api.c:177:20
 1e0cff2:    60 08             	r0 = r6			  ## syscfg_api.c:178:21
 1e0cff4:    81 00             	call r1			  ## syscfg_api.c:178:21
 1e0cff6:    10 e0 e7 0f       	if (r0 == 1) goto -50 <syscfg_write+0x32 : 1e0cfc8 >			  ## syscfg_api.c:178:21
 1e0cffa:    c4 81             	r4 += 28			  ## syscfg_api.c:176:9
 1e0cffc:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_write+0x58 : 1e0cfee >
 1e0d000:    70 08             	r0 = r7			  ## syscfg_api.c:186:5
 1e0d002:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:186:5


syscfg_tools_init:
 1e0d004:    75 01             	[--sp] = {rets, r5, r4}			  ## syscfg_api.c:253:0
 1e0d006:    c4 ff a0 e8 e0 01 	r4 = 31516832 <syscfg_ops_end : 1e0e8a0 >			  ## syscfg_api.c:253:0
 1e0d00c:    c5 ff 4c e8 e0 01 	r5 = 31516748 <syscfg_ops_begin : 1e0e84c >			  ## syscfg_api.c:253:0
 1e0d012:    45 f2 06 20       	if (r5 >= r4) goto 12 <syscfg_tools_init+0x1E : 1e0d022 >			  ## syscfg_api.c:253:0
 1e0d016:    40 f6 1c 50       	r0 = [r5 ++= 28]			  ## syscfg_api.c:261:16
 1e0d01a:    01 20             	if (r0 == 0) goto 2 <syscfg_tools_init+0x1A : 1e0d01e >
 1e0d01c:    80 00             	call r0			  ## syscfg_api.c:262:13
 1e0d01e:    45 f2 fa 3f       	if (r5 < r4) goto -12 <syscfg_tools_init+0x12 : 1e0d016 >
 1e0d022:    00 70             	r0 = 0			  ## syscfg_api.c:266:5
 1e0d024:    55 01             	{pc, r5, r4} = [sp++]			  ## syscfg_api.c:266:5


__syscfg_read:
 1e0d026:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:38:0
 1e0d028:    05 08             	r5 = r0			  ## syscfg_api.c:38:0
 1e0d02a:    16 4a             	r6 = [r5 + 4]			  ## syscfg_api.c:42:14
 1e0d02c:    38 08             	r8 = r3			  ## syscfg_api.c:42:14
 1e0d02e:    29 08             	r9 = r2
 1e0d030:    17 08             	r7 = r1
 1e0d032:    04 70             	r4 = 0
 1e0d034:    0b 2c             	if (r6 == 0) goto 22 <__syscfg_read+0x26 : 1e0d04c >
 1e0d036:    70 08             	r0 = r7			  ## syscfg_api.c:43:13
 1e0d038:    86 00             	call r6			  ## syscfg_api.c:43:13
 1e0d03a:    10 e0 07 10       	if (r0 != 1) goto 14 <__syscfg_read+0x26 : 1e0d04c >			  ## syscfg_api.c:43:13
 1e0d03e:    23 4a             	r3 = [r5 + 8]			  ## syscfg_api.c:44:22
 1e0d040:    05 26             	if (r3 == 0) goto 10 <__syscfg_read+0x26 : 1e0d04c >			  ## syscfg_api.c:44:22
 1e0d042:    70 08             	r0 = r7			  ## syscfg_api.c:45:23
 1e0d044:    91 08             	r1 = r9			  ## syscfg_api.c:45:23
 1e0d046:    82 08             	r2 = r8			  ## syscfg_api.c:45:23
 1e0d048:    83 00             	call r3			  ## syscfg_api.c:45:23
 1e0d04a:    04 08             	r4 = r0			  ## syscfg_api.c:45:23
 1e0d04c:    40 08             	r0 = r4			  ## syscfg_api.c:50:5
 1e0d04e:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:50:5


syscfg_read:
 1e0d050:    7a 01             	[--sp] = {rets, r10-r4}			  ## syscfg_api.c:114:0
 1e0d052:    2a 08             	r10 = r2			  ## syscfg_api.c:114:0
 1e0d054:    18 08             	r8 = r1			  ## syscfg_api.c:114:0
 1e0d056:    06 08             	r6 = r0			  ## syscfg_api.c:114:0
 1e0d058:    66 e6 28 10       	if (r6 != 102) goto 80 <syscfg_read+0x5C : 1e0d0ac >			  ## syscfg_api.c:114:0
 1e0d05c:    04 70             	r4 = 0			  ## syscfg_api.c:114:0
 1e0d05e:    62 e0 5a 30       	if (r2 < 6) goto 180 <syscfg_read+0xC6 : 1e0d116 >			  ## syscfg_api.c:114:0
 1e0d062:    00 70             	r0 = 0			  ## syscfg_api.c:114:0
 1e0d064:    c7 ff 00 08 00 00 	r7 = 2048 <report_mmu_tlb_size : 800 >			  ## syscfg_api.c:114:0
 1e0d06a:    01 70             	r1 = 0			  ## syscfg_api.c:114:0
 1e0d06c:    c2 b1             	r2 = r0 + r7			  ## syscfg_api.c:89:13
 1e0d06e:    03 f9 20 20       	r3 = b[r2 + 32] (u)			  ## syscfg_api.c:89:13
 1e0d072:    12 70             	r2 = 1			  ## syscfg_api.c:89:13
 1e0d074:    01 26             	if (r3 == 0) goto 2 <syscfg_read+0x28 : 1e0d078 >			  ## syscfg_api.c:89:13
 1e0d076:    02 70             	r2 = 0			  ## syscfg_api.c:89:36
 1e0d078:    10 80             	r0 += 1			  ## syscfg_api.c:88:54
 1e0d07a:    21 09             	r1 += r2			  ## syscfg_api.c:89:13
 1e0d07c:    60 e0 f6 1f       	if (r0 != 6) goto -20 <syscfg_read+0x1C : 1e0d06c >			  ## syscfg_api.c:89:13
 1e0d080:    40 04             	r0 = r1.b0 (u)			  ## syscfg_api.c:94:18
 1e0d082:    60 e0 13 00       	if (r0 == 6) goto 38 <syscfg_read+0x5C : 1e0d0ac >			  ## syscfg_api.c:94:18
 1e0d086:    79 fc 20 00       	r9 = r7 + 32			  ## syscfg_api.c:98:19
 1e0d08a:    61 70             	r1 = 6			  ## syscfg_api.c:98:19
 1e0d08c:    64 70             	r4 = 6			  ## syscfg_api.c:98:19
 1e0d08e:    90 08             	r0 = r9			  ## syscfg_api.c:98:19
 1e0d090:    bf f3 34 9f       	call -49560 <CRC16 : 1e00efc >			  ## syscfg_api.c:98:19
 1e0d094:    31 5f             	r1 = h[r7 + 38] (u)			  ## syscfg_api.c:100:19
 1e0d096:    30 fb 00 11       	r1 = rev8(r1)			  ## syscfg_api.c:101:20
 1e0d09a:    09 d4             	r1 = r1 >> 16			  ## syscfg_api.c:101:20
 1e0d09c:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_read+0x5C : 1e0d0ac >			  ## syscfg_api.c:101:20
 1e0d0a0:    62 70             	r2 = 6			  ## syscfg_api.c:102:9
 1e0d0a2:    80 08             	r0 = r8			  ## syscfg_api.c:102:9
 1e0d0a4:    91 08             	r1 = r9			  ## syscfg_api.c:102:9
 1e0d0a6:    97 f3 1d cf       	call 3120698 <memcpy : 106ee4 >			  ## syscfg_api.c:102:9
 1e0d0aa:    35 18             	goto 106 <syscfg_read+0xC6 : 1e0d116 >
 1e0d0ac:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:131:44
 1e0d0b0:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:131:44
 1e0d0b2:    c7 ff 68 e8 e0 01 	r7 = 31516776 <cfg_vm : 1e0e868 >			  ## syscfg_api.c:131:44
 1e0d0b8:    10 e3 27 30       	if (r0 < 49) goto 78 <syscfg_read+0xBA : 1e0d10a >			  ## syscfg_api.c:131:44
 1e0d0bc:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:134:53
 1e0d0c0:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:134:53
 1e0d0c2:    20 e3 22 30       	if (r0 < 50) goto 68 <syscfg_read+0xBA : 1e0d10a >			  ## syscfg_api.c:134:53
 1e0d0c6:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:137:54
 1e0d0ca:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:137:54
 1e0d0cc:    c7 ff 84 e8 e0 01 	r7 = 31516804 <cfg_bin : 1e0e884 >			  ## syscfg_api.c:137:54
 1e0d0d2:    d0 eb 1a 30       	if (r0 < 189) goto 52 <syscfg_read+0xBA : 1e0d10a >			  ## syscfg_api.c:137:54
 1e0d0d6:    c5 ff a0 e8 e0 01 	r5 = 31516832 <syscfg_ops_end : 1e0e8a0 >
 1e0d0dc:    c4 ff 4c e8 e0 01 	r4 = 31516748 <syscfg_ops_begin : 1e0e84c >
 1e0d0e2:    54 f2 12 20       	if (r4 >= r5) goto 36 <syscfg_read+0xBA : 1e0d10a >
 1e0d0e6:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:142:20
 1e0d0e8:    04 22             	if (r1 == 0) goto 8 <syscfg_read+0xA2 : 1e0d0f2 >			  ## syscfg_api.c:142:20
 1e0d0ea:    60 08             	r0 = r6			  ## syscfg_api.c:143:21
 1e0d0ec:    81 00             	call r1			  ## syscfg_api.c:143:21
 1e0d0ee:    10 e0 04 00       	if (r0 == 1) goto 8 <syscfg_read+0xAA : 1e0d0fa >			  ## syscfg_api.c:143:21
 1e0d0f2:    c4 81             	r4 += 28			  ## syscfg_api.c:141:9
 1e0d0f4:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_read+0x96 : 1e0d0e6 >
 1e0d0f8:    08 18             	goto 16 <syscfg_read+0xBA : 1e0d10a >
 1e0d0fa:    40 08             	r0 = r4			  ## syscfg_api.c:144:27
 1e0d0fc:    61 08             	r1 = r6			  ## syscfg_api.c:144:27
 1e0d0fe:    82 08             	r2 = r8			  ## syscfg_api.c:144:27
 1e0d100:    a3 08             	r3 = r10			  ## syscfg_api.c:144:27
 1e0d102:    91 17             	call -222 <__syscfg_read : 1e0d026 >			  ## syscfg_api.c:144:27
 1e0d104:    04 08             	r4 = r0			  ## syscfg_api.c:144:27
 1e0d106:    04 e0 06 c0       	ifs (r4 > 0) goto 12 <syscfg_read+0xC6 : 1e0d116 >
 1e0d10a:    70 08             	r0 = r7			  ## syscfg_api.c:136:15
 1e0d10c:    61 08             	r1 = r6			  ## syscfg_api.c:136:15
 1e0d10e:    82 08             	r2 = r8			  ## syscfg_api.c:136:15
 1e0d110:    a3 08             	r3 = r10			  ## syscfg_api.c:136:15
 1e0d112:    89 17             	call -238 <__syscfg_read : 1e0d026 >			  ## syscfg_api.c:136:15
 1e0d114:    04 08             	r4 = r0			  ## syscfg_api.c:136:15
 1e0d116:    40 08             	r0 = r4			  ## syscfg_api.c:156:1
 1e0d118:    5a 01             	{pc, r10-r4} = [sp++]			  ## syscfg_api.c:156:1


syscfg_file_open:
 1e0d11a:    34 00             	[--sp] = rets			  ## cfg_bin.c:68:0
 1e0d11c:    c1 ff e9 f0 e0 01 	r1 = 31518953 <bluetooth_base_uuid+0xDF : 1e0f0e9 >			  ## cfg_bin.c:70:10
 1e0d122:    80 f3 83 05       	call 2822 <fopen : 1e0dc2c >			  ## cfg_bin.c:70:10
 1e0d126:    30 00             	pc = [sp++]			  ## cfg_bin.c:75:5


syscfg_file_init:
 1e0d128:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:87:0
 1e0d12a:    f0 0b             	sp += -32			  ## cfg_bin.c:87:0
 1e0d12c:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:87:0
 1e0d12e:    01 70             	r1 = 0			  ## cfg_bin.c:90:21
 1e0d130:    02 72             	r2 = 32			  ## cfg_bin.c:90:21
 1e0d132:    07 70             	r7 = 0			  ## cfg_bin.c:90:21
 1e0d134:    97 f3 dc ce       	call 3120568 <memset : 106ef0 >			  ## cfg_bin.c:90:21
 1e0d138:    c0 ff 40 f1 e0 01 	r0 = 31519040 <bluetooth_base_uuid+0x136 : 1e0f140 >			  ## cfg_bin.c:92:10
 1e0d13e:    ed 17             	call -38 <syscfg_file_open : 1e0d11a >			  ## cfg_bin.c:92:10
 1e0d140:    05 08             	r5 = r0			  ## cfg_bin.c:92:10
 1e0d142:    04 fb 00 ff       	r4 = -256 <bank_code_load_addr+0x1E54DC : 1ffff00 >
 1e0d146:    4f 2a             	if (r5 == 0) goto 158 <syscfg_file_init+0xBE : 1e0d1e6 >
 1e0d148:    01 a0             	r1 = sp + 0
 1e0d14a:    80 f3 8a 06       	call 3348 <fget_attrs : 1e0de62 >			  ## cfg_bin.c:98:5
 1e0d14e:    c6 ff b0 22 00 00 	r6 = 8880 <bin_cfg : 22b0 >
 1e0d154:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:101:47
 1e0d156:    11 70             	r1 = 1			  ## cfg_bin.c:100:31
 1e0d158:    12 02             	r2 = [sp+4]			  ## cfg_bin.c:102:46
 1e0d15a:    09 6c             	b[r6 + 0] = r1			  ## cfg_bin.c:100:31
 1e0d15c:    40 80             	r0 += 4			  ## cfg_bin.c:101:54
 1e0d15e:    18 4c             	[r6 + 4] = r0			  ## cfg_bin.c:101:35
 1e0d160:    20 fc fc ff       	r0 = r2 + -4			  ## cfg_bin.c:102:52
 1e0d164:    28 4c             	[r6 + 8] = r0			  ## cfg_bin.c:102:34
 1e0d166:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e0d168:    80 f3 3b 06       	call 3190 <fclose : 1e0dde2 >			  ## cfg_bin.c:81:9
 1e0d16c:    cf 6c             	b[r6 + 12] = r7			  ## cfg_bin.c:106:30
 1e0d16e:    c0 ff 5c f1 e0 01 	r0 = 31519068 <bluetooth_base_uuid+0x152 : 1e0f15c >			  ## cfg_bin.c:108:10
 1e0d174:    d2 17             	call -92 <syscfg_file_open : 1e0d11a >			  ## cfg_bin.c:108:10
 1e0d176:    05 08             	r5 = r0			  ## cfg_bin.c:108:10
 1e0d178:    36 2a             	if (r5 == 0) goto 108 <syscfg_file_init+0xBE : 1e0d1e6 >
 1e0d17a:    01 a0             	r1 = sp + 0
 1e0d17c:    80 f3 71 06       	call 3298 <fget_attrs : 1e0de62 >			  ## cfg_bin.c:113:5
 1e0d180:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e0d182:    80 f3 2e 06       	call 3164 <fclose : 1e0dde2 >			  ## cfg_bin.c:81:9
 1e0d186:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:117:46
 1e0d188:    00 fc 00 02       	r0 = r0 + 512			  ## cfg_bin.c:117:46
 1e0d18c:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:117:34
 1e0d18e:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_bin.c:119:5
 1e0d190:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_bin.c:119:5
 1e0d192:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_bin.c:119:5
 1e0d194:    05 60             	r5 = b[r0 + 0] (u)			  ## cfg_bin.c:119:5
 1e0d196:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:119:5
 1e0d19a:    c8 fd 40 53       	r5 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:119:5
 1e0d19e:    d0 fd 80 52       	r5 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:119:5
 1e0d1a2:    51 fc ff ff       	r1 = r5 + -1			  ## cfg_bin.c:121:49
 1e0d1a6:    04 70             	r4 = 0			  ## cfg_bin.c:121:49
 1e0d1a8:    08 ff ff 17 1c 00 	if (r1 > 2047) goto 56 <syscfg_file_init+0xBE : 1e0d1e6 >			  ## cfg_bin.c:121:49
 1e0d1ae:    71 60             	r1 = b[r0 + 7] (u)			  ## cfg_bin.c:127:5
 1e0d1b0:    62 60             	r2 = b[r0 + 6] (u)			  ## cfg_bin.c:127:5
 1e0d1b2:    53 60             	r3 = b[r0 + 5] (u)			  ## cfg_bin.c:127:5
 1e0d1b4:    47 60             	r7 = b[r0 + 4] (u)			  ## cfg_bin.c:127:5
 1e0d1b6:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:127:5
 1e0d1ba:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:127:5
 1e0d1be:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:127:5
 1e0d1c2:    39 d5             	r1 = r7 >> 20			  ## cfg_bin.c:128:9
 1e0d1c4:    08 ff 20 13 0e 00 	if (r1 > 800) goto 28 <syscfg_file_init+0xBE : 1e0d1e6 >			  ## cfg_bin.c:128:9
 1e0d1ca:    40 80             	r0 += 4			  ## cfg_bin.c:126:11
 1e0d1cc:    40 80             	r0 += 4			  ## cfg_bin.c:131:26
 1e0d1ce:    bf f3 95 9e       	call -49878 <CRC16 : 1e00efc >			  ## cfg_bin.c:131:26
 1e0d1d2:    00 04             	r0 = r0.b0 (u)			  ## cfg_bin.c:132:9
 1e0d1d4:    c1 05             	r1 = r7.b0 (u)			  ## cfg_bin.c:132:32
 1e0d1d6:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_file_init+0xBE : 1e0d1e6 >			  ## cfg_bin.c:132:32
 1e0d1da:    10 70             	r0 = 1			  ## cfg_bin.c:133:34
 1e0d1dc:    c8 6c             	b[r6 + 12] = r0			  ## cfg_bin.c:133:34
 1e0d1de:    40 4c             	r0 = [r6 + 16]			  ## cfg_bin.c:134:38
 1e0d1e0:    40 80             	r0 += 4			  ## cfg_bin.c:134:38
 1e0d1e2:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:134:38
 1e0d1e4:    5d 4c             	[r6 + 20] = r5			  ## cfg_bin.c:135:37
 1e0d1e6:    40 08             	r0 = r4			  ## cfg_bin.c:141:1
 1e0d1e8:    10 0a             	sp += 32			  ## cfg_bin.c:141:1
 1e0d1ea:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:141:1


syscfg_bin_check_id:
 1e0d1ec:    10 70             	r0 = 1			  ## cfg_bin.c:351:0
 1e0d1ee:    20 00             	rts			  ## cfg_bin.c:352:5


__syscfg_bin_item_read:
 1e0d1f0:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:199:0
 1e0d1f2:    24 08             	r4 = r2			  ## cfg_bin.c:199:0
 1e0d1f4:    01 09             	r1 += r0			  ## cfg_bin.c:202:42
 1e0d1f6:    32 60             	r2 = b[r0 + 3] (u)			  ## cfg_bin.c:207:9
 1e0d1f8:    23 60             	r3 = b[r0 + 2] (u)			  ## cfg_bin.c:207:9
 1e0d1fa:    15 60             	r5 = b[r0 + 1] (u)			  ## cfg_bin.c:207:9
 1e0d1fc:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_bin.c:207:9
 1e0d1fe:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## cfg_bin.c:207:9
 1e0d202:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## cfg_bin.c:207:9
 1e0d206:    d0 fd 80 73       	r7 <= insert(r3, p:16, l:16)			  ## cfg_bin.c:207:9
 1e0d20a:    3d d5             	r5 = r7 >> 20			  ## cfg_bin.c:208:23
 1e0d20c:    08 ff 20 53 0c 00 	if (r5 > 800) goto 24 <__syscfg_bin_item_read+0x3A : 1e0d22a >			  ## cfg_bin.c:208:23
 1e0d212:    02 58             	r2 = h[r4 + 0] (u)			  ## cfg_bin.c:212:24
 1e0d214:    8c fd 40 37       	r3 = uextra(r7, p:8, l:12)			  ## cfg_bin.c:211:19
 1e0d218:    23 f2 0a 00       	if (r3 == r2) goto 20 <__syscfg_bin_item_read+0x40 : 1e0d230 >			  ## cfg_bin.c:211:19
 1e0d21c:    50 09             	r0 += r5			  ## cfg_bin.c:222:36
 1e0d21e:    40 80             	r0 += 4			  ## cfg_bin.c:222:19
 1e0d220:    10 f2 e9 3f       	if (r0 < r1) goto -46 <__syscfg_bin_item_read+0x6 : 1e0d1f6 >
 1e0d224:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E54E1 : 1ffff05 >
 1e0d228:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0d22a:    00 fb 07 ff       	r0 = -249 <bank_code_load_addr+0x1E54E3 : 1ffff07 >
 1e0d22e:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0d230:    46 90             	r6 = r0 + 4			  ## cfg_bin.c:213:25
 1e0d232:    60 08             	r0 = r6			  ## cfg_bin.c:213:25
 1e0d234:    51 08             	r1 = r5			  ## cfg_bin.c:213:25
 1e0d236:    bf f3 61 9e       	call -49982 <CRC16 : 1e00efc >			  ## cfg_bin.c:213:25
 1e0d23a:    01 04             	r1 = r0.b0 (u)			  ## cfg_bin.c:214:17
 1e0d23c:    c2 05             	r2 = r7.b0 (u)			  ## cfg_bin.c:214:40
 1e0d23e:    00 fb 03 ff       	r0 = -253 <bank_code_load_addr+0x1E54DF : 1ffff03 >			  ## cfg_bin.c:214:40
 1e0d242:    21 f2 04 10       	if (r1 != r2) goto 8 <__syscfg_bin_item_read+0x5E : 1e0d24e >			  ## cfg_bin.c:214:40
 1e0d246:    1d 58             	h[r4 + 2] = r5			  ## cfg_bin.c:215:32
 1e0d248:    1e 48             	[r4 + 4] = r6			  ## cfg_bin.c:216:33
 1e0d24a:    00 70             	r0 = 0			  ## cfg_bin.c:216:33
 1e0d24c:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0d24e:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1


__syscfg_bin_read:
 1e0d250:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:230:0
 1e0d252:    c5 ff b0 22 00 00 	r5 = 8880 <bin_cfg : 22b0 >			  ## cfg_bin.c:230:0
 1e0d258:    c1 6a             	r1 = b[r5 + 12] (u)			  ## cfg_bin.c:233:28
 1e0d25a:    04 08             	r4 = r0			  ## cfg_bin.c:233:28
 1e0d25c:    11 e0 05 10       	if (r1 != 1) goto 10 <__syscfg_bin_read+0x1A : 1e0d26a >
 1e0d260:    51 4a             	r1 = [r5 + 20]
 1e0d262:    40 4a             	r0 = [r5 + 16]
 1e0d264:    42 08             	r2 = r4			  ## cfg_bin.c:234:15
 1e0d266:    c4 17             	call -120 <__syscfg_bin_item_read : 1e0d1f0 >			  ## cfg_bin.c:234:15
 1e0d268:    05 20             	if (r0 == 0) goto 10 <__syscfg_bin_read+0x24 : 1e0d274 >
 1e0d26a:    21 4a             	r1 = [r5 + 8]
 1e0d26c:    10 4a             	r0 = [r5 + 4]
 1e0d26e:    42 08             	r2 = r4			  ## cfg_bin.c:240:11
 1e0d270:    bf 17             	call -130 <__syscfg_bin_item_read : 1e0d1f0 >			  ## cfg_bin.c:240:11
 1e0d272:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1
 1e0d274:    00 70             	r0 = 0
 1e0d276:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1


___syscfg_bin_group_read:
 1e0d278:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:246:0
 1e0d27a:    fc 0b             	sp += -8			  ## cfg_bin.c:246:0
 1e0d27c:    c7 ff 04 f0 e0 01 	r7 = 31518724 <group_item_table : 1e0f004 >			  ## cfg_bin.c:246:0
 1e0d282:    36 08             	r6 = r3			  ## cfg_bin.c:246:0
 1e0d284:    25 08             	r5 = r2			  ## cfg_bin.c:246:0
 1e0d286:    14 08             	r4 = r1			  ## cfg_bin.c:246:0
 1e0d288:    01 08             	r1 = r0			  ## cfg_bin.c:246:0
 1e0d28a:    72 08             	r2 = r7			  ## cfg_bin.c:162:13
 1e0d28c:    51 e6 01 00       	if (r1 == 101) goto 2 <___syscfg_bin_group_read+0x1A : 1e0d292 >			  ## cfg_bin.c:162:13
 1e0d290:    02 70             	r2 = 0			  ## cfg_bin.c:162:13
 1e0d292:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E54E1 : 1ffff05 >
 1e0d296:    51 e6 0e 10       	if (r1 != 101) goto 28 <___syscfg_bin_group_read+0x3E : 1e0d2b6 >
 1e0d29a:    41 64             	r1 = b[r2 + 4] (u)			  ## cfg_bin.c:257:19
 1e0d29c:    10 80             	r0 += 1
 1e0d29e:    61 f2 0a 90       	if (r1 <= r6) goto 20 <___syscfg_bin_group_read+0x3E : 1e0d2b6 >
 1e0d2a2:    11 54             	r1 = h[r2 + 2] (u)			  ## cfg_bin.c:261:18
 1e0d2a4:    c0 8f             	r0 += -4			  ## cfg_bin.c:261:18
 1e0d2a6:    51 f2 06 80       	if (r1 > r5) goto 12 <___syscfg_bin_group_read+0x3E : 1e0d2b6 >			  ## cfg_bin.c:261:18
 1e0d2aa:    50 76             	r0 = 101			  ## cfg_bin.c:266:18
 1e0d2ac:    90 f5 00 00       	h[sp] = r0			  ## cfg_bin.c:266:18
 1e0d2b0:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:266:18
 1e0d2b2:    ce 17             	call -100 <__syscfg_bin_read : 1e0d250 >			  ## cfg_bin.c:268:11
 1e0d2b4:    02 20             	if (r0 == 0) goto 4 <___syscfg_bin_group_read+0x42 : 1e0d2ba >
 1e0d2b6:    04 0a             	sp += 8
 1e0d2b8:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:287:1
 1e0d2ba:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_bin.c:181:46
 1e0d2be:    50 e6 01 00       	if (r0 == 101) goto 2 <___syscfg_bin_group_read+0x4C : 1e0d2c4 >
 1e0d2c2:    07 70             	r7 = 0
 1e0d2c4:    17 5e             	r7 = h[r7 + 2] (u)			  ## cfg_bin.c:183:29
 1e0d2c6:    11 02             	r1 = [sp+4]			  ## cfg_bin.c:176:28
 1e0d2c8:    10 9e             	r0 = r7 + 1			  ## cfg_bin.c:183:38
 1e0d2ca:    20 04             	r0 = r0.l (u)			  ## cfg_bin.c:185:21
 1e0d2cc:    80 fe 60 10       	r1 += r0 * r6			  ## cfg_bin.c:185:11
 1e0d2d0:    80 f9 01 10       	r0 = b[r1 ++= 1] (u)			  ## cfg_bin.c:187:5
 1e0d2d4:    0c 20             	if (r0 == 0) goto 24 <___syscfg_bin_group_read+0x76 : 1e0d2ee >
 1e0d2d6:    97 f5 02 00       	h[sp+2] = r7			  ## cfg_bin.c:190:24
 1e0d2da:    19 02             	[sp+4] = r1			  ## cfg_bin.c:191:25
 1e0d2dc:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E54DE : 1ffff02 >
 1e0d2e0:    57 f2 e9 8f       	if (r7 > r5) goto -46 <___syscfg_bin_group_read+0x3E : 1e0d2b6 >
 1e0d2e4:    70 02             	r0 = [sp+28]
 1e0d2e6:    10 e0 05 10       	if (r0 != 1) goto 10 <___syscfg_bin_group_read+0x7C : 1e0d2f4 >			  ## cfg_bin.c:275:17
 1e0d2ea:    09 48             	[r4 + 0] = r1			  ## cfg_bin.c:276:33
 1e0d2ec:    07 18             	goto 14 <___syscfg_bin_group_read+0x84 : 1e0d2fc >			  ## cfg_bin.c:276:33
 1e0d2ee:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E54E1 : 1ffff05 >
 1e0d2f2:    e1 1f             	goto -62 <___syscfg_bin_group_read+0x3E : 1e0d2b6 >
 1e0d2f4:    40 08             	r0 = r4			  ## cfg_bin.c:278:17
 1e0d2f6:    72 08             	r2 = r7			  ## cfg_bin.c:278:17
 1e0d2f8:    97 f3 f4 cd       	call 3120104 <memcpy : 106ee4 >			  ## cfg_bin.c:278:17
 1e0d2fc:    70 08             	r0 = r7
 1e0d2fe:    db 1f             	goto -74 <___syscfg_bin_group_read+0x3E : 1e0d2b6 >


syscfg_bin_read:
 1e0d300:    76 01             	[--sp] = {rets, r6-r4}			  ## cfg_bin.c:295:0
 1e0d302:    fa 0b             	sp += -12			  ## cfg_bin.c:295:0
 1e0d304:    25 08             	r5 = r2			  ## cfg_bin.c:295:0
 1e0d306:    14 08             	r4 = r1			  ## cfg_bin.c:295:0
 1e0d308:    50 e6 07 10       	if (r0 != 101) goto 14 <syscfg_bin_read+0x1A : 1e0d31a >			  ## cfg_bin.c:301:9
 1e0d30c:    01 70             	r1 = 0			  ## cfg_bin.c:291:12
 1e0d30e:    50 76             	r0 = 101			  ## cfg_bin.c:291:12
 1e0d310:    03 70             	r3 = 0			  ## cfg_bin.c:291:12
 1e0d312:    09 02             	[sp] = r1			  ## cfg_bin.c:291:12
 1e0d314:    41 08             	r1 = r4			  ## cfg_bin.c:291:12
 1e0d316:    b0 17             	call -160 <___syscfg_bin_group_read : 1e0d278 >			  ## cfg_bin.c:291:12
 1e0d318:    11 18             	goto 34 <syscfg_bin_read+0x3C : 1e0d33c >			  ## cfg_bin.c:291:12
 1e0d31a:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:306:18
 1e0d31e:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:306:18
 1e0d320:    97 17             	call -210 <__syscfg_bin_read : 1e0d250 >			  ## cfg_bin.c:307:11
 1e0d322:    0c 30             	if (r0 != 0) goto 24 <syscfg_bin_read+0x3C : 1e0d33c >
 1e0d324:    86 f5 06 00       	r6 = h[sp+6] (u)			  ## cfg_bin.c:310:30
 1e0d328:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E54DE : 1ffff02 >			  ## cfg_bin.c:310:30
 1e0d32c:    56 f2 06 80       	if (r6 > r5) goto 12 <syscfg_bin_read+0x3C : 1e0d33c >
 1e0d330:    21 02             	r1 = [sp+8]			  ## cfg_bin.c:311:13
 1e0d332:    40 08             	r0 = r4			  ## cfg_bin.c:311:13
 1e0d334:    62 08             	r2 = r6			  ## cfg_bin.c:311:13
 1e0d336:    97 f3 d5 cd       	call 3120042 <memcpy : 106ee4 >			  ## cfg_bin.c:311:13
 1e0d33a:    60 08             	r0 = r6			  ## cfg_bin.c:311:13
 1e0d33c:    06 0a             	sp += 12
 1e0d33e:    56 01             	{pc, r6-r4} = [sp++]			  ## cfg_bin.c:319:1


syscfg_bin_group_read:
 1e0d340:    74 01             	[--sp] = {rets, r4}			  ## cfg_bin.c:290:0
 1e0d342:    fe 0b             	sp += -4			  ## cfg_bin.c:290:0
 1e0d344:    04 70             	r4 = 0			  ## cfg_bin.c:291:12
 1e0d346:    0c 02             	[sp] = r4			  ## cfg_bin.c:291:12
 1e0d348:    97 17             	call -210 <___syscfg_bin_group_read : 1e0d278 >			  ## cfg_bin.c:291:12
 1e0d34a:    02 0a             	sp += 4
 1e0d34c:    54 01             	{pc, r4} = [sp++]			  ## cfg_bin.c:291:5


syscfg_bin_ptr_read:
 1e0d34e:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:322:0
 1e0d350:    f8 0b             	sp += -16			  ## cfg_bin.c:322:0
 1e0d352:    14 08             	r4 = r1			  ## cfg_bin.c:322:0
 1e0d354:    05 70             	r5 = 0			  ## cfg_bin.c:322:0
 1e0d356:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:323:9
 1e0d358:    0d 58             	h[r4 + 0] = r5			  ## cfg_bin.c:325:10
 1e0d35a:    50 e6 0e 10       	if (r0 != 101) goto 28 <syscfg_bin_ptr_read+0x2C : 1e0d37a >			  ## cfg_bin.c:330:9
 1e0d35e:    15 70             	r5 = 1
 1e0d360:    c1 a0             	r1 = sp + 12
 1e0d362:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## cfg_bin.c:331:15
 1e0d368:    50 76             	r0 = 101			  ## cfg_bin.c:331:15
 1e0d36a:    03 70             	r3 = 0			  ## cfg_bin.c:331:15
 1e0d36c:    0d 02             	[sp] = r5			  ## cfg_bin.c:331:15
 1e0d36e:    84 17             	call -248 <___syscfg_bin_group_read : 1e0d278 >			  ## cfg_bin.c:331:15
 1e0d370:    10 e0 01 b0       	ifs (r0 < 1) goto 2 <syscfg_bin_ptr_read+0x28 : 1e0d376 >
 1e0d374:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:333:18
 1e0d376:    35 02             	r5 = [sp+12]			  ## cfg_bin.c:335:16
 1e0d378:    0a 18             	goto 20 <syscfg_bin_ptr_read+0x40 : 1e0d38e >
 1e0d37a:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:339:18
 1e0d37e:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:339:18
 1e0d380:    67 17             	call -306 <__syscfg_bin_read : 1e0d250 >			  ## cfg_bin.c:340:11
 1e0d382:    05 30             	if (r0 != 0) goto 10 <syscfg_bin_ptr_read+0x40 : 1e0d38e >
 1e0d384:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## cfg_bin.c:343:26
 1e0d388:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:343:14
 1e0d38a:    25 02             	r5 = [sp+8]			  ## cfg_bin.c:344:31
 1e0d38c:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:344:13
 1e0d38e:    50 08             	r0 = r5			  ## cfg_bin.c:348:1
 1e0d390:    08 0a             	sp += 16			  ## cfg_bin.c:348:1
 1e0d392:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:348:1


syscfg_file_close:
 1e0d394:    34 00             	[--sp] = rets			  ## cfg_bin.c:79:0
 1e0d396:    02 20             	if (r0 == 0) goto 4 <syscfg_file_close+0x8 : 1e0d39c >			  ## cfg_bin.c:79:0
 1e0d398:    80 f3 23 05       	call 2630 <fclose : 1e0dde2 >			  ## cfg_bin.c:81:9
 1e0d39c:    30 00             	pc = [sp++]			  ## cfg_bin.c:83:1


btif_cfg_get_info:
 1e0d39e:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_btif.c:69:0
 1e0d3a0:    02 50             	r2 = h[r0 + 0] (u)			  ## cfg_btif.c:69:0
 1e0d3a2:    c3 ff 2e eb e0 01 	r3 = 31517486 <btif_table+0x4 : 1e0eb2e >			  ## cfg_btif.c:69:0
 1e0d3a8:    01 70             	r1 = 0			  ## cfg_btif.c:69:0
 1e0d3aa:    64 76             	r4 = 102			  ## cfg_btif.c:69:0
 1e0d3ac:    05 f7 fe 3f       	r5 = h[r3 + -2] (u)			  ## cfg_btif.c:69:0
 1e0d3b0:    24 f2 07 00       	if (r4 == r2) goto 14 <btif_cfg_get_info+0x24 : 1e0d3c2 >			  ## cfg_btif.c:69:0
 1e0d3b4:    84 f7 04 30       	r4 = h[r3 ++= 4] (u)			  ## cfg_btif.c:74:5
 1e0d3b8:    51 09             	r1 += r5			  ## cfg_btif.c:80:35
 1e0d3ba:    41 80             	r1 += 4			  ## cfg_btif.c:80:20
 1e0d3bc:    f7 39             	if (r4 != 0) goto -18 <btif_cfg_get_info+0xE : 1e0d3ac >
 1e0d3be:    00 70             	r0 = 0
 1e0d3c0:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1
 1e0d3c2:    1d 50             	h[r0 + 2] = r5			  ## cfg_btif.c:76:23
 1e0d3c4:    19 40             	[r0 + 4] = r1			  ## cfg_btif.c:77:24
 1e0d3c6:    10 70             	r0 = 1			  ## cfg_btif.c:77:24
 1e0d3c8:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1


__btif_item_read:
 1e0d3ca:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_btif.c:102:0
 1e0d3cc:    04 08             	r4 = r0			  ## cfg_btif.c:102:0
 1e0d3ce:    e7 17             	call -50 <btif_cfg_get_info : 1e0d39e >			  ## cfg_btif.c:103:9
 1e0d3d0:    23 20             	if (r0 == 0) goto 70 <__btif_item_read+0x4E : 1e0d418 >			  ## cfg_btif.c:103:9
 1e0d3d2:    10 48             	r0 = [r4 + 4]			  ## cfg_btif.c:109:28
 1e0d3d4:    c1 ff c8 22 00 00 	r1 = 8904 <btif_cfg : 22c8 >			  ## cfg_btif.c:109:43
 1e0d3da:    01 42             	r1 = [r1 + 0]			  ## cfg_btif.c:109:43
 1e0d3dc:    10 09             	r0 += r1			  ## cfg_btif.c:109:33
 1e0d3de:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_btif.c:113:5
 1e0d3e0:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_btif.c:113:5
 1e0d3e2:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_btif.c:113:5
 1e0d3e4:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_btif.c:113:5
 1e0d3e6:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_btif.c:113:5
 1e0d3ea:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_btif.c:113:5
 1e0d3ee:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_btif.c:113:5
 1e0d3f2:    f7 ef 14 00       	if (r7 == -1) goto 40 <__btif_item_read+0x54 : 1e0d41e >			  ## cfg_btif.c:113:5
 1e0d3f6:    12 58             	r2 = h[r4 + 2] (u)			  ## cfg_btif.c:120:9
 1e0d3f8:    39 d5             	r1 = r7 >> 20			  ## cfg_btif.c:119:30
 1e0d3fa:    05 fb 0d ff       	r5 = -243 <bank_code_load_addr+0x1E54E9 : 1ffff0d >			  ## cfg_btif.c:119:30
 1e0d3fe:    12 f2 10 10       	if (r2 != r1) goto 32 <__btif_item_read+0x58 : 1e0d422 >			  ## cfg_btif.c:119:30
 1e0d402:    46 90             	r6 = r0 + 4			  ## cfg_btif.c:124:26
 1e0d404:    60 08             	r0 = r6			  ## cfg_btif.c:124:26
 1e0d406:    bf f3 79 9d       	call -50446 <CRC16 : 1e00efc >			  ## cfg_btif.c:124:26
 1e0d40a:    00 04             	r0 = r0.b0 (u)			  ## cfg_btif.c:126:9
 1e0d40c:    c1 05             	r1 = r7.b0 (u)			  ## cfg_btif.c:126:32
 1e0d40e:    10 f2 08 10       	if (r0 != r1) goto 16 <__btif_item_read+0x58 : 1e0d422 >			  ## cfg_btif.c:126:32
 1e0d412:    1e 48             	[r4 + 4] = r6			  ## cfg_btif.c:127:25
 1e0d414:    05 70             	r5 = 0
 1e0d416:    05 18             	goto 10 <__btif_item_read+0x58 : 1e0d422 >
 1e0d418:    05 fb 0b ff       	r5 = -245 <bank_code_load_addr+0x1E54E7 : 1ffff0b >
 1e0d41c:    02 18             	goto 4 <__btif_item_read+0x58 : 1e0d422 >
 1e0d41e:    05 fb 08 ff       	r5 = -248 <bank_code_load_addr+0x1E54E4 : 1ffff08 >
 1e0d422:    50 08             	r0 = r5			  ## cfg_btif.c:132:1
 1e0d424:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_btif.c:132:1


syscfg_btif_init:
 1e0d426:    79 01             	[--sp] = {rets, r9-r4}			  ## cfg_btif.c:334:0
 1e0d428:    ec 0b             	sp += -40			  ## cfg_btif.c:334:0
 1e0d42a:    c8 ff c8 22 00 00 	r8 = 8904 <btif_cfg : 22c8 >			  ## cfg_btif.c:334:0
 1e0d430:    80 fc 04 00       	r0 = r8 + 4			  ## cfg_btif.c:336:5
 1e0d434:    97 f3 f2 cc       	call 3119588 <os_mutex_create : 106e1c >			  ## cfg_btif.c:336:5
 1e0d438:    c0 ff 5c f1 e0 01 	r0 = 31519068 <bluetooth_base_uuid+0x152 : 1e0f15c >			  ## cfg_btif.c:320:21
 1e0d43e:    6d 16             	call -806 <syscfg_file_open : 1e0d11a >			  ## cfg_btif.c:320:21
 1e0d440:    04 08             	r4 = r0			  ## cfg_btif.c:320:21
 1e0d442:    39 28             	if (r4 == 0) goto 114 <syscfg_btif_init+0x90 : 1e0d4b6 >
 1e0d444:    05 a0             	r5 = sp + 0
 1e0d446:    01 70             	r1 = 0			  ## cfg_btif.c:325:21
 1e0d448:    02 72             	r2 = 32			  ## cfg_btif.c:325:21
 1e0d44a:    50 08             	r0 = r5			  ## cfg_btif.c:325:21
 1e0d44c:    97 f3 50 cd       	call 3119776 <memset : 106ef0 >			  ## cfg_btif.c:325:21
 1e0d450:    40 08             	r0 = r4			  ## cfg_btif.c:326:5
 1e0d452:    51 08             	r1 = r5			  ## cfg_btif.c:326:5
 1e0d454:    80 f3 05 05       	call 2570 <fget_attrs : 1e0de62 >			  ## cfg_btif.c:326:5
 1e0d458:    20 02             	r0 = [sp+8]			  ## cfg_btif.c:327:30
 1e0d45a:    10 f6 00 80       	[r8 + 0] = r0			  ## cfg_btif.c:327:18
 1e0d45e:    40 08             	r0 = r4			  ## cfg_btif.c:328:5
 1e0d460:    99 17             	call -206 <syscfg_file_close : 1e0d394 >			  ## cfg_btif.c:328:5
 1e0d462:    c7 ff 2e eb e0 01 	r7 = 31517486 <btif_table+0x4 : 1e0eb2e >			  ## cfg_btif.c:328:5
 1e0d468:    60 76             	r0 = 102			  ## cfg_btif.c:328:5
 1e0d46a:    c9 ff 00 08 00 00 	r9 = 2048 <report_mmu_tlb_size : 800 >			  ## cfg_btif.c:328:5
 1e0d470:    90 f5 20 00       	h[sp+32] = r0			  ## cfg_btif.c:254:22
 1e0d474:    00 a2             	r0 = sp + 32			  ## cfg_btif.c:254:22
 1e0d476:    a9 17             	call -174 <__btif_item_read : 1e0d3ca >			  ## cfg_btif.c:255:15
 1e0d478:    00 ff 08 0f 17 00 	if (r0 == -248) goto 46 <syscfg_btif_init+0x86 : 1e0d4ac >
 1e0d47e:    16 20             	if (r0 == 0) goto 44 <syscfg_btif_init+0x86 : 1e0d4ac >
 1e0d480:    00 f6 00 80       	r0 = [r8 + 0]			  ## cfg_btif.c:205:53
 1e0d484:    80 f3 08 05       	call 2576 <sdfile_cpu_addr2flash_addr : 1e0de98 >			  ## cfg_btif.c:205:18
 1e0d488:    06 f9 00 90       	r6 = b[r9 + 0] (u)			  ## cfg_btif.c:210:22
 1e0d48c:    05 08             	r5 = r0			  ## cfg_btif.c:205:18
 1e0d48e:    c4 7c             	r4 = 204			  ## cfg_btif.c:210:9
 1e0d490:    16 e0 01 00       	if (r6 == 1) goto 2 <syscfg_btif_init+0x70 : 1e0d496 >
 1e0d494:    84 7c             	r4 = 200			  ## cfg_btif.c:210:9
 1e0d496:    40 08             	r0 = r4			  ## cfg_btif.c:214:5
 1e0d498:    51 08             	r1 = r5			  ## cfg_btif.c:214:5
 1e0d49a:    bf f3 84 9d       	call -50424 <norflash_ioctl : 1e00fa6 >			  ## cfg_btif.c:214:5
 1e0d49e:    16 e0 05 10       	if (r6 != 1) goto 10 <syscfg_btif_init+0x86 : 1e0d4ac >			  ## cfg_btif.c:214:5
 1e0d4a2:    51 fc 00 01       	r1 = r5 + 256			  ## cfg_btif.c:216:52
 1e0d4a6:    40 08             	r0 = r4			  ## cfg_btif.c:216:9
 1e0d4a8:    bf f3 7d 9d       	call -50438 <norflash_ioctl : 1e00fa6 >			  ## cfg_btif.c:216:9
 1e0d4ac:    80 f7 04 70       	r0 = h[r7 ++= 4] (u)			  ## cfg_btif.c:253:5
 1e0d4b0:    df 31             	if (r0 != 0) goto -66 <syscfg_btif_init+0x4A : 1e0d470 >			  ## cfg_btif.c:253:5
 1e0d4b2:    00 70             	r0 = 0
 1e0d4b4:    02 18             	goto 4 <syscfg_btif_init+0x94 : 1e0d4ba >
 1e0d4b6:    00 fb 0a ff       	r0 = -246 <bank_code_load_addr+0x1E54E6 : 1ffff0a >
 1e0d4ba:    14 0a             	sp += 40
 1e0d4bc:    59 01             	{pc, r9-r4} = [sp++]			  ## cfg_btif.c:342:5


btif_eara_check_id:
 1e0d4be:    c1 ff 2e eb e0 01 	r1 = 31517486 <btif_table+0x4 : 1e0eb2e >			  ## cfg_btif.c:232:0
 1e0d4c4:    62 76             	r2 = 102			  ## cfg_btif.c:232:0
 1e0d4c6:    02 f2 05 00       	if (r2 == r0) goto 10 <btif_eara_check_id+0x16 : 1e0d4d4 >			  ## cfg_btif.c:232:0
 1e0d4ca:    82 f7 04 10       	r2 = h[r1 ++= 4] (u)			  ## cfg_btif.c:235:5
 1e0d4ce:    fb 35             	if (r2 != 0) goto -10 <btif_eara_check_id+0x8 : 1e0d4c6 >			  ## cfg_btif.c:235:5
 1e0d4d0:    00 70             	r0 = 0
 1e0d4d2:    20 00             	rts			  ## cfg_btif.c:242:5
 1e0d4d4:    10 70             	r0 = 1
 1e0d4d6:    20 00             	rts			  ## cfg_btif.c:242:5


btif_area_read:
 1e0d4d8:    78 01             	[--sp] = {rets, r8-r4}			  ## cfg_btif.c:269:0
 1e0d4da:    fc 0b             	sp += -8			  ## cfg_btif.c:269:0
 1e0d4dc:    26 08             	r6 = r2			  ## cfg_btif.c:269:0
 1e0d4de:    18 08             	r8 = r1			  ## cfg_btif.c:269:0
 1e0d4e0:    01 70             	r1 = 0			  ## cfg_btif.c:269:0
 1e0d4e2:    19 02             	[sp+4] = r1			  ## cfg_btif.c:271:25
 1e0d4e4:    09 02             	[sp] = r1			  ## cfg_btif.c:271:25
 1e0d4e6:    90 f5 00 00       	h[sp] = r0			  ## cfg_btif.c:273:18
 1e0d4ea:    c4 ff cc 22 00 00 	r4 = 8908 <btif_cfg+0x4 : 22cc >			  ## cfg_btif.c:273:18
 1e0d4f0:    f1 07             	r1 = -1			  ## cfg_btif.c:275:5
 1e0d4f2:    40 08             	r0 = r4			  ## cfg_btif.c:275:5
 1e0d4f4:    97 f3 96 cc       	call 3119404 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:275:5
 1e0d4f8:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:275:5
 1e0d4fa:    67 17             	call -306 <__btif_item_read : 1e0d3ca >			  ## cfg_btif.c:277:11
 1e0d4fc:    07 08             	r7 = r0			  ## cfg_btif.c:277:11
 1e0d4fe:    0c 3e             	if (r7 != 0) goto 24 <btif_area_read+0x40 : 1e0d518 >
 1e0d500:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:280:29
 1e0d504:    07 fb 0f ff       	r7 = -241 <bank_code_load_addr+0x1E54EB : 1ffff0f >			  ## cfg_btif.c:280:29
 1e0d508:    65 f2 06 80       	if (r5 > r6) goto 12 <btif_area_read+0x40 : 1e0d518 >
 1e0d50c:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:283:13
 1e0d50e:    80 08             	r0 = r8			  ## cfg_btif.c:283:13
 1e0d510:    52 08             	r2 = r5			  ## cfg_btif.c:283:13
 1e0d512:    97 f3 e7 cc       	call 3119566 <memcpy : 106ee4 >			  ## cfg_btif.c:283:13
 1e0d516:    57 08             	r7 = r5			  ## cfg_btif.c:283:13
 1e0d518:    40 08             	r0 = r4			  ## cfg_btif.c:288:5
 1e0d51a:    97 f3 85 cc       	call 3119370 <os_mutex_post : 106e28 >			  ## cfg_btif.c:288:5
 1e0d51e:    70 08             	r0 = r7			  ## cfg_btif.c:290:5
 1e0d520:    04 0a             	sp += 8			  ## cfg_btif.c:290:5
 1e0d522:    58 01             	{pc, r8-r4} = [sp++]			  ## cfg_btif.c:290:5


btif_area_write:
 1e0d524:    7e 01             	[--sp] = {rets, r14-r4}			  ## cfg_btif.c:295:0
 1e0d526:    fc 0b             	sp += -8			  ## cfg_btif.c:295:0
 1e0d528:    24 08             	r4 = r2			  ## cfg_btif.c:295:0
 1e0d52a:    19 08             	r9 = r1			  ## cfg_btif.c:295:0
 1e0d52c:    05 08             	r5 = r0			  ## cfg_btif.c:295:0
 1e0d52e:    c8 ff cc 22 00 00 	r8 = 8908 <btif_cfg+0x4 : 22cc >			  ## cfg_btif.c:295:0
 1e0d534:    f1 07             	r1 = -1			  ## cfg_btif.c:301:5
 1e0d536:    80 08             	r0 = r8			  ## cfg_btif.c:301:5
 1e0d538:    97 f3 74 cc       	call 3119336 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:301:5
 1e0d53c:    95 f5 00 00       	h[sp] = r5			  ## cfg_btif.c:303:18
 1e0d540:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:303:18
 1e0d542:    43 17             	call -378 <__btif_item_read : 1e0d3ca >			  ## cfg_btif.c:304:11
 1e0d544:    01 ff 08 0f 50 00 	if (r0 != -248) goto 160 <btif_area_write+0xC6 : 1e0d5ea >
 1e0d54a:    00 a0             	r0 = sp + 0
 1e0d54c:    28 17             	call -432 <btif_cfg_get_info : 1e0d39e >			  ## cfg_btif.c:146:5
 1e0d54e:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:147:16
 1e0d552:    57 08             	r7 = r5			  ## cfg_btif.c:149:17
 1e0d554:    54 f2 01 80       	if (r4 > r5) goto 2 <btif_area_write+0x36 : 1e0d55a >			  ## cfg_btif.c:149:17
 1e0d558:    47 08             	r7 = r4			  ## cfg_btif.c:149:17
 1e0d55a:    4b 9a             	r11 = r5 + 4			  ## cfg_btif.c:151:37
 1e0d55c:    b0 08             	r0 = r11			  ## cfg_btif.c:152:16
 1e0d55e:    bf f3 1f f2       	call -7106 <malloc : 1e0b9a0 >			  ## cfg_btif.c:152:16
 1e0d562:    06 08             	r6 = r0			  ## cfg_btif.c:152:16
 1e0d564:    48 2c             	if (r6 == 0) goto 144 <btif_area_write+0xD2 : 1e0d5f6 >
 1e0d566:    c0 ff 5c f1 e0 01 	r0 = 31519068 <bluetooth_base_uuid+0x152 : 1e0f15c >			  ## cfg_btif.c:157:21
 1e0d56c:    d6 15             	call -1108 <syscfg_file_open : 1e0d11a >			  ## cfg_btif.c:157:21
 1e0d56e:    0a 08             	r10 = r0			  ## cfg_btif.c:157:21
 1e0d570:    45 20             	if (r0 == 0) goto 138 <btif_area_write+0xD8 : 1e0d5fc >
 1e0d572:    01 70             	r1 = 0			  ## cfg_btif.c:164:5
 1e0d574:    60 08             	r0 = r6			  ## cfg_btif.c:164:5
 1e0d576:    b2 08             	r2 = r11			  ## cfg_btif.c:164:5
 1e0d578:    97 f3 ba cc       	call 3119476 <memset : 106ef0 >			  ## cfg_btif.c:164:5
 1e0d57c:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_btif.c:167:18
 1e0d580:    00 c2             	r0 = r0 << 8			  ## cfg_btif.c:167:18
 1e0d582:    c1 ff 00 ff 0f 00 	r1 = 1048320 <text_size+0xE73B4 : fff00 >			  ## cfg_btif.c:168:19
 1e0d588:    50 b3             	r0 &= r1			  ## cfg_btif.c:168:19
 1e0d58a:    cc fd a0 05       	r0 <= insert(r5, p:20, l:12)			  ## cfg_btif.c:168:19
 1e0d58e:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:169:5
 1e0d590:    f2 fd c0 c0       	r12 = r0 >> 24			  ## cfg_btif.c:169:5
 1e0d594:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:169:5
 1e0d598:    f2 fd 80 d0       	r13 = r0 >> 16			  ## cfg_btif.c:169:5
 1e0d59c:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:169:5
 1e0d5a0:    f2 fd 40 e0       	r14 = r0 >> 8			  ## cfg_btif.c:169:5
 1e0d5a4:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:169:5
 1e0d5a8:    44 9c             	r4 = r6 + 4			  ## cfg_btif.c:170:21
 1e0d5aa:    40 08             	r0 = r4			  ## cfg_btif.c:170:5
 1e0d5ac:    91 08             	r1 = r9			  ## cfg_btif.c:170:5
 1e0d5ae:    72 08             	r2 = r7			  ## cfg_btif.c:170:5
 1e0d5b0:    97 f3 98 cc       	call 3119408 <memcpy : 106ee4 >			  ## cfg_btif.c:170:5
 1e0d5b4:    31 fd f0 5a       	r1 = r5 & 4294905855			  ## cfg_btif.c:172:21
 1e0d5b8:    40 08             	r0 = r4			  ## cfg_btif.c:172:21
 1e0d5ba:    bf f3 9f 9c       	call -50882 <CRC16 : 1e00efc >			  ## cfg_btif.c:172:21
 1e0d5be:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:174:5
 1e0d5c2:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:174:5
 1e0d5c6:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:174:5
 1e0d5ca:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:174:5
 1e0d5cc:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:176:31
 1e0d5ce:    02 70             	r2 = 0			  ## cfg_btif.c:176:5
 1e0d5d0:    a0 08             	r0 = r10			  ## cfg_btif.c:176:5
 1e0d5d2:    80 f3 c1 03       	call 1922 <fseek : 1e0dd58 >			  ## cfg_btif.c:176:5
 1e0d5d6:    a0 08             	r0 = r10			  ## cfg_btif.c:178:11
 1e0d5d8:    61 08             	r1 = r6			  ## cfg_btif.c:178:11
 1e0d5da:    b2 08             	r2 = r11			  ## cfg_btif.c:178:11
 1e0d5dc:    80 f3 e2 03       	call 1988 <fwrite : 1e0dda4 >			  ## cfg_btif.c:178:11
 1e0d5e0:    b0 f2 0e 00       	if (r0 == r11) goto 28 <btif_area_write+0xDC : 1e0d600 >
 1e0d5e4:    07 fb 0e ff       	r7 = -242 <bank_code_load_addr+0x1E54EA : 1ffff0e >
 1e0d5e8:    0b 18             	goto 22 <btif_area_write+0xDC : 1e0d600 >
 1e0d5ea:    80 08             	r0 = r8			  ## cfg_btif.c:307:9
 1e0d5ec:    97 f3 1c cc       	call 3119160 <os_mutex_post : 106e28 >			  ## cfg_btif.c:307:9
 1e0d5f0:    07 fb 09 ff       	r7 = -247 <bank_code_load_addr+0x1E54E5 : 1ffff09 >			  ## cfg_btif.c:307:9
 1e0d5f4:    0d 18             	goto 26 <btif_area_write+0xEC : 1e0d610 >			  ## cfg_btif.c:307:9
 1e0d5f6:    07 fb 10 ff       	r7 = -240 <bank_code_load_addr+0x1E54EC : 1ffff10 >
 1e0d5fa:    07 18             	goto 14 <btif_area_write+0xE6 : 1e0d60a >
 1e0d5fc:    07 fb 0a ff       	r7 = -246 <bank_code_load_addr+0x1E54E6 : 1ffff0a >
 1e0d600:    60 08             	r0 = r6			  ## cfg_btif.c:188:9
 1e0d602:    bf f3 d2 f1       	call -7260 <free : 1e0b9aa >			  ## cfg_btif.c:188:9
 1e0d606:    a0 08             	r0 = r10			  ## cfg_btif.c:190:5
 1e0d608:    c5 16             	call -630 <syscfg_file_close : 1e0d394 >			  ## cfg_btif.c:190:5
 1e0d60a:    80 08             	r0 = r8			  ## cfg_btif.c:313:5
 1e0d60c:    97 f3 0c cc       	call 3119128 <os_mutex_post : 106e28 >			  ## cfg_btif.c:313:5
 1e0d610:    70 08             	r0 = r7			  ## cfg_btif.c:316:1
 1e0d612:    04 0a             	sp += 8			  ## cfg_btif.c:316:1
 1e0d614:    5e 01             	{pc, r14-r4} = [sp++]			  ## cfg_btif.c:316:1


sdfile_version:
 1e0d616:    20 fb 02 0b       	r0 = 131072			  ## sdfile_new.c:24:0
 1e0d61a:    20 00             	rts			  ## sdfile_new.c:24:1


sdfile_strcase_cmp:
 1e0d61c:    75 01             	[--sp] = {rets, r5, r4}			  ## sdfile_new.c:188:0
 1e0d61e:    ee 0b             	sp += -36			  ## sdfile_new.c:188:0
 1e0d620:    14 08             	r4 = r1			  ## sdfile_new.c:188:0
 1e0d622:    01 08             	r1 = r0			  ## sdfile_new.c:188:0
 1e0d624:    05 70             	r5 = 0			  ## sdfile_new.c:188:0
 1e0d626:    d5 f5 23 00       	b[sp+35] = r5			  ## sdfile_new.c:193:5
 1e0d62a:    30 a1             	r0 = sp + 19			  ## sdfile_new.c:193:5
 1e0d62c:    02 71             	r2 = 16			  ## sdfile_new.c:193:5
 1e0d62e:    97 f3 59 cc       	call 3119282 <memcpy : 106ee4 >			  ## sdfile_new.c:193:5
 1e0d632:    d5 f5 12 00       	b[sp+18] = r5			  ## sdfile_new.c:194:5
 1e0d636:    20 a0             	r0 = sp + 2			  ## sdfile_new.c:194:5
 1e0d638:    02 71             	r2 = 16			  ## sdfile_new.c:194:5
 1e0d63a:    41 08             	r1 = r4			  ## sdfile_new.c:194:5
 1e0d63c:    97 f3 52 cc       	call 3119268 <memcpy : 106ee4 >			  ## sdfile_new.c:194:5
 1e0d640:    30 a1             	r0 = sp + 19
 1e0d642:    00 fa 00 05       	r0 = b[r0+r5] (u)			  ## sdfile_new.c:153:14
 1e0d646:    01 fc 9f ff       	r1 = r0 + -97			  ## sdfile_new.c:153:27
 1e0d64a:    41 04             	r1 = r1.b0 (u)			  ## sdfile_new.c:153:27
 1e0d64c:    91 e1 04 80       	if (r1 > 25) goto 8 <sdfile_strcase_cmp+0x3C : 1e0d658 >			  ## sdfile_new.c:153:27
 1e0d650:    00 8e             	r0 += -32			  ## sdfile_new.c:154:31
 1e0d652:    31 a1             	r1 = sp + 19			  ## sdfile_new.c:154:31
 1e0d654:    10 fa 00 15       	b[r1+r5] = r0			  ## sdfile_new.c:154:18
 1e0d658:    15 80             	r5 += 1			  ## sdfile_new.c:152:5
 1e0d65a:    05 e1 f1 1f       	if (r5 != 16) goto -30 <sdfile_strcase_cmp+0x24 : 1e0d640 >			  ## sdfile_new.c:152:5
 1e0d65e:    00 70             	r0 = 0
 1e0d660:    21 a0             	r1 = sp + 2
 1e0d662:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## sdfile_new.c:153:14
 1e0d666:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:153:27
 1e0d66a:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:153:27
 1e0d66c:    92 e1 04 80       	if (r2 > 25) goto 8 <sdfile_strcase_cmp+0x5C : 1e0d678 >			  ## sdfile_new.c:153:27
 1e0d670:    01 8e             	r1 += -32			  ## sdfile_new.c:154:31
 1e0d672:    22 a0             	r2 = sp + 2			  ## sdfile_new.c:154:31
 1e0d674:    11 fa 00 20       	b[r2+r0] = r1			  ## sdfile_new.c:154:18
 1e0d678:    10 80             	r0 += 1			  ## sdfile_new.c:152:5
 1e0d67a:    00 e1 f1 1f       	if (r0 != 16) goto -30 <sdfile_strcase_cmp+0x44 : 1e0d660 >			  ## sdfile_new.c:152:5
 1e0d67e:    00 70             	r0 = 0
 1e0d680:    01 7f             	r1 = 240
 1e0d682:    32 a1             	r2 = sp + 19
 1e0d684:    23 a0             	r3 = sp + 2
 1e0d686:    84 f9 01 20       	r4 = b[r2 ++= 1] (u)
 1e0d68a:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <sdfile_strcase_cmp+0x80 : 1e0d69c >			  ## sdfile_new.c:165:13
 1e0d690:    05 70             	r5 = 0			  ## sdfile_new.c:166:17
 1e0d692:    e4 e2 01 00       	if (r4 == 46) goto 2 <sdfile_strcase_cmp+0x7C : 1e0d698 >			  ## sdfile_new.c:166:17
 1e0d696:    05 08             	r5 = r0			  ## sdfile_new.c:166:17
 1e0d698:    50 08             	r0 = r5
 1e0d69a:    0c 18             	goto 24 <sdfile_strcase_cmp+0x98 : 1e0d6b4 >
 1e0d69c:    05 66             	r5 = b[r3 + 0] (u)			  ## sdfile_new.c:169:28
 1e0d69e:    54 f2 03 10       	if (r4 != r5) goto 6 <sdfile_strcase_cmp+0x8C : 1e0d6a8 >			  ## sdfile_new.c:169:28
 1e0d6a2:    00 70             	r0 = 0
 1e0d6a4:    07 38             	if (r4 != 0) goto 14 <sdfile_strcase_cmp+0x98 : 1e0d6b4 >
 1e0d6a6:    0c 18             	goto 24 <sdfile_strcase_cmp+0xA4 : 1e0d6c0 >
 1e0d6a8:    00 70             	r0 = 0
 1e0d6aa:    f5 e3 03 00       	if (r5 == 63) goto 6 <sdfile_strcase_cmp+0x98 : 1e0d6b4 >
 1e0d6ae:    a5 e2 09 10       	if (r5 != 42) goto 18 <sdfile_strcase_cmp+0xA8 : 1e0d6c4 >
 1e0d6b2:    10 70             	r0 = 1
 1e0d6b4:    11 80             	r1 += 1			  ## sdfile_new.c:164:5
 1e0d6b6:    13 80             	r3 += 1			  ## sdfile_new.c:181:12
 1e0d6b8:    61 ff ff 19 e4 ff 	if ((r1 & 255) != 0) goto -56 <sdfile_strcase_cmp+0x6A : 1e0d686 >
 1e0d6be:    00 70             	r0 = 0
 1e0d6c0:    12 0a             	sp += 36
 1e0d6c2:    55 01             	{pc, r5, r4} = [sp++]			  ## sdfile_new.c:201:5
 1e0d6c4:    f0 07             	r0 = -1
 1e0d6c6:    fc 1f             	goto -8 <sdfile_strcase_cmp+0xA4 : 1e0d6c0 >


mount:
 1e0d6c8:    7b 01             	[--sp] = {rets, r11-r4}			  ## vfs.c:177:0
 1e0d6ca:    3a 08             	r10 = r3			  ## vfs.c:177:0
 1e0d6cc:    26 08             	r6 = r2			  ## vfs.c:177:0
 1e0d6ce:    18 08             	r8 = r1			  ## vfs.c:177:0
 1e0d6d0:    09 70             	r9 = 0			  ## vfs.c:177:0
 1e0d6d2:    0b 70             	r11 = 0			  ## vfs.c:177:0
 1e0d6d4:    05 20             	if (r0 == 0) goto 10 <mount+0x18 : 1e0d6e0 >			  ## vfs.c:177:0
 1e0d6d6:    91 02             	r1 = [sp+36]			  ## vfs.c:177:0
 1e0d6d8:    80 f3 03 04       	call 2054 <dev_open : 1e0dee2 >			  ## vfs.c:183:14
 1e0d6dc:    0b 08             	r11 = r0			  ## vfs.c:183:14
 1e0d6de:    32 20             	if (r0 == 0) goto 100 <mount+0x7C : 1e0d744 >
 1e0d6e0:    00 7a             	r0 = 160			  ## vfs.c:189:27
 1e0d6e2:    bf f3 57 f8       	call -3922 <zalloc : 1e0c794 >			  ## vfs.c:189:27
 1e0d6e6:    05 08             	r5 = r0			  ## vfs.c:189:27
 1e0d6e8:    40 2a             	if (r5 == 0) goto 128 <mount+0xA2 : 1e0d76a >			  ## vfs.c:189:27
 1e0d6ea:    1b f6 0c 50       	[r5 + 12] = r11			  ## vfs.c:193:16
 1e0d6ee:    14 70             	r4 = 1			  ## vfs.c:193:16
 1e0d6f0:    14 f9 9c 50       	b[r5 + 156] = r4			  ## vfs.c:194:19
 1e0d6f4:    97 f3 52 cb       	call 3118756 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e0d6f8:    08 00             	csync			  ## atomic.h:47:5
 1e0d6fa:    2c 4b             	[r5 + 72] = r4			  ## atomic.h:49:16
 1e0d6fc:    97 f3 4c cb       	call 3118744 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e0d700:    50 fc 4c 00       	r0 = r5 + 76			  ## vfs.c:196:26
 1e0d704:    97 f3 8a cb       	call 3118868 <os_mutex_create : 106e1c >			  ## vfs.c:196:5
 1e0d708:    c7 ff 34 e8 e0 01 	r7 = 31516724 <vfs_ops_end : 1e0e834 >			  ## vfs.c:196:5
 1e0d70e:    c4 ff c0 e7 e0 01 	r4 = 31516608 <vfs_ops_begin : 1e0e7c0 >			  ## vfs.c:196:5
 1e0d714:    74 f2 0d 20       	if (r4 >= r7) goto 26 <mount+0x6A : 1e0d732 >
 1e0d718:    00 48             	r0 = [r4 + 0]			  ## vfs.c:199:26
 1e0d71a:    61 08             	r1 = r6			  ## vfs.c:199:14
 1e0d71c:    97 f3 ea cb       	call 3119060 <strcmp : 106ef4 >			  ## vfs.c:199:14
 1e0d720:    05 30             	if (r0 != 0) goto 10 <mount+0x64 : 1e0d72c >			  ## vfs.c:199:14
 1e0d722:    12 48             	r2 = [r4 + 4]			  ## vfs.c:200:27
 1e0d724:    50 08             	r0 = r5			  ## vfs.c:200:22
 1e0d726:    a1 08             	r1 = r10			  ## vfs.c:200:22
 1e0d728:    82 00             	call r2			  ## vfs.c:200:22
 1e0d72a:    0d 20             	if (r0 == 0) goto 26 <mount+0x7E : 1e0d746 >			  ## vfs.c:200:22
 1e0d72c:    44 87             	r4 += 116			  ## vfs.c:198:5
 1e0d72e:    74 f2 f3 3f       	if (r4 < r7) goto -26 <mount+0x50 : 1e0d718 >
 1e0d732:    0b e0 03 00       	if (r11 == 0) goto 6 <mount+0x74 : 1e0d73c >
 1e0d736:    b0 08             	r0 = r11			  ## vfs.c:212:9
 1e0d738:    80 f3 ff 03       	call 2046 <dev_close : 1e0df3a >			  ## vfs.c:212:9
 1e0d73c:    50 08             	r0 = r5			  ## vfs.c:215:5
 1e0d73e:    bf f3 34 f1       	call -7576 <free : 1e0b9aa >			  ## vfs.c:215:5
 1e0d742:    13 18             	goto 38 <mount+0xA2 : 1e0d76a >			  ## vfs.c:215:5
 1e0d744:    12 18             	goto 36 <mount+0xA2 : 1e0d76a >
 1e0d746:    2c 4a             	[r5 + 8] = r4			  ## vfs.c:201:25
 1e0d748:    18 f6 04 50       	[r5 + 4] = r8			  ## vfs.c:202:26
 1e0d74c:    97 f3 26 cb       	call 3118668 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d750:    c0 ff a4 08 00 00 	r0 = 2212 <head.1197 : 8a4 >			  ## spinlock.h:77:5
 1e0d756:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e0d758:    52 fc 40 00       	r2 = r5 + 64			  ## vfs.c:204:36
 1e0d75c:    1a 40             	[r0 + 4] = r2			  ## list.h:137:16
 1e0d75e:    08 4b             	[r5 + 64] = r0			  ## list.h:138:16
 1e0d760:    19 4b             	[r5 + 68] = r1			  ## list.h:139:16
 1e0d762:    0a 42             	[r1 + 0] = r2			  ## list.h:140:16
 1e0d764:    97 f3 18 cb       	call 3118640 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d768:    59 08             	r9 = r5
 1e0d76a:    90 08             	r0 = r9			  ## vfs.c:218:1
 1e0d76c:    5b 01             	{pc, r11-r4} = [sp++]			  ## vfs.c:218:1


sdfile_init:
 1e0d76e:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:326:0
 1e0d770:    ec 0b             	sp += -40			  ## sdfile_new.c:326:0
 1e0d772:    c7 ff c0 23 00 00 	r7 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:326:0
 1e0d778:    01 70             	r1 = 0			  ## sdfile_new.c:326:0
 1e0d77a:    72 fc d8 01       	r2 = r7 + 472			  ## sdfile_new.c:326:0
 1e0d77e:    c4 ff 00 08 00 00 	r4 = 2048 <report_mmu_tlb_size : 800 >			  ## sdfile_new.c:326:0
 1e0d784:    43 48             	r3 = [r4 + 16]			  ## sdfile_new.c:329:46
 1e0d786:    50 48             	r0 = [r4 + 20]			  ## sdfile_new.c:330:46
 1e0d788:    59 44             	[r2 + 20] = r1			  ## sdfile_new.c:328:5
 1e0d78a:    49 44             	[r2 + 16] = r1			  ## sdfile_new.c:328:5
 1e0d78c:    0b 44             	[r2 + 0] = r3			  ## sdfile_new.c:329:30
 1e0d78e:    18 44             	[r2 + 4] = r0			  ## sdfile_new.c:330:30
 1e0d790:    28 44             	[r2 + 8] = r0			  ## sdfile_new.c:235:27
 1e0d792:    21 40             	r1 = [r0 + 8]			  ## sdfile_new.c:244:58
 1e0d794:    01 09             	r1 += r0			  ## sdfile_new.c:244:46
 1e0d796:    39 44             	[r2 + 12] = r1			  ## sdfile_new.c:244:27
 1e0d798:    71 51             	r1 = h[r0 + 46] (u)			  ## sdfile_new.c:212:16
 1e0d79a:    0e 32             	if (r1 != 0) goto 28 <sdfile_init+0x4A : 1e0d7b8 >			  ## sdfile_new.c:212:16
 1e0d79c:    00 82             	r0 += 32			  ## sdfile_new.c:211:67
 1e0d79e:    06 fc 2e 00       	r6 = r0 + 46			  ## sdfile_new.c:213:40
 1e0d7a2:    c5 ff 1c f2 e0 01 	r5 = 31519260 <bluetooth_base_uuid+0x212 : 1e0f21c >			  ## sdfile_new.c:213:40
 1e0d7a8:    61 fc e2 ff       	r1 = r6 + -30			  ## sdfile_new.c:213:15
 1e0d7ac:    50 08             	r0 = r5			  ## sdfile_new.c:213:15
 1e0d7ae:    36 17             	call -404 <sdfile_strcase_cmp : 1e0d61c >			  ## sdfile_new.c:213:15
 1e0d7b0:    0a 20             	if (r0 == 0) goto 20 <sdfile_init+0x58 : 1e0d7c6 >			  ## sdfile_new.c:214:13
 1e0d7b2:    80 f7 20 60       	r0 = h[r6 ++= 32] (u)			  ## sdfile_new.c:212:16
 1e0d7b6:    f8 21             	if (r0 == 0) goto -16 <sdfile_init+0x3A : 1e0d7a8 >
 1e0d7b8:    8f f3 2d ae       	call 2055258 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0d7bc:    04 fb 04 ff       	r4 = -252 <bank_code_load_addr+0x1E54E0 : 1ffff04 >
 1e0d7c0:    40 08             	r0 = r4			  ## sdfile_new.c:355:1
 1e0d7c2:    14 0a             	sp += 40			  ## sdfile_new.c:355:1
 1e0d7c4:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:355:1
 1e0d7c6:    00 f6 d6 6f       	r0 = [r6 + -42]			  ## sdfile_new.c:215:43
 1e0d7ca:    18 48             	[r4 + 4] = r0			  ## sdfile_new.c:215:35
 1e0d7cc:    00 f6 da 6f       	r0 = [r6 + -38]			  ## sdfile_new.c:216:42
 1e0d7d0:    38 48             	[r4 + 12] = r0			  ## sdfile_new.c:216:34
 1e0d7d2:    00 70             	r0 = 0			  ## sdfile_new.c:340:5
 1e0d7d4:    05 70             	r5 = 0			  ## sdfile_new.c:340:5
 1e0d7d6:    bf f3 1d af       	call -41414 <norflash_open : 1e03614 >			  ## sdfile_new.c:340:5
 1e0d7da:    c0 ff 01 56 04 40 	r0 = 1074025985 <text_size+0x2CAB5 : 45601 >			  ## sdfile_new.c:341:5
 1e0d7e0:    41 08             	r1 = r4			  ## sdfile_new.c:341:5
 1e0d7e2:    bf f3 e0 9b       	call -51264 <norflash_ioctl : 1e00fa6 >			  ## sdfile_new.c:341:5
 1e0d7e6:    9d 02             	[sp+36] = r5			  ## sdfile_new.c:2205:9
 1e0d7e8:    41 a2             	r1 = sp + 36			  ## sdfile_new.c:2205:9
 1e0d7ea:    70 76             	r0 = 103			  ## sdfile_new.c:2206:5
 1e0d7ec:    bf f3 db 9b       	call -51274 <norflash_ioctl : 1e00fa6 >			  ## sdfile_new.c:2206:5
 1e0d7f0:    00 f6 e0 71       	r0 = [r7 + 480]			  ## sdfile_new.c:256:28
 1e0d7f4:    41 a0             	r1 = sp + 4
 1e0d7f6:    06 fd 02 19       	r6 = r1 | 2
 1e0d7fa:    05 08             	r5 = r0
 1e0d7fc:    40 a0             	r0 = sp + 4
 1e0d7fe:    02 72             	r2 = 32			  ## sdfile_new.c:259:9
 1e0d800:    51 08             	r1 = r5			  ## sdfile_new.c:259:9
 1e0d802:    97 f3 6f cb       	call 3118814 <memcpy : 106ee4 >			  ## sdfile_new.c:259:9
 1e0d806:    e1 71             	r1 = 30			  ## sdfile_new.c:261:20
 1e0d808:    60 08             	r0 = r6			  ## sdfile_new.c:261:20
 1e0d80a:    bf f3 77 9b       	call -51474 <CRC16 : 1e00efc >			  ## sdfile_new.c:261:20
 1e0d80e:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## sdfile_new.c:262:34
 1e0d812:    10 f2 1c 10       	if (r0 != r1) goto 56 <sdfile_init+0xE0 : 1e0d84e >			  ## sdfile_new.c:262:34
 1e0d816:    31 02             	r1 = [sp+12]			  ## sdfile_new.c:268:30
 1e0d818:    82 f5 12 00       	r2 = h[sp+18] (u)			  ## sdfile_new.c:269:23
 1e0d81c:    40 b3             	r0 = r1 + r5			  ## sdfile_new.c:268:18
 1e0d81e:    ed 25             	if (r2 == 0) goto -38 <sdfile_init+0x8C : 1e0d7fa >
 1e0d820:    70 fc 68 01       	r0 = r7 + 360
 1e0d824:    c2 41             	r2 = [r0 + 112]			  ## sdfile_new.c:147:48
 1e0d826:    06 68             	r6 = b[r4 + 0] (u)			  ## sdfile_new.c:304:26
 1e0d828:    d4 41             	r4 = [r0 + 116]			  ## sdfile_new.c:147:29
 1e0d82a:    03 fb 00 01       	r3 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## sdfile_new.c:304:13
 1e0d82e:    16 e0 02 00       	if (r6 == 1) goto 4 <sdfile_init+0xC8 : 1e0d836 >
 1e0d832:    03 fb 00 10       	r3 = 4096 <sys_clock_limit+0x50 : 1000 >			  ## sdfile_new.c:304:13
 1e0d836:    66 fb 00 39       	r6 = 0 - r3			  ## sdfile_new.c:308:63
 1e0d83a:    24 bb             	r4 = r5 - r4			  ## sdfile_new.c:147:19
 1e0d83c:    42 09             	r2 += r4			  ## sdfile_new.c:147:38
 1e0d83e:    21 09             	r1 += r2			  ## sdfile_new.c:307:36
 1e0d840:    31 09             	r1 += r3			  ## sdfile_new.c:308:30
 1e0d842:    f1 81             	r1 += 31			  ## sdfile_new.c:308:30
 1e0d844:    51 bd             	r1 &= r6			  ## sdfile_new.c:308:63
 1e0d846:    01 8f             	r1 += -16			  ## sdfile_new.c:311:50
 1e0d848:    02 71             	r2 = 16			  ## sdfile_new.c:311:9
 1e0d84a:    bf f3 33 9b       	call -51610 <norflash_origin_read : 1e00eb4 >			  ## sdfile_new.c:311:9
 1e0d84e:    04 70             	r4 = 0
 1e0d850:    c1 ff 0a f1 e0 01 	r1 = 31518986 <bluetooth_base_uuid+0x100 : 1e0f10a >			  ## sdfile_new.c:347:9
 1e0d856:    c2 ff 0e f1 e0 01 	r2 = 31518990 <bluetooth_base_uuid+0x104 : 1e0f10e >			  ## sdfile_new.c:347:9
 1e0d85c:    00 70             	r0 = 0			  ## sdfile_new.c:347:9
 1e0d85e:    03 70             	r3 = 0			  ## sdfile_new.c:347:9
 1e0d860:    0c 02             	[sp] = r4			  ## sdfile_new.c:347:9
 1e0d862:    32 17             	call -412 <mount : 1e0d6c8 >			  ## sdfile_new.c:347:9
 1e0d864:    ad 1f             	goto -166 <sdfile_init+0x52 : 1e0d7c0 >			  ## sdfile_new.c:347:9


sdfile_mount:
 1e0d866:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:1041:0
 1e0d868:    04 08             	r4 = r0			  ## sdfile_new.c:1041:0
 1e0d86a:    80 72             	r0 = 40			  ## fs.h:206:55
 1e0d86c:    bf f3 92 f7       	call -4316 <zalloc : 1e0c794 >			  ## fs.h:206:55
 1e0d870:    81 99             	r1 = r4 + 24
 1e0d872:    01 20             	if (r0 == 0) goto 2 <sdfile_mount+0x10 : 1e0d876 >
 1e0d874:    08 42             	[r1 + 0] = r0			  ## fs.h:209:17
 1e0d876:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:1052:32
 1e0d87c:    03 f6 e0 21       	r3 = [r2 + 480]			  ## sdfile_new.c:1045:32
 1e0d880:    1b 42             	[r1 + 4] = r3			  ## sdfile_new.c:1045:22
 1e0d882:    13 76             	r3 = 97			  ## sdfile_new.c:1046:22
 1e0d884:    1b 63             	b[r1 + 17] = r3			  ## sdfile_new.c:1046:22
 1e0d886:    03 77             	r3 = 112			  ## sdfile_new.c:1047:22
 1e0d888:    2b 63             	b[r1 + 18] = r3			  ## sdfile_new.c:1047:22
 1e0d88a:    3b 63             	b[r1 + 19] = r3			  ## sdfile_new.c:1048:22
 1e0d88c:    03 70             	r3 = 0			  ## sdfile_new.c:1048:22
 1e0d88e:    4b 63             	b[r1 + 20] = r3			  ## sdfile_new.c:1050:22
 1e0d890:    01 f6 e4 21       	r1 = [r2 + 484]			  ## sdfile_new.c:1052:32
 1e0d894:    19 40             	[r0 + 4] = r1			  ## sdfile_new.c:1052:22
 1e0d896:    21 77             	r1 = 114			  ## sdfile_new.c:1053:22
 1e0d898:    19 61             	b[r0 + 17] = r1			  ## sdfile_new.c:1053:22
 1e0d89a:    51 76             	r1 = 101			  ## sdfile_new.c:1054:22
 1e0d89c:    29 61             	b[r0 + 18] = r1			  ## sdfile_new.c:1054:22
 1e0d89e:    31 77             	r1 = 115			  ## sdfile_new.c:1055:22
 1e0d8a0:    39 61             	b[r0 + 19] = r1			  ## sdfile_new.c:1055:22
 1e0d8a2:    4b 61             	b[r0 + 20] = r3			  ## sdfile_new.c:1056:22
 1e0d8a4:    21 70             	r1 = 2			  ## sdfile_new.c:1058:18
 1e0d8a6:    00 70             	r0 = 0			  ## sdfile_new.c:1060:5
 1e0d8a8:    11 f9 9d 40       	b[r4 + 157] = r1			  ## sdfile_new.c:1058:18
 1e0d8ac:    54 01             	{pc, r4} = [sp++]			  ## sdfile_new.c:1060:5


__sdfile_path_get_name:
 1e0d8ae:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:362:0
 1e0d8b0:    02 60             	r2 = b[r0 + 0] (u)			  ## sdfile_new.c:366:9
 1e0d8b2:    14 90             	r4 = r0 + 1			  ## sdfile_new.c:367:18
 1e0d8b4:    15 08             	r5 = r1
 1e0d8b6:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0xE : 1e0d8bc >
 1e0d8ba:    04 08             	r4 = r0			  ## sdfile_new.c:366:9
 1e0d8bc:    f1 72             	r1 = 47			  ## sdfile_new.c:369:11
 1e0d8be:    40 08             	r0 = r4			  ## sdfile_new.c:369:11
 1e0d8c0:    97 f3 22 cb       	call 3118660 <strchr : 106f08 >			  ## sdfile_new.c:369:11
 1e0d8c4:    02 20             	if (r0 == 0) goto 4 <__sdfile_path_get_name+0x1C : 1e0d8ca >			  ## sdfile_new.c:370:9
 1e0d8c6:    26 b1             	r6 = r0 - r4			  ## sdfile_new.c:371:20
 1e0d8c8:    04 18             	goto 8 <__sdfile_path_get_name+0x24 : 1e0d8d2 >
 1e0d8ca:    40 08             	r0 = r4			  ## sdfile_new.c:373:16
 1e0d8cc:    97 f3 16 cb       	call 3118636 <strlen : 106efc >			  ## sdfile_new.c:373:16
 1e0d8d0:    06 08             	r6 = r0			  ## sdfile_new.c:373:16
 1e0d8d2:    67 08             	r7 = r6			  ## sdfile_new.c:376:9
 1e0d8d4:    f6 e0 01 b0       	ifs (r6 < 15) goto 2 <__sdfile_path_get_name+0x2C : 1e0d8da >			  ## sdfile_new.c:376:9
 1e0d8d8:    f7 70             	r7 = 15			  ## sdfile_new.c:376:9
 1e0d8da:    50 08             	r0 = r5			  ## sdfile_new.c:379:5
 1e0d8dc:    41 08             	r1 = r4			  ## sdfile_new.c:379:5
 1e0d8de:    72 08             	r2 = r7			  ## sdfile_new.c:379:5
 1e0d8e0:    97 f3 00 cb       	call 3118592 <memcpy : 106ee4 >			  ## sdfile_new.c:379:5
 1e0d8e4:    00 70             	r0 = 0			  ## sdfile_new.c:379:5
 1e0d8e6:    10 fa 00 57       	b[r5+r7] = r0			  ## sdfile_new.c:380:15
 1e0d8ea:    10 2e             	if (r7 == 0) goto 32 <__sdfile_path_get_name+0x5E : 1e0d90c >			  ## sdfile_new.c:380:15
 1e0d8ec:    d0 bd             	r0 = ~r6			  ## sdfile_new.c:152:15
 1e0d8ee:    00 ef 01 c0       	ifs (r0 > -16) goto 2 <__sdfile_path_get_name+0x46 : 1e0d8f4 >			  ## sdfile_new.c:152:15
 1e0d8f2:    00 07             	r0 = -16			  ## sdfile_new.c:152:15
 1e0d8f4:    10 80             	r0 += 1			  ## sdfile_new.c:152:15
 1e0d8f6:    01 6a             	r1 = b[r5 + 0] (u)			  ## sdfile_new.c:153:14
 1e0d8f8:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:153:27
 1e0d8fc:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:153:27
 1e0d8fe:    92 e1 02 80       	if (r2 > 25) goto 4 <__sdfile_path_get_name+0x58 : 1e0d906 >			  ## sdfile_new.c:153:27
 1e0d902:    01 8e             	r1 += -32			  ## sdfile_new.c:154:31
 1e0d904:    09 6a             	b[r5 + 0] = r1			  ## sdfile_new.c:154:18
 1e0d906:    10 80             	r0 += 1			  ## sdfile_new.c:152:5
 1e0d908:    15 80             	r5 += 1			  ## sdfile_new.c:156:13
 1e0d90a:    f5 31             	if (r0 != 0) goto -22 <__sdfile_path_get_name+0x48 : 1e0d8f6 >
 1e0d90c:    81 b9             	r1 = r4 + r6			  ## sdfile_new.c:382:14
 1e0d90e:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:383:9
 1e0d910:    10 92             	r0 = r1 + 1			  ## sdfile_new.c:384:18
 1e0d912:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0x6A : 1e0d918 >
 1e0d916:    10 08             	r0 = r1			  ## sdfile_new.c:383:9
 1e0d918:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:387:5


sdfile_open_file_in_dir:
 1e0d91a:    7b 01             	[--sp] = {rets, r11-r4}			  ## sdfile_new.c:538:0
 1e0d91c:    f0 0b             	sp += -32			  ## sdfile_new.c:538:0
 1e0d91e:    26 08             	r6 = r2			  ## sdfile_new.c:538:0
 1e0d920:    19 08             	r9 = r1			  ## sdfile_new.c:538:0
 1e0d922:    0a 08             	r10 = r0			  ## sdfile_new.c:538:0
 1e0d924:    27 42             	r7 = [r1 + 8]			  ## sdfile_new.c:541:30
 1e0d926:    00 a0             	r0 = sp + 0
 1e0d928:    05 91             	r5 = r0 + 16
 1e0d92a:    04 fd 02 09       	r4 = r0 | 2
 1e0d92e:    a8 fc 04 00       	r8 = r10 + 4			  ## sdfile_new.c:543:56
 1e0d932:    0b 72             	r11 = 32
 1e0d934:    07 82             	r7 += 32			  ## sdfile_new.c:399:29
 1e0d936:    00 a0             	r0 = sp + 0
 1e0d938:    02 72             	r2 = 32			  ## sdfile_new.c:399:9
 1e0d93a:    71 08             	r1 = r7			  ## sdfile_new.c:399:9
 1e0d93c:    97 f3 d2 ca       	call 3118500 <memcpy : 106ee4 >			  ## sdfile_new.c:399:9
 1e0d940:    e1 71             	r1 = 30			  ## sdfile_new.c:401:13
 1e0d942:    40 08             	r0 = r4			  ## sdfile_new.c:401:13
 1e0d944:    bf f3 da 9a       	call -51788 <CRC16 : 1e00efc >			  ## sdfile_new.c:401:13
 1e0d948:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:401:81
 1e0d94c:    10 f2 09 10       	if (r0 != r1) goto 18 <sdfile_open_file_in_dir+0x48 : 1e0d962 >			  ## sdfile_new.c:401:13
 1e0d950:    50 08             	r0 = r5			  ## sdfile_new.c:405:15
 1e0d952:    61 08             	r1 = r6			  ## sdfile_new.c:405:15
 1e0d954:    63 16             	call -826 <sdfile_strcase_cmp : 1e0d61c >			  ## sdfile_new.c:405:15
 1e0d956:    0b 20             	if (r0 == 0) goto 22 <sdfile_open_file_in_dir+0x54 : 1e0d96e >			  ## sdfile_new.c:407:13
 1e0d958:    80 f5 0e 00       	r0 = h[sp+14] (u)			  ## sdfile_new.c:414:18
 1e0d95c:    07 82             	r7 += 32			  ## sdfile_new.c:414:13
 1e0d95e:    eb 21             	if (r0 == 0) goto -42 <sdfile_open_file_in_dir+0x1C : 1e0d936 >			  ## sdfile_new.c:414:13
 1e0d960:    14 18             	goto 40 <sdfile_open_file_in_dir+0x70 : 1e0d98a >			  ## sdfile_new.c:414:13
 1e0d962:    fb 8f             	r11 += -1			  ## sdfile_new.c:402:20
 1e0d964:    0b e0 e6 cf       	ifs (r11 > 0) goto -52 <sdfile_open_file_in_dir+0x1A : 1e0d934 >
 1e0d968:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E54DE : 1ffff02 >
 1e0d96c:    1e 18             	goto 60 <sdfile_open_file_in_dir+0x90 : 1e0d9aa >
 1e0d96e:    01 a0             	r1 = sp + 0
 1e0d970:    02 72             	r2 = 32			  ## sdfile_new.c:409:17
 1e0d972:    80 08             	r0 = r8			  ## sdfile_new.c:409:17
 1e0d974:    97 f3 b6 ca       	call 3118444 <memcpy : 106ee4 >			  ## sdfile_new.c:409:17
 1e0d978:    00 f9 10 a0       	r0 = b[r10 + 16] (u)			  ## sdfile_new.c:546:25
 1e0d97c:    24 f3 07 00       	if ((r0 & 16) != 0) goto 14 <sdfile_open_file_in_dir+0x74 : 1e0d98e >			  ## sdfile_new.c:546:25
 1e0d980:    00 f6 08 90       	r0 = [r9 + 8]			  ## sdfile_new.c:551:42
 1e0d984:    01 f6 08 a0       	r1 = [r10 + 8]			  ## sdfile_new.c:551:29
 1e0d988:    0c 18             	goto 24 <sdfile_open_file_in_dir+0x88 : 1e0d9a2 >			  ## sdfile_new.c:551:29
 1e0d98a:    10 70             	r0 = 1
 1e0d98c:    0e 18             	goto 28 <sdfile_open_file_in_dir+0x90 : 1e0d9aa >
 1e0d98e:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e0d994:    01 f6 d8 01       	r1 = [r0 + 472]			  ## sdfile_new.c:142:29
 1e0d998:    02 f6 08 a0       	r2 = [r10 + 8]			  ## sdfile_new.c:549:69
 1e0d99c:    00 f6 dc 01       	r0 = [r0 + 476]			  ## sdfile_new.c:142:53
 1e0d9a0:    61 b4             	r1 = r2 - r1			  ## sdfile_new.c:142:19
 1e0d9a2:    10 09             	r0 += r1
 1e0d9a4:    10 f6 08 a0       	[r10 + 8] = r0
 1e0d9a8:    00 70             	r0 = 0
 1e0d9aa:    10 0a             	sp += 32
 1e0d9ac:    5b 01             	{pc, r11-r4} = [sp++]			  ## sdfile_new.c:556:5


sdfile_for_each_dir:
 1e0d9ae:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:456:0
 1e0d9b0:    f0 0b             	sp += -32			  ## sdfile_new.c:456:0
 1e0d9b2:    16 08             	r6 = r1			  ## sdfile_new.c:456:0
 1e0d9b4:    08 08             	r8 = r0			  ## sdfile_new.c:456:0
 1e0d9b6:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:459:24
 1e0d9bc:    05 f6 e4 01       	r5 = [r0 + 484]			  ## sdfile_new.c:459:24
 1e0d9c0:    00 a0             	r0 = sp + 0
 1e0d9c2:    07 91             	r7 = r0 + 16
 1e0d9c4:    04 fd 02 09       	r4 = r0 | 2
 1e0d9c8:    00 a0             	r0 = sp + 0
 1e0d9ca:    02 72             	r2 = 32			  ## sdfile_new.c:462:9
 1e0d9cc:    51 08             	r1 = r5			  ## sdfile_new.c:462:9
 1e0d9ce:    97 f3 89 ca       	call 3118354 <memcpy : 106ee4 >			  ## sdfile_new.c:462:9
 1e0d9d2:    e1 71             	r1 = 30			  ## sdfile_new.c:463:13
 1e0d9d4:    40 08             	r0 = r4			  ## sdfile_new.c:463:13
 1e0d9d6:    bf f3 91 9a       	call -51934 <CRC16 : 1e00efc >			  ## sdfile_new.c:463:13
 1e0d9da:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:463:81
 1e0d9de:    10 f2 0c 10       	if (r0 != r1) goto 24 <sdfile_for_each_dir+0x4C : 1e0d9fa >			  ## sdfile_new.c:463:81
 1e0d9e2:    70 08             	r0 = r7			  ## sdfile_new.c:467:15
 1e0d9e4:    61 08             	r1 = r6			  ## sdfile_new.c:467:15
 1e0d9e6:    1a 16             	call -972 <sdfile_strcase_cmp : 1e0d61c >			  ## sdfile_new.c:467:15
 1e0d9e8:    0b 20             	if (r0 == 0) goto 22 <sdfile_for_each_dir+0x52 : 1e0da00 >
 1e0d9ea:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:474:22
 1e0d9ec:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:475:19
 1e0d9f0:    05 09             	r5 += r0			  ## sdfile_new.c:474:14
 1e0d9f2:    ea 23             	if (r1 == 0) goto -44 <sdfile_for_each_dir+0x1A : 1e0d9c8 >
 1e0d9f4:    00 fb 01 ff       	r0 = -255 <bank_code_load_addr+0x1E54DD : 1ffff01 >
 1e0d9f8:    0b 18             	goto 22 <sdfile_for_each_dir+0x62 : 1e0da10 >
 1e0d9fa:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E54E1 : 1ffff05 >
 1e0d9fe:    08 18             	goto 16 <sdfile_for_each_dir+0x62 : 1e0da10 >
 1e0da00:    01 a0             	r1 = sp + 0
 1e0da02:    02 72             	r2 = 32			  ## sdfile_new.c:469:13
 1e0da04:    80 08             	r0 = r8			  ## sdfile_new.c:469:13
 1e0da06:    97 f3 6d ca       	call 3118298 <memcpy : 106ee4 >			  ## sdfile_new.c:469:13
 1e0da0a:    15 f6 04 80       	[r8 + 4] = r5			  ## sdfile_new.c:470:28
 1e0da0e:    00 70             	r0 = 0			  ## sdfile_new.c:470:28
 1e0da10:    10 0a             	sp += 32
 1e0da12:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:478:1


sdfile_open:
 1e0da14:    79 01             	[--sp] = {rets, r9-r4}			  ## sdfile_new.c:726:0
 1e0da16:    d2 0b             	sp += -92			  ## sdfile_new.c:726:0
 1e0da18:    17 08             	r7 = r1			  ## sdfile_new.c:726:0
 1e0da1a:    08 08             	r8 = r0			  ## sdfile_new.c:726:0
 1e0da1c:    3f 2e             	if (r7 == 0) goto 126 <sdfile_open+0x88 : 1e0da9c >			  ## sdfile_new.c:726:0
 1e0da1e:    40 72             	r0 = 36			  ## sdfile_new.c:736:31
 1e0da20:    bf f3 be ef       	call -8324 <malloc : 1e0b9a0 >			  ## sdfile_new.c:736:31
 1e0da24:    05 08             	r5 = r0			  ## sdfile_new.c:736:31
 1e0da26:    5c 2a             	if (r5 == 0) goto 184 <sdfile_open+0xCC : 1e0dae0 >			  ## sdfile_new.c:736:31
 1e0da28:    01 70             	r1 = 0			  ## sdfile_new.c:741:5
 1e0da2a:    42 72             	r2 = 36			  ## sdfile_new.c:741:5
 1e0da2c:    06 70             	r6 = 0			  ## sdfile_new.c:741:5
 1e0da2e:    97 f3 5f ca       	call 3118270 <memset : 106ef0 >			  ## sdfile_new.c:741:5
 1e0da32:    00 f6 08 80       	r0 = [r8 + 8]			  ## sdfile_new.c:743:24
 1e0da36:    14 91             	r4 = r0 + 17			  ## sdfile_new.c:743:17
 1e0da38:    c1 ff 15 f1 e0 01 	r1 = 31518997 <bluetooth_base_uuid+0x10B : 1e0f115 >			  ## sdfile_new.c:743:10
 1e0da3e:    40 08             	r0 = r4			  ## sdfile_new.c:743:10
 1e0da40:    97 f3 58 ca       	call 3118256 <strcmp : 106ef4 >			  ## sdfile_new.c:743:10
 1e0da44:    c9 ff c0 23 00 00 	r9 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:743:10
 1e0da4a:    2b 20             	if (r0 == 0) goto 86 <sdfile_open+0x8E : 1e0daa2 >			  ## sdfile_new.c:743:10
 1e0da4c:    c1 ff 19 f1 e0 01 	r1 = 31519001 <bluetooth_base_uuid+0x10F : 1e0f119 >			  ## sdfile_new.c:745:17
 1e0da52:    40 08             	r0 = r4			  ## sdfile_new.c:745:17
 1e0da54:    97 f3 4e ca       	call 3118236 <strcmp : 106ef4 >			  ## sdfile_new.c:745:17
 1e0da58:    3d 30             	if (r0 != 0) goto 122 <sdfile_open+0xC0 : 1e0dad4 >			  ## sdfile_new.c:745:17
 1e0da5a:    74 a2             	r4 = sp + 39
 1e0da5c:    01 70             	r1 = 0			  ## sdfile_new.c:631:10
 1e0da5e:    12 71             	r2 = 17			  ## sdfile_new.c:631:10
 1e0da60:    40 08             	r0 = r4			  ## sdfile_new.c:631:10
 1e0da62:    97 f3 45 ca       	call 3118218 <memset : 106ef0 >			  ## sdfile_new.c:631:10
 1e0da66:    70 08             	r0 = r7			  ## sdfile_new.c:634:16
 1e0da68:    41 08             	r1 = r4			  ## sdfile_new.c:634:16
 1e0da6a:    21 17             	call -446 <__sdfile_path_get_name : 1e0d8ae >			  ## sdfile_new.c:634:16
 1e0da6c:    07 08             	r7 = r0			  ## sdfile_new.c:634:16
 1e0da6e:    00 6e             	r0 = b[r7 + 0] (u)			  ## sdfile_new.c:635:9
 1e0da70:    3b 20             	if (r0 == 0) goto 118 <sdfile_open+0xD4 : 1e0dae8 >			  ## sdfile_new.c:635:9
 1e0da72:    80 a3             	r0 = sp + 56
 1e0da74:    40 80             	r0 += 4			  ## sdfile_new.c:510:38
 1e0da76:    71 a2             	r1 = sp + 39
 1e0da78:    9a 17             	call -204 <sdfile_for_each_dir : 1e0d9ae >			  ## sdfile_new.c:510:11
 1e0da7a:    06 08             	r6 = r0			  ## sdfile_new.c:510:11
 1e0da7c:    2a 3c             	if (r6 != 0) goto 84 <sdfile_open+0xBE : 1e0dad2 >
 1e0da7e:    c0 f5 48 00       	r0 = b[sp+72] (u)			  ## sdfile_new.c:512:24
 1e0da82:    20 fd 0f 09       	r0 = r0 & 15			  ## sdfile_new.c:512:29
 1e0da86:    06 fb 01 ff       	r6 = -255 <bank_code_load_addr+0x1E54DD : 1ffff01 >			  ## sdfile_new.c:512:29
 1e0da8a:    30 e0 22 10       	if (r0 != 3) goto 68 <sdfile_open+0xBE : 1e0dad2 >
 1e0da8e:    74 a2             	r4 = sp + 39
 1e0da90:    70 08             	r0 = r7			  ## sdfile_new.c:641:9
 1e0da92:    41 08             	r1 = r4			  ## sdfile_new.c:641:9
 1e0da94:    0c 17             	call -488 <__sdfile_path_get_name : 1e0d8ae >			  ## sdfile_new.c:641:9
 1e0da96:    81 a3             	r1 = sp + 56			  ## sdfile_new.c:641:9
 1e0da98:    50 08             	r0 = r5			  ## sdfile_new.c:642:15
 1e0da9a:    18 18             	goto 48 <sdfile_open+0xB8 : 1e0dacc >			  ## sdfile_new.c:642:15
 1e0da9c:    06 fb 02 ff       	r6 = -254 <bank_code_load_addr+0x1E54DE : 1ffff02 >
 1e0daa0:    20 18             	goto 64 <sdfile_open+0xCE : 1e0dae2 >
 1e0daa2:    74 a2             	r4 = sp + 39
 1e0daa4:    01 70             	r1 = 0			  ## sdfile_new.c:614:10
 1e0daa6:    12 71             	r2 = 17			  ## sdfile_new.c:614:10
 1e0daa8:    40 08             	r0 = r4			  ## sdfile_new.c:614:10
 1e0daaa:    97 f3 21 ca       	call 3118146 <memset : 106ef0 >			  ## sdfile_new.c:614:10
 1e0daae:    01 f6 e0 91       	r1 = [r9 + 480]			  ## sdfile_new.c:618:48
 1e0dab2:    06 a0             	r6 = sp + 0			  ## sdfile_new.c:618:48
 1e0dab4:    40 9c             	r0 = r6 + 4			  ## sdfile_new.c:618:26
 1e0dab6:    02 72             	r2 = 32			  ## sdfile_new.c:618:5
 1e0dab8:    97 f3 14 ca       	call 3118120 <memcpy : 106ee4 >			  ## sdfile_new.c:618:5
 1e0dabc:    00 f6 dc 91       	r0 = [r9 + 476]			  ## sdfile_new.c:620:29
 1e0dac0:    28 02             	[sp+8] = r0			  ## sdfile_new.c:620:19
 1e0dac2:    70 08             	r0 = r7			  ## sdfile_new.c:622:5
 1e0dac4:    41 08             	r1 = r4			  ## sdfile_new.c:622:5
 1e0dac6:    f3 16             	call -538 <__sdfile_path_get_name : 1e0d8ae >			  ## sdfile_new.c:622:5
 1e0dac8:    50 08             	r0 = r5			  ## sdfile_new.c:623:11
 1e0daca:    61 08             	r1 = r6			  ## sdfile_new.c:623:11
 1e0dacc:    42 08             	r2 = r4
 1e0dace:    25 17             	call -438 <sdfile_open_file_in_dir : 1e0d91a >
 1e0dad0:    06 08             	r6 = r0
 1e0dad2:    04 2c             	if (r6 == 0) goto 8 <sdfile_open+0xC8 : 1e0dadc >
 1e0dad4:    50 08             	r0 = r5			  ## sdfile_new.c:759:5
 1e0dad6:    bf f3 68 ef       	call -8496 <free : 1e0b9aa >			  ## sdfile_new.c:759:5
 1e0dada:    03 18             	goto 6 <sdfile_open+0xCE : 1e0dae2 >			  ## sdfile_new.c:759:5
 1e0dadc:    15 f6 0c 80       	[r8 + 12] = r5			  ## sdfile_new.c:753:29
 1e0dae0:    06 70             	r6 = 0
 1e0dae2:    60 08             	r0 = r6			  ## sdfile_new.c:761:1
 1e0dae4:    2e 0a             	sp += 92			  ## sdfile_new.c:761:1
 1e0dae6:    59 01             	{pc, r9-r4} = [sp++]			  ## sdfile_new.c:761:1
 1e0dae8:    40 9a             	r0 = r5 + 4			  ## sdfile_new.c:586:39
 1e0daea:    71 a2             	r1 = sp + 39			  ## sdfile_new.c:586:39
 1e0daec:    60 17             	call -320 <sdfile_for_each_dir : 1e0d9ae >			  ## sdfile_new.c:586:11
 1e0daee:    21 4a             	r1 = [r5 + 8]			  ## sdfile_new.c:586:11
 1e0daf0:    06 08             	r6 = r0			  ## sdfile_new.c:586:11
 1e0daf2:    05 3c             	if (r6 != 0) goto 10 <sdfile_open+0xEA : 1e0dafe >
 1e0daf4:    01 82             	r1 += 32			  ## sdfile_new.c:589:25
 1e0daf6:    29 4a             	[r5 + 8] = r1			  ## sdfile_new.c:589:25
 1e0daf8:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:590:24
 1e0dafa:    00 8e             	r0 += -32			  ## sdfile_new.c:590:24
 1e0dafc:    38 4a             	[r5 + 12] = r0			  ## sdfile_new.c:590:24
 1e0dafe:    11 f6 5c 91       	[r9 + 348] = r1			  ## sdfile_new.c:592:32
 1e0db02:    e7 1f             	goto -50 <sdfile_open+0xBE : 1e0dad2 >			  ## sdfile_new.c:592:32


sdfile_read:
 1e0db04:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:816:0
 1e0db06:    24 08             	r4 = r2			  ## sdfile_new.c:816:0
 1e0db08:    02 08             	r2 = r0			  ## sdfile_new.c:816:0
 1e0db0a:    00 70             	r0 = 0			  ## sdfile_new.c:816:0
 1e0db0c:    12 24             	if (r2 == 0) goto 36 <sdfile_read+0x2E : 1e0db32 >			  ## sdfile_new.c:816:0
 1e0db0e:    35 44             	r5 = [r2 + 12]			  ## sdfile_new.c:824:38
 1e0db10:    10 2a             	if (r5 == 0) goto 32 <sdfile_read+0x2E : 1e0db32 >
 1e0db12:    06 4a             	r6 = [r5 + 0]			  ## sdfile_new.c:830:43
 1e0db14:    20 4a             	r0 = [r5 + 8]			  ## sdfile_new.c:837:56
 1e0db16:    37 4a             	r7 = [r5 + 12]			  ## sdfile_new.c:830:30
 1e0db18:    82 b1             	r2 = r0 + r6			  ## sdfile_new.c:837:42
 1e0db1a:    10 08             	r0 = r1			  ## sdfile_new.c:837:5
 1e0db1c:    21 08             	r1 = r2			  ## sdfile_new.c:837:5
 1e0db1e:    42 08             	r2 = r4			  ## sdfile_new.c:837:5
 1e0db20:    97 f3 e0 c9       	call 3118016 <memcpy : 106ee4 >			  ## sdfile_new.c:837:5
 1e0db24:    a0 bf             	r0 = r7 - r6			  ## sdfile_new.c:830:34
 1e0db26:    40 f2 01 30       	if (r0 < r4) goto 2 <sdfile_read+0x28 : 1e0db2c >
 1e0db2a:    40 08             	r0 = r4			  ## sdfile_new.c:833:9
 1e0db2c:    01 4a             	r1 = [r5 + 0]			  ## sdfile_new.c:839:17
 1e0db2e:    01 09             	r1 += r0			  ## sdfile_new.c:839:17
 1e0db30:    09 4a             	[r5 + 0] = r1			  ## sdfile_new.c:839:17
 1e0db32:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:842:1


sdfile_write:
 1e0db34:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:905:0
 1e0db36:    03 08             	r3 = r0			  ## sdfile_new.c:905:0
 1e0db38:    00 70             	r0 = 0			  ## sdfile_new.c:905:0
 1e0db3a:    2a 26             	if (r3 == 0) goto 84 <sdfile_write+0x5C : 1e0db90 >			  ## sdfile_new.c:905:0
 1e0db3c:    35 46             	r5 = [r3 + 12]			  ## sdfile_new.c:915:38
 1e0db3e:    28 2a             	if (r5 == 0) goto 80 <sdfile_write+0x5C : 1e0db90 >
 1e0db40:    03 4a             	r3 = [r5 + 0]			  ## sdfile_new.c:921:43
 1e0db42:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:921:30
 1e0db44:    e4 b0             	r4 = r0 - r3			  ## sdfile_new.c:921:34
 1e0db46:    24 f2 01 30       	if (r4 < r2) goto 2 <sdfile_write+0x18 : 1e0db4c >
 1e0db4a:    24 08             	r4 = r2			  ## sdfile_new.c:924:9
 1e0db4c:    26 4a             	r6 = [r5 + 8]			  ## sdfile_new.c:928:39
 1e0db4e:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:928:39
 1e0db54:    08 f6 dc 21       	r8 = [r2 + 476]			  ## sdfile_new.c:147:29
 1e0db58:    02 f6 d8 21       	r2 = [r2 + 472]			  ## sdfile_new.c:147:48
 1e0db5c:    63 09             	r3 += r6			  ## sdfile_new.c:928:25
 1e0db5e:    0b 28             	if (r4 == 0) goto 22 <sdfile_write+0x42 : 1e0db76 >
 1e0db60:    06 70             	r6 = 0
 1e0db62:    07 fa 00 16       	r7 = b[r1+r6] (u)			  ## sdfile_new.c:711:14
 1e0db66:    00 fa 00 36       	r0 = b[r3+r6] (u)			  ## sdfile_new.c:711:24
 1e0db6a:    50 bf             	r0 &= r7			  ## sdfile_new.c:711:22
 1e0db6c:    70 f2 11 10       	if (r0 != r7) goto 34 <sdfile_write+0x5E : 1e0db92 >			  ## sdfile_new.c:711:22
 1e0db70:    16 80             	r6 += 1			  ## sdfile_new.c:710:31
 1e0db72:    46 f2 f6 3f       	if (r6 < r4) goto -20 <sdfile_write+0x2E : 1e0db62 >
 1e0db76:    90 fb 80 03       	r0 = r3 - r8			  ## sdfile_new.c:147:19
 1e0db7a:    02 09             	r2 += r0			  ## sdfile_new.c:147:38
 1e0db7c:    10 08             	r0 = r1			  ## sdfile_new.c:936:11
 1e0db7e:    41 08             	r1 = r4			  ## sdfile_new.c:936:11
 1e0db80:    bf f3 7b 9b       	call -51466 <norflash_write : 1e0127a >			  ## sdfile_new.c:936:11
 1e0db84:    40 f2 04 10       	if (r0 != r4) goto 8 <sdfile_write+0x5C : 1e0db90 >
 1e0db88:    00 4a             	r0 = [r5 + 0]			  ## sdfile_new.c:939:21
 1e0db8a:    40 09             	r0 += r4			  ## sdfile_new.c:939:21
 1e0db8c:    08 4a             	[r5 + 0] = r0			  ## sdfile_new.c:939:21
 1e0db8e:    40 08             	r0 = r4			  ## sdfile_new.c:939:21
 1e0db90:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:943:1
 1e0db92:    00 fb 06 ff       	r0 = -250 <bank_code_load_addr+0x1E54E2 : 1ffff06 >
 1e0db96:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:943:1


sdfile_seek:
 1e0db98:    0e 20             	if (r0 == 0) goto 28 <sdfile_seek+0x1E : 1e0dbb6 >			  ## sdfile_new.c:876:0
 1e0db9a:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:881:38
 1e0db9c:    0c 20             	if (r0 == 0) goto 24 <sdfile_seek+0x1E : 1e0dbb6 >
 1e0db9e:    22 e0 04 00       	if (r2 == 2) goto 8 <sdfile_seek+0x12 : 1e0dbaa >			  ## sdfile_new.c:887:5
 1e0dba2:    12 e0 05 00       	if (r2 == 1) goto 10 <sdfile_seek+0x18 : 1e0dbb0 >
 1e0dba6:    06 24             	if (r2 == 0) goto 12 <sdfile_seek+0x1C : 1e0dbb4 >
 1e0dba8:    06 18             	goto 12 <sdfile_seek+0x1E : 1e0dbb6 >
 1e0dbaa:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:895:35
 1e0dbac:    61 b4             	r1 = r2 - r1			  ## sdfile_new.c:895:39
 1e0dbae:    02 18             	goto 4 <sdfile_seek+0x1C : 1e0dbb4 >
 1e0dbb0:    02 40             	r2 = [r0 + 0]			  ## sdfile_new.c:892:21
 1e0dbb2:    21 09             	r1 += r2			  ## sdfile_new.c:892:21
 1e0dbb4:    09 40             	[r0 + 0] = r1
 1e0dbb6:    00 70             	r0 = 0			  ## sdfile_new.c:900:1
 1e0dbb8:    20 00             	rts			  ## sdfile_new.c:900:1


sdfile_len:
 1e0dbba:    01 08             	r1 = r0			  ## sdfile_new.c:961:0
 1e0dbbc:    00 70             	r0 = 0			  ## sdfile_new.c:961:0
 1e0dbbe:    03 22             	if (r1 == 0) goto 6 <sdfile_len+0xC : 1e0dbc6 >			  ## sdfile_new.c:961:0
 1e0dbc0:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:966:38
 1e0dbc2:    01 22             	if (r1 == 0) goto 2 <sdfile_len+0xC : 1e0dbc6 >
 1e0dbc4:    30 42             	r0 = [r1 + 12]			  ## sdfile_new.c:972:24
 1e0dbc6:    20 00             	rts			  ## sdfile_new.c:973:1


sdfile_pos:
 1e0dbc8:    01 08             	r1 = r0			  ## sdfile_new.c:976:0
 1e0dbca:    00 70             	r0 = 0			  ## sdfile_new.c:976:0
 1e0dbcc:    03 22             	if (r1 == 0) goto 6 <sdfile_pos+0xC : 1e0dbd4 >			  ## sdfile_new.c:976:0
 1e0dbce:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:981:38
 1e0dbd0:    01 22             	if (r1 == 0) goto 2 <sdfile_pos+0xC : 1e0dbd4 >
 1e0dbd2:    00 42             	r0 = [r1 + 0]			  ## sdfile_new.c:984:23
 1e0dbd4:    20 00             	rts			  ## sdfile_new.c:988:1


sdfile_get_name:
 1e0dbd6:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:996:0
 1e0dbd8:    24 08             	r4 = r2			  ## sdfile_new.c:996:0
 1e0dbda:    02 08             	r2 = r0			  ## sdfile_new.c:996:0
 1e0dbdc:    00 70             	r0 = 0			  ## sdfile_new.c:996:0
 1e0dbde:    0c 24             	if (r2 == 0) goto 24 <sdfile_get_name+0x22 : 1e0dbf8 >			  ## sdfile_new.c:996:0
 1e0dbe0:    32 44             	r2 = [r2 + 12]			  ## sdfile_new.c:1001:38
 1e0dbe2:    0a 24             	if (r2 == 0) goto 20 <sdfile_get_name+0x22 : 1e0dbf8 >
 1e0dbe4:    04 e1 01 b0       	ifs (r4 < 16) goto 2 <sdfile_get_name+0x14 : 1e0dbea >
 1e0dbe8:    04 71             	r4 = 16
 1e0dbea:    42 81             	r2 += 20			  ## sdfile_new.c:1010:5
 1e0dbec:    10 08             	r0 = r1			  ## sdfile_new.c:1010:5
 1e0dbee:    21 08             	r1 = r2			  ## sdfile_new.c:1010:5
 1e0dbf0:    42 08             	r2 = r4			  ## sdfile_new.c:1010:5
 1e0dbf2:    97 f3 77 c9       	call 3117806 <memcpy : 106ee4 >			  ## sdfile_new.c:1010:5
 1e0dbf6:    40 08             	r0 = r4			  ## sdfile_new.c:1010:5
 1e0dbf8:    54 01             	{pc, r4} = [sp++]			  ## sdfile_new.c:1013:1


sdfile_close:
 1e0dbfa:    34 00             	[--sp] = rets			  ## sdfile_new.c:946:0
 1e0dbfc:    04 20             	if (r0 == 0) goto 8 <sdfile_close+0xC : 1e0dc06 >			  ## sdfile_new.c:946:0
 1e0dbfe:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:951:38
 1e0dc00:    02 20             	if (r0 == 0) goto 4 <sdfile_close+0xC : 1e0dc06 >
 1e0dc02:    bf f3 d2 ee       	call -8796 <free : 1e0b9aa >			  ## sdfile_new.c:954:9
 1e0dc06:    00 70             	r0 = 0			  ## sdfile_new.c:958:1
 1e0dc08:    30 00             	pc = [sp++]			  ## sdfile_new.c:958:1


sdfile_get_attrs:
 1e0dc0a:    0e 20             	if (r0 == 0) goto 28 <sdfile_get_attrs+0x1E : 1e0dc28 >			  ## sdfile_new.c:1016:0
 1e0dc0c:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:1021:38
 1e0dc0e:    0c 20             	if (r0 == 0) goto 24 <sdfile_get_attrs+0x1E : 1e0dc28 >
 1e0dc10:    02 61             	r2 = b[r0 + 16] (u)			  ## sdfile_new.c:1028:22
 1e0dc12:    22 fd 0f 29       	r2 = r2 & 15			  ## sdfile_new.c:1028:27
 1e0dc16:    32 e0 03 10       	if (r2 != 3) goto 6 <sdfile_get_attrs+0x16 : 1e0dc20 >			  ## sdfile_new.c:1028:27
 1e0dc1a:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:1029:20
 1e0dc1c:    12 b1             	r2 |= 4			  ## sdfile_new.c:1029:20
 1e0dc1e:    0a 62             	b[r1 + 0] = r2			  ## sdfile_new.c:1029:20
 1e0dc20:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:1034:31
 1e0dc22:    1a 42             	[r1 + 4] = r2			  ## sdfile_new.c:1034:17
 1e0dc24:    20 40             	r0 = [r0 + 8]			  ## sdfile_new.c:1035:32
 1e0dc26:    28 42             	[r1 + 8] = r0			  ## sdfile_new.c:1035:18
 1e0dc28:    00 70             	r0 = 0			  ## sdfile_new.c:1037:1
 1e0dc2a:    20 00             	rts			  ## sdfile_new.c:1037:1


fopen:
 1e0dc2c:    7d 01             	[--sp] = {rets, r13-r4}			  ## vfs.c:351:0
 1e0dc2e:    1a 08             	r10 = r1			  ## vfs.c:351:0
 1e0dc30:    0d 08             	r13 = r0			  ## vfs.c:351:0
 1e0dc32:    97 f3 b3 c8       	call 3117414 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0dc36:    c6 ff a4 08 00 00 	r6 = 2212 <head.1197 : 8a4 >			  ## spinlock.h:77:5
 1e0dc3c:    07 4c             	r7 = [r6 + 0]			  ## spinlock.h:77:5
 1e0dc3e:    67 f2 12 00       	if (r7 == r6) goto 36 <fopen+0x3A : 1e0dc66 >			  ## spinlock.h:77:5
 1e0dc42:    00 f9 5c 70       	r0 = b[r7 + 92] (u)			  ## vfs.c:97:17
 1e0dc46:    74 fc c0 ff       	r4 = r7 + -64			  ## vfs.c:97:17
 1e0dc4a:    0a 20             	if (r0 == 0) goto 20 <fopen+0x34 : 1e0dc60 >			  ## vfs.c:97:17
 1e0dc4c:    15 48             	r5 = [r4 + 4]			  ## vfs.c:100:28
 1e0dc4e:    50 08             	r0 = r5			  ## vfs.c:100:40
 1e0dc50:    97 f3 54 c9       	call 3117736 <strlen : 106efc >			  ## vfs.c:100:40
 1e0dc54:    02 08             	r2 = r0			  ## vfs.c:100:40
 1e0dc56:    50 08             	r0 = r5			  ## vfs.c:100:18
 1e0dc58:    d1 08             	r1 = r13			  ## vfs.c:100:18
 1e0dc5a:    97 f3 47 c9       	call 3117710 <memcmp : 106eec >			  ## vfs.c:100:18
 1e0dc5e:    08 20             	if (r0 == 0) goto 16 <fopen+0x44 : 1e0dc70 >			  ## vfs.c:100:18
 1e0dc60:    07 49             	r7 = [r4 + 64]
 1e0dc62:    67 f2 ee 1f       	if (r7 != r6) goto -36 <fopen+0x16 : 1e0dc42 >
 1e0dc66:    97 f3 97 c8       	call 3117358 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0dc6a:    0c 70             	r12 = 0			  ## spinlock.h:88:5
 1e0dc6c:    c0 08             	r0 = r12			  ## vfs.c:401:1
 1e0dc6e:    5d 01             	{pc, r13-r4} = [sp++]			  ## vfs.c:401:1
 1e0dc70:    97 f3 92 c8       	call 3117348 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0dc74:    4b fc 4c 00       	r11 = r4 + 76			  ## vfs.c:363:11
 1e0dc78:    01 70             	r1 = 0			  ## vfs.c:363:11
 1e0dc7a:    0c 70             	r12 = 0			  ## vfs.c:363:11
 1e0dc7c:    b0 08             	r0 = r11			  ## vfs.c:363:11
 1e0dc7e:    97 f3 d1 c8       	call 3117474 <os_mutex_pend : 106e24 >			  ## vfs.c:363:11
 1e0dc82:    01 f9 5c 70       	r1 = b[r7 + 92] (u)			  ## vfs.c:363:11
 1e0dc86:    45 22             	if (r1 == 0) goto 138 <fopen+0xE6 : 1e0dd12 >
 1e0dc88:    f1 31             	if (r0 != 0) goto -30 <fopen+0x40 : 1e0dc6c >
 1e0dc8a:    10 48             	r0 = [r4 + 4]			  ## vfs.c:369:53
 1e0dc8c:    97 f3 36 c9       	call 3117676 <strlen : 106efc >			  ## vfs.c:369:42
 1e0dc90:    d0 09             	r0 += r13			  ## vfs.c:134:13
 1e0dc92:    10 80             	r0 += 1			  ## vfs.c:134:13
 1e0dc94:    85 99             	r5 = r4 + 24			  ## vfs.c:369:29
 1e0dc96:    12 6b             	r2 = b[r5 + 17] (u)
 1e0dc98:    18 9b             	r8 = r5 + 17			  ## vfs.c:134:13
 1e0dc9a:    01 70             	r1 = 0
 1e0dc9c:    03 fa 00 01       	r3 = b[r0+r1] (u)			  ## vfs.c:135:24
 1e0dca0:    32 f2 05 10       	if (r2 != r3) goto 10 <fopen+0x82 : 1e0dcae >			  ## vfs.c:135:9
 1e0dca4:    42 ba             	r2 = r5 + r1			  ## vfs.c:135:24
 1e0dca6:    22 65             	r2 = b[r2 + 18] (u)			  ## vfs.c:136:17
 1e0dca8:    11 80             	r1 += 1			  ## vfs.c:136:17
 1e0dcaa:    f8 35             	if (r2 != 0) goto -16 <fopen+0x70 : 1e0dc9c >			  ## vfs.c:136:17
 1e0dcac:    03 18             	goto 6 <fopen+0x88 : 1e0dcb4 >			  ## vfs.c:136:17
 1e0dcae:    05 4a             	r5 = [r5 + 0]			  ## vfs.c:141:22
 1e0dcb0:    f2 3b             	if (r5 != 0) goto -28 <fopen+0x6A : 1e0dc96 >
 1e0dcb2:    2f 18             	goto 94 <fopen+0xE6 : 1e0dd12 >
 1e0dcb4:    2e 2a             	if (r5 == 0) goto 92 <fopen+0xE6 : 1e0dd12 >
 1e0dcb6:    97 f3 71 c8       	call 3117282 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0dcba:    00 71             	r0 = 16			  ## vfs.c:159:26
 1e0dcbc:    bf f3 70 ee       	call -8992 <malloc : 1e0b9a0 >			  ## vfs.c:159:26
 1e0dcc0:    09 08             	r9 = r0			  ## vfs.c:159:26
 1e0dcc2:    0c 40             	[r0 + 0] = r4			  ## vfs.c:160:14
 1e0dcc4:    97 f3 68 c8       	call 3117264 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0dcc8:    09 e0 23 00       	if (r9 == 0) goto 70 <fopen+0xE6 : 1e0dd12 >			  ## spinlock.h:88:5
 1e0dccc:    15 f6 08 90       	[r9 + 8] = r5			  ## vfs.c:379:16
 1e0dcd0:    c0 98             	r0 = r4 + 12			  ## vfs.c:380:22
 1e0dcd2:    10 f6 04 90       	[r9 + 4] = r0			  ## vfs.c:380:15
 1e0dcd6:    20 48             	r0 = [r4 + 8]			  ## vfs.c:384:13
 1e0dcd8:    65 40             	r5 = [r0 + 24]			  ## vfs.c:384:18
 1e0dcda:    12 2a             	if (r5 == 0) goto 36 <fopen+0xD4 : 1e0dd00 >
 1e0dcdc:    10 48             	r0 = [r4 + 4]			  ## vfs.c:382:31
 1e0dcde:    97 f3 0d c9       	call 3117594 <strlen : 106efc >			  ## vfs.c:382:20
 1e0dce2:    80 fb 00 6d       	r6 = r13 + r0			  ## vfs.c:382:18
 1e0dce6:    80 08             	r0 = r8			  ## vfs.c:382:43
 1e0dce8:    97 f3 08 c9       	call 3117584 <strlen : 106efc >			  ## vfs.c:382:43
 1e0dcec:    60 09             	r0 += r6			  ## vfs.c:382:37
 1e0dcee:    11 90             	r1 = r0 + 1			  ## vfs.c:382:41
 1e0dcf0:    90 08             	r0 = r9			  ## vfs.c:385:19
 1e0dcf2:    a2 08             	r2 = r10			  ## vfs.c:385:19
 1e0dcf4:    85 00             	call r5			  ## vfs.c:385:19
 1e0dcf6:    04 20             	if (r0 == 0) goto 8 <fopen+0xD4 : 1e0dd00 >
 1e0dcf8:    90 08             	r0 = r9			  ## vfs.c:170:9
 1e0dcfa:    bf f3 56 ee       	call -9044 <free : 1e0b9aa >			  ## vfs.c:170:9
 1e0dcfe:    09 18             	goto 18 <fopen+0xE6 : 1e0dd12 >			  ## vfs.c:170:9
 1e0dd00:    97 f3 4c c8       	call 3117208 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e0dd04:    08 00             	csync			  ## atomic.h:16:5
 1e0dd06:    20 49             	r0 = [r4 + 72]			  ## atomic.h:18:14
 1e0dd08:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e0dd0a:    28 49             	[r4 + 72] = r0			  ## atomic.h:19:16
 1e0dd0c:    97 f3 44 c8       	call 3117192 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e0dd10:    9c 08             	r12 = r9			  ## atomic.h:21:5
 1e0dd12:    b0 08             	r0 = r11
 1e0dd14:    97 f3 88 c8       	call 3117328 <os_mutex_post : 106e28 >
 1e0dd18:    a9 1f             	goto -174 <fopen+0x40 : 1e0dc6c >


fread:
 1e0dd1a:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:405:0
 1e0dd1c:    05 08             	r5 = r0			  ## vfs.c:405:0
 1e0dd1e:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:411:11
 1e0dd20:    26 08             	r6 = r2			  ## vfs.c:411:11
 1e0dd22:    17 08             	r7 = r1
 1e0dd24:    c0 84             	r0 += 76			  ## vfs.c:411:11
 1e0dd26:    01 70             	r1 = 0			  ## vfs.c:411:11
 1e0dd28:    04 70             	r4 = 0			  ## vfs.c:411:11
 1e0dd2a:    97 f3 7b c8       	call 3117302 <os_mutex_pend : 106e24 >			  ## vfs.c:411:11
 1e0dd2e:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:411:11
 1e0dd30:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:411:11
 1e0dd34:    0b 24             	if (r2 == 0) goto 22 <fread+0x32 : 1e0dd4c >
 1e0dd36:    0e 30             	if (r0 != 0) goto 28 <fread+0x3A : 1e0dd54 >
 1e0dd38:    20 42             	r0 = [r1 + 8]			  ## vfs.c:416:19
 1e0dd3a:    73 40             	r3 = [r0 + 28]			  ## vfs.c:416:24
 1e0dd3c:    07 26             	if (r3 == 0) goto 14 <fread+0x32 : 1e0dd4c >			  ## vfs.c:416:24
 1e0dd3e:    50 08             	r0 = r5			  ## vfs.c:417:16
 1e0dd40:    71 08             	r1 = r7			  ## vfs.c:417:16
 1e0dd42:    62 08             	r2 = r6			  ## vfs.c:417:16
 1e0dd44:    83 00             	call r3			  ## vfs.c:417:16
 1e0dd46:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:417:16
 1e0dd48:    04 08             	r4 = r0			  ## vfs.c:417:16
 1e0dd4a:    00 00             	nop
 1e0dd4c:    10 fc 4c 00       	r0 = r1 + 76
 1e0dd50:    97 f3 6a c8       	call 3117268 <os_mutex_post : 106e28 >
 1e0dd54:    40 08             	r0 = r4			  ## vfs.c:423:1
 1e0dd56:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:423:1


fseek:
 1e0dd58:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:469:0
 1e0dd5a:    04 08             	r4 = r0			  ## vfs.c:469:0
 1e0dd5c:    00 48             	r0 = [r4 + 0]			  ## vfs.c:475:11
 1e0dd5e:    25 08             	r5 = r2			  ## vfs.c:475:11
 1e0dd60:    16 08             	r6 = r1
 1e0dd62:    c0 84             	r0 += 76			  ## vfs.c:475:11
 1e0dd64:    01 70             	r1 = 0			  ## vfs.c:475:11
 1e0dd66:    97 f3 5d c8       	call 3117242 <os_mutex_pend : 106e24 >			  ## vfs.c:475:11
 1e0dd6a:    01 48             	r1 = [r4 + 0]			  ## vfs.c:475:11
 1e0dd6c:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:475:11
 1e0dd70:    0c 24             	if (r2 == 0) goto 24 <fseek+0x32 : 1e0dd8a >
 1e0dd72:    d7 06             	r7 = -19
 1e0dd74:    15 30             	if (r0 != 0) goto 42 <fseek+0x48 : 1e0dda0 >
 1e0dd76:    20 42             	r0 = [r1 + 8]			  ## vfs.c:480:19
 1e0dd78:    a3 40             	r3 = [r0 + 40]			  ## vfs.c:480:24
 1e0dd7a:    0d 26             	if (r3 == 0) goto 26 <fseek+0x3E : 1e0dd96 >			  ## vfs.c:480:24
 1e0dd7c:    40 08             	r0 = r4			  ## vfs.c:481:15
 1e0dd7e:    61 08             	r1 = r6			  ## vfs.c:481:15
 1e0dd80:    52 08             	r2 = r5			  ## vfs.c:481:15
 1e0dd82:    83 00             	call r3			  ## vfs.c:481:15
 1e0dd84:    01 48             	r1 = [r4 + 0]			  ## vfs.c:481:15
 1e0dd86:    07 08             	r7 = r0			  ## vfs.c:481:15
 1e0dd88:    07 18             	goto 14 <fseek+0x40 : 1e0dd98 >
 1e0dd8a:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:475:11
 1e0dd8e:    97 f3 4b c8       	call 3117206 <os_mutex_post : 106e28 >			  ## vfs.c:475:11
 1e0dd92:    d7 06             	r7 = -19
 1e0dd94:    05 18             	goto 10 <fseek+0x48 : 1e0dda0 >
 1e0dd96:    07 70             	r7 = 0
 1e0dd98:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:484:30
 1e0dd9c:    97 f3 44 c8       	call 3117192 <os_mutex_post : 106e28 >			  ## vfs.c:484:5
 1e0dda0:    70 08             	r0 = r7			  ## vfs.c:487:1
 1e0dda2:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:487:1


fwrite:
 1e0dda4:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:447:0
 1e0dda6:    05 08             	r5 = r0			  ## vfs.c:447:0
 1e0dda8:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:453:11
 1e0ddaa:    26 08             	r6 = r2			  ## vfs.c:453:11
 1e0ddac:    17 08             	r7 = r1
 1e0ddae:    c0 84             	r0 += 76			  ## vfs.c:453:11
 1e0ddb0:    01 70             	r1 = 0			  ## vfs.c:453:11
 1e0ddb2:    04 70             	r4 = 0			  ## vfs.c:453:11
 1e0ddb4:    97 f3 36 c8       	call 3117164 <os_mutex_pend : 106e24 >			  ## vfs.c:453:11
 1e0ddb8:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:453:11
 1e0ddba:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:453:11
 1e0ddbe:    0b 24             	if (r2 == 0) goto 22 <fwrite+0x32 : 1e0ddd6 >
 1e0ddc0:    0e 30             	if (r0 != 0) goto 28 <fwrite+0x3A : 1e0ddde >
 1e0ddc2:    20 42             	r0 = [r1 + 8]			  ## vfs.c:458:19
 1e0ddc4:    93 40             	r3 = [r0 + 36]			  ## vfs.c:458:24
 1e0ddc6:    07 26             	if (r3 == 0) goto 14 <fwrite+0x32 : 1e0ddd6 >			  ## vfs.c:458:24
 1e0ddc8:    50 08             	r0 = r5			  ## vfs.c:459:16
 1e0ddca:    71 08             	r1 = r7			  ## vfs.c:459:16
 1e0ddcc:    62 08             	r2 = r6			  ## vfs.c:459:16
 1e0ddce:    83 00             	call r3			  ## vfs.c:459:16
 1e0ddd0:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:459:16
 1e0ddd2:    04 08             	r4 = r0			  ## vfs.c:459:16
 1e0ddd4:    00 00             	nop
 1e0ddd6:    10 fc 4c 00       	r0 = r1 + 76
 1e0ddda:    97 f3 25 c8       	call 3117130 <os_mutex_post : 106e28 >
 1e0ddde:    40 08             	r0 = r4			  ## vfs.c:465:1
 1e0dde0:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:465:1


fclose:
 1e0dde2:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:491:0
 1e0dde4:    04 08             	r4 = r0			  ## vfs.c:491:0
 1e0dde6:    00 48             	r0 = [r4 + 0]			  ## vfs.c:496:11
 1e0dde8:    c0 84             	r0 += 76			  ## vfs.c:496:11
 1e0ddea:    01 70             	r1 = 0			  ## vfs.c:496:11
 1e0ddec:    97 f3 1a c8       	call 3117108 <os_mutex_pend : 106e24 >			  ## vfs.c:496:11
 1e0ddf0:    01 48             	r1 = [r4 + 0]			  ## vfs.c:496:11
 1e0ddf2:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:496:11
 1e0ddf6:    05 08             	r5 = r0			  ## vfs.c:496:11
 1e0ddf8:    06 34             	if (r2 != 0) goto 12 <fclose+0x24 : 1e0de06 >
 1e0ddfa:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:496:11
 1e0ddfe:    97 f3 13 c8       	call 3117094 <os_mutex_post : 106e28 >			  ## vfs.c:496:11
 1e0de02:    01 48             	r1 = [r4 + 0]
 1e0de04:    a5 06             	r5 = -22
 1e0de06:    20 42             	r0 = [r1 + 8]			  ## vfs.c:498:19
 1e0de08:    21 41             	r1 = [r0 + 72]			  ## vfs.c:498:24
 1e0de0a:    02 22             	if (r1 == 0) goto 4 <fclose+0x2E : 1e0de10 >			  ## vfs.c:498:24
 1e0de0c:    40 08             	r0 = r4			  ## vfs.c:499:9
 1e0de0e:    81 00             	call r1			  ## vfs.c:499:9
 1e0de10:    04 3a             	if (r5 != 0) goto 8 <fclose+0x38 : 1e0de1a >
 1e0de12:    00 48             	r0 = [r4 + 0]			  ## vfs.c:503:30
 1e0de14:    c0 84             	r0 += 76			  ## vfs.c:503:34
 1e0de16:    97 f3 07 c8       	call 3117070 <os_mutex_post : 106e28 >			  ## vfs.c:503:9
 1e0de1a:    06 48             	r6 = [r4 + 0]			  ## vfs.c:506:23
 1e0de1c:    97 f3 be c7       	call 3116924 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e0de20:    08 00             	csync			  ## atomic.h:32:5
 1e0de22:    20 4d             	r0 = [r6 + 72]			  ## atomic.h:34:14
 1e0de24:    07 fc ff ff       	r7 = r0 + -1			  ## atomic.h:35:22
 1e0de28:    2f 4d             	[r6 + 72] = r7			  ## atomic.h:35:16
 1e0de2a:    97 f3 b5 c7       	call 3116906 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e0de2e:    14 3e             	if (r7 != 0) goto 40 <fclose+0x76 : 1e0de58 >			  ## atomic.h:37:5
 1e0de30:    97 f3 b4 c7       	call 3116904 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0de34:    00 4d             	r0 = [r6 + 64]			  ## list.h:171:36
 1e0de36:    11 4d             	r1 = [r6 + 68]			  ## list.h:171:23
 1e0de38:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0de3a:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0de3c:    60 fc 40 00       	r0 = r6 + 64			  ## vfs.c:80:23
 1e0de40:    08 4d             	[r6 + 64] = r0			  ## list.h:172:17
 1e0de42:    18 4d             	[r6 + 68] = r0			  ## list.h:173:17
 1e0de44:    97 f3 a8 c7       	call 3116880 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0de48:    20 4c             	r0 = [r6 + 8]			  ## vfs.c:82:17
 1e0de4a:    21 40             	r1 = [r0 + 8]			  ## vfs.c:82:22
 1e0de4c:    02 22             	if (r1 == 0) goto 4 <fclose+0x70 : 1e0de52 >			  ## vfs.c:82:22
 1e0de4e:    60 08             	r0 = r6			  ## vfs.c:83:13
 1e0de50:    81 00             	call r1			  ## vfs.c:83:13
 1e0de52:    60 08             	r0 = r6			  ## vfs.c:85:9
 1e0de54:    bf f3 a9 ed       	call -9390 <free : 1e0b9aa >			  ## vfs.c:85:9
 1e0de58:    40 08             	r0 = r4			  ## vfs.c:170:9
 1e0de5a:    bf f3 a6 ed       	call -9396 <free : 1e0b9aa >			  ## vfs.c:170:9
 1e0de5e:    50 08             	r0 = r5			  ## vfs.c:510:5
 1e0de60:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:510:5


fget_attrs:
 1e0de62:    75 01             	[--sp] = {rets, r5, r4}			  ## vfs.c:1118:0
 1e0de64:    04 08             	r4 = r0			  ## vfs.c:1118:0
 1e0de66:    00 48             	r0 = [r4 + 0]			  ## vfs.c:1123:11
 1e0de68:    15 08             	r5 = r1			  ## vfs.c:1123:11
 1e0de6a:    c0 84             	r0 += 76			  ## vfs.c:1123:11
 1e0de6c:    01 70             	r1 = 0			  ## vfs.c:1123:11
 1e0de6e:    97 f3 d9 c7       	call 3116978 <os_mutex_pend : 106e24 >			  ## vfs.c:1123:11
 1e0de72:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1123:11
 1e0de74:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:1123:11
 1e0de78:    0a 24             	if (r2 == 0) goto 20 <fget_attrs+0x2C : 1e0de8e >
 1e0de7a:    0d 30             	if (r0 != 0) goto 26 <fget_attrs+0x34 : 1e0de96 >
 1e0de7c:    00 70             	r0 = 0
 1e0de7e:    08 6a             	b[r5 + 0] = r0			  ## vfs.c:1128:16
 1e0de80:    20 42             	r0 = [r1 + 8]			  ## vfs.c:1130:19
 1e0de82:    a2 41             	r2 = [r0 + 104]			  ## vfs.c:1130:24
 1e0de84:    04 24             	if (r2 == 0) goto 8 <fget_attrs+0x2C : 1e0de8e >			  ## vfs.c:1130:24
 1e0de86:    40 08             	r0 = r4			  ## vfs.c:1131:15
 1e0de88:    51 08             	r1 = r5			  ## vfs.c:1131:15
 1e0de8a:    82 00             	call r2			  ## vfs.c:1131:15
 1e0de8c:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1131:15
 1e0de8e:    10 fc 4c 00       	r0 = r1 + 76
 1e0de92:    97 f3 c9 c7       	call 3116946 <os_mutex_post : 106e28 >
 1e0de96:    55 01             	{pc, r5, r4} = [sp++]


sdfile_cpu_addr2flash_addr:
 1e0de98:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## sdfile_new.c:146:0
 1e0de9e:    02 f6 dc 11       	r2 = [r1 + 476]			  ## sdfile_new.c:147:29
 1e0dea2:    01 f6 d8 11       	r1 = [r1 + 472]			  ## sdfile_new.c:147:48
 1e0dea6:    a0 b0             	r0 = r0 - r2			  ## sdfile_new.c:147:19
 1e0dea8:    10 09             	r0 += r1			  ## sdfile_new.c:147:38
 1e0deaa:    20 00             	rts			  ## sdfile_new.c:147:5


ASCII_StrCmp:
 1e0deac:    74 01             	[--sp] = {rets, r4}			  ## ASCII_lib.c:42:0
 1e0deae:    02 70             	r2 = 0			  ## ASCII_lib.c:42:0
 1e0deb0:    04 fa 00 02       	r4 = b[r0+r2] (u)			  ## ASCII_lib.c:46:14
 1e0deb4:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## ASCII_lib.c:46:14
 1e0deb8:    0f 28             	if (r4 == 0) goto 30 <ASCII_StrCmp+0x2C : 1e0ded8 >			  ## ASCII_lib.c:46:14
 1e0deba:    0f 26             	if (r3 == 0) goto 30 <ASCII_StrCmp+0x2E : 1e0deda >
 1e0debc:    a4 e2 08 00       	if (r4 == 42) goto 16 <ASCII_StrCmp+0x24 : 1e0ded0 >
 1e0dec0:    f4 e3 06 00       	if (r4 == 63) goto 12 <ASCII_StrCmp+0x24 : 1e0ded0 >
 1e0dec4:    a3 e2 04 00       	if (r3 == 42) goto 8 <ASCII_StrCmp+0x24 : 1e0ded0 >
 1e0dec8:    34 f2 02 00       	if (r4 == r3) goto 4 <ASCII_StrCmp+0x24 : 1e0ded0 >
 1e0decc:    f3 e3 05 10       	if (r3 != 63) goto 10 <ASCII_StrCmp+0x2E : 1e0deda >
 1e0ded0:    12 80             	r2 += 1			  ## ASCII_lib.c:45:5
 1e0ded2:    f2 ef ed 1f       	if (r2 != -1) goto -38 <ASCII_StrCmp+0x4 : 1e0deb0 >			  ## ASCII_lib.c:45:5
 1e0ded6:    03 18             	goto 6 <ASCII_StrCmp+0x32 : 1e0dede >			  ## ASCII_lib.c:45:5
 1e0ded8:    02 26             	if (r3 == 0) goto 4 <ASCII_StrCmp+0x32 : 1e0dede >
 1e0deda:    10 94             	r0 = r2 + 1
 1e0dedc:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1
 1e0dede:    00 70             	r0 = 0
 1e0dee0:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1


dev_open:
 1e0dee2:    77 01             	[--sp] = {rets, r7-r4}			  ## device_api.c:21:0
 1e0dee4:    fe 0b             	sp += -4			  ## device_api.c:21:0
 1e0dee6:    15 08             	r5 = r1			  ## device_api.c:21:0
 1e0dee8:    01 08             	r1 = r0			  ## device_api.c:21:0
 1e0deea:    c7 ff 94 b0 e0 01 	r7 = 31502484 <system_code_begin : 1e0b094 >			  ## device_api.c:21:0
 1e0def0:    c6 ff 88 b0 e0 01 	r6 = 31502472 <system_text_start : 1e0b088 >			  ## device_api.c:21:0
 1e0def6:    04 70             	r4 = 0			  ## device_api.c:21:0
 1e0def8:    76 f2 1c 20       	if (r6 >= r7) goto 56 <dev_open+0x52 : 1e0df34 >			  ## device_api.c:21:0
 1e0defc:    00 4c             	r0 = [r6 + 0]			  ## device_api.c:28:30
 1e0defe:    bf f3 d5 ff       	call -86 <ASCII_StrCmp : 1e0deac >			  ## device_api.c:28:14
 1e0df02:    04 20             	if (r0 == 0) goto 8 <dev_open+0x2A : 1e0df0c >			  ## device_api.c:28:14
 1e0df04:    c6 80             	r6 += 12			  ## device_api.c:27:5
 1e0df06:    76 f2 f9 3f       	if (r6 < r7) goto -14 <dev_open+0x1A : 1e0defc >
 1e0df0a:    14 18             	goto 40 <dev_open+0x52 : 1e0df34 >
 1e0df0c:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:29:22
 1e0df0e:    23 40             	r3 = [r0 + 8]			  ## device_api.c:29:27
 1e0df10:    02 a0             	r2 = sp + 0			  ## device_api.c:29:27
 1e0df12:    10 08             	r0 = r1			  ## device_api.c:29:19
 1e0df14:    21 08             	r1 = r2			  ## device_api.c:29:19
 1e0df16:    52 08             	r2 = r5			  ## device_api.c:29:19
 1e0df18:    83 00             	call r3			  ## device_api.c:29:19
 1e0df1a:    0c 30             	if (r0 != 0) goto 24 <dev_open+0x52 : 1e0df34 >
 1e0df1c:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:34:30
 1e0df1e:    04 02             	r4 = [sp]			  ## device_api.c:34:13
 1e0df20:    28 48             	[r4 + 8] = r0			  ## device_api.c:34:25
 1e0df22:    97 f3 3b c7       	call 3116662 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e0df26:    08 00             	csync			  ## atomic.h:16:5
 1e0df28:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e0df2a:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e0df2c:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e0df2e:    97 f3 33 c7       	call 3116646 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e0df32:    04 02             	r4 = [sp]			  ## device_api.c:37:20
 1e0df34:    40 08             	r0 = r4			  ## device_api.c:42:1
 1e0df36:    02 0a             	sp += 4			  ## device_api.c:42:1
 1e0df38:    57 01             	{pc, r7-r4} = [sp++]			  ## device_api.c:42:1


dev_close:
 1e0df3a:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:111:0
 1e0df3c:    04 08             	r4 = r0			  ## device_api.c:111:0
 1e0df3e:    97 f3 2d c7       	call 3116634 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e0df42:    08 00             	csync			  ## atomic.h:32:5
 1e0df44:    00 48             	r0 = [r4 + 0]			  ## atomic.h:34:14
 1e0df46:    05 fc ff ff       	r5 = r0 + -1			  ## atomic.h:35:22
 1e0df4a:    0d 48             	[r4 + 0] = r5			  ## atomic.h:35:16
 1e0df4c:    97 f3 24 c7       	call 3116616 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e0df50:    05 3a             	if (r5 != 0) goto 10 <dev_close+0x22 : 1e0df5c >			  ## atomic.h:37:5
 1e0df52:    20 48             	r0 = [r4 + 8]			  ## device_api.c:115:21
 1e0df54:    71 40             	r1 = [r0 + 28]			  ## device_api.c:115:26
 1e0df56:    02 22             	if (r1 == 0) goto 4 <dev_close+0x22 : 1e0df5c >			  ## device_api.c:115:26
 1e0df58:    40 08             	r0 = r4			  ## device_api.c:116:20
 1e0df5a:    81 00             	call r1			  ## device_api.c:116:20
 1e0df5c:    55 01             	{pc, r5, r4} = [sp++]


devices_init:
 1e0df5e:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:150:0
 1e0df60:    c5 ff 94 b0 e0 01 	r5 = 31502484 <system_code_begin : 1e0b094 >			  ## device_api.c:150:0
 1e0df66:    c4 ff 88 b0 e0 01 	r4 = 31502472 <system_text_start : 1e0b088 >			  ## device_api.c:150:0
 1e0df6c:    54 f2 0d 20       	if (r4 >= r5) goto 26 <devices_init+0x2C : 1e0df8a >			  ## device_api.c:150:0
 1e0df70:    10 48             	r0 = [r4 + 4]			  ## device_api.c:156:18
 1e0df72:    08 20             	if (r0 == 0) goto 16 <devices_init+0x26 : 1e0df84 >
 1e0df74:    12 40             	r2 = [r0 + 4]			  ## device_api.c:157:25
 1e0df76:    06 24             	if (r2 == 0) goto 12 <devices_init+0x26 : 1e0df84 >			  ## device_api.c:157:25
 1e0df78:    21 48             	r1 = [r4 + 8]			  ## device_api.c:159:35
 1e0df7a:    40 08             	r0 = r4			  ## device_api.c:159:19
 1e0df7c:    82 00             	call r2			  ## device_api.c:159:19
 1e0df7e:    02 20             	if (r0 == 0) goto 4 <devices_init+0x26 : 1e0df84 >
 1e0df80:    8f f3 49 aa       	call 2053266 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0df84:    c4 80             	r4 += 12			  ## device_api.c:155:5
 1e0df86:    54 f2 f3 3f       	if (r4 < r5) goto -26 <devices_init+0x12 : 1e0df70 >
 1e0df8a:    55 01             	{pc, r5, r4} = [sp++]


boot_info_init:
 1e0df8c:    21 40             	r1 = [r0 + 8]			  ## init.c:120:0
 1e0df8e:    12 40             	r2 = [r0 + 4]			  ## init.c:123:5
 1e0df90:    c3 ff 00 08 00 00 	r3 = 2048 <report_mmu_tlb_size : 800 >			  ## init.c:123:5
 1e0df96:    59 46             	[r3 + 20] = r1			  ## init.c:123:5
 1e0df98:    4a 46             	[r3 + 16] = r2			  ## init.c:123:5
 1e0df9a:    01 40             	r1 = [r0 + 0]			  ## init.c:124:34
 1e0df9c:    22 42             	r2 = [r1 + 8]			  ## init.c:124:43
 1e0df9e:    6a 46             	[r3 + 24] = r2			  ## init.c:124:26
 1e0dfa0:    d1 62             	r1 = b[r1 + 13] (u)			  ## init.c:125:41
 1e0dfa2:    09 66             	b[r3 + 0] = r1			  ## init.c:125:24
 1e0dfa4:    61 50             	r1 = h[r0 + 12] (u)			  ## init.c:126:31
 1e0dfa6:    e9 56             	h[r3 + 28] = r1			  ## init.c:126:23
 1e0dfa8:    71 50             	r1 = h[r0 + 14] (u)			  ## init.c:127:34
 1e0dfaa:    f9 56             	h[r3 + 30] = r1			  ## init.c:127:26
 1e0dfac:    51 40             	r1 = [r0 + 20]			  ## init.c:128:5
 1e0dfae:    40 40             	r0 = [r0 + 16]			  ## init.c:128:5
 1e0dfb0:    99 46             	[r3 + 36] = r1			  ## init.c:128:5
 1e0dfb2:    88 46             	[r3 + 32] = r0			  ## init.c:128:5
 1e0dfb4:    20 00             	rts			  ## init.c:134:1


main:
 1e0dfb6:    34 00             	[--sp] = rets			  ## init.c:193:0
 1e0dfb8:    bf f3 25 ab       	call -43446 <wdt_close : 1e03606 >			  ## init.c:194:5
 1e0dfbc:    97 f3 f2 c6       	call 3116516 <os_init : 106da4 >			  ## init.c:196:5
 1e0dfc0:    bf f3 02 ad       	call -42492 <setup_arch : 1e039c8 >			  ## init.c:198:5
 1e0dfc4:    c0 ff a6 e0 e0 01 	r0 = 31514790 <app_task_handler : 1e0e0a6 >			  ## init.c:202:5
 1e0dfca:    c2 ff 37 f1 e0 01 	r2 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >			  ## init.c:202:5
 1e0dfd0:    01 70             	r1 = 0			  ## init.c:202:5
 1e0dfd2:    bf f3 6b f6       	call -4906 <task_create : 1e0ccac >			  ## init.c:202:5
 1e0dfd6:    97 f3 e7 c6       	call 3116494 <os_start : 106da8 >			  ## init.c:204:5
 1e0dfda:    02 00             	idle			  ## init.c:209:9
 1e0dfdc:    fe 1f             	goto -4 <main+0x24 : 1e0dfda >			  ## init.c:208:5


app_task_init:
 1e0dfde:    75 01             	[--sp] = {rets, r5, r4}			  ## init.c:64:0
 1e0dfe0:    c4 ff 44 e8 e0 01 	r4 = 31516740 <late_initcall_begin : 1e0e844 >			  ## init.c:64:0
 1e0dfe6:    c5 ff 3c e8 e0 01 	r5 = 31516732 <initcall_end : 1e0e83c >			  ## init.c:64:0
 1e0dfec:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x1C : 1e0dffa >			  ## init.c:64:0
 1e0dff0:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:29:5
 1e0dff4:    80 00             	call r0			  ## init.c:29:5
 1e0dff6:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x12 : 1e0dff0 >
 1e0dffa:    c4 ff 4c e8 e0 01 	r4 = 31516748 <syscfg_ops_begin : 1e0e84c >
 1e0e000:    c5 ff 48 e8 e0 01 	r5 = 31516744 <platform_initcall_begin : 1e0e848 >
 1e0e006:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x36 : 1e0e014 >
 1e0e00a:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:39:5
 1e0e00e:    80 00             	call r0			  ## init.c:39:5
 1e0e010:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x2C : 1e0e00a >
 1e0e014:    bf f3 55 b2       	call -39766 <board_init : 1e044c2 >			  ## init.c:69:5
 1e0e018:    c4 ff 3c e8 e0 01 	r4 = 31516732 <initcall_end : 1e0e83c >			  ## init.c:69:5
 1e0e01e:    c5 ff 38 e8 e0 01 	r5 = 31516728 <initcall_begin : 1e0e838 >			  ## init.c:69:5
 1e0e024:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x54 : 1e0e032 >
 1e0e028:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:24:5
 1e0e02c:    80 00             	call r0			  ## init.c:24:5
 1e0e02e:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x4A : 1e0e028 >
 1e0e032:    c4 ff 4c e8 e0 01 	r4 = 31516748 <syscfg_ops_begin : 1e0e84c >
 1e0e038:    c5 ff 4c e8 e0 01 	r5 = 31516748 <syscfg_ops_begin : 1e0e84c >
 1e0e03e:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x6E : 1e0e04c >
 1e0e042:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:44:5
 1e0e046:    80 00             	call r0			  ## init.c:44:5
 1e0e048:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x64 : 1e0e042 >
 1e0e04c:    c4 ff 48 e8 e0 01 	r4 = 31516744 <platform_initcall_begin : 1e0e848 >
 1e0e052:    c5 ff 44 e8 e0 01 	r5 = 31516740 <late_initcall_begin : 1e0e844 >
 1e0e058:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x88 : 1e0e066 >
 1e0e05c:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:34:5
 1e0e060:    80 00             	call r0			  ## init.c:34:5
 1e0e062:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x7E : 1e0e05c >
 1e0e066:    c0 ff 78 08 00 00 	r0 = 2168 <head : 878 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e0e06c:    08 40             	[r0 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:188:16
 1e0e06e:    18 40             	[r0 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e0e070:    c0 ff fc 20 00 00 	r0 = 8444 <mutex.1037 : 20fc >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e0e076:    97 f3 d1 c6       	call 3116450 <os_mutex_create : 106e1c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e0e07a:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e0e080:    c1 ff b4 09 00 00 	r1 = 2484 <system_data_start : 9b4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:443:5
 1e0e086:    01 f2 09 20       	if (r1 >= r0) goto 18 <app_task_init+0xBE : 1e0e09c >
 1e0e08a:    01 81             	r1 += 16
 1e0e08c:    09 42             	[r1 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:188:16
 1e0e08e:    02 93             	r2 = r1 + 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:445:5
 1e0e090:    13 fc 20 00       	r3 = r1 + 32			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:445:5
 1e0e094:    19 42             	[r1 + 4] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e0e096:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e0e098:    02 f2 f8 3f       	if (r2 < r0) goto -16 <app_task_init+0xAE : 1e0e08c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:189:16
 1e0e09c:    bf f3 c4 f5       	call -5240 <register_sys_event_handler : 1e0cc28 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:449:5
 1e0e0a0:    15 01             	{rets, r5, r4} = [sp++]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:451:5
 1e0e0a2:    ff f3 d7 b3       	goto -38994 <app_main : 1e04854 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/system/app_core/app_core.c:451:5


app_task_handler:
 1e0e0a6:    c0 0b             	sp += -128			  ## init.c:80:0
 1e0e0a8:    9a 17             	call -204 <app_task_init : 1e0dfde >			  ## init.c:84:5
 1e0e0aa:    c4 ff 1d f1 e0 01 	r4 = 31519005 <bluetooth_base_uuid+0x113 : 1e0f11d >
 1e0e0b0:    01 a0             	r1 = sp + 0
 1e0e0b2:    02 72             	r2 = 32			  ## init.c:87:15
 1e0e0b4:    40 08             	r0 = r4			  ## init.c:87:15
 1e0e0b6:    97 f3 8d c6       	call 3116314 <os_task_pend : 106dd4 >			  ## init.c:87:15
 1e0e0ba:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <app_task_handler+0xA : 1e0e0b0 >			  ## init.c:88:13
 1e0e0be:    00 a0             	r0 = sp + 0
 1e0e0c0:    bf f3 5c f7       	call -4424 <app_core_msg_handler : 1e0cf7c >			  ## init.c:91:9
 1e0e0c4:    f5 1f             	goto -22 <app_task_handler+0xA : 1e0e0b0 >			  ## init.c:91:9


skip_atoi:
 1e0e0c6:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:18:0
 1e0e0c8:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:20:12
 1e0e0ca:    81 f9 01 20       	r1 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0e0ce:    01 8d             	r1 += -48			  ## printf-stdarg.c:20:12
 1e0e0d0:    43 04             	r3 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0e0d2:    01 70             	r1 = 0			  ## printf-stdarg.c:20:12
 1e0e0d4:    93 e0 0f 80       	if (r3 > 9) goto 30 <skip_atoi+0x30 : 1e0e0f6 >			  ## printf-stdarg.c:20:12
 1e0e0d8:    a3 70             	r3 = 10
 1e0e0da:    0a 40             	[r0 + 0] = r2			  ## printf-stdarg.c:21:29
 1e0e0dc:    24 f9 ff 2f       	r4 = b[r2 + -1] (s)			  ## printf-stdarg.c:21:22
 1e0e0e0:    85 f9 01 20       	r5 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0e0e4:    80 fe 30 41       	r4 += r1 * r3			  ## printf-stdarg.c:21:20
 1e0e0e8:    51 fc d0 ff       	r1 = r5 + -48			  ## printf-stdarg.c:20:12
 1e0e0ec:    45 04             	r5 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0e0ee:    41 fc d0 ff       	r1 = r4 + -48			  ## printf-stdarg.c:21:33
 1e0e0f2:    a5 e0 f2 3f       	if (r5 < 10) goto -28 <skip_atoi+0x14 : 1e0e0da >
 1e0e0f6:    10 08             	r0 = r1			  ## printf-stdarg.c:23:5
 1e0e0f8:    55 01             	{pc, r5, r4} = [sp++]			  ## printf-stdarg.c:23:5


printchar:
 1e0e0fa:    74 01             	[--sp] = {rets, r4}			  ## printf-stdarg.c:29:0
 1e0e0fc:    13 70             	r3 = 1			  ## printf-stdarg.c:29:0
 1e0e0fe:    0a 20             	if (r0 == 0) goto 20 <printchar+0x1A : 1e0e114 >			  ## printf-stdarg.c:29:0
 1e0e100:    04 40             	r4 = [r0 + 0]			  ## printf-stdarg.c:29:0
 1e0e102:    03 22             	if (r1 == 0) goto 6 <printchar+0x10 : 1e0e10a >			  ## printf-stdarg.c:29:0
 1e0e104:    03 70             	r3 = 0			  ## printf-stdarg.c:29:0
 1e0e106:    14 f2 05 20       	if (r4 >= r1) goto 10 <printchar+0x1A : 1e0e114 >			  ## printf-stdarg.c:29:0
 1e0e10a:    0a 68             	b[r4 + 0] = r2			  ## printf-stdarg.c:34:15
 1e0e10c:    01 40             	r1 = [r0 + 0]			  ## printf-stdarg.c:35:9
 1e0e10e:    11 80             	r1 += 1			  ## printf-stdarg.c:35:9
 1e0e110:    09 40             	[r0 + 0] = r1			  ## printf-stdarg.c:35:9
 1e0e112:    13 70             	r3 = 1			  ## printf-stdarg.c:35:9
 1e0e114:    30 08             	r0 = r3			  ## printf-stdarg.c:45:1
 1e0e116:    54 01             	{pc, r4} = [sp++]			  ## printf-stdarg.c:45:1


prints:
 1e0e118:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:57:0
 1e0e11a:    34 08             	r4 = r3			  ## printf-stdarg.c:57:0
 1e0e11c:    27 08             	r7 = r2			  ## printf-stdarg.c:57:0
 1e0e11e:    19 08             	r9 = r1			  ## printf-stdarg.c:57:0
 1e0e120:    0a 08             	r10 = r0			  ## printf-stdarg.c:57:0
 1e0e122:    14 e0 24 b0       	ifs (r4 < 1) goto 72 <prints+0x56 : 1e0e16e >			  ## printf-stdarg.c:57:0
 1e0e126:    71 08             	r1 = r7			  ## printf-stdarg.c:63:28
 1e0e128:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## printf-stdarg.c:63:28
 1e0e12c:    05 70             	r5 = 0			  ## printf-stdarg.c:63:28
 1e0e12e:    00 70             	r0 = 0			  ## printf-stdarg.c:63:28
 1e0e130:    04 24             	if (r2 == 0) goto 8 <prints+0x22 : 1e0e13a >			  ## printf-stdarg.c:63:28
 1e0e132:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## printf-stdarg.c:63:28
 1e0e136:    10 80             	r0 += 1			  ## printf-stdarg.c:64:13
 1e0e138:    fc 35             	if (r2 != 0) goto -8 <prints+0x1A : 1e0e132 >
 1e0e13a:    82 02             	r2 = [sp+32]
 1e0e13c:    26 b8             	r6 = r4 - r0			  ## printf-stdarg.c:69:19
 1e0e13e:    61 08             	r1 = r6			  ## printf-stdarg.c:66:13
 1e0e140:    40 f2 01 b0       	ifs (r0 < r4) goto 2 <prints+0x2E : 1e0e146 >			  ## printf-stdarg.c:66:13
 1e0e144:    01 70             	r1 = 0			  ## printf-stdarg.c:66:13
 1e0e146:    d0 c0             	r0 = r2 << 3			  ## printf-stdarg.c:71:13
 1e0e148:    20 fd 10 09       	r0 = r0 & 16			  ## printf-stdarg.c:71:13
 1e0e14c:    08 fd 20 09       	r8 = r0 | 32			  ## printf-stdarg.c:71:13
 1e0e150:    20 f3 10 20       	if ((r2 & 1) != 0) goto 32 <prints+0x5C : 1e0e174 >
 1e0e154:    11 e0 0e b0       	ifs (r1 < 1) goto 28 <prints+0x5C : 1e0e174 >
 1e0e158:    a0 08             	r0 = r10			  ## printf-stdarg.c:77:17
 1e0e15a:    91 08             	r1 = r9			  ## printf-stdarg.c:77:17
 1e0e15c:    82 08             	r2 = r8			  ## printf-stdarg.c:77:17
 1e0e15e:    cd 17             	call -102 <printchar : 1e0e0fa >			  ## printf-stdarg.c:77:17
 1e0e160:    04 20             	if (r0 == 0) goto 8 <prints+0x52 : 1e0e16a >			  ## printf-stdarg.c:77:17
 1e0e162:    f6 8f             	r6 += -1			  ## printf-stdarg.c:76:27
 1e0e164:    15 80             	r5 += 1			  ## printf-stdarg.c:80:13
 1e0e166:    06 e0 f7 cf       	ifs (r6 > 0) goto -18 <prints+0x40 : 1e0e158 >
 1e0e16a:    64 08             	r4 = r6
 1e0e16c:    04 18             	goto 8 <prints+0x5E : 1e0e176 >
 1e0e16e:    05 70             	r5 = 0
 1e0e170:    08 72             	r8 = 32
 1e0e172:    01 18             	goto 2 <prints+0x5E : 1e0e176 >
 1e0e174:    14 08             	r4 = r1
 1e0e176:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0e17a:    09 20             	if (r0 == 0) goto 18 <prints+0x76 : 1e0e18e >
 1e0e17c:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:84:33
 1e0e17e:    a0 08             	r0 = r10			  ## printf-stdarg.c:84:13
 1e0e180:    91 08             	r1 = r9			  ## printf-stdarg.c:84:13
 1e0e182:    bb 17             	call -138 <printchar : 1e0e0fa >			  ## printf-stdarg.c:84:13
 1e0e184:    04 20             	if (r0 == 0) goto 8 <prints+0x76 : 1e0e18e >			  ## printf-stdarg.c:84:13
 1e0e186:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0e18a:    15 80             	r5 += 1			  ## printf-stdarg.c:87:9
 1e0e18c:    f7 31             	if (r0 != 0) goto -18 <prints+0x64 : 1e0e17c >
 1e0e18e:    14 e0 09 b0       	ifs (r4 < 1) goto 18 <prints+0x8C : 1e0e1a4 >
 1e0e192:    a0 08             	r0 = r10			  ## printf-stdarg.c:90:13
 1e0e194:    91 08             	r1 = r9			  ## printf-stdarg.c:90:13
 1e0e196:    82 08             	r2 = r8			  ## printf-stdarg.c:90:13
 1e0e198:    b0 17             	call -160 <printchar : 1e0e0fa >			  ## printf-stdarg.c:90:13
 1e0e19a:    04 20             	if (r0 == 0) goto 8 <prints+0x8C : 1e0e1a4 >			  ## printf-stdarg.c:90:13
 1e0e19c:    f4 8f             	r4 += -1			  ## printf-stdarg.c:89:23
 1e0e19e:    15 80             	r5 += 1			  ## printf-stdarg.c:93:9
 1e0e1a0:    04 e0 f7 cf       	ifs (r4 > 0) goto -18 <prints+0x7A : 1e0e192 >
 1e0e1a4:    50 08             	r0 = r5			  ## printf-stdarg.c:96:5
 1e0e1a6:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:96:5


printi:
 1e0e1a8:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:103:0
 1e0e1aa:    f8 0b             	sp += -16			  ## printf-stdarg.c:103:0
 1e0e1ac:    0a f5 38 00       	r10 = [sp+56]			  ## printf-stdarg.c:103:0
 1e0e1b0:    d4 02             	r4 = [sp+52]			  ## printf-stdarg.c:103:0
 1e0e1b2:    18 08             	r8 = r1			  ## printf-stdarg.c:103:0
 1e0e1b4:    09 08             	r9 = r0			  ## printf-stdarg.c:103:0
 1e0e1b6:    37 24             	if (r2 == 0) goto 110 <printi+0x7E : 1e0e226 >			  ## printf-stdarg.c:103:0
 1e0e1b8:    c5 02             	r5 = [sp+48]			  ## printf-stdarg.c:103:0
 1e0e1ba:    00 70             	r0 = 0			  ## printf-stdarg.c:103:0
 1e0e1bc:    d0 f5 0f 00       	b[sp+15] = r0			  ## printf-stdarg.c:121:8
 1e0e1c0:    10 70             	r0 = 1			  ## printf-stdarg.c:121:8
 1e0e1c2:    11 70             	r1 = 1			  ## printf-stdarg.c:115:9
 1e0e1c4:    01 3a             	if (r5 != 0) goto 2 <printi+0x20 : 1e0e1c8 >			  ## printf-stdarg.c:115:9
 1e0e1c6:    01 70             	r1 = 0			  ## printf-stdarg.c:115:9
 1e0e1c8:    a3 e0 01 00       	if (r3 == 10) goto 2 <printi+0x26 : 1e0e1ce >
 1e0e1cc:    00 70             	r0 = 0			  ## printf-stdarg.c:115:17
 1e0e1ce:    50 b3             	r0 &= r1			  ## printf-stdarg.c:115:12
 1e0e1d0:    61 fb 00 29       	r1 = 0 - r2			  ## printf-stdarg.c:117:13
 1e0e1d4:    d6 d7             	r6 = r2 >> 31			  ## printf-stdarg.c:115:28
 1e0e1d6:    06 f1 01 00       	if ((r6 & r0) != 0) goto 2 <printi+0x34 : 1e0e1dc >			  ## printf-stdarg.c:115:28
 1e0e1da:    21 08             	r1 = r2
 1e0e1dc:    50 bd             	r0 &= r6			  ## printf-stdarg.c:115:12
 1e0e1de:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:115:12
 1e0e1e0:    b7 94             	r7 = r2 + 11			  ## printf-stdarg.c:120:35
 1e0e1e2:    13 22             	if (r1 == 0) goto 38 <printi+0x62 : 1e0e20a >
 1e0e1e4:    f2 02             	r2 = [sp+60]
 1e0e1e6:    25 fc c6 00       	r5 = r2 + 198
 1e0e1ea:    16 08             	r6 = r1
 1e0e1ec:    d0 fe 30 16       	r1 = r6 % r3 (u)			  ## printf-stdarg.c:124:15
 1e0e1f0:    52 08             	r2 = r5			  ## printf-stdarg.c:125:13
 1e0e1f2:    91 e0 01 c0       	ifs (r1 > 9) goto 2 <printi+0x50 : 1e0e1f8 >
 1e0e1f6:    02 70             	r2 = 0
 1e0e1f8:    21 09             	r1 += r2			  ## printf-stdarg.c:125:13
 1e0e1fa:    01 83             	r1 += 48			  ## printf-stdarg.c:128:18
 1e0e1fc:    11 f9 ff 7f       	b[r7 + -1] = r1			  ## printf-stdarg.c:128:14
 1e0e200:    c0 fe 30 16       	r1 = r6 / r3 (u)			  ## printf-stdarg.c:129:11
 1e0e204:    f7 8f             	r7 += -1			  ## printf-stdarg.c:128:10
 1e0e206:    36 f2 f0 2f       	if (r6 >= r3) goto -32 <printi+0x42 : 1e0e1ea >
 1e0e20a:    06 70             	r6 = 0
 1e0e20c:    1d 20             	if (r0 == 0) goto 58 <printi+0xA0 : 1e0e248 >
 1e0e20e:    18 28             	if (r4 == 0) goto 48 <printi+0x98 : 1e0e240 >
 1e0e210:    01 f3 16 a0       	if ((r10 & 2) == 0) goto 44 <printi+0x98 : 1e0e240 >
 1e0e214:    d2 72             	r2 = 45			  ## printf-stdarg.c:134:17
 1e0e216:    90 08             	r0 = r9			  ## printf-stdarg.c:134:17
 1e0e218:    81 08             	r1 = r8			  ## printf-stdarg.c:134:17
 1e0e21a:    6f 17             	call -290 <printchar : 1e0e0fa >			  ## printf-stdarg.c:134:17
 1e0e21c:    16 70             	r6 = 1			  ## printf-stdarg.c:134:17
 1e0e21e:    01 30             	if (r0 != 0) goto 2 <printi+0x7A : 1e0e222 >
 1e0e220:    06 70             	r6 = 0			  ## printf-stdarg.c:134:17
 1e0e222:    a4 b9             	r4 = r4 - r6			  ## printf-stdarg.c:134:17
 1e0e224:    11 18             	goto 34 <printi+0xA0 : 1e0e248 >
 1e0e226:    00 73             	r0 = 48			  ## printf-stdarg.c:110:22
 1e0e228:    d0 f5 04 00       	b[sp+4] = r0			  ## printf-stdarg.c:110:22
 1e0e22c:    00 70             	r0 = 0			  ## printf-stdarg.c:110:22
 1e0e22e:    d0 f5 05 00       	b[sp+5] = r0			  ## printf-stdarg.c:111:22
 1e0e232:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:111:22
 1e0e234:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:112:16
 1e0e238:    90 08             	r0 = r9			  ## printf-stdarg.c:112:16
 1e0e23a:    43 08             	r3 = r4			  ## printf-stdarg.c:112:16
 1e0e23c:    6d 17             	call -294 <prints : 1e0e118 >			  ## printf-stdarg.c:112:16
 1e0e23e:    0c 18             	goto 24 <printi+0xB0 : 1e0e258 >			  ## printf-stdarg.c:112:16
 1e0e240:    d0 72             	r0 = 45			  ## printf-stdarg.c:139:18
 1e0e242:    10 f9 ff 7f       	b[r7 + -1] = r0			  ## printf-stdarg.c:139:18
 1e0e246:    f7 8f             	r7 += -1			  ## printf-stdarg.c:139:14
 1e0e248:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:143:17
 1e0e24c:    90 08             	r0 = r9			  ## printf-stdarg.c:143:17
 1e0e24e:    81 08             	r1 = r8			  ## printf-stdarg.c:143:17
 1e0e250:    72 08             	r2 = r7			  ## printf-stdarg.c:143:17
 1e0e252:    43 08             	r3 = r4			  ## printf-stdarg.c:143:17
 1e0e254:    61 17             	call -318 <prints : 1e0e118 >			  ## printf-stdarg.c:143:17
 1e0e256:    60 09             	r0 += r6			  ## printf-stdarg.c:143:15
 1e0e258:    08 0a             	sp += 16
 1e0e25a:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:144:1


print:
 1e0e25c:    7d 01             	[--sp] = {rets, r13-r4}			  ## printf-stdarg.c:147:0
 1e0e25e:    f2 0b             	sp += -28			  ## printf-stdarg.c:147:0
 1e0e260:    1d 08             	r13 = r1			  ## printf-stdarg.c:147:0
 1e0e262:    04 08             	r4 = r0			  ## printf-stdarg.c:147:0
 1e0e264:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:147:0
 1e0e266:    5b 02             	[sp+20] = r3			  ## printf-stdarg.c:147:0
 1e0e268:    08 70             	r8 = 0			  ## printf-stdarg.c:147:0
 1e0e26a:    19 74             	r9 = 65			  ## printf-stdarg.c:147:0
 1e0e26c:    1a 76             	r10 = 97			  ## printf-stdarg.c:147:0
 1e0e26e:    1b 70             	r11 = 1			  ## printf-stdarg.c:147:0
 1e0e270:    cc ff 23 f1 e0 01 	r12 = 31519011 <bluetooth_base_uuid+0x119 : 1e0f123 >			  ## printf-stdarg.c:147:0
 1e0e276:    06 70             	r6 = 0			  ## printf-stdarg.c:147:0
 1e0e278:    07 19             	goto 526 <.GJTIE425_0_0_+0x154 : 1e0e488 >			  ## printf-stdarg.c:147:0
 1e0e27a:    11 94             	r1 = r2 + 1			  ## printf-stdarg.c:154:13
 1e0e27c:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:154:13
 1e0e27e:    13 64             	r3 = b[r2 + 1] (u)			  ## printf-stdarg.c:156:17
 1e0e280:    53 e2 06 00       	if (r3 == 37) goto 12 <print+0x34 : 1e0e290 >
 1e0e284:    d3 e2 0b 00       	if (r3 == 45) goto 22 <print+0x42 : 1e0e29e >
 1e0e288:    03 e0 02 01       	if (r3 == 0) goto 516 <.GJTIE425_0_0_+0x15C : 1e0e490 >
 1e0e28c:    05 70             	r5 = 0
 1e0e28e:    0b 18             	goto 22 <print+0x4A : 1e0e2a6 >
 1e0e290:    50 72             	r0 = 37
 1e0e292:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:276:39
 1e0e294:    40 08             	r0 = r4			  ## printf-stdarg.c:276:19
 1e0e296:    d1 08             	r1 = r13			  ## printf-stdarg.c:276:19
 1e0e298:    30 17             	call -416 <printchar : 1e0e0fa >			  ## printf-stdarg.c:276:19
 1e0e29a:    06 09             	r6 += r0
 1e0e29c:    4b 18             	goto 150 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e29e:    21 94             	r1 = r2 + 2			  ## printf-stdarg.c:163:17
 1e0e2a0:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:163:17
 1e0e2a2:    23 64             	r3 = b[r2 + 2] (u)
 1e0e2a4:    15 70             	r5 = 1
 1e0e2a6:    03 e3 09 10       	if (r3 != 48) goto 18 <print+0x60 : 1e0e2bc >
 1e0e2aa:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:167:17
 1e0e2ac:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:167:17
 1e0e2ae:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## printf-stdarg.c:166:20
 1e0e2b2:    95 b0             	r5 |= 2			  ## printf-stdarg.c:168:21
 1e0e2b4:    03 e3 fa 0f       	if (r3 == 48) goto -12 <print+0x50 : 1e0e2ac >			  ## printf-stdarg.c:166:13
 1e0e2b8:    01 fc ff ff       	r1 = r0 + -1			  ## printf-stdarg.c:148:18
 1e0e2bc:    30 fc d0 ff       	r0 = r3 + -48			  ## printf-stdarg.c:172:17
 1e0e2c0:    00 04             	r0 = r0.b0 (u)			  ## printf-stdarg.c:172:17
 1e0e2c2:    f7 07             	r7 = -1			  ## printf-stdarg.c:172:17
 1e0e2c4:    90 e0 05 80       	if (r0 > 9) goto 10 <print+0x76 : 1e0e2d2 >			  ## printf-stdarg.c:172:17
 1e0e2c8:    80 a1             	r0 = sp + 24
 1e0e2ca:    fd 16             	call -518 <skip_atoi : 1e0e0c6 >			  ## printf-stdarg.c:173:25
 1e0e2cc:    61 02             	r1 = [sp+24]
 1e0e2ce:    03 62             	r3 = b[r1 + 0] (u)
 1e0e2d0:    07 08             	r7 = r0			  ## printf-stdarg.c:173:25
 1e0e2d2:    e3 e2 0c 10       	if (r3 != 46) goto 24 <print+0x92 : 1e0e2ee >
 1e0e2d6:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:178:17
 1e0e2d8:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:178:17
 1e0e2da:    12 62             	r2 = b[r1 + 1] (u)			  ## printf-stdarg.c:179:21
 1e0e2dc:    23 fc d0 ff       	r3 = r2 + -48			  ## printf-stdarg.c:179:21
 1e0e2e0:    c3 04             	r3 = r3.b0 (u)			  ## printf-stdarg.c:179:21
 1e0e2e2:    93 e0 32 80       	if (r3 > 9) goto 100 <.GJTIE425_0_0_+0x16 : 1e0e34a >			  ## printf-stdarg.c:179:21
 1e0e2e6:    80 a1             	r0 = sp + 24
 1e0e2e8:    ee 16             	call -548 <skip_atoi : 1e0e0c6 >			  ## printf-stdarg.c:180:33
 1e0e2ea:    60 02             	r0 = [sp+24]
 1e0e2ec:    01 18             	goto 2 <print+0x94 : 1e0e2f0 >
 1e0e2ee:    10 08             	r0 = r1			  ## printf-stdarg.c:250:18
 1e0e2f0:    01 60             	r1 = b[r0 + 0] (u)
 1e0e2f2:    31 e6 15 c0       	ifs (r1 > 99) goto 42 <print+0xC4 : 1e0e320 >			  ## printf-stdarg.c:193:17
 1e0e2f6:    c1 e4 30 00       	if (r1 == 76) goto 96 <.GJTIE425_0_0_+0x26 : 1e0e35a >
 1e0e2fa:    81 e5 43 00       	if (r1 == 88) goto 134 <.GJTIE425_0_0_+0x50 : 1e0e384 >
 1e0e2fe:    31 e6 19 10       	if (r1 != 99) goto 50 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e302:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:252:32
 1e0e304:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:252:32
 1e0e306:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:252:32
 1e0e308:    00 40             	r0 = [r0 + 0]			  ## printf-stdarg.c:252:32
 1e0e30a:    d0 f5 12 00       	b[sp+18] = r0			  ## printf-stdarg.c:252:24
 1e0e30e:    d8 f5 13 00       	b[sp+19] = r8			  ## printf-stdarg.c:253:24
 1e0e312:    22 a1             	r2 = sp + 18			  ## printf-stdarg.c:253:24
 1e0e314:    0d 02             	[sp] = r5			  ## printf-stdarg.c:254:23
 1e0e316:    40 08             	r0 = r4
 1e0e318:    d1 08             	r1 = r13
 1e0e31a:    73 08             	r3 = r7
 1e0e31c:    fd 16             	call -518 <prints : 1e0e118 >
 1e0e31e:    bd 1f             	goto -134 <print+0x3E : 1e0e29a >
 1e0e320:    12 fc 90 ff       	r2 = r1 + -112
 1e0e324:    82 e0 3d 80       	if (r2 > 8) goto 122 <.GJTIE425_0_0_+0x6E : 1e0e3a2 >
 1e0e328:    a2 00             	tbb [r2]


.GJTIS425_0_0_:
 1e0e32a:    09     < 9 : 0x9 >
 1e0e32b:    05     < 5 : 0x5 >
 1e0e32c:    05     < 5 : 0x5 >
 1e0e32d:    59     < 89 : 0x59 >
 1e0e32e:    05     < 5 : 0x5 >
 1e0e32f:    61     < 97 : 0x61 >
 1e0e330:    05     < 5 : 0x5 >
 1e0e331:    05     < 5 : 0x5 >
 1e0e332:    09     < 9 : 0x9 >
 1e0e333:    00     < 0 : 0x0 >
 1e0e334:    60 02             	r0 = [sp+24]			  ## printf-stdarg.c:152:26
 1e0e336:    12 90             	r2 = r0 + 1			  ## printf-stdarg.c:152:26
 1e0e338:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:152:26
 1e0e33a:    a6 18             	goto 332 <.GJTIE425_0_0_+0x154 : 1e0e488 >			  ## printf-stdarg.c:152:26
 1e0e33c:    50 02             	r0 = [sp+20]
 1e0e33e:    41 90             	r1 = r0 + 4
 1e0e340:    59 02             	[sp+20] = r1
 1e0e342:    02 40             	r2 = [r0 + 0]
 1e0e344:    1a f5 0c 00       	[sp+12] = r10
 1e0e348:    23 18             	goto 70 <.GJTIE425_0_0_+0x5C : 1e0e390 >
 1e0e34a:    a2 e2 d1 1f       	if (r2 != 42) goto -94 <print+0x94 : 1e0e2f0 >
 1e0e34e:    52 02             	r2 = [sp+20]			  ## printf-stdarg.c:183:33
 1e0e350:    20 92             	r0 = r1 + 2			  ## printf-stdarg.c:182:21
 1e0e352:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:182:21
 1e0e354:    41 94             	r1 = r2 + 4			  ## printf-stdarg.c:183:33
 1e0e356:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:183:33
 1e0e358:    cb 1f             	goto -106 <print+0x94 : 1e0e2f0 >			  ## printf-stdarg.c:183:33
 1e0e35a:    10 60             	r0 = b[r0 + 1] (u)			  ## printf-stdarg.c:230:39
 1e0e35c:    80 e5 ea 1f       	if (r0 != 88) goto -44 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e360:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:231:40
 1e0e362:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:231:40
 1e0e364:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:231:40
 1e0e366:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:231:40
 1e0e368:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:231:23
 1e0e36c:    2d 02             	[sp+8] = r5
 1e0e36e:    1f 02             	[sp+4] = r7
 1e0e370:    03 71             	r3 = 16
 1e0e372:    18 f5 00 00       	[sp] = r8
 1e0e376:    40 08             	r0 = r4
 1e0e378:    d1 08             	r1 = r13
 1e0e37a:    16 17             	call -468 <printi : 1e0e1a8 >
 1e0e37c:    61 02             	r1 = [sp+24]
 1e0e37e:    11 80             	r1 += 1
 1e0e380:    69 02             	[sp+24] = r1
 1e0e382:    8b 1f             	goto -234 <print+0x3E : 1e0e29a >
 1e0e384:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:227:40
 1e0e386:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:227:40
 1e0e388:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:227:40
 1e0e38a:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:227:40
 1e0e38c:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:227:23
 1e0e390:    2d 02             	[sp+8] = r5
 1e0e392:    1f 02             	[sp+4] = r7
 1e0e394:    03 71             	r3 = 16
 1e0e396:    18 f5 00 00       	[sp] = r8
 1e0e39a:    40 08             	r0 = r4
 1e0e39c:    d1 08             	r1 = r13
 1e0e39e:    04 17             	call -504 <printi : 1e0e1a8 >
 1e0e3a0:    7c 1f             	goto -264 <print+0x3E : 1e0e29a >
 1e0e3a2:    41 e6 2d 00       	if (r1 == 100) goto 90 <.GJTIE425_0_0_+0xCC : 1e0e400 >
 1e0e3a6:    c1 e6 c5 1f       	if (r1 != 108) goto -118 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e3aa:    11 60             	r1 = b[r0 + 1] (u)
 1e0e3ac:    41 e7 34 c0       	ifs (r1 > 116) goto 104 <.GJTIE425_0_0_+0xE4 : 1e0e418 >
 1e0e3b0:    41 e6 3d 00       	if (r1 == 100) goto 122 <.GJTIE425_0_0_+0xFA : 1e0e42e >
 1e0e3b4:    c1 e6 be 1f       	if (r1 != 108) goto -132 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e3b8:    21 60             	r1 = b[r0 + 2] (u)			  ## printf-stdarg.c:207:67
 1e0e3ba:    41 e6 4e 10       	if (r1 != 100) goto 156 <.GJTIE425_0_0_+0x126 : 1e0e45a >			  ## printf-stdarg.c:207:67
 1e0e3be:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0e3c0:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:208:40
 1e0e3c2:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:208:40
 1e0e3c4:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0e3c6:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:208:40
 1e0e3c8:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:208:40
 1e0e3ca:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:208:40
 1e0e3cc:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:208:23
 1e0e3d0:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:208:23
 1e0e3d2:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:208:23
 1e0e3d4:    a3 70             	r3 = 10			  ## printf-stdarg.c:208:23
 1e0e3d6:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:208:23
 1e0e3da:    50 18             	goto 160 <.GJTIE425_0_0_+0x148 : 1e0e47c >			  ## printf-stdarg.c:208:23
 1e0e3dc:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:194:44
 1e0e3de:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:194:44
 1e0e3e0:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:194:44
 1e0e3e2:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:194:44
 1e0e3e4:    0d 02             	[sp] = r5			  ## printf-stdarg.c:195:23
 1e0e3e6:    97 35             	if (r2 != 0) goto -210 <print+0xBA : 1e0e316 >			  ## printf-stdarg.c:195:23
 1e0e3e8:    c2 08             	r2 = r12			  ## printf-stdarg.c:195:40
 1e0e3ea:    95 1f             	goto -214 <print+0xBA : 1e0e316 >
 1e0e3ec:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:236:40
 1e0e3ee:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:236:40
 1e0e3f0:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:236:40
 1e0e3f2:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:236:40
 1e0e3f4:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:236:23
 1e0e3f8:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:236:23
 1e0e3fa:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:236:23
 1e0e3fc:    a3 70             	r3 = 10			  ## printf-stdarg.c:236:23
 1e0e3fe:    cb 1f             	goto -106 <.GJTIE425_0_0_+0x62 : 1e0e396 >			  ## printf-stdarg.c:236:23
 1e0e400:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:199:40
 1e0e402:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:199:40
 1e0e404:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:199:40
 1e0e406:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:199:40
 1e0e408:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:199:23
 1e0e40c:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:199:23
 1e0e40e:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:199:23
 1e0e410:    a3 70             	r3 = 10			  ## printf-stdarg.c:199:23
 1e0e412:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:199:23
 1e0e416:    c1 1f             	goto -126 <.GJTIE425_0_0_+0x66 : 1e0e39a >			  ## printf-stdarg.c:199:23
 1e0e418:    51 e7 15 00       	if (r1 == 117) goto 42 <.GJTIE425_0_0_+0x112 : 1e0e446 >
 1e0e41c:    81 e7 8a 1f       	if (r1 != 120) goto -236 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e420:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:222:40
 1e0e422:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:222:40
 1e0e424:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:222:40
 1e0e426:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:222:40
 1e0e428:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:222:23
 1e0e42c:    9f 1f             	goto -194 <.GJTIE425_0_0_+0x38 : 1e0e36c >			  ## printf-stdarg.c:222:23
 1e0e42e:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:203:40
 1e0e430:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:203:40
 1e0e432:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:203:40
 1e0e434:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:203:40
 1e0e436:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:203:23
 1e0e43a:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:203:23
 1e0e43c:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:203:23
 1e0e43e:    a3 70             	r3 = 10			  ## printf-stdarg.c:203:23
 1e0e440:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:203:23
 1e0e444:    98 1f             	goto -208 <.GJTIE425_0_0_+0x42 : 1e0e376 >			  ## printf-stdarg.c:203:23
 1e0e446:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:240:40
 1e0e448:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:240:40
 1e0e44a:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:240:40
 1e0e44c:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:240:40
 1e0e44e:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:240:23
 1e0e452:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:240:23
 1e0e454:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:240:23
 1e0e456:    a3 70             	r3 = 10			  ## printf-stdarg.c:240:23
 1e0e458:    8c 1f             	goto -232 <.GJTIE425_0_0_+0x3E : 1e0e372 >			  ## printf-stdarg.c:240:23
 1e0e45a:    20 60             	r0 = b[r0 + 2] (u)			  ## printf-stdarg.c:244:67
 1e0e45c:    50 e7 6a 1f       	if (r0 != 117) goto -300 <.GJTIE425_0_0_ : 1e0e334 >
 1e0e460:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0e462:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:245:40
 1e0e464:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:245:40
 1e0e466:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0e468:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:245:40
 1e0e46a:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:245:40
 1e0e46c:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:245:40
 1e0e46e:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:245:23
 1e0e472:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:245:23
 1e0e474:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:245:23
 1e0e476:    a3 70             	r3 = 10			  ## printf-stdarg.c:245:23
 1e0e478:    18 f5 00 00       	[sp] = r8			  ## printf-stdarg.c:245:23
 1e0e47c:    40 08             	r0 = r4
 1e0e47e:    d1 08             	r1 = r13
 1e0e480:    93 16             	call -730 <printi : 1e0e1a8 >
 1e0e482:    61 02             	r1 = [sp+24]
 1e0e484:    21 80             	r1 += 2
 1e0e486:    7c 1f             	goto -264 <.GJTIE425_0_0_+0x4C : 1e0e380 >
 1e0e488:    00 64             	r0 = b[r2 + 0] (u)			  ## printf-stdarg.c:152:12
 1e0e48a:    50 e2 f6 0e       	if (r0 == 37) goto -532 <print+0x1E : 1e0e27a >			  ## printf-stdarg.c:152:5
 1e0e48e:    01 31             	if (r0 != 0) goto -510 <print+0x36 : 1e0e292 >
 1e0e490:    03 28             	if (r4 == 0) goto 6 <.GJTIE425_0_0_+0x164 : 1e0e498 >
 1e0e492:    00 48             	r0 = [r4 + 0]			  ## printf-stdarg.c:280:10
 1e0e494:    01 70             	r1 = 0			  ## printf-stdarg.c:280:15
 1e0e496:    09 60             	b[r0 + 0] = r1			  ## printf-stdarg.c:280:15
 1e0e498:    60 08             	r0 = r6			  ## printf-stdarg.c:283:5
 1e0e49a:    0e 0a             	sp += 28			  ## printf-stdarg.c:283:5
 1e0e49c:    5d 01             	{pc, r13-r4} = [sp++]			  ## printf-stdarg.c:283:5


snprintf:
 1e0e49e:    63 01             	[--sp] = {r3}			  ## printf-stdarg.c:389:0
 1e0e4a0:    34 00             	[--sp] = rets			  ## printf-stdarg.c:389:0
 1e0e4a2:    fc 0b             	sp += -8			  ## printf-stdarg.c:389:0
 1e0e4a4:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:389:0
 1e0e4a6:    0b 02             	[sp] = r3			  ## printf-stdarg.c:392:5
 1e0e4a8:    18 02             	[sp+4] = r0
 1e0e4aa:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0e4ac:    40 a0             	r0 = sp + 4
 1e0e4ae:    d6 16             	call -596 <print : 1e0e25c >			  ## printf-stdarg.c:399:12
 1e0e4b0:    04 0a             	sp += 8
 1e0e4b2:    88 01             	{rets} = [sp++]			  ## printf-stdarg.c:394:5
 1e0e4b4:    02 0a             	sp += 4			  ## printf-stdarg.c:394:5
 1e0e4b6:    20 00             	rts			  ## printf-stdarg.c:394:5


vsnprintf:
 1e0e4b8:    34 00             	[--sp] = rets			  ## printf-stdarg.c:398:0
 1e0e4ba:    fe 0b             	sp += -4			  ## printf-stdarg.c:398:0
 1e0e4bc:    08 02             	[sp] = r0			  ## printf-stdarg.c:398:0
 1e0e4be:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0e4c0:    00 a0             	r0 = sp + 0
 1e0e4c2:    cc 16             	call -616 <print : 1e0e25c >			  ## printf-stdarg.c:399:12
 1e0e4c4:    02 0a             	sp += 4
 1e0e4c6:    30 00             	pc = [sp++]			  ## printf-stdarg.c:399:5


vprintf:
 1e0e4c8:    34 00             	[--sp] = rets			  ## printf-stdarg.c:414:0
 1e0e4ca:    13 08             	r3 = r1			  ## printf-stdarg.c:414:0
 1e0e4cc:    02 08             	r2 = r0			  ## printf-stdarg.c:414:0
 1e0e4ce:    00 70             	r0 = 0			  ## printf-stdarg.c:417:12
 1e0e4d0:    01 70             	r1 = 0			  ## printf-stdarg.c:417:12
 1e0e4d2:    c4 16             	call -632 <print : 1e0e25c >			  ## printf-stdarg.c:417:12
 1e0e4d4:    30 00             	pc = [sp++]			  ## printf-stdarg.c:419:5


perror:
 1e0e4d6:    00 70             	r0 = 0			  ## printf-stdarg.c:423:0
 1e0e4d8:    20 00             	rts			  ## printf-stdarg.c:424:5


lbuf_alloc:
 1e0e4da:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:209:0
 1e0e4dc:    04 08             	r4 = r0			  ## lbuf.c:209:0
 1e0e4de:    d0 58             	r0 = h[r4 + 26] (u)			  ## lbuf.c:219:14
 1e0e4e0:    82 69             	r2 = b[r4 + 24] (u)			  ## lbuf.c:219:14
 1e0e4e2:    c3 91             	r3 = r0 + 28			  ## lbuf.c:219:14
 1e0e4e4:    20 fc ff ff       	r0 = r2 + -1			  ## lbuf.c:219:14
 1e0e4e8:    e2 fd 30 50       	r5 = r0 & r3			  ## lbuf.c:219:14
 1e0e4ec:    66 b5             	r6 = r2 - r5			  ## lbuf.c:219:14
 1e0e4ee:    07 70             	r7 = 0			  ## lbuf.c:219:14
 1e0e4f0:    05 70             	r5 = 0			  ## lbuf.c:219:14
 1e0e4f2:    30 f0 01 00       	if ((r0 & r3) == 0) goto 2 <lbuf_alloc+0x1E : 1e0e4f8 >
 1e0e4f6:    65 08             	r5 = r6			  ## lbuf.c:219:14
 1e0e4f8:    31 09             	r1 += r3			  ## lbuf.c:220:11
 1e0e4fa:    51 09             	r1 += r5			  ## lbuf.c:220:11
 1e0e4fc:    e2 fd 00 31       	r3 = r1 & r0			  ## lbuf.c:220:11
 1e0e500:    e3 b4             	r3 = r2 - r3			  ## lbuf.c:220:11
 1e0e502:    02 70             	r2 = 0			  ## lbuf.c:220:11
 1e0e504:    01 f0 01 00       	if ((r1 & r0) == 0) goto 2 <lbuf_alloc+0x30 : 1e0e50a >			  ## lbuf.c:220:11
 1e0e508:    32 08             	r2 = r3			  ## lbuf.c:220:11
 1e0e50a:    46 b4             	r6 = r2 + r1			  ## lbuf.c:220:11
 1e0e50c:    97 f3 46 c4       	call 3115148 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e510:    31 48             	r1 = [r4 + 12]			  ## lbuf.c:224:5
 1e0e512:    c2 98             	r2 = r4 + 12			  ## lbuf.c:224:5
 1e0e514:    00 70             	r0 = 0			  ## lbuf.c:224:5
 1e0e516:    21 f2 19 00       	if (r1 == r2) goto 50 <lbuf_alloc+0x72 : 1e0e54c >			  ## lbuf.c:224:5
 1e0e51a:    41 f2 04 90       	if (r1 <= r4) goto 8 <lbuf_alloc+0x4C : 1e0e526 >
 1e0e51e:    73 48             	r3 = [r4 + 28]			  ## lbuf.c:225:67
 1e0e520:    43 09             	r3 += r4			  ## lbuf.c:225:59
 1e0e522:    31 f2 02 90       	if (r1 <= r3) goto 4 <lbuf_alloc+0x50 : 1e0e52a >			  ## lbuf.c:225:59
 1e0e526:    60 f3 00 00       	trigger			  ## lbuf.c:226:13
 1e0e52a:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:229:16
 1e0e52c:    63 f2 08 30       	if (r3 < r6) goto 16 <lbuf_alloc+0x66 : 1e0e540 >			  ## lbuf.c:229:16
 1e0e530:    03 20             	if (r0 == 0) goto 6 <lbuf_alloc+0x5E : 1e0e538 >
 1e0e532:    27 40             	r7 = [r0 + 8]			  ## lbuf.c:232:28
 1e0e534:    37 f2 01 90       	if (r7 <= r3) goto 2 <lbuf_alloc+0x60 : 1e0e53a >			  ## lbuf.c:232:28
 1e0e538:    10 08             	r0 = r1
 1e0e53a:    83 48             	r3 = [r4 + 32]			  ## lbuf.c:235:28
 1e0e53c:    31 f2 05 80       	if (r1 > r3) goto 10 <lbuf_alloc+0x70 : 1e0e54a >			  ## lbuf.c:235:28
 1e0e540:    01 42             	r1 = [r1 + 0]			  ## lbuf.c:224:5
 1e0e542:    21 f2 ea 1f       	if (r1 != r2) goto -44 <lbuf_alloc+0x40 : 1e0e51a >
 1e0e546:    07 70             	r7 = 0
 1e0e548:    01 18             	goto 2 <lbuf_alloc+0x72 : 1e0e54c >
 1e0e54a:    17 08             	r7 = r1
 1e0e54c:    01 3e             	if (r7 != 0) goto 2 <lbuf_alloc+0x76 : 1e0e550 >
 1e0e54e:    07 08             	r7 = r0			  ## lbuf.c:241:9
 1e0e550:    0d 2e             	if (r7 == 0) goto 26 <lbuf_alloc+0x92 : 1e0e56c >
 1e0e552:    8f 48             	[r4 + 32] = r7			  ## lbuf.c:244:25
 1e0e554:    22 4e             	r2 = [r7 + 8]			  ## lbuf.c:246:16
 1e0e556:    c0 9c             	r0 = r6 + 12			  ## lbuf.c:246:26
 1e0e558:    02 f2 0a 90       	if (r2 <= r0) goto 20 <lbuf_alloc+0x96 : 1e0e570 >			  ## lbuf.c:246:13
 1e0e55c:    80 bf             	r0 = r7 + r6			  ## lbuf.c:247:44
 1e0e55e:    a1 b5             	r1 = r2 - r6			  ## lbuf.c:248:31
 1e0e560:    29 40             	[r0 + 8] = r1			  ## lbuf.c:248:22
 1e0e562:    02 4e             	r2 = [r7 + 0]			  ## lbuf.c:249:61
 1e0e564:    11 4e             	r1 = [r7 + 4]			  ## lbuf.c:249:46
 1e0e566:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0e568:    0a 40             	[r0 + 0] = r2			  ## list.h:138:16
 1e0e56a:    05 18             	goto 10 <lbuf_alloc+0x9C : 1e0e576 >			  ## list.h:138:16
 1e0e56c:    04 70             	r4 = 0
 1e0e56e:    18 18             	goto 48 <lbuf_alloc+0xC6 : 1e0e5a0 >
 1e0e570:    00 4e             	r0 = [r7 + 0]			  ## list.h:165:36
 1e0e572:    11 4e             	r1 = [r7 + 4]			  ## list.h:165:23
 1e0e574:    26 08             	r6 = r2			  ## list.h:165:23
 1e0e576:    19 40             	[r0 + 4] = r1
 1e0e578:    08 42             	[r1 + 0] = r0
 1e0e57a:    40 bf             	r0 = r7 + r5			  ## lbuf.c:255:43
 1e0e57c:    6e 50             	h[r0 + 12] = r6			  ## lbuf.c:256:20
 1e0e57e:    21 b1             	r1 = r0 - r4			  ## lbuf.c:257:37
 1e0e580:    79 50             	h[r0 + 14] = r1			  ## lbuf.c:257:23
 1e0e582:    01 70             	r1 = 0			  ## lbuf.c:258:28
 1e0e584:    19 61             	b[r0 + 17] = r1			  ## lbuf.c:258:28
 1e0e586:    11 70             	r1 = 1			  ## lbuf.c:259:20
 1e0e588:    09 61             	b[r0 + 16] = r1			  ## lbuf.c:259:20
 1e0e58a:    c1 ff 78 56 34 12 	r1 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:261:24
 1e0e590:    09 40             	[r0 + 0] = r1			  ## lbuf.c:261:24
 1e0e592:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:262:24
 1e0e596:    59 40             	[r0 + 20] = r1			  ## lbuf.c:262:24
 1e0e598:    41 90             	r1 = r0 + 4			  ## lbuf.c:264:32
 1e0e59a:    19 40             	[r0 + 4] = r1			  ## list.h:188:16
 1e0e59c:    29 40             	[r0 + 8] = r1			  ## list.h:189:16
 1e0e59e:    c4 91             	r4 = r0 + 28			  ## lbuf.c:266:21
 1e0e5a0:    97 f3 fa c3       	call 3114996 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e5a4:    40 08             	r0 = r4			  ## lbuf.c:276:5
 1e0e5a6:    57 01             	{pc, r7-r4} = [sp++]			  ## lbuf.c:276:5


lbuf_free_check:
 1e0e5a8:    74 01             	[--sp] = {rets, r4}			  ## lbuf.c:449:0
 1e0e5aa:    1d 20             	if (r0 == 0) goto 58 <lbuf_free_check+0x3E : 1e0e5e6 >			  ## lbuf.c:449:0
 1e0e5ac:    40 8e             	r0 += -28			  ## lbuf.c:449:0
 1e0e5ae:    71 50             	r1 = h[r0 + 14] (u)			  ## lbuf.c:458:48
 1e0e5b0:    03 40             	r3 = [r0 + 0]			  ## lbuf.c:458:48
 1e0e5b2:    c4 ff 78 56 34 12 	r4 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:458:48
 1e0e5b8:    62 b0             	r2 = r0 - r1			  ## lbuf.c:458:46
 1e0e5ba:    43 f2 05 10       	if (r3 != r4) goto 10 <lbuf_free_check+0x20 : 1e0e5c8 >			  ## lbuf.c:458:46
 1e0e5be:    50 40             	r0 = [r0 + 20]			  ## lbuf.c:460:5
 1e0e5c0:    41 fb 11 4f       	r1 = r4 + 286331153			  ## lbuf.c:460:5
 1e0e5c4:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free_check+0x24 : 1e0e5cc >			  ## lbuf.c:460:5
 1e0e5c8:    8f f3 25 a7       	call 2051658 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e5cc:    00 44             	r0 = [r2 + 0]
 1e0e5ce:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0e5d4:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_free_check+0x3A : 1e0e5e2 >
 1e0e5d8:    a0 44             	r0 = [r2 + 40]			  ## lbuf.c:460:5
 1e0e5da:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:460:5
 1e0e5de:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free_check+0x3E : 1e0e5e6 >			  ## lbuf.c:460:5
 1e0e5e2:    8f f3 18 a7       	call 2051632 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e5e6:    54 01             	{pc, r4} = [sp++]			  ## lbuf.c:461:1


lbuf_real_size:
 1e0e5e8:    00 f7 f0 0f       	r0 = h[r0 + -16] (u)			  ## lbuf.c:370:0
 1e0e5ec:    20 00             	rts			  ## lbuf.c:373:5


lbuf_free:
 1e0e5ee:    78 01             	[--sp] = {rets, r8-r4}			  ## lbuf.c:465:0
 1e0e5f0:    28 fb 00 13       	r1 = rets			  ## lbuf.c:475:5
 1e0e5f4:    3a 20             	if (r0 == 0) goto 116 <lbuf_free+0x7C : 1e0e66a >
 1e0e5f6:    07 fc e4 ff       	r7 = r0 + -28
 1e0e5fa:    70 5e             	r0 = h[r7 + 14] (u)			  ## lbuf.c:482:48
 1e0e5fc:    01 4e             	r1 = [r7 + 0]
 1e0e5fe:    c2 ff 78 56 34 12 	r2 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >
 1e0e604:    26 be             	r6 = r7 - r0			  ## lbuf.c:482:46
 1e0e606:    21 f2 05 10       	if (r1 != r2) goto 10 <lbuf_free+0x26 : 1e0e614 >			  ## lbuf.c:482:46
 1e0e60a:    50 4e             	r0 = [r7 + 20]			  ## lbuf.c:484:5
 1e0e60c:    41 fb 11 2f       	r1 = r2 + 286331153			  ## lbuf.c:484:5
 1e0e610:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free+0x2A : 1e0e618 >			  ## lbuf.c:484:5
 1e0e614:    8f f3 ff a6       	call 2051582 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e618:    00 4c             	r0 = [r6 + 0]
 1e0e61a:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0e620:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_free+0x40 : 1e0e62e >
 1e0e624:    a0 4c             	r0 = [r6 + 40]			  ## lbuf.c:484:5
 1e0e626:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:484:5
 1e0e62a:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_free+0x44 : 1e0e632 >			  ## lbuf.c:484:5
 1e0e62e:    8f f3 f2 a6       	call 2051556 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e632:    08 f7 0c 70       	r8 = h[r7 + 12] (u)			  ## lbuf.c:488:22
 1e0e636:    d4 5c             	r4 = h[r6 + 26] (u)			  ## lbuf.c:486:14
 1e0e638:    85 6d             	r5 = b[r6 + 24] (u)			  ## lbuf.c:486:14
 1e0e63a:    97 f3 af c3       	call 3114846 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0e63e:    00 6f             	r0 = b[r7 + 16] (u)			  ## lbuf.c:492:9
 1e0e640:    f0 8f             	r0 += -1			  ## lbuf.c:492:9
 1e0e642:    08 6f             	b[r7 + 16] = r0			  ## lbuf.c:492:9
 1e0e644:    c1 ff ff ff 01 00 	r1 = 131071 <text_size+0x74B3 : 1ffff >			  ## lbuf.c:486:14
 1e0e64a:    43 ba             	r3 = r5 + r1			  ## lbuf.c:486:14
 1e0e64c:    c4 81             	r4 += 28			  ## lbuf.c:486:14
 1e0e64e:    e2 fd 40 13       	r1 = r3 & r4			  ## lbuf.c:486:14
 1e0e652:    62 b3             	r2 = r1 - r5			  ## lbuf.c:487:40
 1e0e654:    05 70             	r5 = 0			  ## lbuf.c:487:40
 1e0e656:    01 70             	r1 = 0			  ## lbuf.c:487:40
 1e0e658:    43 f0 01 00       	if ((r3 & r4) == 0) goto 2 <lbuf_free+0x70 : 1e0e65e >
 1e0e65c:    21 08             	r1 = r2			  ## lbuf.c:487:40
 1e0e65e:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <lbuf_free+0x82 : 1e0e670 >
 1e0e664:    97 f3 98 c3       	call 3114800 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0e668:    01 18             	goto 2 <lbuf_free+0x7E : 1e0e66c >			  ## spinlock.h:88:5
 1e0e66a:    05 70             	r5 = 0
 1e0e66c:    50 08             	r0 = r5			  ## lbuf.c:535:1
 1e0e66e:    58 01             	{pc, r8-r4} = [sp++]			  ## lbuf.c:535:1
 1e0e670:    c0 ff 67 45 23 01 	r0 = 19088743 <uECC_vli_cmp_unsafe+0x112D56B : 1234567 >			  ## lbuf.c:495:20
 1e0e676:    08 4e             	[r7 + 0] = r0			  ## lbuf.c:495:20
 1e0e678:    12 4e             	r2 = [r7 + 4]			  ## list.h:165:36
 1e0e67a:    23 4e             	r3 = [r7 + 8]			  ## list.h:165:23
 1e0e67c:    40 be             	r0 = r7 + r1			  ## lbuf.c:487:40
 1e0e67e:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e0e680:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e0e682:    18 f6 08 00       	[r0 + 8] = r8			  ## lbuf.c:498:14
 1e0e686:    31 4c             	r1 = [r6 + 12]			  ## lbuf.c:500:5
 1e0e688:    c2 9c             	r2 = r6 + 12			  ## lbuf.c:500:5
 1e0e68a:    21 f2 0f 00       	if (r1 == r2) goto 30 <lbuf_free+0xBE : 1e0e6ac >
 1e0e68e:    61 f2 10 90       	if (r1 <= r6) goto 32 <lbuf_free+0xC4 : 1e0e6b2 >
 1e0e692:    73 4c             	r3 = [r6 + 28]			  ## lbuf.c:501:67
 1e0e694:    63 09             	r3 += r6			  ## lbuf.c:501:59
 1e0e696:    31 f2 0c 80       	if (r1 > r3) goto 24 <lbuf_free+0xC4 : 1e0e6b2 >			  ## lbuf.c:501:59
 1e0e69a:    01 f2 0d 80       	if (r1 > r0) goto 26 <lbuf_free+0xCA : 1e0e6b8 >			  ## lbuf.c:506:24
 1e0e69e:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:506:41
 1e0e6a0:    13 09             	r3 += r1			  ## lbuf.c:506:36
 1e0e6a2:    03 f2 27 80       	if (r3 > r0) goto 78 <lbuf_free+0x106 : 1e0e6f4 >			  ## lbuf.c:506:36
 1e0e6a6:    01 42             	r1 = [r1 + 0]			  ## lbuf.c:500:5
 1e0e6a8:    21 f2 f1 1f       	if (r1 != r2) goto -30 <lbuf_free+0xA0 : 1e0e68e >
 1e0e6ac:    43 94             	r3 = r2 + 4			  ## list.h:154:28
 1e0e6ae:    21 08             	r1 = r2			  ## list.h:154:28
 1e0e6b0:    04 18             	goto 8 <lbuf_free+0xCC : 1e0e6ba >			  ## list.h:154:28
 1e0e6b2:    60 f3 00 00       	trigger			  ## lbuf.c:502:13
 1e0e6b6:    d6 1f             	goto -84 <lbuf_free+0x76 : 1e0e664 >			  ## lbuf.c:502:13
 1e0e6b8:    43 92             	r3 = r1 + 4			  ## lbuf.c:512:46
 1e0e6ba:    02 46             	r2 = [r3 + 0]
 1e0e6bc:    08 46             	[r3 + 0] = r0			  ## list.h:137:16
 1e0e6be:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0e6c0:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e0e6c2:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e0e6c4:    23 44             	r3 = [r2 + 8]			  ## lbuf.c:521:27
 1e0e6c6:    01 40             	r1 = [r0 + 0]			  ## lbuf.c:520:12
 1e0e6c8:    84 b6             	r4 = r3 + r2			  ## lbuf.c:521:19
 1e0e6ca:    04 f2 06 10       	if (r4 != r0) goto 12 <lbuf_free+0xEC : 1e0e6da >			  ## lbuf.c:521:19
 1e0e6ce:    38 09             	r8 += r3			  ## lbuf.c:522:19
 1e0e6d0:    18 f6 08 20       	[r2 + 8] = r8			  ## lbuf.c:522:19
 1e0e6d4:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0e6d6:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0e6d8:    20 08             	r0 = r2			  ## list.h:160:16
 1e0e6da:    80 fb 80 20       	r2 = r0 + r8			  ## lbuf.c:526:18
 1e0e6de:    15 70             	r5 = 1
 1e0e6e0:    12 f2 c0 1f       	if (r2 != r1) goto -128 <lbuf_free+0x76 : 1e0e664 >
 1e0e6e4:    22 42             	r2 = [r1 + 8]			  ## lbuf.c:527:27
 1e0e6e6:    82 09             	r2 += r8			  ## lbuf.c:527:18
 1e0e6e8:    2a 40             	[r0 + 8] = r2			  ## lbuf.c:527:18
 1e0e6ea:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e0e6ec:    11 42             	r1 = [r1 + 4]			  ## list.h:165:23
 1e0e6ee:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0e6f0:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0e6f2:    b8 1f             	goto -144 <lbuf_free+0x76 : 1e0e664 >			  ## list.h:160:16
 1e0e6f4:    60 f3 00 00       	trigger			  ## lbuf.c:507:13
 1e0e6f8:    b5 1f             	goto -150 <lbuf_free+0x76 : 1e0e664 >			  ## lbuf.c:507:13


lbuf_realloc:
 1e0e6fa:    79 01             	[--sp] = {rets, r9-r4}			  ## lbuf.c:297:0
 1e0e6fc:    09 08             	r9 = r0			  ## lbuf.c:297:0
 1e0e6fe:    05 fc e4 ff       	r5 = r0 + -28			  ## lbuf.c:297:0
 1e0e702:    70 5a             	r0 = h[r5 + 14] (u)			  ## lbuf.c:303:67
 1e0e704:    04 4a             	r4 = [r5 + 0]			  ## lbuf.c:303:67
 1e0e706:    13 08             	r3 = r1			  ## lbuf.c:303:67
 1e0e708:    c8 ff 78 56 34 12 	r8 = 305419896 <uECC_vli_cmp_unsafe+0x23E67C : 345678 >			  ## lbuf.c:303:67
 1e0e70e:    26 ba             	r6 = r5 - r0			  ## lbuf.c:303:65
 1e0e710:    84 f2 05 10       	if (r4 != r8) goto 10 <lbuf_realloc+0x24 : 1e0e71e >			  ## lbuf.c:303:65
 1e0e714:    50 4a             	r0 = [r5 + 20]			  ## lbuf.c:305:5
 1e0e716:    41 fb 11 8f       	r1 = r8 + 286331153			  ## lbuf.c:305:5
 1e0e71a:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_realloc+0x28 : 1e0e722 >			  ## lbuf.c:305:5
 1e0e71e:    8f f3 7a a6       	call 2051316 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e722:    00 4c             	r0 = [r6 + 0]
 1e0e724:    c1 ff 21 43 65 87 	r1 = 2271560481 <uECC_vli_cmp_unsafe+0x154D325 : 1654321 >
 1e0e72a:    10 f2 05 10       	if (r0 != r1) goto 10 <lbuf_realloc+0x3E : 1e0e738 >
 1e0e72e:    a0 4c             	r0 = [r6 + 40]			  ## lbuf.c:305:5
 1e0e730:    41 fb 11 1f       	r1 = r1 + 286331153			  ## lbuf.c:305:5
 1e0e734:    10 f2 02 00       	if (r0 == r1) goto 4 <lbuf_realloc+0x42 : 1e0e73c >			  ## lbuf.c:305:5
 1e0e738:    8f f3 6d a6       	call 2051290 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e73c:    80 6d             	r0 = b[r6 + 24] (u)			  ## lbuf.c:308:12
 1e0e73e:    04 fc ff ff       	r4 = r0 + -1			  ## lbuf.c:308:12
 1e0e742:    e2 fd 30 14       	r1 = r4 & r3			  ## lbuf.c:308:12
 1e0e746:    60 b0             	r0 = r0 - r1			  ## lbuf.c:308:12
 1e0e748:    01 70             	r1 = 0			  ## lbuf.c:308:12
 1e0e74a:    34 f0 01 00       	if ((r4 & r3) == 0) goto 2 <lbuf_realloc+0x56 : 1e0e750 >
 1e0e74e:    01 08             	r1 = r0			  ## lbuf.c:308:12
 1e0e750:    60 5a             	r0 = h[r5 + 12] (u)
 1e0e752:    13 09             	r3 += r1			  ## lbuf.c:308:12
 1e0e754:    03 f2 03 d0       	ifs (r3 <= r0) goto 6 <lbuf_realloc+0x64 : 1e0e75e >
 1e0e758:    8f f3 5d a6       	call 2051258 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0e75c:    60 5a             	r0 = h[r5 + 12] (u)			  ## cpu.h:148:5
 1e0e75e:    30 f2 2e d0       	ifs (r0 <= r3) goto 92 <lbuf_realloc+0xC4 : 1e0e7be >
 1e0e762:    81 6d             	r1 = b[r6 + 24] (u)			  ## lbuf.c:315:14
 1e0e764:    d4 5c             	r4 = h[r6 + 26] (u)			  ## lbuf.c:315:14
 1e0e766:    c7 ff ff ff 01 00 	r7 = 131071 <text_size+0x74B3 : 1ffff >			  ## lbuf.c:315:14
 1e0e76c:    c2 b3             	r2 = r1 + r7			  ## lbuf.c:315:14
 1e0e76e:    c7 99             	r7 = r4 + 28			  ## lbuf.c:315:14
 1e0e770:    e2 fd 70 42       	r4 = r2 & r7			  ## lbuf.c:315:14
 1e0e774:    24 b3             	r4 = r1 - r4			  ## lbuf.c:315:14
 1e0e776:    01 70             	r1 = 0			  ## lbuf.c:315:14
 1e0e778:    72 f0 01 00       	if ((r2 & r7) == 0) goto 2 <lbuf_realloc+0x84 : 1e0e77e >			  ## lbuf.c:315:14
 1e0e77c:    41 08             	r1 = r4			  ## lbuf.c:315:14
 1e0e77e:    e4 b0             	r4 = r0 - r3			  ## lbuf.c:320:20
 1e0e780:    c4 e0 1d 30       	if (r4 < 12) goto 58 <lbuf_realloc+0xC4 : 1e0e7be >			  ## lbuf.c:320:20
 1e0e784:    17 09             	r7 += r1			  ## lbuf.c:318:40
 1e0e786:    7a c0             	r2 = r7 << 1			  ## lbuf.c:320:31
 1e0e788:    24 f2 19 b0       	ifs (r4 < r2) goto 50 <lbuf_realloc+0xC4 : 1e0e7be >			  ## lbuf.c:320:31
 1e0e78c:    c2 be             	r2 = r7 + r3			  ## lbuf.c:328:27
 1e0e78e:    6a 5a             	h[r5 + 12] = r2			  ## lbuf.c:328:16
 1e0e790:    d2 5c             	r2 = h[r6 + 26] (u)			  ## lbuf.c:330:42
 1e0e792:    92 09             	r2 += r9			  ## lbuf.c:330:40
 1e0e794:    32 09             	r2 += r3			  ## lbuf.c:330:57
 1e0e796:    21 09             	r1 += r2			  ## lbuf.c:330:64
 1e0e798:    02 70             	r2 = 0			  ## lbuf.c:331:23
 1e0e79a:    1a 63             	b[r1 + 17] = r2			  ## lbuf.c:331:23
 1e0e79c:    12 70             	r2 = 1			  ## lbuf.c:332:15
 1e0e79e:    0a 63             	b[r1 + 16] = r2			  ## lbuf.c:332:15
 1e0e7a0:    62 5a             	r2 = h[r5 + 12] (u)			  ## lbuf.c:333:30
 1e0e7a2:    a0 b0             	r0 = r0 - r2			  ## lbuf.c:333:21
 1e0e7a4:    68 52             	h[r1 + 12] = r0			  ## lbuf.c:333:15
 1e0e7a6:    a0 b3             	r0 = r1 - r6			  ## lbuf.c:334:29
 1e0e7a8:    78 52             	h[r1 + 14] = r0			  ## lbuf.c:334:17
 1e0e7aa:    18 f6 00 10       	[r1 + 0] = r8			  ## lbuf.c:336:18
 1e0e7ae:    40 fb 11 8f       	r0 = r8 + 286331153			  ## lbuf.c:337:18
 1e0e7b2:    58 42             	[r1 + 20] = r0			  ## lbuf.c:337:18
 1e0e7b4:    40 92             	r0 = r1 + 4			  ## lbuf.c:339:26
 1e0e7b6:    18 42             	[r1 + 4] = r0			  ## list.h:188:16
 1e0e7b8:    28 42             	[r1 + 8] = r0			  ## list.h:189:16
 1e0e7ba:    c0 93             	r0 = r1 + 28			  ## lbuf.c:341:19
 1e0e7bc:    18 17             	call -464 <lbuf_free : 1e0e5ee >			  ## lbuf.c:341:5
 1e0e7be:    59 01             	{pc, r9-r4} = [sp++]


vfs_ops_begin:
 1e0e7c0:    0e f1 e0 01       	if ((r14 & r0) != 0) goto 960 <wk_param+0x4C : 1e0eb84 >
 1e0e7c4:    66 d8             	r6 = r4 >>> 1
 1e0e7c6:    e0 01             	[--sp] = {psr}
 1e0e7c8:    00 00             	nop
 1e0e7ca:    00 00             	nop
 1e0e7cc:    00 00             	nop
 1e0e7ce:    00 00             	nop
 1e0e7d0:    00 00             	nop
 1e0e7d2:    00 00             	nop
 1e0e7d4:    00 00             	nop
 1e0e7d6:    00 00             	nop
 1e0e7d8:    14 da             	r4 = r2 >>> 8
 1e0e7da:    e0 01             	[--sp] = {psr}
 1e0e7dc:    04 db             	r4 = r0 >>> 12
 1e0e7de:    e0 01             	[--sp] = {psr}
 1e0e7e0:    00 00             	nop
 1e0e7e2:    00 00             	nop
 1e0e7e4:    34 db             	r4 = r6 >>> 12
 1e0e7e6:    e0 01             	[--sp] = {psr}
 1e0e7e8:    98 db             	r0 = r3 >>> 14
 1e0e7ea:    e0 01             	[--sp] = {psr}
 1e0e7ec:    00 00             	nop
 1e0e7ee:    00 00             	nop
 1e0e7f0:    ba db             	r2 = r7 >>> 14
 1e0e7f2:    e0 01             	[--sp] = {psr}
 1e0e7f4:    c8 db             	r0 = r1 >>> 15
 1e0e7f6:    e0 01             	[--sp] = {psr}
 1e0e7f8:    00 00             	nop
 1e0e7fa:    00 00             	nop
 1e0e7fc:    d6 db             	r6 = r2 >>> 15
 1e0e7fe:    e0 01             	[--sp] = {psr}
 1e0e800:    00 00             	nop
 1e0e802:    00 00             	nop
 1e0e804:    00 00             	nop
 1e0e806:    00 00             	nop
 1e0e808:    fa db             	r2 = r7 >>> 15
 1e0e80a:    e0 01             	[--sp] = {psr}
 1e0e80c:    00 00             	nop
 1e0e80e:    00 00             	nop
 1e0e810:    00 00             	nop
 1e0e812:    00 00             	nop
 1e0e814:    00 00             	nop
 1e0e816:    00 00             	nop
 1e0e818:    00 00             	nop
 1e0e81a:    00 00             	nop
 1e0e81c:    00 00             	nop
 1e0e81e:    00 00             	nop
 1e0e820:    00 00             	nop
 1e0e822:    00 00             	nop
 1e0e824:    00 00             	nop
 1e0e826:    00 00             	nop
 1e0e828:    0a dc             	r2 = r1 >>> 16
 1e0e82a:    e0 01             	[--sp] = {psr}
 1e0e82c:    00 00             	nop
 1e0e82e:    00 00             	nop
 1e0e830:    00 00             	nop
 1e0e832:    00 00             	nop


vfs_ops_end:
 1e0e834:    16 d6             	r6 = r2 >> 24
 1e0e836:    e0 01             	[--sp] = {psr}


initcall_begin:
 1e0e838:    f6 15             	call -1044 <.GJTIE425_0_0_+0xF2 : 1e0e426 >
 1e0e83a:    e0 01             	[--sp] = {psr}


initcall_end:
 1e0e83c:    04 ca             	r4 = r0 <<< 8
 1e0e83e:    e0 01             	[--sp] = {psr}


__initcall_sdfile_init:
 1e0e840:    6e d7             	r6 = r5 >> 29
 1e0e842:    e0 01             	[--sp] = {psr}


late_initcall_begin:
 1e0e844:    8a 65             	b[r2 + 24] = r2
 1e0e846:    e0 01             	[--sp] = {psr}


platform_initcall_begin:
 1e0e848:    04 d0             	r4 = r0 >> 32
 1e0e84a:    e0 01             	[--sp] = {psr}


syscfg_ops_begin:
 1e0e84c:    26 d4             	r6 = r4 >> 16
 1e0e84e:    e0 01             	[--sp] = {psr}
 1e0e850:    be d4             	r6 = r7 >> 18
 1e0e852:    e0 01             	[--sp] = {psr}
 1e0e854:    d8 d4             	r0 = r3 >> 19
 1e0e856:    e0 01             	[--sp] = {psr}
 1e0e858:    24 d5             	r4 = r4 >> 20
 1e0e85a:    e0 01             	[--sp] = {psr}
 1e0e85c:    00 00             	nop
 1e0e85e:    00 00             	nop
 1e0e860:    00 00             	nop
 1e0e862:    00 00             	nop
 1e0e864:    00 00             	nop
 1e0e866:    00 00             	nop


cfg_vm:
 1e0e868:    ea 60             	b[r0 + 14] = r2
 1e0e86a:    e0 01             	[--sp] = {psr}
 1e0e86c:    36 63             	r6 = b[r1 + 19] (u)
 1e0e86e:    e0 01             	[--sp] = {psr}
 1e0e870:    44 63             	r4 = b[r1 + 20] (u)
 1e0e872:    e0 01             	[--sp] = {psr}
 1e0e874:    10 64             	r0 = b[r2 + 1] (u)
 1e0e876:    e0 01             	[--sp] = {psr}
 1e0e878:    00 00             	nop
 1e0e87a:    00 00             	nop
 1e0e87c:    00 00             	nop
 1e0e87e:    00 00             	nop
 1e0e880:    00 00             	nop
 1e0e882:    00 00             	nop


cfg_bin:
 1e0e884:    28 d1             	r0 = r5 >> 4
 1e0e886:    e0 01             	[--sp] = {psr}
 1e0e888:    ec d1             	r4 = r5 >> 7
 1e0e88a:    e0 01             	[--sp] = {psr}
 1e0e88c:    00 d3             	r0 = r0 >> 12
 1e0e88e:    e0 01             	[--sp] = {psr}
 1e0e890:    00 00             	nop
 1e0e892:    00 00             	nop
 1e0e894:    00 00             	nop
 1e0e896:    00 00             	nop
 1e0e898:    40 d3             	r0 = r0 >> 13
 1e0e89a:    e0 01             	[--sp] = {psr}
 1e0e89c:    4e d3             	r6 = r1 >> 13
 1e0e89e:    e0 01             	[--sp] = {psr}


syscfg_ops_end:
 1e0e8a0:    38 f0 e0 01       	if ((r8 & r3) == 0) goto 960 <dev_id_list+0x28 : 1e0ec64 >
 1e0e8a4:    00 00             	nop
 1e0e8a6:    00 00             	nop
 1e0e8a8:    d0 09             	r0 += r13
 1e0e8aa:    e0 01             	[--sp] = {psr}


ota_lp_target:
 1e0e8ac:    42 f0 e0 01       	if ((r2 & r4) == 0) goto 960 <dev_id_list+0x34 : 1e0ec70 >
 1e0e8b0:    00 00             	nop
 1e0e8b2:    00 00             	nop
 1e0e8b4:    e6 15             	call -1076 <.GJTIE425_0_0_+0x14E : 1e0e482 >
 1e0e8b6:    e0 01             	[--sp] = {psr}


app_hid_lp_target:
 1e0e8b8:    46 f0 e0 01       	if ((r6 & r4) == 0) goto 960 <dev_id_list+0x40 : 1e0ec7c >
 1e0e8bc:    00 00             	nop
 1e0e8be:    00 00             	nop
 1e0e8c0:    44 1b             	goto 1672 <dev_id_list+0x30E : 1e0ef4a >
 1e0e8c2:    e0 01             	[--sp] = {psr}


app_state_lp_target:
 1e0e8c4:    73 f0 e0 01       	if ((r3 & r7) == 0) goto 960 <dev_id_list+0x4C : 1e0ec88 >
 1e0e8c8:    00 00             	nop
 1e0e8ca:    00 00             	nop
 1e0e8cc:    52 22             	if (r1 == 0) goto 164 <update_target_end+0x16 : 1e0e972 >
 1e0e8ce:    e0 01             	[--sp] = {psr}


custom_lp_target:
 1e0e8d0:    90 f0 e0 01       	if ((r0 & r9) == 0) goto 960 <dev_id_list+0x58 : 1e0ec94 >
 1e0e8d4:    00 00             	nop
 1e0e8d6:    00 00             	nop
 1e0e8d8:    94 29             	if (r4 == 0) goto -216 <vfs_ops_begin+0x42 : 1e0e802 >
 1e0e8da:    e0 01             	[--sp] = {psr}


__wakeup_is_idle_target:
 1e0e8dc:    eb f0 e0 01       	if ((r11 & r14) == 0) goto 960 <dev_id_list+0x64 : 1e0eca0 >
 1e0e8e0:    00 00             	nop
 1e0e8e2:    00 00             	nop
 1e0e8e4:    34 31             	if (r0 != 0) goto -408 <lbuf_realloc+0x54 : 1e0e74e >
 1e0e8e6:    e0 01             	[--sp] = {psr}


usb_dev_lp_target:
 1e0e8e8:    f5 f0 e0 01       	if ((r5 & r15) == 0) goto 960 <dev_id_list+0x70 : 1e0ecac >
 1e0e8ec:    00 00             	nop
 1e0e8ee:    00 00             	nop
 1e0e8f0:    38 31             	if (r0 != 0) goto -400 <lbuf_realloc+0x68 : 1e0e762 >
 1e0e8f2:    e0 01             	[--sp] = {psr}


usr_systimer_lp_target:
 1e0e8f4:    2a f1 e0 01       	if ((r10 & r2) != 0) goto 960 <dev_id_list+0x7C : 1e0ecb8 >
 1e0e8f8:    00 00             	nop
 1e0e8fa:    00 00             	nop
 1e0e8fc:    e0 b5             	r0 = r2 - r7
 1e0e8fe:    e0 01             	[--sp] = {psr}


btstack_lowpower_target:
 1e0e900:    70 f1 e0 01       	if ((r0 & r7) != 0) goto 960 <dev_id_list+0x88 : 1e0ecc4 >
 1e0e904:    00 00             	nop
 1e0e906:    00 00             	nop
 1e0e908:    ec 73             	r12 = 62
 1e0e90a:    e0 01             	[--sp] = {psr}


uart:
 1e0e90c:    a0 f0 e0 01       	if ((r0 & r10) == 0) goto 960 <dev_id_list+0x94 : 1e0ecd0 >
 1e0e910:    aa 2e             	if (r7 == 0) goto 340 <connection_param_table+0x16 : 1e0ea66 >
 1e0e912:    e0 01             	[--sp] = {psr}
 1e0e914:    c8 2e             	if (r7 == 0) goto 400 <task_info_table+0x2 : 1e0eaa6 >
 1e0e916:    e0 01             	[--sp] = {psr}


clock_sfc:
 1e0e918:    9a f0 e0 01       	if ((r10 & r9) == 0) goto 960 <dev_id_list+0xA0 : 1e0ecdc >
 1e0e91c:    22 3e             	if (r7 != 0) goto 68 <update_target_end+0x6 : 1e0e962 >
 1e0e91e:    00 00             	nop
 1e0e920:    24 3e             	if (r7 != 0) goto 72 <update_target_end+0xE : 1e0e96a >
 1e0e922:    00 00             	nop


tmr:
 1e0e924:    a5 f0 e0 01       	if ((r5 & r10) == 0) goto 960 <dev_id_list+0xAC : 1e0ece8 >
 1e0e928:    fa 2e             	if (r7 == 0) goto 500 <app_spple_ops+0x2 : 1e0eb1e >
 1e0e92a:    e0 01             	[--sp] = {psr}
 1e0e92c:    36 3e             	if (r7 != 0) goto 108 <charge_dev_ops+0x1A : 1e0e99a >
 1e0e92e:    00 00             	nop


os:
 1e0e930:    f9 f0 e0 01       	if ((r9 & r15) == 0) goto 960 <dev_id_list+0xB8 : 1e0ecf4 >
 1e0e934:    56 bb             	r6 &= r5
 1e0e936:    e0 01             	[--sp] = {psr}
 1e0e938:    58 bb             	r8 &= r5
 1e0e93a:    e0 01             	[--sp] = {psr}


bt:
 1e0e93c:    98 f1 e0 01       	if ((r8 & r9) != 0) goto 960 <dev_id_list+0xC4 : 1e0ed00 >
 1e0e940:    8e f9 e0 01       	r14 = b[r0 ++= 480] (u)
 1e0e944:    18 fa e0 01       	b[r0+r1] = r8


vm_sfc:
 1e0e948:    1c f2 e0 01       	if (r12 == r1) goto 960 <dev_id_list+0xD0 : 1e0ed0c >
 1e0e94c:    0e 44             	[r2 + 0] = r6
 1e0e94e:    00 00             	nop
 1e0e950:    2a 44             	[r2 + 8] = r2
 1e0e952:    00 00             	nop


update_target_begin:
 1e0e954:    dc f1 e0 01       	if ((r12 & r13) != 0) goto 960 <dev_id_list+0xDC : 1e0ed18 >
 1e0e958:    dc 1e             	goto -584 <lbuf_realloc+0x18 : 1e0e712 >
 1e0e95a:    e1 01             	[--sp] = {psr, reti}


update_target_end:
 1e0e95c:    7a 0f             	r2 = r7 * r5
 1e0e95e:    a2 0f             	r2 = r4 * r6
 1e0e960:    cc 0f             	r4 = r1 * r7
 1e0e962:    f6 0f             	r6 = r6 * r7
 1e0e964:    22 10             	call 68 <profile_data+0xA : 1e0e9aa >
 1e0e966:    4f 10             	call 158 <profile_data+0x66 : 1e0ea06 >
 1e0e968:    7e 10             	call 252 <connection_param_table+0x16 : 1e0ea66 >
 1e0e96a:    ae 10             	call 348 <task_info_table+0x24 : 1e0eac8 >
 1e0e96c:    d4 10             	call 424 <task_info_table+0x72 : 1e0eb16 >
 1e0e96e:    fd 10             	call 506 <wk_param+0x32 : 1e0eb6a >
 1e0e970:    27 11             	call 590 <timer_div+0x1C : 1e0ebc0 >
 1e0e972:    52 11             	call 676 <wdt_time+0x1C : 1e0ec18 >
 1e0e974:    78 11             	call 752 <dev_id_list+0x2A : 1e0ec66 >
 1e0e976:    a5 11             	call 842 <dev_id_list+0x86 : 1e0ecc2 >
 1e0e978:    d4 11             	call 936 <dev_id_list+0xE6 : 1e0ed22 >
 1e0e97a:    03 12             	call 1030 <dev_id_list+0x146 : 1e0ed82 >
 1e0e97c:    00 00             	nop
 1e0e97e:    00 00             	nop


charge_dev_ops:
 1e0e980:    00 00             	nop
 1e0e982:    00 00             	nop
 1e0e984:    52 08             	r2 = r5
 1e0e986:    e0 01             	[--sp] = {psr}
 1e0e988:    00 00             	nop
 1e0e98a:    00 00             	nop
 1e0e98c:    00 00             	nop
 1e0e98e:    00 00             	nop
 1e0e990:    00 00             	nop
 1e0e992:    00 00             	nop
 1e0e994:    00 00             	nop
 1e0e996:    00 00             	nop
 1e0e998:    00 00             	nop
 1e0e99a:    00 00             	nop
 1e0e99c:    00 00             	nop
 1e0e99e:    00 00             	nop


profile_data:
 1e0e9a0:    0a 00             	ssync
 1e0e9a2:    02 00             	idle
 1e0e9a4:    01 00             	nop
 1e0e9a6:    00 28             	if (r4 == 0) goto 0 <profile_data+0x8 : 1e0e9a8 >
 1e0e9a8:    0f 18             	goto 30 <profile_data+0x28 : 1e0e9c8 >
 1e0e9aa:    0d 00             	syscall
 1e0e9ac:    02 00             	idle
 1e0e9ae:    02 00             	idle
 1e0e9b0:    03 28             	if (r4 == 0) goto 6 <profile_data+0x18 : 1e0e9b8 >
 1e0e9b2:    12 03             	r2 = [sp+68]
 1e0e9b4:    00 19             	goto 512 <timer_div+0x12 : 1e0ebb6 >
 1e0e9b6:    2a 08             	r10 = r2
 1e0e9b8:    00 12             	call 1024 <dev_id_list+0x17E : 1e0edba >
 1e0e9ba:    01 03             	r1 = [sp+64]
 1e0e9bc:    00 19             	goto 512 <timer_div+0x1A : 1e0ebbe >
 1e0e9be:    2a 0a             	sp += 84
 1e0e9c0:    00 0a             	sp += 0
 1e0e9c2:    01 04             	r1 = r0.b0 (u)
 1e0e9c4:    00 02             	r0 = [sp]
 1e0e9c6:    29 00             	swi 1
 1e0e9c8:    00 18             	goto 0 <profile_data+0x2A : 1e0e9ca >
 1e0e9ca:    00 02             	r0 = [sp]
 1e0e9cc:    00 05             	r0 = r4.b0 (u)
 1e0e9ce:    00 00             	nop
 1e0e9d0:    28 ef be d1       	ifs (r8 <= -14) goto 892 <dev_id_list+0x114 : 1e0ed50 >
 1e0e9d4:    fd 94             	r13 = r2 + 15
 1e0e9d6:    fe ba             	r14 &= 4292870143
 1e0e9d8:    af 6a             	b[r5 + 10] = r7
 1e0e9da:    4b 69             	b[r4 + 20] = r3
 1e0e9dc:    4d 10             	call 154 <connection_param_table+0x28 : 1e0ea78 >
 1e0e9de:    00 c6             	r0 = r0 << 24
 1e0e9e0:    85 1b             	goto 1802 <bluetooth_base_uuid+0xE2 : 1e0f0ec >
 1e0e9e2:    00 02             	r0 = [sp]
 1e0e9e4:    00 06             	r0 = -32
 1e0e9e6:    00 03             	r0 = [sp+64]
 1e0e9e8:    28 08             	r8 = r2
 1e0e9ea:    07 00             	hbkpt
 1e0e9ec:    ef be             	r15 = r7 - r3
 1e0e9ee:    d1 fd 94 fe       	r15 <= insert(r14, p:18, l:17)
 1e0e9f2:    ba af             	r10 = sp + 251
 1e0e9f4:    6a 4b             	[r5 + 88] = r2
 1e0e9f6:    69 4d             	[r6 + 88] = r1
 1e0e9f8:    01 00             	nop
 1e0e9fa:    c6 85             	r6 += 92
 1e0e9fc:    16 00             	lockset
 1e0e9fe:    08 03             	[sp+64] = r0
 1e0ea00:    07 00             	hbkpt
 1e0ea02:    ef be             	r15 = r7 - r3
 1e0ea04:    d1 fd 94 fe       	r15 <= insert(r14, p:18, l:17)
 1e0ea08:    ba af             	r10 = sp + 251
 1e0ea0a:    6a 4b             	[r5 + 88] = r2
 1e0ea0c:    69 4d             	[r6 + 88] = r1
 1e0ea0e:    01 00             	nop
 1e0ea10:    c6 85             	r6 += 92
 1e0ea12:    1b 00             	cli
 1e0ea14:    02 00             	idle
 1e0ea16:    08 00             	csync
 1e0ea18:    03 28             	if (r4 == 0) goto 6 <profile_data+0x80 : 1e0ea20 >
 1e0ea1a:    10 09             	r0 += r1
 1e0ea1c:    00 ef be d1       	ifs (r0 <= -16) goto 892 <dev_id_list+0x160 : 1e0ed9c >
 1e0ea20:    fd 94             	r13 = r2 + 15
 1e0ea22:    fe ba             	r14 &= 4292870143
 1e0ea24:    af 6a             	b[r5 + 10] = r7
 1e0ea26:    4b 69             	b[r4 + 20] = r3
 1e0ea28:    4d 02             	[sp+16] = r5
 1e0ea2a:    00 c6             	r0 = r0 << 24
 1e0ea2c:    85 16             	call -758 <lbuf_realloc+0x3E : 1e0e738 >
 1e0ea2e:    00 10             	call 0 <profile_data+0x90 : 1e0ea30 >
 1e0ea30:    02 09             	r2 += r0
 1e0ea32:    00 ef be d1       	ifs (r0 <= -16) goto 892 <dev_id_list+0x176 : 1e0edb2 >
 1e0ea36:    fd 94             	r13 = r2 + 15
 1e0ea38:    fe ba             	r14 &= 4292870143
 1e0ea3a:    af 6a             	b[r5 + 10] = r7
 1e0ea3c:    4b 69             	b[r4 + 20] = r3
 1e0ea3e:    4d 02             	[sp+16] = r5
 1e0ea40:    00 c6             	r0 = r0 << 24
 1e0ea42:    85 0a             	sp += 264
 1e0ea44:    00 0a             	sp += 0
 1e0ea46:    01 0a             	sp += 0
 1e0ea48:    00 02             	r0 = [sp]
 1e0ea4a:    29 00             	swi 1
 1e0ea4c:    00 00             	nop
 1e0ea4e:    00 00             	nop


connection_param_table:
 1e0ea50:    10 00             	lockclr
 1e0ea52:    18 00             	cli
 1e0ea54:    0a 00             	ssync
 1e0ea56:    58 02             	[sp+20] = r0
 1e0ea58:    0c 00             	syscall
 1e0ea5a:    1c 00             	sti
 1e0ea5c:    0a 00             	ssync
 1e0ea5e:    58 02             	[sp+20] = r0
 1e0ea60:    08 00             	csync
 1e0ea62:    14 00             	lockset
 1e0ea64:    0a 00             	ssync
 1e0ea66:    58 02             	[sp+20] = r0
 1e0ea68:    05 5a             	r5 = h[r5 + 0] (u)
 1e0ea6a:    00 00             	nop
 1e0ea6c:    4e 15             	call -1380 <lbuf_alloc+0x30 : 1e0e50a >
 1e0ea6e:    e0 01             	[--sp] = {psr}
 1e0ea70:    14 73             	r4 = 49
 1e0ea72:    e1 01             	[--sp] = {psr, reti}
 1e0ea74:    01 00             	nop
 1e0ea76:    00 00             	nop
 1e0ea78:    09 5a             	h[r5 + 0] = r1
 1e0ea7a:    00 00             	nop
 1e0ea7c:    e4 13             	call 1992 <gpio_regs+0xA : 1e0f246 >
 1e0ea7e:    e0 01             	[--sp] = {psr}
 1e0ea80:    30 73             	r0 = 51
 1e0ea82:    e1 01             	[--sp] = {psr, reti}
 1e0ea84:    01 00             	nop
 1e0ea86:    00 00             	nop


led_port:
 1e0ea88:    14 07             	r4 = -15
 1e0ea8a:    16 08             	r6 = r1
 1e0ea8c:    09 01             	{r9-r4} = [sp++]
 1e0ea8e:    02 3f             	if (r7 != 0) goto -508 <cfg_bin+0x10 : 1e0e894 >


LED_NUMBER:
 1e0ea8f:    3f 06             	r15 = -29
 1e0ea91:    5b 4f             	[r7 + 84] = r3
 1e0ea93:    66 6d             	r6 = b[r6 + 22] (u)
 1e0ea95:    7d 07             	r13 = -9
 1e0ea97:    7f 6f             	b[r7 + 23] = r7
 1e0ea99:    00 00             	nop
 1e0ea9b:    00 54             	r0 = h[r2 + 0] (u)


app_idle_ops:
 1e0ea9c:    54 1b             	goto 1704 <bluetooth_base_uuid+0x13C : 1e0f146 >
 1e0ea9e:    e0 01             	[--sp] = {psr}
 1e0eaa0:    04 20             	if (r0 == 0) goto 8 <task_info_table+0x6 : 1e0eaaa >
 1e0eaa2:    e0 01             	[--sp] = {psr}


task_info_table:
 1e0eaa4:    37 f1 e0 01       	if ((r7 & r3) != 0) goto 960 <dev_id_list+0x22C : 1e0ee68 >
 1e0eaa8:    01 00             	nop
 1e0eaaa:    80 02             	r0 = [sp+32]
 1e0eaac:    80 00             	call r0
 1e0eaae:    00 00             	nop
 1e0eab0:    00 f1 e0 01       	if ((r0 & r0) != 0) goto 960 <dev_id_list+0x238 : 1e0ee74 >
 1e0eab4:    07 00             	hbkpt
 1e0eab6:    00 01             	{r3-r0} = [sp++]
 1e0eab8:    00 00             	nop
 1e0eaba:    00 00             	nop
 1e0eabc:    05 f2 e0 01       	if (r5 == r0) goto 960 <dev_id_list+0x244 : 1e0ee80 >
 1e0eac0:    04 00             	bkpt
 1e0eac2:    00 02             	r0 = [sp]
 1e0eac4:    00 01             	{r3-r0} = [sp++]
 1e0eac6:    00 00             	nop
 1e0eac8:    59 f0 e0 01       	if ((r9 & r5) == 0) goto 960 <dev_id_list+0x250 : 1e0ee8c >
 1e0eacc:    01 00             	nop
 1e0eace:    00 02             	r0 = [sp]
 1e0ead0:    80 00             	call r0
 1e0ead2:    00 00             	nop
 1e0ead4:    85 f1 e0 01       	if ((r5 & r8) != 0) goto 960 <dev_id_list+0x25C : 1e0ee98 >
 1e0ead8:    03 00             	idle
 1e0eada:    00 03             	r0 = [sp+64]
 1e0eadc:    00 01             	{r3-r0} = [sp++]
 1e0eade:    00 00             	nop
 1e0eae0:    2e f1 e0 01       	if ((r14 & r2) != 0) goto 960 <dev_id_list+0x268 : 1e0eea4 >
 1e0eae4:    07 00             	hbkpt
 1e0eae6:    80 00             	call r0
 1e0eae8:    00 00             	nop
 1e0eaea:    00 00             	nop
 1e0eaec:    64 f0 e0 01       	if ((r4 & r6) == 0) goto 960 <dev_id_list+0x274 : 1e0eeb0 >
 1e0eaf0:    01 00             	nop
 1e0eaf2:    40 01              <unkown instruction>
 1e0eaf4:    00 00             	nop
 1e0eaf6:    00 00             	nop
 1e0eaf8:    61 f0 e0 01       	if ((r1 & r6) == 0) goto 960 <dev_id_list+0x280 : 1e0eebc >
 1e0eafc:    02 00             	idle
 1e0eafe:    00 01             	{r3-r0} = [sp++]
 1e0eb00:    80 00             	call r0
 1e0eb02:    00 00             	nop
 1e0eb04:    6b f0 e0 01       	if ((r11 & r6) == 0) goto 960 <dev_id_list+0x28C : 1e0eec8 >
 1e0eb08:    01 00             	nop
 1e0eb0a:    00 02             	r0 = [sp]
 1e0eb0c:    80 00             	call r0
 1e0eb0e:    00 00             	nop
 1e0eb10:    00 00             	nop
 1e0eb12:    00 00             	nop
 1e0eb14:    00 00             	nop
 1e0eb16:    00 00             	nop
 1e0eb18:    00 00             	nop
 1e0eb1a:    00 00             	nop


app_spple_ops:
 1e0eb1c:    64 22             	if (r1 == 0) goto 200 <timer_power_ops+0x2 : 1e0ebe6 >
 1e0eb1e:    e0 01             	[--sp] = {psr}
 1e0eb20:    f8 23             	if (r1 == 0) goto -16 <task_info_table+0x6E : 1e0eb12 >
 1e0eb22:    e0 01             	[--sp] = {psr}
 1e0eb24:    ff ff ff ff ff ff 	pc = 4294967295


btif_table:
 1e0eb2a:    66 00             	cli r6
 1e0eb2c:    06 00             	hbkpt
 1e0eb2e:    6e 00             	cli r14
 1e0eb30:    06 00             	hbkpt
 1e0eb32:    00 00             	nop
 1e0eb34:    00 00             	nop
 1e0eb36:    00 00             	nop


wk_param:
 1e0eb38:    00 00             	nop
 1e0eb3a:    00 00             	nop
 1e0eb3c:    5a 08             	r10 = r5
 1e0eb3e:    00 00             	nop
 1e0eb40:    00 00             	nop
 1e0eb42:    00 00             	nop
 1e0eb44:    5f 08             	r15 = r5
 1e0eb46:    00 00             	nop
 1e0eb48:    64 08             	r4 = r6
 1e0eb4a:    00 00             	nop
 1e0eb4c:    00 00             	nop
 1e0eb4e:    00 00             	nop
 1e0eb50:    00 00             	nop
 1e0eb52:    00 00             	nop
 1e0eb54:    00 00             	nop
 1e0eb56:    00 00             	nop
 1e0eb58:    00 00             	nop
 1e0eb5a:    00 00             	nop
 1e0eb5c:    00 00             	nop
 1e0eb5e:    00 00             	nop
 1e0eb60:    00 00             	nop
 1e0eb62:    00 00             	nop
 1e0eb64:    00 00             	nop
 1e0eb66:    00 00             	nop
 1e0eb68:    69 08             	r9 = r6
 1e0eb6a:    00 00             	nop
 1e0eb6c:    6e 08             	r14 = r6
 1e0eb6e:    00 00             	nop
 1e0eb70:    73 08             	r3 = r7
 1e0eb72:    00 00             	nop
 1e0eb74:    00 00             	nop
 1e0eb76:    00 00             	nop
 1e0eb78:    00 00             	nop
 1e0eb7a:    00 00             	nop
 1e0eb7c:    00 00             	nop
 1e0eb7e:    00 00             	nop
 1e0eb80:    00 00             	nop
 1e0eb82:    00 00             	nop
 1e0eb84:    ff 01             	[--sp] = {psr, sr4, rets, retx, rete, reti}
 1e0eb86:    ff 03             	[sp+124] = r7
 1e0eb88:    ff 03             	[sp+124] = r7
 1e0eb8a:    00 00             	nop


adkey_data:
 1e0eb8c:    01 32             	if (r1 != 0) goto 2 <adkey_data+0x4 : 1e0eb90 >
 1e0eb8e:    01 00             	nop
 1e0eb90:    0b 00             	ssync
 1e0eb92:    00 00             	nop
 1e0eb94:    3d 00             	sp = ssp
 1e0eb96:    ad 00             	tbb [r13]
 1e0eb98:    00 01             	{r3-r0} = [sp++]
 1e0eb9a:    00 00             	nop
 1e0eb9c:    fe ff 00 01 02 00 	sp = 131328
 1e0eba2:    00 00             	nop


timer_div:
 1e0eba4:    01 00             	nop
 1e0eba6:    00 00             	nop
 1e0eba8:    04 00             	bkpt
 1e0ebaa:    00 00             	nop
 1e0ebac:    10 00             	lockclr
 1e0ebae:    00 00             	nop
 1e0ebb0:    40 00             	testset b[r0]
 1e0ebb2:    00 00             	nop
 1e0ebb4:    02 00             	idle
 1e0ebb6:    00 00             	nop
 1e0ebb8:    08 00             	csync
 1e0ebba:    00 00             	nop
 1e0ebbc:    20 00             	rts
 1e0ebbe:    00 00             	nop
 1e0ebc0:    80 00             	call r0
 1e0ebc2:    00 00             	nop
 1e0ebc4:    00 01             	{r3-r0} = [sp++]
 1e0ebc6:    00 00             	nop
 1e0ebc8:    00 04             	r0 = r0.b0 (u)
 1e0ebca:    00 00             	nop
 1e0ebcc:    00 10             	call 0 <timer_div+0x2A : 1e0ebce >
 1e0ebce:    00 00             	nop
 1e0ebd0:    00 40             	r0 = [r0 + 0]
 1e0ebd2:    00 00             	nop
 1e0ebd4:    00 02             	r0 = [sp]
 1e0ebd6:    00 00             	nop
 1e0ebd8:    00 08             	r0 = r0
 1e0ebda:    00 00             	nop
 1e0ebdc:    00 20             	if (r0 == 0) goto 0 <timer_div+0x3A : 1e0ebde >
 1e0ebde:    00 00             	nop
 1e0ebe0:    00 80             	r0 += 0
 1e0ebe2:    00 00             	nop


timer_power_ops:
 1e0ebe4:    00 00             	nop
 1e0ebe6:    00 00             	nop
 1e0ebe8:    00 00             	nop
 1e0ebea:    00 00             	nop
 1e0ebec:    00 00             	nop
 1e0ebee:    00 00             	nop
 1e0ebf0:    78 2f             	if (r7 == 0) goto -272 <task_info_table+0x3E : 1e0eae2 >
 1e0ebf2:    e0 01             	[--sp] = {psr}
 1e0ebf4:    96 2f             	if (r7 == 0) goto -212 <app_spple_ops+0x6 : 1e0eb22 >
 1e0ebf6:    e0 01             	[--sp] = {psr}
 1e0ebf8:    00 00             	nop
 1e0ebfa:    00 00             	nop


wdt_time:
 1e0ebfc:    01 00             	nop
 1e0ebfe:    00 00             	nop
 1e0ec00:    02 00             	idle
 1e0ec02:    00 00             	nop
 1e0ec04:    04 00             	bkpt
 1e0ec06:    00 00             	nop
 1e0ec08:    08 00             	csync
 1e0ec0a:    00 00             	nop
 1e0ec0c:    10 00             	lockclr
 1e0ec0e:    00 00             	nop
 1e0ec10:    20 00             	rts
 1e0ec12:    00 00             	nop
 1e0ec14:    40 00             	testset b[r0]
 1e0ec16:    00 00             	nop
 1e0ec18:    80 00             	call r0
 1e0ec1a:    00 00             	nop
 1e0ec1c:    00 01             	{r3-r0} = [sp++]
 1e0ec1e:    00 00             	nop
 1e0ec20:    00 02             	r0 = [sp]
 1e0ec22:    00 00             	nop
 1e0ec24:    00 04             	r0 = r0.b0 (u)
 1e0ec26:    00 00             	nop
 1e0ec28:    00 08             	r0 = r0
 1e0ec2a:    00 00             	nop
 1e0ec2c:    00 10             	call 0 <wdt_time+0x32 : 1e0ec2e >
 1e0ec2e:    00 00             	nop
 1e0ec30:    00 20             	if (r0 == 0) goto 0 <wdt_time+0x36 : 1e0ec32 >
 1e0ec32:    00 00             	nop
 1e0ec34:    00 40             	r0 = [r0 + 0]
 1e0ec36:    00 00             	nop
 1e0ec38:    00 80             	r0 += 0
 1e0ec3a:    00 00             	nop


dev_id_list:
 1e0ec3c:    44 42             	r4 = [r1 + 16]
 1e0ec3e:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ec40:    52 45             	r2 = [r2 + 84]
 1e0ec42:    56 00             	testset b[r6]
 1e0ec44:    00 00             	nop
 1e0ec46:    00 00             	nop
 1e0ec48:    00 00             	nop
 1e0ec4a:    00 00             	nop
 1e0ec4c:    00 44             	r0 = [r2 + 0]
 1e0ec4e:    42 47             	r2 = [r3 + 80]
 1e0ec50:    5f 41             	[r0 + 84] = r7
 1e0ec52:    4c 4e             	[r7 + 16] = r4
 1e0ec54:    4b 30             	if (r0 != 0) goto 150 <dev_id_list+0xB0 : 1e0ecec >
 1e0ec56:    00 00             	nop
 1e0ec58:    00 00             	nop
 1e0ec5a:    00 00             	nop
 1e0ec5c:    00 01             	{r3-r0} = [sp++]
 1e0ec5e:    44 42             	r4 = [r1 + 16]
 1e0ec60:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ec62:    41 4c             	r1 = [r6 + 16]
 1e0ec64:    4e 4b             	[r5 + 80] = r6
 1e0ec66:    31 00             	pc = [sp++]
 1e0ec68:    00 00             	nop
 1e0ec6a:    00 00             	nop
 1e0ec6c:    00 00             	nop
 1e0ec6e:    02 44             	r2 = [r2 + 0]
 1e0ec70:    42 47             	r2 = [r3 + 80]
 1e0ec72:    5f 41             	[r0 + 84] = r7
 1e0ec74:    55 44             	r5 = [r2 + 20]
 1e0ec76:    49 4f             	[r7 + 80] = r1
 1e0ec78:    00 00             	nop
 1e0ec7a:    00 00             	nop
 1e0ec7c:    00 00             	nop
 1e0ec7e:    00 03             	r0 = [sp+64]
 1e0ec80:    44 42             	r4 = [r1 + 16]
 1e0ec82:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ec84:    53 50             	r3 = h[r0 + 10] (u)
 1e0ec86:    44 49             	r4 = [r4 + 80]
 1e0ec88:    46 5f             	r6 = h[r7 + 40] (u)
 1e0ec8a:    44 00             	testset b[r4]
 1e0ec8c:    00 00             	nop
 1e0ec8e:    00 00             	nop
 1e0ec90:    04 44             	r4 = [r2 + 0]
 1e0ec92:    42 47             	r2 = [r3 + 80]
 1e0ec94:    5f 53             	h[r1 + 42] = r7
 1e0ec96:    50 44             	r0 = [r2 + 20]
 1e0ec98:    49 46             	[r3 + 16] = r1
 1e0ec9a:    5f 49             	[r4 + 84] = r7
 1e0ec9c:    00 00             	nop
 1e0ec9e:    00 00             	nop
 1e0eca0:    00 05             	r0 = r4.b0 (u)
 1e0eca2:    44 42             	r4 = [r1 + 16]
 1e0eca4:    47 5f             	r7 = h[r7 + 40] (u)
 1e0eca6:    49 53             	h[r1 + 40] = r1
 1e0eca8:    50 00             	testset b[r0]
 1e0ecaa:    00 00             	nop
 1e0ecac:    00 00             	nop
 1e0ecae:    00 00             	nop
 1e0ecb0:    00 00             	nop
 1e0ecb2:    06 44             	r6 = [r2 + 0]
 1e0ecb4:    42 47             	r2 = [r3 + 80]
 1e0ecb6:    5f 50             	h[r0 + 10] = r7
 1e0ecb8:    41 50             	r1 = h[r0 + 8] (u)
 1e0ecba:    00 00             	nop
 1e0ecbc:    00 00             	nop
 1e0ecbe:    00 00             	nop
 1e0ecc0:    00 00             	nop
 1e0ecc2:    00 07             	r0 = -16
 1e0ecc4:    44 42             	r4 = [r1 + 16]
 1e0ecc6:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ecc8:    50 4c             	r0 = [r6 + 20]
 1e0ecca:    4e 4b             	[r5 + 80] = r6
 1e0eccc:    00 00             	nop
 1e0ecce:    00 00             	nop
 1e0ecd0:    00 00             	nop
 1e0ecd2:    00 00             	nop
 1e0ecd4:    08 44             	[r2 + 0] = r0
 1e0ecd6:    42 47             	r2 = [r3 + 80]
 1e0ecd8:    5f 53             	h[r1 + 42] = r7
 1e0ecda:    42 43             	r2 = [r1 + 80]
 1e0ecdc:    00 00             	nop
 1e0ecde:    00 00             	nop
 1e0ece0:    00 00             	nop
 1e0ece2:    00 00             	nop
 1e0ece4:    00 09             	r0 += r0
 1e0ece6:    44 42             	r4 = [r1 + 16]
 1e0ece8:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ecea:    41 41             	r1 = [r0 + 80]
 1e0ecec:    43 00             	testset b[r3]
 1e0ecee:    00 00             	nop
 1e0ecf0:    00 00             	nop
 1e0ecf2:    00 00             	nop
 1e0ecf4:    00 00             	nop
 1e0ecf6:    0a 44             	[r2 + 0] = r2
 1e0ecf8:    42 47             	r2 = [r3 + 80]
 1e0ecfa:    5f 41             	[r0 + 84] = r7
 1e0ecfc:    45 53             	r5 = h[r1 + 40] (u)
 1e0ecfe:    00 00             	nop
 1e0ed00:    00 00             	nop
 1e0ed02:    00 00             	nop
 1e0ed04:    00 00             	nop
 1e0ed06:    00 0b             	sp += -512
 1e0ed08:    44 42             	r4 = [r1 + 16]
 1e0ed0a:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ed0c:    53 44             	r3 = [r2 + 20]
 1e0ed0e:    30 00             	pc = [sp++]
 1e0ed10:    00 00             	nop
 1e0ed12:    00 00             	nop
 1e0ed14:    00 00             	nop
 1e0ed16:    00 00             	nop
 1e0ed18:    0c 44             	[r2 + 0] = r4
 1e0ed1a:    42 47             	r2 = [r3 + 80]
 1e0ed1c:    5f 53             	h[r1 + 42] = r7
 1e0ed1e:    44 31             	if (r0 != 0) goto -376 <timer_div+0x4 : 1e0eba8 >
 1e0ed20:    00 00             	nop
 1e0ed22:    00 00             	nop
 1e0ed24:    00 00             	nop
 1e0ed26:    00 00             	nop
 1e0ed28:    00 0d             	r0 <<= r4
 1e0ed2a:    44 42             	r4 = [r1 + 16]
 1e0ed2c:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ed2e:    53 50             	r3 = h[r0 + 10] (u)
 1e0ed30:    49 30             	if (r0 != 0) goto 146 <dev_id_list+0x188 : 1e0edc4 >
 1e0ed32:    00 00             	nop
 1e0ed34:    00 00             	nop
 1e0ed36:    00 00             	nop
 1e0ed38:    00 00             	nop
 1e0ed3a:    0e 44             	[r2 + 0] = r6
 1e0ed3c:    42 47             	r2 = [r3 + 80]
 1e0ed3e:    5f 53             	h[r1 + 42] = r7
 1e0ed40:    50 49             	r0 = [r4 + 84]
 1e0ed42:    31 00             	pc = [sp++]
 1e0ed44:    00 00             	nop
 1e0ed46:    00 00             	nop
 1e0ed48:    00 00             	nop
 1e0ed4a:    00 0f             	r0 = r0 * r4
 1e0ed4c:    44 42             	r4 = [r1 + 16]
 1e0ed4e:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ed50:    53 50             	r3 = h[r0 + 10] (u)
 1e0ed52:    49 32             	if (r1 != 0) goto 146 <dev_id_list+0x1AA : 1e0ede6 >
 1e0ed54:    00 00             	nop
 1e0ed56:    00 00             	nop
 1e0ed58:    00 00             	nop
 1e0ed5a:    00 00             	nop
 1e0ed5c:    10 44             	r0 = [r2 + 4]
 1e0ed5e:    42 47             	r2 = [r3 + 80]
 1e0ed60:    5f 55             	h[r2 + 42] = r7
 1e0ed62:    41 52             	r1 = h[r1 + 8] (u)
 1e0ed64:    54 30             	if (r0 != 0) goto 168 <dev_id_list+0x1D2 : 1e0ee0e >
 1e0ed66:    57 00             	testset b[r7]
 1e0ed68:    00 00             	nop
 1e0ed6a:    00 00             	nop
 1e0ed6c:    00 11             	call 512 <dev_id_list+0x332 : 1e0ef6e >
 1e0ed6e:    44 42             	r4 = [r1 + 16]
 1e0ed70:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ed72:    55 41             	r5 = [r0 + 84]
 1e0ed74:    52 54             	r2 = h[r2 + 10] (u)
 1e0ed76:    30 52             	r0 = h[r1 + 6] (u)
 1e0ed78:    00 00             	nop
 1e0ed7a:    00 00             	nop
 1e0ed7c:    00 00             	nop
 1e0ed7e:    12 44             	r2 = [r2 + 4]
 1e0ed80:    42 47             	r2 = [r3 + 80]
 1e0ed82:    5f 55             	h[r2 + 42] = r7
 1e0ed84:    41 52             	r1 = h[r1 + 8] (u)
 1e0ed86:    54 31             	if (r0 != 0) goto -344 <wdt_time+0x34 : 1e0ec30 >
 1e0ed88:    57 00             	testset b[r7]
 1e0ed8a:    00 00             	nop
 1e0ed8c:    00 00             	nop
 1e0ed8e:    00 13             	call 1536 <m_code_addr+0xB0 : 1e0f390 >
 1e0ed90:    44 42             	r4 = [r1 + 16]
 1e0ed92:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ed94:    55 41             	r5 = [r0 + 84]
 1e0ed96:    52 54             	r2 = h[r2 + 10] (u)
 1e0ed98:    31 52             	r1 = h[r1 + 6] (u)
 1e0ed9a:    00 00             	nop
 1e0ed9c:    00 00             	nop
 1e0ed9e:    00 00             	nop
 1e0eda0:    14 44             	r4 = [r2 + 4]
 1e0eda2:    42 47             	r2 = [r3 + 80]
 1e0eda4:    5f 55             	h[r2 + 42] = r7
 1e0eda6:    41 52             	r1 = h[r1 + 8] (u)
 1e0eda8:    54 32             	if (r1 != 0) goto 168 <dev_id_list+0x216 : 1e0ee52 >
 1e0edaa:    57 00             	testset b[r7]
 1e0edac:    00 00             	nop
 1e0edae:    00 00             	nop
 1e0edb0:    00 15             	call -1536 <lbuf_realloc+0xB8 : 1e0e7b2 >
 1e0edb2:    44 42             	r4 = [r1 + 16]
 1e0edb4:    47 5f             	r7 = h[r7 + 40] (u)
 1e0edb6:    55 41             	r5 = [r0 + 84]
 1e0edb8:    52 54             	r2 = h[r2 + 10] (u)
 1e0edba:    32 52             	r2 = h[r1 + 6] (u)
 1e0edbc:    00 00             	nop
 1e0edbe:    00 00             	nop
 1e0edc0:    00 00             	nop
 1e0edc2:    16 44             	r6 = [r2 + 4]
 1e0edc4:    42 47             	r2 = [r3 + 80]
 1e0edc6:    5f 43             	[r1 + 84] = r7
 1e0edc8:    54 4d             	r4 = [r6 + 84]
 1e0edca:    00 00             	nop
 1e0edcc:    00 00             	nop
 1e0edce:    00 00             	nop
 1e0edd0:    00 00             	nop
 1e0edd2:    00 17             	call -512 <timer_div+0x30 : 1e0ebd4 >
 1e0edd4:    44 42             	r4 = [r1 + 16]
 1e0edd6:    47 5f             	r7 = h[r7 + 40] (u)
 1e0edd8:    41 58             	r1 = h[r4 + 8] (u)
 1e0edda:    49 5f             	h[r7 + 40] = r1
 1e0eddc:    4d 30             	if (r0 != 0) goto 154 <dev_id_list+0x23C : 1e0ee78 >
 1e0edde:    00 00             	nop
 1e0ede0:    00 00             	nop
 1e0ede2:    00 00             	nop
 1e0ede4:    80 44             	r0 = [r2 + 32]
 1e0ede6:    42 47             	r2 = [r3 + 80]
 1e0ede8:    5f 41             	[r0 + 84] = r7
 1e0edea:    58 49             	[r4 + 84] = r0
 1e0edec:    5f 4d             	[r6 + 84] = r7
 1e0edee:    31 00             	pc = [sp++]
 1e0edf0:    00 00             	nop
 1e0edf2:    00 00             	nop
 1e0edf4:    00 81             	r0 += 16
 1e0edf6:    44 42             	r4 = [r1 + 16]
 1e0edf8:    47 5f             	r7 = h[r7 + 40] (u)
 1e0edfa:    41 58             	r1 = h[r4 + 8] (u)
 1e0edfc:    49 5f             	h[r7 + 40] = r1
 1e0edfe:    4d 32             	if (r1 != 0) goto 154 <dev_id_list+0x25E : 1e0ee9a >
 1e0ee00:    00 00             	nop
 1e0ee02:    00 00             	nop
 1e0ee04:    00 00             	nop
 1e0ee06:    82 44             	r2 = [r2 + 32]
 1e0ee08:    42 47             	r2 = [r3 + 80]
 1e0ee0a:    5f 41             	[r0 + 84] = r7
 1e0ee0c:    58 49             	[r4 + 84] = r0
 1e0ee0e:    5f 4d             	[r6 + 84] = r7
 1e0ee10:    33 00             	pc = [sp++]
 1e0ee12:    00 00             	nop
 1e0ee14:    00 00             	nop
 1e0ee16:    00 83             	r0 += 48
 1e0ee18:    44 42             	r4 = [r1 + 16]
 1e0ee1a:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ee1c:    41 58             	r1 = h[r4 + 8] (u)
 1e0ee1e:    49 5f             	h[r7 + 40] = r1
 1e0ee20:    4d 34             	if (r2 != 0) goto 154 <dev_id_list+0x280 : 1e0eebc >
 1e0ee22:    00 00             	nop
 1e0ee24:    00 00             	nop
 1e0ee26:    00 00             	nop
 1e0ee28:    84 44             	r4 = [r2 + 32]
 1e0ee2a:    42 47             	r2 = [r3 + 80]
 1e0ee2c:    5f 41             	[r0 + 84] = r7
 1e0ee2e:    58 49             	[r4 + 84] = r0
 1e0ee30:    5f 4d             	[r6 + 84] = r7
 1e0ee32:    35 00             	[--sp] = rets
 1e0ee34:    00 00             	nop
 1e0ee36:    00 00             	nop
 1e0ee38:    00 85             	r0 += 80
 1e0ee3a:    44 42             	r4 = [r1 + 16]
 1e0ee3c:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ee3e:    41 58             	r1 = h[r4 + 8] (u)
 1e0ee40:    49 5f             	h[r7 + 40] = r1
 1e0ee42:    4d 36             	if (r3 != 0) goto 154 <dev_id_list+0x2A2 : 1e0eede >
 1e0ee44:    00 00             	nop
 1e0ee46:    00 00             	nop
 1e0ee48:    00 00             	nop
 1e0ee4a:    86 44             	r6 = [r2 + 32]
 1e0ee4c:    42 47             	r2 = [r3 + 80]
 1e0ee4e:    5f 41             	[r0 + 84] = r7
 1e0ee50:    58 49             	[r4 + 84] = r0
 1e0ee52:    5f 4d             	[r6 + 84] = r7
 1e0ee54:    37 00             	[--sp] = rets
 1e0ee56:    00 00             	nop
 1e0ee58:    00 00             	nop
 1e0ee5a:    00 87             	r0 += 112
 1e0ee5c:    44 42             	r4 = [r1 + 16]
 1e0ee5e:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ee60:    41 58             	r1 = h[r4 + 8] (u)
 1e0ee62:    49 5f             	h[r7 + 40] = r1
 1e0ee64:    4d 38             	if (r4 != 0) goto 154 <dev_id_list+0x2C4 : 1e0ef00 >
 1e0ee66:    00 00             	nop
 1e0ee68:    00 00             	nop
 1e0ee6a:    00 00             	nop
 1e0ee6c:    88 44             	[r2 + 32] = r0
 1e0ee6e:    42 47             	r2 = [r3 + 80]
 1e0ee70:    5f 41             	[r0 + 84] = r7
 1e0ee72:    58 49             	[r4 + 84] = r0
 1e0ee74:    5f 4d             	[r6 + 84] = r7
 1e0ee76:    39 00             	cc = 0
 1e0ee78:    00 00             	nop
 1e0ee7a:    00 00             	nop
 1e0ee7c:    00 89             	r0 += -112
 1e0ee7e:    44 42             	r4 = [r1 + 16]
 1e0ee80:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ee82:    41 58             	r1 = h[r4 + 8] (u)
 1e0ee84:    49 5f             	h[r7 + 40] = r1
 1e0ee86:    4d 41             	[r0 + 80] = r5
 1e0ee88:    00 00             	nop
 1e0ee8a:    00 00             	nop
 1e0ee8c:    00 00             	nop
 1e0ee8e:    8a 44             	[r2 + 32] = r2
 1e0ee90:    42 47             	r2 = [r3 + 80]
 1e0ee92:    5f 41             	[r0 + 84] = r7
 1e0ee94:    58 49             	[r4 + 84] = r0
 1e0ee96:    5f 4d             	[r6 + 84] = r7
 1e0ee98:    42 00             	testset b[r2]
 1e0ee9a:    00 00             	nop
 1e0ee9c:    00 00             	nop
 1e0ee9e:    00 8b             	r0 += -80
 1e0eea0:    44 42             	r4 = [r1 + 16]
 1e0eea2:    47 5f             	r7 = h[r7 + 40] (u)
 1e0eea4:    41 58             	r1 = h[r4 + 8] (u)
 1e0eea6:    49 5f             	h[r7 + 40] = r1
 1e0eea8:    4d 43             	[r1 + 80] = r5
 1e0eeaa:    00 00             	nop
 1e0eeac:    00 00             	nop
 1e0eeae:    00 00             	nop
 1e0eeb0:    8c 44             	[r2 + 32] = r4
 1e0eeb2:    42 47             	r2 = [r3 + 80]
 1e0eeb4:    5f 41             	[r0 + 84] = r7
 1e0eeb6:    58 49             	[r4 + 84] = r0
 1e0eeb8:    5f 4d             	[r6 + 84] = r7
 1e0eeba:    44 00             	testset b[r4]
 1e0eebc:    00 00             	nop
 1e0eebe:    00 00             	nop
 1e0eec0:    00 8d             	r0 += -48
 1e0eec2:    44 42             	r4 = [r1 + 16]
 1e0eec4:    47 5f             	r7 = h[r7 + 40] (u)
 1e0eec6:    41 58             	r1 = h[r4 + 8] (u)
 1e0eec8:    49 5f             	h[r7 + 40] = r1
 1e0eeca:    4d 45             	[r2 + 80] = r5
 1e0eecc:    00 00             	nop
 1e0eece:    00 00             	nop
 1e0eed0:    00 00             	nop
 1e0eed2:    8e 44             	[r2 + 32] = r6
 1e0eed4:    42 47             	r2 = [r3 + 80]
 1e0eed6:    5f 41             	[r0 + 84] = r7
 1e0eed8:    58 49             	[r4 + 84] = r0
 1e0eeda:    5f 4d             	[r6 + 84] = r7
 1e0eedc:    46 00             	testset b[r6]
 1e0eede:    00 00             	nop
 1e0eee0:    00 00             	nop
 1e0eee2:    00 8f             	r0 += -16
 1e0eee4:    44 42             	r4 = [r1 + 16]
 1e0eee6:    47 5f             	r7 = h[r7 + 40] (u)
 1e0eee8:    55 53             	r5 = h[r1 + 42] (u)
 1e0eeea:    42 00             	testset b[r2]
 1e0eeec:    00 00             	nop
 1e0eeee:    00 00             	nop
 1e0eef0:    00 00             	nop
 1e0eef2:    00 00             	nop
 1e0eef4:    a0 44             	r0 = [r2 + 40]
 1e0eef6:    42 47             	r2 = [r3 + 80]
 1e0eef8:    5f 42             	[r1 + 20] = r7
 1e0eefa:    54 00             	testset b[r4]
 1e0eefc:    00 00             	nop
 1e0eefe:    00 00             	nop
 1e0ef00:    00 00             	nop
 1e0ef02:    00 00             	nop
 1e0ef04:    00 a2             	r0 = sp + 32
 1e0ef06:    44 42             	r4 = [r1 + 16]
 1e0ef08:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ef0a:    46 46             	r6 = [r3 + 16]
 1e0ef0c:    54 00             	testset b[r4]
 1e0ef0e:    00 00             	nop
 1e0ef10:    00 00             	nop
 1e0ef12:    00 00             	nop
 1e0ef14:    00 00             	nop
 1e0ef16:    a3 44             	r3 = [r2 + 40]
 1e0ef18:    42 47             	r2 = [r3 + 80]
 1e0ef1a:    5f 45             	[r2 + 84] = r7
 1e0ef1c:    51 00             	testset b[r1]
 1e0ef1e:    00 00             	nop
 1e0ef20:    00 00             	nop
 1e0ef22:    00 00             	nop
 1e0ef24:    00 00             	nop
 1e0ef26:    00 a4             	r0 = sp + 64
 1e0ef28:    44 42             	r4 = [r1 + 16]
 1e0ef2a:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ef2c:    46 49             	r6 = [r4 + 80]
 1e0ef2e:    52 00             	testset b[r2]
 1e0ef30:    00 00             	nop
 1e0ef32:    00 00             	nop
 1e0ef34:    00 00             	nop
 1e0ef36:    00 00             	nop
 1e0ef38:    a5 44             	r5 = [r2 + 40]
 1e0ef3a:    42 47             	r2 = [r3 + 80]
 1e0ef3c:    5f 43             	[r1 + 84] = r7
 1e0ef3e:    50 55             	r0 = h[r2 + 42] (u)
 1e0ef40:    30 5f             	r0 = h[r7 + 38] (u)
 1e0ef42:    57 52             	r7 = h[r1 + 10] (u)
 1e0ef44:    00 00             	nop
 1e0ef46:    00 00             	nop
 1e0ef48:    00 f0 44 42       	if ((r0 & r0) == 0) goto 33928 <update_loader_match_tab+0x88 : 1e173d4 >
 1e0ef4c:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ef4e:    43 50             	r3 = h[r0 + 8] (u)
 1e0ef50:    55 30             	if (r0 != 0) goto 170 <sys_power_ops+0x10 : 1e0effc >
 1e0ef52:    5f 52             	h[r1 + 10] = r7
 1e0ef54:    44 00             	testset b[r4]
 1e0ef56:    00 00             	nop
 1e0ef58:    00 00             	nop
 1e0ef5a:    f1 44             	r1 = [r2 + 60]
 1e0ef5c:    42 47             	r2 = [r3 + 80]
 1e0ef5e:    5f 43             	[r1 + 84] = r7
 1e0ef60:    50 55             	r0 = h[r2 + 42] (u)
 1e0ef62:    30 5f             	r0 = h[r7 + 38] (u)
 1e0ef64:    49 46             	[r3 + 16] = r1
 1e0ef66:    00 00             	nop
 1e0ef68:    00 00             	nop
 1e0ef6a:    00 f2 44 42       	if (r0 ?? r0) goto 1160 <m_code_addr+0x116 : 1e0f3f6 >
 1e0ef6e:    47 5f             	r7 = h[r7 + 40] (u)
 1e0ef70:    53 44             	r3 = [r2 + 20]
 1e0ef72:    54 41             	r4 = [r0 + 84]
 1e0ef74:    50 00             	testset b[r0]
 1e0ef76:    00 00             	nop
 1e0ef78:    00 00             	nop
 1e0ef7a:    00 00             	nop
 1e0ef7c:    ff 4d             	[r6 + 124] = r7
 1e0ef7e:    53 47             	r3 = [r3 + 84]
 1e0ef80:    5f 4e             	[r7 + 20] = r7
 1e0ef82:    55 4c             	r5 = [r6 + 20]
 1e0ef84:    4c 00             	testset b[r12]
 1e0ef86:    00 00             	nop
 1e0ef88:    00 00             	nop
 1e0ef8a:    00 00             	nop
 1e0ef8c:    00 ff 00 00 00 00 	if (r0 == 0) goto 0 <dev_id_list+0x356 : 1e0ef92 >
 1e0ef92:    00 00             	nop
 1e0ef94:    00 00             	nop
 1e0ef96:    00 00             	nop
 1e0ef98:    00 00             	nop
 1e0ef9a:    00 00             	nop
 1e0ef9c:    00 00             	nop
 1e0ef9e:    00 00             	nop


flash_powerup_ok_flash:
 1e0efa0:    66 6c             	r6 = b[r6 + 6] (u)
 1e0efa2:    61 73             	r1 = 54
 1e0efa4:    68 5f             	h[r7 + 44] = r0
 1e0efa6:    70 6f             	r0 = b[r7 + 23] (u)
 1e0efa8:    77 65             	r7 = b[r2 + 23] (u)
 1e0efaa:    72 75             	r2 = 87
 1e0efac:    70 5f             	r0 = h[r7 + 46] (u)
 1e0efae:    6f 6b             	b[r5 + 22] = r7
 1e0efb0:    00 00             	nop
 1e0efb2:    00 00             	nop
 1e0efb4:    00 00             	nop
 1e0efb6:    00 00             	nop
 1e0efb8:    00 00             	nop
 1e0efba:    00 00             	nop
 1e0efbc:    00 00             	nop
 1e0efbe:    00 00             	nop


PB_valid:
 1e0efc0:    00 01             	{r3-r0} = [sp++]
 1e0efc2:    02 03             	r2 = [sp+64]
 1e0efc4:    04 05             	r4 = r4.b0 (u)
 1e0efc6:    06 07             	r6 = -16
 1e0efc8:    08 09             	r8 += r0


PA_map_tbl:
 1e0efca:    01 02             	r1 = [sp]
 1e0efcc:    03 04             	r3 = r0.b0 (u)
 1e0efce:    05 06             	r5 = -32
 1e0efd0:    07 08             	r7 = r0
 1e0efd2:    09 0a             	sp += 16


PB_map_tbl:
 1e0efd4:    0b 0c             	r11 <<= r0
 1e0efd6:    0d 0e             	r5 = r1 * r0
 1e0efd8:    0f 10             	call 30 <sys_power_ops+0xC : 1e0eff8 >
 1e0efda:    11 12             	call 1058 <m_code_addr+0x11E : 1e0f3fe >
 1e0efdc:    13 14             	call -2010 <vfs_ops_begin+0x44 : 1e0e804 >


PD_valid:
 1e0efde:    00 01             	{r3-r0} = [sp++]
 1e0efe0:    02 03             	r2 = [sp+64]
 1e0efe2:    04 15             	call -1528 <profile_data+0x4C : 1e0e9ec >


PD_map_tbl:
 1e0efe3:    15 16             	call -982 <wdt_time+0x13 : 1e0ec0f >
 1e0efe5:    17 18             	goto 46 <bluetooth_base_uuid+0xB : 1e0f015 >
 1e0efe7:    19 38             	if (r4 != 0) goto 50 <bluetooth_base_uuid+0x11 : 1e0f01b >


WSIG_to_PANA:
 1e0efe8:    38 37             	if (r3 != 0) goto -400 <dev_id_list+0x21E : 1e0ee5a >
 1e0efea:    35 00             	[--sp] = rets


sys_power_ops:
 1e0efec:    00 00             	nop
 1e0efee:    00 00             	nop
 1e0eff0:    f0 c4             	r0 = r6 << 19
 1e0eff2:    e0 01             	[--sp] = {psr}
 1e0eff4:    00 00             	nop
 1e0eff6:    00 00             	nop
 1e0eff8:    78 c5             	r0 = r7 << 21
 1e0effa:    e0 01             	[--sp] = {psr}
 1e0effc:    8e c5             	r6 = r1 << 22
 1e0effe:    e0 01             	[--sp] = {psr}
 1e0f000:    00 00             	nop
 1e0f002:    00 00             	nop


group_item_table:
 1e0f004:    65 00             	cli r5
 1e0f006:    20 00             	rts
 1e0f008:    14 00             	lockset


bluetooth_base_uuid:
 1e0f00a:    fb 34             	if (r2 != 0) goto 502 <bluetooth_base_uuid+0x1F8 : 1e0f202 >
 1e0f00c:    9b 5f             	h[r7 + 50] = r3
 1e0f00e:    80 00             	call r0
 1e0f010:    00 80             	r0 += 0
 1e0f012:    00 10             	call 0 <bluetooth_base_uuid+0xA : 1e0f014 >
 1e0f014:    00 00             	nop
 1e0f016:    00 00             	nop
 1e0f018:    00 00             	nop
 1e0f01a:    00 18             	goto 0 <bluetooth_base_uuid+0x12 : 1e0f01c >
 1e0f01c:    4e 00             	testset b[r14]
 1e0f01e:    00 00             	nop
 1e0f020:    00 00             	nop
 1e0f022:    ff ff 00 f0 ff ff 	pc = 4294963200
 1e0f028:    00 ff ff ff c9 00 	if (r15 == -1) goto 402 <bluetooth_base_uuid+0x1B6 : 1e0f1c0 >
 1e0f02e:    00 00             	nop
 1e0f030:    c8 00             	pfetch [r8]
 1e0f032:    00 00             	nop
 1e0f034:    cc 00             	pfetch [r12]
 1e0f036:    00 00             	nop
 1e0f038:    6b 65             	b[r2 + 22] = r3
 1e0f03a:    79 00             	sti r9
 1e0f03c:    28 42             	[r1 + 8] = r0
 1e0f03e:    4c 45             	[r2 + 80] = r4
 1e0f040:    29 00             	swi 1
 1e0f042:    6f 74             	r15 = 70
 1e0f044:    61 00             	cli r1
 1e0f046:    61 70             	r1 = 6
 1e0f048:    70 5f             	r0 = h[r7 + 46] (u)
 1e0f04a:    69 64             	b[r2 + 6] = r1
 1e0f04c:    6c 65             	b[r2 + 22] = r4
 1e0f04e:    5f 64             	b[r2 + 5] = r7
 1e0f050:    65 61             	r5 = b[r0 + 22] (u)
 1e0f052:    6c 00             	cli r12
 1e0f054:    69 64             	b[r2 + 6] = r1
 1e0f056:    6c 65             	b[r2 + 22] = r4
 1e0f058:    00 62             	r0 = b[r1 + 0] (u)
 1e0f05a:    74 65             	r4 = b[r2 + 23] (u)
 1e0f05c:    6e 63             	b[r1 + 22] = r6
 1e0f05e:    72 79             	r2 = 151
 1e0f060:    00 64             	r0 = b[r2 + 0] (u)
 1e0f062:    77 5f             	r7 = h[r7 + 46] (u)
 1e0f064:    75 70             	r5 = 7
 1e0f066:    64 61             	r4 = b[r0 + 22] (u)
 1e0f068:    74 65             	r4 = b[r2 + 23] (u)
 1e0f06a:    00 75             	r0 = 80
 1e0f06c:    73 62             	r3 = b[r1 + 7] (u)
 1e0f06e:    5f 6d             	b[r6 + 21] = r7
 1e0f070:    73 64             	r3 = b[r2 + 7] (u)
 1e0f072:    00 61             	r0 = b[r0 + 16] (u)
 1e0f074:    70 70             	r0 = 7
 1e0f076:    5f 73             	r15 = 53
 1e0f078:    74 61             	r4 = b[r0 + 23] (u)
 1e0f07a:    74 65             	r4 = b[r2 + 23] (u)
 1e0f07c:    5f 64             	b[r2 + 5] = r7
 1e0f07e:    65 61             	r5 = b[r0 + 22] (u)
 1e0f080:    6c 00             	cli r12
 1e0f082:    73 70             	r3 = 7
 1e0f084:    70 5f             	r0 = h[r7 + 46] (u)
 1e0f086:    6c 65             	b[r2 + 22] = r4
 1e0f088:    00 63             	r0 = b[r1 + 16] (u)
 1e0f08a:    68 61             	b[r0 + 22] = r0
 1e0f08c:    72 67             	r2 = b[r3 + 23] (u)
 1e0f08e:    65 00             	cli r5
 1e0f090:    63 75             	r3 = 86
 1e0f092:    73 74             	r3 = 71
 1e0f094:    6f 6d             	b[r6 + 22] = r7
 1e0f096:    5f 6c             	b[r6 + 5] = r7
 1e0f098:    70 00             	sti r0
 1e0f09a:    63 6c             	r3 = b[r6 + 6] (u)
 1e0f09c:    6f 63             	b[r1 + 22] = r7
 1e0f09e:    6b 00             	cli r11
 1e0f0a0:    75 61             	r5 = b[r0 + 23] (u)
 1e0f0a2:    72 74             	r2 = 71
 1e0f0a4:    00 74             	r0 = 64
 1e0f0a6:    6d 72             	r13 = 38
 1e0f0a8:    31 00             	pc = [sp++]
 1e0f0aa:    44 42             	r4 = [r1 + 16]
 1e0f0ac:    47 5f             	r7 = h[r7 + 40] (u)
 1e0f0ae:    46 46             	r6 = [r3 + 16]
 1e0f0b0:    54 00             	testset b[r4]
 1e0f0b2:    44 42             	r4 = [r1 + 16]
 1e0f0b4:    47 5f             	r7 = h[r7 + 40] (u)
 1e0f0b6:    45 51             	r5 = h[r0 + 40] (u)
 1e0f0b8:    00 43             	r0 = [r1 + 64]
 1e0f0ba:    78 72             	r8 = 39
 1e0f0bc:    77 30             	if (r0 != 0) goto 238 <bluetooth_base_uuid+0x1A2 : 1e0f1ac >
 1e0f0be:    72 77             	r2 = 119
 1e0f0c0:    31 72             	r1 = 35
 1e0f0c2:    77 00             	sti r7
 1e0f0c4:    6d 6e             	b[r7 + 6] = r5
 1e0f0c6:    74 2f             	if (r7 == 0) goto -280 <flash_powerup_ok_flash+0x10 : 1e0efb0 >
 1e0f0c8:    73 64             	r3 = b[r2 + 7] (u)
 1e0f0ca:    66 69             	r6 = b[r4 + 22] (u)
 1e0f0cc:    6c 65             	b[r2 + 22] = r4
 1e0f0ce:    2f 72             	r15 = 34
 1e0f0d0:    65 73             	r5 = 54
 1e0f0d2:    2f 70             	r15 = 2
 1e0f0d4:    31 31             	if (r0 != 0) goto -414 <dev_id_list+0x2FC : 1e0ef38 >
 1e0f0d6:    5f 63             	b[r1 + 21] = r7
 1e0f0d8:    6f 64             	b[r2 + 6] = r7
 1e0f0da:    65 2e             	if (r7 == 0) goto 202 <bluetooth_base_uuid+0x19C : 1e0f1a6 >
 1e0f0dc:    62 69             	r2 = b[r4 + 22] (u)
 1e0f0de:    6e 00             	cli r14
 1e0f0e0:    44 42             	r4 = [r1 + 16]
 1e0f0e2:    47 5f             	r7 = h[r7 + 40] (u)
 1e0f0e4:    52 45             	r2 = [r2 + 84]
 1e0f0e6:    56 00             	testset b[r6]
 1e0f0e8:    30 72             	r0 = 35
 1e0f0ea:    00 77             	r0 = 112
 1e0f0ec:    6b 75             	r11 = 86
 1e0f0ee:    70 5f             	r0 = h[r7 + 46] (u)
 1e0f0f0:    68 6f             	b[r7 + 22] = r0
 1e0f0f2:    6c 64             	b[r2 + 6] = r4
 1e0f0f4:    00 6f             	r0 = b[r7 + 16] (u)
 1e0f0f6:    74 67             	r4 = b[r3 + 23] (u)
 1e0f0f8:    00 6f             	r0 = b[r7 + 16] (u)
 1e0f0fa:    73 00             	sti r3
 1e0f0fc:    73 79             	r3 = 151
 1e0f0fe:    73 00             	sti r3
 1e0f100:    73 79             	r3 = 151
 1e0f102:    73 5f             	r3 = h[r7 + 46] (u)
 1e0f104:    65 76             	r5 = 102
 1e0f106:    65 6e             	r5 = b[r7 + 6] (u)
 1e0f108:    74 00             	sti r4
 1e0f10a:    6d 6e             	b[r7 + 6] = r5
 1e0f10c:    74 2f             	if (r7 == 0) goto -280 <sys_power_ops+0xA : 1e0eff6 >
 1e0f10e:    73 64             	r3 = b[r2 + 7] (u)
 1e0f110:    66 69             	r6 = b[r4 + 22] (u)
 1e0f112:    6c 65             	b[r2 + 22] = r4
 1e0f114:    00 61             	r0 = b[r0 + 16] (u)
 1e0f116:    70 70             	r0 = 7
 1e0f118:    00 72             	r0 = 32
 1e0f11a:    65 73             	r5 = 54
 1e0f11c:    00 74             	r0 = 64
 1e0f11e:    61 73             	r1 = 54
 1e0f120:    6b 71             	r11 = 22
 1e0f122:    00 28             	if (r4 == 0) goto 0 <bluetooth_base_uuid+0x11A : 1e0f124 >
 1e0f124:    6e 75             	r14 = 86
 1e0f126:    6c 6c             	b[r6 + 6] = r4
 1e0f128:    29 00             	swi 1
 1e0f12a:    75 73             	r5 = 55
 1e0f12c:    72 5f             	r2 = h[r7 + 46] (u)
 1e0f12e:    73 79             	r3 = 151
 1e0f130:    73 74             	r3 = 71
 1e0f132:    69 6d             	b[r6 + 22] = r1
 1e0f134:    65 72             	r5 = 38
 1e0f136:    00 61             	r0 = b[r0 + 16] (u)
 1e0f138:    70 70             	r0 = 7
 1e0f13a:    5f 63             	b[r1 + 21] = r7
 1e0f13c:    6f 72             	r15 = 38
 1e0f13e:    65 00             	cli r5
 1e0f140:    6d 6e             	b[r7 + 6] = r5
 1e0f142:    74 2f             	if (r7 == 0) goto -280 <bluetooth_base_uuid+0x22 : 1e0f02c >
 1e0f144:    73 64             	r3 = b[r2 + 7] (u)
 1e0f146:    66 69             	r6 = b[r4 + 22] (u)
 1e0f148:    6c 65             	b[r2 + 22] = r4
 1e0f14a:    2f 61             	b[r0 + 18] = r7
 1e0f14c:    70 70             	r0 = 7
 1e0f14e:    2f 63             	b[r1 + 18] = r7
 1e0f150:    66 67             	r6 = b[r3 + 22] (u)
 1e0f152:    5f 74             	r15 = 69
 1e0f154:    6f 6f             	b[r7 + 22] = r7
 1e0f156:    6c 2e             	if (r7 == 0) goto 216 <bluetooth_base_uuid+0x226 : 1e0f230 >
 1e0f158:    62 69             	r2 = b[r4 + 22] (u)
 1e0f15a:    6e 00             	cli r14
 1e0f15c:    6d 6e             	b[r7 + 6] = r5
 1e0f15e:    74 2f             	if (r7 == 0) goto -280 <bluetooth_base_uuid+0x3E : 1e0f048 >
 1e0f160:    73 64             	r3 = b[r2 + 7] (u)
 1e0f162:    66 69             	r6 = b[r4 + 22] (u)
 1e0f164:    6c 65             	b[r2 + 22] = r4
 1e0f166:    2f 61             	b[r0 + 18] = r7
 1e0f168:    70 70             	r0 = 7
 1e0f16a:    2f 62             	b[r1 + 2] = r7
 1e0f16c:    74 69             	r4 = b[r4 + 23] (u)
 1e0f16e:    66 00             	cli r6
 1e0f170:    62 74             	r2 = 70
 1e0f172:    73 74             	r3 = 71
 1e0f174:    61 63             	r1 = b[r1 + 22] (u)
 1e0f176:    6b 5f             	h[r7 + 44] = r3
 1e0f178:    6c 6f             	b[r7 + 22] = r4
 1e0f17a:    77 70             	r7 = 7
 1e0f17c:    77 65             	r7 = b[r2 + 23] (u)
 1e0f17e:    72 5f             	r2 = h[r7 + 46] (u)
 1e0f180:    64 65             	r4 = b[r2 + 22] (u)
 1e0f182:    61 6c             	r1 = b[r6 + 6] (u)
 1e0f184:    00 62             	r0 = b[r1 + 0] (u)
 1e0f186:    74 73             	r4 = 55
 1e0f188:    74 61             	r4 = b[r0 + 23] (u)
 1e0f18a:    63 6b             	r3 = b[r5 + 22] (u)
 1e0f18c:    00 32             	if (r1 != 0) goto 0 <bluetooth_base_uuid+0x184 : 1e0f18e >
 1e0f18e:    32 32             	if (r1 != 0) goto 100 <bluetooth_base_uuid+0x1EA : 1e0f1f4 >
 1e0f190:    44 00             	testset b[r4]
 1e0f192:    32 32             	if (r1 != 0) goto 100 <bluetooth_base_uuid+0x1EE : 1e0f1f8 >
 1e0f194:    32 32             	if (r1 != 0) goto 100 <bluetooth_base_uuid+0x1F0 : 1e0f1fa >
 1e0f196:    32 00             	pc = [sp++]
 1e0f198:    62 74             	r2 = 70
 1e0f19a:    00 6c             	r0 = b[r6 + 0] (u)
 1e0f19c:    69 6e             	b[r7 + 6] = r1
 1e0f19e:    6b 5f             	h[r7 + 44] = r3
 1e0f1a0:    6c 61             	b[r0 + 22] = r4
 1e0f1a2:    79 65             	b[r2 + 23] = r1
 1e0f1a4:    72 00             	sti r2
 1e0f1a6:    31 48             	r1 = [r4 + 12]
 1e0f1a8:    32 32             	if (r1 != 0) goto 100 <bluetooth_base_uuid+0x204 : 1e0f20e >
 1e0f1aa:    32 00             	pc = [sp++]
 1e0f1ac:    31 48             	r1 = [r4 + 12]
 1e0f1ae:    63 30             	if (r0 != 0) goto 198 <clock_lrc+0x2 : 1e0f276 >
 1e0f1b0:    38 00             	cc = 0
 1e0f1b2:    48 63             	b[r1 + 20] = r0
 1e0f1b4:    30 38             	if (r4 != 0) goto 96 <bluetooth_base_uuid+0x20C : 1e0f216 >
 1e0f1b6:    63 30             	if (r0 != 0) goto 198 <clock_port+0x2 : 1e0f27e >
 1e0f1b8:    32 00             	pc = [sp++]
 1e0f1ba:    31 48             	r1 = [r4 + 12]
 1e0f1bc:    31 31             	if (r0 != 0) goto -414 <bluetooth_base_uuid+0x16 : 1e0f020 >
 1e0f1be:    41 32             	if (r1 != 0) goto 130 <gpio_regs+0x6 : 1e0f242 >
 1e0f1c0:    32 32             	if (r1 != 0) goto 100 <bluetooth_base_uuid+0x21C : 1e0f226 >
 1e0f1c2:    31 00             	pc = [sp++]
 1e0f1c4:    31 48             	r1 = [r4 + 12]
 1e0f1c6:    32 00             	pc = [sp++]
 1e0f1c8:    31 48             	r1 = [r4 + 12]
 1e0f1ca:    48 00             	testset b[r8]
 1e0f1cc:    63 30             	if (r0 != 0) goto 198 <storage_device_end+0x10 : 1e0f294 >
 1e0f1ce:    38 63             	b[r1 + 19] = r0
 1e0f1d0:    30 34             	if (r2 != 0) goto 96 <bluetooth_base_uuid+0x228 : 1e0f232 >
 1e0f1d2:    00 31             	if (r0 != 0) goto -512 <PB_map_tbl : 1e0efd4 >
 1e0f1d4:    31 32             	if (r1 != 0) goto 98 <bluetooth_base_uuid+0x22E : 1e0f238 >
 1e0f1d6:    00 31             	if (r0 != 0) goto -512 <PB_map_tbl+0x4 : 1e0efd8 >
 1e0f1d8:    63 30             	if (r0 != 0) goto 198 <storage_device_end+0x1C : 1e0f2a0 >
 1e0f1da:    38 00             	cc = 0
 1e0f1dc:    62 6c             	r2 = b[r6 + 6] (u)
 1e0f1de:    65 00             	cli r5
 1e0f1e0:    31 48             	r1 = [r4 + 12]
 1e0f1e2:    31 00             	pc = [sp++]
 1e0f1e4:    31 48             	r1 = [r4 + 12]
 1e0f1e6:    00 31             	if (r0 != 0) goto -512 <WSIG_to_PANA : 1e0efe8 >
 1e0f1e8:    31 31             	if (r0 != 0) goto -414 <bluetooth_base_uuid+0x42 : 1e0f04c >
 1e0f1ea:    00 31             	if (r0 != 0) goto -512 <sys_power_ops : 1e0efec >
 1e0f1ec:    63 31             	if (r0 != 0) goto -314 <bluetooth_base_uuid+0xAA : 1e0f0b4 >
 1e0f1ee:    36 00             	[--sp] = rets
 1e0f1f0:    31 48             	r1 = [r4 + 12]
 1e0f1f2:    31 32             	if (r1 != 0) goto 98 <gpio_out_regs+0xA : 1e0f256 >
 1e0f1f4:    32 00             	pc = [sp++]
 1e0f1f6:    31 31             	if (r0 != 0) goto -414 <bluetooth_base_uuid+0x50 : 1e0f05a >
 1e0f1f8:    31 32             	if (r1 != 0) goto 98 <boot_addr_tab : 1e0f25c >
 1e0f1fa:    31 34             	if (r2 != 0) goto 98 <boot_addr_tab+0x2 : 1e0f25e >
 1e0f1fc:    00 62             	r0 = b[r1 + 0] (u)
 1e0f1fe:    30 33             	if (r1 != 0) goto -416 <bluetooth_base_uuid+0x56 : 1e0f060 >
 1e0f200:    00 62             	r0 = b[r1 + 0] (u)
 1e0f202:    30 34             	if (r2 != 0) goto 96 <clock_uart : 1e0f264 >
 1e0f204:    00 62             	r0 = b[r1 + 0] (u)
 1e0f206:    74 63             	r4 = b[r1 + 23] (u)
 1e0f208:    74 72             	r4 = 39
 1e0f20a:    6c 65             	b[r2 + 22] = r4
 1e0f20c:    72 00             	sti r2
 1e0f20e:    48 34             	if (r2 != 0) goto 144 <storage_device_end+0x1C : 1e0f2a0 >
 1e0f210:    5f 43             	[r1 + 84] = r7
 1e0f212:    6f 6e             	b[r7 + 6] = r7
 1e0f214:    74 72             	r4 = 39
 1e0f216:    6f 6c             	b[r6 + 6] = r7
 1e0f218:    6c 65             	b[r2 + 22] = r4
 1e0f21a:    72 00             	sti r2
 1e0f21c:    76 6d             	r6 = b[r6 + 23] (u)
 1e0f21e:    00 72             	r0 = 32
 1e0f220:    65 73             	r5 = 54
 1e0f222:    2e 62             	b[r1 + 2] = r6
 1e0f224:    69 6e             	b[r7 + 6] = r1
 1e0f226:    00 4c             	r0 = [r6 + 0]
 1e0f228:    4f 41             	[r0 + 80] = r7
 1e0f22a:    44 45             	r4 = [r2 + 80]
 1e0f22c:    52 2e             	if (r7 == 0) goto 164 <__VERSION_END+0x10 : 1e0f2d2 >
 1e0f22e:    42 49             	r2 = [r4 + 80]
 1e0f230:    4e 00             	testset b[r14]
 1e0f232:    01 02             	r1 = [sp]
 1e0f234:    04 08             	r4 = r0
 1e0f236:    01 03             	r1 = [sp+64]
 1e0f238:    05 07             	r5 = -16
 1e0f23a:    00 00             	nop


gpio_regs:
 1e0f23c:    00 50             	r0 = h[r0 + 0] (u)
 1e0f23e:    1e 00             	sti
 1e0f240:    00 51             	r0 = h[r0 + 32] (u)
 1e0f242:    1e 00             	sti
 1e0f244:    00 53             	r0 = h[r1 + 32] (u)
 1e0f246:    1e 00             	sti
 1e0f248:    00 59             	r0 = h[r4 + 32] (u)
 1e0f24a:    1e 00             	sti


gpio_out_regs:
 1e0f24c:    00 56             	r0 = h[r3 + 0] (u)
 1e0f24e:    1e 00             	sti
 1e0f250:    28 56             	h[r3 + 4] = r0
 1e0f252:    1e 00             	sti
 1e0f254:    50 56             	r0 = h[r3 + 10] (u)
 1e0f256:    1e 00             	sti
 1e0f258:    74 56             	r4 = h[r3 + 14] (u)
 1e0f25a:    1e 00             	sti


boot_addr_tab:
 1e0f25c:    00 00             	nop
 1e0f25e:    00 00             	nop
 1e0f260:    00 00             	nop
 1e0f262:    01 00             	nop


clock_uart:
 1e0f264:    f6 2e             	if (r7 == 0) goto 492 <bt_frac_pll_int_48m+0x26 : 1e0f452 >
 1e0f266:    e0 01             	[--sp] = {psr}
 1e0f268:    f8 2e             	if (r7 == 0) goto 496 <bt_frac_pll_int_48m+0x2E : 1e0f45a >
 1e0f26a:    e0 01             	[--sp] = {psr}


clock_timer:
 1e0f26c:    56 2f             	if (r7 == 0) goto -340 <bluetooth_base_uuid+0x110 : 1e0f11a >
 1e0f26e:    e0 01             	[--sp] = {psr}
 1e0f270:    74 2f             	if (r7 == 0) goto -280 <bluetooth_base_uuid+0x150 : 1e0f15a >
 1e0f272:    e0 01             	[--sp] = {psr}


clock_lrc:
 1e0f274:    3c 31             	if (r0 != 0) goto -392 <bluetooth_base_uuid+0xE4 : 1e0f0ee >
 1e0f276:    e0 01             	[--sp] = {psr}
 1e0f278:    7e 31             	if (r0 != 0) goto -260 <bluetooth_base_uuid+0x16C : 1e0f176 >
 1e0f27a:    e0 01             	[--sp] = {psr}


clock_port:
 1e0f27c:    74 bb             	r4 &= 4290772991
 1e0f27e:    e0 01             	[--sp] = {psr}
 1e0f280:    80 bb             	r0 = r5 + r6
 1e0f282:    e0 01             	[--sp] = {psr}


storage_device_end:
 1e0f284:    34 74             	r4 = 67
 1e0f286:    18 0a             	sp += 48
 1e0f288:    42 54             	r2 = h[r2 + 8] (u)
 1e0f28a:    43 54             	r3 = h[r2 + 8] (u)
 1e0f28c:    52 4c             	r2 = [r6 + 20]
 1e0f28e:    45 52             	r5 = h[r1 + 8] (u)
 1e0f290:    2d 40             	[r0 + 8] = r5
 1e0f292:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x18 : 1e0f2f8 >
 1e0f294:    32 31             	if (r0 != 0) goto -412 <bluetooth_base_uuid+0xF0 : 1e0f0fa >
 1e0f296:    30 35             	if (r2 != 0) goto -416 <bluetooth_base_uuid+0xEE : 1e0f0f8 >
 1e0f298:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x1C : 1e0f2fc >
 1e0f29a:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x16 : 1e0f2f6 >
 1e0f29c:    63 31             	if (r0 != 0) goto -314 <bluetooth_base_uuid+0x15A : 1e0f164 >
 1e0f29e:    61 38             	if (r4 != 0) goto 194 <m_code_addr+0x82 : 1e0f362 >
 1e0f2a0:    62 62             	r2 = b[r1 + 6] (u)
 1e0f2a2:    33 00             	pc = [sp++]


lib_update_version:
 1e0f2a4:    41 74             	r1 = 68
 1e0f2a6:    18 0a             	sp += 48
 1e0f2a8:    55 50             	r5 = h[r0 + 10] (u)
 1e0f2aa:    44 41             	r4 = [r0 + 80]
 1e0f2ac:    54 45             	r4 = [r2 + 84]
 1e0f2ae:    2d 40             	[r0 + 8] = r5
 1e0f2b0:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x36 : 1e0f316 >
 1e0f2b2:    32 31             	if (r0 != 0) goto -412 <bluetooth_base_uuid+0x10E : 1e0f118 >
 1e0f2b4:    30 35             	if (r2 != 0) goto -416 <bluetooth_base_uuid+0x10C : 1e0f116 >
 1e0f2b6:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x3A : 1e0f31a >
 1e0f2b8:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x34 : 1e0f314 >
 1e0f2ba:    39 38             	if (r4 != 0) goto 114 <m_code_addr+0x4E : 1e0f32e >
 1e0f2bc:    30 65             	r0 = b[r2 + 19] (u)
 1e0f2be:    30 34             	if (r2 != 0) goto 96 <m_code_addr+0x40 : 1e0f320 >
 1e0f2c0:    38 00             	cc = 0


__VERSION_END:
 1e0f2c2:    00 00             	nop
 1e0f2c4:    00 00             	nop
 1e0f2c6:    00 00             	nop
 1e0f2c8:    00 00             	nop
 1e0f2ca:    00 00             	nop
 1e0f2cc:    00 00             	nop
 1e0f2ce:    00 00             	nop
 1e0f2d0:    00 00             	nop
 1e0f2d2:    00 00             	nop
 1e0f2d4:    00 00             	nop
 1e0f2d6:    00 00             	nop
 1e0f2d8:    00 00             	nop
 1e0f2da:    00 00             	nop
 1e0f2dc:    00 00             	nop
 1e0f2de:    00 00             	nop


m_code_addr:
 1e0f2e0:    55 55             	r5 = h[r2 + 42] (u)
 1e0f2e2:    05 00             	bkpt
 1e0f2e4:    00 00             	nop
 1e0f2e6:    10 00             	lockclr
 1e0f2e8:    ab aa             	r11 = sp + 170
 1e0f2ea:    1a 00             	cli
 1e0f2ec:    55 55             	r5 = h[r2 + 42] (u)
 1e0f2ee:    25 00             	rtx
 1e0f2f0:    00 00             	nop
 1e0f2f2:    30 00             	pc = [sp++]
 1e0f2f4:    ab aa             	r11 = sp + 170
 1e0f2f6:    3a 00             	cc = 1
 1e0f2f8:    55 55             	r5 = h[r2 + 42] (u)
 1e0f2fa:    45 00             	testset b[r5]
 1e0f2fc:    00 00             	nop
 1e0f2fe:    50 00             	testset b[r0]
 1e0f300:    ab aa             	r11 = sp + 170
 1e0f302:    5a 00             	testset b[r10]
 1e0f304:    55 55             	r5 = h[r2 + 42] (u)
 1e0f306:    65 00             	cli r5
 1e0f308:    00 00             	nop
 1e0f30a:    70 00             	sti r0
 1e0f30c:    ab aa             	r11 = sp + 170
 1e0f30e:    7a 00             	sti r10
 1e0f310:    55 55             	r5 = h[r2 + 42] (u)
 1e0f312:    85 00             	call r5
 1e0f314:    00 00             	nop
 1e0f316:    90 00             	goto r0
 1e0f318:    ab aa             	r11 = sp + 170
 1e0f31a:    9a 00             	goto r10
 1e0f31c:    55 55             	r5 = h[r2 + 42] (u)
 1e0f31e:    a5 00             	tbb [r5]
 1e0f320:    00 00             	nop
 1e0f322:    b0 00             	tbh [r0]
 1e0f324:    ab aa             	r11 = sp + 170
 1e0f326:    ba 00             	tbh [r10]
 1e0f328:    55 55             	r5 = h[r2 + 42] (u)
 1e0f32a:    c5 00             	pfetch [r5]
 1e0f32c:    00 00             	nop
 1e0f32e:    d0 00             	iflush [r0]
 1e0f330:    ab aa             	r11 = sp + 170
 1e0f332:    da 00             	iflush [r10]
 1e0f334:    55 55             	r5 = h[r2 + 42] (u)
 1e0f336:    e5 00             	flush [r5]
 1e0f338:    00 00             	nop
 1e0f33a:    f0 00             	flushinv [r0]
 1e0f33c:    ab aa             	r11 = sp + 170
 1e0f33e:    fa 00             	flushinv [r10]
 1e0f340:    55 55             	r5 = h[r2 + 42] (u)
 1e0f342:    05 00             	bkpt
 1e0f344:    00 00             	nop
 1e0f346:    10 00             	lockclr
 1e0f348:    ab aa             	r11 = sp + 170
 1e0f34a:    1a 00             	cli
 1e0f34c:    55 55             	r5 = h[r2 + 42] (u)
 1e0f34e:    25 00             	rtx
 1e0f350:    00 00             	nop
 1e0f352:    30 00             	pc = [sp++]
 1e0f354:    ab aa             	r11 = sp + 170
 1e0f356:    3a 00             	cc = 1
 1e0f358:    55 55             	r5 = h[r2 + 42] (u)
 1e0f35a:    45 00             	testset b[r5]
 1e0f35c:    00 00             	nop
 1e0f35e:    50 00             	testset b[r0]
 1e0f360:    ab aa             	r11 = sp + 170
 1e0f362:    5a 00             	testset b[r10]
 1e0f364:    55 55             	r5 = h[r2 + 42] (u)
 1e0f366:    65 00             	cli r5
 1e0f368:    00 00             	nop
 1e0f36a:    70 00             	sti r0
 1e0f36c:    ab aa             	r11 = sp + 170
 1e0f36e:    7a 00             	sti r10
 1e0f370:    55 55             	r5 = h[r2 + 42] (u)
 1e0f372:    85 00             	call r5
 1e0f374:    00 00             	nop
 1e0f376:    90 00             	goto r0
 1e0f378:    ab aa             	r11 = sp + 170
 1e0f37a:    9a 00             	goto r10
 1e0f37c:    55 55             	r5 = h[r2 + 42] (u)
 1e0f37e:    a5 00             	tbb [r5]
 1e0f380:    00 00             	nop
 1e0f382:    b0 00             	tbh [r0]
 1e0f384:    ab aa             	r11 = sp + 170
 1e0f386:    ba 00             	tbh [r10]
 1e0f388:    55 55             	r5 = h[r2 + 42] (u)
 1e0f38a:    c5 00             	pfetch [r5]
 1e0f38c:    00 00             	nop
 1e0f38e:    d0 00             	iflush [r0]
 1e0f390:    ab aa             	r11 = sp + 170
 1e0f392:    da 00             	iflush [r10]
 1e0f394:    55 55             	r5 = h[r2 + 42] (u)
 1e0f396:    e5 00             	flush [r5]
 1e0f398:    00 00             	nop
 1e0f39a:    f0 00             	flushinv [r0]
 1e0f39c:    ab aa             	r11 = sp + 170
 1e0f39e:    fa 00             	flushinv [r10]
 1e0f3a0:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3a2:    05 00             	bkpt
 1e0f3a4:    00 00             	nop
 1e0f3a6:    10 00             	lockclr
 1e0f3a8:    ab aa             	r11 = sp + 170
 1e0f3aa:    1a 00             	cli
 1e0f3ac:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3ae:    25 00             	rtx
 1e0f3b0:    00 00             	nop
 1e0f3b2:    30 00             	pc = [sp++]
 1e0f3b4:    ab aa             	r11 = sp + 170
 1e0f3b6:    3a 00             	cc = 1
 1e0f3b8:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3ba:    45 00             	testset b[r5]
 1e0f3bc:    00 00             	nop
 1e0f3be:    50 00             	testset b[r0]
 1e0f3c0:    ab aa             	r11 = sp + 170
 1e0f3c2:    5a 00             	testset b[r10]
 1e0f3c4:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3c6:    65 00             	cli r5
 1e0f3c8:    00 00             	nop
 1e0f3ca:    70 00             	sti r0
 1e0f3cc:    ab aa             	r11 = sp + 170
 1e0f3ce:    7a 00             	sti r10
 1e0f3d0:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3d2:    85 00             	call r5
 1e0f3d4:    00 00             	nop
 1e0f3d6:    90 00             	goto r0
 1e0f3d8:    ab aa             	r11 = sp + 170
 1e0f3da:    9a 00             	goto r10
 1e0f3dc:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3de:    a5 00             	tbb [r5]
 1e0f3e0:    00 00             	nop
 1e0f3e2:    b0 00             	tbh [r0]
 1e0f3e4:    ab aa             	r11 = sp + 170
 1e0f3e6:    ba 00             	tbh [r10]
 1e0f3e8:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3ea:    c5 00             	pfetch [r5]
 1e0f3ec:    00 00             	nop
 1e0f3ee:    d0 00             	iflush [r0]
 1e0f3f0:    ab aa             	r11 = sp + 170
 1e0f3f2:    da 00             	iflush [r10]
 1e0f3f4:    55 55             	r5 = h[r2 + 42] (u)
 1e0f3f6:    e5 00             	flush [r5]
 1e0f3f8:    00 00             	nop
 1e0f3fa:    f0 00             	flushinv [r0]
 1e0f3fc:    ab aa             	r11 = sp + 170
 1e0f3fe:    fa 00             	flushinv [r10]
 1e0f400:    55 55             	r5 = h[r2 + 42] (u)
 1e0f402:    05 00             	bkpt
 1e0f404:    00 00             	nop
 1e0f406:    10 00             	lockclr
 1e0f408:    ab aa             	r11 = sp + 170
 1e0f40a:    1a 00             	cli
 1e0f40c:    55 55             	r5 = h[r2 + 42] (u)
 1e0f40e:    25 00             	rtx
 1e0f410:    00 00             	nop
 1e0f412:    30 00             	pc = [sp++]
 1e0f414:    ab aa             	r11 = sp + 170
 1e0f416:    3a 00             	cc = 1
 1e0f418:    55 55             	r5 = h[r2 + 42] (u)
 1e0f41a:    45 00             	testset b[r5]
 1e0f41c:    00 00             	nop
 1e0f41e:    50 00             	testset b[r0]
 1e0f420:    ab aa             	r11 = sp + 170
 1e0f422:    5a 00             	testset b[r10]
 1e0f424:    00 00             	nop
 1e0f426:    00 00             	nop
 1e0f428:    00 00             	nop
 1e0f42a:    00 00             	nop


bt_frac_pll_int_48m:
 1e0f42c:    64 64             	r4 = b[r2 + 6] (u)
 1e0f42e:    64 64             	r4 = b[r2 + 6] (u)
 1e0f430:    64 64             	r4 = b[r2 + 6] (u)
 1e0f432:    64 64             	r4 = b[r2 + 6] (u)
 1e0f434:    64 64             	r4 = b[r2 + 6] (u)
 1e0f436:    64 64             	r4 = b[r2 + 6] (u)
 1e0f438:    64 64             	r4 = b[r2 + 6] (u)
 1e0f43a:    64 64             	r4 = b[r2 + 6] (u)
 1e0f43c:    64 64             	r4 = b[r2 + 6] (u)
 1e0f43e:    64 64             	r4 = b[r2 + 6] (u)
 1e0f440:    64 64             	r4 = b[r2 + 6] (u)
 1e0f442:    64 64             	r4 = b[r2 + 6] (u)
 1e0f444:    65 65             	r5 = b[r2 + 22] (u)
 1e0f446:    65 65             	r5 = b[r2 + 22] (u)
 1e0f448:    65 65             	r5 = b[r2 + 22] (u)
 1e0f44a:    65 65             	r5 = b[r2 + 22] (u)
 1e0f44c:    65 65             	r5 = b[r2 + 22] (u)
 1e0f44e:    65 65             	r5 = b[r2 + 22] (u)
 1e0f450:    65 65             	r5 = b[r2 + 22] (u)
 1e0f452:    65 65             	r5 = b[r2 + 22] (u)
 1e0f454:    65 65             	r5 = b[r2 + 22] (u)
 1e0f456:    65 65             	r5 = b[r2 + 22] (u)
 1e0f458:    65 65             	r5 = b[r2 + 22] (u)
 1e0f45a:    65 65             	r5 = b[r2 + 22] (u)
 1e0f45c:    66 66             	r6 = b[r3 + 6] (u)
 1e0f45e:    66 66             	r6 = b[r3 + 6] (u)
 1e0f460:    66 66             	r6 = b[r3 + 6] (u)
 1e0f462:    66 66             	r6 = b[r3 + 6] (u)
 1e0f464:    66 66             	r6 = b[r3 + 6] (u)
 1e0f466:    66 66             	r6 = b[r3 + 6] (u)
 1e0f468:    66 66             	r6 = b[r3 + 6] (u)
 1e0f46a:    66 66             	r6 = b[r3 + 6] (u)
 1e0f46c:    66 66             	r6 = b[r3 + 6] (u)
 1e0f46e:    66 66             	r6 = b[r3 + 6] (u)
 1e0f470:    66 66             	r6 = b[r3 + 6] (u)
 1e0f472:    66 66             	r6 = b[r3 + 6] (u)
 1e0f474:    67 67             	r7 = b[r3 + 22] (u)
 1e0f476:    67 67             	r7 = b[r3 + 22] (u)
 1e0f478:    67 67             	r7 = b[r3 + 22] (u)
 1e0f47a:    67 67             	r7 = b[r3 + 22] (u)
 1e0f47c:    67 00             	cli r7
 1e0f47e:    00 00             	nop


TXPWR_table:
 1e0f480:    d1 da             	r1 = r2 >>> 11
 1e0f482:    00 1e             	goto -1024 <bluetooth_base_uuid+0x7A : 1e0f084 >
 1e0f484:    d1 da             	r1 = r2 >>> 11
 1e0f486:    01 1e             	goto -1022 <bluetooth_base_uuid+0x80 : 1e0f08a >
 1e0f488:    d1 da             	r1 = r2 >>> 11
 1e0f48a:    03 1e             	goto -1018 <bluetooth_base_uuid+0x88 : 1e0f092 >
 1e0f48c:    d1 da             	r1 = r2 >>> 11
 1e0f48e:    07 1e             	goto -1010 <bluetooth_base_uuid+0x94 : 1e0f09e >
 1e0f490:    d1 da             	r1 = r2 >>> 11
 1e0f492:    0f 1e             	goto -994 <bluetooth_base_uuid+0xA8 : 1e0f0b2 >
 1e0f494:    d1 da             	r1 = r2 >>> 11
 1e0f496:    1f 1e             	goto -962 <bluetooth_base_uuid+0xCC : 1e0f0d6 >
 1e0f498:    d1 da             	r1 = r2 >>> 11
 1e0f49a:    3f 1e             	goto -898 <bluetooth_base_uuid+0x110 : 1e0f11a >
 1e0f49c:    d1 da             	r1 = r2 >>> 11
 1e0f49e:    7f 1e             	goto -770 <bluetooth_base_uuid+0x194 : 1e0f19e >
 1e0f4a0:    d1 da             	r1 = r2 >>> 11
 1e0f4a2:    ff 1e             	goto -514 <storage_device_end+0x1E : 1e0f2a2 >
 1e0f4a4:    d1 da             	r1 = r2 >>> 11
 1e0f4a6:    ff 1f             	goto -2 <TXPWR_table+0x26 : 1e0f4a6 >
 1e0f4a8:    e9 da             	r1 = r5 >>> 11
 1e0f4aa:    ff 1f             	goto -2 <TXPWR_table+0x2A : 1e0f4aa >


TXSET_table:
 1e0f4ac:    f2 00             	flushinv [r2]
 1e0f4ae:    00 00             	nop
 1e0f4b0:    f2 00             	flushinv [r2]
 1e0f4b2:    00 00             	nop
 1e0f4b4:    f2 00             	flushinv [r2]
 1e0f4b6:    00 00             	nop
 1e0f4b8:    f2 00             	flushinv [r2]
 1e0f4ba:    00 00             	nop
 1e0f4bc:    f2 00             	flushinv [r2]
 1e0f4be:    00 00             	nop
 1e0f4c0:    f2 00             	flushinv [r2]
 1e0f4c2:    00 00             	nop
 1e0f4c4:    f2 00             	flushinv [r2]
 1e0f4c6:    00 00             	nop
 1e0f4c8:    f2 00             	flushinv [r2]
 1e0f4ca:    00 00             	nop
 1e0f4cc:    f2 00             	flushinv [r2]
 1e0f4ce:    00 00             	nop
 1e0f4d0:    f2 00             	flushinv [r2]
 1e0f4d2:    00 00             	nop
 1e0f4d4:    f2 00             	flushinv [r2]
 1e0f4d6:    00 00             	nop


anl_gain_set:
 1e0f4d8:    47 0d             	r7 <<= r5
 1e0f4da:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x26 : 1e0f6be >
 1e0f4dc:    47 0d             	r7 <<= r5
 1e0f4de:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2A : 1e0f6c2 >
 1e0f4e0:    47 0d             	r7 <<= r5
 1e0f4e2:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2E : 1e0f6c6 >
 1e0f4e4:    47 0d             	r7 <<= r5
 1e0f4e6:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x32 : 1e0f6ca >
 1e0f4e8:    47 0d             	r7 <<= r5
 1e0f4ea:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x36 : 1e0f6ce >
 1e0f4ec:    47 0d             	r7 <<= r5
 1e0f4ee:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3A : 1e0f6d2 >
 1e0f4f0:    47 0d             	r7 <<= r5
 1e0f4f2:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3E : 1e0f6d6 >
 1e0f4f4:    47 0d             	r7 <<= r5
 1e0f4f6:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x2 : 1e0f6da >
 1e0f4f8:    47 0d             	r7 <<= r5
 1e0f4fa:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x6 : 1e0f6de >
 1e0f4fc:    47 0d             	r7 <<= r5
 1e0f4fe:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xA : 1e0f6e2 >
 1e0f500:    47 0d             	r7 <<= r5
 1e0f502:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xE : 1e0f6e6 >
 1e0f504:    47 0d             	r7 <<= r5
 1e0f506:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x12 : 1e0f6ea >
 1e0f508:    47 0d             	r7 <<= r5
 1e0f50a:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x16 : 1e0f6ee >
 1e0f50c:    47 0d             	r7 <<= r5
 1e0f50e:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x1A : 1e0f6f2 >
 1e0f510:    47 0d             	r7 <<= r5
 1e0f512:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x2 : 1e0f6f6 >
 1e0f514:    47 0d             	r7 <<= r5
 1e0f516:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x6 : 1e0f6fa >
 1e0f518:    47 0d             	r7 <<= r5
 1e0f51a:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xA : 1e0f6fe >
 1e0f51c:    47 0d             	r7 <<= r5
 1e0f51e:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xE : 1e0f702 >
 1e0f520:    47 0d             	r7 <<= r5
 1e0f522:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x12 : 1e0f706 >
 1e0f524:    47 0d             	r7 <<= r5
 1e0f526:    f1 20             	if (r0 == 0) goto 482 <btagc_init : 1e0f70a >
 1e0f528:    47 0d             	r7 <<= r5
 1e0f52a:    f1 20             	if (r0 == 0) goto 482 <btagc_init+0x4 : 1e0f70e >
 1e0f52c:    47 0d             	r7 <<= r5
 1e0f52e:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x8 : 1e0f712 >
 1e0f530:    47 2d             	if (r6 == 0) goto -370 <m_code_addr+0xE0 : 1e0f3c0 >
 1e0f532:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0xC : 1e0f716 >
 1e0f534:    47 4d             	r7 = [r6 + 80]
 1e0f536:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x10 : 1e0f71a >
 1e0f538:    46 0d             	r6 <<= r5
 1e0f53a:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x14 : 1e0f71e >
 1e0f53c:    46 2d             	if (r6 == 0) goto -372 <m_code_addr+0xEA : 1e0f3ca >
 1e0f53e:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x18 : 1e0f722 >
 1e0f540:    46 4d             	r6 = [r6 + 80]
 1e0f542:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x1C : 1e0f726 >
 1e0f544:    46 6d             	r6 = b[r6 + 20] (u)
 1e0f546:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x20 : 1e0f72a >
 1e0f548:    46 8d             	r6 += -44
 1e0f54a:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x24 : 1e0f72e >
 1e0f54c:    46 ad             	r6 = sp + 212
 1e0f54e:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x28 : 1e0f732 >
 1e0f550:    46 cd             	r6 = r0 <<< 21
 1e0f552:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x2C : 1e0f736 >
 1e0f554:    46 ed f1 22       	if (r6 >= 212) goto 1506 <bt_fre_offset_value_init+0x2 : 1e0fb3a >
 1e0f558:    44 0d             	r4 <<= r5
 1e0f55a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x34 : 1e0f73e >
 1e0f55c:    44 2d             	if (r6 == 0) goto -376 <m_code_addr+0x106 : 1e0f3e6 >
 1e0f55e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x38 : 1e0f742 >
 1e0f560:    44 4d             	r4 = [r6 + 80]
 1e0f562:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x3C : 1e0f746 >
 1e0f564:    44 6d             	r4 = b[r6 + 20] (u)
 1e0f566:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x40 : 1e0f74a >
 1e0f568:    44 8d             	r4 += -44
 1e0f56a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x44 : 1e0f74e >
 1e0f56c:    44 ad             	r4 = sp + 212
 1e0f56e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x48 : 1e0f752 >
 1e0f570:    44 cd             	r4 = r0 <<< 21
 1e0f572:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x4C : 1e0f756 >
 1e0f574:    44 ed f1 28       	if (r4 >= 212) goto -3614 <lbuf_realloc+0x60 : 1e0e75a >
 1e0f578:    c1 0f             	r1 = r0 * r7
 1e0f57a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x54 : 1e0f75e >
 1e0f57c:    c1 2f             	if (r7 == 0) goto -126 <anl_gain_set+0x28 : 1e0f500 >
 1e0f57e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x58 : 1e0f762 >
 1e0f580:    c1 4f             	r1 = [r7 + 112]
 1e0f582:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x5C : 1e0f766 >
 1e0f584:    c1 6f             	r1 = b[r7 + 28] (u)
 1e0f586:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x60 : 1e0f76a >
 1e0f588:    c1 8f             	r1 += -4
 1e0f58a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x64 : 1e0f76e >
 1e0f58c:    c1 af             	r1 = sp + 252
 1e0f58e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x68 : 1e0f772 >
 1e0f590:    c1 cf             	r1 = r0 <<< 31
 1e0f592:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x6C : 1e0f776 >
 1e0f594:    c1 ef f1 2e       	if (r1 >= 252) goto -542 <m_code_addr+0x9A : 1e0f37a >
 1e0f598:    c8 0d             	r8 <<= r7
 1e0f59a:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x74 : 1e0f77e >
 1e0f59c:    c8 2d             	if (r6 == 0) goto -112 <anl_gain_set+0x56 : 1e0f52e >
 1e0f59e:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x78 : 1e0f782 >
 1e0f5a0:    c8 4d             	[r6 + 112] = r0
 1e0f5a2:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x7C : 1e0f786 >
 1e0f5a4:    c8 6d             	b[r6 + 28] = r0
 1e0f5a6:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x80 : 1e0f78a >
 1e0f5a8:    c8 8d             	r8 += -36
 1e0f5aa:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x84 : 1e0f78e >
 1e0f5ac:    c8 ad             	r8 = sp + 220
 1e0f5ae:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x88 : 1e0f792 >
 1e0f5b0:    c8 cd             	r0 = r1 <<< 23
 1e0f5b2:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x8C : 1e0f796 >
 1e0f5b4:    c8 ed f1 2c       	if (r8 >= 220) goto -1566 <dev_id_list+0x35E : 1e0ef9a >


anl_gain_set_h:
 1e0f5b8:    0d 00             	syscall
 1e0f5ba:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x20 : 1e0f5d8 >
 1e0f5be:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x24 : 1e0f5dc >
 1e0f5c2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x28 : 1e0f5e0 >
 1e0f5c6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x2C : 1e0f5e4 >
 1e0f5ca:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x30 : 1e0f5e8 >
 1e0f5ce:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x34 : 1e0f5ec >
 1e0f5d2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x38 : 1e0f5f0 >
 1e0f5d6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x3C : 1e0f5f4 >
 1e0f5da:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x40 : 1e0f5f8 >
 1e0f5de:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x44 : 1e0f5fc >
 1e0f5e2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x48 : 1e0f600 >
 1e0f5e6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x4C : 1e0f604 >
 1e0f5ea:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x50 : 1e0f608 >
 1e0f5ee:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x54 : 1e0f60c >
 1e0f5f2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x58 : 1e0f610 >
 1e0f5f6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x5C : 1e0f614 >
 1e0f5fa:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x60 : 1e0f618 >
 1e0f5fe:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x64 : 1e0f61c >
 1e0f602:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x68 : 1e0f620 >
 1e0f606:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x6C : 1e0f624 >
 1e0f60a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x70 : 1e0f628 >
 1e0f60e:    00 f2 0d 00       	if (r0 == r0) goto 26 <anl_gain_set_h+0x74 : 1e0f62c >
 1e0f612:    00 f4 0d 00       	[r0 + 0] |= 2256
 1e0f616:    00 f6 0d 00       	r0 = [r0 + 13]
 1e0f61a:    00 f8 0d 00       	r0 = h[r0+r0] (u)
 1e0f61e:    00 fa 0d 00       	r0 = b[r0+r0] (u)
 1e0f622:    00 fc 0d 00       	r0 = r0 + 13
 1e0f626:    00 fe 0d 00       	r0 = r0 * 2256
 1e0f62a:    00 00             	nop
 1e0f62c:    0d 00             	syscall
 1e0f62e:    00 02             	r0 = [sp]
 1e0f630:    0d 00             	syscall
 1e0f632:    00 04             	r0 = r0.b0 (u)
 1e0f634:    0d 00             	syscall
 1e0f636:    00 06             	r0 = -32
 1e0f638:    0d 00             	syscall
 1e0f63a:    00 08             	r0 = r0
 1e0f63c:    0d 00             	syscall
 1e0f63e:    00 0a             	sp += 0
 1e0f640:    0d 00             	syscall
 1e0f642:    00 0c             	r0 <<= r0
 1e0f644:    0d 00             	syscall
 1e0f646:    00 0e             	r0 = r0 * r0
 1e0f648:    0d 00             	syscall
 1e0f64a:    00 10             	call 0 <anl_gain_set_h+0x94 : 1e0f64c >
 1e0f64c:    0d 00             	syscall
 1e0f64e:    00 12             	call 1024 <bt_exit_deepsleep+0x38 : 1e0fa50 >
 1e0f650:    0d 00             	syscall
 1e0f652:    00 14             	call -2048 <dev_id_list+0x218 : 1e0ee54 >
 1e0f654:    0d 00             	syscall
 1e0f656:    00 16             	call -1024 <gpio_out_regs+0xC : 1e0f258 >
 1e0f658:    0d 00             	syscall
 1e0f65a:    00 18             	goto 0 <anl_gain_set_h+0xA4 : 1e0f65c >
 1e0f65c:    0d 00             	syscall
 1e0f65e:    00 1a             	goto 1024 <bt_exit_deepsleep+0x48 : 1e0fa60 >
 1e0f660:    0d 00             	syscall
 1e0f662:    00 1c             	goto -2048 <dev_id_list+0x228 : 1e0ee64 >
 1e0f664:    0d 00             	syscall
 1e0f666:    00 1e             	goto -1024 <clock_uart+0x4 : 1e0f268 >
 1e0f668:    0d 00             	syscall
 1e0f66a:    00 20             	if (r0 == 0) goto 0 <anl_gain_set_h+0xB4 : 1e0f66c >
 1e0f66c:    0d 00             	syscall
 1e0f66e:    00 22             	if (r1 == 0) goto 0 <anl_gain_set_h+0xB8 : 1e0f670 >
 1e0f670:    0d 00             	syscall
 1e0f672:    00 24             	if (r2 == 0) goto 0 <anl_gain_set_h+0xBC : 1e0f674 >
 1e0f674:    0d 00             	syscall
 1e0f676:    00 26             	if (r3 == 0) goto 0 <anl_gain_set_h+0xC0 : 1e0f678 >
 1e0f678:    0d 00             	syscall
 1e0f67a:    00 28             	if (r4 == 0) goto 0 <anl_gain_set_h+0xC4 : 1e0f67c >
 1e0f67c:    0d 00             	syscall
 1e0f67e:    00 2a             	if (r5 == 0) goto 0 <anl_gain_set_h+0xC8 : 1e0f680 >
 1e0f680:    0d 00             	syscall
 1e0f682:    00 2c             	if (r6 == 0) goto 0 <anl_gain_set_h+0xCC : 1e0f684 >
 1e0f684:    0d 00             	syscall
 1e0f686:    00 2e             	if (r7 == 0) goto 0 <anl_gain_set_h+0xD0 : 1e0f688 >
 1e0f688:    0d 00             	syscall
 1e0f68a:    00 30             	if (r0 != 0) goto 0 <anl_gain_set_h+0xD4 : 1e0f68c >
 1e0f68c:    0d 00             	syscall
 1e0f68e:    00 32             	if (r1 != 0) goto 0 <anl_gain_set_h+0xD8 : 1e0f690 >
 1e0f690:    0d 00             	syscall
 1e0f692:    00 34             	if (r2 != 0) goto 0 <anl_gain_set_h+0xDC : 1e0f694 >
 1e0f694:    0d 00             	syscall
 1e0f696:    00 36             	if (r3 != 0) goto 0 <gain_adj_step : 1e0f698 >


gain_adj_step:
 1e0f698:    ec ed ed ee       	if (r12 ?? -34) goto -550 <bt_frac_pll_int_48m+0x4A : 1e0f476 >
 1e0f69c:    ee ef ef f0       	if (r14 ?? -2) goto 478 <btagc_init+0x174 : 1e0f87e >
 1e0f6a0:    f0 f1 f1 f2       	if ((r0 & r15) != 0) goto -6686 <fopen+0x5A : 1e0dc86 >
 1e0f6a4:    f2 f3 f3 f4       	goto -1709594 <uECC_vli_cmp_unsafe+0x1B67092 : 1c6e08e >
 1e0f6a8:    f4 f5              <unkown instruction>
 1e0f6aa:    f5 f6 f6 f7       	[r15 ++= r7] = r5
 1e0f6ae:    f7 f8 f8 f9       	h[r15 ++= r9] = r7.h
 1e0f6b2:    f9 fa              <unkown instruction>
 1e0f6b4:    fa fb fb fc       	r10 = sp + 64763
 1e0f6b8:    fc fd fd 00       	r0 = r0 <> r15
 1e0f6bc:    00 00             	nop
 1e0f6be:    00 00             	nop
 1e0f6c0:    00 00             	nop
 1e0f6c2:    00 00             	nop
 1e0f6c4:    00 00             	nop
 1e0f6c6:    03 03             	r3 = [sp+64]
 1e0f6c8:    04 04             	r4 = r0.b0 (u)
 1e0f6ca:    05 05             	r5 = r4.b0 (u)
 1e0f6cc:    06 06             	r6 = -32
 1e0f6ce:    07 07             	r7 = -16
 1e0f6d0:    08 08             	r8 = r0
 1e0f6d2:    09 09             	r9 += r0
 1e0f6d4:    0a 0a             	sp += 20
 1e0f6d6:    0b 0b             	sp += -492


bt_pll_para:
 1e0f6d8:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF.c:89:0
 1e0f6de:    02 70             	r2 = 0			  ## RF.c:96:17
 1e0f6e0:    fa 62             	b[r1 + 15] = r2			  ## RF.c:96:17
 1e0f6e2:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## RF.c:99:24
 1e0f6e8:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## RF.c:99:24
 1e0f6ec:    68 62             	b[r1 + 6] = r0			  ## RF.c:99:18
 1e0f6ee:    a0 70             	r0 = 10			  ## RF.c:100:17
 1e0f6f0:    78 62             	b[r1 + 7] = r0			  ## RF.c:100:17
 1e0f6f2:    20 00             	rts			  ## RF.c:102:1


bt_max_pwr_set:
 1e0f6f4:    20 fd 0f 09       	r0 = r0 & 15			  ## RF.c:55:0
 1e0f6f8:    c1 ff 50 98 00 00 	r1 = 38992 <BTCTLER_CODE_TOTAL+0x1594 : 9850 >			  ## RF.c:59:20
 1e0f6fe:    50 b2             	r0 |= r1			  ## RF.c:59:20
 1e0f700:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF.c:59:20
 1e0f706:    08 52             	h[r1 + 0] = r0			  ## RF.c:59:20
 1e0f708:    20 00             	rts			  ## RF.c:60:1


btagc_init:
 1e0f70a:    79 01             	[--sp] = {rets, r9-r4}			  ## btagc.c:321:0
 1e0f70c:    c8 ff 80 fd 1c 00 	r8 = 1899904 <uECC_vli_cmp_unsafe+0xC8D84 : 1cfd80 >			  ## btagc.c:321:0
 1e0f712:    00 f4 10 8a       	[r8 + 0] |= 4096			  ## btagc.c:233:5
 1e0f716:    00 f4 20 8a       	[r8 + 0] |= 8192			  ## btagc.c:234:5
 1e0f71a:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:235:5
 1e0f71e:    c2 ff d8 f4 e0 01 	r2 = 31519960 <anl_gain_set : 1e0f4d8 >			  ## btagc.c:235:5
 1e0f724:    03 70             	r3 = 0
 1e0f726:    c4 ff b8 f5 e0 01 	r4 = 31520184 <anl_gain_set_h : 1e0f5b8 >
 1e0f72c:    c5 ff d8 f4 e0 01 	r5 = 31519960 <anl_gain_set : 1e0f4d8 >
 1e0f732:    13 f6 18 80       	[r8 + 24] = r3			  ## btagc.c:239:20
 1e0f736:    06 f6 00 80       	r6 = [r8 + 0]			  ## btagc.c:239:20
 1e0f73a:    76 b7             	r6 &= 4294950911			  ## btagc.c:239:20
 1e0f73c:    16 f6 00 80       	[r8 + 0] = r6			  ## btagc.c:239:20
 1e0f740:    73 e3 07 c0       	ifs (r3 > 55) goto 14 <btagc_init+0x48 : 1e0f752 >			  ## btagc.c:241:13
 1e0f744:    06 4a             	r6 = [r5 + 0]			  ## btagc.c:252:26
 1e0f746:    16 f6 1c 80       	[r8 + 28] = r6			  ## btagc.c:252:24
 1e0f74a:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:254:13
 1e0f74e:    06 48             	r6 = [r4 + 0]			  ## btagc.c:255:26
 1e0f750:    1a 18             	goto 52 <btagc_init+0x7C : 1e0f786 >			  ## btagc.c:255:26
 1e0f752:    09 f9 01 20       	r9 = b[r2 + 1] (u)			  ## btagc.c:262:28
 1e0f756:    07 64             	r7 = b[r2 + 0] (u)			  ## btagc.c:261:28
 1e0f758:    21 64             	r1 = b[r2 + 2] (u)			  ## btagc.c:263:28
 1e0f75a:    36 64             	r6 = b[r2 + 3] (u)			  ## btagc.c:264:28
 1e0f75c:    c8 fd 40 79       	r7 <= insert(r9, p:8, l:8)			  ## btagc.c:261:67
 1e0f760:    c8 fd 80 71       	r7 <= insert(r1, p:16, l:8)			  ## btagc.c:262:67
 1e0f764:    c8 fd c0 76       	r7 <= insert(r6, p:24, l:8)			  ## btagc.c:263:68
 1e0f768:    17 f6 1c 80       	[r8 + 28] = r7			  ## btagc.c:261:24
 1e0f76c:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:266:13
 1e0f770:    09 f9 05 20       	r9 = b[r2 + 5] (u)			  ## btagc.c:268:28
 1e0f774:    46 64             	r6 = b[r2 + 4] (u)			  ## btagc.c:267:28
 1e0f776:    67 64             	r7 = b[r2 + 6] (u)			  ## btagc.c:269:28
 1e0f778:    71 64             	r1 = b[r2 + 7] (u)			  ## btagc.c:270:28
 1e0f77a:    c8 fd 40 69       	r6 <= insert(r9, p:8, l:8)			  ## btagc.c:267:67
 1e0f77e:    c8 fd 80 67       	r6 <= insert(r7, p:16, l:8)			  ## btagc.c:268:67
 1e0f782:    c8 fd c0 61       	r6 <= insert(r1, p:24, l:8)			  ## btagc.c:269:68
 1e0f786:    16 f6 1c 80       	[r8 + 28] = r6
 1e0f78a:    82 80             	r2 += 8			  ## btagc.c:238:19
 1e0f78c:    45 80             	r5 += 4			  ## btagc.c:238:19
 1e0f78e:    13 80             	r3 += 1			  ## btagc.c:238:26
 1e0f790:    44 80             	r4 += 4			  ## btagc.c:238:19
 1e0f792:    03 e4 ce 1f       	if (r3 != 64) goto -100 <btagc_init+0x28 : 1e0f732 >			  ## btagc.c:238:19
 1e0f796:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:274:5
 1e0f79a:    f1 b6             	r1 &= 4294959103			  ## btagc.c:274:5
 1e0f79c:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:274:5
 1e0f7a0:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:275:5
 1e0f7a4:    71 b7             	r1 &= 4294950911			  ## btagc.c:275:5
 1e0f7a6:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:275:5
 1e0f7aa:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:276:5
 1e0f7ae:    71 b6             	r1 &= 4294963199			  ## btagc.c:276:5
 1e0f7b0:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:276:5
 1e0f7b4:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:277:5
 1e0f7b8:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:334:5
 1e0f7bc:    31 fd 0e 1b       	r1 = r1 & 4294049791			  ## btagc.c:334:5
 1e0f7c0:    01 fd 0a 1b       	r1 = r1 | 655360			  ## btagc.c:334:5
 1e0f7c4:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:334:5
 1e0f7c8:    00 f4 01 89       	[r8 + 0] |= 1			  ## btagc.c:336:5
 1e0f7cc:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:337:5
 1e0f7d0:    31 fd 1e 19       	r1 = r1 & 4294967265			  ## btagc.c:337:5
 1e0f7d4:    01 fd 06 19       	r1 = r1 | 6			  ## btagc.c:337:5
 1e0f7d8:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:337:5
 1e0f7dc:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:338:5
 1e0f7e0:    02 fb 3f fc       	r2 = -961 <bank_code_load_addr+0x1E521B : 1fffc3f >			  ## btagc.c:338:5
 1e0f7e4:    51 b5             	r1 &= r2			  ## btagc.c:338:5
 1e0f7e6:    11 b3             	r1 |= 64			  ## btagc.c:338:5
 1e0f7e8:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:338:5
 1e0f7ec:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:339:5
 1e0f7f0:    20 fd 01 09       	r0 = r0 & 1			  ## btagc.c:339:5
 1e0f7f4:    71 b5             	r1 &= 4294966271			  ## btagc.c:339:5
 1e0f7f6:    c1 fd 50 10       	r1 <= insert(r0, p:10, l:1)			  ## btagc.c:339:5
 1e0f7fa:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:339:5
 1e0f7fe:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:340:5
 1e0f802:    f1 b5             	r1 &= 4294965247			  ## btagc.c:340:5
 1e0f804:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:340:5
 1e0f808:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:341:5
 1e0f80c:    71 b6             	r1 &= 4294963199			  ## btagc.c:341:5
 1e0f80e:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:341:5
 1e0f812:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:342:5
 1e0f816:    f1 b6             	r1 &= 4294959103			  ## btagc.c:342:5
 1e0f818:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:342:5
 1e0f81c:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:343:5
 1e0f820:    71 b7             	r1 &= 4294950911			  ## btagc.c:343:5
 1e0f822:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:343:5
 1e0f826:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:344:5
 1e0f82a:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:345:5
 1e0f82e:    71 b8             	r1 &= 4294901759			  ## btagc.c:345:5
 1e0f830:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:345:5
 1e0f834:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:346:5
 1e0f838:    71 ba             	r1 &= 4293918719			  ## btagc.c:346:5
 1e0f83a:    c1 fd a0 10       	r1 <= insert(r0, p:20, l:1)			  ## btagc.c:346:5
 1e0f83e:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:346:5
 1e0f842:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:347:5
 1e0f846:    30 fd fc 06       	r0 = r0 & 4162846719			  ## btagc.c:347:5
 1e0f84a:    00 fd 70 06       	r0 = r0 | 62914560			  ## btagc.c:347:5
 1e0f84e:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:347:5
 1e0f852:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:348:5
 1e0f856:    f0 bd             	r0 &= 4160749567			  ## btagc.c:348:5
 1e0f858:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:348:5
 1e0f85c:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:349:5
 1e0f860:    70 be             	r0 &= 4026531839			  ## btagc.c:349:5
 1e0f862:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:349:5
 1e0f866:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:351:5
 1e0f86a:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:351:5
 1e0f86e:    00 fd 37 09       	r0 = r0 | 55			  ## btagc.c:351:5
 1e0f872:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:351:5
 1e0f876:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:352:5
 1e0f87a:    30 fd 3f 0a       	r0 = r0 & 4294951167			  ## btagc.c:352:5
 1e0f87e:    00 fd 27 0a       	r0 = r0 | 9984			  ## btagc.c:352:5
 1e0f882:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:352:5
 1e0f886:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:353:5
 1e0f88a:    30 fd 60 02       	r0 = r0 & 4294852607			  ## btagc.c:353:5
 1e0f88e:    00 fd 20 02       	r0 = r0 | 81920			  ## btagc.c:353:5
 1e0f892:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:353:5
 1e0f896:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:354:5
 1e0f89a:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## btagc.c:354:5
 1e0f89e:    00 fd 0a 0b       	r0 = r0 | 655360			  ## btagc.c:354:5
 1e0f8a2:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:354:5
 1e0f8a6:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:355:5
 1e0f8aa:    70 ba             	r0 &= 4293918719			  ## btagc.c:355:5
 1e0f8ac:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:355:5
 1e0f8b0:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:356:5
 1e0f8b4:    30 fd 70 06       	r0 = r0 & 4232052735			  ## btagc.c:356:5
 1e0f8b8:    00 fd c0 0b       	r0 = r0 | 12582912			  ## btagc.c:356:5
 1e0f8bc:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:356:5
 1e0f8c0:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:357:5
 1e0f8c4:    30 fd 3c 0c       	r0 = r0 & 3288334335			  ## btagc.c:357:5
 1e0f8c8:    10 bd             	r0 |= 67108864			  ## btagc.c:357:5
 1e0f8ca:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:357:5
 1e0f8ce:    01 f4 40 8c       	[r8 + 4] |= 1073741824			  ## btagc.c:358:5
 1e0f8d2:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:360:5
 1e0f8d6:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:360:5
 1e0f8da:    00 fd 29 09       	r0 = r0 | 41			  ## btagc.c:360:5
 1e0f8de:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:360:5
 1e0f8e2:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:361:5
 1e0f8e6:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:361:5
 1e0f8ea:    00 fd 24 00       	r0 = r0 | 2624			  ## btagc.c:361:5
 1e0f8ee:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:361:5
 1e0f8f2:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:362:5
 1e0f8f6:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:362:5
 1e0f8fa:    00 fd a4 02       	r0 = r0 | 167936			  ## btagc.c:362:5
 1e0f8fe:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:362:5
 1e0f902:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:363:5
 1e0f906:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:363:5
 1e0f90a:    00 fd ac 0b       	r0 = r0 | 11272192			  ## btagc.c:363:5
 1e0f90e:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:363:5
 1e0f912:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:364:5
 1e0f916:    30 fd 3f 0c       	r0 = r0 & 3238002687			  ## btagc.c:364:5
 1e0f91a:    00 fd 2d 0c       	r0 = r0 | 754974720			  ## btagc.c:364:5
 1e0f91e:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:364:5
 1e0f922:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:365:5
 1e0f926:    30 fd c0 0c       	r0 = r0 & 1073741823			  ## btagc.c:365:5
 1e0f92a:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:365:5
 1e0f92e:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:367:5
 1e0f932:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:367:5
 1e0f936:    00 fd 2f 09       	r0 = r0 | 47			  ## btagc.c:367:5
 1e0f93a:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:367:5
 1e0f93e:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:368:5
 1e0f942:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:368:5
 1e0f946:    00 fd 5c 00       	r0 = r0 | 3520			  ## btagc.c:368:5
 1e0f94a:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:368:5
 1e0f94e:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:369:5
 1e0f952:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:369:5
 1e0f956:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:369:5
 1e0f95a:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:370:5
 1e0f95e:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:370:5
 1e0f962:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:370:5
 1e0f966:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:371:5
 1e0f96a:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## btagc.c:371:5
 1e0f96e:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:371:5
 1e0f972:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:372:5
 1e0f976:    30 fd fc 0c       	r0 = r0 & 67108863			  ## btagc.c:372:5
 1e0f97a:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:372:5
 1e0f97e:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:374:5
 1e0f982:    f0 b7             	r0 &= 4294934527			  ## btagc.c:374:5
 1e0f984:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:374:5
 1e0f988:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:375:5
 1e0f98c:    59 01             	{pc, r9-r4} = [sp++]			  ## btagc.c:376:1


bt_enter_deepsleep:
 1e0f98e:    74 01             	[--sp] = {rets, r4}			  ## RF.c:527:0
 1e0f990:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## RF.c:528:12
 1e0f996:    90 60             	r0 = b[r0 + 9] (u)			  ## RF.c:528:12
 1e0f998:    3e 20             	if (r0 == 0) goto 124 <bt_enter_deepsleep+0x88 : 1e0fa16 >			  ## RF.c:528:12
 1e0f99a:    00 fb fc 03       	r0 = 1020 <BTCTLER_LE_RAM_TOTAL+0x24 : 3fc >			  ## RF.c:532:25
 1e0f99e:    bf f3 ff df       	call -16386 <malloc : 1e0b9a0 >			  ## RF.c:532:25
 1e0f9a2:    04 08             	r4 = r0			  ## RF.c:532:25
 1e0f9a4:    c0 ff a0 2c 00 00 	r0 = 11424 <rf_pwr_off_info_p : 2ca0 >			  ## RF.c:532:23
 1e0f9aa:    0c 40             	[r0 + 0] = r4			  ## RF.c:532:23
 1e0f9ac:    02 38             	if (r4 != 0) goto 4 <bt_enter_deepsleep+0x24 : 1e0f9b2 >			  ## RF.c:532:23
 1e0f9ae:    8f f3 32 9d       	call 2046564 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0f9b2:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## RF.c:535:5
 1e0f9b8:    02 7a             	r2 = 160			  ## RF.c:535:5
 1e0f9ba:    40 08             	r0 = r4			  ## RF.c:535:5
 1e0f9bc:    97 f3 92 ba       	call 3110180 <memcpy : 106ee4 >			  ## RF.c:535:5
 1e0f9c0:    40 fc a0 00       	r0 = r4 + 160			  ## RF.c:537:37
 1e0f9c4:    20 fb 1c 1b       	r1 = 1835008			  ## RF.c:537:5
 1e0f9c8:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:537:5
 1e0f9cc:    97 f3 8a ba       	call 3110164 <memcpy : 106ee4 >			  ## RF.c:537:5
 1e0f9d0:    40 fc e0 01       	r0 = r4 + 480			  ## RF.c:539:37
 1e0f9d4:    c1 ff 00 fc 1c 00 	r1 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:539:5
 1e0f9da:    02 fb 10 02       	r2 = 528 <BTCTLER_CONTROLLER_BSS_SIZE+0x50 : 210 >			  ## RF.c:539:5
 1e0f9de:    97 f3 81 ba       	call 3110146 <memcpy : 106ee4 >			  ## RF.c:539:5
 1e0f9e2:    c0 ff b4 00 1c 00 	r0 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## RF.c:539:5
 1e0f9e8:    21 40             	r1 = [r0 + 8]			  ## RF.c:541:44
 1e0f9ea:    42 fc f0 03       	r2 = r4 + 1008			  ## RF.c:541:44
 1e0f9ee:    09 44             	[r2 + 0] = r1			  ## RF.c:541:42
 1e0f9f0:    01 40             	r1 = [r0 + 0]			  ## RF.c:542:45
 1e0f9f2:    19 44             	[r2 + 4] = r1			  ## RF.c:542:43
 1e0f9f4:    10 40             	r0 = [r0 + 4]			  ## RF.c:543:45
 1e0f9f6:    28 44             	[r2 + 8] = r0			  ## RF.c:543:43
 1e0f9f8:    00 fb 60 01       	r0 = 352 <DRIVER_RAM_TOTAL+0x6E : 160 >			  ## RF.c:548:29
 1e0f9fc:    bf f3 d0 df       	call -16480 <malloc : 1e0b9a0 >			  ## RF.c:548:29
 1e0fa00:    02 08             	r2 = r0			  ## RF.c:548:29
 1e0fa02:    c0 ff a4 2c 00 00 	r0 = 11428 <ble_pwr_off_store : 2ca4 >			  ## RF.c:548:27
 1e0fa08:    0a 40             	[r0 + 0] = r2			  ## RF.c:548:27
 1e0fa0a:    02 34             	if (r2 != 0) goto 4 <bt_enter_deepsleep+0x82 : 1e0fa10 >			  ## RF.c:548:27
 1e0fa0c:    8f f3 03 9d       	call 2046470 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e0fa10:    20 08             	r0 = r2			  ## RF.c:551:9
 1e0fa12:    80 f3 8e 12       	call 9500 <ble_enter_deepsleep : 1e11f32 >			  ## RF.c:551:9
 1e0fa16:    54 01             	{pc, r4} = [sp++]			  ## RF.c:553:1


bt_exit_deepsleep:
 1e0fa18:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:556:0
 1e0fa1a:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF.c:556:0
 1e0fa20:    90 62             	r0 = b[r1 + 9] (u)			  ## RF.c:557:12
 1e0fa22:    7d 20             	if (r0 == 0) goto 250 <bt_exit_deepsleep+0x106 : 1e0fb1e >			  ## RF.c:557:12
 1e0fa24:    10 70             	r0 = 1			  ## RF.c:567:21
 1e0fa26:    c2 ff 00 21 1f 00 	r2 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:567:21
 1e0fa2c:    10 f6 00 21       	[r2 + 256] = r0			  ## RF.c:567:21
 1e0fa30:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:567:21
 1e0fa36:    03 40             	r3 = [r0 + 0]			  ## RF.c:570:5
 1e0fa38:    33 fd c0 3a       	r3 = r3 & 4294918143			  ## RF.c:570:5
 1e0fa3c:    13 b7             	r3 |= 16384			  ## RF.c:570:5
 1e0fa3e:    0b 40             	[r0 + 0] = r3			  ## RF.c:570:5
 1e0fa40:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:572:11
 1e0fa42:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:572:24
 1e0fa46:    8f f3 be a3       	call 2049916 <delay : 41c6 >			  ## RF.c:572:5
 1e0fa4a:    00 f4 80 29       	[r2 + 0] |= 128			  ## RF.c:573:5
 1e0fa4e:    00 44             	r0 = [r2 + 0]			  ## RF.c:574:5
 1e0fa50:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:574:5
 1e0fa54:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:574:5
 1e0fa58:    08 44             	[r2 + 0] = r0			  ## RF.c:574:5
 1e0fa5a:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:576:11
 1e0fa5c:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:576:24
 1e0fa60:    8f f3 b1 a3       	call 2049890 <delay : 41c6 >			  ## RF.c:576:5
 1e0fa64:    00 44             	r0 = [r2 + 0]			  ## RF.c:577:5
 1e0fa66:    70 b0             	r0 &= 4294967294			  ## RF.c:577:5
 1e0fa68:    08 44             	[r2 + 0] = r0			  ## RF.c:577:5
 1e0fa6a:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:578:11
 1e0fa6c:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:578:24
 1e0fa70:    8f f3 a9 a3       	call 2049874 <delay : 41c6 >			  ## RF.c:578:5
 1e0fa74:    00 f4 01 29       	[r2 + 0] |= 1			  ## RF.c:579:5
 1e0fa78:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:581:11
 1e0fa7a:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:581:24
 1e0fa7e:    8f f3 a2 a3       	call 2049860 <delay : 41c6 >			  ## RF.c:581:5
 1e0fa82:    c0 ff 7c fc 1c 00 	r0 = 1899644 <uECC_vli_cmp_unsafe+0xC8C80 : 1cfc7c >			  ## RF.c:582:5
 1e0fa88:    00 f4 40 09       	[r0 + 0] |= 64			  ## RF.c:582:5
 1e0fa8c:    c4 ff 20 01 1c 00 	r4 = 1835296 <uECC_vli_cmp_unsafe+0xB9124 : 1c0120 >			  ## RF.c:582:5
 1e0fa92:    03 f4 01 49       	[r4 + 12] |= 1			  ## RF.c:584:22
 1e0fa96:    c5 ff a0 2c 00 00 	r5 = 11424 <rf_pwr_off_info_p : 2ca0 >
 1e0fa9c:    00 4a             	r0 = [r5 + 0]
 1e0fa9e:    01 70             	r1 = 0
 1e0faa0:    c2 ff 00 19 1e 00 	r2 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e0faa6:    33 fd 01 19       	r3 = r1 & 4294967294			  ## RF.c:591:22
 1e0faaa:    83 e0 02 00       	if (r3 == 8) goto 4 <bt_exit_deepsleep+0x9A : 1e0fab2 >			  ## RF.c:591:22
 1e0faae:    03 40             	r3 = [r0 + 0]			  ## RF.c:592:34
 1e0fab0:    0b 44             	[r2 + 0] = r3			  ## RF.c:592:32
 1e0fab2:    40 80             	r0 += 4			  ## RF.c:590:19
 1e0fab4:    11 80             	r1 += 1			  ## RF.c:590:62
 1e0fab6:    42 80             	r2 += 4			  ## RF.c:590:19
 1e0fab8:    81 e2 f5 1f       	if (r1 != 40) goto -22 <bt_exit_deepsleep+0x8E : 1e0faa6 >			  ## RF.c:590:19
 1e0fabc:    06 4a             	r6 = [r5 + 0]			  ## RF.c:599:41
 1e0fabe:    61 fc a0 00       	r1 = r6 + 160			  ## RF.c:599:5
 1e0fac2:    20 fb 1c 0b       	r0 = 1835008			  ## RF.c:599:5
 1e0fac6:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:599:5
 1e0faca:    97 f3 0b ba       	call 3109910 <memcpy : 106ee4 >			  ## RF.c:599:5
 1e0face:    60 fc e0 01       	r0 = r6 + 480			  ## RF.c:601:5
 1e0fad2:    01 fb d5 ff       	r1 = -43 <bank_code_load_addr+0x1E55B1 : 1ffffd5 >			  ## RF.c:601:5
 1e0fad6:    c2 ff 00 fc 1c 00 	r2 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:601:5
 1e0fadc:    21 e0 02 30       	if (r1 < 2) goto 4 <bt_exit_deepsleep+0xCC : 1e0fae4 >
 1e0fae0:    03 40             	r3 = [r0 + 0]			  ## RF.c:604:65
 1e0fae2:    0b 44             	[r2 + 0] = r3			  ## RF.c:604:63
 1e0fae4:    40 80             	r0 += 4			  ## RF.c:601:19
 1e0fae6:    11 80             	r1 += 1			  ## RF.c:601:19
 1e0fae8:    42 80             	r2 += 4			  ## RF.c:601:19
 1e0faea:    91 e5 f7 1f       	if (r1 != 89) goto -18 <bt_exit_deepsleep+0xC4 : 1e0fadc >			  ## RF.c:601:19
 1e0faee:    00 4a             	r0 = [r5 + 0]			  ## RF.c:609:23
 1e0faf0:    01 fc f0 03       	r1 = r0 + 1008			  ## RF.c:609:23
 1e0faf4:    12 42             	r2 = [r1 + 4]			  ## RF.c:609:42
 1e0faf6:    0a 48             	[r4 + 0] = r2			  ## RF.c:609:21
 1e0faf8:    22 42             	r2 = [r1 + 8]			  ## RF.c:610:42
 1e0fafa:    1a 48             	[r4 + 4] = r2			  ## RF.c:610:21
 1e0fafc:    01 42             	r1 = [r1 + 0]			  ## RF.c:611:44
 1e0fafe:    29 48             	[r4 + 8] = r1			  ## RF.c:611:23
 1e0fb00:    01 f4 80 4a       	[r4 + 4] |= 32768			  ## RF.c:613:21
 1e0fb04:    02 f4 80 4a       	[r4 + 8] |= 32768			  ## RF.c:614:23
 1e0fb08:    bf f3 4f df       	call -16738 <free : 1e0b9aa >			  ## RF.c:623:5
 1e0fb0c:    c4 ff a4 2c 00 00 	r4 = 11428 <ble_pwr_off_store : 2ca4 >			  ## RF.c:629:28
 1e0fb12:    00 48             	r0 = [r4 + 0]			  ## RF.c:629:28
 1e0fb14:    80 f3 2e 12       	call 9308 <ble_exit_deepsleep : 1e11f74 >			  ## RF.c:629:9
 1e0fb18:    00 48             	r0 = [r4 + 0]			  ## RF.c:631:14
 1e0fb1a:    bf f3 46 df       	call -16756 <free : 1e0b9aa >			  ## RF.c:631:9
 1e0fb1e:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:633:1


get_bt_osc_offset_flag:
 1e0fb20:    34 00             	[--sp] = rets			  ## analog.c:114:0
 1e0fb22:    e0 76             	r0 = 110			  ## analog.c:115:9
 1e0fb24:    bf f3 cb ec       	call -9834 <btif_eara_check_id : 1e0d4be >			  ## analog.c:115:9
 1e0fb28:    01 70             	r1 = 0			  ## analog.c:115:9
 1e0fb2a:    04 20             	if (r0 == 0) goto 8 <get_bt_osc_offset_flag+0x14 : 1e0fb34 >			  ## analog.c:115:9
 1e0fb2c:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog.c:117:19
 1e0fb32:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:117:19
 1e0fb34:    40 04             	r0 = r1.b0 (u)			  ## analog.c:122:1
 1e0fb36:    30 00             	pc = [sp++]			  ## analog.c:122:1


bt_fre_offset_value_init:
 1e0fb38:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:211:0
 1e0fb3a:    fc 0b             	sp += -8			  ## analog.c:211:0
 1e0fb3c:    c4 ff f4 09 00 00 	r4 = 2548 <system_data_end : 9f4 >			  ## analog.c:211:0
 1e0fb42:    00 70             	r0 = 0			  ## analog.c:211:0
 1e0fb44:    58 58             	h[r4 + 10] = r0			  ## analog.c:213:19
 1e0fb46:    c8 68             	b[r4 + 12] = r0			  ## analog.c:214:24
 1e0fb48:    01 a0             	r1 = sp + 0			  ## analog.c:214:24
 1e0fb4a:    e0 76             	r0 = 110			  ## analog.c:218:11
 1e0fb4c:    62 70             	r2 = 6			  ## analog.c:218:11
 1e0fb4e:    bf f3 7f ea       	call -11010 <syscfg_read : 1e0d050 >			  ## analog.c:218:11
 1e0fb52:    00 04             	r0 = r0.b0 (u)			  ## analog.c:219:10
 1e0fb54:    60 e0 1b 10       	if (r0 != 6) goto 54 <bt_fre_offset_value_init+0x56 : 1e0fb8e >			  ## analog.c:219:10
 1e0fb58:    85 f5 00 00       	r5 = h[sp] (u)			  ## analog.c:219:28
 1e0fb5c:    00 a0             	r0 = sp + 0			  ## analog.c:219:28
 1e0fb5e:    90 b0             	r0 |= 2			  ## analog.c:219:52
 1e0fb60:    41 70             	r1 = 4			  ## analog.c:219:35
 1e0fb62:    bf f3 cb 89       	call -60522 <CRC16 : 1e00efc >			  ## analog.c:219:35
 1e0fb66:    05 f2 12 10       	if (r5 != r0) goto 36 <bt_fre_offset_value_init+0x56 : 1e0fb8e >			  ## analog.c:219:35
 1e0fb6a:    80 f5 04 00       	r0 = h[sp+4] (u)			  ## analog.c:220:29
 1e0fb6e:    81 f5 02 00       	r1 = h[sp+2] (u)			  ## analog.c:220:29
 1e0fb72:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## analog.c:220:29
 1e0fb76:    59 58             	h[r4 + 10] = r1			  ## analog.c:220:23
 1e0fb78:    10 70             	r0 = 1			  ## analog.c:221:28
 1e0fb7a:    09 c4             	r1 = r1 << 16			  ## analog.c:222:14
 1e0fb7c:    41 fb c8 1b       	r1 = r1 + 13107200			  ## analog.c:222:35
 1e0fb80:    42 fb c8 05       	r2 = r0 + 26214400			  ## analog.c:222:35
 1e0fb84:    c8 68             	b[r4 + 12] = r0			  ## analog.c:221:28
 1e0fb86:    21 f2 02 30       	if (r1 < r2) goto 4 <bt_fre_offset_value_init+0x56 : 1e0fb8e >			  ## analog.c:221:28
 1e0fb8a:    00 70             	r0 = 0			  ## analog.c:223:27
 1e0fb8c:    58 58             	h[r4 + 10] = r0			  ## analog.c:223:27
 1e0fb8e:    04 0a             	sp += 8
 1e0fb90:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:229:1


bt_osc_offset_set:
 1e0fb92:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## analog.c:125:0
 1e0fb98:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:126:12
 1e0fb9a:    03 34             	if (r2 != 0) goto 6 <bt_osc_offset_set+0x10 : 1e0fba2 >			  ## analog.c:126:12
 1e0fb9c:    52 52             	r2 = h[r1 + 10] (u)			  ## analog.c:130:9
 1e0fb9e:    20 09             	r0 += r2			  ## analog.c:130:9
 1e0fba0:    58 52             	h[r1 + 10] = r0
 1e0fba2:    20 00             	rts			  ## analog.c:137:1


bt_osc_offset_save:
 1e0fba4:    74 01             	[--sp] = {rets, r4}			  ## analog.c:193:0
 1e0fba6:    fc 0b             	sp += -8			  ## analog.c:193:0
 1e0fba8:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog.c:193:0
 1e0fbae:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:196:12
 1e0fbb0:    13 32             	if (r1 != 0) goto 38 <bt_osc_offset_save+0x34 : 1e0fbd8 >			  ## analog.c:196:12
 1e0fbb2:    21 f7 0a 00       	r1 = h[r0 + 10] (s)			  ## analog.c:200:18
 1e0fbb6:    04 a0             	r4 = sp + 0			  ## analog.c:200:18
 1e0fbb8:    00 fd 02 49       	r0 = r4 | 2			  ## analog.c:200:9
 1e0fbbc:    0a d4             	r2 = r1 >> 16			  ## analog.c:200:16
 1e0fbbe:    1a 50             	h[r0 + 2] = r2			  ## analog.c:200:16
 1e0fbc0:    91 f5 02 00       	h[sp+2] = r1			  ## analog.c:200:16
 1e0fbc4:    41 70             	r1 = 4			  ## analog.c:201:15
 1e0fbc6:    bf f3 99 89       	call -60622 <CRC16 : 1e00efc >			  ## analog.c:201:15
 1e0fbca:    90 f5 00 00       	h[sp] = r0			  ## analog.c:201:13
 1e0fbce:    e0 76             	r0 = 110			  ## analog.c:206:5
 1e0fbd0:    62 70             	r2 = 6			  ## analog.c:206:5
 1e0fbd2:    41 08             	r1 = r4			  ## analog.c:206:5
 1e0fbd4:    bf f3 df e9       	call -11330 <syscfg_write : 1e0cf96 >			  ## analog.c:206:5
 1e0fbd8:    04 0a             	sp += 8
 1e0fbda:    54 01             	{pc, r4} = [sp++]			  ## analog.c:208:1


bt_fre_offset_get:
 1e0fbdc:    c0 ff f4 09 00 00 	r0 = 2548 <system_data_end : 9f4 >			  ## analog.c:187:0
 1e0fbe2:    20 f7 0a 00       	r0 = h[r0 + 10] (s)			  ## analog.c:188:12
 1e0fbe6:    20 00             	rts			  ## analog.c:188:5


bt_get_fine_cnt:
 1e0fbe8:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:496:0
 1e0fbea:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1898:23
 1e0fbf0:    01 f9 47 10       	r1 = b[r1 + 71] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1898:23
 1e0fbf4:    04 08             	r4 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:1898:23
 1e0fbf6:    00 70             	r0 = 0
 1e0fbf8:    37 32             	if (r1 != 0) goto 110 <bt_get_fine_cnt+0x80 : 1e0fc68 >
 1e0fbfa:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >
 1e0fc00:    01 f9 c0 60       	r1 = b[r6 + 192] (u)
 1e0fc04:    31 22             	if (r1 == 0) goto 98 <bt_get_fine_cnt+0x80 : 1e0fc68 >
 1e0fc06:    05 f6 c4 60       	r5 = [r6 + 196]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:272:25
 1e0fc0a:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e0fc0c:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e0fc0e:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e0fc10:    42 08             	r2 = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e0fc12:    bf f3 8e b6       	call -37604 <__muldi3 : 1e06932 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e0fc16:    c2 ff 00 48 e8 01 	r2 = 32000000 <bank_code_load_addr+0x69DDC : 1e84800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e0fc1c:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e0fc1e:    bf f3 a7 b6       	call -37554 <__udivdi3 : 1e06970 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e0fc22:    01 f6 cc 60       	r1 = [r6 + 204]			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:269:26
 1e0fc26:    c2 ff 00 ca 9a 3b 	r2 = 1000000000 <uECC_vli_cmp_unsafe+0x18A5A04 : 19aca00 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e0fc2c:    c0 fe 50 32       	r3 = r2 / r5 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:64
 1e0fc30:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e0fc34:    e1 b2             	r1 = r1 - r3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:280:49
 1e0fc36:    40 0e             	r0 = r0 * r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:283:34
 1e0fc38:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e0fc3c:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e0fc40:    bf f3 1d b6       	call -37830 <__floatsisf : 1e0687e >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e0fc44:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e0fc46:    00 fb d4 30       	r0 = 12500 <lmp_acl_link+0x40 : 30d4 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e0fc4a:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e0fc4e:    bf f3 46 b6       	call -37748 <__floatunsisf : 1e068de >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:14
 1e0fc52:    c1 ff 00 00 20 c0 	r1 = 3223322624 <uECC_vli_cmp_unsafe+0xF9004 : 200000 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e0fc58:    bf f3 36 b5       	call -38292 <__addsf3 : 1e066c8 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e0fc5c:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e0fc5e:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e0fc60:    bf f3 82 b6       	call -37628 <__subsf3 : 1e06968 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e0fc64:    bf f3 e5 b5       	call -37942 <__fixsfsi : 1e06832 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e0fc68:    c1 ff 6c fc 1c 00 	r1 = 1899628 <uECC_vli_cmp_unsafe+0xC8C70 : 1cfc6c >			  ## RF.c:503:19
 1e0fc6e:    01 42             	r1 = [r1 + 0]			  ## RF.c:503:19
 1e0fc70:    40 09             	r0 += r4			  ## RF.c:503:61
 1e0fc72:    02 fb ff 07       	r2 = 2047 <DRIVER_CODE_TOTAL+0x6D : 7ff >			  ## RF.c:503:32
 1e0fc76:    51 b5             	r1 &= r2			  ## RF.c:503:32
 1e0fc78:    c2 70             	r2 = 12			  ## RF.c:503:41
 1e0fc7a:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## RF.c:503:41
 1e0fc7e:    10 09             	r0 += r1			  ## RF.c:503:14
 1e0fc80:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:505:5


bt_analog_part_init:
 1e0fc82:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1650:0
 1e0fc88:    15 f4 10 0a       	[r0 + 84] |= 4096			  ## analog.c:1656:23
 1e0fc8c:    51 41             	r1 = [r0 + 84]			  ## analog.c:1657:23
 1e0fc8e:    f1 b5             	r1 &= 4294965247			  ## analog.c:1657:23
 1e0fc90:    59 41             	[r0 + 84] = r1			  ## analog.c:1657:23
 1e0fc92:    51 41             	r1 = [r0 + 84]			  ## analog.c:1658:23
 1e0fc94:    f1 b6             	r1 &= 4294959103			  ## analog.c:1658:23
 1e0fc96:    59 41             	[r0 + 84] = r1			  ## analog.c:1658:23
 1e0fc98:    15 f4 40 0a       	[r0 + 84] |= 16384			  ## analog.c:1659:23
 1e0fc9c:    15 f4 80 09       	[r0 + 84] |= 128			  ## analog.c:1663:23
 1e0fca0:    c1 ff e5 83 80 48 	r1 = 1216381925 <uECC_vli_cmp_unsafe+0x7013E9 : 8083e5 >			  ## analog.c:1665:22
 1e0fca6:    09 40             	[r0 + 0] = r1			  ## analog.c:1665:22
 1e0fca8:    c1 ff 16 80 1c 04 	r1 = 68976662 <uECC_vli_cmp_unsafe+0xC101A : 1c8016 >			  ## analog.c:1681:22
 1e0fcae:    19 40             	[r0 + 4] = r1			  ## analog.c:1681:22
 1e0fcb0:    c1 ff d8 85 00 00 	r1 = 34264 <BTCTLER_CODE_TOTAL+0x31C : 85d8 >			  ## analog.c:1696:22
 1e0fcb6:    29 40             	[r0 + 8] = r1			  ## analog.c:1696:22
 1e0fcb8:    c1 ff 00 3e 88 00 	r1 = 8928768 <uECC_vli_cmp_unsafe+0x77CE04 : 883e00 >			  ## analog.c:1708:22
 1e0fcbe:    39 40             	[r0 + 12] = r1			  ## analog.c:1708:22
 1e0fcc0:    c1 ff 62 2e 40 01 	r1 = 20983394 <uECC_vli_cmp_unsafe+0x12FBE66 : 1402e62 >			  ## analog.c:1719:22
 1e0fcc6:    49 40             	[r0 + 16] = r1			  ## analog.c:1719:22
 1e0fcc8:    01 40             	r1 = [r0 + 0]			  ## analog.c:1719:22
 1e0fcca:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1E4E1B : 1fff83f >			  ## analog.c:1719:22
 1e0fcce:    51 b5             	r1 &= r2			  ## analog.c:1719:22
 1e0fcd0:    09 40             	[r0 + 0] = r1			  ## analog.c:1719:22
 1e0fcd2:    11 40             	r1 = [r0 + 4]			  ## analog.c:1719:22
 1e0fcd4:    c2 ff ff 0f c7 ff 	r2 = 4291235839 <uECC_vli_cmp_unsafe+0x1B6A003 : 1c70fff >			  ## analog.c:1719:22
 1e0fcda:    51 b5             	r1 &= r2			  ## analog.c:1719:22
 1e0fcdc:    19 40             	[r0 + 4] = r1			  ## analog.c:1719:22
 1e0fcde:    01 40             	r1 = [r0 + 0]			  ## analog.c:1719:22
 1e0fce0:    02 fb 40 03       	r2 = 832 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x38 : 340 >			  ## analog.c:1719:22
 1e0fce4:    51 b4             	r1 |= r2			  ## analog.c:1719:22
 1e0fce6:    09 40             	[r0 + 0] = r1			  ## analog.c:1719:22
 1e0fce8:    01 f4 44 04       	[r0 + 4] |= 1605632			  ## analog.c:1719:22
 1e0fcec:    c1 ff 18 05 d0 00 	r1 = 13632792 <uECC_vli_cmp_unsafe+0xBF951C : d00518 >			  ## analog.c:1741:23
 1e0fcf2:    59 40             	[r0 + 20] = r1			  ## analog.c:1741:23
 1e0fcf4:    c1 ff 5a d3 e6 ff 	r1 = 4293317466 <bank_code_load_addr+0x52936 : 1e6d35a >			  ## analog.c:1764:22
 1e0fcfa:    69 40             	[r0 + 24] = r1			  ## analog.c:1764:22
 1e0fcfc:    c7 f4 0f 09       	[r0 + 28] = 15			  ## analog.c:1776:22
 1e0fd00:    81 40             	r1 = [r0 + 32]			  ## analog.c:1790:22
 1e0fd02:    31 fd 7f 13       	r1 = r1 & 4294445055			  ## analog.c:1790:22
 1e0fd06:    89 40             	[r0 + 32] = r1			  ## analog.c:1790:22
 1e0fd08:    08 f4 2a 03       	[r0 + 32] |= 348160			  ## analog.c:1793:22
 1e0fd0c:    c1 ff df 06 a9 02 	r1 = 44631775 <uECC_vli_cmp_unsafe+0x9896E3 : a906df >			  ## analog.c:1797:23
 1e0fd12:    a9 40             	[r0 + 40] = r1			  ## analog.c:1797:23
 1e0fd14:    c1 ff 01 b4 06 42 	r1 = 1107735553 <text_size+0x528B5 : 6b401 >			  ## analog.c:1817:23
 1e0fd1a:    b9 40             	[r0 + 44] = r1			  ## analog.c:1817:23
 1e0fd1c:    20 00             	rts			  ## analog.c:1834:1


get_bta_pll_bank:
 1e0fd1e:    74 01             	[--sp] = {rets, r4}			  ## analog.c:301:0
 1e0fd20:    01 70             	r1 = 0			  ## analog.c:301:0
 1e0fd22:    43 71             	r3 = 20			  ## analog.c:301:0
 1e0fd24:    c2 ff f4 09 00 00 	r2 = 2548 <system_data_end : 9f4 >			  ## analog.c:301:0
 1e0fd2a:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## analog.c:305:24
 1e0fd2e:    04 f2 08 80       	if (r4 > r0) goto 16 <get_bta_pll_bank+0x24 : 1e0fd42 >			  ## analog.c:305:24
 1e0fd32:    34 fc ee ff       	r4 = r3 + -18			  ## analog.c:304:19
 1e0fd36:    13 80             	r3 += 1			  ## analog.c:304:19
 1e0fd38:    11 80             	r1 += 1			  ## analog.c:304:19
 1e0fd3a:    f4 e1 f6 3f       	if (r4 < 31) goto -20 <get_bta_pll_bank+0xC : 1e0fd2a >			  ## analog.c:304:19
 1e0fd3e:    00 70             	r0 = 0
 1e0fd40:    03 18             	goto 6 <get_bta_pll_bank+0x2A : 1e0fd48 >
 1e0fd42:    00 f9 32 20       	r0 = b[r2 + 50] (u)			  ## analog.c:297:12
 1e0fd46:    60 b0             	r0 = r0 - r1			  ## analog.c:306:13
 1e0fd48:    00 04             	r0 = r0.b0 (u)			  ## analog.c:311:1
 1e0fd4a:    54 01             	{pc, r4} = [sp++]			  ## analog.c:311:1


reset_trim_info:
 1e0fd4c:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:77:0
 1e0fd4e:    c0 ff 08 fc 1c 00 	r0 = 1899528 <uECC_vli_cmp_unsafe+0xC8C0C : 1cfc08 >			  ## analog.c:77:0
 1e0fd54:    01 40             	r1 = [r0 + 0]			  ## analog.c:86:17
 1e0fd56:    02 fb 00 fc       	r2 = -1024 <bank_code_load_addr+0x1E51DC : 1fffc00 >			  ## analog.c:86:17
 1e0fd5a:    51 b5             	r1 &= r2			  ## analog.c:86:17
 1e0fd5c:    09 40             	[r0 + 0] = r1			  ## analog.c:86:17
 1e0fd5e:    c1 ff 7c 2c 00 00 	r1 = 11388 <tws_bulk_pool_end : 2c7c >			  ## analog.c:109:21
 1e0fd64:    12 62             	r2 = b[r1 + 1] (u)			  ## analog.c:87:20
 1e0fd66:    03 62             	r3 = b[r1 + 0] (u)			  ## analog.c:87:20
 1e0fd68:    04 40             	r4 = [r0 + 0]			  ## analog.c:87:17
 1e0fd6a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:87:20
 1e0fd6e:    02 fb ff 03       	r2 = 1023 <BTCTLER_LE_RAM_TOTAL+0x27 : 3ff >			  ## analog.c:87:20
 1e0fd72:    53 b5             	r3 &= r2			  ## analog.c:87:20
 1e0fd74:    53 b8             	r3 |= r4			  ## analog.c:87:17
 1e0fd76:    0b 40             	[r0 + 0] = r3			  ## analog.c:87:17
 1e0fd78:    03 40             	r3 = [r0 + 0]			  ## analog.c:88:17
 1e0fd7a:    c4 ff ff 03 f0 ff 	r4 = 4293919743 <bank_code_load_addr+0xE59DB : 1f003ff >			  ## analog.c:88:17
 1e0fd80:    53 b9             	r3 &= r4			  ## analog.c:88:17
 1e0fd82:    0b 40             	[r0 + 0] = r3			  ## analog.c:88:17
 1e0fd84:    33 62             	r3 = b[r1 + 3] (u)			  ## analog.c:89:20
 1e0fd86:    24 62             	r4 = b[r1 + 2] (u)			  ## analog.c:89:20
 1e0fd88:    05 40             	r5 = [r0 + 0]			  ## analog.c:89:17
 1e0fd8a:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## analog.c:89:20
 1e0fd8e:    52 b9             	r2 &= r4			  ## analog.c:89:20
 1e0fd90:    92 c2             	r2 = r2 << 10			  ## analog.c:89:20
 1e0fd92:    52 ba             	r2 |= r5			  ## analog.c:89:17
 1e0fd94:    0a 40             	[r0 + 0] = r2			  ## analog.c:89:17
 1e0fd96:    22 40             	r2 = [r0 + 8]			  ## analog.c:92:17
 1e0fd98:    32 fd ff 29       	r2 = r2 & 4294967040			  ## analog.c:92:17
 1e0fd9c:    2a 40             	[r0 + 8] = r2			  ## analog.c:92:17
 1e0fd9e:    42 62             	r2 = b[r1 + 4] (u)			  ## analog.c:93:21
 1e0fda0:    23 40             	r3 = [r0 + 8]			  ## analog.c:93:17
 1e0fda2:    52 b6             	r2 |= r3			  ## analog.c:93:17
 1e0fda4:    2a 40             	[r0 + 8] = r2			  ## analog.c:93:17
 1e0fda6:    22 40             	r2 = [r0 + 8]			  ## analog.c:94:17
 1e0fda8:    32 fd ff 2a       	r2 = r2 & 4294902015			  ## analog.c:94:17
 1e0fdac:    2a 40             	[r0 + 8] = r2			  ## analog.c:94:17
 1e0fdae:    72 62             	r2 = b[r1 + 7] (u)			  ## analog.c:95:21
 1e0fdb0:    63 62             	r3 = b[r1 + 6] (u)			  ## analog.c:95:21
 1e0fdb2:    24 40             	r4 = [r0 + 8]			  ## analog.c:95:17
 1e0fdb4:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## analog.c:95:21
 1e0fdb8:    1a c2             	r2 = r3 << 8			  ## analog.c:95:21
 1e0fdba:    a2 04             	r2 = r2.l (u)			  ## analog.c:95:21
 1e0fdbc:    52 b8             	r2 |= r4			  ## analog.c:95:17
 1e0fdbe:    2a 40             	[r0 + 8] = r2			  ## analog.c:95:17
 1e0fdc0:    22 40             	r2 = [r0 + 8]			  ## analog.c:96:17
 1e0fdc2:    32 fd ff 2b       	r2 = r2 & 4278255615			  ## analog.c:96:17
 1e0fdc6:    2a 40             	[r0 + 8] = r2			  ## analog.c:96:17
 1e0fdc8:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:97:21
 1e0fdca:    23 40             	r3 = [r0 + 8]			  ## analog.c:97:17
 1e0fdcc:    12 c4             	r2 = r2 << 16			  ## analog.c:97:21
 1e0fdce:    52 b6             	r2 |= r3			  ## analog.c:97:17
 1e0fdd0:    2a 40             	[r0 + 8] = r2			  ## analog.c:97:17
 1e0fdd2:    c2 ff 08 19 1e 00 	r2 = 1972488 <uECC_vli_cmp_unsafe+0xDA90C : 1e1908 >			  ## analog.c:97:17
 1e0fdd8:    03 44             	r3 = [r2 + 0]			  ## analog.c:100:22
 1e0fdda:    33 fd ff 35       	r3 = r3 & 4261543935			  ## analog.c:100:22
 1e0fdde:    0b 44             	[r2 + 0] = r3			  ## analog.c:100:22
 1e0fde0:    e3 62             	r3 = b[r1 + 14] (u)			  ## analog.c:101:25
 1e0fde2:    04 44             	r4 = [r2 + 0]			  ## analog.c:101:22
 1e0fde4:    5b c4             	r3 = r3 << 17			  ## analog.c:101:25
 1e0fde6:    53 b8             	r3 |= r4			  ## analog.c:101:22
 1e0fde8:    0b 44             	[r2 + 0] = r3			  ## analog.c:101:22
 1e0fdea:    13 44             	r3 = [r2 + 4]			  ## analog.c:102:22
 1e0fdec:    33 fd ff 39       	r3 = r3 & 4294967040			  ## analog.c:102:22
 1e0fdf0:    1b 44             	[r2 + 4] = r3			  ## analog.c:102:22
 1e0fdf2:    03 63             	r3 = b[r1 + 16] (u)			  ## analog.c:103:25
 1e0fdf4:    14 44             	r4 = [r2 + 4]			  ## analog.c:103:22
 1e0fdf6:    53 b8             	r3 |= r4			  ## analog.c:103:22
 1e0fdf8:    1b 44             	[r2 + 4] = r3			  ## analog.c:103:22
 1e0fdfa:    32 40             	r2 = [r0 + 12]			  ## analog.c:106:17
 1e0fdfc:    03 fb 00 fe       	r3 = -512 <bank_code_load_addr+0x1E53DC : 1fffe00 >			  ## analog.c:106:17
 1e0fe00:    52 b7             	r2 &= r3			  ## analog.c:106:17
 1e0fe02:    3a 40             	[r0 + 12] = r2			  ## analog.c:106:17
 1e0fe04:    32 63             	r2 = b[r1 + 19] (u)			  ## analog.c:107:21
 1e0fe06:    23 63             	r3 = b[r1 + 18] (u)			  ## analog.c:107:21
 1e0fe08:    34 40             	r4 = [r0 + 12]			  ## analog.c:107:17
 1e0fe0a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:107:21
 1e0fe0e:    02 fb ff 01       	r2 = 511 <BTCTLER_CONTROLLER_BSS_SIZE+0x3F : 1ff >			  ## analog.c:107:21
 1e0fe12:    53 b5             	r3 &= r2			  ## analog.c:107:21
 1e0fe14:    53 b8             	r3 |= r4			  ## analog.c:107:17
 1e0fe16:    3b 40             	[r0 + 12] = r3			  ## analog.c:107:17
 1e0fe18:    33 40             	r3 = [r0 + 12]			  ## analog.c:108:17
 1e0fe1a:    c4 ff ff 01 fc ff 	r4 = 4294705663 <bank_code_load_addr+0x1A57DB : 1fc01ff >			  ## analog.c:108:17
 1e0fe20:    53 b9             	r3 &= r4			  ## analog.c:108:17
 1e0fe22:    3b 40             	[r0 + 12] = r3			  ## analog.c:108:17
 1e0fe24:    53 63             	r3 = b[r1 + 21] (u)			  ## analog.c:109:21
 1e0fe26:    41 63             	r1 = b[r1 + 20] (u)			  ## analog.c:109:21
 1e0fe28:    34 40             	r4 = [r0 + 12]			  ## analog.c:109:17
 1e0fe2a:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## analog.c:109:21
 1e0fe2e:    51 b5             	r1 &= r2			  ## analog.c:109:21
 1e0fe30:    49 c2             	r1 = r1 << 9			  ## analog.c:109:21
 1e0fe32:    51 b8             	r1 |= r4			  ## analog.c:109:17
 1e0fe34:    39 40             	[r0 + 12] = r1			  ## analog.c:109:17
 1e0fe36:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:110:1


txtrim_analog_init:
 1e0fe38:    34 00             	[--sp] = rets			  ## analog.c:1060:0
 1e0fe3a:    23 17             	call -442 <bt_analog_part_init : 1e0fc82 >			  ## analog.c:1061:5
 1e0fe3c:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1061:5
 1e0fe42:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:1063:22
 1e0fe46:    11 40             	r1 = [r0 + 4]			  ## analog.c:1066:22
 1e0fe48:    f1 b5             	r1 &= 4294965247			  ## analog.c:1066:22
 1e0fe4a:    19 40             	[r0 + 4] = r1			  ## analog.c:1066:22
 1e0fe4c:    21 40             	r1 = [r0 + 8]			  ## analog.c:1067:22
 1e0fe4e:    71 b0             	r1 &= 4294967294			  ## analog.c:1067:22
 1e0fe50:    29 40             	[r0 + 8] = r1			  ## analog.c:1067:22
 1e0fe52:    21 40             	r1 = [r0 + 8]			  ## analog.c:1068:22
 1e0fe54:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1E541B : 1fffe3f >			  ## analog.c:1068:22
 1e0fe58:    51 b5             	r1 &= r2			  ## analog.c:1068:22
 1e0fe5a:    29 40             	[r0 + 8] = r1			  ## analog.c:1068:22
 1e0fe5c:    21 40             	r1 = [r0 + 8]			  ## analog.c:1069:22
 1e0fe5e:    71 b0             	r1 &= 4294967294			  ## analog.c:1069:22
 1e0fe60:    29 40             	[r0 + 8] = r1			  ## analog.c:1069:22
 1e0fe62:    31 40             	r1 = [r0 + 12]			  ## analog.c:1070:22
 1e0fe64:    31 fd 1e 1b       	r1 = r1 & 4293001215			  ## analog.c:1070:22
 1e0fe68:    39 40             	[r0 + 12] = r1			  ## analog.c:1070:22
 1e0fe6a:    31 40             	r1 = [r0 + 12]			  ## analog.c:1071:22
 1e0fe6c:    31 fd 7c 1a       	r1 = r1 & 4294935551			  ## analog.c:1071:22
 1e0fe70:    39 40             	[r0 + 12] = r1			  ## analog.c:1071:22
 1e0fe72:    41 40             	r1 = [r0 + 16]			  ## analog.c:1072:22
 1e0fe74:    71 b1             	r1 &= 4294967291			  ## analog.c:1072:22
 1e0fe76:    49 40             	[r0 + 16] = r1			  ## analog.c:1072:22
 1e0fe78:    41 40             	r1 = [r0 + 16]			  ## analog.c:1073:22
 1e0fe7a:    71 b8             	r1 &= 4294901759			  ## analog.c:1073:22
 1e0fe7c:    49 40             	[r0 + 16] = r1			  ## analog.c:1073:22
 1e0fe7e:    31 40             	r1 = [r0 + 12]			  ## analog.c:1076:22
 1e0fe80:    c2 ff 00 04 16 00 	r2 = 1442816 <uECC_vli_cmp_unsafe+0x59404 : 160400 >			  ## analog.c:1076:22
 1e0fe86:    51 b4             	r1 |= r2			  ## analog.c:1076:22
 1e0fe88:    39 40             	[r0 + 12] = r1			  ## analog.c:1076:22
 1e0fe8a:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:1079:22
 1e0fe8e:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:1082:22
 1e0fe92:    03 f4 01 0b       	[r0 + 12] |= 65536			  ## analog.c:1084:22
 1e0fe96:    05 f4 0f 09       	[r0 + 20] |= 15			  ## analog.c:1089:22
 1e0fe9a:    51 40             	r1 = [r0 + 20]			  ## analog.c:1094:22
 1e0fe9c:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:1094:22
 1e0fea2:    51 b4             	r1 |= r2			  ## analog.c:1094:22
 1e0fea4:    59 40             	[r0 + 20] = r1			  ## analog.c:1094:22
 1e0fea6:    61 40             	r1 = [r0 + 24]			  ## analog.c:1098:22
 1e0fea8:    69 40             	[r0 + 24] = r1			  ## analog.c:1098:22
 1e0feaa:    71 40             	r1 = [r0 + 28]			  ## analog.c:1100:22
 1e0feac:    c2 ff 10 00 18 00 	r2 = 1572880 <uECC_vli_cmp_unsafe+0x79014 : 180010 >			  ## analog.c:1100:22
 1e0feb2:    51 b4             	r1 |= r2			  ## analog.c:1100:22
 1e0feb4:    79 40             	[r0 + 28] = r1			  ## analog.c:1100:22
 1e0feb6:    30 00             	pc = [sp++]			  ## analog.c:1103:1


rxtrim_analog_init:
 1e0feb8:    34 00             	[--sp] = rets			  ## analog.c:606:0
 1e0feba:    e3 16             	call -570 <bt_analog_part_init : 1e0fc82 >			  ## analog.c:607:5
 1e0febc:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:607:5
 1e0fec2:    01 40             	r1 = [r0 + 0]			  ## analog.c:609:22
 1e0fec4:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1E4E1B : 1fff83f >			  ## analog.c:609:22
 1e0fec8:    51 b5             	r1 &= r2			  ## analog.c:609:22
 1e0feca:    09 40             	[r0 + 0] = r1			  ## analog.c:609:22
 1e0fecc:    01 40             	r1 = [r0 + 0]			  ## analog.c:610:22
 1e0fece:    02 fb c0 03       	r2 = 960 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0xB8 : 3c0 >			  ## analog.c:610:22
 1e0fed2:    51 b4             	r1 |= r2			  ## analog.c:610:22
 1e0fed4:    09 40             	[r0 + 0] = r1			  ## analog.c:610:22
 1e0fed6:    61 40             	r1 = [r0 + 24]			  ## analog.c:612:22
 1e0fed8:    c2 ff ff ff 1f 00 	r2 = 2097151 <uECC_vli_cmp_unsafe+0xF9003 : 1fffff >			  ## analog.c:612:22
 1e0fede:    51 b5             	r1 &= r2			  ## analog.c:612:22
 1e0fee0:    69 40             	[r0 + 24] = r1			  ## analog.c:612:22
 1e0fee2:    06 f4 fc 06       	[r0 + 24] |= 132120576			  ## analog.c:613:22
 1e0fee6:    21 40             	r1 = [r0 + 8]			  ## analog.c:615:22
 1e0fee8:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1E541B : 1fffe3f >			  ## analog.c:615:22
 1e0feec:    51 b5             	r1 &= r2			  ## analog.c:615:22
 1e0feee:    29 40             	[r0 + 8] = r1			  ## analog.c:615:22
 1e0fef0:    11 40             	r1 = [r0 + 4]			  ## analog.c:616:22
 1e0fef2:    31 fd f0 1a       	r1 = r1 & 4294905855			  ## analog.c:616:22
 1e0fef6:    19 40             	[r0 + 4] = r1			  ## analog.c:616:22
 1e0fef8:    31 40             	r1 = [r0 + 12]			  ## analog.c:618:22
 1e0fefa:    c2 ff ff 83 e1 ff 	r2 = 4292969471 <ble_updata_handle+0x43 : 1e183ff >			  ## analog.c:618:22
 1e0ff00:    51 b5             	r1 &= r2			  ## analog.c:618:22
 1e0ff02:    39 40             	[r0 + 12] = r1			  ## analog.c:618:22
 1e0ff04:    21 40             	r1 = [r0 + 8]			  ## analog.c:621:22
 1e0ff06:    02 fb c0 01       	r2 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:621:22
 1e0ff0a:    51 b4             	r1 |= r2			  ## analog.c:621:22
 1e0ff0c:    29 40             	[r0 + 8] = r1			  ## analog.c:621:22
 1e0ff0e:    01 f4 50 0a       	[r0 + 4] |= 20480			  ## analog.c:622:22
 1e0ff12:    31 40             	r1 = [r0 + 12]			  ## analog.c:624:22
 1e0ff14:    c2 ff 00 7c 15 00 	r2 = 1408000 <uECC_vli_cmp_unsafe+0x50C04 : 157c00 >			  ## analog.c:624:22
 1e0ff1a:    51 b4             	r1 |= r2			  ## analog.c:624:22
 1e0ff1c:    39 40             	[r0 + 12] = r1			  ## analog.c:624:22
 1e0ff1e:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:628:22
 1e0ff22:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:631:22
 1e0ff26:    01 f4 08 0a       	[r0 + 4] |= 2048			  ## analog.c:633:22
 1e0ff2a:    02 f4 01 09       	[r0 + 8] |= 1			  ## analog.c:634:22
 1e0ff2e:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:635:22
 1e0ff32:    01 f4 01 09       	[r0 + 4] |= 1			  ## analog.c:638:22
 1e0ff36:    05 f4 0d 09       	[r0 + 20] |= 13			  ## analog.c:640:22
 1e0ff3a:    51 40             	r1 = [r0 + 20]			  ## analog.c:645:22
 1e0ff3c:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:645:22
 1e0ff42:    51 b4             	r1 |= r2			  ## analog.c:645:22
 1e0ff44:    59 40             	[r0 + 20] = r1			  ## analog.c:645:22
 1e0ff46:    06 f4 10 0b       	[r0 + 24] |= 1048576			  ## analog.c:649:22
 1e0ff4a:    30 00             	pc = [sp++]			  ## analog.c:651:1


get_ldo_voltage:
 1e0ff4c:    77 01             	[--sp] = {rets, r7-r4}			  ## analog.c:3184:0
 1e0ff4e:    c7 ff 00 19 1e 00 	r7 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3184:0
 1e0ff54:    01 4e             	r1 = [r7 + 0]			  ## analog.c:3180:5
 1e0ff56:    04 08             	r4 = r0			  ## analog.c:3180:5
 1e0ff58:    30 fd 38 1a       	r0 = r1 & 4294952959			  ## analog.c:3180:5
 1e0ff5c:    08 4e             	[r7 + 0] = r0			  ## analog.c:3180:5
 1e0ff5e:    bf f3 ed a1       	call -48166 <adc_pmu_detect_en : 1e0433c >			  ## analog.c:3189:5
 1e0ff62:    d0 70             	r0 = 13			  ## analog.c:3190:5
 1e0ff64:    bf f3 9b 81       	call -64714 <adc_sample : 1e0029e >			  ## analog.c:3190:5
 1e0ff68:    05 70             	r5 = 0
 1e0ff6a:    76 fc 00 18       	r6 = r7 + 6144
 1e0ff6e:    00 70             	r0 = 0
 1e0ff70:    01 4c             	r1 = [r6 + 0]			  ## analog.c:3192:26
 1e0ff72:    51 04             	r1 = r1.b0 (s)			  ## analog.c:3192:16
 1e0ff74:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <get_ldo_voltage+0x24 : 1e0ff70 >			  ## analog.c:3192:9
 1e0ff78:    11 4c             	r1 = [r6 + 4]			  ## analog.c:3194:30
 1e0ff7a:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3195:21
 1e0ff7e:    10 80             	r0 += 1			  ## analog.c:3191:30
 1e0ff80:    15 09             	r5 += r1			  ## analog.c:3194:19
 1e0ff82:    a0 e0 f5 1f       	if (r0 != 10) goto -22 <get_ldo_voltage+0x24 : 1e0ff70 >
 1e0ff86:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3180:5
 1e0ff88:    21 fd 07 49       	r1 = r4 & 7			  ## analog.c:3180:5
 1e0ff8c:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3180:5
 1e0ff90:    c3 fd 58 01       	r0 <= insert(r1, p:11, l:3)			  ## analog.c:3180:5
 1e0ff94:    08 4e             	[r7 + 0] = r0			  ## analog.c:3180:5
 1e0ff96:    80 7c             	r0 = 200			  ## analog.c:3199:5
 1e0ff98:    8f f3 15 a1       	call 2048554 <delay : 41c6 >			  ## analog.c:3199:5
 1e0ff9c:    f0 70             	r0 = 15			  ## analog.c:3201:5
 1e0ff9e:    bf f3 7e 81       	call -64772 <adc_sample : 1e0029e >			  ## analog.c:3201:5
 1e0ffa2:    00 70             	r0 = 0
 1e0ffa4:    01 70             	r1 = 0
 1e0ffa6:    02 4c             	r2 = [r6 + 0]			  ## analog.c:3203:26
 1e0ffa8:    92 04             	r2 = r2.b0 (s)			  ## analog.c:3203:16
 1e0ffaa:    f2 ef fc cf       	ifs (r2 > -1) goto -8 <get_ldo_voltage+0x5A : 1e0ffa6 >			  ## analog.c:3203:9
 1e0ffae:    12 4c             	r2 = [r6 + 4]			  ## analog.c:3205:30
 1e0ffb0:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3206:21
 1e0ffb4:    11 80             	r1 += 1			  ## analog.c:3202:30
 1e0ffb6:    20 09             	r0 += r2			  ## analog.c:3205:19
 1e0ffb8:    a1 e0 f5 1f       	if (r1 != 10) goto -22 <get_ldo_voltage+0x5A : 1e0ffa6 >
 1e0ffbc:    c1 ff 00 08 00 00 	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e0ffc2:    f1 52             	r1 = h[r1 + 30] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:23
 1e0ffc4:    a2 70             	r2 = 10			  ## analog.c:3210:29
 1e0ffc6:    c0 fe 20 35       	r3 = r5 / r2 (u)			  ## analog.c:3209:29
 1e0ffca:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## analog.c:3210:29
 1e0ffce:    85 fd 20 11       	r1 = uextra(r1, p:4, l:5)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:40
 1e0ffd2:    01 fe 03 19       	r1 = r1 * 3			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:21:40
 1e0ffd6:    11 fc 21 03       	r1 = r1 + 801			  ## analog.c:3168:11
 1e0ffda:    08 0e             	r0 = r1 * r0			  ## analog.c:3169:23
 1e0ffdc:    c0 fe 30 00       	r0 = r0 / r3 (u)			  ## analog.c:3169:29
 1e0ffe0:    57 01             	{pc, r7-r4} = [sp++]			  ## analog.c:3217:5


bta_pll_config_init:
 1e0ffe2:    7c 01             	[--sp] = {rets, r12-r4}			  ## analog.c:2453:0
 1e0ffe4:    04 70             	r4 = 0			  ## analog.c:2453:0
 1e0ffe6:    cc ff ac fc 1c 00 	r12 = 1899692 <uECC_vli_cmp_unsafe+0xC8CB0 : 1cfcac >			  ## analog.c:2453:0
 1e0ffec:    14 f6 00 c0       	[r12 + 0] = r4			  ## analog.c:2459:19
 1e0fff0:    c6 ff e0 f2 e0 01 	r6 = 31519456 <m_code_addr : 1e0f2e0 >			  ## analog.c:2459:19
 1e0fff6:    f7 74             	r7 = 79			  ## analog.c:2459:19
 1e0fff8:    c8 ff 2c f4 e0 01 	r8 = 31519788 <bt_frac_pll_int_48m : 1e0f42c >			  ## analog.c:2459:19
 1e0fffe:    c9 ff 24 01 08 00 	r9 = 524580 <text_size+0x675D8 : 80124 >			  ## analog.c:2459:19
 1e10004:    4a fb 10 9b       	r10 = r9 + 1048576			  ## analog.c:2459:19
 1e10008:    cb ff ff ff 7f 00 	r11 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >			  ## analog.c:2459:19
 1e1000e:    05 fa 00 48       	r5 = b[r4+r8] (u)			  ## analog.c:2466:32
 1e10012:    c0 05             	r0 = r7.b0 (u)			  ## analog.c:2463:16
 1e10014:    84 16             	call -760 <get_bta_pll_bank : 1e0fd1e >			  ## analog.c:2463:16
 1e10016:    41 f6 04 60       	r1 = [r6 ++= 4]			  ## analog.c:2465:32
 1e1001a:    52 fb 40 1b       	r2 = r1 - 4194304			  ## analog.c:2468:64
 1e1001e:    00 c3             	r0 = r0 << 12			  ## analog.c:2468:64
 1e10020:    23 ff 80 2b 05 00 	if (r2 < 8388608) goto 10 <bta_pll_config_init+0x4E : 1e10030 >			  ## analog.c:2468:64
 1e10026:    e0 fd 90 00       	r0 = r0 | r9			  ## analog.c:2470:126
 1e1002a:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2470:28
 1e1002e:    0c 18             	goto 24 <bta_pll_config_init+0x66 : 1e10048 >			  ## analog.c:2470:28
 1e10030:    e0 fd a0 00       	r0 = r0 | r10			  ## analog.c:2473:126
 1e10034:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2473:28
 1e10038:    b1 f2 04 c0       	ifs (r1 > r11) goto 8 <bta_pll_config_init+0x62 : 1e10044 >			  ## analog.c:2475:17
 1e1003c:    41 fb 80 1b       	r1 = r1 + 8388608			  ## analog.c:2477:38
 1e10040:    f5 8f             	r5 += -1			  ## analog.c:2476:38
 1e10042:    02 18             	goto 4 <bta_pll_config_init+0x66 : 1e10048 >
 1e10044:    51 fb 80 1b       	r1 = r1 - 8388608			  ## analog.c:2479:38
 1e10048:    08 d9             	r0 = r1 >>> 4			  ## analog.c:2482:77
 1e1004a:    29 c5             	r1 = r5 << 20			  ## analog.c:2482:46
 1e1004c:    50 b2             	r0 |= r1			  ## analog.c:2482:53
 1e1004e:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2482:23
 1e10052:    14 80             	r4 += 1			  ## analog.c:2462:26
 1e10054:    17 80             	r7 += 1			  ## analog.c:2462:19
 1e10056:    14 e5 da 1f       	if (r4 != 81) goto -76 <bta_pll_config_init+0x2C : 1e1000e >			  ## analog.c:2462:19
 1e1005a:    5c 01             	{pc, r12-r4} = [sp++]			  ## analog.c:2484:1


bt_rf_init:
 1e1005c:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF.c:395:0
 1e1005e:    64 0b             	sp += -312			  ## RF.c:395:0
 1e10060:    10 70             	r0 = 1			  ## RF.c:398:21
 1e10062:    c1 ff 00 21 1f 00 	r1 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:398:21
 1e10068:    10 f6 00 11       	[r1 + 256] = r0			  ## RF.c:398:21
 1e1006c:    cc ff f4 09 00 00 	r12 = 2548 <system_data_end : 9f4 >			  ## RF.c:398:21
 1e10072:    08 70             	r8 = 0			  ## RF.c:398:21
 1e10074:    18 f9 0f c0       	b[r12 + 15] = r8			  ## RF.c:96:17
 1e10078:    80 71             	r0 = 24			  ## RF.c:99:18
 1e1007a:    10 f9 06 c0       	b[r12 + 6] = r0			  ## RF.c:99:18
 1e1007e:    a0 70             	r0 = 10			  ## RF.c:99:18
 1e10080:    10 f9 07 c0       	b[r12 + 7] = r0			  ## RF.c:100:17
 1e10084:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:100:17
 1e1008a:    02 40             	r2 = [r0 + 0]			  ## RF.c:405:5
 1e1008c:    32 fd c0 2a       	r2 = r2 & 4294918143			  ## RF.c:405:5
 1e10090:    12 b7             	r2 |= 16384			  ## RF.c:405:5
 1e10092:    0a 40             	[r0 + 0] = r2			  ## RF.c:405:5
 1e10094:    00 7f             	r0 = 240			  ## RF.c:407:5
 1e10096:    8f f3 96 a0       	call 2048300 <delay : 41c6 >			  ## RF.c:407:5
 1e1009a:    00 f4 80 19       	[r1 + 0] |= 128			  ## RF.c:408:5
 1e1009e:    00 42             	r0 = [r1 + 0]			  ## RF.c:409:5
 1e100a0:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:409:5
 1e100a4:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:409:5
 1e100a8:    08 42             	[r1 + 0] = r0			  ## RF.c:409:5
 1e100aa:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:411:11
 1e100ae:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:411:24
 1e100b2:    8f f3 88 a0       	call 2048272 <delay : 41c6 >			  ## RF.c:411:5
 1e100b6:    00 f4 01 19       	[r1 + 0] |= 1			  ## RF.c:412:5
 1e100ba:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:413:11
 1e100be:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:413:24
 1e100c2:    8f f3 80 a0       	call 2048256 <delay : 41c6 >			  ## RF.c:413:5
 1e100c6:    c4 ff 00 fc 1c 00 	r4 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:413:5
 1e100cc:    10 f4 04 4a       	[r4 + 64] |= 1024			  ## RF.c:414:16
 1e100d0:    cd ff 00 19 1e 00 	r13 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e100d6:    18 f6 50 d0       	[r13 + 80] = r8
 1e100da:    d5 f4 80 d9       	[r13 + 84] = 128
 1e100de:    14 f4 40 49       	[r4 + 80] |= 64			  ## analog.c:2791:16
 1e100e2:    47 fc 98 00       	r7 = r4 + 152
 1e100e6:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2599:20
 1e100e8:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## analog.c:2599:20
 1e100ec:    18 4e             	[r7 + 4] = r0			  ## analog.c:2599:20
 1e100ee:    01 f4 08 79       	[r7 + 4] |= 8			  ## analog.c:2600:20
 1e100f2:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2601:20
 1e100f4:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2601:20
 1e100f8:    08 4e             	[r7 + 0] = r0			  ## analog.c:2601:20
 1e100fa:    00 f4 32 79       	[r7 + 0] |= 50			  ## analog.c:2602:20
 1e100fe:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2603:21
 1e10100:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2603:21
 1e10104:    08 4e             	[r7 + 0] = r0			  ## analog.c:2603:21
 1e10106:    00 f4 32 7b       	[r7 + 0] |= 3276800			  ## analog.c:2604:21
 1e1010a:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2605:21
 1e1010c:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2605:21
 1e10110:    08 4e             	[r7 + 0] = r0			  ## analog.c:2605:21
 1e10112:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2606:21
 1e10114:    08 4e             	[r7 + 0] = r0			  ## analog.c:2606:21
 1e10116:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2607:21
 1e10118:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2607:21
 1e1011c:    08 4e             	[r7 + 0] = r0			  ## analog.c:2607:21
 1e1011e:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2608:21
 1e10120:    08 4e             	[r7 + 0] = r0			  ## analog.c:2608:21
 1e10122:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2609:21
 1e10124:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2609:21
 1e10128:    18 4e             	[r7 + 4] = r0			  ## analog.c:2609:21
 1e1012a:    01 f4 0a 7b       	[r7 + 4] |= 655360			  ## analog.c:2610:21
 1e1012e:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2611:21
 1e10130:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2611:21
 1e10134:    18 4e             	[r7 + 4] = r0			  ## analog.c:2611:21
 1e10136:    01 f4 0a 7c       	[r7 + 4] |= 167772160			  ## analog.c:2612:21
 1e1013a:    a0 70             	r0 = 10			  ## analog.c:2613:5
 1e1013c:    8f f3 43 a0       	call 2048134 <delay : 41c6 >			  ## analog.c:2613:5
 1e10140:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2616:20
 1e10142:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2616:20
 1e10146:    28 4e             	[r7 + 8] = r0			  ## analog.c:2616:20
 1e10148:    02 f4 0a 79       	[r7 + 8] |= 10			  ## analog.c:2617:20
 1e1014c:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2618:20
 1e1014e:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2618:20
 1e10152:    28 4e             	[r7 + 8] = r0			  ## analog.c:2618:20
 1e10154:    02 f4 0a 7a       	[r7 + 8] |= 2560			  ## analog.c:2619:20
 1e10158:    d2 f4 b9 49       	[r4 + 72] = 185			  ## analog.c:2639:17
 1e1015c:    c0 ff 44 d1 ff 0c 	r0 = 218091844 <uECC_vli_cmp_unsafe+0xEF6148 : ffd144 >			  ## analog.c:2641:18
 1e10162:    08 48             	[r4 + 0] = r0			  ## analog.c:2641:18
 1e10164:    c0 ff de 3c 00 6e 	r0 = 1845509342 <close_flash+0x70 : 3cde >			  ## analog.c:2656:18
 1e1016a:    18 48             	[r4 + 4] = r0			  ## analog.c:2656:18
 1e1016c:    c0 ff 00 00 10 32 	r0 = 839909376 <text_size+0xE74B4 : 100000 >			  ## analog.c:2671:18
 1e10172:    28 48             	[r4 + 8] = r0			  ## analog.c:2671:18
 1e10174:    c3 f4 80 4f       	[r4 + 12] = 2155905152			  ## analog.c:2677:18
 1e10178:    00 fb 78 78       	r0 = 30840 <nvbss_size+0x538 : 7878 >			  ## analog.c:2682:18
 1e1017c:    48 48             	[r4 + 16] = r0			  ## analog.c:2682:18
 1e1017e:    c0 ff ff 00 fc 23 	r0 = 603717887 <bank_code_load_addr+0x1A56DB : 1fc00ff >			  ## analog.c:2686:18
 1e10184:    58 48             	[r4 + 20] = r0			  ## analog.c:2686:18
 1e10186:    18 f6 18 40       	[r4 + 24] = r8			  ## analog.c:2692:18
 1e1018a:    18 f6 1c 40       	[r4 + 28] = r8			  ## analog.c:2694:18
 1e1018e:    c0 ff 37 55 55 36 	r0 = 911562039 <uECC_vli_cmp_unsafe+0x44E53B : 555537 >			  ## analog.c:2696:18
 1e10194:    88 48             	[r4 + 32] = r0			  ## analog.c:2696:18
 1e10196:    c0 ff 40 80 6d 7c 	r0 = 2087551040 <uECC_vli_cmp_unsafe+0x5D1044 : 6d8040 >			  ## analog.c:2702:18
 1e1019c:    98 48             	[r4 + 36] = r0			  ## analog.c:2702:18
 1e1019e:    c0 ff 20 c8 05 06 	r0 = 101042208 <text_size+0x43CD4 : 5c820 >			  ## analog.c:2718:18
 1e101a4:    a8 48             	[r4 + 40] = r0			  ## analog.c:2718:18
 1e101a6:    c0 ff b8 00 20 03 	r0 = 52428984 <uECC_vli_cmp_unsafe+0x10F90BC : 12000b8 >			  ## analog.c:2728:18
 1e101ac:    b8 48             	[r4 + 44] = r0			  ## analog.c:2728:18
 1e101ae:    4e fc c0 01       	r14 = r4 + 448			  ## analog.c:2728:18
 1e101b2:    18 f6 24 e0       	[r14 + 36] = r8			  ## analog.c:2733:18
 1e101b6:    18 f6 28 e0       	[r14 + 40] = r8			  ## analog.c:2743:18
 1e101ba:    18 f6 2c e0       	[r14 + 44] = r8			  ## analog.c:2746:18
 1e101be:    18 f6 30 e0       	[r14 + 48] = r8			  ## analog.c:2749:18
 1e101c2:    18 f6 34 e0       	[r14 + 52] = r8			  ## analog.c:2752:18
 1e101c6:    18 f6 38 e0       	[r14 + 56] = r8			  ## analog.c:2755:18
 1e101ca:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2760:18
 1e101cc:    70 be             	r0 &= 4026531839			  ## analog.c:2760:18
 1e101ce:    a8 48             	[r4 + 40] = r0			  ## analog.c:2760:18
 1e101d0:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2761:18
 1e101d2:    f0 be             	r0 &= 3758096383			  ## analog.c:2761:18
 1e101d4:    a8 48             	[r4 + 40] = r0			  ## analog.c:2761:18
 1e101d6:    55 15             	call -1366 <bt_analog_part_init : 1e0fc82 >			  ## analog.c:1844:5
 1e101d8:    00 f6 2c d0       	r0 = [r13 + 44]			  ## analog.c:370:23
 1e101dc:    30 fd f0 0c       	r0 = r0 & 268435455			  ## analog.c:370:23
 1e101e0:    10 f6 2c d0       	[r13 + 44] = r0			  ## analog.c:370:23
 1e101e4:    0b f4 40 dc       	[r13 + 44] |= 1073741824			  ## analog.c:371:23
 1e101e8:    c0 ff 52 52 dd 00 	r0 = 14504530 <uECC_vli_cmp_unsafe+0xCCE256 : dd5252 >			  ## analog.c:373:23
 1e101ee:    10 f6 30 d0       	[r13 + 48] = r0			  ## analog.c:373:23
 1e101f2:    c0 ff 77 a0 01 00 	r0 = 106615 <text_size+0x152B : 1a077 >			  ## analog.c:382:23
 1e101f8:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:382:23
 1e101fc:    0a f4 08 dc       	[r13 + 40] |= 134217728			  ## analog.c:391:23
 1e10200:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:393:23
 1e10204:    01 fb 7f f8       	r1 = -1921 <bank_code_load_addr+0x1E4E5B : 1fff87f >			  ## analog.c:393:23
 1e10208:    50 b3             	r0 &= r1			  ## analog.c:393:23
 1e1020a:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:393:23
 1e1020e:    15 f4 80 d9       	[r13 + 84] |= 128			  ## analog.c:394:23
 1e10212:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:317:23
 1e10216:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:317:23
 1e1021a:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:317:23
 1e1021e:    0d f4 4a d9       	[r13 + 52] |= 74			  ## analog.c:318:23
 1e10222:    7a 70             	r10 = 7			  ## analog.c:318:23
 1e10224:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## analog.c:318:23
 1e1022a:    05 70             	r5 = 0
 1e1022c:    89 08             	r9 = r8
 1e1022e:    83 08             	r3 = r8
 1e10230:    56 fc ff ff       	r6 = r5 + -1			  ## analog.c:327:31
 1e10234:    00 f6 30 d0       	r0 = [r13 + 48]			  ## analog.c:327:31
 1e10238:    30 fd fe 05       	r0 = r0 & 4261675007			  ## analog.c:327:31
 1e1023c:    a5 05             	r5 = r6.l (u)			  ## analog.c:328:19
 1e1023e:    10 f6 30 d0       	[r13 + 48] = r0			  ## analog.c:327:31
 1e10242:    a0 08             	r0 = r10			  ## analog.c:327:31
 1e10244:    b5 f2 05 00       	if (r5 == r11) goto 10 <bt_rf_init+0x1F6 : 1e10252 >			  ## analog.c:327:31
 1e10248:    90 07             	r0 = -7			  ## analog.c:330:24
 1e1024a:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x1F4 : 1e10250 >			  ## analog.c:330:24
 1e1024e:    80 70             	r0 = 8			  ## analog.c:330:24
 1e10250:    a0 09             	r0 += r10			  ## analog.c:330:24
 1e10252:    01 f6 30 d0       	r1 = [r13 + 48]
 1e10256:    80 c4             	r0 = r0 << 18
 1e10258:    20 fd fe 05       	r0 = r0 & 33292288
 1e1025c:    50 b2             	r0 |= r1
 1e1025e:    10 f6 30 d0       	[r13 + 48] = r0
 1e10262:    00 f6 28 d0       	r0 = [r13 + 40]			  ## analog.c:335:31
 1e10266:    70 b1             	r0 &= 4294967291			  ## analog.c:335:31
 1e10268:    10 f6 28 d0       	[r13 + 40] = r0			  ## analog.c:335:31
 1e1026c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:336:19
 1e10270:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:336:32
 1e10274:    8f f3 a7 9f       	call 2047822 <delay : 41c6 >			  ## analog.c:336:13
 1e10278:    0a f4 04 d9       	[r13 + 40] |= 4			  ## analog.c:337:31
 1e1027c:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:338:19
 1e10280:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:338:32
 1e10284:    8f f3 9f 9f       	call 2047806 <delay : 41c6 >			  ## analog.c:338:13
 1e10288:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:340:30
 1e1028c:    01 f6 78 d0       	r1 = [r13 + 120]			  ## analog.c:341:30
 1e10290:    02 f6 78 d0       	r2 = [r13 + 120]			  ## analog.c:342:30
 1e10294:    50 b2             	r0 |= r1			  ## analog.c:341:18
 1e10296:    50 b4             	r0 |= r2			  ## analog.c:342:18
 1e10298:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:342:18
 1e1029c:    b5 f2 0c 00       	if (r5 == r11) goto 24 <bt_rf_init+0x25C : 1e102b8 >			  ## analog.c:342:18
 1e102a0:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x24A : 1e102a6 >
 1e102a4:    09 08             	r9 = r0			  ## analog.c:348:13
 1e102a6:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x250 : 1e102ac >
 1e102aa:    30 08             	r0 = r3			  ## analog.c:348:13
 1e102ac:    16 80             	r6 += 1			  ## analog.c:326:23
 1e102ae:    a1 05             	r1 = r6.l (u)			  ## analog.c:326:23
 1e102b0:    03 08             	r3 = r0			  ## analog.c:326:23
 1e102b2:    21 e0 bf 1f       	if (r1 != 2) goto -130 <bt_rf_init+0x1D8 : 1e10234 >			  ## analog.c:326:23
 1e102b6:    03 18             	goto 6 <bt_rf_init+0x262 : 1e102be >			  ## analog.c:326:23
 1e102b8:    15 70             	r5 = 1
 1e102ba:    08 08             	r8 = r0
 1e102bc:    b9 1f             	goto -142 <bt_rf_init+0x1D4 : 1e10230 >
 1e102be:    e6 fd 00 38       	r3 = r8.l (u)			  ## analog.c:352:20
 1e102c2:    e6 fd 00 19       	r1 = r9.l (u)			  ## analog.c:352:20
 1e102c6:    31 f2 09 10       	if (r1 != r3) goto 18 <bt_rf_init+0x280 : 1e102dc >			  ## analog.c:352:20
 1e102ca:    21 04             	r1 = r0.l (u)
 1e102cc:    a0 08             	r0 = r10
 1e102ce:    31 f2 06 10       	if (r1 != r3) goto 12 <bt_rf_init+0x282 : 1e102de >
 1e102d2:    0a 91             	r10 = r0 + 16			  ## analog.c:325:51
 1e102d4:    80 08             	r0 = r8			  ## analog.c:325:51
 1e102d6:    8a e7 a8 3f       	if (r10 < 120) goto -176 <bt_rf_init+0x1CE : 1e1022a >			  ## analog.c:325:51
 1e102da:    01 18             	goto 2 <bt_rf_init+0x282 : 1e102de >			  ## analog.c:325:51
 1e102dc:    a0 08             	r0 = r10
 1e102de:    00 fd 0f 09       	r0 = r0 | 15			  ## analog.c:360:12
 1e102e2:    10 f9 32 c0       	b[r12 + 50] = r0			  ## analog.c:396:45
 1e102e6:    a8 74             	r8 = 74
 1e102e8:    01 70             	r1 = 0
 1e102ea:    a2 74             	r2 = 74
 1e102ec:    03 18             	goto 6 <bt_rf_init+0x298 : 1e102f4 >
 1e102ee:    00 f9 32 c0       	r0 = b[r12 + 50] (u)
 1e102f2:    58 08             	r8 = r5
 1e102f4:    05 f6 30 d0       	r5 = [r13 + 48]			  ## analog.c:402:27
 1e102f8:    35 fd fe 55       	r5 = r5 & 4261675007			  ## analog.c:402:27
 1e102fc:    15 f6 30 d0       	[r13 + 48] = r5			  ## analog.c:402:27
 1e10300:    05 f6 30 d0       	r5 = [r13 + 48]			  ## analog.c:403:27
 1e10304:    60 b0             	r0 = r0 - r1			  ## analog.c:297:52
 1e10306:    80 c4             	r0 = r0 << 18			  ## analog.c:403:31
 1e10308:    20 fd fe 05       	r0 = r0 & 33292288			  ## analog.c:403:31
 1e1030c:    50 ba             	r0 |= r5			  ## analog.c:403:27
 1e1030e:    10 f6 30 d0       	[r13 + 48] = r0			  ## analog.c:403:27
 1e10312:    25 08             	r5 = r2			  ## analog.c:403:27
 1e10314:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:408:31
 1e10318:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:408:31
 1e1031c:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:408:31
 1e10320:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:409:31
 1e10324:    46 05             	r6 = r5.b0 (u)			  ## analog.c:409:35
 1e10326:    50 bc             	r0 |= r6			  ## analog.c:409:31
 1e10328:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:409:31
 1e1032c:    00 f6 28 d0       	r0 = [r13 + 40]			  ## analog.c:416:31
 1e10330:    70 b1             	r0 &= 4294967291			  ## analog.c:416:31
 1e10332:    10 f6 28 d0       	[r13 + 40] = r0			  ## analog.c:416:31
 1e10336:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:417:19
 1e1033a:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:417:32
 1e1033e:    8f f3 42 9f       	call 2047620 <delay : 41c6 >			  ## analog.c:417:13
 1e10342:    0a f4 04 d9       	[r13 + 40] |= 4			  ## analog.c:418:31
 1e10346:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:419:19
 1e1034a:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:419:32
 1e1034e:    8f f3 3a 9f       	call 2047604 <delay : 41c6 >			  ## analog.c:419:13
 1e10352:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:421:30
 1e10356:    06 f6 78 d0       	r6 = [r13 + 120]			  ## analog.c:422:30
 1e1035a:    03 f6 78 d0       	r3 = [r13 + 120]			  ## analog.c:423:30
 1e1035e:    50 bc             	r0 |= r6			  ## analog.c:422:18
 1e10360:    50 b6             	r0 |= r3			  ## analog.c:423:18
 1e10362:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:425:17
 1e10366:    10 e0 0f 00       	if (r0 == 1) goto 30 <bt_rf_init+0x32C : 1e10388 >			  ## analog.c:425:17
 1e1036a:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_rf_init+0x31C : 1e10378 >
 1e1036e:    15 80             	r5 += 1			  ## analog.c:438:25
 1e10370:    40 05             	r0 = r5.b0 (u)			  ## analog.c:438:25
 1e10372:    70 ea cf 9f       	if (r0 <= 167) goto -98 <bt_rf_init+0x2B8 : 1e10314 >			  ## analog.c:438:25
 1e10376:    07 18             	goto 14 <bt_rf_init+0x32A : 1e10386 >			  ## analog.c:438:25
 1e10378:    10 9a             	r0 = r5 + 1			  ## analog.c:430:25
 1e1037a:    03 04             	r3 = r0.b0 (u)			  ## analog.c:430:25
 1e1037c:    52 08             	r2 = r5			  ## analog.c:430:25
 1e1037e:    05 08             	r5 = r0			  ## analog.c:430:25
 1e10380:    73 ea c8 9f       	if (r3 <= 167) goto -112 <bt_rf_init+0x2B8 : 1e10314 >			  ## analog.c:430:25
 1e10384:    72 7a             	r2 = 167
 1e10386:    75 7a             	r5 = 167
 1e10388:    80 fb c0 01       	r0 = r1 + r12			  ## analog.c:446:9
 1e1038c:    83 04             	r3 = r2.b0 (u)			  ## analog.c:446:48
 1e1038e:    e4 fd 00 68       	r6 = r8.b0 (u)			  ## analog.c:446:37
 1e10392:    63 09             	r3 += r6			  ## analog.c:446:46
 1e10394:    33 80             	r3 += 3			  ## analog.c:446:54
 1e10396:    5b d0             	r3 = r3 >> 1			  ## analog.c:446:59
 1e10398:    11 80             	r1 += 1			  ## analog.c:400:42
 1e1039a:    3b 61             	b[r0 + 19] = r3			  ## analog.c:446:34
 1e1039c:    f1 e1 a7 1f       	if (r1 != 31) goto -178 <bt_rf_init+0x292 : 1e102ee >			  ## analog.c:446:34
 1e103a0:    00 f6 34 d0       	r0 = [r13 + 52]			  ## analog.c:450:23
 1e103a4:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:450:23
 1e103a8:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:450:23
 1e103ac:    0d f4 9b d9       	[r13 + 52] |= 155			  ## analog.c:451:23
 1e103b0:    b0 79             	r0 = 155			  ## analog.c:452:13
 1e103b2:    b5 14             	call -1686 <get_bta_pll_bank : 1e0fd1e >			  ## analog.c:452:13
 1e103b4:    01 f6 30 d0       	r1 = [r13 + 48]			  ## analog.c:453:23
 1e103b8:    31 fd fe 15       	r1 = r1 & 4261675007			  ## analog.c:453:23
 1e103bc:    11 f6 30 d0       	[r13 + 48] = r1			  ## analog.c:453:23
 1e103c0:    01 f6 30 d0       	r1 = [r13 + 48]			  ## analog.c:454:23
 1e103c4:    82 c4             	r2 = r0 << 18			  ## analog.c:454:27
 1e103c6:    22 fd fe 25       	r2 = r2 & 33292288			  ## analog.c:454:27
 1e103ca:    51 b4             	r1 |= r2			  ## analog.c:454:23
 1e103cc:    11 f6 30 d0       	[r13 + 48] = r1			  ## analog.c:454:23
 1e103d0:    01 f6 28 d0       	r1 = [r13 + 40]			  ## analog.c:456:23
 1e103d4:    f1 bd             	r1 &= 4160749567			  ## analog.c:456:23
 1e103d6:    11 f6 28 d0       	[r13 + 40] = r1			  ## analog.c:456:23
 1e103da:    f0 b3             	r0 &= 4294967167			  ## analog.c:1862:26
 1e103dc:    b1 fc 53 46       	r1 = r11 + 18003			  ## analog.c:1861:53
 1e103e0:    c7 fd 90 10       	r1 <= insert(r0, p:18, l:7)			  ## analog.c:1861:53
 1e103e4:    11 f6 30 d0       	[r13 + 48] = r1			  ## analog.c:1855:23
 1e103e8:    c0 ff 77 e0 39 03 	r0 = 54124663 <uECC_vli_cmp_unsafe+0x129707B : 139e077 >			  ## analog.c:1864:23
 1e103ee:    10 f6 34 d0       	[r13 + 52] = r0			  ## analog.c:1864:23
 1e103f2:    8e f4 ff dc       	[r13 + 56] &= 4278190080			  ## analog.c:1873:23
 1e103f6:    00 f6 38 d0       	r0 = [r13 + 56]			  ## analog.c:1874:23
 1e103fa:    c1 ff 55 55 25 00 	r1 = 2446677 <uECC_vli_cmp_unsafe+0x14E559 : 255555 >			  ## analog.c:1874:23
 1e10400:    50 b2             	r0 |= r1			  ## analog.c:1874:23
 1e10402:    10 f6 38 d0       	[r13 + 56] = r0			  ## analog.c:1874:23
 1e10406:    0a f4 01 d9       	[r13 + 40] |= 1			  ## analog.c:1876:23
 1e1040a:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:1877:17
 1e1040e:    00 fe 96 09       	r0 = r0 * 150			  ## analog.c:1877:15
 1e10412:    8f f3 d8 9e       	call 2047408 <delay : 41c6 >			  ## analog.c:1877:5
 1e10416:    0d f4 80 dc       	[r13 + 52] |= 2147483648			  ## analog.c:1878:23
 1e1041a:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:1879:16
 1e1041e:    00 fe 0a 09       	r0 = r0 * 10			  ## analog.c:1879:14
 1e10422:    8f f3 d0 9e       	call 2047392 <delay : 41c6 >			  ## analog.c:1879:5
 1e10426:    0a f4 04 d9       	[r13 + 40] |= 4			  ## analog.c:1880:23
 1e1042a:    bf f3 85 fb       	call -2294 <bt_fre_offset_value_init : 1e0fb38 >			  ## analog.c:238:5
 1e1042e:    11 a1             	r1 = sp + 17			  ## analog.c:238:5
 1e10430:    d0 75             	r0 = 93			  ## analog.c:242:21
 1e10432:    32 72             	r2 = 35			  ## analog.c:242:21
 1e10434:    bf f3 0c e6       	call -13288 <syscfg_read : 1e0d050 >			  ## analog.c:242:21
 1e10438:    01 04             	r1 = r0.b0 (u)			  ## analog.c:243:13
 1e1043a:    c0 ff 7c 2c 00 00 	r0 = 11388 <tws_bulk_pool_end : 2c7c >			  ## analog.c:243:13
 1e10440:    c5 ff 93 2c 00 00 	r5 = 11411 <ldo_trim_res : 2c93 >			  ## analog.c:243:13
 1e10446:    31 e2 0d 10       	if (r1 != 35) goto 26 <bt_rf_init+0x408 : 1e10464 >			  ## analog.c:243:13
 1e1044a:    14 a1             	r4 = sp + 17
 1e1044c:    62 71             	r2 = 22			  ## analog.c:244:13
 1e1044e:    41 08             	r1 = r4			  ## analog.c:244:13
 1e10450:    97 f3 48 b5       	call 3107472 <memcpy : 106ee4 >			  ## analog.c:244:13
 1e10454:    61 99             	r1 = r4 + 22			  ## analog.c:245:56
 1e10456:    d2 70             	r2 = 13			  ## analog.c:245:13
 1e10458:    50 08             	r0 = r5			  ## analog.c:245:13
 1e1045a:    97 f3 43 b5       	call 3107462 <memcpy : 106ee4 >			  ## analog.c:245:13
 1e1045e:    76 14             	call -1812 <reset_trim_info : 1e0fd4c >			  ## analog.c:246:13
 1e10460:    c0 f3 58 09       	goto 4784 <.GJTIE812_1_1_+0x1108 : 1e11714 >			  ## analog.c:246:13
 1e10464:    e9 14             	call -1582 <txtrim_analog_init : 1e0fe38 >			  ## analog.c:1107:5
 1e10466:    01 70             	r1 = 0			  ## analog.c:1107:5
 1e10468:    11 f6 08 e0       	[r14 + 8] = r1			  ## analog.c:1109:17
 1e1046c:    20 70             	r0 = 2			  ## analog.c:1110:5
 1e1046e:    8f f3 aa 9e       	call 2047316 <delay : 41c6 >			  ## analog.c:1110:5
 1e10472:    11 f6 04 e0       	[r14 + 4] = r1			  ## analog.c:1111:17
 1e10476:    20 70             	r0 = 2			  ## analog.c:1112:5
 1e10478:    8f f3 a5 9e       	call 2047306 <delay : 41c6 >			  ## analog.c:1112:5
 1e1047c:    11 f6 00 e0       	[r14 + 0] = r1			  ## analog.c:1113:17
 1e10480:    20 70             	r0 = 2			  ## analog.c:1114:5
 1e10482:    8f f3 a0 9e       	call 2047296 <delay : 41c6 >			  ## analog.c:1114:5
 1e10486:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1115:20
 1e1048a:    20 70             	r0 = 2			  ## analog.c:1116:5
 1e1048c:    8f f3 9b 9e       	call 2047286 <delay : 41c6 >			  ## analog.c:1116:5
 1e10490:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1117:13
 1e10494:    20 70             	r0 = 2			  ## analog.c:1118:5
 1e10496:    8f f3 96 9e       	call 2047276 <delay : 41c6 >			  ## analog.c:1118:5
 1e1049a:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1119:13
 1e1049e:    20 70             	r0 = 2			  ## analog.c:1120:5
 1e104a0:    8f f3 91 9e       	call 2047266 <delay : 41c6 >			  ## analog.c:1120:5
 1e104a4:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:1121:17
 1e104a8:    20 70             	r0 = 2			  ## analog.c:1122:5
 1e104aa:    8f f3 8c 9e       	call 2047256 <delay : 41c6 >			  ## analog.c:1122:5
 1e104ae:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1123:17
 1e104b2:    20 70             	r0 = 2			  ## analog.c:1124:5
 1e104b4:    8f f3 87 9e       	call 2047246 <delay : 41c6 >			  ## analog.c:1124:5
 1e104b8:    20 70             	r0 = 2			  ## analog.c:1126:5
 1e104ba:    8f f3 84 9e       	call 2047240 <delay : 41c6 >			  ## analog.c:1126:5
 1e104be:    20 70             	r0 = 2			  ## analog.c:1128:5
 1e104c0:    8f f3 81 9e       	call 2047234 <delay : 41c6 >			  ## analog.c:1128:5
 1e104c4:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:1129:17
 1e104c8:    20 70             	r0 = 2			  ## analog.c:1130:5
 1e104ca:    8f f3 7c 9e       	call 2047224 <delay : 41c6 >			  ## analog.c:1130:5
 1e104ce:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1131:17
 1e104d2:    20 70             	r0 = 2			  ## analog.c:1132:5
 1e104d4:    8f f3 77 9e       	call 2047214 <delay : 41c6 >			  ## analog.c:1132:5
 1e104d8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1133:17
 1e104dc:    f0 b4             	r0 &= 4294966783			  ## analog.c:1133:17
 1e104de:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1133:17
 1e104e2:    20 70             	r0 = 2			  ## analog.c:1134:5
 1e104e4:    8f f3 6f 9e       	call 2047198 <delay : 41c6 >			  ## analog.c:1134:5
 1e104e8:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1135:17
 1e104ec:    20 70             	r0 = 2			  ## analog.c:1136:5
 1e104ee:    8f f3 6a 9e       	call 2047188 <delay : 41c6 >			  ## analog.c:1136:5
 1e104f2:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1137:17
 1e104f6:    20 70             	r0 = 2			  ## analog.c:1138:5
 1e104f8:    8f f3 65 9e       	call 2047178 <delay : 41c6 >			  ## analog.c:1138:5
 1e104fc:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1139:17
 1e10500:    20 70             	r0 = 2			  ## analog.c:1140:5
 1e10502:    8f f3 60 9e       	call 2047168 <delay : 41c6 >			  ## analog.c:1140:5
 1e10506:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1141:17
 1e1050a:    20 70             	r0 = 2			  ## analog.c:1142:5
 1e1050c:    8f f3 5b 9e       	call 2047158 <delay : 41c6 >			  ## analog.c:1142:5
 1e10510:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1143:17
 1e10514:    20 70             	r0 = 2			  ## analog.c:1144:5
 1e10516:    8f f3 56 9e       	call 2047148 <delay : 41c6 >			  ## analog.c:1144:5
 1e1051a:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1145:17
 1e1051e:    20 70             	r0 = 2			  ## analog.c:1146:5
 1e10520:    8f f3 51 9e       	call 2047138 <delay : 41c6 >			  ## analog.c:1146:5
 1e10524:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1147:17
 1e10528:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1154:17
 1e1052c:    f0 b8             	r0 &= 4294836223			  ## analog.c:1154:17
 1e1052e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1154:17
 1e10532:    50 70             	r0 = 5			  ## analog.c:1155:5
 1e10534:    8f f3 47 9e       	call 2047118 <delay : 41c6 >			  ## analog.c:1155:5
 1e10538:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1156:17
 1e1053c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1157:13
 1e10540:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <bt_rf_init+0x4E0 : 1e1053c >			  ## analog.c:1157:5
 1e10544:    00 70             	r0 = 0
 1e10546:    38 02             	[sp+12] = r0
 1e10548:    f3 07             	r3 = -1
 1e1054a:    3f 70             	r15 = 3
 1e1054c:    0d fb 00 fc       	r13 = -1024 <bank_code_load_addr+0x1E51DC : 1fffc00 >
 1e10550:    09 fb ff 03       	r9 = 1023 <BTCTLER_LE_RAM_TOTAL+0x27 : 3ff >
 1e10554:    cb ff ff 03 f0 ff 	r11 = 4293919743 <bank_code_load_addr+0xE59DB : 1f003ff >
 1e1055a:    4c fb 10 db       	r12 = r13 + 1048576
 1e1055e:    0a 70             	r10 = 0
 1e10560:    01 fb 9c ff       	r1 = -100 <bank_code_load_addr+0x1E5578 : 1ffff9c >
 1e10564:    32 08             	r2 = r3
 1e10566:    06 08             	r6 = r0
 1e10568:    e4 fd 00 5f       	r5 = r15.b0 (u)
 1e1056c:    35 e0 24 80       	if (r5 > 3) goto 72 <.GJTIE812_0_0_+0x42 : 1e105b8 >
 1e10570:    a5 00             	tbb [r5]


.GJTIS812_0_0_:
 1e10572:    02     < 2 : 0x2 >
 1e10573:    0b     < 11 : 0xB >
 1e10574:    02     < 2 : 0x2 >
 1e10575:    15     < 21 : 0x15 >
 1e10576:    20 48             	r0 = [r4 + 8]
 1e10578:    e2 fd d0 00       	r0 = r0 & r13
 1e1057c:    28 48             	[r4 + 8] = r0
 1e1057e:    20 48             	r0 = [r4 + 8]
 1e10580:    e2 fd 90 31       	r3 = r1 & r9
 1e10584:    50 b6             	r0 |= r3
 1e10586:    17 18             	goto 46 <.GJTIE812_0_0_+0x40 : 1e105b6 >
 1e10588:    20 48             	r0 = [r4 + 8]			  ## analog.c:1165:29
 1e1058a:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1165:29
 1e1058e:    28 48             	[r4 + 8] = r0			  ## analog.c:1165:29
 1e10590:    20 48             	r0 = [r4 + 8]			  ## analog.c:1166:29
 1e10592:    8b c2             	r3 = r1 << 10			  ## analog.c:1166:32
 1e10594:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1166:32
 1e10598:    50 b6             	r0 |= r3			  ## analog.c:1166:29
 1e1059a:    0d 18             	goto 26 <.GJTIE812_0_0_+0x40 : 1e105b6 >			  ## analog.c:1166:29
 1e1059c:    20 48             	r0 = [r4 + 8]			  ## analog.c:1171:29
 1e1059e:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1171:29
 1e105a2:    28 48             	[r4 + 8] = r0			  ## analog.c:1171:29
 1e105a4:    20 48             	r0 = [r4 + 8]			  ## analog.c:1172:29
 1e105a6:    8b c2             	r3 = r1 << 10			  ## analog.c:1172:32
 1e105a8:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1172:32
 1e105ac:    50 b6             	r0 |= r3			  ## analog.c:1172:29
 1e105ae:    28 48             	[r4 + 8] = r0			  ## analog.c:1172:29
 1e105b0:    20 48             	r0 = [r4 + 8]			  ## analog.c:1173:29
 1e105b2:    e2 fd d0 00       	r0 = r0 & r13			  ## analog.c:1173:29
 1e105b6:    28 48             	[r4 + 8] = r0
 1e105b8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1177:25
 1e105bc:    f0 b8             	r0 &= 4294836223			  ## analog.c:1177:25
 1e105be:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1177:25
 1e105c2:    50 70             	r0 = 5			  ## analog.c:1178:13
 1e105c4:    8f f3 ff 9d       	call 2046974 <delay : 41c6 >			  ## analog.c:1178:13
 1e105c8:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1179:25
 1e105cc:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1180:21
 1e105d0:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE812_0_0_+0x56 : 1e105cc >			  ## analog.c:1180:13
 1e105d4:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1183:24
 1e105d8:    03 f6 14 e0       	r3 = [r14 + 20]			  ## analog.c:1185:24
 1e105dc:    b0 fd 40 83       	r8 = sextra(r3, p:8, l:16)			  ## analog.c:1186:29
 1e105e0:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1184:29
 1e105e4:    03 0e             	r3 = r0 * r0			  ## analog.c:1187:28
 1e105e6:    80 fe 80 38       	r3 += r8 * r8			  ## analog.c:1187:37
 1e105ea:    10 08             	r0 = r1			  ## analog.c:1189:17
 1e105ec:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE812_0_0_+0x7C : 1e105f2 >
 1e105f0:    60 08             	r0 = r6			  ## analog.c:1189:17
 1e105f2:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE812_0_0_+0x82 : 1e105f8 >
 1e105f6:    23 08             	r3 = r2			  ## analog.c:1189:17
 1e105f8:    11 80             	r1 += 1			  ## analog.c:1160:34
 1e105fa:    32 08             	r2 = r3			  ## analog.c:1160:34
 1e105fc:    06 08             	r6 = r0			  ## analog.c:1160:34
 1e105fe:    41 e6 b3 1f       	if (r1 != 100) goto -154 <bt_rf_init+0x50C : 1e10568 >			  ## analog.c:1160:34
 1e10602:    35 e0 17 80       	if (r5 > 3) goto 46 <.GJTIE812_1_1_+0x28 : 1e10634 >
 1e10606:    a5 00             	tbb [r5]


.GJTIS812_1_1_:
 1e10608:    02     < 2 : 0x2 >
 1e10609:    0a     < 10 : 0xA >
 1e1060a:    02     < 2 : 0x2 >
 1e1060b:    0a     < 10 : 0xA >
 1e1060c:    21 48             	r1 = [r4 + 8]			  ## analog.c:1195:25
 1e1060e:    e2 fd d0 11       	r1 = r1 & r13			  ## analog.c:1195:25
 1e10612:    29 48             	[r4 + 8] = r1			  ## analog.c:1195:25
 1e10614:    e2 fd 90 10       	r1 = r0 & r9			  ## analog.c:1196:28
 1e10618:    0a 08             	r10 = r0			  ## analog.c:1196:28
 1e1061a:    08 18             	goto 16 <.GJTIE812_1_1_+0x20 : 1e1062c >			  ## analog.c:1196:28
 1e1061c:    21 48             	r1 = [r4 + 8]			  ## analog.c:1201:25
 1e1061e:    e2 fd b0 11       	r1 = r1 & r11			  ## analog.c:1201:25
 1e10622:    29 48             	[r4 + 8] = r1			  ## analog.c:1201:25
 1e10624:    81 c2             	r1 = r0 << 10			  ## analog.c:1202:28
 1e10626:    e2 fd c0 11       	r1 = r1 & r12			  ## analog.c:1202:28
 1e1062a:    38 02             	[sp+12] = r0			  ## analog.c:1202:28
 1e1062c:    22 48             	r2 = [r4 + 8]
 1e1062e:    51 b4             	r1 |= r2
 1e10630:    29 48             	[r4 + 8] = r1
 1e10632:    f3 07             	r3 = -1
 1e10634:    f1 fc ff ff       	r1 = r15 + -1			  ## analog.c:1159:26
 1e10638:    5f 04             	r15 = r1.b0 (s)			  ## analog.c:1159:26
 1e1063a:    ff ef 91 cf       	ifs (r15 > -1) goto -222 <bt_rf_init+0x504 : 1e10560 >			  ## analog.c:1159:26
 1e1063e:    cb ff 7c 2c 00 00 	r11 = 11388 <tws_bulk_pool_end : 2c7c >
 1e10644:    1a f9 00 b0       	b[r11 + 0] = r10			  ## analog.c:1212:22
 1e10648:    f2 fd 40 0a       	r0 = r10 >> 8			  ## analog.c:1212:22
 1e1064c:    10 f9 01 b0       	b[r11 + 1] = r0			  ## analog.c:1212:22
 1e10650:    31 02             	r1 = [sp+12]			  ## analog.c:1212:22
 1e10652:    08 d2             	r0 = r1 >> 8			  ## analog.c:1213:22
 1e10654:    10 f9 03 b0       	b[r11 + 3] = r0			  ## analog.c:1213:22
 1e10658:    11 f9 02 b0       	b[r11 + 2] = r1			  ## analog.c:1213:22
 1e1065c:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1215:20
 1e1065e:    70 b8             	r0 &= 4294901759			  ## analog.c:1215:20
 1e10660:    28 4e             	[r7 + 8] = r0			  ## analog.c:1215:20
 1e10662:    20 70             	r0 = 2			  ## analog.c:1216:5
 1e10664:    8f f3 af 9d       	call 2046814 <delay : 41c6 >			  ## analog.c:1216:5
 1e10668:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1217:13
 1e1066a:    f0 b0             	r0 &= 4294967293			  ## analog.c:1217:13
 1e1066c:    f8 49             	[r4 + 124] = r0			  ## analog.c:1217:13
 1e1066e:    20 70             	r0 = 2			  ## analog.c:1218:5
 1e10670:    8f f3 a9 9d       	call 2046802 <delay : 41c6 >			  ## analog.c:1218:5
 1e10674:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1219:13
 1e10676:    70 b1             	r0 &= 4294967291			  ## analog.c:1219:13
 1e10678:    f8 49             	[r4 + 124] = r0			  ## analog.c:1219:13
 1e1067a:    20 70             	r0 = 2			  ## analog.c:1220:5
 1e1067c:    8f f3 a3 9d       	call 2046790 <delay : 41c6 >			  ## analog.c:1220:5
 1e10680:    03 70             	r3 = 0			  ## analog.c:1220:5
 1e10682:    13 f6 00 e0       	[r14 + 0] = r3			  ## analog.c:1221:45
 1e10686:    13 f6 04 e0       	[r14 + 4] = r3			  ## analog.c:1221:31
 1e1068a:    13 f6 08 e0       	[r14 + 8] = r3			  ## analog.c:1221:17
 1e1068e:    20 70             	r0 = 2			  ## analog.c:1222:5
 1e10690:    8f f3 99 9d       	call 2046770 <delay : 41c6 >			  ## analog.c:1222:5
 1e10694:    90 48             	r0 = [r4 + 36]			  ## analog.c:1223:17
 1e10696:    f0 b5             	r0 &= 4294965247			  ## analog.c:1223:17
 1e10698:    98 48             	[r4 + 36] = r0			  ## analog.c:1223:17
 1e1069a:    bf f3 cd fb       	call -2150 <txtrim_analog_init : 1e0fe38 >			  ## analog.c:1231:5
 1e1069e:    13 f6 00 e0       	[r14 + 0] = r3			  ## analog.c:1232:45
 1e106a2:    13 f6 04 e0       	[r14 + 4] = r3			  ## analog.c:1232:31
 1e106a6:    13 f6 08 e0       	[r14 + 8] = r3			  ## analog.c:1232:17
 1e106aa:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1234:20
 1e106ae:    20 70             	r0 = 2			  ## analog.c:1235:5
 1e106b0:    8f f3 89 9d       	call 2046738 <delay : 41c6 >			  ## analog.c:1235:5
 1e106b4:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1236:13
 1e106b8:    20 70             	r0 = 2			  ## analog.c:1237:5
 1e106ba:    8f f3 84 9d       	call 2046728 <delay : 41c6 >			  ## analog.c:1237:5
 1e106be:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1238:13
 1e106c2:    20 70             	r0 = 2			  ## analog.c:1239:5
 1e106c4:    8f f3 7f 9d       	call 2046718 <delay : 41c6 >			  ## analog.c:1239:5
 1e106c8:    02 f4 15 e9       	[r14 + 8] |= 21			  ## analog.c:1240:17
 1e106cc:    20 70             	r0 = 2			  ## analog.c:1241:5
 1e106ce:    8f f3 7a 9d       	call 2046708 <delay : 41c6 >			  ## analog.c:1241:5
 1e106d2:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1242:17
 1e106d6:    20 70             	r0 = 2			  ## analog.c:1243:5
 1e106d8:    8f f3 75 9d       	call 2046698 <delay : 41c6 >			  ## analog.c:1243:5
 1e106dc:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1244:17
 1e106e0:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1244:17
 1e106e4:    20 70             	r0 = 2			  ## analog.c:1245:5
 1e106e6:    8f f3 6e 9d       	call 2046684 <delay : 41c6 >			  ## analog.c:1245:5
 1e106ea:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1246:17
 1e106ee:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1246:17
 1e106f2:    20 70             	r0 = 2			  ## analog.c:1247:5
 1e106f4:    8f f3 67 9d       	call 2046670 <delay : 41c6 >			  ## analog.c:1247:5
 1e106f8:    00 f4 2a e9       	[r14 + 0] |= 42			  ## analog.c:1248:17
 1e106fc:    20 70             	r0 = 2			  ## analog.c:1249:5
 1e106fe:    8f f3 62 9d       	call 2046660 <delay : 41c6 >			  ## analog.c:1249:5
 1e10702:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1250:17
 1e10706:    20 70             	r0 = 2			  ## analog.c:1251:5
 1e10708:    8f f3 5d 9d       	call 2046650 <delay : 41c6 >			  ## analog.c:1251:5
 1e1070c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1252:17
 1e10710:    f0 b4             	r0 &= 4294966783			  ## analog.c:1252:17
 1e10712:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1252:17
 1e10716:    20 70             	r0 = 2			  ## analog.c:1253:5
 1e10718:    8f f3 55 9d       	call 2046634 <delay : 41c6 >			  ## analog.c:1253:5
 1e1071c:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1254:17
 1e10720:    20 70             	r0 = 2			  ## analog.c:1255:5
 1e10722:    8f f3 50 9d       	call 2046624 <delay : 41c6 >			  ## analog.c:1255:5
 1e10726:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1256:17
 1e1072a:    20 70             	r0 = 2			  ## analog.c:1257:5
 1e1072c:    8f f3 4b 9d       	call 2046614 <delay : 41c6 >			  ## analog.c:1257:5
 1e10730:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1258:17
 1e10734:    20 70             	r0 = 2			  ## analog.c:1259:5
 1e10736:    8f f3 46 9d       	call 2046604 <delay : 41c6 >			  ## analog.c:1259:5
 1e1073a:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1260:17
 1e1073e:    20 70             	r0 = 2			  ## analog.c:1261:5
 1e10740:    8f f3 41 9d       	call 2046594 <delay : 41c6 >			  ## analog.c:1261:5
 1e10744:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1262:17
 1e10748:    20 70             	r0 = 2			  ## analog.c:1263:5
 1e1074a:    8f f3 3c 9d       	call 2046584 <delay : 41c6 >			  ## analog.c:1263:5
 1e1074e:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1264:17
 1e10752:    20 70             	r0 = 2			  ## analog.c:1265:5
 1e10754:    8f f3 37 9d       	call 2046574 <delay : 41c6 >			  ## analog.c:1265:5
 1e10758:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1266:17
 1e1075c:    40 48             	r0 = [r4 + 16]			  ## analog.c:1274:17
 1e1075e:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1274:17
 1e10762:    48 48             	[r4 + 16] = r0			  ## analog.c:1274:17
 1e10764:    04 f4 40 4a       	[r4 + 16] |= 16384			  ## analog.c:1275:17
 1e10768:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1279:17
 1e1076c:    f0 b8             	r0 &= 4294836223			  ## analog.c:1279:17
 1e1076e:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1279:17
 1e10772:    20 70             	r0 = 2			  ## analog.c:1280:5
 1e10774:    8f f3 27 9d       	call 2046542 <delay : 41c6 >			  ## analog.c:1280:5
 1e10778:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1281:17
 1e1077c:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1282:13
 1e10780:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE812_1_1_+0x170 : 1e1077c >			  ## analog.c:1282:5
 1e10784:    40 48             	r0 = [r4 + 16]
 1e10786:    30 fd ff 09       	r0 = r0 & 4294967040
 1e1078a:    48 48             	[r4 + 16] = r0
 1e1078c:    08 70             	r8 = 0
 1e1078e:    f3 07             	r3 = -1
 1e10790:    e2 71             	r2 = 30
 1e10792:    ca ff 00 19 1e 00 	r10 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10798:    40 48             	r0 = [r4 + 16]			  ## analog.c:1286:21
 1e1079a:    50 b4             	r0 |= r2			  ## analog.c:1286:21
 1e1079c:    48 48             	[r4 + 16] = r0			  ## analog.c:1286:21
 1e1079e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1288:21
 1e107a2:    85 08             	r5 = r8			  ## analog.c:1288:21
 1e107a4:    f0 b8             	r0 &= 4294836223			  ## analog.c:1288:21
 1e107a6:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1288:21
 1e107aa:    20 70             	r0 = 2			  ## analog.c:1289:9
 1e107ac:    8f f3 0b 9d       	call 2046486 <delay : 41c6 >			  ## analog.c:1289:9
 1e107b0:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1290:21
 1e107b4:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1291:17
 1e107b8:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE812_1_1_+0x1A8 : 1e107b4 >			  ## analog.c:1291:9
 1e107bc:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1294:20
 1e107c0:    01 f6 14 e0       	r1 = [r14 + 20]			  ## analog.c:1296:20
 1e107c4:    46 48             	r6 = [r4 + 16]			  ## analog.c:1296:20
 1e107c6:    36 fd ff 69       	r6 = r6 & 4294967040			  ## analog.c:1296:20
 1e107ca:    b0 fd 40 11       	r1 = sextra(r1, p:8, l:16)			  ## analog.c:1297:25
 1e107ce:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1295:25
 1e107d2:    00 0e             	r0 = r0 * r0			  ## analog.c:1298:24
 1e107d4:    80 fe 10 01       	r0 += r1 * r1			  ## analog.c:1298:33
 1e107d8:    4e 48             	[r4 + 16] = r6
 1e107da:    28 08             	r8 = r2			  ## analog.c:1300:13
 1e107dc:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE812_1_1_+0x1D6 : 1e107e2 >			  ## analog.c:1300:13
 1e107e0:    58 08             	r8 = r5			  ## analog.c:1300:13
 1e107e2:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE812_1_1_+0x1DC : 1e107e8 >
 1e107e6:    30 08             	r0 = r3			  ## analog.c:1300:13
 1e107e8:    12 80             	r2 += 1			  ## analog.c:1284:27
 1e107ea:    03 08             	r3 = r0			  ## analog.c:1284:27
 1e107ec:    a2 e5 d4 1f       	if (r2 != 90) goto -88 <.GJTIE812_1_1_+0x18C : 1e10798 >
 1e107f0:    40 48             	r0 = [r4 + 16]			  ## analog.c:1309:17
 1e107f2:    e4 fd 00 28       	r2 = r8.b0 (u)			  ## analog.c:1309:21
 1e107f6:    50 b4             	r0 |= r2			  ## analog.c:1309:17
 1e107f8:    48 48             	[r4 + 16] = r0			  ## analog.c:1309:17
 1e107fa:    f2 fd 40 08       	r0 = r8 >> 8			  ## analog.c:1315:22
 1e107fe:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1315:22
 1e10802:    18 f9 04 b0       	b[r11 + 4] = r8			  ## analog.c:1315:22
 1e10806:    40 48             	r0 = [r4 + 16]			  ## analog.c:1317:17
 1e10808:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:1317:17
 1e1080c:    48 48             	[r4 + 16] = r0			  ## analog.c:1317:17
 1e1080e:    40 48             	r0 = [r4 + 16]			  ## analog.c:1318:17
 1e10810:    48 48             	[r4 + 16] = r0			  ## analog.c:1318:17
 1e10812:    40 48             	r0 = [r4 + 16]
 1e10814:    30 fd ff 0b       	r0 = r0 & 4278255615
 1e10818:    48 48             	[r4 + 16] = r0
 1e1081a:    f3 07             	r3 = -1
 1e1081c:    c2 ff e2 ff 00 00 	r2 = 65506 <_IRQ_MEM_ADDR+0xE2 : ffe2 >
 1e10822:    80 08             	r0 = r8
 1e10824:    45 48             	r5 = [r4 + 16]			  ## analog.c:1323:21
 1e10826:    86 04             	r6 = r2.b0 (u)			  ## analog.c:1323:24
 1e10828:    36 c4             	r6 = r6 << 16			  ## analog.c:1323:24
 1e1082a:    55 bc             	r5 |= r6			  ## analog.c:1323:21
 1e1082c:    4d 48             	[r4 + 16] = r5			  ## analog.c:1323:21
 1e1082e:    06 f6 00 e0       	r6 = [r14 + 0]			  ## analog.c:1325:21
 1e10832:    09 08             	r9 = r0			  ## analog.c:1325:21
 1e10834:    30 fd 02 6b       	r0 = r6 & 4294836223			  ## analog.c:1325:21
 1e10838:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1325:21
 1e1083c:    20 70             	r0 = 2			  ## analog.c:1326:9
 1e1083e:    8f f3 c2 9c       	call 2046340 <delay : 41c6 >			  ## analog.c:1326:9
 1e10842:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1327:21
 1e10846:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1328:17
 1e1084a:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE812_1_1_+0x23A : 1e10846 >			  ## analog.c:1328:9
 1e1084e:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1331:20
 1e10852:    06 f6 14 e0       	r6 = [r14 + 20]			  ## analog.c:1333:20
 1e10856:    41 48             	r1 = [r4 + 16]			  ## analog.c:1333:20
 1e10858:    31 fd ff 1b       	r1 = r1 & 4278255615			  ## analog.c:1333:20
 1e1085c:    b0 fd 40 56       	r5 = sextra(r6, p:8, l:16)			  ## analog.c:1334:25
 1e10860:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1332:25
 1e10864:    06 0e             	r6 = r0 * r0			  ## analog.c:1335:24
 1e10866:    80 fe 50 65       	r6 += r5 * r5			  ## analog.c:1335:33
 1e1086a:    49 48             	[r4 + 16] = r1
 1e1086c:    20 08             	r0 = r2			  ## analog.c:1337:13
 1e1086e:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE812_1_1_+0x268 : 1e10874 >
 1e10872:    90 08             	r0 = r9			  ## analog.c:1337:13
 1e10874:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE812_1_1_+0x26E : 1e1087a >
 1e10878:    36 08             	r6 = r3			  ## analog.c:1337:13
 1e1087a:    12 80             	r2 += 1			  ## analog.c:1321:28
 1e1087c:    a1 04             	r1 = r2.l (u)			  ## analog.c:1321:28
 1e1087e:    63 08             	r3 = r6			  ## analog.c:1321:28
 1e10880:    e1 e1 d0 1f       	if (r1 != 30) goto -96 <.GJTIE812_1_1_+0x218 : 1e10824 >
 1e10884:    41 48             	r1 = [r4 + 16]			  ## analog.c:1346:17
 1e10886:    02 c4             	r2 = r0 << 16			  ## analog.c:1346:20
 1e10888:    42 fb ff 2b       	r2 = r2 + 16711680			  ## analog.c:1346:20
 1e1088c:    22 fd ff 2b       	r2 = r2 & 16711680			  ## analog.c:1346:20
 1e10890:    51 b4             	r1 |= r2			  ## analog.c:1346:17
 1e10892:    e6 fd 00 28       	r2 = r8.l (u)			  ## analog.c:1348:14
 1e10896:    49 48             	[r4 + 16] = r1			  ## analog.c:1346:17
 1e10898:    f2 e3 04 80       	if (r2 > 63) goto 8 <.GJTIE812_1_1_+0x298 : 1e108a4 >			  ## analog.c:1348:9
 1e1089c:    01 74             	r1 = 64			  ## analog.c:1349:24
 1e1089e:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1349:24
 1e108a2:    02 18             	goto 4 <.GJTIE812_1_1_+0x29C : 1e108a8 >			  ## analog.c:1349:24
 1e108a4:    8a fd 30 18       	r1 = uextra(r8, p:6, l:10)			  ## analog.c:1351:24
 1e108a8:    01 fe 0a 19       	r1 = r1 * 10
 1e108ac:    62 04             	r2 = r1.l (u)
 1e108ae:    01 fb b0 04       	r1 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD8 : 4b0 >			  ## analog.c:1353:26
 1e108b2:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1353:26
 1e108b6:    63 07             	r3 = -10			  ## analog.c:1354:15
 1e108b8:    ce 0e             	r6 = r1 * r3			  ## analog.c:1354:15
 1e108ba:    a5 70             	r5 = 10			  ## analog.c:1354:15
 1e108bc:    80 fe 50 61       	r6 += r1 * r5			  ## analog.c:1354:15
 1e108c0:    56 e0 06 b0       	ifs (r6 < 5) goto 12 <.GJTIE812_1_1_+0x2C4 : 1e108d0 >			  ## analog.c:1354:15
 1e108c4:    01 fe 0a 19       	r1 = r1 * 10			  ## analog.c:1353:37
 1e108c8:    a1 80             	r1 += 10			  ## analog.c:1355:22
 1e108ca:    61 04             	r1 = r1.l (u)			  ## analog.c:1355:22
 1e108cc:    c0 fe 50 11       	r1 = r1 / r5 (u)			  ## analog.c:1355:28
 1e108d0:    06 fb dc 05       	r6 = 1500 <BTCTLER_CONTROLLER_DATA_SIZE+0x120 : 5dc >			  ## analog.c:1360:30
 1e108d4:    c0 fe 20 26       	r2 = r6 / r2 (u)			  ## analog.c:1360:30
 1e108d8:    d3 0e             	r3 = r2 * r3			  ## analog.c:1361:17
 1e108da:    80 fe 50 32       	r3 += r2 * r5			  ## analog.c:1361:17
 1e108de:    53 e0 07 b0       	ifs (r3 < 5) goto 14 <.GJTIE812_1_1_+0x2E4 : 1e108f0 >			  ## analog.c:1361:17
 1e108e2:    02 fe 0a 29       	r2 = r2 * 10			  ## analog.c:1360:41
 1e108e6:    a2 80             	r2 += 10			  ## analog.c:1362:26
 1e108e8:    a2 04             	r2 = r2.l (u)			  ## analog.c:1362:26
 1e108ea:    a3 70             	r3 = 10			  ## analog.c:1362:26
 1e108ec:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## analog.c:1362:32
 1e108f0:    10 f9 0c b0       	b[r11 + 12] = r0			  ## analog.c:1368:22
 1e108f4:    00 d2             	r0 = r0 >> 8			  ## analog.c:1368:22
 1e108f6:    10 f9 0d b0       	b[r11 + 13] = r0			  ## analog.c:1368:22
 1e108fa:    40 48             	r0 = [r4 + 16]			  ## analog.c:1369:17
 1e108fc:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1369:17
 1e10900:    48 48             	[r4 + 16] = r0			  ## analog.c:1369:17
 1e10902:    04 f4 78 4a       	[r4 + 16] |= 30720			  ## analog.c:1370:17
 1e10906:    40 48             	r0 = [r4 + 16]			  ## analog.c:1371:17
 1e10908:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1371:17
 1e1090c:    48 48             	[r4 + 16] = r0			  ## analog.c:1371:17
 1e1090e:    40 48             	r0 = [r4 + 16]			  ## analog.c:1372:17
 1e10910:    43 04             	r3 = r1.b0 (u)			  ## analog.c:1372:20
 1e10912:    50 b6             	r0 |= r3			  ## analog.c:1372:17
 1e10914:    48 48             	[r4 + 16] = r0			  ## analog.c:1372:17
 1e10916:    05 70             	r5 = 0			  ## analog.c:1372:17
 1e10918:    15 f9 07 b0       	b[r11 + 7] = r5			  ## analog.c:1374:22
 1e1091c:    80 77             	r0 = 120			  ## analog.c:1374:22
 1e1091e:    10 f9 06 b0       	b[r11 + 6] = r0			  ## analog.c:1374:22
 1e10922:    08 d2             	r0 = r1 >> 8			  ## analog.c:1375:22
 1e10924:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1375:22
 1e10928:    11 f9 04 b0       	b[r11 + 4] = r1			  ## analog.c:1375:22
 1e1092c:    15 f9 0b b0       	b[r11 + 11] = r5			  ## analog.c:1377:24
 1e10930:    60 79             	r0 = 150			  ## analog.c:1377:24
 1e10932:    10 f9 0a b0       	b[r11 + 10] = r0			  ## analog.c:1377:24
 1e10936:    10 d2             	r0 = r2 >> 8			  ## analog.c:1378:24
 1e10938:    10 f9 09 b0       	b[r11 + 9] = r0			  ## analog.c:1378:24
 1e1093c:    12 f9 08 b0       	b[r11 + 8] = r2			  ## analog.c:1378:24
 1e10940:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1381:20
 1e10942:    70 b8             	r0 &= 4294901759			  ## analog.c:1381:20
 1e10944:    28 4e             	[r7 + 8] = r0			  ## analog.c:1381:20
 1e10946:    20 70             	r0 = 2			  ## analog.c:1382:5
 1e10948:    8f f3 3d 9c       	call 2046074 <delay : 41c6 >			  ## analog.c:1382:5
 1e1094c:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1383:13
 1e1094e:    f0 b0             	r0 &= 4294967293			  ## analog.c:1383:13
 1e10950:    f8 49             	[r4 + 124] = r0			  ## analog.c:1383:13
 1e10952:    20 70             	r0 = 2			  ## analog.c:1384:5
 1e10954:    8f f3 37 9c       	call 2046062 <delay : 41c6 >			  ## analog.c:1384:5
 1e10958:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1385:13
 1e1095a:    70 b1             	r0 &= 4294967291			  ## analog.c:1385:13
 1e1095c:    f8 49             	[r4 + 124] = r0			  ## analog.c:1385:13
 1e1095e:    20 70             	r0 = 2			  ## analog.c:1386:5
 1e10960:    8f f3 31 9c       	call 2046050 <delay : 41c6 >			  ## analog.c:1386:5
 1e10964:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1387:45
 1e10968:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1387:31
 1e1096c:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1387:17
 1e10970:    20 70             	r0 = 2			  ## analog.c:1388:5
 1e10972:    8f f3 28 9c       	call 2046032 <delay : 41c6 >			  ## analog.c:1388:5
 1e10976:    90 48             	r0 = [r4 + 36]			  ## analog.c:1389:17
 1e10978:    f0 b5             	r0 &= 4294965247			  ## analog.c:1389:17
 1e1097a:    98 48             	[r4 + 36] = r0			  ## analog.c:1389:17
 1e1097c:    bf f3 9c fa       	call -2760 <rxtrim_analog_init : 1e0feb8 >			  ## analog.c:903:5
 1e10980:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:905:22
 1e10984:    01 fb 3f fe       	r1 = -449 <bank_code_load_addr+0x1E541B : 1fffe3f >			  ## analog.c:905:22
 1e10988:    50 b3             	r0 &= r1			  ## analog.c:905:22
 1e1098a:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:905:22
 1e1098e:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:906:22
 1e10992:    01 fb c0 01       	r1 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:906:22
 1e10996:    50 b2             	r0 |= r1			  ## analog.c:906:22
 1e10998:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:906:22
 1e1099c:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:908:22
 1e109a0:    30 fd 1e 0b       	r0 = r0 & 4293001215			  ## analog.c:908:22
 1e109a4:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:908:22
 1e109a8:    03 f4 15 ab       	[r10 + 12] |= 1376256			  ## analog.c:909:22
 1e109ac:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:912:22
 1e109b0:    f0 b5             	r0 &= 4294965247			  ## analog.c:912:22
 1e109b2:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:912:22
 1e109b6:    02 f4 01 a9       	[r10 + 8] |= 1			  ## analog.c:913:22
 1e109ba:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:914:22
 1e109be:    70 b0             	r0 &= 4294967294			  ## analog.c:914:22
 1e109c0:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:914:22
 1e109c4:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:916:13
 1e109c8:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:917:20
 1e109cc:    1f f4 10 49       	[r4 + 124] |= 16			  ## analog.c:918:13
 1e109d0:    90 48             	r0 = [r4 + 36]			  ## analog.c:919:17
 1e109d2:    98 48             	[r4 + 36] = r0			  ## analog.c:919:17
 1e109d4:    00 48             	r0 = [r4 + 0]			  ## analog.c:920:17
 1e109d6:    30 fd 0c 0c       	r0 = r0 & 4093640703			  ## analog.c:920:17
 1e109da:    08 48             	[r4 + 0] = r0			  ## analog.c:920:17
 1e109dc:    40 a3             	r0 = sp + 52			  ## analog.c:920:17
 1e109de:    98 4e             	[r7 + 36] = r0			  ## analog.c:922:19
 1e109e0:    01 70             	r1 = 0			  ## analog.c:925:20
 1e109e2:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## analog.c:925:20
 1e109e6:    97 f3 83 b2       	call 3106054 <memset : 106ef0 >			  ## analog.c:925:20
 1e109ea:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:928:22
 1e109ee:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:928:22
 1e109f2:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:928:22
 1e109f6:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:929:22
 1e109fa:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:929:22
 1e109fe:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:931:22
 1e10a02:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:931:22
 1e10a06:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:931:22
 1e10a0a:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:932:22
 1e10a0e:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:932:22
 1e10a12:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:934:22
 1e10a16:    f0 b4             	r0 &= 4294966783			  ## analog.c:934:22
 1e10a18:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:934:22
 1e10a1c:    03 f4 02 aa       	[r10 + 12] |= 512			  ## analog.c:935:22
 1e10a20:    c8 f4 40 7b       	[r7 + 32] = 4194304			  ## analog.c:938:23
 1e10a24:    80 4e             	r0 = [r7 + 32]			  ## analog.c:939:16
 1e10a26:    00 d4             	r0 = r0 >> 16			  ## analog.c:939:9
 1e10a28:    fd 31             	if (r0 != 0) goto -6 <.GJTIE812_1_1_+0x418 : 1e10a24 >			  ## analog.c:939:9
 1e10a2a:    15 80             	r5 += 1			  ## analog.c:937:26
 1e10a2c:    60 05             	r0 = r5.l (u)			  ## analog.c:937:26
 1e10a2e:    40 e1 f7 1f       	if (r0 != 20) goto -18 <.GJTIE812_1_1_+0x414 : 1e10a20 >			  ## analog.c:937:26
 1e10a32:    40 a3             	r0 = sp + 52
 1e10a34:    00 fc fc 00       	r0 = r0 + 252
 1e10a38:    18 02             	[sp+4] = r0
 1e10a3a:    08 70             	r8 = 0
 1e10a3c:    02 fb f8 0f       	r2 = 4088 <sys_clock_limit+0x48 : ff8 >
 1e10a40:    83 94             	r3 = r2 + 8
 1e10a42:    00 70             	r0 = 0
 1e10a44:    28 02             	[sp+8] = r0
 1e10a46:    08 02             	[sp] = r0
 1e10a48:    09 fd 40 8b       	r9 = r8 | 4194304
 1e10a4c:    ac 08             	r12 = r10
 1e10a4e:    00 70             	r0 = 0
 1e10a50:    0b 70             	r11 = 0
 1e10a52:    38 02             	[sp+12] = r0
 1e10a54:    00 70             	r0 = 0
 1e10a56:    19 f6 20 70       	[r7 + 32] = r9			  ## analog.c:955:31
 1e10a5a:    81 4e             	r1 = [r7 + 32]			  ## analog.c:956:24
 1e10a5c:    09 d4             	r1 = r1 >> 16			  ## analog.c:956:17
 1e10a5e:    fd 33             	if (r1 != 0) goto -6 <.GJTIE812_1_1_+0x44E : 1e10a5a >			  ## analog.c:956:17
 1e10a60:    10 80             	r0 += 1			  ## analog.c:954:36
 1e10a62:    21 04             	r1 = r0.l (u)			  ## analog.c:954:36
 1e10a64:    21 e0 f7 1f       	if (r1 != 2) goto -18 <.GJTIE812_1_1_+0x44A : 1e10a56 >			  ## analog.c:954:36
 1e10a68:    01 70             	r1 = 0
 1e10a6a:    f0 73             	r0 = 63
 1e10a6c:    16 02             	r6 = [sp+4]
 1e10a6e:    45 f6 fc 6f       	r5 = [r6 ++= -4]			  ## analog.c:967:24
 1e10a72:    2c c4             	r4 = r5 << 16			  ## analog.c:967:35
 1e10a74:    e4 d8             	r4 = r4 >>> 3			  ## analog.c:969:67
 1e10a76:    80 fe 20 41       	r4 += r1 * r2			  ## analog.c:969:50
 1e10a7a:    e0 fe 30 14       	r1 = r4 / r3 (s)			  ## analog.c:969:75
 1e10a7e:    2c dc             	r4 = r5 >>> 16			  ## analog.c:968:34
 1e10a80:    f0 fd 68 f4       	r15 = r4 << 13			  ## analog.c:970:67
 1e10a84:    80 fe 20 f1       	r15 += r1 * r2			  ## analog.c:970:50
 1e10a88:    f0 8f             	r0 += -1			  ## analog.c:965:42
 1e10a8a:    e0 fe 30 1f       	r1 = r15 / r3 (s)			  ## analog.c:970:75
 1e10a8e:    00 e0 ee cf       	ifs (r0 > 0) goto -36 <.GJTIE812_1_1_+0x462 : 1e10a6e >			  ## analog.c:965:13
 1e10a92:    20 fb 08 0b       	r0 = 524288			  ## analog.c:972:21
 1e10a96:    e0 fe 00 af       	r10 = r15 / r0 (s)			  ## analog.c:972:21
 1e10a9a:    6d fb 00 a9       	r13 = 0 - r10			  ## analog.c:975:23
 1e10a9e:    d1 08             	r1 = r13			  ## analog.c:974:17
 1e10aa0:    c0 ff 01 00 f8 ff 	r0 = 4294443009 <bank_code_load_addr+0x1655DD : 1f80001 >			  ## analog.c:974:17
 1e10aa6:    0f f2 01 b0       	ifs (r15 < r0) goto 2 <.GJTIE812_1_1_+0x4A0 : 1e10aac >			  ## analog.c:974:17
 1e10aaa:    a1 08             	r1 = r10			  ## analog.c:974:17
 1e10aac:    26 70             	r6 = 2			  ## analog.c:984:13
 1e10aae:    c1 e3 01 c0       	ifs (r1 > 60) goto 2 <.GJTIE812_1_1_+0x4A8 : 1e10ab4 >			  ## analog.c:984:13
 1e10ab2:    16 70             	r6 = 1			  ## analog.c:984:13
 1e10ab4:    40 70             	r0 = 4			  ## analog.c:980:17
 1e10ab6:    81 e7 01 c0       	ifs (r1 > 120) goto 2 <.GJTIE812_1_1_+0x4B0 : 1e10abc >			  ## analog.c:980:17
 1e10aba:    60 08             	r0 = r6			  ## analog.c:980:17
 1e10abc:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10ac2:    08 e0 19 00       	if (r8 == 0) goto 50 <.GJTIE812_1_1_+0x4EC : 1e10af8 >
 1e10ac6:    31 42             	r1 = [r1 + 12]
 1e10ac8:    36 fd 01 1a       	r6 = r1 & 4294967039			  ## analog.c:1006:38
 1e10acc:    11 b4             	r1 |= 256			  ## analog.c:1004:38
 1e10ace:    c4 ff 01 00 f8 ff 	r4 = 4294443009 <bank_code_load_addr+0x1655DD : 1f80001 >			  ## analog.c:1003:21
 1e10ad4:    4f f2 01 b0       	ifs (r15 < r4) goto 2 <.GJTIE812_1_1_+0x4CE : 1e10ada >			  ## analog.c:1003:21
 1e10ad8:    61 08             	r1 = r6			  ## analog.c:1003:21
 1e10ada:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10ae0:    39 48             	[r4 + 12] = r1
 1e10ae2:    31 48             	r1 = [r4 + 12]			  ## analog.c:1009:34
 1e10ae4:    31 fd ff 19       	r1 = r1 & 4294967040			  ## analog.c:1009:34
 1e10ae8:    39 48             	[r4 + 12] = r1			  ## analog.c:1009:34
 1e10aea:    21 02             	r1 = [sp+8]			  ## analog.c:1008:30
 1e10aec:    61 04             	r1 = r1.l (u)			  ## analog.c:1008:30
 1e10aee:    01 09             	r1 += r0			  ## analog.c:1008:41
 1e10af0:    00 70             	r0 = 0			  ## analog.c:1008:41
 1e10af2:    29 02             	[sp+8] = r1
 1e10af4:    c6 98             	r6 = r4 + 12
 1e10af6:    18 18             	goto 48 <.GJTIE812_1_1_+0x51C : 1e10b28 >
 1e10af8:    21 42             	r1 = [r1 + 8]
 1e10afa:    36 fd 02 1c       	r6 = r1 & 4261412863			  ## analog.c:995:38
 1e10afe:    91 bc             	r1 |= 33554432			  ## analog.c:993:38
 1e10b00:    c4 ff 01 00 f8 ff 	r4 = 4294443009 <bank_code_load_addr+0x1655DD : 1f80001 >			  ## analog.c:992:21
 1e10b06:    4f f2 01 b0       	ifs (r15 < r4) goto 2 <.GJTIE812_1_1_+0x500 : 1e10b0c >			  ## analog.c:992:21
 1e10b0a:    61 08             	r1 = r6			  ## analog.c:992:21
 1e10b0c:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10b12:    29 48             	[r4 + 8] = r1
 1e10b14:    21 48             	r1 = [r4 + 8]			  ## analog.c:999:34
 1e10b16:    31 fd ff 15       	r1 = r1 & 4261543935			  ## analog.c:999:34
 1e10b1a:    29 48             	[r4 + 8] = r1			  ## analog.c:999:34
 1e10b1c:    01 02             	r1 = [sp]			  ## analog.c:998:30
 1e10b1e:    61 04             	r1 = r1.l (u)			  ## analog.c:998:30
 1e10b20:    01 09             	r1 += r0			  ## analog.c:998:41
 1e10b22:    10 71             	r0 = 17			  ## analog.c:998:41
 1e10b24:    09 02             	[sp] = r1
 1e10b26:    86 98             	r6 = r4 + 8
 1e10b28:    04 4c             	r4 = [r6 + 0]
 1e10b2a:    41 04             	r1 = r1.b0 (u)
 1e10b2c:    f8 fd 00 01       	r0 = r1 << r0
 1e10b30:    50 b8             	r0 |= r4
 1e10b32:    08 4c             	[r6 + 0] = r0
 1e10b34:    a1 08             	r1 = r10			  ## analog.c:1024:17
 1e10b36:    c0 ff 00 00 f8 ff 	r0 = 4294443008 <bank_code_load_addr+0x1655DC : 1f80000 >			  ## analog.c:1024:17
 1e10b3c:    0f f2 01 c0       	ifs (r15 > r0) goto 2 <.GJTIE812_1_1_+0x536 : 1e10b42 >			  ## analog.c:1024:17
 1e10b40:    d1 08             	r1 = r13			  ## analog.c:1024:17
 1e10b42:    10 70             	r0 = 1			  ## analog.c:1024:25
 1e10b44:    74 fc 68 ff       	r4 = r7 + -152			  ## analog.c:1024:25
 1e10b48:    a1 e1 01 b0       	ifs (r1 < 26) goto 2 <.GJTIE812_1_1_+0x542 : 1e10b4e >			  ## analog.c:1024:25
 1e10b4c:    00 70             	r0 = 0
 1e10b4e:    40 fe c0 1a       	r1 = r10 * r12			  ## analog.c:1024:38
 1e10b52:    c9 d7             	r1 = r1 >> 31			  ## analog.c:1024:45
 1e10b54:    e2 fd b0 11       	r1 = r1 & r11			  ## analog.c:1024:50
 1e10b58:    50 b2             	r0 |= r1			  ## analog.c:1024:31
 1e10b5a:    cd ff 00 19 1e 00 	r13 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1024:31
 1e10b60:    1c 30             	if (r0 != 0) goto 56 <.GJTIE812_1_1_+0x58E : 1e10b9a >			  ## analog.c:1024:31
 1e10b62:    36 02             	r6 = [sp+12]
 1e10b64:    10 9c             	r0 = r6 + 1			  ## analog.c:1038:23
 1e10b66:    1b 70             	r11 = 1
 1e10b68:    ac 08             	r12 = r10
 1e10b6a:    01 fb b9 0b       	r1 = 3001 <BTCTLER_CL_CODE_TOTAL+0x6D : bb9 >			  ## analog.c:1038:17
 1e10b6e:    16 f2 70 bf       	ifs (r6 < r1) goto -288 <.GJTIE812_1_1_+0x446 : 1e10a52 >			  ## analog.c:1038:17
 1e10b72:    00 f6 08 d0       	r0 = [r13 + 8]			  ## analog.c:1040:34
 1e10b76:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:1040:34
 1e10b7a:    10 f6 08 d0       	[r13 + 8] = r0			  ## analog.c:1040:34
 1e10b7e:    00 f6 08 d0       	r0 = [r13 + 8]			  ## analog.c:1041:34
 1e10b82:    10 f6 08 d0       	[r13 + 8] = r0			  ## analog.c:1041:34
 1e10b86:    00 f6 0c d0       	r0 = [r13 + 12]			  ## analog.c:1042:34
 1e10b8a:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1042:34
 1e10b8e:    10 f6 0c d0       	[r13 + 12] = r0			  ## analog.c:1042:34
 1e10b92:    00 f6 0c d0       	r0 = [r13 + 12]			  ## analog.c:1043:34
 1e10b96:    10 f6 0c d0       	[r13 + 12] = r0			  ## analog.c:1043:34
 1e10b9a:    18 80             	r8 += 1			  ## analog.c:946:25
 1e10b9c:    28 e0 54 1f       	if (r8 != 2) goto -344 <.GJTIE812_1_1_+0x43C : 1e10a48 >			  ## analog.c:946:25
 1e10ba0:    cb ff 7c 2c 00 00 	r11 = 11388 <tws_bulk_pool_end : 2c7c >
 1e10ba6:    00 02             	r0 = [sp]
 1e10ba8:    10 f9 0e b0       	b[r11 + 14] = r0			  ## analog.c:1049:28
 1e10bac:    00 d2             	r0 = r0 >> 8			  ## analog.c:1049:28
 1e10bae:    10 f9 0f b0       	b[r11 + 15] = r0			  ## analog.c:1049:28
 1e10bb2:    21 02             	r1 = [sp+8]			  ## analog.c:1049:28
 1e10bb4:    08 d2             	r0 = r1 >> 8			  ## analog.c:1050:28
 1e10bb6:    10 f9 11 b0       	b[r11 + 17] = r0			  ## analog.c:1050:28
 1e10bba:    11 f9 10 b0       	b[r11 + 16] = r1			  ## analog.c:1050:28
 1e10bbe:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1052:13
 1e10bc0:    f0 b0             	r0 &= 4294967293			  ## analog.c:1052:13
 1e10bc2:    f8 49             	[r4 + 124] = r0			  ## analog.c:1052:13
 1e10bc4:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1053:20
 1e10bc6:    70 b8             	r0 &= 4294901759			  ## analog.c:1053:20
 1e10bc8:    28 4e             	[r7 + 8] = r0			  ## analog.c:1053:20
 1e10bca:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1054:13
 1e10bcc:    70 b2             	r0 &= 4294967279			  ## analog.c:1054:13
 1e10bce:    f8 49             	[r4 + 124] = r0			  ## analog.c:1054:13
 1e10bd0:    00 f4 0c 4c       	[r4 + 0] |= 201326592			  ## analog.c:1055:17
 1e10bd4:    bf f3 70 f9       	call -3360 <rxtrim_analog_init : 1e0feb8 >			  ## analog.c:721:5
 1e10bd8:    02 70             	r2 = 0			  ## analog.c:721:5
 1e10bda:    12 f6 08 e0       	[r14 + 8] = r2			  ## analog.c:723:17
 1e10bde:    20 70             	r0 = 2			  ## analog.c:724:5
 1e10be0:    8f f3 f1 9a       	call 2045410 <delay : 41c6 >			  ## analog.c:724:5
 1e10be4:    12 f6 04 e0       	[r14 + 4] = r2			  ## analog.c:725:17
 1e10be8:    20 70             	r0 = 2			  ## analog.c:726:5
 1e10bea:    8f f3 ec 9a       	call 2045400 <delay : 41c6 >			  ## analog.c:726:5
 1e10bee:    12 f6 00 e0       	[r14 + 0] = r2			  ## analog.c:727:17
 1e10bf2:    20 70             	r0 = 2			  ## analog.c:728:5
 1e10bf4:    8f f3 e7 9a       	call 2045390 <delay : 41c6 >			  ## analog.c:728:5
 1e10bf8:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:729:20
 1e10bfc:    20 70             	r0 = 2			  ## analog.c:730:5
 1e10bfe:    8f f3 e2 9a       	call 2045380 <delay : 41c6 >			  ## analog.c:730:5
 1e10c02:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:731:13
 1e10c06:    20 70             	r0 = 2			  ## analog.c:732:5
 1e10c08:    8f f3 dd 9a       	call 2045370 <delay : 41c6 >			  ## analog.c:732:5
 1e10c0c:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:733:13
 1e10c10:    20 70             	r0 = 2			  ## analog.c:734:5
 1e10c12:    8f f3 d8 9a       	call 2045360 <delay : 41c6 >			  ## analog.c:734:5
 1e10c16:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:735:17
 1e10c1a:    20 70             	r0 = 2			  ## analog.c:736:5
 1e10c1c:    8f f3 d3 9a       	call 2045350 <delay : 41c6 >			  ## analog.c:736:5
 1e10c20:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:737:17
 1e10c24:    20 70             	r0 = 2			  ## analog.c:738:5
 1e10c26:    8f f3 ce 9a       	call 2045340 <delay : 41c6 >			  ## analog.c:738:5
 1e10c2a:    02 f4 01 eb       	[r14 + 8] |= 65536			  ## analog.c:739:17
 1e10c2e:    20 70             	r0 = 2			  ## analog.c:740:5
 1e10c30:    8f f3 c9 9a       	call 2045330 <delay : 41c6 >			  ## analog.c:740:5
 1e10c34:    02 f4 10 eb       	[r14 + 8] |= 1048576			  ## analog.c:741:17
 1e10c38:    20 70             	r0 = 2			  ## analog.c:742:5
 1e10c3a:    8f f3 c4 9a       	call 2045320 <delay : 41c6 >			  ## analog.c:742:5
 1e10c3e:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:743:17
 1e10c42:    20 70             	r0 = 2			  ## analog.c:744:5
 1e10c44:    8f f3 bf 9a       	call 2045310 <delay : 41c6 >			  ## analog.c:744:5
 1e10c48:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:745:17
 1e10c4c:    20 70             	r0 = 2			  ## analog.c:746:5
 1e10c4e:    8f f3 ba 9a       	call 2045300 <delay : 41c6 >			  ## analog.c:746:5
 1e10c52:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:747:17
 1e10c56:    f0 b4             	r0 &= 4294966783			  ## analog.c:747:17
 1e10c58:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:747:17
 1e10c5c:    20 70             	r0 = 2			  ## analog.c:748:5
 1e10c5e:    8f f3 b2 9a       	call 2045284 <delay : 41c6 >			  ## analog.c:748:5
 1e10c62:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:749:17
 1e10c66:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:749:17
 1e10c6a:    20 70             	r0 = 2			  ## analog.c:750:5
 1e10c6c:    8f f3 ab 9a       	call 2045270 <delay : 41c6 >			  ## analog.c:750:5
 1e10c70:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:751:17
 1e10c74:    20 70             	r0 = 2			  ## analog.c:752:5
 1e10c76:    8f f3 a6 9a       	call 2045260 <delay : 41c6 >			  ## analog.c:752:5
 1e10c7a:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:753:17
 1e10c7e:    20 70             	r0 = 2			  ## analog.c:754:5
 1e10c80:    8f f3 a1 9a       	call 2045250 <delay : 41c6 >			  ## analog.c:754:5
 1e10c84:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:755:17
 1e10c88:    20 70             	r0 = 2			  ## analog.c:756:5
 1e10c8a:    8f f3 9c 9a       	call 2045240 <delay : 41c6 >			  ## analog.c:756:5
 1e10c8e:    20 70             	r0 = 2			  ## analog.c:757:5
 1e10c90:    8f f3 99 9a       	call 2045234 <delay : 41c6 >			  ## analog.c:757:5
 1e10c94:    00 f4 01 ec       	[r14 + 0] |= 16777216			  ## analog.c:758:17
 1e10c98:    20 70             	r0 = 2			  ## analog.c:759:5
 1e10c9a:    8f f3 94 9a       	call 2045224 <delay : 41c6 >			  ## analog.c:759:5
 1e10c9e:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:760:17
 1e10ca2:    20 70             	r0 = 2			  ## analog.c:761:5
 1e10ca4:    8f f3 8f 9a       	call 2045214 <delay : 41c6 >			  ## analog.c:761:5
 1e10ca8:    00 f4 20 ec       	[r14 + 0] |= 536870912			  ## analog.c:762:17
 1e10cac:    20 70             	r0 = 2			  ## analog.c:763:5
 1e10cae:    8f f3 8a 9a       	call 2045204 <delay : 41c6 >			  ## analog.c:763:5
 1e10cb2:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:765:17
 1e10cb6:    20 70             	r0 = 2			  ## analog.c:766:5
 1e10cb8:    8f f3 85 9a       	call 2045194 <delay : 41c6 >			  ## analog.c:766:5
 1e10cbc:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:767:17
 1e10cc0:    20 70             	r0 = 2			  ## analog.c:769:5
 1e10cc2:    8f f3 80 9a       	call 2045184 <delay : 41c6 >			  ## analog.c:769:5
 1e10cc6:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:770:17
 1e10cca:    50 48             	r0 = [r4 + 20]			  ## analog.c:776:17
 1e10ccc:    c1 ff ff ff 03 f8 	r1 = 4161011711 <text_size+0x274B3 : 3ffff >			  ## analog.c:776:17
 1e10cd2:    50 b3             	r0 &= r1			  ## analog.c:776:17
 1e10cd4:    58 48             	[r4 + 20] = r0			  ## analog.c:776:17
 1e10cd6:    50 70             	r0 = 5			  ## analog.c:777:5
 1e10cd8:    8f f3 75 9a       	call 2045162 <delay : 41c6 >			  ## analog.c:777:5
 1e10cdc:    05 f4 7f 46       	[r4 + 20] |= 66846720			  ## analog.c:778:17
 1e10ce0:    50 70             	r0 = 5			  ## analog.c:779:5
 1e10ce2:    8f f3 70 9a       	call 2045152 <delay : 41c6 >			  ## analog.c:779:5
 1e10ce6:    50 48             	r0 = [r4 + 20]			  ## analog.c:780:17
 1e10ce8:    c8 ff ff 01 fc ff 	r8 = 4294705663 <bank_code_load_addr+0x1A57DB : 1fc01ff >			  ## analog.c:780:17
 1e10cee:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:780:17
 1e10cf2:    58 48             	[r4 + 20] = r0			  ## analog.c:780:17
 1e10cf4:    40 71             	r0 = 20			  ## analog.c:781:5
 1e10cf6:    49 71             	r9 = 20			  ## analog.c:781:5
 1e10cf8:    8f f3 65 9a       	call 2045130 <delay : 41c6 >			  ## analog.c:781:5
 1e10cfc:    50 48             	r0 = [r4 + 20]
 1e10cfe:    0a fb 00 fe       	r10 = -512 <bank_code_load_addr+0x1E53DC : 1fffe00 >
 1e10d02:    e2 fd a0 00       	r0 = r0 & r10
 1e10d06:    58 48             	[r4 + 20] = r0
 1e10d08:    50 70             	r0 = 5			  ## analog.c:785:9
 1e10d0a:    8f f3 5c 9a       	call 2045112 <delay : 41c6 >			  ## analog.c:785:9
 1e10d0e:    f6 07             	r6 = -1			  ## analog.c:785:9
 1e10d10:    c5 7d             	r5 = 220			  ## analog.c:785:9
 1e10d12:    50 48             	r0 = [r4 + 20]			  ## analog.c:786:21
 1e10d14:    21 08             	r1 = r2			  ## analog.c:786:21
 1e10d16:    50 ba             	r0 |= r5			  ## analog.c:786:21
 1e10d18:    58 48             	[r4 + 20] = r0			  ## analog.c:786:21
 1e10d1a:    40 71             	r0 = 20			  ## analog.c:787:9
 1e10d1c:    8f f3 53 9a       	call 2045094 <delay : 41c6 >			  ## analog.c:787:9
 1e10d20:    02 70             	r2 = 0
 1e10d22:    03 70             	r3 = 0
 1e10d24:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:791:25
 1e10d28:    f0 bc             	r0 &= 4261412863			  ## analog.c:791:25
 1e10d2a:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:791:25
 1e10d2e:    50 70             	r0 = 5			  ## analog.c:792:13
 1e10d30:    8f f3 49 9a       	call 2045074 <delay : 41c6 >			  ## analog.c:792:13
 1e10d34:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:793:25
 1e10d38:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:794:21
 1e10d3c:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE812_1_1_+0x72C : 1e10d38 >			  ## analog.c:794:13
 1e10d40:    00 f6 1c e0       	r0 = [r14 + 28]			  ## analog.c:796:24
 1e10d44:    04 f6 20 e0       	r4 = [r14 + 32]			  ## analog.c:798:24
 1e10d48:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:797:29
 1e10d4c:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:38
 1e10d50:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:799:29
 1e10d54:    13 80             	r3 += 1			  ## analog.c:790:30
 1e10d56:    e4 04             	r4 = r3.l (u)			  ## analog.c:790:30
 1e10d58:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:19
 1e10d5c:    44 e1 e2 1f       	if (r4 != 20) goto -60 <.GJTIE812_1_1_+0x718 : 1e10d24 >
 1e10d60:    74 fc 68 ff       	r4 = r7 + -152
 1e10d64:    50 48             	r0 = [r4 + 20]
 1e10d66:    e2 fd a0 00       	r0 = r0 & r10
 1e10d6a:    58 48             	[r4 + 20] = r0
 1e10d6c:    50 70             	r0 = 5			  ## analog.c:785:9
 1e10d6e:    8f f3 2a 9a       	call 2045012 <delay : 41c6 >			  ## analog.c:785:9
 1e10d72:    e0 fe 90 02       	r0 = r2 / r9 (s)			  ## analog.c:802:14
 1e10d76:    52 08             	r2 = r5			  ## analog.c:804:13
 1e10d78:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE812_1_1_+0x772 : 1e10d7e >			  ## analog.c:804:13
 1e10d7c:    12 08             	r2 = r1			  ## analog.c:804:13
 1e10d7e:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE812_1_1_+0x778 : 1e10d84 >
 1e10d82:    60 08             	r0 = r6			  ## analog.c:804:13
 1e10d84:    15 80             	r5 += 1			  ## analog.c:783:29
 1e10d86:    06 08             	r6 = r0			  ## analog.c:783:29
 1e10d88:    01 ff 18 51 c2 ff 	if (r5 != 280) goto -124 <.GJTIE812_1_1_+0x706 : 1e10d12 >
 1e10d8e:    50 48             	r0 = [r4 + 20]			  ## analog.c:815:17
 1e10d90:    09 fb ff 01       	r9 = 511 <BTCTLER_CONTROLLER_BSS_SIZE+0x3F : 1ff >			  ## analog.c:815:21
 1e10d94:    e2 fd 90 12       	r1 = r2 & r9			  ## analog.c:815:21
 1e10d98:    50 b2             	r0 |= r1			  ## analog.c:815:17
 1e10d9a:    58 48             	[r4 + 20] = r0			  ## analog.c:815:17
 1e10d9c:    40 71             	r0 = 20			  ## analog.c:816:5
 1e10d9e:    4a 71             	r10 = 20			  ## analog.c:816:5
 1e10da0:    8f f3 11 9a       	call 2044962 <delay : 41c6 >			  ## analog.c:816:5
 1e10da4:    10 d2             	r0 = r2 >> 8			  ## analog.c:820:22
 1e10da6:    10 f9 13 b0       	b[r11 + 19] = r0			  ## analog.c:820:22
 1e10daa:    12 f9 12 b0       	b[r11 + 18] = r2			  ## analog.c:820:22
 1e10dae:    50 48             	r0 = [r4 + 20]			  ## analog.c:824:17
 1e10db0:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:824:17
 1e10db4:    58 48             	[r4 + 20] = r0			  ## analog.c:824:17
 1e10db6:    50 48             	r0 = [r4 + 20]			  ## analog.c:825:17
 1e10db8:    58 48             	[r4 + 20] = r0			  ## analog.c:825:17
 1e10dba:    50 48             	r0 = [r4 + 20]
 1e10dbc:    e2 fd 80 00       	r0 = r0 & r8
 1e10dc0:    58 48             	[r4 + 20] = r0
 1e10dc2:    c1 ff d8 ff 00 00 	r1 = 65496 <_IRQ_MEM_ADDR+0xD8 : ffd8 >
 1e10dc8:    f3 07             	r3 = -1
 1e10dca:    2b 08             	r11 = r2
 1e10dcc:    50 70             	r0 = 5			  ## analog.c:828:9
 1e10dce:    8f f3 fa 99       	call 2044916 <delay : 41c6 >			  ## analog.c:828:9
 1e10dd2:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:828:9
 1e10dd6:    04 08             	r4 = r0			  ## analog.c:828:9
 1e10dd8:    50 48             	r0 = [r4 + 20]			  ## analog.c:829:21
 1e10dda:    e2 fd 90 21       	r2 = r1 & r9			  ## analog.c:829:24
 1e10dde:    52 c2             	r2 = r2 << 9			  ## analog.c:829:24
 1e10de0:    50 b4             	r0 |= r2			  ## analog.c:829:21
 1e10de2:    58 48             	[r4 + 20] = r0			  ## analog.c:829:21
 1e10de4:    40 71             	r0 = 20			  ## analog.c:830:9
 1e10de6:    8f f3 ee 99       	call 2044892 <delay : 41c6 >			  ## analog.c:830:9
 1e10dea:    02 70             	r2 = 0
 1e10dec:    05 70             	r5 = 0
 1e10dee:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:833:25
 1e10df2:    f0 bc             	r0 &= 4261412863			  ## analog.c:833:25
 1e10df4:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:833:25
 1e10df8:    50 70             	r0 = 5			  ## analog.c:834:13
 1e10dfa:    8f f3 e4 99       	call 2044872 <delay : 41c6 >			  ## analog.c:834:13
 1e10dfe:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:835:25
 1e10e02:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:836:21
 1e10e06:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE812_1_1_+0x7F6 : 1e10e02 >			  ## analog.c:836:13
 1e10e0a:    04 f6 1c e0       	r4 = [r14 + 28]			  ## analog.c:838:24
 1e10e0e:    50 70             	r0 = 5			  ## analog.c:839:13
 1e10e10:    8f f3 d9 99       	call 2044850 <delay : 41c6 >			  ## analog.c:839:13
 1e10e14:    06 f6 20 e0       	r6 = [r14 + 32]			  ## analog.c:841:24
 1e10e18:    50 70             	r0 = 5			  ## analog.c:842:13
 1e10e1a:    8f f3 d4 99       	call 2044840 <delay : 41c6 >			  ## analog.c:842:13
 1e10e1e:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:840:29
 1e10e22:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:38
 1e10e26:    b0 fd 40 06       	r0 = sextra(r6, p:8, l:16)			  ## analog.c:843:29
 1e10e2a:    15 80             	r5 += 1			  ## analog.c:832:30
 1e10e2c:    64 05             	r4 = r5.l (u)			  ## analog.c:832:30
 1e10e2e:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:19
 1e10e32:    44 e1 dc 1f       	if (r4 != 20) goto -72 <.GJTIE812_1_1_+0x7E2 : 1e10dee >
 1e10e36:    70 fc 68 ff       	r0 = r7 + -152
 1e10e3a:    05 08             	r5 = r0
 1e10e3c:    50 4a             	r0 = [r5 + 20]
 1e10e3e:    e2 fd 80 40       	r4 = r0 & r8
 1e10e42:    e0 fe a0 02       	r0 = r2 / r10 (s)			  ## analog.c:846:14
 1e10e46:    5c 4a             	[r5 + 20] = r4
 1e10e48:    12 08             	r2 = r1			  ## analog.c:848:13
 1e10e4a:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE812_1_1_+0x844 : 1e10e50 >			  ## analog.c:848:13
 1e10e4e:    b2 08             	r2 = r11			  ## analog.c:848:13
 1e10e50:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE812_1_1_+0x84A : 1e10e56 >
 1e10e54:    30 08             	r0 = r3			  ## analog.c:848:13
 1e10e56:    11 80             	r1 += 1			  ## analog.c:826:28
 1e10e58:    64 04             	r4 = r1.l (u)			  ## analog.c:826:28
 1e10e5a:    03 08             	r3 = r0			  ## analog.c:826:28
 1e10e5c:    84 e2 b5 1f       	if (r4 != 40) goto -150 <.GJTIE812_1_1_+0x7BE : 1e10dca >
 1e10e60:    54 08             	r4 = r5
 1e10e62:    50 48             	r0 = [r4 + 20]			  ## analog.c:856:17
 1e10e64:    51 c2             	r1 = r2 << 9			  ## analog.c:856:21
 1e10e66:    c3 ff 00 fe 03 00 	r3 = 261632 <text_size+0x272B4 : 3fe00 >			  ## analog.c:856:21
 1e10e6c:    51 b7             	r1 &= r3			  ## analog.c:856:21
 1e10e6e:    50 b2             	r0 |= r1			  ## analog.c:856:17
 1e10e70:    58 48             	[r4 + 20] = r0			  ## analog.c:856:17
 1e10e72:    10 d2             	r0 = r2 >> 8			  ## analog.c:860:22
 1e10e74:    c1 ff 7c 2c 00 00 	r1 = 11388 <tws_bulk_pool_end : 2c7c >			  ## analog.c:860:22
 1e10e7a:    58 63             	b[r1 + 21] = r0			  ## analog.c:860:22
 1e10e7c:    4a 63             	b[r1 + 20] = r2			  ## analog.c:860:22
 1e10e7e:    20 4e             	r0 = [r7 + 8]			  ## analog.c:875:20
 1e10e80:    70 b8             	r0 &= 4294901759			  ## analog.c:875:20
 1e10e82:    28 4e             	[r7 + 8] = r0			  ## analog.c:875:20
 1e10e84:    20 70             	r0 = 2			  ## analog.c:876:5
 1e10e86:    8f f3 9e 99       	call 2044732 <delay : 41c6 >			  ## analog.c:876:5
 1e10e8a:    f0 49             	r0 = [r4 + 124]			  ## analog.c:877:13
 1e10e8c:    f0 b0             	r0 &= 4294967293			  ## analog.c:877:13
 1e10e8e:    f8 49             	[r4 + 124] = r0			  ## analog.c:877:13
 1e10e90:    20 70             	r0 = 2			  ## analog.c:878:5
 1e10e92:    8f f3 98 99       	call 2044720 <delay : 41c6 >			  ## analog.c:878:5
 1e10e96:    f0 49             	r0 = [r4 + 124]			  ## analog.c:879:13
 1e10e98:    70 b1             	r0 &= 4294967291			  ## analog.c:879:13
 1e10e9a:    f8 49             	[r4 + 124] = r0			  ## analog.c:879:13
 1e10e9c:    20 70             	r0 = 2			  ## analog.c:880:5
 1e10e9e:    8f f3 92 99       	call 2044708 <delay : 41c6 >			  ## analog.c:880:5
 1e10ea2:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:881:17
 1e10ea6:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## analog.c:881:17
 1e10eaa:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:881:17
 1e10eae:    20 70             	r0 = 2			  ## analog.c:882:5
 1e10eb0:    8f f3 89 99       	call 2044690 <delay : 41c6 >			  ## analog.c:882:5
 1e10eb4:    90 48             	r0 = [r4 + 36]			  ## analog.c:883:17
 1e10eb6:    f0 b5             	r0 &= 4294965247			  ## analog.c:883:17
 1e10eb8:    98 48             	[r4 + 36] = r0			  ## analog.c:883:17
 1e10eba:    bf f3 e2 f6       	call -4668 <bt_analog_part_init : 1e0fc82 >			  ## analog.c:266:9
 1e10ebe:    bf f3 45 f7       	call -4470 <reset_trim_info : 1e0fd4c >			  ## analog.c:268:9
 1e10ec2:    09 f6 00 d0       	r9 = [r13 + 0]			  ## analog.c:3725:29
 1e10ec6:    40 71             	r0 = 20			  ## analog.c:3726:5
 1e10ec8:    8f f3 7d 99       	call 2044666 <delay : 41c6 >			  ## analog.c:3726:5
 1e10ecc:    0b f6 04 d0       	r11 = [r13 + 4]			  ## analog.c:3727:29
 1e10ed0:    40 71             	r0 = 20			  ## analog.c:3728:5
 1e10ed2:    8f f3 78 99       	call 2044656 <delay : 41c6 >			  ## analog.c:3728:5
 1e10ed6:    00 f6 08 d0       	r0 = [r13 + 8]			  ## analog.c:3729:29
 1e10eda:    38 02             	[sp+12] = r0			  ## analog.c:3730:5
 1e10edc:    40 71             	r0 = 20			  ## analog.c:3730:5
 1e10ede:    8f f3 72 99       	call 2044644 <delay : 41c6 >			  ## analog.c:3730:5
 1e10ee2:    08 f6 0c d0       	r8 = [r13 + 12]			  ## analog.c:3731:29
 1e10ee6:    40 71             	r0 = 20			  ## analog.c:3732:5
 1e10ee8:    8f f3 6d 99       	call 2044634 <delay : 41c6 >			  ## analog.c:3732:5
 1e10eec:    0c f6 10 d0       	r12 = [r13 + 16]			  ## analog.c:3733:29
 1e10ef0:    40 71             	r0 = 20			  ## analog.c:3734:5
 1e10ef2:    8f f3 68 99       	call 2044624 <delay : 41c6 >			  ## analog.c:3734:5
 1e10ef6:    00 f6 14 d0       	r0 = [r13 + 20]			  ## analog.c:3735:29
 1e10efa:    28 02             	[sp+8] = r0			  ## analog.c:3736:5
 1e10efc:    40 71             	r0 = 20			  ## analog.c:3736:5
 1e10efe:    8f f3 62 99       	call 2044612 <delay : 41c6 >			  ## analog.c:3736:5
 1e10f02:    0f f6 18 d0       	r15 = [r13 + 24]			  ## analog.c:3737:29
 1e10f06:    40 71             	r0 = 20			  ## analog.c:3738:5
 1e10f08:    8f f3 5d 99       	call 2044602 <delay : 41c6 >			  ## analog.c:3738:5
 1e10f0c:    d4 08             	r4 = r13			  ## analog.c:3738:5
 1e10f0e:    0d f6 20 40       	r13 = [r4 + 32]			  ## analog.c:3739:29
 1e10f12:    40 71             	r0 = 20			  ## analog.c:3740:5
 1e10f14:    8f f3 57 99       	call 2044590 <delay : 41c6 >			  ## analog.c:3740:5
 1e10f18:    90 48             	r0 = [r4 + 36]			  ## analog.c:3741:29
 1e10f1a:    40 71             	r0 = 20			  ## analog.c:3742:5
 1e10f1c:    8f f3 53 99       	call 2044582 <delay : 41c6 >			  ## analog.c:3742:5
 1e10f20:    a0 48             	r0 = [r4 + 40]			  ## analog.c:3743:30
 1e10f22:    40 71             	r0 = 20			  ## analog.c:3744:5
 1e10f24:    8f f3 4f 99       	call 2044574 <delay : 41c6 >			  ## analog.c:3744:5
 1e10f28:    00 70             	r0 = 0			  ## analog.c:3744:5
 1e10f2a:    ce ff 93 2c 00 00 	r14 = 11411 <ldo_trim_res : 2c93 >			  ## analog.c:3744:5
 1e10f30:    10 f9 09 e0       	b[r14 + 9] = r0			  ## analog.c:3765:29
 1e10f34:    10 f9 07 e0       	b[r14 + 7] = r0			  ## analog.c:3758:34
 1e10f38:    10 f9 06 e0       	b[r14 + 6] = r0			  ## analog.c:3758:34
 1e10f3c:    10 f9 05 e0       	b[r14 + 5] = r0			  ## analog.c:3758:34
 1e10f40:    10 f9 04 e0       	b[r14 + 4] = r0			  ## analog.c:3758:34
 1e10f44:    10 f9 03 e0       	b[r14 + 3] = r0			  ## analog.c:3758:34
 1e10f48:    10 f9 02 e0       	b[r14 + 2] = r0			  ## analog.c:3758:34
 1e10f4c:    10 f9 01 e0       	b[r14 + 1] = r0			  ## analog.c:3758:34
 1e10f50:    10 f9 00 e0       	b[r14 + 0] = r0			  ## analog.c:3758:34
 1e10f54:    00 f9 0c e0       	r0 = b[r14 + 12] (u)			  ## analog.c:3767:35
 1e10f58:    01 f9 0b e0       	r1 = b[r14 + 11] (u)			  ## analog.c:3767:35
 1e10f5c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## analog.c:3767:35
 1e10f60:    20 fd fd 1a       	r0 = r1 & 64768			  ## analog.c:3775:28
 1e10f64:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3775:28
 1e10f68:    00 d2             	r0 = r0 >> 8			  ## analog.c:3775:28
 1e10f6a:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3775:28
 1e10f6e:    97 f3 15 af       	call 3104298 <local_irq_disable : 106d9c >			  ## analog.c:3777:5
 1e10f72:    b0 48             	r0 = [r4 + 44]			  ## analog.c:3222:23
 1e10f74:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e10f78:    b8 48             	[r4 + 44] = r0			  ## analog.c:3222:23
 1e10f7a:    0b f4 28 4b       	[r4 + 44] |= 2621440			  ## analog.c:3222:23
 1e10f7e:    40 71             	r0 = 20			  ## analog.c:3781:5
 1e10f80:    8f f3 21 99       	call 2044482 <delay : 41c6 >			  ## analog.c:3781:5
 1e10f84:    00 f9 00 e0       	r0 = b[r14 + 0] (u)			  ## analog.c:3781:5
 1e10f88:    c4 ff ff 03 f8 ff 	r4 = 4294444031 <bank_code_load_addr+0x1659DB : 1f803ff >			  ## analog.c:3781:5
 1e10f8e:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10f94:    12 08             	r2 = r1
 1e10f96:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3235:23
 1e10f98:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3235:23
 1e10f9c:    a9 44             	[r2 + 40] = r1			  ## analog.c:3235:23
 1e10f9e:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3237:23
 1e10fa0:    51 b9             	r1 &= r4			  ## analog.c:3237:23
 1e10fa2:    b9 44             	[r2 + 44] = r1			  ## analog.c:3237:23
 1e10fa4:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3241:23
 1e10fa8:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3243:23
 1e10faa:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3243:29
 1e10fae:    80 c2             	r0 = r0 << 10			  ## analog.c:3243:29
 1e10fb0:    50 b2             	r0 |= r1			  ## analog.c:3243:23
 1e10fb2:    00 fd 54 03       	r0 = r0 | 434176			  ## analog.c:3243:23
 1e10fb6:    b8 44             	[r2 + 44] = r0			  ## analog.c:3243:23
 1e10fb8:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3785:9
 1e10fbc:    8f f3 03 99       	call 2044422 <delay : 41c6 >			  ## analog.c:3785:9
 1e10fc0:    20 70             	r0 = 2			  ## analog.c:3786:13
 1e10fc2:    bf f3 c3 f7       	call -4218 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3786:13
 1e10fc6:    01 f9 00 e0       	r1 = b[r14 + 0] (u)			  ## analog.c:3786:13
 1e10fca:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE812_1_1_+0x9D2 : 1e10fde >			  ## analog.c:3786:13
 1e10fd0:    10 92             	r0 = r1 + 1			  ## analog.c:3789:40
 1e10fd2:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3789:40
 1e10fd4:    10 f9 00 e0       	b[r14 + 0] = r0			  ## analog.c:3789:40
 1e10fd8:    81 e0 d9 3f       	if (r1 < 8) goto -78 <.GJTIE812_1_1_+0x982 : 1e10f8e >			  ## analog.c:3789:40
 1e10fdc:    02 18             	goto 4 <.GJTIE812_1_1_+0x9D6 : 1e10fe2 >			  ## analog.c:3789:40
 1e10fde:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0x9DC : 1e10fe8 >
 1e10fe2:    71 70             	r1 = 7
 1e10fe4:    11 f9 00 e0       	b[r14 + 0] = r1			  ## analog.c:3793:40
 1e10fe8:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e10fec:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e10ff0:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e10ff4:    03 fd 01 29       	r3 = r2 | 1			  ## analog.c:3800:39
 1e10ff8:    30 fd 01 29       	r0 = r2 & 4294967294			  ## analog.c:3797:39
 1e10ffc:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:3796:85
 1e11000:    02 08             	r2 = r0			  ## analog.c:3796:71
 1e11002:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE812_1_1_+0x9FC : 1e11008 >			  ## analog.c:3796:71
 1e11006:    32 08             	r2 = r3			  ## analog.c:3796:71
 1e11008:    d1 8f             	r1 += -3			  ## analog.c:3796:41
 1e1100a:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xA04 : 1e11010 >			  ## analog.c:3796:41
 1e1100e:    20 08             	r0 = r2			  ## analog.c:3796:71
 1e11010:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3797:39
 1e11014:    00 d2             	r0 = r0 >> 8			  ## analog.c:3797:39
 1e11016:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3797:39
 1e1101a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11020:    01 08             	r1 = r0
 1e11022:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e11024:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e11028:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e1102a:    0b f4 38 1b       	[r1 + 44] |= 3670016			  ## analog.c:3222:23
 1e1102e:    40 71             	r0 = 20			  ## analog.c:3810:5
 1e11030:    8f f3 c9 98       	call 2044306 <delay : 41c6 >			  ## analog.c:3810:5
 1e11034:    00 f9 01 e0       	r0 = b[r14 + 1] (u)			  ## analog.c:3810:5
 1e11038:    c5 ff 00 14 06 00 	r5 = 398336 <text_size+0x488B4 : 61400 >			  ## analog.c:3810:5
 1e1103e:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11044:    12 08             	r2 = r1
 1e11046:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3250:23
 1e11048:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3250:23
 1e1104c:    a9 44             	[r2 + 40] = r1			  ## analog.c:3250:23
 1e1104e:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3252:23
 1e11050:    51 b9             	r1 &= r4			  ## analog.c:3252:23
 1e11052:    b9 44             	[r2 + 44] = r1			  ## analog.c:3252:23
 1e11054:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3256:23
 1e11058:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3258:23
 1e1105a:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3259:29
 1e1105e:    40 c3             	r0 = r0 << 13			  ## analog.c:3259:29
 1e11060:    50 b2             	r0 |= r1			  ## analog.c:3258:23
 1e11062:    50 ba             	r0 |= r5			  ## analog.c:3258:23
 1e11064:    b8 44             	[r2 + 44] = r0			  ## analog.c:3258:23
 1e11066:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3814:9
 1e1106a:    8f f3 ac 98       	call 2044248 <delay : 41c6 >			  ## analog.c:3814:9
 1e1106e:    20 70             	r0 = 2			  ## analog.c:3815:13
 1e11070:    bf f3 6c f7       	call -4392 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3815:13
 1e11074:    01 f9 01 e0       	r1 = b[r14 + 1] (u)			  ## analog.c:3815:13
 1e11078:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE812_1_1_+0xA80 : 1e1108c >			  ## analog.c:3815:13
 1e1107e:    10 92             	r0 = r1 + 1			  ## analog.c:3818:38
 1e11080:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3818:38
 1e11082:    10 f9 01 e0       	b[r14 + 1] = r0			  ## analog.c:3818:38
 1e11086:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE812_1_1_+0xA32 : 1e1103e >			  ## analog.c:3818:38
 1e1108a:    02 18             	goto 4 <.GJTIE812_1_1_+0xA84 : 1e11090 >			  ## analog.c:3818:38
 1e1108c:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xA8A : 1e11096 >
 1e11090:    71 70             	r1 = 7
 1e11092:    11 f9 01 e0       	b[r14 + 1] = r1			  ## analog.c:3822:38
 1e11096:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1109a:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e1109e:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e110a2:    03 fd 02 29       	r3 = r2 | 2			  ## analog.c:3829:37
 1e110a6:    30 fd 02 29       	r0 = r2 & 4294967293			  ## analog.c:3826:37
 1e110aa:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:3825:93
 1e110ae:    02 08             	r2 = r0			  ## analog.c:3825:74
 1e110b0:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE812_1_1_+0xAAA : 1e110b6 >			  ## analog.c:3825:74
 1e110b4:    32 08             	r2 = r3			  ## analog.c:3825:74
 1e110b6:    d1 8f             	r1 += -3			  ## analog.c:3825:39
 1e110b8:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xAB2 : 1e110be >			  ## analog.c:3825:39
 1e110bc:    20 08             	r0 = r2			  ## analog.c:3825:74
 1e110be:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3826:37
 1e110c2:    00 d2             	r0 = r0 >> 8			  ## analog.c:3826:37
 1e110c4:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3826:37
 1e110c8:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e110ce:    01 08             	r1 = r0
 1e110d0:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e110d2:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e110d6:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e110d8:    0b f4 48 1b       	[r1 + 44] |= 4718592			  ## analog.c:3222:23
 1e110dc:    40 71             	r0 = 20			  ## analog.c:3839:5
 1e110de:    8f f3 72 98       	call 2044132 <delay : 41c6 >			  ## analog.c:3839:5
 1e110e2:    00 f9 02 e0       	r0 = b[r14 + 2] (u)			  ## analog.c:3839:5
 1e110e6:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e110ec:    12 08             	r2 = r1
 1e110ee:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3265:23
 1e110f0:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3265:23
 1e110f4:    a9 44             	[r2 + 40] = r1			  ## analog.c:3265:23
 1e110f6:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3267:23
 1e110f8:    51 b9             	r1 &= r4			  ## analog.c:3267:23
 1e110fa:    b9 44             	[r2 + 44] = r1			  ## analog.c:3267:23
 1e110fc:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3271:23
 1e11100:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3273:23
 1e11102:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3275:29
 1e11106:    00 c4             	r0 = r0 << 16			  ## analog.c:3275:29
 1e11108:    50 b2             	r0 |= r1			  ## analog.c:3273:23
 1e1110a:    00 fd b4 0a       	r0 = r0 | 46080			  ## analog.c:3273:23
 1e1110e:    b8 44             	[r2 + 44] = r0			  ## analog.c:3273:23
 1e11110:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3843:9
 1e11114:    8f f3 57 98       	call 2044078 <delay : 41c6 >			  ## analog.c:3843:9
 1e11118:    20 70             	r0 = 2			  ## analog.c:3844:13
 1e1111a:    bf f3 17 f7       	call -4562 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3844:13
 1e1111e:    01 f9 02 e0       	r1 = b[r14 + 2] (u)			  ## analog.c:3844:13
 1e11122:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE812_1_1_+0xB2A : 1e11136 >			  ## analog.c:3844:13
 1e11128:    10 92             	r0 = r1 + 1			  ## analog.c:3847:35
 1e1112a:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3847:35
 1e1112c:    10 f9 02 e0       	b[r14 + 2] = r0			  ## analog.c:3847:35
 1e11130:    81 e0 d9 3f       	if (r1 < 8) goto -78 <.GJTIE812_1_1_+0xADA : 1e110e6 >			  ## analog.c:3847:35
 1e11134:    02 18             	goto 4 <.GJTIE812_1_1_+0xB2E : 1e1113a >			  ## analog.c:3847:35
 1e11136:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xB34 : 1e11140 >
 1e1113a:    71 70             	r1 = 7
 1e1113c:    11 f9 02 e0       	b[r14 + 2] = r1			  ## analog.c:3851:35
 1e11140:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e11144:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e11148:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e1114c:    03 fd 04 29       	r3 = r2 | 4			  ## analog.c:3858:34
 1e11150:    30 fd 04 29       	r0 = r2 & 4294967291			  ## analog.c:3855:34
 1e11154:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:3854:86
 1e11158:    02 08             	r2 = r0			  ## analog.c:3854:69
 1e1115a:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE812_1_1_+0xB54 : 1e11160 >			  ## analog.c:3854:69
 1e1115e:    32 08             	r2 = r3			  ## analog.c:3854:69
 1e11160:    d1 8f             	r1 += -3			  ## analog.c:3854:36
 1e11162:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xB5C : 1e11168 >			  ## analog.c:3854:36
 1e11166:    20 08             	r0 = r2			  ## analog.c:3854:69
 1e11168:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3855:34
 1e1116c:    00 d2             	r0 = r0 >> 8			  ## analog.c:3855:34
 1e1116e:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3855:34
 1e11172:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11178:    01 08             	r1 = r0
 1e1117a:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e1117c:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e11180:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e11182:    0b f4 58 1b       	[r1 + 44] |= 5767168			  ## analog.c:3222:23
 1e11186:    40 71             	r0 = 20			  ## analog.c:3868:5
 1e11188:    8f f3 1d 98       	call 2043962 <delay : 41c6 >			  ## analog.c:3868:5
 1e1118c:    00 f9 03 e0       	r0 = b[r14 + 3] (u)			  ## analog.c:3868:5
 1e11190:    c5 ff 00 b4 06 00 	r5 = 439296 <text_size+0x528B4 : 6b400 >			  ## analog.c:3868:5
 1e11196:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1119c:    12 08             	r2 = r1
 1e1119e:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3281:23
 1e111a0:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3281:23
 1e111a4:    a9 44             	[r2 + 40] = r1			  ## analog.c:3281:23
 1e111a6:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3283:23
 1e111a8:    51 b9             	r1 &= r4			  ## analog.c:3283:23
 1e111aa:    b9 44             	[r2 + 44] = r1			  ## analog.c:3283:23
 1e111ac:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3287:23
 1e111ae:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3287:29
 1e111b2:    00 c6             	r0 = r0 << 24			  ## analog.c:3287:29
 1e111b4:    50 b2             	r0 |= r1			  ## analog.c:3287:23
 1e111b6:    a8 44             	[r2 + 40] = r0			  ## analog.c:3287:23
 1e111b8:    b0 44             	r0 = [r2 + 44]			  ## analog.c:3289:23
 1e111ba:    50 ba             	r0 |= r5			  ## analog.c:3289:23
 1e111bc:    b8 44             	[r2 + 44] = r0			  ## analog.c:3289:23
 1e111be:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3872:9
 1e111c2:    8f f3 00 98       	call 2043904 <delay : 41c6 >			  ## analog.c:3872:9
 1e111c6:    20 70             	r0 = 2			  ## analog.c:3873:13
 1e111c8:    bf f3 c0 f6       	call -4736 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3873:13
 1e111cc:    01 f9 03 e0       	r1 = b[r14 + 3] (u)			  ## analog.c:3873:13
 1e111d0:    08 ff 84 03 07 00 	if (r0 > 900) goto 14 <.GJTIE812_1_1_+0xBD8 : 1e111e4 >			  ## analog.c:3873:13
 1e111d6:    10 92             	r0 = r1 + 1			  ## analog.c:3876:35
 1e111d8:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3876:35
 1e111da:    10 f9 03 e0       	b[r14 + 3] = r0			  ## analog.c:3876:35
 1e111de:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE812_1_1_+0xB8A : 1e11196 >			  ## analog.c:3876:35
 1e111e2:    02 18             	goto 4 <.GJTIE812_1_1_+0xBDC : 1e111e8 >			  ## analog.c:3876:35
 1e111e4:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xBE2 : 1e111ee >
 1e111e8:    71 70             	r1 = 7
 1e111ea:    11 f9 03 e0       	b[r14 + 3] = r1			  ## analog.c:3880:35
 1e111ee:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e111f2:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e111f6:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e111fa:    03 fd 08 29       	r3 = r2 | 8			  ## analog.c:3887:34
 1e111fe:    30 fd 08 29       	r0 = r2 & 4294967287			  ## analog.c:3884:34
 1e11202:    64 fb 02 19       	r4 = 2 - r1			  ## analog.c:3883:86
 1e11206:    02 08             	r2 = r0			  ## analog.c:3883:69
 1e11208:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE812_1_1_+0xC02 : 1e1120e >			  ## analog.c:3883:69
 1e1120c:    32 08             	r2 = r3			  ## analog.c:3883:69
 1e1120e:    e1 8f             	r1 += -2			  ## analog.c:3883:36
 1e11210:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xC0A : 1e11216 >			  ## analog.c:3883:36
 1e11214:    20 08             	r0 = r2			  ## analog.c:3883:69
 1e11216:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3884:34
 1e1121a:    00 d2             	r0 = r0 >> 8			  ## analog.c:3884:34
 1e1121c:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3884:34
 1e11220:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11226:    01 08             	r1 = r0
 1e11228:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3222:23
 1e1122a:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3222:23
 1e1122e:    b8 42             	[r1 + 44] = r0			  ## analog.c:3222:23
 1e11230:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3228:27
 1e11232:    b8 42             	[r1 + 44] = r0			  ## analog.c:3228:27
 1e11234:    40 71             	r0 = 20			  ## analog.c:3898:5
 1e11236:    8f f3 c6 97       	call 2043788 <delay : 41c6 >			  ## analog.c:3898:5
 1e1123a:    00 f9 04 e0       	r0 = b[r14 + 4] (u)			  ## analog.c:3898:5
 1e1123e:    c4 ff e1 ff 1f ff 	r4 = 4280287201 <uECC_vli_cmp_unsafe+0x10F8FE5 : 11fffe1 >			  ## analog.c:3898:5
 1e11244:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1124a:    12 08             	r2 = r1
 1e1124c:    81 44             	r1 = [r2 + 32]			  ## analog.c:3332:22
 1e1124e:    51 b9             	r1 &= r4			  ## analog.c:3332:22
 1e11250:    89 44             	[r2 + 32] = r1			  ## analog.c:3332:22
 1e11252:    81 44             	r1 = [r2 + 32]			  ## analog.c:3337:22
 1e11254:    80 c0             	r0 = r0 << 2			  ## analog.c:3338:25
 1e11256:    20 fd 1c 09       	r0 = r0 & 28			  ## analog.c:3338:25
 1e1125a:    50 b2             	r0 |= r1			  ## analog.c:3337:22
 1e1125c:    00 fd 60 0b       	r0 = r0 | 6291456			  ## analog.c:3337:22
 1e11260:    88 44             	[r2 + 32] = r0			  ## analog.c:3337:22
 1e11262:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3902:9
 1e11266:    8f f3 ae 97       	call 2043740 <delay : 41c6 >			  ## analog.c:3902:9
 1e1126a:    10 70             	r0 = 1			  ## analog.c:3903:13
 1e1126c:    bf f3 6e f6       	call -4900 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3903:13
 1e11270:    01 f9 04 e0       	r1 = b[r14 + 4] (u)			  ## analog.c:3903:13
 1e11274:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE812_1_1_+0xC7C : 1e11288 >			  ## analog.c:3903:13
 1e1127a:    10 92             	r0 = r1 + 1			  ## analog.c:3906:35
 1e1127c:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3906:35
 1e1127e:    10 f9 04 e0       	b[r14 + 4] = r0			  ## analog.c:3906:35
 1e11282:    81 e0 df 3f       	if (r1 < 8) goto -66 <.GJTIE812_1_1_+0xC38 : 1e11244 >			  ## analog.c:3906:35
 1e11286:    02 18             	goto 4 <.GJTIE812_1_1_+0xC80 : 1e1128c >			  ## analog.c:3906:35
 1e11288:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xC86 : 1e11292 >
 1e1128c:    71 70             	r1 = 7
 1e1128e:    11 f9 04 e0       	b[r14 + 4] = r1			  ## analog.c:3910:35
 1e11292:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e11296:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e1129a:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e1129e:    03 fd 10 29       	r3 = r2 | 16			  ## analog.c:3917:34
 1e112a2:    30 fd 10 29       	r0 = r2 & 4294967279			  ## analog.c:3914:34
 1e112a6:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:3913:84
 1e112aa:    02 08             	r2 = r0			  ## analog.c:3913:68
 1e112ac:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE812_1_1_+0xCA6 : 1e112b2 >			  ## analog.c:3913:68
 1e112b0:    32 08             	r2 = r3			  ## analog.c:3913:68
 1e112b2:    d1 8f             	r1 += -3			  ## analog.c:3913:36
 1e112b4:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xCAE : 1e112ba >			  ## analog.c:3913:36
 1e112b8:    20 08             	r0 = r2			  ## analog.c:3913:68
 1e112ba:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3914:34
 1e112be:    00 d2             	r0 = r0 >> 8			  ## analog.c:3914:34
 1e112c0:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3914:34
 1e112c4:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3914:34
 1e112ca:    1d f6 20 00       	[r0 + 32] = r13			  ## analog.c:3923:22
 1e112ce:    05 08             	r5 = r0			  ## analog.c:3923:22
 1e112d0:    80 7c             	r0 = 200			  ## analog.c:3932:5
 1e112d2:    8f f3 78 97       	call 2043632 <delay : 41c6 >			  ## analog.c:3932:5
 1e112d6:    00 f9 05 e0       	r0 = b[r14 + 5] (u)			  ## analog.c:3932:5
 1e112da:    ca ff e5 53 a7 44 	r10 = 1151816677 <uECC_vli_cmp_unsafe+0x96E3E9 : a753e5 >			  ## analog.c:3932:5
 1e112e0:    c4 ff 00 3e 0d 02 	r4 = 34422272 <text_size+0xBB2B4 : d3e00 >			  ## analog.c:3932:5
 1e112e6:    c6 ff 05 16 6d 01 	r6 = 23926277 <uECC_vli_cmp_unsafe+0x15CA609 : 16d1605 >			  ## analog.c:3932:5
 1e112ec:    1a f6 00 50       	[r5 + 0] = r10			  ## analog.c:3350:22
 1e112f0:    3c 4a             	[r5 + 12] = r4			  ## analog.c:3365:22
 1e112f2:    40 c1             	r0 = r0 << 5			  ## analog.c:3380:25
 1e112f4:    00 04             	r0 = r0.b0 (u)			  ## analog.c:3379:52
 1e112f6:    50 bc             	r0 |= r6			  ## analog.c:3390:52
 1e112f8:    48 4a             	[r5 + 16] = r0			  ## analog.c:3376:22
 1e112fa:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3936:9
 1e112fe:    8f f3 62 97       	call 2043588 <delay : 41c6 >			  ## analog.c:3936:9
 1e11302:    20 70             	r0 = 2			  ## analog.c:3937:13
 1e11304:    bf f3 22 f6       	call -5052 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3937:13
 1e11308:    01 f9 05 e0       	r1 = b[r14 + 5] (u)			  ## analog.c:3937:13
 1e1130c:    08 ff 4c 04 07 00 	if (r0 > 1100) goto 14 <.GJTIE812_1_1_+0xD14 : 1e11320 >			  ## analog.c:3937:13
 1e11312:    10 92             	r0 = r1 + 1			  ## analog.c:3940:36
 1e11314:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3940:36
 1e11316:    10 f9 05 e0       	b[r14 + 5] = r0			  ## analog.c:3940:36
 1e1131a:    81 e0 e7 3f       	if (r1 < 8) goto -50 <.GJTIE812_1_1_+0xCE0 : 1e112ec >			  ## analog.c:3940:36
 1e1131e:    02 18             	goto 4 <.GJTIE812_1_1_+0xD18 : 1e11324 >			  ## analog.c:3940:36
 1e11320:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xD1E : 1e1132a >
 1e11324:    71 70             	r1 = 7
 1e11326:    11 f9 05 e0       	b[r14 + 5] = r1			  ## analog.c:3944:36
 1e1132a:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1132e:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e11332:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e11336:    03 fd 20 29       	r3 = r2 | 32			  ## analog.c:3951:35
 1e1133a:    30 fd 20 29       	r0 = r2 & 4294967263			  ## analog.c:3948:35
 1e1133e:    66 fb 04 19       	r6 = 4 - r1			  ## analog.c:3947:95
 1e11342:    02 08             	r2 = r0			  ## analog.c:3947:74
 1e11344:    16 e0 01 c0       	ifs (r6 > 1) goto 2 <.GJTIE812_1_1_+0xD3E : 1e1134a >			  ## analog.c:3947:74
 1e11348:    32 08             	r2 = r3			  ## analog.c:3947:74
 1e1134a:    c1 8f             	r1 += -4			  ## analog.c:3947:37
 1e1134c:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xD46 : 1e11352 >			  ## analog.c:3947:37
 1e11350:    20 08             	r0 = r2			  ## analog.c:3947:74
 1e11352:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3948:35
 1e11356:    00 d2             	r0 = r0 >> 8			  ## analog.c:3948:35
 1e11358:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3948:35
 1e1135c:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:3955:22
 1e11360:    18 f6 0c 50       	[r5 + 12] = r8			  ## analog.c:3956:22
 1e11364:    1c f6 10 50       	[r5 + 16] = r12			  ## analog.c:3957:22
 1e11368:    40 71             	r0 = 20			  ## analog.c:3966:5
 1e1136a:    8f f3 2c 97       	call 2043480 <delay : 41c6 >			  ## analog.c:3966:5
 1e1136e:    00 f9 06 e0       	r0 = b[r14 + 6] (u)			  ## analog.c:3966:5
 1e11372:    c6 ff a5 16 0d 01 	r6 = 17634981 <uECC_vli_cmp_unsafe+0xFCA6A9 : 10d16a5 >			  ## analog.c:3966:5
 1e11378:    1a f6 00 50       	[r5 + 0] = r10			  ## analog.c:3403:22
 1e1137c:    3c 4a             	[r5 + 12] = r4			  ## analog.c:3418:22
 1e1137e:    80 c5             	r0 = r0 << 22			  ## analog.c:3443:26
 1e11380:    20 fd c0 0b       	r0 = r0 & 12582912			  ## analog.c:3443:26
 1e11384:    50 bc             	r0 |= r6			  ## analog.c:3443:55
 1e11386:    48 4a             	[r5 + 16] = r0			  ## analog.c:3429:22
 1e11388:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:3970:9
 1e1138c:    8f f3 1b 97       	call 2043446 <delay : 41c6 >			  ## analog.c:3970:9
 1e11390:    20 70             	r0 = 2			  ## analog.c:3971:13
 1e11392:    bf f3 db f5       	call -5194 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:3971:13
 1e11396:    01 f9 06 e0       	r1 = b[r14 + 6] (u)			  ## analog.c:3971:13
 1e1139a:    08 ff 52 03 07 00 	if (r0 > 850) goto 14 <.GJTIE812_1_1_+0xDA2 : 1e113ae >			  ## analog.c:3971:13
 1e113a0:    10 92             	r0 = r1 + 1			  ## analog.c:3974:36
 1e113a2:    01 04             	r1 = r0.b0 (u)			  ## analog.c:3974:36
 1e113a4:    10 f9 06 e0       	b[r14 + 6] = r0			  ## analog.c:3974:36
 1e113a8:    41 e0 e6 3f       	if (r1 < 4) goto -52 <.GJTIE812_1_1_+0xD6C : 1e11378 >			  ## analog.c:3974:36
 1e113ac:    02 18             	goto 4 <.GJTIE812_1_1_+0xDA6 : 1e113b2 >			  ## analog.c:3974:36
 1e113ae:    41 e0 03 30       	if (r1 < 4) goto 6 <.GJTIE812_1_1_+0xDAC : 1e113b8 >
 1e113b2:    31 70             	r1 = 3
 1e113b4:    11 f9 06 e0       	b[r14 + 6] = r1			  ## analog.c:3978:36
 1e113b8:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e113bc:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e113c0:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)
 1e113c4:    c0 ff bf ff 00 00 	r0 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## analog.c:3982:35
 1e113ca:    50 b5             	r0 &= r2			  ## analog.c:3982:35
 1e113cc:    12 b3             	r2 |= 64			  ## analog.c:3985:35
 1e113ce:    f1 8f             	r1 += -1			  ## analog.c:3981:37
 1e113d0:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xDCA : 1e113d6 >			  ## analog.c:3981:37
 1e113d4:    20 08             	r0 = r2			  ## analog.c:3981:74
 1e113d6:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:3982:35
 1e113da:    00 d2             	r0 = r0 >> 8			  ## analog.c:3982:35
 1e113dc:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:3982:35
 1e113e0:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:3989:22
 1e113e4:    18 f6 0c 50       	[r5 + 12] = r8			  ## analog.c:3990:22
 1e113e8:    1c f6 10 50       	[r5 + 16] = r12			  ## analog.c:3991:22
 1e113ec:    40 71             	r0 = 20			  ## analog.c:4000:5
 1e113ee:    8f f3 ea 96       	call 2043348 <delay : 41c6 >			  ## analog.c:4000:5
 1e113f2:    00 f9 07 e0       	r0 = b[r14 + 7] (u)			  ## analog.c:4000:5
 1e113f6:    c4 ff 96 18 1a 00 	r4 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## analog.c:4000:5
 1e113fc:    a8 fc 00 80       	r8 = r10 + -32768			  ## analog.c:4000:5
 1e11400:    ca ff 9b c5 d0 08 	r10 = 147899803 <uECC_vli_cmp_unsafe+0xC0559F : d0c59b >			  ## analog.c:4000:5
 1e11406:    c6 ff 5a 13 e6 ff 	r6 = 4293268314 <bank_code_load_addr+0x46936 : 1e6135a >			  ## analog.c:4000:5
 1e1140c:    01 68             	r1 = b[r4 + 0] (u)			  ## analog.c:3455:5
 1e1140e:    21 fd f8 19       	r1 = r1 & 248			  ## analog.c:3455:5
 1e11412:    11 b1             	r1 |= 4			  ## analog.c:3455:5
 1e11414:    09 68             	b[r4 + 0] = r1			  ## analog.c:3455:5
 1e11416:    18 f6 00 50       	[r5 + 0] = r8			  ## analog.c:3457:22
 1e1141a:    1a f6 14 50       	[r5 + 20] = r10			  ## analog.c:3472:23
 1e1141e:    80 c3             	r0 = r0 << 14			  ## analog.c:3500:25
 1e11420:    20 fd 60 02       	r0 = r0 & 114688			  ## analog.c:3500:25
 1e11424:    50 bc             	r0 |= r6			  ## analog.c:3504:52
 1e11426:    68 4a             	[r5 + 24] = r0			  ## analog.c:3495:22
 1e11428:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:4004:9
 1e1142c:    8f f3 cb 96       	call 2043286 <delay : 41c6 >			  ## analog.c:4004:9
 1e11430:    20 70             	r0 = 2			  ## analog.c:4005:13
 1e11432:    bf f3 8b f5       	call -5354 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:4005:13
 1e11436:    01 f9 07 e0       	r1 = b[r14 + 7] (u)			  ## analog.c:4005:13
 1e1143a:    08 ff 1a 04 07 00 	if (r0 > 1050) goto 14 <.GJTIE812_1_1_+0xE42 : 1e1144e >			  ## analog.c:4005:13
 1e11440:    10 92             	r0 = r1 + 1			  ## analog.c:4008:35
 1e11442:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4008:35
 1e11444:    10 f9 07 e0       	b[r14 + 7] = r0			  ## analog.c:4008:35
 1e11448:    81 e0 e0 3f       	if (r1 < 8) goto -64 <.GJTIE812_1_1_+0xE00 : 1e1140c >			  ## analog.c:4008:35
 1e1144c:    02 18             	goto 4 <.GJTIE812_1_1_+0xE46 : 1e11452 >			  ## analog.c:4008:35
 1e1144e:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xE4C : 1e11458 >
 1e11452:    71 70             	r1 = 7
 1e11454:    11 f9 07 e0       	b[r14 + 7] = r1			  ## analog.c:4012:35
 1e11458:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e1145c:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e11460:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e11464:    03 fd 80 29       	r3 = r2 | 128			  ## analog.c:4019:34
 1e11468:    30 fd 80 29       	r0 = r2 & 4294967167			  ## analog.c:4016:34
 1e1146c:    66 fb 03 19       	r6 = 3 - r1			  ## analog.c:4015:92
 1e11470:    02 08             	r2 = r0			  ## analog.c:4015:72
 1e11472:    16 e0 01 c0       	ifs (r6 > 1) goto 2 <.GJTIE812_1_1_+0xE6C : 1e11478 >			  ## analog.c:4015:72
 1e11476:    32 08             	r2 = r3			  ## analog.c:4015:72
 1e11478:    d1 8f             	r1 += -3			  ## analog.c:4015:36
 1e1147a:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xE74 : 1e11480 >			  ## analog.c:4015:36
 1e1147e:    20 08             	r0 = r2			  ## analog.c:4015:72
 1e11480:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:4016:34
 1e11484:    00 d2             	r0 = r0 >> 8			  ## analog.c:4016:34
 1e11486:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:4016:34
 1e1148a:    00 68             	r0 = b[r4 + 0] (u)			  ## analog.c:4023:5
 1e1148c:    20 fd f8 09       	r0 = r0 & 248			  ## analog.c:4023:5
 1e11490:    00 fd 03 09       	r0 = r0 | 3			  ## analog.c:4023:5
 1e11494:    08 68             	b[r4 + 0] = r0			  ## analog.c:4023:5
 1e11496:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:4024:22
 1e1149a:    20 02             	r0 = [sp+8]			  ## analog.c:4025:22
 1e1149c:    58 4a             	[r5 + 20] = r0			  ## analog.c:4025:22
 1e1149e:    1f f6 18 50       	[r5 + 24] = r15			  ## analog.c:4026:22
 1e114a2:    40 71             	r0 = 20			  ## analog.c:4035:5
 1e114a4:    8f f3 8f 96       	call 2043166 <delay : 41c6 >			  ## analog.c:4035:5
 1e114a8:    00 f9 09 e0       	r0 = b[r14 + 9] (u)			  ## analog.c:4035:5
 1e114ac:    c4 ff e5 d2 0f 49 	r4 = 1225773797 <uECC_vli_cmp_unsafe+0xFF62E9 : 10fd2e5 >			  ## analog.c:4035:5
 1e114b2:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3522:24
 1e114b6:    41 08             	r1 = r4			  ## analog.c:3524:51
 1e114b8:    c3 fd a8 10       	r1 <= insert(r0, p:21, l:3)			  ## analog.c:3524:51
 1e114bc:    09 4a             	[r5 + 0] = r1			  ## analog.c:3512:22
 1e114be:    01 f4 40 5b       	[r5 + 4] |= 4194304			  ## analog.c:3527:22
 1e114c2:    02 f4 01 59       	[r5 + 8] |= 1			  ## analog.c:3529:22
 1e114c6:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x3E : 7d0 >			  ## analog.c:4039:9
 1e114ca:    8f f3 7c 96       	call 2043128 <delay : 41c6 >			  ## analog.c:4039:9
 1e114ce:    20 70             	r0 = 2			  ## analog.c:4040:13
 1e114d0:    bf f3 3c f5       	call -5512 <get_ldo_voltage : 1e0ff4c >			  ## analog.c:4040:13
 1e114d4:    01 f9 09 e0       	r1 = b[r14 + 9] (u)			  ## analog.c:4040:13
 1e114d8:    08 ff 4c 04 07 00 	if (r0 > 1100) goto 14 <.GJTIE812_1_1_+0xEE0 : 1e114ec >			  ## analog.c:4040:13
 1e114de:    10 92             	r0 = r1 + 1			  ## analog.c:4043:33
 1e114e0:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4043:33
 1e114e2:    10 f9 09 e0       	b[r14 + 9] = r0			  ## analog.c:4043:33
 1e114e6:    81 e0 e4 3f       	if (r1 < 8) goto -56 <.GJTIE812_1_1_+0xEA6 : 1e114b2 >			  ## analog.c:4043:33
 1e114ea:    02 18             	goto 4 <.GJTIE812_1_1_+0xEE4 : 1e114f0 >			  ## analog.c:4043:33
 1e114ec:    81 e0 03 30       	if (r1 < 8) goto 6 <.GJTIE812_1_1_+0xEEA : 1e114f6 >
 1e114f0:    71 70             	r1 = 7
 1e114f2:    11 f9 09 e0       	b[r14 + 9] = r1			  ## analog.c:4047:33
 1e114f6:    00 f9 0c e0       	r0 = b[r14 + 12] (u)
 1e114fa:    02 f9 0b e0       	r2 = b[r14 + 11] (u)
 1e114fe:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e11502:    03 fd 02 2a       	r3 = r2 | 512			  ## analog.c:4054:32
 1e11506:    30 fd 02 2a       	r0 = r2 & 4294966783			  ## analog.c:4051:32
 1e1150a:    64 fb 04 19       	r4 = 4 - r1			  ## analog.c:4050:86
 1e1150e:    02 08             	r2 = r0			  ## analog.c:4050:68
 1e11510:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE812_1_1_+0xF0A : 1e11516 >			  ## analog.c:4050:68
 1e11514:    32 08             	r2 = r3			  ## analog.c:4050:68
 1e11516:    c1 8f             	r1 += -4			  ## analog.c:4050:34
 1e11518:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE812_1_1_+0xF12 : 1e1151e >			  ## analog.c:4050:34
 1e1151c:    20 08             	r0 = r2			  ## analog.c:4050:68
 1e1151e:    10 f9 0b e0       	b[r14 + 11] = r0			  ## analog.c:4051:32
 1e11522:    00 d2             	r0 = r0 >> 8			  ## analog.c:4051:32
 1e11524:    10 f9 0c e0       	b[r14 + 12] = r0			  ## analog.c:4051:32
 1e11528:    19 f6 00 50       	[r5 + 0] = r9			  ## analog.c:4058:22
 1e1152c:    1b f6 04 50       	[r5 + 4] = r11			  ## analog.c:4059:22
 1e11530:    30 02             	r0 = [sp+12]			  ## analog.c:4060:22
 1e11532:    28 4a             	[r5 + 8] = r0			  ## analog.c:4060:22
 1e11534:    00 4a             	r0 = [r5 + 0]			  ## analog.c:3180:5
 1e11536:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3180:5
 1e1153a:    08 4a             	[r5 + 0] = r0			  ## analog.c:3180:5
 1e1153c:    97 f3 2c ac       	call 3102808 <local_irq_enable : 106d98 >			  ## analog.c:4069:5
 1e11540:    bf f3 9f f3       	call -6338 <bt_analog_part_init : 1e0fc82 >			  ## analog.c:278:9
 1e11544:    bf f3 02 f4       	call -6140 <reset_trim_info : 1e0fd4c >			  ## analog.c:281:9
 1e11548:    0c f9 0c e0       	r12 = b[r14 + 12] (u)			  ## analog.c:3533:43
 1e1154c:    02 f9 0b e0       	r2 = b[r14 + 11] (u)			  ## analog.c:3533:43
 1e11550:    08 f9 09 e0       	r8 = b[r14 + 9] (u)			  ## analog.c:3533:43
 1e11554:    09 f9 07 e0       	r9 = b[r14 + 7] (u)			  ## analog.c:3533:43
 1e11558:    0a f9 06 e0       	r10 = b[r14 + 6] (u)			  ## analog.c:3533:43
 1e1155c:    0b f9 05 e0       	r11 = b[r14 + 5] (u)			  ## analog.c:3533:43
 1e11560:    0d f9 04 e0       	r13 = b[r14 + 4] (u)			  ## analog.c:3533:43
 1e11564:    0f f9 03 e0       	r15 = b[r14 + 3] (u)			  ## analog.c:3533:43
 1e11568:    04 f9 02 e0       	r4 = b[r14 + 2] (u)			  ## analog.c:3533:43
 1e1156c:    05 f9 01 e0       	r5 = b[r14 + 1] (u)			  ## analog.c:3533:43
 1e11570:    01 f9 00 e0       	r1 = b[r14 + 0] (u)			  ## analog.c:3533:43
 1e11574:    40 71             	r0 = 20			  ## analog.c:3566:5
 1e11576:    8f f3 26 96       	call 2042956 <delay : 41c6 >			  ## analog.c:3566:5
 1e1157a:    10 70             	r0 = 1			  ## analog.c:3566:5
 1e1157c:    13 70             	r3 = 1			  ## analog.c:3537:31
 1e1157e:    01 22             	if (r1 == 0) goto 2 <.GJTIE812_1_1_+0xF76 : 1e11582 >			  ## analog.c:3537:31
 1e11580:    03 70             	r3 = 0			  ## analog.c:3537:31
 1e11582:    26 70             	r6 = 2
 1e11584:    01 22             	if (r1 == 0) goto 2 <.GJTIE812_1_1_+0xF7C : 1e11588 >
 1e11586:    16 70             	r6 = 1			  ## analog.c:3541:18
 1e11588:    01 2a             	if (r5 == 0) goto 2 <.GJTIE812_1_1_+0xF80 : 1e1158c >
 1e1158a:    36 08             	r6 = r3			  ## analog.c:3540:9
 1e1158c:    13 70             	r3 = 1			  ## analog.c:3533:43
 1e1158e:    01 28             	if (r4 == 0) goto 2 <.GJTIE812_1_1_+0xF86 : 1e11592 >			  ## analog.c:3533:43
 1e11590:    03 70             	r3 = 0			  ## analog.c:3533:43
 1e11592:    63 09             	r3 += r6			  ## analog.c:3543:9
 1e11594:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e11596:    0f e0 01 00       	if (r15 == 0) goto 2 <.GJTIE812_1_1_+0xF90 : 1e1159c >			  ## analog.c:3533:43
 1e1159a:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e1159c:    63 09             	r3 += r6			  ## analog.c:3546:9
 1e1159e:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e115a0:    0d e0 01 00       	if (r13 == 0) goto 2 <.GJTIE812_1_1_+0xF9A : 1e115a6 >			  ## analog.c:3533:43
 1e115a4:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e115a6:    63 09             	r3 += r6			  ## analog.c:3549:9
 1e115a8:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e115aa:    0b e0 01 00       	if (r11 == 0) goto 2 <.GJTIE812_1_1_+0xFA4 : 1e115b0 >			  ## analog.c:3533:43
 1e115ae:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e115b0:    63 09             	r3 += r6			  ## analog.c:3552:9
 1e115b2:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e115b4:    0a e0 01 00       	if (r10 == 0) goto 2 <.GJTIE812_1_1_+0xFAE : 1e115ba >			  ## analog.c:3533:43
 1e115b8:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e115ba:    63 09             	r3 += r6			  ## analog.c:3555:9
 1e115bc:    16 70             	r6 = 1			  ## analog.c:3533:43
 1e115be:    09 e0 01 00       	if (r9 == 0) goto 2 <.GJTIE812_1_1_+0xFB8 : 1e115c4 >			  ## analog.c:3533:43
 1e115c2:    06 70             	r6 = 0			  ## analog.c:3533:43
 1e115c4:    63 09             	r3 += r6			  ## analog.c:3558:9
 1e115c6:    08 e0 01 00       	if (r8 == 0) goto 2 <.GJTIE812_1_1_+0xFC0 : 1e115cc >			  ## analog.c:3558:9
 1e115ca:    00 70             	r0 = 0			  ## analog.c:3533:43
 1e115cc:    30 09             	r0 += r3			  ## analog.c:3561:9
 1e115ce:    20 e0 89 80       	if (r0 > 2) goto 274 <.GJTIE812_1_1_+0x10D8 : 1e116e4 >			  ## analog.c:3561:9
 1e115d2:    c8 fd 40 2c       	r2 <= insert(r12, p:8, l:8)			  ## analog.c:3533:43
 1e115d6:    00 f3 0e 20       	if ((r2 & 1) == 0) goto 28 <.GJTIE812_1_1_+0xFEA : 1e115f6 >			  ## analog.c:3533:43
 1e115da:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e115e0:    03 08             	r3 = r0
 1e115e2:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3585:31
 1e115e4:    30 fd 1c 0a       	r0 = r0 & 4294960127			  ## analog.c:3585:31
 1e115e8:    b8 46             	[r3 + 44] = r0			  ## analog.c:3585:31
 1e115ea:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3586:31
 1e115ec:    21 fd 07 19       	r1 = r1 & 7			  ## analog.c:3586:34
 1e115f0:    89 c2             	r1 = r1 << 10			  ## analog.c:3586:34
 1e115f2:    50 b2             	r0 |= r1			  ## analog.c:3586:31
 1e115f4:    b8 46             	[r3 + 44] = r0			  ## analog.c:3586:31
 1e115f6:    01 f3 0e 20       	if ((r2 & 2) == 0) goto 28 <.GJTIE812_1_1_+0x100A : 1e11616 >
 1e115fa:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11600:    03 08             	r3 = r0
 1e11602:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3596:31
 1e11604:    30 fd e0 0a       	r0 = r0 & 4294909951			  ## analog.c:3596:31
 1e11608:    b8 46             	[r3 + 44] = r0			  ## analog.c:3596:31
 1e1160a:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3597:31
 1e1160c:    21 fd 07 59       	r1 = r5 & 7			  ## analog.c:3597:34
 1e11610:    49 c3             	r1 = r1 << 13			  ## analog.c:3597:34
 1e11612:    50 b2             	r0 |= r1			  ## analog.c:3597:31
 1e11614:    b8 46             	[r3 + 44] = r0			  ## analog.c:3597:31
 1e11616:    02 f3 0e 20       	if ((r2 & 4) == 0) goto 28 <.GJTIE812_1_1_+0x102A : 1e11636 >
 1e1161a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11620:    03 08             	r3 = r0
 1e11622:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3607:31
 1e11624:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3607:31
 1e11628:    b8 46             	[r3 + 44] = r0			  ## analog.c:3607:31
 1e1162a:    b0 46             	r0 = [r3 + 44]			  ## analog.c:3608:31
 1e1162c:    21 fd 07 49       	r1 = r4 & 7			  ## analog.c:3608:34
 1e11630:    09 c4             	r1 = r1 << 16			  ## analog.c:3608:34
 1e11632:    50 b2             	r0 |= r1			  ## analog.c:3608:31
 1e11634:    b8 46             	[r3 + 44] = r0			  ## analog.c:3608:31
 1e11636:    03 f3 0e 20       	if ((r2 & 8) == 0) goto 28 <.GJTIE812_1_1_+0x104A : 1e11656 >
 1e1163a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11640:    03 08             	r3 = r0
 1e11642:    a0 46             	r0 = [r3 + 40]			  ## analog.c:3618:31
 1e11644:    30 fd 07 0c       	r0 = r0 & 4177526783			  ## analog.c:3618:31
 1e11648:    a8 46             	[r3 + 40] = r0			  ## analog.c:3618:31
 1e1164a:    a0 46             	r0 = [r3 + 40]			  ## analog.c:3619:31
 1e1164c:    21 fd 07 f9       	r1 = r15 & 7			  ## analog.c:3619:34
 1e11650:    09 c6             	r1 = r1 << 24			  ## analog.c:3619:34
 1e11652:    50 b2             	r0 |= r1			  ## analog.c:3619:31
 1e11654:    a8 46             	[r3 + 40] = r0			  ## analog.c:3619:31
 1e11656:    04 f3 0f 20       	if ((r2 & 16) == 0) goto 30 <.GJTIE812_1_1_+0x106C : 1e11678 >
 1e1165a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e11660:    03 08             	r3 = r0
 1e11662:    80 46             	r0 = [r3 + 32]			  ## analog.c:3629:30
 1e11664:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## analog.c:3629:30
 1e11668:    88 46             	[r3 + 32] = r0			  ## analog.c:3629:30
 1e1166a:    80 46             	r0 = [r3 + 32]			  ## analog.c:3630:30
 1e1166c:    f0 fd 10 1d       	r1 = r13 << 2			  ## analog.c:3630:33
 1e11670:    21 fd 1c 19       	r1 = r1 & 28			  ## analog.c:3630:33
 1e11674:    50 b2             	r0 |= r1			  ## analog.c:3630:30
 1e11676:    88 46             	[r3 + 32] = r0			  ## analog.c:3630:30
 1e11678:    c3 ff 00 19 1e 00 	r3 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1167e:    05 f3 0a 20       	if ((r2 & 32) == 0) goto 20 <.GJTIE812_1_1_+0x108A : 1e11696 >
 1e11682:    40 46             	r0 = [r3 + 16]			  ## analog.c:3640:30
 1e11684:    30 fd e0 09       	r0 = r0 & 4294967071			  ## analog.c:3640:30
 1e11688:    48 46             	[r3 + 16] = r0			  ## analog.c:3640:30
 1e1168a:    40 46             	r0 = [r3 + 16]			  ## analog.c:3641:30
 1e1168c:    f0 fd 28 1b       	r1 = r11 << 5			  ## analog.c:3641:33
 1e11690:    41 04             	r1 = r1.b0 (u)			  ## analog.c:3641:33
 1e11692:    50 b2             	r0 |= r1			  ## analog.c:3641:30
 1e11694:    48 46             	[r3 + 16] = r0			  ## analog.c:3641:30
 1e11696:    06 f3 0a 20       	if ((r2 & 64) == 0) goto 20 <.GJTIE812_1_1_+0x10A2 : 1e116ae >
 1e1169a:    40 46             	r0 = [r3 + 16]			  ## analog.c:3651:30
 1e1169c:    30 fd c0 0b       	r0 = r0 & 4282384383			  ## analog.c:3651:30
 1e116a0:    48 46             	[r3 + 16] = r0			  ## analog.c:3651:30
 1e116a2:    40 46             	r0 = [r3 + 16]			  ## analog.c:3652:30
 1e116a4:    21 fd 03 a9       	r1 = r10 & 3			  ## analog.c:3652:33
 1e116a8:    89 c5             	r1 = r1 << 22			  ## analog.c:3652:33
 1e116aa:    50 b2             	r0 |= r1			  ## analog.c:3652:30
 1e116ac:    48 46             	[r3 + 16] = r0			  ## analog.c:3652:30
 1e116ae:    90 04             	r0 = r2.b0 (s)			  ## analog.c:3660:13
 1e116b0:    f0 ef 0a c0       	ifs (r0 > -1) goto 20 <.GJTIE812_1_1_+0x10BC : 1e116c8 >			  ## analog.c:3660:13
 1e116b4:    60 46             	r0 = [r3 + 24]			  ## analog.c:3662:30
 1e116b6:    30 fd 60 02       	r0 = r0 & 4294852607			  ## analog.c:3662:30
 1e116ba:    68 46             	[r3 + 24] = r0			  ## analog.c:3662:30
 1e116bc:    60 46             	r0 = [r3 + 24]			  ## analog.c:3663:30
 1e116be:    21 fd 07 99       	r1 = r9 & 7			  ## analog.c:3663:33
 1e116c2:    89 c3             	r1 = r1 << 14			  ## analog.c:3663:33
 1e116c4:    50 b2             	r0 |= r1			  ## analog.c:3663:30
 1e116c6:    68 46             	[r3 + 24] = r0			  ## analog.c:3663:30
 1e116c8:    09 f3 0c 20       	if ((r2 & 512) == 0) goto 24 <.GJTIE812_1_1_+0x10D8 : 1e116e4 >
 1e116cc:    30 08             	r0 = r3
 1e116ce:    02 08             	r2 = r0
 1e116d0:    00 44             	r0 = [r2 + 0]			  ## analog.c:3674:30
 1e116d2:    30 fd e0 0b       	r0 = r0 & 4280287231			  ## analog.c:3674:30
 1e116d6:    08 44             	[r2 + 0] = r0			  ## analog.c:3674:30
 1e116d8:    00 44             	r0 = [r2 + 0]			  ## analog.c:3675:30
 1e116da:    21 fd 07 89       	r1 = r8 & 7			  ## analog.c:3675:33
 1e116de:    49 c5             	r1 = r1 << 21			  ## analog.c:3675:33
 1e116e0:    50 b2             	r0 |= r1			  ## analog.c:3675:30
 1e116e2:    08 44             	[r2 + 0] = r0			  ## analog.c:3675:30
 1e116e4:    14 a1             	r4 = sp + 17
 1e116e6:    62 71             	r2 = 22			  ## analog.c:285:9
 1e116e8:    40 08             	r0 = r4			  ## analog.c:285:9
 1e116ea:    c1 ff 7c 2c 00 00 	r1 = 11388 <tws_bulk_pool_end : 2c7c >			  ## analog.c:285:9
 1e116f0:    97 f3 f8 ab       	call 3102704 <memcpy : 106ee4 >			  ## analog.c:285:9
 1e116f4:    60 99             	r0 = r4 + 22			  ## analog.c:286:31
 1e116f6:    d2 70             	r2 = 13			  ## analog.c:286:9
 1e116f8:    e1 08             	r1 = r14			  ## analog.c:286:9
 1e116fa:    97 f3 f3 ab       	call 3102694 <memcpy : 106ee4 >			  ## analog.c:286:9
 1e116fe:    d0 75             	r0 = 93			  ## analog.c:287:9
 1e11700:    32 72             	r2 = 35			  ## analog.c:287:9
 1e11702:    41 08             	r1 = r4			  ## analog.c:287:9
 1e11704:    bf f3 47 dc       	call -18290 <syscfg_write : 1e0cf96 >			  ## analog.c:287:9
 1e11708:    cc ff f4 09 00 00 	r12 = 2548 <system_data_end : 9f4 >			  ## analog.c:287:9
 1e1170e:    cd ff 00 19 1e 00 	r13 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:287:9
 1e11714:    15 f4 80 d9       	[r13 + 84] |= 128			  ## analog.c:1446:23
 1e11718:    00 f6 00 d0       	r0 = [r13 + 0]			  ## analog.c:1448:22
 1e1171c:    c1 ff 21 00 0c 00 	r1 = 786465 <text_size+0xA74D5 : c0021 >			  ## analog.c:1448:22
 1e11722:    50 b2             	r0 |= r1			  ## analog.c:1448:22
 1e11724:    10 f6 00 d0       	[r13 + 0] = r0			  ## analog.c:1448:22
 1e11728:    01 f4 40 db       	[r13 + 4] |= 4194304			  ## analog.c:1453:22
 1e1172c:    00 f6 04 d0       	r0 = [r13 + 4]			  ## analog.c:1455:22
 1e11730:    f0 b5             	r0 &= 4294965247			  ## analog.c:1455:22
 1e11732:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1455:22
 1e11736:    02 70             	r2 = 0
 1e11738:    01 70             	r1 = 0
 1e1173a:    00 70             	r0 = 0
 1e1173c:    03 f6 04 d0       	r3 = [r13 + 4]			  ## analog.c:1458:26
 1e11740:    33 fd 1e 3c       	r3 = r3 & 3791650815			  ## analog.c:1458:26
 1e11744:    13 f6 04 d0       	[r13 + 4] = r3			  ## analog.c:1458:26
 1e11748:    03 f6 04 d0       	r3 = [r13 + 4]			  ## analog.c:1459:26
 1e1174c:    04 08             	r4 = r0			  ## analog.c:1459:26
 1e1174e:    e0 fd 20 03       	r0 = r3 | r2			  ## analog.c:1459:26
 1e11752:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1459:26
 1e11756:    00 fb 58 02       	r0 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## analog.c:1460:9
 1e1175a:    8f f3 34 95       	call 2042472 <delay : 41c6 >			  ## analog.c:1460:9
 1e1175e:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:1461:25
 1e11762:    00 fb 58 02       	r0 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## analog.c:1462:9
 1e11766:    8f f3 2e 95       	call 2042460 <delay : 41c6 >			  ## analog.c:1462:9
 1e1176a:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:1463:25
 1e1176e:    00 fb 58 02       	r0 = 600 <BTCTLER_CONTROLLER_BSS_SIZE+0x98 : 258 >			  ## analog.c:1464:9
 1e11772:    8f f3 28 95       	call 2042448 <delay : 41c6 >			  ## analog.c:1464:9
 1e11776:    00 f6 78 d0       	r0 = [r13 + 120]			  ## analog.c:1465:25
 1e1177a:    81 fd 18 00       	r0 = uextra(r0, p:3, l:1)			  ## analog.c:1465:16
 1e1177e:    60 ff ff 49 01 00 	if ((r4 & 255) == 0) goto 2 <.GJTIE812_1_1_+0x117A : 1e11786 >			  ## analog.c:1465:16
 1e11784:    06 20             	if (r0 == 0) goto 12 <.GJTIE812_1_1_+0x1186 : 1e11792 >
 1e11786:    11 80             	r1 += 1			  ## analog.c:1457:26
 1e11788:    42 fb 02 2c       	r2 = r2 + 33554432			  ## analog.c:1457:19
 1e1178c:    01 e1 d6 3f       	if (r1 < 16) goto -84 <.GJTIE812_1_1_+0x1130 : 1e1173c >			  ## analog.c:1457:19
 1e11790:    0d 18             	goto 26 <.GJTIE812_1_1_+0x11A0 : 1e117ac >			  ## analog.c:1457:19
 1e11792:    00 f6 04 d0       	r0 = [r13 + 4]			  ## analog.c:1469:30
 1e11796:    30 fd 1e 0c       	r0 = r0 & 3791650815			  ## analog.c:1469:30
 1e1179a:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1469:30
 1e1179e:    00 f6 04 d0       	r0 = [r13 + 4]			  ## analog.c:1470:30
 1e117a2:    50 b4             	r0 |= r2			  ## analog.c:1470:30
 1e117a4:    10 f6 04 d0       	[r13 + 4] = r0			  ## analog.c:1470:30
 1e117a8:    01 f4 08 da       	[r13 + 4] |= 2048			  ## analog.c:1471:30
 1e117ac:    10 fc ff ff       	r0 = r1 + -1			  ## analog.c:1477:18
 1e117b0:    01 04             	r1 = r0.b0 (u)			  ## analog.c:1477:18
 1e117b2:    04 70             	r4 = 0			  ## analog.c:1477:18
 1e117b4:    10 70             	r0 = 1			  ## analog.c:1477:18
 1e117b6:    91 e0 01 30       	if (r1 < 9) goto 2 <.GJTIE812_1_1_+0x11B0 : 1e117bc >			  ## analog.c:1477:18
 1e117ba:    00 70             	r0 = 0			  ## analog.c:1477:18
 1e117bc:    c5 ff 92 2c 00 00 	r5 = 11410 <lnav_flag : 2c92 >
 1e117c2:    08 6a             	b[r5 + 0] = r0
 1e117c4:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:1896:23
 1e117c8:    70 b7             	r0 &= 4294950911			  ## analog.c:1896:23
 1e117ca:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:1896:23
 1e117ce:    c0 ff ee ff b5 fe 	r0 = 4273340398 <uECC_vli_cmp_unsafe+0xA58FF2 : b5ffee >			  ## analog.c:1896:23
 1e117d4:    10 f6 50 d0       	[r13 + 80] = r0			  ## analog.c:1896:23
 1e117d8:    c0 ff 61 90 ff 01 	r0 = 33525857 <bank_code_load_addr+0x1DE63D : 1ff9061 >			  ## analog.c:1896:23
 1e117de:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:1896:23
 1e117e2:    bf f3 fe f3       	call -6148 <bta_pll_config_init : 1e0ffe2 >			  ## analog.c:2797:5
 1e117e6:    c5 f4 b4 79       	[r7 + 20] = 180			  ## analog.c:2977:19
 1e117ea:    c1 ff 80 f4 e0 01 	r1 = 31519872 <TXPWR_table : 1e0f480 >			  ## analog.c:2977:19
 1e117f0:    c2 ff ac f4 e0 01 	r2 = 31519916 <TXSET_table : 1e0f4ac >			  ## analog.c:2977:19
 1e117f6:    03 70             	r3 = 0			  ## analog.c:2977:19
 1e117f8:    6c 4e             	[r7 + 24] = r4			  ## analog.c:2979:23
 1e117fa:    a0 70             	r0 = 10			  ## analog.c:2980:9
 1e117fc:    8f f3 e3 94       	call 2042310 <delay : 41c6 >			  ## analog.c:2980:9
 1e11800:    80 f6 00 31       	r0 = [r3+r1]			  ## analog.c:2980:9
 1e11804:    68 4e             	[r7 + 24] = r0			  ## analog.c:2980:9
 1e11806:    a0 70             	r0 = 10			  ## analog.c:2992:9
 1e11808:    8f f3 dd 94       	call 2042298 <delay : 41c6 >			  ## analog.c:2992:9
 1e1180c:    80 f6 00 32       	r0 = [r3+r2]			  ## analog.c:2993:25
 1e11810:    68 4e             	[r7 + 24] = r0			  ## analog.c:2993:23
 1e11812:    a0 70             	r0 = 10			  ## analog.c:2994:9
 1e11814:    8f f3 d7 94       	call 2042286 <delay : 41c6 >			  ## analog.c:2994:9
 1e11818:    43 80             	r3 += 4			  ## analog.c:2978:19
 1e1181a:    c3 e2 ed 1f       	if (r3 != 44) goto -38 <.GJTIE812_1_1_+0x11EC : 1e117f8 >			  ## analog.c:2978:5
 1e1181e:    00 6a             	r0 = b[r5 + 0] (u)			  ## analog.c:2803:16
 1e11820:    01 70             	r1 = 0			  ## analog.c:2803:5
 1e11822:    bf f3 72 ef       	call -8476 <btagc_init : 1e0f70a >			  ## analog.c:2803:5
 1e11826:    15 f4 10 da       	[r13 + 84] |= 4096			  ## analog.c:2810:23
 1e1182a:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:2811:23
 1e1182e:    f0 b5             	r0 &= 4294965247			  ## analog.c:2811:23
 1e11830:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:2811:23
 1e11834:    00 f6 54 d0       	r0 = [r13 + 84]			  ## analog.c:2812:23
 1e11838:    f0 b6             	r0 &= 4294959103			  ## analog.c:2812:23
 1e1183a:    10 f6 54 d0       	[r13 + 84] = r0			  ## analog.c:2812:23
 1e1183e:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:2812:23
 1e11842:    01 08             	r1 = r0			  ## analog.c:2812:23
 1e11844:    40 43             	r0 = [r1 + 80]			  ## analog.c:2814:16
 1e11846:    70 b3             	r0 &= 4294967231			  ## analog.c:2814:16
 1e11848:    48 43             	[r1 + 80] = r0			  ## analog.c:2814:16
 1e1184a:    1f f4 40 19       	[r1 + 124] |= 64			  ## RF.c:361:5
 1e1184e:    10 70             	r0 = 1			  ## RF.c:448:14
 1e11850:    10 f9 09 c0       	b[r12 + 9] = r0			  ## RF.c:448:14
 1e11854:    9c 0a             	sp += 312			  ## RF.c:448:14
 1e11856:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF.c:449:1


hci_transport_controller:
 1e11858:    0e f2 e0 01       	if (r14 == r0) goto 960 <ble_power_ops+0x10 : 1e11c1c >
 1e1185c:    86 1b             	goto 1804 <ble_enter_deepsleep+0x38 : 1e11f6a >
 1e1185e:    e1 01             	[--sp] = {psr, reti}
 1e11860:    88 1b             	goto 1808 <ble_enter_deepsleep+0x40 : 1e11f72 >
 1e11862:    e1 01             	[--sp] = {psr, reti}
 1e11864:    8c 1b             	goto 1816 <ble_exit_deepsleep+0xA : 1e11f7e >
 1e11866:    e1 01             	[--sp] = {psr, reti}
 1e11868:    90 1b             	goto 1824 <ble_exit_deepsleep+0x16 : 1e11f8a >
 1e1186a:    e1 01             	[--sp] = {psr, reti}
 1e1186c:    9a 1b             	goto 1844 <ble_exit_deepsleep+0x2E : 1e11fa2 >
 1e1186e:    e1 01             	[--sp] = {psr, reti}
 1e11870:    9e 1b             	goto 1852 <ble_exit_deepsleep+0x3A : 1e11fae >
 1e11872:    e1 01             	[--sp] = {psr, reti}
 1e11874:    00 00             	nop
 1e11876:    00 00             	nop
 1e11878:    00 00             	nop
 1e1187a:    00 00             	nop
 1e1187c:    00 00             	nop
 1e1187e:    00 00             	nop


btctrler_testbox_update_msg_handle_register:
 1e11880:    c0 ff f4 0d 00 00 	r0 = 3572 <bt_testbox_update_msg_handle : df4 >			  ## btctrler_task.c:85:0
 1e11886:    c1 ff 04 13 e0 01 	r1 = 31462148 <testbox_update_msg_handle : 1e01304 >			  ## btctrler_task.c:86:34
 1e1188c:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:86:34
 1e1188e:    20 00             	rts			  ## btctrler_task.c:87:1


btctrler_task_init:
 1e11890:    c0 ff a8 2c 00 00 	r0 = 11432 <h4_transport : 2ca8 >			  ## btctrler_task.c:461:0
 1e11896:    c1 ff 58 18 e1 01 	r1 = 31529048 <hci_transport_controller : 1e11858 >			  ## btctrler_task.c:469:20
 1e1189c:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:469:20
 1e1189e:    c0 ff 02 1b e1 01 	r0 = 31529730 <btctrler_task : 1e11b02 >			  ## btctrler_task.c:473:5
 1e118a4:    c2 ff 05 f2 e0 01 	r2 = 31519237 <bluetooth_base_uuid+0x1FB : 1e0f205 >			  ## btctrler_task.c:473:5
 1e118aa:    01 70             	r1 = 0			  ## btctrler_task.c:473:5
 1e118ac:    ff f3 fe d9       	goto -19460 <task_create : 1e0ccac >			  ## btctrler_task.c:473:5


btctrler_task_ready:
 1e118b0:    74 01             	[--sp] = {rets, r4}			  ## btctrler_task.c:350:0
 1e118b2:    fe 0b             	sp += -4			  ## btctrler_task.c:350:0
 1e118b4:    00 75             	r0 = 80			  ## btctrler_task.c:353:19
 1e118b6:    bf f3 73 d0       	call -24346 <malloc : 1e0b9a0 >			  ## btctrler_task.c:353:19
 1e118ba:    02 08             	r2 = r0			  ## btctrler_task.c:353:19
 1e118bc:    0a 02             	[sp] = r2			  ## btctrler_task.c:353:13
 1e118be:    02 34             	if (r2 != 0) goto 4 <btctrler_task_ready+0x14 : 1e118c4 >			  ## btctrler_task.c:353:13
 1e118c0:    8f f3 a9 8d       	call 2038610 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e118c4:    01 70             	r1 = 0			  ## btctrler_task.c:356:5
 1e118c6:    20 08             	r0 = r2			  ## btctrler_task.c:356:5
 1e118c8:    97 f3 9a aa       	call 3102004 <os_sem_create : 106e00 >			  ## btctrler_task.c:356:5
 1e118cc:    c0 ff 05 f2 e0 01 	r0 = 31519237 <bluetooth_base_uuid+0x1FB : 1e0f205 >			  ## btctrler_task.c:358:11
 1e118d2:    c1 ff 0c 00 40 00 	r1 = 4194316 <uECC_vli_cmp_unsafe+0x2F9010 : 40000c >			  ## btctrler_task.c:358:11
 1e118d8:    03 a0             	r3 = sp + 0			  ## btctrler_task.c:358:11
 1e118da:    12 70             	r2 = 1			  ## btctrler_task.c:358:11
 1e118dc:    14 70             	r4 = 1			  ## btctrler_task.c:358:11
 1e118de:    97 f3 7f aa       	call 3101950 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:358:11
 1e118e2:    02 02             	r2 = [sp]			  ## btctrler_task.c:358:11
 1e118e4:    05 20             	if (r0 == 0) goto 10 <btctrler_task_ready+0x40 : 1e118f0 >
 1e118e6:    20 08             	r0 = r2			  ## btctrler_task.c:364:5
 1e118e8:    bf f3 5f d0       	call -24386 <free : 1e0b9aa >			  ## btctrler_task.c:364:5
 1e118ec:    04 70             	r4 = 0
 1e118ee:    07 18             	goto 14 <btctrler_task_ready+0x4E : 1e118fe >
 1e118f0:    01 70             	r1 = 0			  ## btctrler_task.c:360:9
 1e118f2:    20 08             	r0 = r2			  ## btctrler_task.c:360:9
 1e118f4:    97 f3 88 aa       	call 3101968 <os_sem_pend : 106e08 >			  ## btctrler_task.c:360:9
 1e118f8:    00 02             	r0 = [sp]			  ## btctrler_task.c:361:14
 1e118fa:    bf f3 56 d0       	call -24404 <free : 1e0b9aa >			  ## btctrler_task.c:361:9
 1e118fe:    40 08             	r0 = r4			  ## btctrler_task.c:366:1
 1e11900:    02 0a             	sp += 4			  ## btctrler_task.c:366:1
 1e11902:    54 01             	{pc, r4} = [sp++]			  ## btctrler_task.c:366:1


lmp_hci_cmd_to_conn_for_handle:
 1e11904:    cf f3 87 8d       	goto 2038542 <p33_soft_reset : 3416 >			  ## btctrler_task.c:244:0


bredr_link_event:
 1e11908:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:341:0
 1e1190a:    77 01             	[--sp] = {rets, r7-r4}			  ## btctrler_task.c:341:0
 1e1190c:    f4 0b             	sp += -24			  ## btctrler_task.c:341:0
 1e1190e:    c2 a2             	r2 = sp + 44			  ## btctrler_task.c:341:0
 1e11910:    0a 02             	[sp] = r2			  ## btctrler_task.c:344:5
 1e11912:    5a 02             	[sp+20] = r2
 1e11914:    18 02             	[sp+4] = r0			  ## btctrler_task.c:313:13
 1e11916:    14 92             	r4 = r1 + 1
 1e11918:    11 e0 0a b0       	ifs (r1 < 1) goto 20 <bredr_link_event+0x28 : 1e11930 >
 1e1191c:    40 a0             	r0 = sp + 4
 1e1191e:    40 80             	r0 += 4			  ## btctrler_task.c:316:19
 1e11920:    52 02             	r2 = [sp+20]			  ## btctrler_task.c:316:19
 1e11922:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:316:19
 1e11924:    5b 02             	[sp+20] = r3			  ## btctrler_task.c:316:19
 1e11926:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:316:19
 1e11928:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:316:17
 1e1192c:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <bredr_link_event+0x18 : 1e11920 >			  ## btctrler_task.c:316:17
 1e11930:    c5 ff 05 f2 e0 01 	r5 = 31519237 <bluetooth_base_uuid+0x1FB : 1e0f205 >
 1e11936:    c1 ff 01 00 40 00 	r1 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >			  ## btctrler_task.c:321:15
 1e1193c:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:321:15
 1e1193e:    50 08             	r0 = r5			  ## btctrler_task.c:321:15
 1e11940:    42 08             	r2 = r4			  ## btctrler_task.c:321:15
 1e11942:    97 f3 4d aa       	call 3101850 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:321:15
 1e11946:    07 08             	r7 = r0			  ## btctrler_task.c:321:15
 1e11948:    57 e1 22 10       	if (r7 != 21) goto 68 <bredr_link_event+0x88 : 1e11990 >
 1e1194c:    c6 ff 01 00 40 00 	r6 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >
 1e11952:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e11956:    57 71             	r7 = 21
 1e11958:    61 ff ff 09 19 00 	if ((r0 & 255) != 0) goto 50 <bredr_link_event+0x88 : 1e11990 >
 1e1195e:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e11962:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e11966:    01 ff 00 03 12 00 	if (r0 != 768) goto 36 <bredr_link_event+0x88 : 1e11990 >
 1e1196c:    8f f3 48 8c       	call 2037904 <report_data_code_begin : 3200 >			  ## btctrler_task.c:329:21
 1e11970:    51 08             	r1 = r5			  ## btctrler_task.c:329:14
 1e11972:    97 f3 bf aa       	call 3102078 <strcmp : 106ef4 >			  ## btctrler_task.c:329:14
 1e11976:    0c 20             	if (r0 == 0) goto 24 <bredr_link_event+0x88 : 1e11990 >			  ## btctrler_task.c:329:14
 1e11978:    20 70             	r0 = 2			  ## btctrler_task.c:334:9
 1e1197a:    97 f3 1d aa       	call 3101754 <os_time_dly : 106db8 >			  ## btctrler_task.c:334:9
 1e1197e:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:334:9
 1e11980:    50 08             	r0 = r5			  ## btctrler_task.c:321:15
 1e11982:    61 08             	r1 = r6			  ## btctrler_task.c:321:15
 1e11984:    42 08             	r2 = r4			  ## btctrler_task.c:321:15
 1e11986:    97 f3 2b aa       	call 3101782 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:321:15
 1e1198a:    07 08             	r7 = r0			  ## btctrler_task.c:321:15
 1e1198c:    57 e1 e1 0f       	if (r7 == 21) goto -62 <bredr_link_event+0x4A : 1e11952 >
 1e11990:    70 08             	r0 = r7			  ## btctrler_task.c:346:5
 1e11992:    0c 0a             	sp += 24			  ## btctrler_task.c:346:5
 1e11994:    17 01             	{rets, r7-r4} = [sp++]			  ## btctrler_task.c:346:5
 1e11996:    04 0a             	sp += 8			  ## btctrler_task.c:346:5
 1e11998:    20 00             	rts			  ## btctrler_task.c:346:5


lmp_hci_cmd_to_conn_for_addr:
 1e1199a:    cf f3 3c 8d       	goto 2038392 <p33_soft_reset : 3416 >			  ## btctrler_task.c:227:0


le_hci_send_acl_packet:
 1e1199e:    c2 ff ac 2c 00 00 	r2 = 11436 <__h4_send_packet : 2cac >			  ## hci_controller.c:338:0
 1e119a4:    03 44             	r3 = [r2 + 0]			  ## hci_controller.c:341:5
 1e119a6:    12 08             	r2 = r1			  ## hci_controller.c:341:5
 1e119a8:    01 08             	r1 = r0			  ## hci_controller.c:341:5
 1e119aa:    20 70             	r0 = 2			  ## hci_controller.c:341:5
 1e119ac:    93 00             	goto r3			  ## hci_controller.c:341:5


btctrler_hci_cmd_to_task:
 1e119ae:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:277:0
 1e119b0:    76 01             	[--sp] = {rets, r6-r4}			  ## btctrler_task.c:277:0
 1e119b2:    de 0b             	sp += -68			  ## btctrler_task.c:277:0
 1e119b4:    14 08             	r4 = r1			  ## btctrler_task.c:277:0
 1e119b6:    05 08             	r5 = r0			  ## btctrler_task.c:277:0
 1e119b8:    04 e1 02 30       	if (r4 < 16) goto 4 <btctrler_hci_cmd_to_task+0x12 : 1e119c0 >			  ## btctrler_task.c:277:0
 1e119bc:    8f f3 2b 8d       	call 2038358 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e119c0:    40 a5             	r0 = sp + 84
 1e119c2:    08 02             	[sp] = r0			  ## btctrler_task.c:285:5
 1e119c4:    14 e0 0a b0       	ifs (r4 < 1) goto 20 <btctrler_hci_cmd_to_task+0x2E : 1e119dc >			  ## btctrler_task.c:285:5
 1e119c8:    40 a0             	r0 = sp + 4
 1e119ca:    41 08             	r1 = r4
 1e119cc:    02 02             	r2 = [sp]			  ## btctrler_task.c:287:19
 1e119ce:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:287:19
 1e119d0:    0b 02             	[sp] = r3			  ## btctrler_task.c:287:19
 1e119d2:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:287:19
 1e119d4:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:287:17
 1e119d8:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <btctrler_hci_cmd_to_task+0x1E : 1e119cc >			  ## btctrler_task.c:287:17
 1e119dc:    c6 ff 05 f2 e0 01 	r6 = 31519237 <bluetooth_base_uuid+0x1FB : 1e0f205 >
 1e119e2:    0f 18             	goto 30 <btctrler_hci_cmd_to_task+0x54 : 1e11a02 >
 1e119e4:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e119e8:    61 ff ff 09 12 00 	if ((r0 & 255) != 0) goto 36 <btctrler_hci_cmd_to_task+0x64 : 1e11a12 >
 1e119ee:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e119f2:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e119f6:    01 ff 00 03 0b 00 	if (r0 != 768) goto 22 <btctrler_hci_cmd_to_task+0x64 : 1e11a12 >
 1e119fc:    20 70             	r0 = 2			  ## btctrler_task.c:302:9
 1e119fe:    97 f3 db a9       	call 3101622 <os_time_dly : 106db8 >			  ## btctrler_task.c:302:9
 1e11a02:    43 a0             	r3 = sp + 4
 1e11a04:    60 08             	r0 = r6
 1e11a06:    51 08             	r1 = r5
 1e11a08:    42 08             	r2 = r4
 1e11a0a:    97 f3 e9 a9       	call 3101650 <os_taskq_post_type : 106de0 >
 1e11a0e:    50 e1 e9 0f       	if (r0 == 21) goto -46 <btctrler_hci_cmd_to_task+0x36 : 1e119e4 >
 1e11a12:    22 0a             	sp += 68
 1e11a14:    16 01             	{rets, r6-r4} = [sp++]
 1e11a16:    04 0a             	sp += 8
 1e11a18:    20 00             	rts


hci_send_event:
 1e11a1a:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:683:0
 1e11a1c:    34 00             	[--sp] = rets			  ## hci_controller.c:683:0
 1e11a1e:    7c 0b             	sp += -264			  ## hci_controller.c:683:0
 1e11a20:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:687:15
 1e11a24:    e2 fb 0c 01       	r2 = sp + 268			  ## hci_controller.c:687:15
 1e11a28:    0a 02             	[sp] = r2			  ## hci_controller.c:689:5
 1e11a2a:    40 a0             	r0 = sp + 4			  ## hci_controller.c:689:5
 1e11a2c:    90 b0             	r0 |= 2			  ## hci_controller.c:690:29
 1e11a2e:    bf f3 84 97       	call -53496 <__vsprintf : 1e0493a >			  ## hci_controller.c:690:17
 1e11a32:    02 08             	r2 = r0			  ## hci_controller.c:690:17
 1e11a34:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event+0x24 : 1e11a3e >
 1e11a3a:    8f f3 ec 8c       	call 2038232 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e11a3e:    c0 ff a8 2c 00 00 	r0 = 11432 <h4_transport : 2ca8 >			  ## hci_controller.c:651:9
 1e11a44:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:651:9
 1e11a46:    d2 f5 05 00       	b[sp+5] = r2			  ## hci_controller.c:692:16
 1e11a4a:    08 20             	if (r0 == 0) goto 16 <hci_send_event+0x42 : 1e11a5c >
 1e11a4c:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:651:39
 1e11a4e:    06 26             	if (r3 == 0) goto 12 <hci_send_event+0x42 : 1e11a5c >			  ## hci_controller.c:651:39
 1e11a50:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:695:68
 1e11a54:    22 90             	r2 = r0 + 2			  ## hci_controller.c:695:66
 1e11a56:    41 a0             	r1 = sp + 4
 1e11a58:    40 70             	r0 = 4			  ## hci_controller.c:652:16
 1e11a5a:    83 00             	call r3			  ## hci_controller.c:652:16
 1e11a5c:    84 0a             	sp += 264
 1e11a5e:    88 01             	{rets} = [sp++]
 1e11a60:    04 0a             	sp += 8
 1e11a62:    20 00             	rts


hci_controller_init:
 1e11a64:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:820:0
 1e11a66:    bf f3 f9 f2       	call -6670 <bt_rf_init : 1e1005c >			  ## hci_controller.c:826:5
 1e11a6a:    c4 ff a8 2c 00 00 	r4 = 11432 <h4_transport : 2ca8 >			  ## hci_controller.c:826:5
 1e11a70:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:794:9
 1e11a72:    c1 ff f8 0d 00 00 	r1 = 3576 <bt_task_thread : df8 >			  ## list.h:189:16
 1e11a78:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e11a7a:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e11a7c:    0f 20             	if (r0 == 0) goto 30 <hci_controller_init+0x38 : 1e11a9c >			  ## list.h:189:16
 1e11a7e:    11 40             	r1 = [r0 + 4]			  ## hci_controller.c:798:23
 1e11a80:    03 22             	if (r1 == 0) goto 6 <hci_controller_init+0x24 : 1e11a88 >			  ## hci_controller.c:798:23
 1e11a82:    00 70             	r0 = 0			  ## hci_controller.c:799:9
 1e11a84:    81 00             	call r1			  ## hci_controller.c:799:9
 1e11a86:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:799:9
 1e11a88:    21 40             	r1 = [r0 + 8]			  ## hci_controller.c:802:23
 1e11a8a:    02 22             	if (r1 == 0) goto 4 <hci_controller_init+0x2C : 1e11a90 >			  ## hci_controller.c:802:23
 1e11a8c:    81 00             	call r1			  ## hci_controller.c:803:9
 1e11a8e:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:803:9
 1e11a90:    41 40             	r1 = [r0 + 16]			  ## hci_controller.c:806:23
 1e11a92:    04 22             	if (r1 == 0) goto 8 <hci_controller_init+0x38 : 1e11a9c >			  ## hci_controller.c:806:23
 1e11a94:    c0 ff ac 1b e1 01 	r0 = 31529900 <hci_h4_download_data : 1e11bac >			  ## hci_controller.c:807:9
 1e11a9a:    81 00             	call r1			  ## hci_controller.c:807:9
 1e11a9c:    14 01             	{rets, r4} = [sp++]			  ## hci_controller.c:888:9
 1e11a9e:    c0 f3 bf 20       	goto 16766 <ll_init : 1e15c20 >			  ## hci_controller.c:888:9


hci_send_event_cmd_complete:
 1e11aa2:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:713:0
 1e11aa4:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:713:0
 1e11aa6:    7c 0b             	sp += -264			  ## hci_controller.c:713:0
 1e11aa8:    04 08             	r4 = r0			  ## hci_controller.c:713:0
 1e11aaa:    e0 70             	r0 = 14			  ## hci_controller.c:717:15
 1e11aac:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:717:15
 1e11ab0:    e2 fb 10 01       	r2 = sp + 272			  ## hci_controller.c:717:15
 1e11ab4:    0a 02             	[sp] = r2			  ## hci_controller.c:719:5
 1e11ab6:    40 a0             	r0 = sp + 4			  ## hci_controller.c:719:5
 1e11ab8:    50 80             	r0 += 5			  ## hci_controller.c:720:29
 1e11aba:    bf f3 3e 97       	call -53636 <__vsprintf : 1e0493a >			  ## hci_controller.c:720:17
 1e11abe:    02 08             	r2 = r0			  ## hci_controller.c:720:17
 1e11ac0:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event_cmd_complete+0x28 : 1e11aca >
 1e11ac6:    8f f3 a6 8c       	call 2038092 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e11aca:    30 94             	r0 = r2 + 3			  ## hci_controller.c:722:20
 1e11acc:    d0 f5 05 00       	b[sp+5] = r0			  ## hci_controller.c:722:16
 1e11ad0:    11 70             	r1 = 1			  ## hci_controller.c:722:16
 1e11ad2:    c0 ff a8 2c 00 00 	r0 = 11432 <h4_transport : 2ca8 >			  ## hci_controller.c:651:9
 1e11ad8:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:651:9
 1e11ada:    d1 f5 06 00       	b[sp+6] = r1			  ## hci_controller.c:725:17
 1e11ade:    d4 f5 07 00       	b[sp+7] = r4			  ## hci_controller.c:726:17
 1e11ae2:    21 d2             	r1 = r4 >> 8			  ## hci_controller.c:727:26
 1e11ae4:    d1 f5 08 00       	b[sp+8] = r1			  ## hci_controller.c:727:17
 1e11ae8:    08 20             	if (r0 == 0) goto 16 <hci_send_event_cmd_complete+0x58 : 1e11afa >
 1e11aea:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:651:39
 1e11aec:    06 26             	if (r3 == 0) goto 12 <hci_send_event_cmd_complete+0x58 : 1e11afa >			  ## hci_controller.c:651:39
 1e11aee:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:729:68
 1e11af2:    22 90             	r2 = r0 + 2			  ## hci_controller.c:729:66
 1e11af4:    41 a0             	r1 = sp + 4
 1e11af6:    40 70             	r0 = 4			  ## hci_controller.c:652:16
 1e11af8:    83 00             	call r3			  ## hci_controller.c:652:16
 1e11afa:    84 0a             	sp += 264
 1e11afc:    14 01             	{rets, r4} = [sp++]
 1e11afe:    04 0a             	sp += 8
 1e11b00:    20 00             	rts


btctrler_task:
 1e11b02:    e4 0b             	sp += -56			  ## btctrler_task.c:90:0
 1e11b04:    af 17             	call -162 <hci_controller_init : 1e11a64 >			  ## btctrler_task.c:93:5
 1e11b06:    00 a0             	r0 = sp + 0			  ## btctrler_task.c:93:5
 1e11b08:    48 90             	r8 = r0 + 4
 1e11b0a:    c6 ff f8 ff bf ff 	r6 = 4290772984 <uECC_vli_cmp_unsafe+0x1AF8FFC : 1bffff8 >
 1e11b10:    c7 ff f4 0d 00 00 	r7 = 3572 <bt_testbox_update_msg_handle : df4 >
 1e11b16:    c5 ff f8 0d 00 00 	r5 = 3576 <bt_task_thread : df8 >
 1e11b1c:    c4 ff 0c 00 40 00 	r4 = 4194316 <uECC_vli_cmp_unsafe+0x2F9010 : 40000c >
 1e11b22:    49 fc fa ff       	r9 = r4 + -6
 1e11b26:    01 a0             	r1 = sp + 0
 1e11b28:    00 70             	r0 = 0			  ## btctrler_task.c:96:19
 1e11b2a:    e2 70             	r2 = 14			  ## btctrler_task.c:96:19
 1e11b2c:    97 f3 50 a9       	call 3101344 <os_taskq_pend : 106dd0 >			  ## btctrler_task.c:96:19
 1e11b30:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btctrler_task+0x24 : 1e11b26 >			  ## btctrler_task.c:97:13
 1e11b34:    00 02             	r0 = [sp]			  ## btctrler_task.c:101:17
 1e11b36:    81 b1             	r1 = r0 + r6			  ## btctrler_task.c:101:9
 1e11b38:    41 e0 05 20       	if (r1 >= 4) goto 10 <btctrler_task+0x44 : 1e11b46 >			  ## btctrler_task.c:101:9
 1e11b3c:    01 4e             	r1 = [r7 + 0]			  ## btctrler_task.c:160:17
 1e11b3e:    0e 22             	if (r1 == 0) goto 28 <btctrler_task+0x5A : 1e11b5c >			  ## btctrler_task.c:160:17
 1e11b40:    bf f3 e0 7b       	call -67648 <testbox_update_msg_handle : 1e01304 >			  ## btctrler_task.c:161:17
 1e11b44:    0b 18             	goto 22 <btctrler_task+0x5A : 1e11b5c >			  ## btctrler_task.c:161:17
 1e11b46:    40 f2 06 00       	if (r0 == r4) goto 12 <btctrler_task+0x54 : 1e11b56 >
 1e11b4a:    90 f2 07 10       	if (r0 != r9) goto 14 <btctrler_task+0x5A : 1e11b5c >
 1e11b4e:    80 08             	r0 = r8			  ## btctrler_task.c:139:21
 1e11b50:    80 f3 07 25       	call 18958 <ll_hci_cmd_handler : 1e16562 >			  ## btctrler_task.c:139:21
 1e11b54:    03 18             	goto 6 <btctrler_task+0x5A : 1e11b5c >			  ## btctrler_task.c:139:21
 1e11b56:    10 02             	r0 = [sp+4]			  ## btctrler_task.c:146:35
 1e11b58:    97 f3 58 a9       	call 3101360 <os_sem_post : 106e0c >			  ## btctrler_task.c:146:13
 1e11b5c:    50 08             	r0 = r5			  ## hci_controller.c:815:5
 1e11b5e:    bf f3 c7 a0       	call -48754 <thread_run : 1e05cf0 >			  ## hci_controller.c:815:5
 1e11b62:    e1 1f             	goto -62 <btctrler_task+0x24 : 1e11b26 >			  ## hci_controller.c:815:5


bt_task_create:
 1e11b64:    00 70             	r0 = 0			  ## btctrler_task.c:41:0
 1e11b66:    20 00             	rts			  ## btctrler_task.c:43:5


bt_task_delete:
 1e11b68:    00 70             	r0 = 0			  ## btctrler_task.c:47:0
 1e11b6a:    20 00             	rts			  ## btctrler_task.c:48:5


bt_task_suspend:
 1e11b6c:    00 70             	r0 = 0			  ## btctrler_task.c:52:0
 1e11b6e:    20 00             	rts			  ## btctrler_task.c:61:5


bt_task_resume:
 1e11b70:    34 00             	[--sp] = rets			  ## btctrler_task.c:65:0
 1e11b72:    c0 ff 05 f2 e0 01 	r0 = 31519237 <bluetooth_base_uuid+0x1FB : 1e0f205 >			  ## btctrler_task.c:71:5
 1e11b78:    f1 7f             	r1 = 255			  ## btctrler_task.c:71:5
 1e11b7a:    02 70             	r2 = 0			  ## btctrler_task.c:71:5
 1e11b7c:    03 70             	r3 = 0			  ## btctrler_task.c:71:5
 1e11b7e:    97 f3 2f a9       	call 3101278 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:71:5
 1e11b82:    00 70             	r0 = 0			  ## btctrler_task.c:73:5
 1e11b84:    30 00             	pc = [sp++]			  ## btctrler_task.c:73:5


h4_controller_init:
 1e11b86:    20 00             	rts			  ## h4_controller_interface.c:26:0


h4_controller_open:
 1e11b88:    00 70             	r0 = 0			  ## h4_controller_interface.c:31:0
 1e11b8a:    20 00             	rts			  ## h4_controller_interface.c:33:5


h4_controller_close:
 1e11b8c:    00 70             	r0 = 0			  ## h4_controller_interface.c:37:0
 1e11b8e:    20 00             	rts			  ## h4_controller_interface.c:39:5


h4_controller_register_packet_handler:
 1e11b90:    c1 ff ac 2c 00 00 	r1 = 11436 <__h4_send_packet : 2cac >			  ## h4_controller_interface.c:43:0
 1e11b96:    08 42             	[r1 + 0] = r0			  ## h4_controller_interface.c:45:22
 1e11b98:    20 00             	rts			  ## h4_controller_interface.c:47:1


h4_controller_can_send_now:
 1e11b9a:    00 70             	r0 = 0			  ## h4_controller_interface.c:54:0
 1e11b9c:    20 00             	rts			  ## h4_controller_interface.c:55:5


h4_controller_send_packet:
 1e11b9e:    34 00             	[--sp] = rets			  ## h4_controller_interface.c:62:0
 1e11ba0:    00 04             	r0 = r0.b0 (u)			  ## h4_controller_interface.c:65:5
 1e11ba2:    a2 04             	r2 = r2.l (u)			  ## h4_controller_interface.c:65:5
 1e11ba4:    bf f3 45 c3       	call -31094 <hci_packet_handler : 1e0a232 >			  ## h4_controller_interface.c:65:5
 1e11ba8:    00 70             	r0 = 0			  ## h4_controller_interface.c:66:5
 1e11baa:    30 00             	pc = [sp++]			  ## h4_controller_interface.c:66:5


hci_h4_download_data:
 1e11bac:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_controller.c:596:0
 1e11bae:    25 08             	r5 = r2			  ## hci_controller.c:596:0
 1e11bb0:    14 08             	r4 = r1			  ## hci_controller.c:596:0
 1e11bb2:    20 e0 1d 00       	if (r0 == 2) goto 58 <hci_h4_download_data+0x44 : 1e11bf0 >			  ## hci_controller.c:600:5
 1e11bb6:    10 e0 27 10       	if (r0 != 1) goto 78 <hci_h4_download_data+0x5C : 1e11c08 >
 1e11bba:    0b ff ff 50 02 00 	ifs (r5 < 255) goto 4 <hci_h4_download_data+0x18 : 1e11bc4 >
 1e11bc0:    8f f3 29 8c       	call 2037842 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e11bc4:    c7 ff b0 2c 00 00 	r7 = 11440 <hdl.4768 : 2cb0 >
 1e11bca:    20 4e             	r0 = [r7 + 8]			  ## hci_controller.c:569:39
 1e11bcc:    21 9a             	r1 = r5 + 2			  ## hci_controller.c:569:45
 1e11bce:    bf f3 a5 9e       	call -49846 <lbuf_alloc_btctrler : 1e0591c >			  ## hci_controller.c:569:11
 1e11bd2:    06 08             	r6 = r0			  ## hci_controller.c:569:11
 1e11bd4:    19 2c             	if (r6 == 0) goto 50 <hci_h4_download_data+0x5C : 1e11c08 >			  ## hci_controller.c:569:11
 1e11bd6:    0d 5c             	h[r6 + 0] = r5			  ## hci_controller.c:575:15
 1e11bd8:    20 9c             	r0 = r6 + 2			  ## hci_controller.c:576:17
 1e11bda:    41 08             	r1 = r4			  ## hci_controller.c:576:5
 1e11bdc:    52 08             	r2 = r5			  ## hci_controller.c:576:5
 1e11bde:    97 f3 81 a9       	call 3101442 <memcpy : 106ee4 >			  ## hci_controller.c:576:5
 1e11be2:    60 08             	r0 = r6			  ## hci_controller.c:586:5
 1e11be4:    bf f3 d0 9e       	call -49760 <lbuf_push_btctrler : 1e05988 >			  ## hci_controller.c:586:5
 1e11be8:    80 9f             	r0 = r7 + 24			  ## hci_controller.c:588:5
 1e11bea:    17 01             	{rets, r7-r4} = [sp++]			  ## hci_controller.c:588:5
 1e11bec:    ff f3 e1 9e       	goto -49726 <thread_resume : 1e059b2 >			  ## hci_controller.c:588:5
 1e11bf0:    01 70             	r1 = 0			  ## hci_controller.c:610:18
 1e11bf2:    40 08             	r0 = r4			  ## hci_controller.c:610:18
 1e11bf4:    bf f3 b9 97       	call -53390 <btctler_little_endian_read_16 : 1e04b6a >			  ## hci_controller.c:610:18
 1e11bf8:    30 fd f0 0a       	r0 = r0 & 4294905855			  ## hci_controller.c:613:36
 1e11bfc:    80 f3 51 18       	call 12450 <ll_link_for_handle : 1e14ca2 >			  ## hci_controller.c:613:17
 1e11c00:    03 20             	if (r0 == 0) goto 6 <hci_h4_download_data+0x5C : 1e11c08 >			  ## hci_controller.c:613:17
 1e11c02:    40 08             	r0 = r4			  ## hci_controller.c:615:21
 1e11c04:    80 f3 7a 25       	call 19188 <ll_push_acl_data : 1e166fc >			  ## hci_controller.c:615:21
 1e11c08:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_controller.c:641:1


BTCTLER_LE_CONTROLLER_CODE_START:
 1e11c0a:    00 00             	nop


ble_power_ops:
 1e11c0c:    dc f1 e0 01       	if ((r12 & r13) != 0) goto 960 <ble_exit_deepsleep+0x5C : 1e11fd0 >
 1e11c10:    bc 3e             	if (r7 != 0) goto 376 <__set_anchor_cnt+0x42 : 1e11d8a >
 1e11c12:    e1 01             	[--sp] = {psr, reti}
 1e11c14:    8e 3f             	if (r7 != 0) goto -228 <btctrler_task+0x30 : 1e11b32 >
 1e11c16:    e1 01             	[--sp] = {psr, reti}
 1e11c18:    be 3f             	if (r7 != 0) goto -132 <h4_controller_register_packet_handler+0x6 : 1e11b96 >
 1e11c1a:    e1 01             	[--sp] = {psr, reti}
 1e11c1c:    8c 40             	[r0 + 32] = r4
 1e11c1e:    e1 01             	[--sp] = {psr, reti}
 1e11c20:    f0 41             	r0 = [r0 + 124]
 1e11c22:    e1 01             	[--sp] = {psr, reti}


ble_power_put:
 1e11c24:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:695:0
 1e11c26:    04 08             	r4 = r0			  ## le_low_power.c:695:0
 1e11c28:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:696:13
 1e11c2a:    08 20             	if (r0 == 0) goto 16 <ble_power_put+0x18 : 1e11c3c >
 1e11c2c:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:171:36
 1e11c2e:    12 40             	r2 = [r0 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:171:23
 1e11c30:    1a 42             	[r1 + 4] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:159:16
 1e11c32:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:160:16
 1e11c34:    bf f3 b9 ce       	call -25230 <free : 1e0b9aa >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:704:5
 1e11c38:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:698:24
 1e11c3c:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:700:1


ble_hw_disable:
 1e11c3e:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:620:0
 1e11c40:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:620:0
 1e11c46:    c1 f4 00 19       	[r1 + 4] = 0			  ## RF_ble.c:263:21
 1e11c4a:    08 00             	csync			  ## RF_ble.c:264:5
 1e11c4c:    c2 ff e4 2f 00 00 	r2 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e11c52:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:134:19
 1e11c54:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e11c56:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:134:17
 1e11c58:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e11c5a:    e0 fe 20 00       	r0 = r0 / r2 (s)			  ## RF_ble.c:134:17
 1e11c5e:    02 c1             	r2 = r0 << 4			  ## RF_ble.c:265:50
 1e11c60:    03 fb f0 07       	r3 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e11c64:    52 b7             	r2 &= r3			  ## RF_ble.c:265:50
 1e11c66:    03 fb 05 38       	r3 = 14341 <_norflash_read+0x2B : 3805 >			  ## RF_ble.c:265:67
 1e11c6a:    52 b6             	r2 |= r3			  ## RF_ble.c:265:67
 1e11c6c:    0a 42             	[r1 + 0] = r2			  ## RF_ble.c:265:21
 1e11c6e:    72 42             	r2 = [r1 + 28]			  ## RF_ble.c:624:16
 1e11c70:    21 f3 fd 2f       	if ((r2 & 2) != 0) goto -6 <ble_hw_disable+0x30 : 1e11c6e >			  ## RF_ble.c:624:9
 1e11c74:    32 42             	r2 = [r1 + 12]			  ## RF_ble.c:630:5
 1e11c76:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:630:5
 1e11c78:    13 70             	r3 = 1			  ## RF_ble.c:630:5
 1e11c7a:    03 0c             	r3 <<= r0			  ## RF_ble.c:630:5
 1e11c7c:    e3 fd 30 22       	r2 = r2 & ~r3			  ## RF_ble.c:630:5
 1e11c80:    3a 42             	[r1 + 12] = r2			  ## RF_ble.c:630:5
 1e11c82:    32 42             	r2 = [r1 + 12]			  ## RF_ble.c:631:5
 1e11c84:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:631:5
 1e11c88:    f8 fd 00 04       	r0 = r4 << r0			  ## RF_ble.c:631:5
 1e11c8c:    e3 fd 00 02       	r0 = r2 & ~r0			  ## RF_ble.c:631:5
 1e11c90:    38 42             	[r1 + 12] = r0			  ## RF_ble.c:631:5
 1e11c92:    c0 42             	r0 = [r1 + 48]			  ## RF_ble.c:632:5
 1e11c94:    e3 fd 30 00       	r0 = r0 & ~r3			  ## RF_ble.c:632:5
 1e11c98:    c8 42             	[r1 + 48] = r0			  ## RF_ble.c:632:5
 1e11c9a:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:634:1


clear_all_anchor_cnt:
 1e11c9c:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:1402:0
 1e11c9e:    01 70             	r1 = 0			  ## RF_ble.c:1402:0
 1e11ca0:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:1402:0
 1e11ca6:    c3 ff e4 2f 00 00 	r3 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:1402:0
 1e11cac:    c4 71             	r4 = 28			  ## RF_ble.c:1402:0
 1e11cae:    05 70             	r5 = 0			  ## RF_ble.c:1402:0
 1e11cb0:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e11cb2:    08 00             	csync			  ## RF_ble.c:264:5
 1e11cb4:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11cb6:    46 4c             	r6 = [r6 + 16]			  ## RF_ble.c:134:35
 1e11cb8:    a6 b1             	r6 = r0 - r6			  ## RF_ble.c:134:17
 1e11cba:    e0 fe 40 66       	r6 = r6 / r4 (s)			  ## RF_ble.c:134:17
 1e11cbe:    36 c1             	r6 = r6 << 4			  ## RF_ble.c:265:50
 1e11cc0:    26 fd 7f 60       	r6 = r6 & 4080			  ## RF_ble.c:265:50
 1e11cc4:    56 ba             	r6 |= r5			  ## RF_ble.c:265:67
 1e11cc6:    06 fd 05 69       	r6 = r6 | 5			  ## RF_ble.c:265:67
 1e11cca:    55 fc 00 04       	r5 = r5 + 1024			  ## RF_ble.c:1403:22
 1e11cce:    0e 44             	[r2 + 0] = r6			  ## RF_ble.c:265:21
 1e11cd0:    21 ff 44 5a ed ff 	if (r5 != 17408) goto -38 <clear_all_anchor_cnt+0x14 : 1e11cb0 >			  ## RF_ble.c:1403:5
 1e11cd6:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:1406:1


hw_entity_free:
 1e11cd8:    03 20             	if (r0 == 0) goto 6 <hw_entity_free+0x8 : 1e11ce0 >			  ## RF_ble.c:2880:0
 1e11cda:    01 70             	r1 = 0			  ## RF_ble.c:2890:17
 1e11cdc:    11 f9 5c 02       	b[r0 + 604] = r1			  ## RF_ble.c:2890:17
 1e11ce0:    20 00             	rts			  ## RF_ble.c:2891:1


__set_ble_hw_irq_init:
 1e11ce2:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:600:0
 1e11ce4:    c1 ff 28 80 1c 00 	r1 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >			  ## RF_ble.c:600:0
 1e11cea:    12 42             	r2 = [r1 + 4]			  ## RF_ble.c:601:5
 1e11cec:    c3 ff e4 2f 00 00 	r3 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e11cf2:    03 46             	r3 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11cf4:    43 46             	r3 = [r3 + 16]			  ## RF_ble.c:134:35
 1e11cf6:    e0 b0             	r0 = r0 - r3			  ## RF_ble.c:134:17
 1e11cf8:    c3 71             	r3 = 28			  ## RF_ble.c:134:17
 1e11cfa:    e0 fe 30 00       	r0 = r0 / r3 (s)			  ## RF_ble.c:134:17
 1e11cfe:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:601:5
 1e11d00:    13 70             	r3 = 1			  ## RF_ble.c:601:5
 1e11d02:    03 0c             	r3 <<= r0			  ## RF_ble.c:601:5
 1e11d04:    e3 fd 30 22       	r2 = r2 & ~r3			  ## RF_ble.c:601:5
 1e11d08:    52 b6             	r2 |= r3			  ## RF_ble.c:601:5
 1e11d0a:    1a 42             	[r1 + 4] = r2			  ## RF_ble.c:601:5
 1e11d0c:    12 42             	r2 = [r1 + 4]			  ## RF_ble.c:602:5
 1e11d0e:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:602:5
 1e11d12:    f8 fd 00 04       	r0 = r4 << r0			  ## RF_ble.c:602:5
 1e11d16:    e3 fd 00 22       	r2 = r2 & ~r0			  ## RF_ble.c:602:5
 1e11d1a:    52 b0             	r2 |= r0			  ## RF_ble.c:602:5
 1e11d1c:    1a 42             	[r1 + 4] = r2			  ## RF_ble.c:602:5
 1e11d1e:    92 42             	r2 = [r1 + 36]			  ## RF_ble.c:603:5
 1e11d20:    e3 fd 00 22       	r2 = r2 & ~r0			  ## RF_ble.c:603:5
 1e11d24:    52 b0             	r2 |= r0			  ## RF_ble.c:603:5
 1e11d26:    9a 42             	[r1 + 36] = r2			  ## RF_ble.c:603:5
 1e11d28:    02 42             	r2 = [r1 + 0]			  ## RF_ble.c:605:5
 1e11d2a:    e3 fd 30 22       	r2 = r2 & ~r3			  ## RF_ble.c:605:5
 1e11d2e:    52 b6             	r2 |= r3			  ## RF_ble.c:605:5
 1e11d30:    0a 42             	[r1 + 0] = r2			  ## RF_ble.c:605:5
 1e11d32:    02 42             	r2 = [r1 + 0]			  ## RF_ble.c:606:5
 1e11d34:    e3 fd 00 22       	r2 = r2 & ~r0			  ## RF_ble.c:606:5
 1e11d38:    50 b4             	r0 |= r2			  ## RF_ble.c:606:5
 1e11d3a:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:606:5
 1e11d3c:    90 42             	r0 = [r1 + 36]			  ## RF_ble.c:607:5
 1e11d3e:    e3 fd 30 00       	r0 = r0 & ~r3			  ## RF_ble.c:607:5
 1e11d42:    50 b6             	r0 |= r3			  ## RF_ble.c:607:5
 1e11d44:    98 42             	[r1 + 36] = r0			  ## RF_ble.c:607:5
 1e11d46:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:608:1


__set_anchor_cnt:
 1e11d48:    78 01             	[--sp] = {rets, r8-r4}			  ## RF_ble.c:270:0
 1e11d4a:    05 70             	r5 = 0			  ## RF_ble.c:270:0
 1e11d4c:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:270:0
 1e11d52:    1d 44             	[r2 + 4] = r5			  ## RF_ble.c:263:21
 1e11d54:    08 00             	csync			  ## RF_ble.c:264:5
 1e11d56:    c3 ff e4 2f 00 00 	r3 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e11d5c:    04 46             	r4 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11d5e:    44 48             	r4 = [r4 + 16]			  ## RF_ble.c:134:35
 1e11d60:    26 b1             	r6 = r0 - r4			  ## RF_ble.c:134:17
 1e11d62:    c4 71             	r4 = 28			  ## RF_ble.c:134:17
 1e11d64:    e0 fe 40 66       	r6 = r6 / r4 (s)			  ## RF_ble.c:134:17
 1e11d68:    36 c1             	r6 = r6 << 4			  ## RF_ble.c:265:50
 1e11d6a:    07 fb f0 03       	r7 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e11d6e:    56 bf             	r6 &= r7			  ## RF_ble.c:265:50
 1e11d70:    07 fb 05 1c       	r7 = 7173 <btstack_stack+0x1 : 1c05 >			  ## RF_ble.c:265:67
 1e11d74:    56 be             	r6 |= r7			  ## RF_ble.c:265:67
 1e11d76:    0e 44             	[r2 + 0] = r6			  ## RF_ble.c:265:21
 1e11d78:    1d 44             	[r2 + 4] = r5			  ## RF_ble.c:263:21
 1e11d7a:    08 00             	csync			  ## RF_ble.c:264:5
 1e11d7c:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11d7e:    46 4c             	r6 = [r6 + 16]			  ## RF_ble.c:134:35
 1e11d80:    a6 b1             	r6 = r0 - r6			  ## RF_ble.c:134:17
 1e11d82:    e0 fe 40 66       	r6 = r6 / r4 (s)			  ## RF_ble.c:134:17
 1e11d86:    36 c1             	r6 = r6 << 4			  ## RF_ble.c:265:50
 1e11d88:    26 fd 7f 60       	r6 = r6 & 4080			  ## RF_ble.c:265:50
 1e11d8c:    06 fd 05 69       	r6 = r6 | 5			  ## RF_ble.c:265:67
 1e11d90:    0e 44             	[r2 + 0] = r6			  ## RF_ble.c:265:21
 1e11d92:    1d 44             	[r2 + 4] = r5			  ## RF_ble.c:263:21
 1e11d94:    08 00             	csync			  ## RF_ble.c:264:5
 1e11d96:    05 46             	r5 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11d98:    45 4a             	r5 = [r5 + 16]			  ## RF_ble.c:134:35
 1e11d9a:    65 b1             	r5 = r0 - r5			  ## RF_ble.c:134:17
 1e11d9c:    e0 fe 40 55       	r5 = r5 / r4 (s)			  ## RF_ble.c:134:17
 1e11da0:    2e c1             	r6 = r5 << 4			  ## RF_ble.c:265:50
 1e11da2:    08 fb f0 07       	r8 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e11da6:    e2 fd 80 76       	r7 = r6 & r8			  ## RF_ble.c:265:50
 1e11daa:    06 fb 05 38       	r6 = 14341 <_norflash_read+0x2B : 3805 >			  ## RF_ble.c:265:67
 1e11dae:    e0 fd 60 57       	r5 = r7 | r6			  ## RF_ble.c:265:67
 1e11db2:    17 fc ff ff       	r7 = r1 + -1			  ## RF_ble.c:281:39
 1e11db6:    0d 44             	[r2 + 0] = r5			  ## RF_ble.c:265:21
 1e11db8:    01 32             	if (r1 != 0) goto 2 <__set_anchor_cnt+0x74 : 1e11dbc >			  ## RF_ble.c:265:21
 1e11dba:    07 70             	r7 = 0			  ## RF_ble.c:281:39
 1e11dbc:    e1 05             	r1 = r7.l (u)			  ## RF_ble.c:281:44
 1e11dbe:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e11dc0:    08 00             	csync			  ## RF_ble.c:264:5
 1e11dc2:    01 46             	r1 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11dc4:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e11dc6:    61 b0             	r1 = r0 - r1			  ## RF_ble.c:134:17
 1e11dc8:    e0 fe 40 11       	r1 = r1 / r4 (s)			  ## RF_ble.c:134:17
 1e11dcc:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e11dce:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:265:50
 1e11dd2:    01 fd 05 19       	r1 = r1 | 5			  ## RF_ble.c:265:67
 1e11dd6:    09 44             	[r2 + 0] = r1			  ## RF_ble.c:265:21
 1e11dd8:    39 d4             	r1 = r7 >> 16			  ## RF_ble.c:283:58
 1e11dda:    91 b7             	r1 |= 32768			  ## RF_ble.c:283:44
 1e11ddc:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e11dde:    08 00             	csync			  ## RF_ble.c:264:5
 1e11de0:    01 46             	r1 = [r3 + 0]			  ## RF_ble.c:134:19
 1e11de2:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e11de4:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e11de6:    e0 fe 40 00       	r0 = r0 / r4 (s)			  ## RF_ble.c:134:17
 1e11dea:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e11dec:    e2 fd 80 00       	r0 = r0 & r8			  ## RF_ble.c:265:50
 1e11df0:    50 bc             	r0 |= r6			  ## RF_ble.c:265:67
 1e11df2:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e11df4:    58 01             	{pc, r8-r4} = [sp++]			  ## RF_ble.c:284:1


le_hw_resume:
 1e11df6:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:3720:0
 1e11df8:    04 08             	r4 = r0			  ## RF_ble.c:3720:0
 1e11dfa:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3721:13
 1e11dfc:    02 f9 53 01       	r2 = b[r0 + 339] (u)			  ## RF_ble.c:3721:22
 1e11e00:    72 b0             	r2 &= 4294967294			  ## RF_ble.c:3721:9
 1e11e02:    15 08             	r5 = r1			  ## RF_ble.c:3721:9
 1e11e04:    22 e0 08 00       	if (r2 == 2) goto 16 <le_hw_resume+0x22 : 1e11e18 >
 1e11e08:    21 70             	r1 = 2			  ## RF_ble.c:3732:28
 1e11e0a:    11 f9 53 01       	b[r0 + 339] = r1			  ## RF_ble.c:3732:28
 1e11e0e:    40 08             	r0 = r4			  ## RF_ble.c:613:5
 1e11e10:    68 17             	call -304 <__set_ble_hw_irq_init : 1e11ce2 >			  ## RF_ble.c:613:5
 1e11e12:    40 08             	r0 = r4			  ## RF_ble.c:614:5
 1e11e14:    51 08             	r1 = r5			  ## RF_ble.c:614:5
 1e11e16:    98 17             	call -208 <__set_anchor_cnt : 1e11d48 >			  ## RF_ble.c:614:5
 1e11e18:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:3734:1


le_hw_close:
 1e11e1a:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:3764:0
 1e11e1c:    04 08             	r4 = r0			  ## RF_ble.c:3764:0
 1e11e1e:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:3765:31
 1e11e20:    57 2a             	if (r5 == 0) goto 174 <le_hw_close+0xB6 : 1e11ed0 >
 1e11e22:    00 17             	call -512 <ble_power_put : 1e11c24 >			  ## RF_ble.c:3777:5
 1e11e24:    40 08             	r0 = r4			  ## RF_ble.c:3779:5
 1e11e26:    0b 17             	call -490 <ble_hw_disable : 1e11c3e >			  ## RF_ble.c:3779:5
 1e11e28:    56 fc 78 01       	r6 = r5 + 376			  ## RF_ble.c:3779:5
 1e11e2c:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:3783:17
 1e11e2e:    bf f3 48 7b       	call -67952 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:3783:5
 1e11e32:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:3784:17
 1e11e34:    bf f3 45 7b       	call -67958 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:3784:5
 1e11e38:    05 70             	r5 = 0			  ## RF_ble.c:3784:5
 1e11e3a:    2d 4c             	[r6 + 8] = r5			  ## RF_ble.c:214:15
 1e11e3c:    3d 4c             	[r6 + 12] = r5			  ## RF_ble.c:215:15
 1e11e3e:    10 4c             	r0 = [r6 + 4]			  ## RF_ble.c:3786:17
 1e11e40:    bf f3 3f 7b       	call -67970 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:3786:5
 1e11e44:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:3787:17
 1e11e46:    bf f3 3c 7b       	call -67976 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:3787:5
 1e11e4a:    0d 4c             	[r6 + 0] = r5			  ## RF_ble.c:196:15
 1e11e4c:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:197:15
 1e11e4e:    60 fc 20 00       	r0 = r6 + 32			  ## RF_ble.c:3790:24
 1e11e52:    bf f3 37 7b       	call -67986 <hw_dma_clear : 1e014c4 >			  ## RF_ble.c:3790:5
 1e11e56:    80 9d             	r0 = r6 + 24			  ## RF_ble.c:3791:24
 1e11e58:    bf f3 34 7b       	call -67992 <hw_dma_clear : 1e014c4 >			  ## RF_ble.c:3791:5
 1e11e5c:    00 9d             	r0 = r6 + 16			  ## RF_ble.c:3792:24
 1e11e5e:    bf f3 31 7b       	call -67998 <hw_dma_clear : 1e014c4 >			  ## RF_ble.c:3792:5
 1e11e62:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2955:21
 1e11e64:    c6 ff e4 2f 00 00 	r6 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:2955:21
 1e11e6a:    19 20             	if (r0 == 0) goto 50 <le_hw_close+0x84 : 1e11e9e >			  ## RF_ble.c:2955:21
 1e11e6c:    40 08             	r0 = r4			  ## RF_ble.c:2960:5
 1e11e6e:    16 17             	call -468 <clear_all_anchor_cnt : 1e11c9c >			  ## RF_ble.c:2960:5
 1e11e70:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2962:32
 1e11e72:    00 f6 e4 01       	r0 = [r0 + 484]			  ## RF_ble.c:2962:41
 1e11e76:    bf f3 35 7b       	call -67990 <btctler_nv_memory_free : 1e014e4 >			  ## RF_ble.c:2962:5
 1e11e7a:    02 4c             	r2 = [r6 + 0]			  ## RF_ble.c:2963:5
 1e11e7c:    40 44             	r0 = [r2 + 16]			  ## RF_ble.c:134:35
 1e11e7e:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e11e80:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e11e82:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e11e86:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:2963:5
 1e11e88:    55 f8 00 20       	h[r2+r0<<1] = r5			  ## RF_ble.c:2963:37
 1e11e8c:    00 f9 20 20       	r0 = b[r2 + 32] (u)			  ## RF_ble.c:2964:19
 1e11e90:    f0 8f             	r0 += -1			  ## RF_ble.c:2964:19
 1e11e92:    10 f9 20 20       	b[r2 + 32] = r0			  ## RF_ble.c:2964:19
 1e11e96:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2966:24
 1e11e98:    1f 17             	call -450 <hw_entity_free : 1e11cd8 >			  ## RF_ble.c:2966:5
 1e11e9a:    0d 48             	[r4 + 0] = r5			  ## RF_ble.c:2967:17
 1e11e9c:    01 18             	goto 2 <le_hw_close+0x86 : 1e11ea0 >
 1e11e9e:    02 4c             	r2 = [r6 + 0]
 1e11ea0:    00 70             	r0 = 0
 1e11ea2:    21 08             	r1 = r2
 1e11ea4:    03 70             	r3 = 0
 1e11ea6:    84 f7 02 10       	r4 = h[r1 ++= 2] (u)			  ## RF_ble.c:4478:13
 1e11eaa:    0e 28             	if (r4 == 0) goto 28 <le_hw_close+0xAE : 1e11ec8 >
 1e11eac:    44 44             	r4 = [r2 + 16]			  ## RF_ble.c:4479:35
 1e11eae:    85 f6 00 40       	r5 = [r4+r0]			  ## RF_ble.c:4480:29
 1e11eb2:    0a 2a             	if (r5 == 0) goto 20 <le_hw_close+0xAE : 1e11ec8 >			  ## RF_ble.c:4480:29
 1e11eb4:    56 fc 52 01       	r6 = r5 + 338
 1e11eb8:    07 6c             	r7 = b[r6 + 0] (u)			  ## RF_ble.c:4484:31
 1e11eba:    37 e0 02 00       	if (r7 == 3) goto 4 <le_hw_close+0xA8 : 1e11ec2 >			  ## RF_ble.c:4484:31
 1e11ebe:    17 e0 03 10       	if (r7 != 1) goto 6 <le_hw_close+0xAE : 1e11ec8 >
 1e11ec2:    16 6c             	r6 = b[r6 + 1] (u)
 1e11ec4:    16 e0 05 00       	if (r6 == 1) goto 10 <le_hw_close+0xB8 : 1e11ed2 >
 1e11ec8:    13 80             	r3 += 1			  ## RF_ble.c:4477:42
 1e11eca:    c0 81             	r0 += 28			  ## RF_ble.c:4477:22
 1e11ecc:    83 e0 eb 3f       	if (r3 < 8) goto -42 <le_hw_close+0x8C : 1e11ea6 >			  ## RF_ble.c:4477:22
 1e11ed0:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:3802:1
 1e11ed2:    01 f7 5a 52       	r1 = h[r5 + 602] (u)
 1e11ed6:    40 09             	r0 += r4
 1e11ed8:    17 01             	{rets, r7-r4} = [sp++]
 1e11eda:    8d 1f             	goto -230 <le_hw_resume : 1e11df6 >


le_hw_destroy:
 1e11edc:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:4289:0
 1e11ede:    c4 ff e4 2f 00 00 	r4 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:4289:0
 1e11ee4:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4292:11
 1e11ee6:    24 20             	if (r0 == 0) goto 72 <le_hw_destroy+0x54 : 1e11f30 >			  ## RF_ble.c:4292:11
 1e11ee8:    05 70             	r5 = 0
 1e11eea:    06 70             	r6 = 0			  ## RF_ble.c:4299:13
 1e11eec:    03 18             	goto 6 <le_hw_destroy+0x18 : 1e11ef4 >			  ## RF_ble.c:4299:13
 1e11eee:    00 48             	r0 = [r4 + 0]
 1e11ef0:    c5 81             	r5 += 28			  ## RF_ble.c:4298:5
 1e11ef2:    26 80             	r6 += 2			  ## RF_ble.c:4298:5
 1e11ef4:    01 f8 00 06       	r1 = h[r0+r6] (u)			  ## RF_ble.c:4299:13
 1e11ef8:    03 22             	if (r1 == 0) goto 6 <le_hw_destroy+0x24 : 1e11f00 >			  ## RF_ble.c:4299:13
 1e11efa:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:4300:42
 1e11efc:    50 09             	r0 += r5			  ## RF_ble.c:4300:13
 1e11efe:    8d 17             	call -230 <le_hw_close : 1e11e1a >			  ## RF_ble.c:4300:13
 1e11f00:    e6 e0 f5 1f       	if (r6 != 14) goto -22 <le_hw_destroy+0x12 : 1e11eee >
 1e11f04:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >
 1e11f0a:    00 f6 f4 50       	r0 = [r5 + 244]			  ## hw_dma.c:109:17
 1e11f0e:    09 20             	if (r0 == 0) goto 18 <le_hw_destroy+0x46 : 1e11f22 >			  ## hw_dma.c:109:17
 1e11f10:    01 f6 f0 50       	r1 = [r5 + 240]			  ## hw_dma.c:109:31
 1e11f14:    06 22             	if (r1 == 0) goto 12 <le_hw_destroy+0x46 : 1e11f22 >			  ## hw_dma.c:109:31
 1e11f16:    bf f3 04 7b       	call -68088 <lbuf_clear_btctrler : 1e01522 >			  ## hw_dma.c:110:9
 1e11f1a:    00 f6 f0 50       	r0 = [r5 + 240]			  ## hw_dma.c:111:37
 1e11f1e:    bf f3 00 7b       	call -68096 <lbuf_clear_btctrler : 1e01522 >			  ## hw_dma.c:111:9
 1e11f22:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4307:10
 1e11f24:    bf f3 41 cd       	call -25982 <free : 1e0b9aa >			  ## RF_ble.c:4307:5
 1e11f28:    20 fb 64 04       	r0 = 1867776			  ## RF_ble.c:4309:14
 1e11f2c:    c0 f4 00 09       	[r0 + 0] = 0			  ## RF_ble.c:4309:14
 1e11f30:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:4313:1


ble_enter_deepsleep:
 1e11f32:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:721:0
 1e11f34:    04 08             	r4 = r0			  ## le_low_power.c:721:0
 1e11f36:    20 fb 64 14       	r1 = 1867776			  ## le_low_power.c:722:5
 1e11f3a:    c2 75             	r2 = 92			  ## le_low_power.c:722:5
 1e11f3c:    97 f3 d2 a7       	call 3100580 <memcpy : 106ee4 >			  ## le_low_power.c:722:5
 1e11f40:    40 fc 5c 00       	r0 = r4 + 92			  ## le_low_power.c:727:9
 1e11f44:    22 70             	r2 = 2			  ## le_low_power.c:727:9
 1e11f46:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:727:9
 1e11f4c:    03 fb 02 40       	r3 = 16386 <low_power_system_down+0x196 : 4002 >			  ## le_low_power.c:727:9
 1e11f50:    0a 42             	[r1 + 0] = r2			  ## le_low_power.c:705:21
 1e11f52:    08 00             	csync			  ## le_low_power.c:706:5
 1e11f54:    25 42             	r5 = [r1 + 8]			  ## le_low_power.c:708:12
 1e11f56:    22 fc 00 04       	r2 = r2 + 1024			  ## le_low_power.c:727:27
 1e11f5a:    95 f7 02 00       	h[r0 ++= 2] = r5			  ## le_low_power.c:728:45
 1e11f5e:    32 f2 f7 1f       	if (r2 != r3) goto -18 <ble_enter_deepsleep+0x1E : 1e11f50 >			  ## le_low_power.c:727:9
 1e11f62:    b0 42             	r0 = [r1 + 44]			  ## le_low_power.c:732:39
 1e11f64:    10 f6 5c 41       	[r4 + 348] = r0			  ## le_low_power.c:732:37
 1e11f68:    c0 ff 7c 0f 00 00 	r0 = 3964 <ble_finetimecnt_poweroff_sfr : f7c >			  ## le_low_power.c:734:34
 1e11f6e:    c0 f4 00 09       	[r0 + 0] = 0			  ## le_low_power.c:734:34
 1e11f72:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:735:1


ble_exit_deepsleep:
 1e11f74:    77 01             	[--sp] = {rets, r7-r4}			  ## le_low_power.c:759:0
 1e11f76:    04 08             	r4 = r0			  ## le_low_power.c:759:0
 1e11f78:    20 fb 64 04       	r0 = 1867776			  ## le_low_power.c:760:5
 1e11f7c:    c2 75             	r2 = 92			  ## le_low_power.c:760:5
 1e11f7e:    41 08             	r1 = r4			  ## le_low_power.c:760:5
 1e11f80:    97 f3 b0 a7       	call 3100512 <memcpy : 106ee4 >			  ## le_low_power.c:760:5
 1e11f84:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:760:5
 1e11f8a:    07 f4 01 09       	[r0 + 28] |= 1			  ## le_low_power.c:764:5
 1e11f8e:    07 f4 04 09       	[r0 + 28] |= 4			  ## le_low_power.c:766:5
 1e11f92:    41 fc 5c 00       	r1 = r4 + 92
 1e11f96:    02 70             	r2 = 0
 1e11f98:    53 70             	r3 = 5
 1e11f9a:    05 fb 05 40       	r5 = 16389 <low_power_system_down+0x199 : 4005 >
 1e11f9e:    16 08             	r6 = r1
 1e11fa0:    22 e0 06 00       	if (r2 == 2) goto 12 <ble_exit_deepsleep+0x3C : 1e11fb0 >
 1e11fa4:    92 e0 04 00       	if (r2 == 9) goto 8 <ble_exit_deepsleep+0x3C : 1e11fb0 >
 1e11fa8:    07 5c             	r7 = h[r6 + 0] (u)			  ## le_low_power.c:772:51
 1e11faa:    1f 40             	[r0 + 4] = r7			  ## le_low_power.c:714:21
 1e11fac:    08 00             	csync			  ## le_low_power.c:715:5
 1e11fae:    0b 40             	[r0 + 0] = r3			  ## le_low_power.c:716:21
 1e11fb0:    26 80             	r6 += 2			  ## le_low_power.c:769:27
 1e11fb2:    33 fc 00 04       	r3 = r3 + 1024			  ## le_low_power.c:769:27
 1e11fb6:    12 80             	r2 += 1			  ## le_low_power.c:769:72
 1e11fb8:    53 f2 f2 1f       	if (r3 != r5) goto -28 <ble_exit_deepsleep+0x2C : 1e11fa0 >
 1e11fbc:    92 52             	r2 = h[r1 + 18] (u)			  ## le_low_power.c:744:18
 1e11fbe:    21 52             	r1 = h[r1 + 4] (u)			  ## le_low_power.c:746:18
 1e11fc0:    d3 d1             	r3 = r2 >> 7			  ## le_low_power.c:748:42
 1e11fc2:    21 fd fe 1a       	r1 = r1 & 65024			  ## le_low_power.c:748:31
 1e11fc6:    51 b6             	r1 |= r3			  ## le_low_power.c:748:31
 1e11fc8:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e11fca:    08 00             	csync			  ## le_low_power.c:715:5
 1e11fcc:    01 fb 05 08       	r1 = 2053 <report_mmu_tlb_size+0x5 : 805 >			  ## le_low_power.c:716:21
 1e11fd0:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e11fd2:    01 fd 40 29       	r1 = r2 | 64			  ## le_low_power.c:754:49
 1e11fd6:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e11fd8:    08 00             	csync			  ## le_low_power.c:715:5
 1e11fda:    01 fb 05 24       	r1 = 9221 <g_bt_read_len+0x1 : 2405 >			  ## le_low_power.c:716:21
 1e11fde:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e11fe0:    00 f6 5c 41       	r0 = [r4 + 348]			  ## le_low_power.c:779:48
 1e11fe4:    c1 ff 7c 0f 00 00 	r1 = 3964 <ble_finetimecnt_poweroff_sfr : f7c >			  ## le_low_power.c:779:34
 1e11fea:    08 42             	[r1 + 0] = r0			  ## le_low_power.c:779:34
 1e11fec:    57 01             	{pc, r7-r4} = [sp++]			  ## le_low_power.c:780:1


__set_local_addr:
 1e11fee:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:696:0
 1e11ff0:    05 08             	r5 = r0			  ## RF_ble.c:696:0
 1e11ff2:    30 5a             	r0 = h[r5 + 6] (u)			  ## RF_ble.c:699:23
 1e11ff4:    24 08             	r4 = r2			  ## RF_ble.c:699:23
 1e11ff6:    90 b1             	r0 |= 8			  ## RF_ble.c:699:23
 1e11ff8:    38 5a             	h[r5 + 6] = r0			  ## RF_ble.c:699:23
 1e11ffa:    10 70             	r0 = 1			  ## RF_ble.c:699:23
 1e11ffc:    01 32             	if (r1 != 0) goto 2 <__set_local_addr+0x12 : 1e12000 >			  ## RF_ble.c:699:23
 1e11ffe:    00 70             	r0 = 0			  ## RF_ble.c:701:27
 1e12000:    10 f9 68 51       	b[r5 + 360] = r0			  ## RF_ble.c:701:25
 1e12004:    50 fc 69 01       	r0 = r5 + 361			  ## RF_ble.c:703:5
 1e12008:    62 70             	r2 = 6			  ## RF_ble.c:703:5
 1e1200a:    41 08             	r1 = r4			  ## RF_ble.c:703:5
 1e1200c:    97 f3 6a a7       	call 3100372 <memcpy : 106ee4 >			  ## RF_ble.c:703:5
 1e12010:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:705:29
 1e12012:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:705:45
 1e12014:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:705:43
 1e12018:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:705:43
 1e1201c:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:705:26
 1e1201e:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:706:29
 1e12020:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:706:45
 1e12022:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:706:43
 1e12026:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:706:26
 1e12028:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:707:29
 1e1202a:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:707:45
 1e1202c:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:707:43
 1e12030:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:707:26
 1e12032:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:708:1


__set_peer_addr:
 1e12034:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:742:0
 1e12036:    24 08             	r4 = r2			  ## RF_ble.c:742:0
 1e12038:    05 08             	r5 = r0			  ## RF_ble.c:742:0
 1e1203a:    10 70             	r0 = 1			  ## RF_ble.c:742:0
 1e1203c:    01 32             	if (r1 != 0) goto 2 <__set_peer_addr+0xC : 1e12040 >			  ## RF_ble.c:742:0
 1e1203e:    00 70             	r0 = 0			  ## RF_ble.c:743:26
 1e12040:    10 f9 6f 51       	b[r5 + 367] = r0			  ## RF_ble.c:743:24
 1e12044:    50 fc 70 01       	r0 = r5 + 368			  ## RF_ble.c:745:5
 1e12048:    62 70             	r2 = 6			  ## RF_ble.c:745:5
 1e1204a:    41 08             	r1 = r4			  ## RF_ble.c:745:5
 1e1204c:    97 f3 4a a7       	call 3100308 <memcpy : 106ee4 >			  ## RF_ble.c:745:5
 1e12050:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:747:30
 1e12052:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:747:46
 1e12054:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:747:44
 1e12058:    50 fc 4c 00       	r0 = r5 + 76			  ## RF_ble.c:747:44
 1e1205c:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:747:27
 1e1205e:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:748:30
 1e12060:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:748:46
 1e12062:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:748:44
 1e12066:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:748:27
 1e12068:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:749:30
 1e1206a:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:749:46
 1e1206c:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:749:44
 1e12070:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:749:27
 1e12072:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:750:1


__set_channel_map:
 1e12074:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:754:0
 1e12076:    08 70             	r8 = 0			  ## RF_ble.c:754:0
 1e12078:    19 70             	r9 = 1			  ## RF_ble.c:754:0
 1e1207a:    0a 70             	r10 = 0			  ## RF_ble.c:754:0
 1e1207c:    04 70             	r4 = 0			  ## RF_ble.c:754:0
 1e1207e:    62 c0             	r2 = r4 << 1			  ## RF_ble.c:755:9
 1e12080:    27 94             	r7 = r2 + 2			  ## RF_ble.c:755:9
 1e12082:    46 08             	r6 = r4			  ## RF_ble.c:755:9
 1e12084:    54 e2 23 a0       	ifs (r4 >= 37) goto 70 <__set_channel_map+0x5A : 1e120ce >
 1e12088:    04 28             	if (r4 == 0) goto 8 <__set_channel_map+0x1E : 1e12092 >
 1e1208a:    b4 e0 03 10       	if (r4 != 11) goto 6 <__set_channel_map+0x20 : 1e12094 >
 1e1208e:    2a 70             	r10 = 2
 1e12090:    01 18             	goto 2 <__set_channel_map+0x20 : 1e12094 >
 1e12092:    0a 70             	r10 = 0
 1e12094:    03 b1             	r3 = r0 + r4			  ## RF_ble.c:777:29
 1e12096:    16 f9 68 30       	b[r3 + 104] = r6			  ## RF_ble.c:777:29
 1e1209a:    80 fb 70 2a       	r2 = r10 + r7			  ## RF_ble.c:778:31
 1e1209e:    12 f9 b8 30       	b[r3 + 184] = r2			  ## RF_ble.c:778:29
 1e120a2:    23 fd 07 49       	r3 = r4 & 7			  ## RF_ble.c:779:31
 1e120a6:    e5 d8             	r5 = r4 >>> 3			  ## RF_ble.c:779:23
 1e120a8:    05 fa 00 15       	r5 = b[r1+r5] (u)			  ## RF_ble.c:779:13
 1e120ac:    f8 fd 30 39       	r3 = r9 << r3			  ## RF_ble.c:779:31
 1e120b0:    16 80             	r6 += 1			  ## RF_ble.c:779:13
 1e120b2:    27 80             	r7 += 2			  ## RF_ble.c:779:13
 1e120b4:    14 80             	r4 += 1			  ## RF_ble.c:778:34
 1e120b6:    35 f0 e5 ff       	if ((r5 & r3) == 0) goto -54 <__set_channel_map+0x10 : 1e12084 >
 1e120ba:    80 fb 80 30       	r3 = r0 + r8			  ## RF_ble.c:780:13
 1e120be:    65 fc ff ff       	r5 = r6 + -1			  ## RF_ble.c:780:35
 1e120c2:    15 f9 90 30       	b[r3 + 144] = r5			  ## RF_ble.c:780:35
 1e120c6:    12 f9 e0 30       	b[r3 + 224] = r2			  ## RF_ble.c:781:37
 1e120ca:    18 80             	r8 += 1			  ## RF_ble.c:781:33
 1e120cc:    d8 1f             	goto -80 <__set_channel_map+0xA : 1e1207e >
 1e120ce:    03 fc 8d 00       	r3 = r0 + 141			  ## RF_ble.c:785:17
 1e120d2:    04 70             	r4 = 0			  ## RF_ble.c:785:17
 1e120d4:    55 72             	r5 = 37
 1e120d6:    c2 ff 1a f0 e0 01 	r2 = 31518746 <bluetooth_base_uuid+0x10 : 1e0f01a >
 1e120dc:    06 fa 00 42       	r6 = b[r4+r2] (u)			  ## RF_ble.c:785:17
 1e120e0:    07 b7             	r7 = r3 + r4			  ## RF_ble.c:789:34
 1e120e2:    0d 6e             	b[r7 + 0] = r5			  ## RF_ble.c:789:34
 1e120e4:    16 f9 50 70       	b[r7 + 80] = r6			  ## RF_ble.c:790:34
 1e120e8:    15 f9 28 70       	b[r7 + 40] = r5			  ## RF_ble.c:791:34
 1e120ec:    16 f9 78 70       	b[r7 + 120] = r6			  ## RF_ble.c:792:34
 1e120f0:    14 80             	r4 += 1			  ## RF_ble.c:784:25
 1e120f2:    15 80             	r5 += 1			  ## RF_ble.c:784:19
 1e120f4:    34 e0 f2 1f       	if (r4 != 3) goto -28 <__set_channel_map+0x68 : 1e120dc >			  ## RF_ble.c:784:19
 1e120f8:    12 62             	r2 = b[r1 + 1] (u)			  ## RF_ble.c:795:23
 1e120fa:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:795:42
 1e120fc:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:795:40
 1e12100:    7b 51             	h[r0 + 46] = r3			  ## RF_ble.c:795:20
 1e12102:    32 62             	r2 = b[r1 + 3] (u)			  ## RF_ble.c:796:23
 1e12104:    23 62             	r3 = b[r1 + 2] (u)			  ## RF_ble.c:796:42
 1e12106:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:796:40
 1e1210a:    8b 51             	h[r0 + 48] = r3			  ## RF_ble.c:796:20
 1e1210c:    41 62             	r1 = b[r1 + 4] (u)			  ## RF_ble.c:797:36
 1e1210e:    21 fd 1f 19       	r1 = r1 & 31			  ## RF_ble.c:797:47
 1e12112:    db fd 28 18       	r1 <= insert(r8, p:5, l:27)			  ## RF_ble.c:797:33
 1e12116:    99 51             	h[r0 + 50] = r1			  ## RF_ble.c:797:20
 1e12118:    71 51             	r1 = h[r0 + 46] (u)			  ## RF_ble.c:799:28
 1e1211a:    02 fc 50 02       	r2 = r0 + 592			  ## RF_ble.c:799:28
 1e1211e:    09 54             	h[r2 + 0] = r1			  ## RF_ble.c:799:18
 1e12120:    81 51             	r1 = h[r0 + 48] (u)			  ## RF_ble.c:800:28
 1e12122:    19 54             	h[r2 + 2] = r1			  ## RF_ble.c:800:18
 1e12124:    90 51             	r0 = h[r0 + 50] (u)			  ## RF_ble.c:801:28
 1e12126:    28 54             	h[r2 + 4] = r0			  ## RF_ble.c:801:18
 1e12128:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:802:1


__set_winoffset:
 1e1212a:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:458:0
 1e12130:    04 22             	if (r1 == 0) goto 8 <__set_winoffset+0x10 : 1e1213a >			  ## RF_ble.c:459:9
 1e12132:    91 b7             	r1 |= 32768			  ## RF_ble.c:460:47
 1e12134:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e12136:    08 00             	csync			  ## RF_ble.c:264:5
 1e12138:    03 18             	goto 6 <__set_winoffset+0x16 : 1e12140 >			  ## RF_ble.c:264:5
 1e1213a:    c1 f4 00 29       	[r2 + 4] = 0			  ## RF_ble.c:263:21
 1e1213e:    08 00             	csync			  ## RF_ble.c:264:5
 1e12140:    c1 ff e4 2f 00 00 	r1 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e12146:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e12148:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e1214a:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e1214c:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e1214e:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e12152:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e12154:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e12158:    01 fb 05 10       	r1 = 4101 <sys_clock_limit+0x55 : 1005 >			  ## RF_ble.c:265:67
 1e1215c:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e1215e:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e12160:    20 00             	rts			  ## RF_ble.c:464:1


__set_hw_state:
 1e12162:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:434:0
 1e12164:    03 40             	r3 = [r0 + 0]			  ## RF_ble.c:435:31
 1e12166:    74 70             	r4 = 7			  ## RF_ble.c:437:22
 1e12168:    33 fc 52 01       	r3 = r3 + 338			  ## RF_ble.c:437:22
 1e1216c:    0c 66             	b[r3 + 0] = r4			  ## RF_ble.c:437:22
 1e1216e:    3a 56             	h[r3 + 6] = r2			  ## RF_ble.c:438:22
 1e12170:    49 66             	b[r3 + 4] = r1			  ## RF_ble.c:439:22
 1e12172:    04 70             	r4 = 0			  ## RF_ble.c:440:27
 1e12174:    5c 66             	b[r3 + 5] = r4			  ## RF_ble.c:440:27
 1e12176:    c9 c2             	r1 = r1 << 11			  ## RF_ble.c:442:63
 1e12178:    51 b4             	r1 |= r2			  ## RF_ble.c:442:70
 1e1217a:    01 fd 70 1a       	r1 = r1 | 28672			  ## RF_ble.c:442:70
 1e1217e:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e12184:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e12186:    08 00             	csync			  ## RF_ble.c:264:5
 1e12188:    c1 ff e4 2f 00 00 	r1 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e1218e:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e12190:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e12192:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e12194:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e12196:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e1219a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e1219c:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e121a0:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e121a2:    51 81             	r1 += 21			  ## RF_ble.c:265:67
 1e121a4:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e121a6:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e121a8:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:443:1


__set_interval:
 1e121aa:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:288:0
 1e121ac:    03 40             	r3 = [r0 + 0]			  ## RF_ble.c:289:31
 1e121ae:    02 26             	if (r3 == 0) goto 4 <__set_interval+0xA : 1e121b4 >
 1e121b0:    11 f6 64 31       	[r3 + 356] = r1			  ## RF_ble.c:291:23
 1e121b4:    03 fb 71 02       	r3 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:293:43
 1e121b8:    e0 fe 30 11       	r1 = r1 / r3 (s)			  ## RF_ble.c:293:43
 1e121bc:    63 04             	r3 = r1.l (u)			  ## RF_ble.c:293:59
 1e121be:    c4 ff 1c 80 1c 00 	r4 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e121c4:    1b 48             	[r4 + 4] = r3			  ## RF_ble.c:263:21
 1e121c6:    08 00             	csync			  ## RF_ble.c:264:5
 1e121c8:    c3 ff e4 2f 00 00 	r3 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e121ce:    05 46             	r5 = [r3 + 0]			  ## RF_ble.c:134:19
 1e121d0:    45 4a             	r5 = [r5 + 16]			  ## RF_ble.c:134:35
 1e121d2:    65 b1             	r5 = r0 - r5			  ## RF_ble.c:134:17
 1e121d4:    c6 71             	r6 = 28			  ## RF_ble.c:134:17
 1e121d6:    e0 fe 60 55       	r5 = r5 / r6 (s)			  ## RF_ble.c:134:17
 1e121da:    2d c1             	r5 = r5 << 4			  ## RF_ble.c:265:50
 1e121dc:    25 fd 3f 50       	r5 = r5 & 3056			  ## RF_ble.c:265:50
 1e121e0:    07 fb 05 04       	r7 = 1029 <BTCTLER_LE_RAM_TOTAL+0x2D : 405 >			  ## RF_ble.c:265:67
 1e121e4:    55 be             	r5 |= r7			  ## RF_ble.c:265:67
 1e121e6:    0d 48             	[r4 + 0] = r5			  ## RF_ble.c:265:21
 1e121e8:    09 dc             	r1 = r1 >>> 16			  ## RF_ble.c:296:79
 1e121ea:    d2 c3             	r2 = r2 << 15			  ## RF_ble.c:296:42
 1e121ec:    51 b4             	r1 |= r2			  ## RF_ble.c:296:49
 1e121ee:    19 48             	[r4 + 4] = r1			  ## RF_ble.c:263:21
 1e121f0:    08 00             	csync			  ## RF_ble.c:264:5
 1e121f2:    01 46             	r1 = [r3 + 0]			  ## RF_ble.c:134:19
 1e121f4:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e121f6:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e121f8:    e0 fe 60 00       	r0 = r0 / r6 (s)			  ## RF_ble.c:134:17
 1e121fc:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e121fe:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e12202:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e12204:    01 fb 05 3c       	r1 = 15365 <__hw_spi_clk_div+0x47 : 3c05 >			  ## RF_ble.c:265:67
 1e12208:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e1220a:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:265:21
 1e1220c:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:298:1


le_hw_ioctrl:
 1e1220e:    62 01             	[--sp] = {r3, r2}			  ## RF_ble.c:4114:0
 1e12210:    7d 01             	[--sp] = {rets, r13-r4}			  ## RF_ble.c:4114:0
 1e12212:    fe 0b             	sp += -4			  ## RF_ble.c:4114:0
 1e12214:    05 08             	r5 = r0			  ## RF_ble.c:4114:0
 1e12216:    00 a3             	r0 = sp + 48			  ## RF_ble.c:4114:0
 1e12218:    08 02             	[sp] = r0			  ## RF_ble.c:4116:5
 1e1221a:    71 e1 16 83       	if (r1 > 23) goto 1580 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4116:5
 1e1221e:    04 4a             	r4 = [r5 + 0]			  ## RF_ble.c:4117:31
 1e12220:    4b c0             	r3 = r1 << 1
 1e12222:    c8 ff e4 2f 00 00 	r8 = 12260 <bb_hdl : 2fe4 >
 1e12228:    20 fb 64 a4       	r10 = 1867776
 1e1222c:    4d fc 40 00       	r13 = r4 + 64
 1e12230:    4b fc 10 01       	r11 = r4 + 272
 1e12234:    47 fc 50 01       	r7 = r4 + 336
 1e12238:    40 fc a0 01       	r0 = r4 + 416
 1e1223c:    42 fc e8 01       	r2 = r4 + 488
 1e12240:    46 fc 4c 02       	r6 = r4 + 588
 1e12244:    b3 00             	tbh [r3]


.GJTIL699_0_0_:
 1e12246:    18 00     < 24 : 0x18 >
 1e12248:    39 00     < 57 : 0x39 >
 1e1224a:    43 00     < 67 : 0x43 >
 1e1224c:    4e 00     < 78 : 0x4E >
 1e1224e:    59 00     < 89 : 0x59 >
 1e12250:    82 00     < 130 : 0x82 >
 1e12252:    92 00     < 146 : 0x92 >
 1e12254:    3a 01     < 314 : 0x13A >
 1e12256:    71 01     < 369 : 0x171 >
 1e12258:    78 01     < 376 : 0x178 >
 1e1225a:    a3 01     < 419 : 0x1A3 >
 1e1225c:    af 01     < 431 : 0x1AF >
 1e1225e:    02 03     < 770 : 0x302 >
 1e12260:    bb 01     < 443 : 0x1BB >
 1e12262:    02 03     < 770 : 0x302 >
 1e12264:    df 01     < 479 : 0x1DF >
 1e12266:    02 03     < 770 : 0x302 >
 1e12268:    e5 01     < 485 : 0x1E5 >
 1e1226a:    eb 01     < 491 : 0x1EB >
 1e1226c:    f1 01     < 497 : 0x1F1 >
 1e1226e:    ff 01     < 511 : 0x1FF >
 1e12270:    0d 02     < 525 : 0x20D >
 1e12272:    1d 02     < 541 : 0x21D >
 1e12274:    2e 02     < 558 : 0x22E >
 1e12276:    01 02             	r1 = [sp]			  ## RF_ble.c:4123:39
 1e12278:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4123:39
 1e1227a:    0a 02             	[sp] = r2			  ## RF_ble.c:4123:39
 1e1227c:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4123:39
 1e1227e:    22 62             	r2 = b[r1 + 2] (u)			  ## RF_ble.c:4123:9
 1e12280:    63 62             	r3 = b[r1 + 6] (u)			  ## RF_ble.c:4123:9
 1e12282:    04 62             	r4 = b[r1 + 0] (u)			  ## RF_ble.c:4123:9
 1e12284:    08 f9 01 10       	r8 = b[r1 + 1] (u)			  ## RF_ble.c:4123:9
 1e12288:    76 62             	r6 = b[r1 + 7] (u)			  ## RF_ble.c:4123:9
 1e1228a:    57 62             	r7 = b[r1 + 5] (u)			  ## RF_ble.c:4123:9
 1e1228c:    45 62             	r5 = b[r1 + 4] (u)			  ## RF_ble.c:4123:9
 1e1228e:    31 62             	r1 = b[r1 + 3] (u)			  ## RF_ble.c:4123:9
 1e12290:    3e 61             	b[r0 + 19] = r6			  ## RF_ble.c:4123:9
 1e12292:    1f 61             	b[r0 + 17] = r7			  ## RF_ble.c:4123:9
 1e12294:    0d 61             	b[r0 + 16] = r5			  ## RF_ble.c:4123:9
 1e12296:    f9 60             	b[r0 + 15] = r1			  ## RF_ble.c:4123:9
 1e12298:    18 f9 0d 00       	b[r0 + 13] = r8			  ## RF_ble.c:4123:9
 1e1229c:    cc 60             	b[r0 + 12] = r4			  ## RF_ble.c:4123:9
 1e1229e:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## RF_ble.c:4123:9
 1e122a2:    d0 fd 80 53       	r5 <= insert(r3, p:16, l:16)			  ## RF_ble.c:4123:9
 1e122a6:    2b d4             	r3 = r5 >> 16			  ## RF_ble.c:4123:9
 1e122a8:    2b 61             	b[r0 + 18] = r3			  ## RF_ble.c:4123:9
 1e122aa:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## RF_ble.c:4123:9
 1e122ae:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## RF_ble.c:4123:9
 1e122b2:    21 d4             	r1 = r4 >> 16			  ## RF_ble.c:4123:9
 1e122b4:    e9 60             	b[r0 + 14] = r1			  ## RF_ble.c:4123:9
 1e122b6:    c9 1a             	goto 1426 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4123:9
 1e122b8:    00 02             	r0 = [sp]			  ## RF_ble.c:4128:40
 1e122ba:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4128:40
 1e122bc:    09 02             	[sp] = r1			  ## RF_ble.c:4128:40
 1e122be:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4128:40
 1e122c0:    70 fc 64 00       	r0 = r7 + 100			  ## RF_ble.c:4128:9
 1e122c4:    02 71             	r2 = 16			  ## RF_ble.c:4128:9
 1e122c6:    97 f3 0d a6       	call 3099674 <memcpy : 106ee4 >			  ## RF_ble.c:4128:9
 1e122ca:    bf 1a             	goto 1406 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4128:9
 1e122cc:    00 02             	r0 = [sp]			  ## RF_ble.c:4131:31
 1e122ce:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4131:31
 1e122d0:    09 02             	[sp] = r1			  ## RF_ble.c:4131:31
 1e122d2:    02 02             	r2 = [sp]			  ## RF_ble.c:4131:58
 1e122d4:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4131:31
 1e122d6:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4131:58
 1e122d8:    08 02             	[sp] = r0			  ## RF_ble.c:4131:58
 1e122da:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4131:58
 1e122dc:    40 08             	r0 = r4			  ## RF_ble.c:4131:9
 1e122de:    87 16             	call -754 <__set_local_addr : 1e11fee >			  ## RF_ble.c:4131:9
 1e122e0:    b4 1a             	goto 1384 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4131:9
 1e122e2:    00 02             	r0 = [sp]			  ## RF_ble.c:4134:30
 1e122e4:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4134:30
 1e122e6:    09 02             	[sp] = r1			  ## RF_ble.c:4134:30
 1e122e8:    02 02             	r2 = [sp]			  ## RF_ble.c:4134:57
 1e122ea:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4134:30
 1e122ec:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4134:57
 1e122ee:    08 02             	[sp] = r0			  ## RF_ble.c:4134:57
 1e122f0:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4134:57
 1e122f2:    40 08             	r0 = r4			  ## RF_ble.c:4134:9
 1e122f4:    9f 16             	call -706 <__set_peer_addr : 1e12034 >			  ## RF_ble.c:4134:9
 1e122f6:    a9 1a             	goto 1362 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4134:9
 1e122f8:    00 02             	r0 = [sp]			  ## RF_ble.c:4138:33
 1e122fa:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4138:33
 1e122fc:    09 02             	[sp] = r1			  ## RF_ble.c:4138:33
 1e122fe:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4138:33
 1e12300:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e12304:    08 00             	csync			  ## RF_ble.c:264:5
 1e12306:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e1230a:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e1230c:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e1230e:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e12310:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e12314:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e12316:    21 fd 3f 10       	r1 = r1 & 3056			  ## RF_ble.c:265:50
 1e1231a:    02 fb 05 14       	r2 = 5125 <UPDATE_CODE_TOTAL_SIZE+0x1C3 : 1405 >			  ## RF_ble.c:265:67
 1e1231e:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e12320:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e12324:    78 5e             	h[r7 + 14] = r0			  ## RF_ble.c:473:18
 1e12326:    10 70             	r0 = 1			  ## RF_ble.c:473:18
 1e12328:    d8 6e             	b[r7 + 13] = r0			  ## RF_ble.c:474:24
 1e1232a:    00 f7 36 b0       	r0 = h[r11 + 54] (u)
 1e1232e:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e12332:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:823:23
 1e12336:    11 f7 36 b0       	h[r11 + 54] = r1			  ## RF_ble.c:823:23
 1e1233a:    2d f3 86 02       	if ((r0 & 8192) != 0) goto 1292 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:823:23
 1e1233e:    e0 71             	r0 = 30			  ## RF_ble.c:827:28
 1e12340:    10 f7 20 d0       	h[r13 + 32] = r0			  ## RF_ble.c:827:28
 1e12344:    10 f7 1e d0       	h[r13 + 30] = r0			  ## RF_ble.c:828:28
 1e12348:    80 1a             	goto 1280 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:828:28
 1e1234a:    00 02             	r0 = [sp]			  ## RF_ble.c:4142:28
 1e1234c:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4142:28
 1e1234e:    09 02             	[sp] = r1			  ## RF_ble.c:4142:28
 1e12350:    01 02             	r1 = [sp]			  ## RF_ble.c:4142:49
 1e12352:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4142:28
 1e12354:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4142:49
 1e12356:    0a 02             	[sp] = r2			  ## RF_ble.c:4142:49
 1e12358:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4142:49
 1e1235a:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:663:25
 1e1235c:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:665:36
 1e1235e:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e12360:    10 f7 02 b0       	h[r11 + 2] = r0			  ## RF_ble.c:666:25
 1e12364:    11 f6 3c b0       	[r11 + 60] = r1			  ## RF_ble.c:671:16
 1e12368:    70 1a             	goto 1248 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:671:16
 1e1236a:    00 02             	r0 = [sp]			  ## RF_ble.c:4150:61
 1e1236c:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4150:61
 1e1236e:    09 02             	[sp] = r1			  ## RF_ble.c:4150:61
 1e12370:    09 f6 00 00       	r9 = [r0 + 0]			  ## RF_ble.c:4150:61
 1e12374:    c0 ff 6c 0f 00 00 	r0 = 3948 <g_ble_fp : f6c >			  ## RF_ble.c:966:14
 1e1237a:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:966:14
 1e1237c:    00 f7 36 b0       	r0 = h[r11 + 54] (u)
 1e12380:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e12384:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:823:23
 1e12388:    11 f7 36 b0       	h[r11 + 54] = r1			  ## RF_ble.c:823:23
 1e1238c:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <.GJTIE699_0_0_+0x124 : 1e1239a >			  ## RF_ble.c:823:23
 1e12390:    c0 71             	r0 = 28			  ## RF_ble.c:827:28
 1e12392:    10 f7 20 d0       	h[r13 + 32] = r0			  ## RF_ble.c:827:28
 1e12396:    10 f7 1e d0       	h[r13 + 30] = r0			  ## RF_ble.c:828:28
 1e1239a:    20 fb 80 0a       	r0 = 32768			  ## RF_ble.c:970:20
 1e1239e:    08 58             	h[r4 + 0] = r0			  ## RF_ble.c:970:20
 1e123a0:    70 58             	r0 = h[r4 + 14] (u)			  ## RF_ble.c:971:19
 1e123a2:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:971:19
 1e123a4:    78 58             	h[r4 + 14] = r0			  ## RF_ble.c:971:19
 1e123a6:    02 70             	r2 = 0			  ## RF_ble.c:971:19
 1e123a8:    8a 58             	h[r4 + 16] = r2			  ## RF_ble.c:973:19
 1e123aa:    01 70             	r1 = 0			  ## RF_ble.c:975:23
 1e123ac:    90 08             	r0 = r9			  ## RF_ble.c:975:23
 1e123ae:    bf f3 dc 93       	call -55368 <btctler_little_endian_read_16 : 1e04b6a >			  ## RF_ble.c:975:23
 1e123b2:    58 58             	h[r4 + 10] = r0			  ## RF_ble.c:975:21
 1e123b4:    21 70             	r1 = 2			  ## RF_ble.c:976:23
 1e123b6:    90 08             	r0 = r9			  ## RF_ble.c:976:23
 1e123b8:    bf f3 d7 93       	call -55378 <btctler_little_endian_read_16 : 1e04b6a >			  ## RF_ble.c:976:23
 1e123bc:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:976:21
 1e123be:    90 fc 04 00       	r0 = r9 + 4			  ## RF_ble.c:978:54
 1e123c2:    01 70             	r1 = 0			  ## RF_ble.c:978:24
 1e123c4:    bf f3 d1 93       	call -55390 <btctler_little_endian_read_16 : 1e04b6a >			  ## RF_ble.c:978:24
 1e123c8:    10 f7 04 d0       	h[r13 + 4] = r0			  ## RF_ble.c:978:22
 1e123cc:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## RF_ble.c:979:24
 1e123d0:    10 f7 06 d0       	h[r13 + 6] = r0			  ## RF_ble.c:979:22
 1e123d4:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:982:21
 1e123d6:    10 b1             	r0 |= 4			  ## RF_ble.c:982:21
 1e123d8:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:982:21
 1e123da:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:984:5
 1e123dc:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:984:5
 1e123de:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:984:5
 1e123e0:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:985:5
 1e123e2:    00 fd 0c 0a       	r0 = r0 | 3072			  ## RF_ble.c:985:5
 1e123e6:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:985:5
 1e123e8:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:986:5
 1e123ea:    10 b6             	r0 |= 4096			  ## RF_ble.c:986:5
 1e123ec:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:986:5
 1e123ee:    00 f7 22 d0       	r0 = h[r13 + 34] (u)			  ## RF_ble.c:987:5
 1e123f2:    30 fd 30 09       	r0 = r0 & 4294967247			  ## RF_ble.c:987:5
 1e123f6:    10 b2             	r0 |= 16			  ## RF_ble.c:987:5
 1e123f8:    10 f7 22 d0       	h[r13 + 34] = r0			  ## RF_ble.c:987:5
 1e123fc:    40 fc 64 00       	r0 = r4 + 100			  ## RF_ble.c:987:5
 1e12400:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:988:5
 1e12402:    11 b0             	r1 |= 1			  ## RF_ble.c:988:5
 1e12404:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:988:5
 1e12406:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:989:5
 1e12408:    11 b0             	r1 |= 1			  ## RF_ble.c:989:5
 1e1240a:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:989:5
 1e1240c:    e1 6a             	r1 = b[r5 + 14] (u)			  ## RF_ble.c:946:21
 1e1240e:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:946:21
 1e12410:    03 32             	if (r1 != 0) goto 6 <.GJTIE699_0_0_+0x1A2 : 1e12418 >
 1e12412:    01 50             	r1 = h[r0 + 0] (u)			  ## RF_ble.c:948:36
 1e12414:    11 b1             	r1 |= 4			  ## RF_ble.c:948:36
 1e12416:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:948:36
 1e12418:    12 f6 20 a0       	[r10 + 32] = r2			  ## RF_ble.c:263:21
 1e1241c:    08 00             	csync			  ## RF_ble.c:264:5
 1e1241e:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e12422:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e12424:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e12426:    cc 71             	r12 = 28			  ## RF_ble.c:134:17
 1e12428:    e0 fe c0 11       	r1 = r1 / r12 (s)			  ## RF_ble.c:134:17
 1e1242c:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e1242e:    21 fd 3f 10       	r1 = r1 & 3056			  ## RF_ble.c:265:50
 1e12432:    03 fb 05 14       	r3 = 5125 <UPDATE_CODE_TOTAL_SIZE+0x1C3 : 1405 >			  ## RF_ble.c:265:67
 1e12436:    51 b6             	r1 |= r3			  ## RF_ble.c:265:67
 1e12438:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e1243c:    12 f7 5e 01       	h[r0 + 350] = r2			  ## RF_ble.c:473:18
 1e12440:    11 70             	r1 = 1			  ## RF_ble.c:473:18
 1e12442:    11 f9 5d 01       	b[r0 + 349] = r1			  ## RF_ble.c:474:24
 1e12446:    da 6e             	b[r7 + 13] = r2			  ## RF_ble.c:1002:24
 1e12448:    20 6e             	r0 = b[r7 + 2] (u)			  ## RF_ble.c:1004:14
 1e1244a:    30 e0 30 11       	if (r0 != 3) goto 608 <.GJTIE699_0_0_+0x438 : 1e126ae >			  ## RF_ble.c:1004:9
 1e1244e:    06 70             	r6 = 0
 1e12450:    16 f6 20 a0       	[r10 + 32] = r6			  ## RF_ble.c:263:21
 1e12454:    08 00             	csync			  ## RF_ble.c:264:5
 1e12456:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e1245a:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e1245c:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:134:17
 1e1245e:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:134:17
 1e12462:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e12464:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e12468:    01 fb 05 10       	r1 = 4101 <sys_clock_limit+0x55 : 1005 >			  ## RF_ble.c:265:67
 1e1246c:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e1246e:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:265:21
 1e12472:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## RF_ble.c:1009:31
 1e12476:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1009:53
 1e12478:    41 90             	r1 = r0 + 4			  ## RF_ble.c:1009:61
 1e1247a:    50 08             	r0 = r5			  ## RF_ble.c:1009:9
 1e1247c:    65 14             	call -1846 <__set_anchor_cnt : 1e11d48 >			  ## RF_ble.c:1009:9
 1e1247e:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:435:31
 1e12480:    01 f7 0c 90       	r1 = h[r9 + 12] (u)			  ## RF_ble.c:1020:59
 1e12484:    62 70             	r2 = 6			  ## RF_ble.c:437:22
 1e12486:    00 fc 52 01       	r0 = r0 + 338			  ## RF_ble.c:437:22
 1e1248a:    0a 60             	b[r0 + 0] = r2			  ## RF_ble.c:437:22
 1e1248c:    39 50             	h[r0 + 6] = r1			  ## RF_ble.c:438:22
 1e1248e:    4e 60             	b[r0 + 4] = r6			  ## RF_ble.c:439:22
 1e12490:    5e 60             	b[r0 + 5] = r6			  ## RF_ble.c:440:27
 1e12492:    00 fd 60 1a       	r0 = r1 | 24576			  ## RF_ble.c:442:70
 1e12496:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e1249a:    08 00             	csync			  ## RF_ble.c:264:5
 1e1249c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e124a0:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e124a2:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:134:17
 1e124a4:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:134:17
 1e124a8:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e124aa:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e124ae:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e124b0:    51 81             	r1 += 21			  ## RF_ble.c:265:67
 1e124b2:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e124b4:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:265:21
 1e124b8:    6e 19             	goto 732 <.GJTIE699_0_0_+0x520 : 1e12796 >			  ## RF_ble.c:265:21
 1e124ba:    00 02             	r0 = [sp]			  ## RF_ble.c:4154:62
 1e124bc:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4154:62
 1e124be:    09 02             	[sp] = r1			  ## RF_ble.c:4154:62
 1e124c0:    09 f6 00 00       	r9 = [r0 + 0]			  ## RF_ble.c:4154:62
 1e124c4:    21 6e             	r1 = b[r7 + 2] (u)			  ## RF_ble.c:1061:14
 1e124c6:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## RF_ble.c:1061:14
 1e124ca:    61 e0 f7 10       	if (r1 != 6) goto 494 <.GJTIE699_0_0_+0x446 : 1e126bc >			  ## RF_ble.c:1061:9
 1e124ce:    01 f9 07 90       	r1 = b[r9 + 7] (u)			  ## RF_ble.c:1063:32
 1e124d2:    02 fb e2 04       	r2 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1063:49
 1e124d6:    89 0e             	r1 = r1 * r2			  ## RF_ble.c:1063:49
 1e124d8:    11 fc 71 02       	r1 = r1 + 625			  ## RF_ble.c:1063:56
 1e124dc:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:663:25
 1e124de:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:665:36
 1e124e0:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e124e2:    22 73             	r2 = 50			  ## RF_ble.c:666:25
 1e124e4:    12 f7 02 b0       	h[r11 + 2] = r2			  ## RF_ble.c:666:25
 1e124e8:    11 f6 3c b0       	[r11 + 60] = r1			  ## RF_ble.c:671:16
 1e124ec:    01 f7 0c 90       	r1 = h[r9 + 12] (u)			  ## RF_ble.c:1064:54
 1e124f0:    62 70             	r2 = 6			  ## RF_ble.c:437:22
 1e124f2:    2a 6e             	b[r7 + 2] = r2			  ## RF_ble.c:437:22
 1e124f4:    49 5e             	h[r7 + 8] = r1			  ## RF_ble.c:438:22
 1e124f6:    02 70             	r2 = 0			  ## RF_ble.c:439:22
 1e124f8:    6a 6e             	b[r7 + 6] = r2			  ## RF_ble.c:439:22
 1e124fa:    7a 6e             	b[r7 + 7] = r2			  ## RF_ble.c:440:27
 1e124fc:    01 fd 60 1a       	r1 = r1 | 24576			  ## RF_ble.c:442:70
 1e12500:    11 f6 20 a0       	[r10 + 32] = r1			  ## RF_ble.c:263:21
 1e12504:    08 00             	csync			  ## RF_ble.c:264:5
 1e12506:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e1250a:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e1250c:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e1250e:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e12510:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e12514:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e12516:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e1251a:    51 b5             	r1 &= r2			  ## RF_ble.c:265:50
 1e1251c:    52 81             	r2 += 21			  ## RF_ble.c:265:67
 1e1251e:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e12520:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e12524:    44 c0             	r4 = r0 << 1			  ## RF_ble.c:1062:38
 1e12526:    02 19             	goto 516 <.GJTIE699_0_0_+0x4B6 : 1e1272c >
 1e12528:    00 02             	r0 = [sp]			  ## RF_ble.c:4146:38
 1e1252a:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4146:38
 1e1252c:    09 02             	[sp] = r1			  ## RF_ble.c:4146:38
 1e1252e:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4146:38
 1e12530:    40 08             	r0 = r4			  ## RF_ble.c:4146:9
 1e12532:    a0 15             	call -1216 <__set_channel_map : 1e12074 >			  ## RF_ble.c:4146:9
 1e12534:    8a 19             	goto 788 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4146:9
 1e12536:    01 02             	r1 = [sp]			  ## RF_ble.c:4157:36
 1e12538:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4157:36
 1e1253a:    08 02             	[sp] = r0			  ## RF_ble.c:4157:36
 1e1253c:    00 02             	r0 = [sp]			  ## RF_ble.c:4157:63
 1e1253e:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4157:36
 1e12540:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4157:63
 1e12542:    09 02             	[sp] = r1			  ## RF_ble.c:4157:63
 1e12544:    11 70             	r1 = 1			  ## RF_ble.c:4157:63
 1e12546:    01 34             	if (r2 != 0) goto 2 <.GJTIE699_0_0_+0x2D4 : 1e1254a >			  ## RF_ble.c:4157:63
 1e12548:    01 70             	r1 = 0			  ## RF_ble.c:1112:17
 1e1254a:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4157:63
 1e1254c:    e2 59             	r2 = h[r4 + 60] (u)			  ## RF_ble.c:1113:35
 1e1254e:    22 fd 7e 29       	r2 = r2 & 126			  ## RF_ble.c:1113:46
 1e12552:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## RF_ble.c:1113:79
 1e12556:    01 fd 01 29       	r1 = r2 | 1			  ## RF_ble.c:1113:79
 1e1255a:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1113:24
 1e1255c:    e1 59             	r1 = h[r4 + 60] (u)			  ## RF_ble.c:1114:24
 1e1255e:    11 b2             	r1 |= 16			  ## RF_ble.c:1114:24
 1e12560:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1114:24
 1e12562:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:1116:28
 1e12564:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:1116:44
 1e12566:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1116:42
 1e1256a:    fa 59             	h[r4 + 62] = r2			  ## RF_ble.c:1116:25
 1e1256c:    31 60             	r1 = b[r0 + 3] (u)			  ## RF_ble.c:1117:28
 1e1256e:    22 60             	r2 = b[r0 + 2] (u)			  ## RF_ble.c:1117:44
 1e12570:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1117:42
 1e12574:    12 f7 00 d0       	h[r13 + 0] = r2			  ## RF_ble.c:1117:25
 1e12578:    51 60             	r1 = b[r0 + 5] (u)			  ## RF_ble.c:1118:28
 1e1257a:    40 60             	r0 = b[r0 + 4] (u)			  ## RF_ble.c:1118:44
 1e1257c:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1118:42
 1e12580:    10 f7 02 d0       	h[r13 + 2] = r0			  ## RF_ble.c:1118:25
 1e12584:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1096:21
 1e12586:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:1096:21
 1e12588:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1096:21
 1e1258a:    5f 19             	goto 702 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1096:21
 1e1258c:    01 02             	r1 = [sp]			  ## RF_ble.c:4161:35
 1e1258e:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4161:35
 1e12590:    0a 02             	[sp] = r2			  ## RF_ble.c:4161:35
 1e12592:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4161:35
 1e12594:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:1143:27
 1e12596:    61 ff ff 19 57 01 	if ((r1 & 255) != 0) goto 686 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1143:27
 1e1259c:    01 70             	r1 = 0
 1e1259e:    59 4f             	[r7 + 84] = r1			  ## RF_ble.c:1146:34
 1e125a0:    29 60             	b[r0 + 2] = r1			  ## RF_ble.c:1147:34
 1e125a2:    53 19             	goto 678 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1147:34
 1e125a4:    01 02             	r1 = [sp]			  ## RF_ble.c:4165:38
 1e125a6:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4165:38
 1e125a8:    0a 02             	[sp] = r2			  ## RF_ble.c:4165:38
 1e125aa:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4165:38
 1e125ac:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:1132:27
 1e125ae:    61 ff ff 19 4b 01 	if ((r1 & 255) != 0) goto 662 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1132:27
 1e125b4:    01 70             	r1 = 0
 1e125b6:    69 4f             	[r7 + 88] = r1			  ## RF_ble.c:1135:34
 1e125b8:    39 60             	b[r0 + 3] = r1			  ## RF_ble.c:1136:34
 1e125ba:    47 19             	goto 654 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1136:34
 1e125bc:    00 02             	r0 = [sp]			  ## RF_ble.c:4169:35
 1e125be:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4169:35
 1e125c0:    09 02             	[sp] = r1			  ## RF_ble.c:4169:35
 1e125c2:    01 02             	r1 = [sp]			  ## RF_ble.c:4169:62
 1e125c4:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:4169:35
 1e125c6:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4169:62
 1e125c8:    08 02             	[sp] = r0			  ## RF_ble.c:4169:62
 1e125ca:    05 42             	r5 = [r1 + 0]			  ## RF_ble.c:4169:62
 1e125cc:    30 58             	r0 = h[r4 + 6] (u)			  ## RF_ble.c:713:23
 1e125ce:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:713:23
 1e125d0:    38 58             	h[r4 + 6] = r0			  ## RF_ble.c:713:23
 1e125d2:    10 70             	r0 = 1			  ## RF_ble.c:714:27
 1e125d4:    01 34             	if (r2 != 0) goto 2 <.GJTIE699_0_0_+0x362 : 1e125d8 >			  ## RF_ble.c:714:27
 1e125d6:    00 70             	r0 = 0			  ## RF_ble.c:714:27
 1e125d8:    88 6f             	b[r7 + 24] = r0			  ## RF_ble.c:714:25
 1e125da:    b0 fc 59 00       	r0 = r11 + 89			  ## RF_ble.c:716:5
 1e125de:    62 70             	r2 = 6			  ## RF_ble.c:716:5
 1e125e0:    51 08             	r1 = r5			  ## RF_ble.c:716:5
 1e125e2:    97 f3 7f a4       	call 3098878 <memcpy : 106ee4 >			  ## RF_ble.c:716:5
 1e125e6:    90 58             	r0 = h[r4 + 18] (u)			  ## RF_ble.c:723:19
 1e125e8:    06 f6 00 80       	r6 = [r8 + 0]			  ## RF_ble.c:723:51
 1e125ec:    60 09             	r0 += r6			  ## RF_ble.c:723:42
 1e125ee:    62 70             	r2 = 6			  ## RF_ble.c:725:5
 1e125f0:    51 08             	r1 = r5			  ## RF_ble.c:725:5
 1e125f2:    97 f3 77 a4       	call 3098862 <memcpy : 106ee4 >			  ## RF_ble.c:725:5
 1e125f6:    a0 58             	r0 = h[r4 + 20] (u)			  ## RF_ble.c:727:19
 1e125f8:    60 09             	r0 += r6			  ## RF_ble.c:727:42
 1e125fa:    62 70             	r2 = 6			  ## RF_ble.c:729:5
 1e125fc:    51 08             	r1 = r5			  ## RF_ble.c:729:5
 1e125fe:    97 f3 71 a4       	call 3098850 <memcpy : 106ee4 >			  ## RF_ble.c:729:5
 1e12602:    23 19             	goto 582 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:729:5
 1e12604:    00 02             	r0 = [sp]			  ## RF_ble.c:4187:30
 1e12606:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4187:30
 1e12608:    09 02             	[sp] = r1			  ## RF_ble.c:4187:30
 1e1260a:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4187:30
 1e1260c:    18 54             	h[r2 + 2] = r0			  ## RF_ble.c:1393:19
 1e1260e:    1d 19             	goto 570 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1393:19
 1e12610:    00 02             	r0 = [sp]			  ## RF_ble.c:4190:29
 1e12612:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4190:29
 1e12614:    09 02             	[sp] = r1			  ## RF_ble.c:4190:29
 1e12616:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4190:29
 1e12618:    c8 64             	b[r2 + 12] = r0			  ## RF_ble.c:4190:27
 1e1261a:    17 19             	goto 558 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4190:27
 1e1261c:    00 02             	r0 = [sp]			  ## RF_ble.c:4194:31
 1e1261e:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4194:31
 1e12620:    09 02             	[sp] = r1			  ## RF_ble.c:4194:31
 1e12622:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4194:31
 1e12624:    d8 64             	b[r2 + 13] = r0			  ## RF_ble.c:4194:29
 1e12626:    11 19             	goto 546 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4194:29
 1e12628:    00 02             	r0 = [sp]			  ## RF_ble.c:4198:17
 1e1262a:    02 f6 78 b0       	r2 = [r11 + 120]			  ## list.h:124:18
 1e1262e:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4198:17
 1e12630:    09 02             	[sp] = r1			  ## RF_ble.c:4198:17
 1e12632:    b3 fc 78 00       	r3 = r11 + 120			  ## RF_ble.c:3897:39
 1e12636:    11 70             	r1 = 1			  ## list.h:124:23
 1e12638:    32 f2 01 00       	if (r2 == r3) goto 2 <.GJTIE699_0_0_+0x3C8 : 1e1263e >			  ## list.h:124:23
 1e1263c:    01 70             	r1 = 0			  ## list.h:124:23
 1e1263e:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4198:17
 1e12640:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:4198:37
 1e12642:    03 19             	goto 518 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4198:37
 1e12644:    00 02             	r0 = [sp]			  ## RF_ble.c:4201:24
 1e12646:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4201:24
 1e12648:    09 02             	[sp] = r1			  ## RF_ble.c:4201:24
 1e1264a:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4201:24
 1e1264c:    01 f6 00 a0       	r1 = [r10 + 0]			  ## RF_ble.c:3903:9
 1e12650:    fc 22             	if (r1 == 0) goto 504 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:3903:9
 1e12652:    20 04             	r0 = r0.l (u)
 1e12654:    11 70             	r1 = 1			  ## RF_ble.c:3905:30
 1e12656:    d0 fd 40 10       	r1 <= insert(r0, p:8, l:16)			  ## RF_ble.c:3905:30
 1e1265a:    11 f6 34 a0       	[r10 + 52] = r1			  ## RF_ble.c:3905:21
 1e1265e:    f5 18             	goto 490 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:3905:21
 1e12660:    01 02             	r1 = [sp]			  ## RF_ble.c:4204:39
 1e12662:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4204:39
 1e12664:    0a 02             	[sp] = r2			  ## RF_ble.c:4204:39
 1e12666:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4204:39
 1e12668:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3110:18
 1e1266c:    f0 86             	r0 += 111			  ## RF_ble.c:3112:5
 1e1266e:    52 08             	r2 = r5			  ## RF_ble.c:3112:5
 1e12670:    97 f3 38 a4       	call 3098736 <memcpy : 106ee4 >			  ## RF_ble.c:3112:5
 1e12674:    15 f9 0e 42       	b[r4 + 526] = r5			  ## RF_ble.c:3114:17
 1e12678:    20 6c             	r0 = b[r6 + 2] (u)			  ## RF_ble.c:3116:20
 1e1267a:    10 b0             	r0 |= 1			  ## RF_ble.c:3116:20
 1e1267c:    28 6c             	b[r6 + 2] = r0			  ## RF_ble.c:3116:20
 1e1267e:    e5 18             	goto 458 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:3116:20
 1e12680:    00 02             	r0 = [sp]			  ## RF_ble.c:4207:44
 1e12682:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4207:44
 1e12684:    09 02             	[sp] = r1			  ## RF_ble.c:4207:44
 1e12686:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4207:44
 1e12688:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3124:23
 1e1268c:    20 fc 47 00       	r0 = r2 + 71			  ## RF_ble.c:3126:5
 1e12690:    52 08             	r2 = r5			  ## RF_ble.c:3126:5
 1e12692:    97 f3 27 a4       	call 3098702 <memcpy : 106ee4 >			  ## RF_ble.c:3126:5
 1e12696:    15 f9 2e 42       	b[r4 + 558] = r5			  ## RF_ble.c:3128:22
 1e1269a:    20 6c             	r0 = b[r6 + 2] (u)			  ## RF_ble.c:3130:20
 1e1269c:    90 b0             	r0 |= 2			  ## RF_ble.c:3130:20
 1e1269e:    28 6c             	b[r6 + 2] = r0			  ## RF_ble.c:3130:20
 1e126a0:    d4 18             	goto 424 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:3130:20
 1e126a2:    00 02             	r0 = [sp]			  ## RF_ble.c:4210:40
 1e126a4:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4210:40
 1e126a6:    09 02             	[sp] = r1			  ## RF_ble.c:4210:40
 1e126a8:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4210:40
 1e126aa:    58 5e             	h[r7 + 10] = r0			  ## RF_ble.c:4210:40
 1e126ac:    ce 18             	goto 412 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:4210:40
 1e126ae:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## RF_ble.c:1023:42
 1e126b2:    48 20             	if (r0 == 0) goto 144 <.GJTIE699_0_0_+0x4CE : 1e12744 >			  ## RF_ble.c:1023:42
 1e126b4:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1023:77
 1e126b6:    01 fc ff ff       	r1 = r0 + -1			  ## RF_ble.c:1023:81
 1e126ba:    45 18             	goto 138 <.GJTIE699_0_0_+0x4D0 : 1e12746 >			  ## RF_ble.c:1023:81
 1e126bc:    01 f9 07 90       	r1 = b[r9 + 7] (u)			  ## RF_ble.c:1067:33
 1e126c0:    02 f7 18 90       	r2 = h[r9 + 24] (u)			  ## RF_ble.c:1067:74
 1e126c4:    03 fb e2 04       	r3 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1067:50
 1e126c8:    80 fe 30 21       	r2 += r1 * r3			  ## RF_ble.c:1067:57
 1e126cc:    21 fc 71 02       	r1 = r2 + 625			  ## RF_ble.c:1067:72
 1e126d0:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:663:25
 1e126d2:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:665:36
 1e126d4:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e126d6:    22 73             	r2 = 50			  ## RF_ble.c:666:25
 1e126d8:    12 f7 02 b0       	h[r11 + 2] = r2			  ## RF_ble.c:666:25
 1e126dc:    11 f6 3c b0       	[r11 + 60] = r1			  ## RF_ble.c:671:16
 1e126e0:    41 c0             	r1 = r0 << 1			  ## RF_ble.c:1066:59
 1e126e2:    f1 8f             	r1 += -1			  ## RF_ble.c:1066:63
 1e126e4:    04 70             	r4 = 0			  ## RF_ble.c:1066:63
 1e126e6:    01 20             	if (r0 == 0) goto 2 <.GJTIE699_0_0_+0x474 : 1e126ea >
 1e126e8:    14 08             	r4 = r1			  ## RF_ble.c:1066:21
 1e126ea:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:1068:13
 1e126ee:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1068:21
 1e126f2:    10 e0 04 90       	if (r0 <= 1) goto 8 <.GJTIE699_0_0_+0x488 : 1e126fe >			  ## RF_ble.c:1068:21
 1e126f6:    02 70             	r2 = 0
 1e126f8:    12 f7 0c 90       	h[r9 + 12] = r2			  ## RF_ble.c:1069:28
 1e126fc:    02 18             	goto 4 <.GJTIE699_0_0_+0x48C : 1e12702 >			  ## RF_ble.c:1069:28
 1e126fe:    02 f7 0c 90       	r2 = h[r9 + 12] (u)
 1e12702:    11 70             	r1 = 1			  ## RF_ble.c:1071:44
 1e12704:    01 34             	if (r2 != 0) goto 2 <.GJTIE699_0_0_+0x492 : 1e12708 >			  ## RF_ble.c:1071:44
 1e12706:    01 70             	r1 = 0			  ## RF_ble.c:1071:44
 1e12708:    50 08             	r0 = r5			  ## RF_ble.c:1071:9
 1e1270a:    2b 15             	call -1450 <__set_hw_state : 1e12162 >			  ## RF_ble.c:1071:9
 1e1270c:    00 f7 16 90       	r0 = h[r9 + 22] (u)			  ## RF_ble.c:1072:33
 1e12710:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:681:19
 1e12714:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## RF_ble.c:681:19
 1e12718:    12 f7 08 d0       	h[r13 + 8] = r2			  ## RF_ble.c:685:23
 1e1271c:    d0 fe 10 10       	r1 = r0 % r1 (u)			  ## RF_ble.c:682:17
 1e12720:    01 fd 50 1a       	r1 = r1 | 20480			  ## RF_ble.c:688:25
 1e12724:    11 f7 0a d0       	h[r13 + 10] = r1			  ## RF_ble.c:688:23
 1e12728:    10 f6 38 b0       	[r11 + 56] = r0			  ## RF_ble.c:691:15
 1e1272c:    50 08             	r0 = r5			  ## RF_ble.c:1076:5
 1e1272e:    41 08             	r1 = r4			  ## RF_ble.c:1076:5
 1e12730:    fc 14             	call -1544 <__set_winoffset : 1e1212a >			  ## RF_ble.c:1076:5
 1e12732:    00 f7 0a 90       	r0 = h[r9 + 10] (u)			  ## RF_ble.c:1077:24
 1e12736:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1077:40
 1e1273a:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1077:40
 1e1273c:    12 70             	r2 = 1			  ## RF_ble.c:1077:5
 1e1273e:    50 08             	r0 = r5			  ## RF_ble.c:1077:5
 1e12740:    34 15             	call -1432 <__set_interval : 1e121aa >			  ## RF_ble.c:1077:5
 1e12742:    83 18             	goto 262 <.GJTIE699_0_0_+0x5D4 : 1e1284a >			  ## RF_ble.c:1077:5
 1e12744:    01 70             	r1 = 0
 1e12746:    50 08             	r0 = r5			  ## RF_ble.c:1023:9
 1e12748:    f0 14             	call -1568 <__set_winoffset : 1e1212a >			  ## RF_ble.c:1023:9
 1e1274a:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:1026:13
 1e1274e:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1026:21
 1e12752:    10 e0 04 90       	if (r0 <= 1) goto 8 <.GJTIE699_0_0_+0x4E8 : 1e1275e >			  ## RF_ble.c:1026:21
 1e12756:    02 70             	r2 = 0
 1e12758:    12 f7 0c 90       	h[r9 + 12] = r2			  ## RF_ble.c:1027:33
 1e1275c:    02 18             	goto 4 <.GJTIE699_0_0_+0x4EC : 1e12762 >			  ## RF_ble.c:1027:33
 1e1275e:    02 f7 0c 90       	r2 = h[r9 + 12] (u)
 1e12762:    11 70             	r1 = 1			  ## RF_ble.c:1029:44
 1e12764:    01 34             	if (r2 != 0) goto 2 <.GJTIE699_0_0_+0x4F2 : 1e12768 >			  ## RF_ble.c:1029:44
 1e12766:    01 70             	r1 = 0			  ## RF_ble.c:1029:44
 1e12768:    50 08             	r0 = r5			  ## RF_ble.c:1029:9
 1e1276a:    fb 14             	call -1546 <__set_hw_state : 1e12162 >			  ## RF_ble.c:1029:9
 1e1276c:    00 f7 16 90       	r0 = h[r9 + 22] (u)			  ## RF_ble.c:1031:38
 1e12770:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:681:19
 1e12774:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## RF_ble.c:681:19
 1e12778:    12 f7 08 d0       	h[r13 + 8] = r2			  ## RF_ble.c:685:23
 1e1277c:    d0 fe 10 10       	r1 = r0 % r1 (u)			  ## RF_ble.c:682:17
 1e12780:    01 fd 50 1a       	r1 = r1 | 20480			  ## RF_ble.c:688:25
 1e12784:    11 f7 0a d0       	h[r13 + 10] = r1			  ## RF_ble.c:688:23
 1e12788:    10 f6 38 b0       	[r11 + 56] = r0			  ## RF_ble.c:691:15
 1e1278c:    00 f7 16 90       	r0 = h[r9 + 22] (u)			  ## RF_ble5.c:657:21
 1e12790:    68 5a             	h[r5 + 12] = r0			  ## RF_ble5.c:657:19
 1e12792:    60 70             	r0 = 6			  ## RF_ble5.c:657:19
 1e12794:    58 5e             	h[r7 + 10] = r0			  ## RF_ble5.c:657:19
 1e12796:    00 70             	r0 = 0
 1e12798:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e1279c:    08 00             	csync			  ## RF_ble.c:264:5
 1e1279e:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e127a2:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e127a4:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e127a6:    c6 71             	r6 = 28			  ## RF_ble.c:134:17
 1e127a8:    e0 fe 60 11       	r1 = r1 / r6 (s)			  ## RF_ble.c:134:17
 1e127ac:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e127ae:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:265:50
 1e127b2:    02 fb 05 20       	r2 = 8197 <att_ram_buffer+0x2C1 : 2005 >			  ## RF_ble.c:265:67
 1e127b6:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e127b8:    11 f6 1c a0       	[r10 + 28] = r1			  ## RF_ble.c:265:21
 1e127bc:    01 4a             	r1 = [r5 + 0]			  ## RF_ble.c:448:37
 1e127be:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e127c2:    08 00             	csync			  ## RF_ble.c:264:5
 1e127c4:    02 f6 00 80       	r2 = [r8 + 0]			  ## RF_ble.c:134:19
 1e127c8:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e127ca:    a2 ba             	r2 = r5 - r2			  ## RF_ble.c:134:17
 1e127cc:    e0 fe 60 22       	r2 = r2 / r6 (s)			  ## RF_ble.c:134:17
 1e127d0:    12 c1             	r2 = r2 << 4			  ## RF_ble.c:265:50
 1e127d2:    03 fb f0 03       	r3 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e127d6:    52 b7             	r2 &= r3			  ## RF_ble.c:265:50
 1e127d8:    03 fb 05 0c       	r3 = 3077 <BTCTLER_RAM_TOTAL+0x19 : c05 >			  ## RF_ble.c:265:67
 1e127dc:    52 b6             	r2 |= r3			  ## RF_ble.c:265:67
 1e127de:    12 f6 1c a0       	[r10 + 28] = r2			  ## RF_ble.c:265:21
 1e127e2:    10 f7 58 10       	h[r1 + 88] = r0			  ## RF_ble.c:452:22
 1e127e6:    00 f9 07 90       	r0 = b[r9 + 7] (u)			  ## RF_ble.c:1041:28
 1e127ea:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## RF_ble.c:1041:48
 1e127ee:    40 0e             	r0 = r0 * r1			  ## RF_ble.c:1041:48
 1e127f0:    00 fc e2 04       	r0 = r0 + 1250			  ## RF_ble.c:1041:55
 1e127f4:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:663:25
 1e127f6:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:665:36
 1e127f8:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:665:25
 1e127fa:    22 73             	r2 = 50			  ## RF_ble.c:666:25
 1e127fc:    12 f7 02 b0       	h[r11 + 2] = r2			  ## RF_ble.c:666:25
 1e12800:    10 f6 3c b0       	[r11 + 60] = r0			  ## RF_ble.c:671:16
 1e12804:    00 f7 0a 90       	r0 = h[r9 + 10] (u)			  ## RF_ble.c:1046:24
 1e12808:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1046:45
 1e1280a:    12 70             	r2 = 1			  ## RF_ble.c:1046:5
 1e1280c:    50 08             	r0 = r5			  ## RF_ble.c:1046:5
 1e1280e:    cd 14             	call -1638 <__set_interval : 1e121aa >			  ## RF_ble.c:1046:5
 1e12810:    91 fc 10 00       	r1 = r9 + 16			  ## RF_ble.c:1048:28
 1e12814:    40 08             	r0 = r4			  ## RF_ble.c:1048:5
 1e12816:    2e 14             	call -1956 <__set_channel_map : 1e12074 >			  ## RF_ble.c:1048:5
 1e12818:    00 f9 15 90       	r0 = b[r9 + 21] (u)			  ## RF_ble.c:1050:47
 1e1281c:    20 fd 1f 09       	r0 = r0 & 31			  ## RF_ble.c:1050:35
 1e12820:    c5 fd 40 00       	r0 <= insert(r0, p:8, l:5)			  ## RF_ble.c:550:43
 1e12824:    90 b7             	r0 |= 32768			  ## RF_ble.c:550:43
 1e12826:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:263:21
 1e1282a:    08 00             	csync			  ## RF_ble.c:264:5
 1e1282c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e12830:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e12832:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:134:17
 1e12834:    e0 fe 60 00       	r0 = r0 / r6 (s)			  ## RF_ble.c:134:17
 1e12838:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e1283a:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e1283e:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e12840:    01 fb 05 18       	r1 = 6149 <report_data_code_size+0x24D : 1805 >			  ## RF_ble.c:265:67
 1e12844:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e12846:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:265:21
 1e1284a:    02 0a             	sp += 4
 1e1284c:    1d 01             	{rets, r13-r4} = [sp++]			  ## RF_ble.c:4218:1
 1e1284e:    04 0a             	sp += 8			  ## RF_ble.c:4218:1
 1e12850:    20 00             	rts			  ## RF_ble.c:4218:1


le_hw_upload_data:
 1e12852:    7c 01             	[--sp] = {rets, r12-r4}			  ## RF_ble.c:2114:0
 1e12854:    5a 0b             	sp += -332			  ## RF_ble.c:2114:0
 1e12856:    18 08             	r8 = r1			  ## RF_ble.c:2114:0
 1e12858:    06 08             	r6 = r0			  ## RF_ble.c:2114:0
 1e1285a:    67 fc 50 01       	r7 = r6 + 336			  ## RF_ble.c:2114:0
 1e1285e:    70 fc 38 00       	r0 = r7 + 56			  ## RF_ble.c:2119:26
 1e12862:    bf f3 ba 98       	call -52876 <hw_dma_pop : 1e059da >			  ## RF_ble.c:2119:10
 1e12866:    04 08             	r4 = r0			  ## RF_ble.c:2119:10
 1e12868:    86 28             	if (r4 == 0) goto 268 <le_hw_upload_data+0x124 : 1e12976 >			  ## RF_ble.c:2119:10
 1e1286a:    65 fc a0 01       	r5 = r6 + 416
 1e1286e:    00 6a             	r0 = b[r5 + 0] (u)			  ## RF_ble.c:1701:18
 1e12870:    75 20             	if (r0 == 0) goto 234 <le_hw_upload_data+0x10A : 1e1295c >			  ## RF_ble.c:1701:18
 1e12872:    a0 68             	r0 = b[r4 + 10] (u)			  ## RF_ble.c:1701:35
 1e12874:    73 20             	if (r0 == 0) goto 230 <le_hw_upload_data+0x10A : 1e1295c >			  ## RF_ble.c:1701:35
 1e12876:    00 70             	r0 = 0
 1e12878:    10 f5 48 01       	[sp+328] = r0			  ## RF_ble.c:1702:12
 1e1287c:    10 f5 44 01       	[sp+324] = r0			  ## RF_ble.c:1702:12
 1e12880:    10 f5 40 01       	[sp+320] = r0			  ## RF_ble.c:1702:12
 1e12884:    10 f5 3c 01       	[sp+316] = r0			  ## RF_ble.c:1702:12
 1e12888:    c0 a1             	r0 = sp + 28			  ## RF_ble.c:1702:12
 1e1288a:    01 70             	r1 = 0			  ## RF_ble.c:1704:12
 1e1288c:    02 fb 13 01       	r2 = 275 <DRIVER_RAM_TOTAL+0x21 : 113 >			  ## RF_ble.c:1704:12
 1e12890:    97 f3 2e a3       	call 3098204 <memset : 106ef0 >			  ## RF_ble.c:1704:12
 1e12894:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1705:23
 1e12896:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:1705:23
 1e1289a:    d0 f5 1b 00       	b[sp+27] = r0			  ## RF_ble.c:1705:12
 1e1289e:    60 4f             	r0 = [r7 + 88]			  ## RF_ble.c:1708:29
 1e128a0:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1708:18
 1e128a4:    01 d2             	r1 = r0 >> 8			  ## RF_ble.c:1709:42
 1e128a6:    d1 f5 30 01       	b[sp+304] = r1			  ## RF_ble.c:1709:18
 1e128aa:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:1710:42
 1e128ac:    d1 f5 31 01       	b[sp+305] = r1			  ## RF_ble.c:1710:18
 1e128b0:    01 d6             	r1 = r0 >> 24			  ## RF_ble.c:1711:42
 1e128b2:    d1 f5 32 01       	b[sp+306] = r1			  ## RF_ble.c:1711:18
 1e128b6:    31 6a             	r1 = b[r5 + 3] (u)			  ## RF_ble.c:1712:29
 1e128b8:    d1 f5 33 01       	b[sp+307] = r1			  ## RF_ble.c:1712:18
 1e128bc:    22 6e             	r2 = b[r7 + 2] (u)			  ## RF_ble.c:1713:17
 1e128be:    72 e0 03 10       	if (r2 != 7) goto 6 <le_hw_upload_data+0x76 : 1e128c8 >			  ## RF_ble.c:1713:17
 1e128c2:    91 b3             	r1 |= 128			  ## RF_ble.c:1714:22
 1e128c4:    d1 f5 33 01       	b[sp+307] = r1			  ## RF_ble.c:1714:22
 1e128c8:    0b f9 0e 50       	r11 = b[r5 + 14] (u)			  ## RF_ble.c:1716:9
 1e128cc:    22 6b             	r2 = b[r5 + 18] (u)			  ## RF_ble.c:1716:9
 1e128ce:    c3 6a             	r3 = b[r5 + 12] (u)			  ## RF_ble.c:1716:9
 1e128d0:    09 f9 0d 50       	r9 = b[r5 + 13] (u)			  ## RF_ble.c:1716:9
 1e128d4:    36 6b             	r6 = b[r5 + 19] (u)			  ## RF_ble.c:1716:9
 1e128d6:    0a f9 11 50       	r10 = b[r5 + 17] (u)			  ## RF_ble.c:1716:9
 1e128da:    01 6b             	r1 = b[r5 + 16] (u)			  ## RF_ble.c:1716:9
 1e128dc:    0c f9 0f 50       	r12 = b[r5 + 15] (u)			  ## RF_ble.c:1716:9
 1e128e0:    d6 f5 3b 01       	b[sp+315] = r6			  ## RF_ble.c:1716:9
 1e128e4:    da f5 39 01       	b[sp+313] = r10			  ## RF_ble.c:1716:9
 1e128e8:    d1 f5 38 01       	b[sp+312] = r1			  ## RF_ble.c:1716:9
 1e128ec:    dc f5 37 01       	b[sp+311] = r12			  ## RF_ble.c:1716:9
 1e128f0:    d9 f5 35 01       	b[sp+309] = r9			  ## RF_ble.c:1716:9
 1e128f4:    d3 f5 34 01       	b[sp+308] = r3			  ## RF_ble.c:1716:9
 1e128f8:    c8 fd 40 26       	r2 <= insert(r6, p:8, l:8)			  ## RF_ble.c:1716:9
 1e128fc:    d0 fd 80 12       	r1 <= insert(r2, p:16, l:16)			  ## RF_ble.c:1716:9
 1e12900:    09 d4             	r1 = r1 >> 16			  ## RF_ble.c:1716:9
 1e12902:    d1 f5 3a 01       	b[sp+314] = r1			  ## RF_ble.c:1716:9
 1e12906:    c8 fd 40 bc       	r11 <= insert(r12, p:8, l:8)			  ## RF_ble.c:1716:9
 1e1290a:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## RF_ble.c:1716:9
 1e1290e:    19 d4             	r1 = r3 >> 16			  ## RF_ble.c:1716:9
 1e12910:    d1 f5 36 01       	b[sp+310] = r1			  ## RF_ble.c:1716:9
 1e12914:    10 80             	r0 += 1			  ## RF_ble.c:1720:30
 1e12916:    68 4f             	[r7 + 88] = r0			  ## RF_ble.c:1720:30
 1e12918:    f0 ef 02 10       	if (r0 != -1) goto 4 <le_hw_upload_data+0xCE : 1e12920 >			  ## RF_ble.c:1720:30
 1e1291c:    8f f3 7b 85       	call 2034422 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12920:    a0 68             	r0 = b[r4 + 10] (u)			  ## RF_ble.c:1727:17
 1e12922:    c0 8f             	r0 += -4			  ## RF_ble.c:1727:17
 1e12924:    a8 68             	b[r4 + 10] = r0			  ## RF_ble.c:1727:17
 1e12926:    11 70             	r1 = 1			  ## RF_ble.c:1728:9
 1e12928:    59 02             	[sp+20] = r1			  ## RF_ble.c:1728:9
 1e1292a:    41 70             	r1 = 4			  ## RF_ble.c:1728:9
 1e1292c:    49 02             	[sp+16] = r1			  ## RF_ble.c:1728:9
 1e1292e:    e1 fb 3c 01       	r1 = sp + 316			  ## RF_ble.c:1728:9
 1e12932:    39 02             	[sp+12] = r1			  ## RF_ble.c:1728:9
 1e12934:    49 99             	r9 = r4 + 20			  ## RF_ble.c:1728:67
 1e12936:    19 f5 08 00       	[sp+8] = r9			  ## RF_ble.c:1728:9
 1e1293a:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:1728:58
 1e1293c:    18 02             	[sp+4] = r0			  ## RF_ble.c:1728:9
 1e1293e:    c6 a1             	r6 = sp + 28			  ## RF_ble.c:1728:9
 1e12940:    70 fc 64 00       	r0 = r7 + 100			  ## RF_ble.c:1728:23
 1e12944:    e1 fb 2f 01       	r1 = sp + 303			  ## RF_ble.c:1728:23
 1e12948:    b2 a1             	r2 = sp + 27			  ## RF_ble.c:1728:23
 1e1294a:    13 70             	r3 = 1			  ## RF_ble.c:1728:9
 1e1294c:    0e 02             	[sp] = r6			  ## RF_ble.c:1728:9
 1e1294e:    bf f3 d0 99       	call -52320 <ccm_memory_v2 : 1e05cf2 >			  ## RF_ble.c:1728:9
 1e12952:    a2 68             	r2 = b[r4 + 10] (u)			  ## RF_ble.c:1729:30
 1e12954:    90 08             	r0 = r9			  ## RF_ble.c:1729:9
 1e12956:    61 08             	r1 = r6			  ## RF_ble.c:1729:9
 1e12958:    97 f3 c4 a2       	call 3097992 <memcpy : 106ee4 >			  ## RF_ble.c:1729:9
 1e1295c:    e0 4a             	r0 = [r5 + 56]			  ## RF_ble.c:2124:24
 1e1295e:    41 08             	r1 = r4			  ## RF_ble.c:2124:9
 1e12960:    88 00             	call r8			  ## RF_ble.c:2124:9
 1e12962:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:2126:19
 1e12964:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:2126:19
 1e12968:    f0 8f             	r0 += -1			  ## RF_ble.c:2126:46
 1e1296a:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2126:46
 1e1296c:    20 e0 03 30       	if (r0 < 2) goto 6 <le_hw_upload_data+0x124 : 1e12976 >			  ## RF_ble.c:2126:46
 1e12970:    40 08             	r0 = r4			  ## RF_ble.c:2127:13
 1e12972:    bf f3 a6 75       	call -70836 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:2127:13
 1e12976:    a6 0a             	sp += 332
 1e12978:    5c 01             	{pc, r12-r4} = [sp++]			  ## RF_ble.c:2131:1


hw_alloc_rx:
 1e1297a:    34 00             	[--sp] = rets			  ## RF_ble.c:156:0
 1e1297c:    41 91             	r1 = r0 + 20			  ## RF_ble.c:159:53
 1e1297e:    00 70             	r0 = 0			  ## RF_ble.c:159:27
 1e12980:    bf f3 3d 98       	call -53126 <hw_dma_alloc : 1e059fe >			  ## RF_ble.c:159:27
 1e12984:    02 08             	r2 = r0			  ## RF_ble.c:159:27
 1e12986:    05 24             	if (r2 == 0) goto 10 <hw_alloc_rx+0x18 : 1e12992 >			  ## RF_ble.c:159:27
 1e12988:    60 ff 03 29 02 00 	if ((r2 & 3) == 0) goto 4 <hw_alloc_rx+0x18 : 1e12992 >
 1e1298e:    8f f3 42 85       	call 2034308 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12992:    20 08             	r0 = r2			  ## RF_ble.c:164:5
 1e12994:    30 00             	pc = [sp++]			  ## RF_ble.c:164:5


__set_latency_disable:
 1e12996:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:301:0
 1e12998:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:302:31
 1e1299a:    12 70             	r2 = 1			  ## RF_ble.c:305:27
 1e1299c:    12 f9 57 11       	b[r1 + 343] = r2			  ## RF_ble.c:305:27
 1e129a0:    c1 ff e4 2f 00 00 	r1 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e129a6:    02 42             	r2 = [r1 + 0]			  ## RF_ble.c:134:19
 1e129a8:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e129aa:    a2 b0             	r2 = r0 - r2			  ## RF_ble.c:134:17
 1e129ac:    c3 71             	r3 = 28			  ## RF_ble.c:134:17
 1e129ae:    e0 fe 30 22       	r2 = r2 / r3 (s)			  ## RF_ble.c:134:17
 1e129b2:    12 c1             	r2 = r2 << 4			  ## RF_ble.c:256:50
 1e129b4:    04 fb f0 07       	r4 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:256:50
 1e129b8:    52 b9             	r2 &= r4			  ## RF_ble.c:256:50
 1e129ba:    25 99             	r5 = r4 + 18			  ## RF_ble.c:256:56
 1e129bc:    52 ba             	r2 |= r5			  ## RF_ble.c:256:56
 1e129be:    45 fb 64 34       	r5 = r3 + 1867776			  ## RF_ble.c:256:56
 1e129c2:    0a 4a             	[r5 + 0] = r2			  ## RF_ble.c:256:21
 1e129c4:    08 00             	csync			  ## RF_ble.c:257:5
 1e129c6:    22 4a             	r2 = [r5 + 8]			  ## RF_ble.c:258:12
 1e129c8:    c6 ff ff f7 00 00 	r6 = 63487 <UPDATA_BREDR_BASE_BEG+0xC9F : f7ff >			  ## RF_ble.c:310:31
 1e129ce:    52 bd             	r2 &= r6			  ## RF_ble.c:310:31
 1e129d0:    1a 4a             	[r5 + 4] = r2			  ## RF_ble.c:263:21
 1e129d2:    08 00             	csync			  ## RF_ble.c:264:5
 1e129d4:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e129d6:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e129d8:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e129da:    e0 fe 30 00       	r0 = r0 / r3 (s)			  ## RF_ble.c:134:17
 1e129de:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e129e0:    50 b9             	r0 &= r4			  ## RF_ble.c:265:50
 1e129e2:    51 99             	r1 = r4 + 21			  ## RF_ble.c:265:67
 1e129e4:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e129e6:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:265:21
 1e129e8:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:313:1


ble_latency_manualhold:
 1e129ea:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:415:0
 1e129ec:    04 08             	r4 = r0			  ## RF_ble.c:415:0
 1e129ee:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:416:34
 1e129f0:    97 f3 d4 a1       	call 3097512 <local_irq_disable : 106d9c >			  ## RF_ble.c:418:5
 1e129f4:    08 00             	csync			  ## RF_ble.c:418:5
 1e129f6:    00 f9 56 51       	r0 = b[r5 + 342] (u)			  ## RF_ble.c:420:13
 1e129fa:    02 20             	if (r0 == 0) goto 4 <ble_latency_manualhold+0x16 : 1e12a00 >			  ## RF_ble.c:420:13
 1e129fc:    40 08             	r0 = r4			  ## RF_ble.c:426:5
 1e129fe:    cb 17             	call -106 <__set_latency_disable : 1e12996 >			  ## RF_ble.c:426:5
 1e12a00:    15 01             	{rets, r5, r4} = [sp++]
 1e12a02:    d7 f3 c9 a1       	goto 3097490 <local_irq_enable : 106d98 >


le_hw_send_packet_high:
 1e12a06:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:3864:0
 1e12a08:    08 08             	r8 = r0			  ## RF_ble.c:3864:0
 1e12a0a:    07 40             	r7 = [r0 + 0]			  ## RF_ble.c:3865:34
 1e12a0c:    00 f7 ea 71       	r0 = h[r7 + 490] (u)
 1e12a10:    85 02             	r5 = [sp+32]
 1e12a12:    39 08             	r9 = r3
 1e12a14:    2a 08             	r10 = r2
 1e12a16:    16 08             	r6 = r1
 1e12a18:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet_high+0x1A : 1e12a20 >
 1e12a1c:    8f f3 fb 84       	call 2034166 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12a20:    b0 71             	r0 = 27			  ## RF_ble.c:3868:27
 1e12a22:    ab 17             	call -170 <hw_alloc_rx : 1e1297a >			  ## RF_ble.c:3868:27
 1e12a24:    04 08             	r4 = r0			  ## RF_ble.c:3868:27
 1e12a26:    03 38             	if (r4 != 0) goto 6 <le_hw_send_packet_high+0x28 : 1e12a2e >			  ## RF_ble.c:3868:27
 1e12a28:    8f f3 f5 84       	call 2034154 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12a2c:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e12a2e:    00 70             	r0 = 0
 1e12a30:    38 48             	[r4 + 12] = r0			  ## RF_ble.c:3871:5
 1e12a32:    28 48             	[r4 + 8] = r0			  ## RF_ble.c:3871:5
 1e12a34:    18 48             	[r4 + 4] = r0			  ## RF_ble.c:3871:5
 1e12a36:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:3871:5
 1e12a38:    2e 48             	[r4 + 8] = r6			  ## RF_ble.c:3873:25
 1e12a3a:    f0 fd 20 0a       	r0 = r10 << 4			  ## RF_ble.c:3875:5
 1e12a3e:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:3875:5
 1e12a42:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:3875:5
 1e12a44:    ed 68             	b[r4 + 14] = r5			  ## RF_ble.c:3876:5
 1e12a46:    00 99             	r0 = r4 + 16			  ## RF_ble.c:3881:5
 1e12a48:    91 08             	r1 = r9			  ## RF_ble.c:3881:5
 1e12a4a:    52 08             	r2 = r5			  ## RF_ble.c:3881:5
 1e12a4c:    97 f3 4a a2       	call 3097748 <memcpy : 106ee4 >			  ## RF_ble.c:3881:5
 1e12a50:    75 fc 46 01       	r5 = r7 + 326			  ## RF_ble.c:3881:5
 1e12a54:    50 fc 4a 00       	r0 = r5 + 74			  ## RF_ble.c:3885:22
 1e12a58:    41 08             	r1 = r4			  ## RF_ble.c:3885:5
 1e12a5a:    bf f3 e7 97       	call -53298 <hw_dma_push : 1e05a2c >			  ## RF_ble.c:3885:5
 1e12a5e:    00 5a             	r0 = h[r5 + 0] (u)
 1e12a60:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e12a64:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:823:23
 1e12a68:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:823:23
 1e12a6a:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet_high+0x72 : 1e12a78 >			  ## RF_ble.c:823:23
 1e12a6e:    e0 71             	r0 = 30			  ## RF_ble.c:827:28
 1e12a70:    10 f7 60 70       	h[r7 + 96] = r0			  ## RF_ble.c:827:28
 1e12a74:    10 f7 5e 70       	h[r7 + 94] = r0			  ## RF_ble.c:828:28
 1e12a78:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:365:17
 1e12a7a:    20 e0 02 80       	if (r0 > 2) goto 4 <le_hw_send_packet_high+0x7C : 1e12a82 >			  ## RF_ble.c:365:17
 1e12a7e:    30 70             	r0 = 3
 1e12a80:    a8 5a             	h[r5 + 20] = r0
 1e12a82:    80 08             	r0 = r8			  ## RF_ble.c:3892:5
 1e12a84:    1a 01             	{rets, r10-r4} = [sp++]			  ## RF_ble.c:3892:5
 1e12a86:    b1 1f             	goto -158 <ble_latency_manualhold : 1e129ea >			  ## RF_ble.c:3892:5


ble_pll_comp_reset:
 1e12a88:    c1 ff f4 09 00 00 	r1 = 2548 <system_data_end : 9f4 >			  ## RF_ble.c:1410:0
 1e12a8e:    51 52             	r1 = h[r1 + 10] (u)			  ## RF_ble.c:1416:24
 1e12a90:    61 fb 00 19       	r1 = 0 - r1			  ## RF_ble.c:1416:23
 1e12a94:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:1411:53
 1e12a96:    09 c5             	r1 = r1 << 20			  ## RF_ble.c:1416:52
 1e12a98:    02 fb c0 5d       	r2 = 24000 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x12AA : 5dc0 >			  ## RF_ble.c:1416:65
 1e12a9c:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:1416:65
 1e12aa0:    11 f6 24 01       	[r0 + 292] = r1			  ## RF_ble.c:1418:21
 1e12aa4:    20 00             	rts			  ## RF_ble.c:1421:1


le_hw_handler_register:
 1e12aa6:    11 f6 d8 01       	[r0 + 472] = r1			  ## RF_ble.c:4223:0
 1e12aaa:    12 f6 dc 01       	[r0 + 476] = r2			  ## RF_ble.c:4225:26
 1e12aae:    20 00             	rts			  ## RF_ble.c:4226:1


ble_hw_alloc:
 1e12ab0:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:2902:0
 1e12ab2:    c0 ff e4 2f 00 00 	r0 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:2902:0
 1e12ab8:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2902:0
 1e12aba:    01 50             	r1 = h[r0 + 0] (u)			  ## RF_ble.c:2907:13
 1e12abc:    07 32             	if (r1 != 0) goto 14 <ble_hw_alloc+0x1C : 1e12acc >			  ## RF_ble.c:2907:13
 1e12abe:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:2908:35
 1e12ac0:    01 70             	r1 = 0			  ## RF_ble.c:2909:13
 1e12ac2:    c2 71             	r2 = 28			  ## RF_ble.c:2909:13
 1e12ac4:    40 08             	r0 = r4			  ## RF_ble.c:2909:13
 1e12ac6:    97 f3 13 a2       	call 3097638 <memset : 106ef0 >			  ## RF_ble.c:2909:13
 1e12aca:    03 38             	if (r4 != 0) goto 6 <ble_hw_alloc+0x22 : 1e12ad2 >			  ## RF_ble.c:2909:13
 1e12acc:    8f f3 a3 84       	call 2033990 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12ad0:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e12ad2:    40 08             	r0 = r4			  ## RF_ble.c:2915:5
 1e12ad4:    14 01             	{rets, r4} = [sp++]			  ## RF_ble.c:2915:5
 1e12ad6:    ff f3 e1 f8       	goto -3646 <clear_all_anchor_cnt : 1e11c9c >			  ## RF_ble.c:2915:5


hw_entity_alloc:
 1e12ada:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:2855:0
 1e12adc:    c0 ff e4 2f 00 00 	r0 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:2855:0
 1e12ae2:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2855:0
 1e12ae4:    54 40             	r4 = [r0 + 20]			  ## RF_ble.c:2855:0
 1e12ae6:    00 f9 5c 42       	r0 = b[r4 + 604] (u)			  ## RF_ble.c:2860:42
 1e12aea:    0a 30             	if (r0 != 0) goto 20 <hw_entity_alloc+0x26 : 1e12b00 >
 1e12aec:    01 70             	r1 = 0			  ## RF_ble.c:2862:13
 1e12aee:    02 fb 60 02       	r2 = 608 <BTCTLER_CONTROLLER_BSS_SIZE+0xA0 : 260 >			  ## RF_ble.c:2862:13
 1e12af2:    40 08             	r0 = r4			  ## RF_ble.c:2862:13
 1e12af4:    97 f3 fc a1       	call 3097592 <memset : 106ef0 >			  ## RF_ble.c:2862:13
 1e12af8:    10 70             	r0 = 1			  ## RF_ble.c:2863:22
 1e12afa:    10 f9 5c 42       	b[r4 + 604] = r0			  ## RF_ble.c:2863:22
 1e12afe:    03 38             	if (r4 != 0) goto 6 <hw_entity_alloc+0x2C : 1e12b06 >			  ## RF_ble.c:2863:22
 1e12b00:    8f f3 89 84       	call 2033938 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12b04:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e12b06:    40 08             	r0 = r4			  ## RF_ble.c:2872:5
 1e12b08:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:2872:5


PHY_TO_BLE:
 1e12b0a:    34 00             	[--sp] = rets			  ## RF_ble.c:122:0
 1e12b0c:    c1 ff e4 2f 00 00 	r1 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:122:0
 1e12b12:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:122:0
 1e12b14:    62 b0             	r2 = r0 - r1			  ## RF_ble.c:122:0
 1e12b16:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## RF_ble.c:122:0
 1e12b1c:    02 f2 02 30       	if (r2 < r0) goto 4 <PHY_TO_BLE+0x1A : 1e12b24 >			  ## RF_ble.c:122:0
 1e12b20:    8f f3 79 84       	call 2033906 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e12b24:    20 08             	r0 = r2			  ## RF_ble.c:124:5
 1e12b26:    30 00             	pc = [sp++]			  ## RF_ble.c:124:5


le_hw_standby:
 1e12b28:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:2973:0
 1e12b2a:    02 70             	r2 = 0			  ## RF_ble.c:2975:24
 1e12b2c:    12 f9 52 11       	b[r1 + 338] = r2			  ## RF_ble.c:2975:24
 1e12b30:    ff f3 85 f8       	goto -3830 <ble_hw_disable : 1e11c3e >			  ## RF_ble.c:2976:5


le_hw_open:
 1e12b34:    78 01             	[--sp] = {rets, r8-r4}			  ## RF_ble.c:3738:0
 1e12b36:    fc 0b             	sp += -8			  ## RF_ble.c:3738:0
 1e12b38:    bb 17             	call -138 <ble_hw_alloc : 1e12ab0 >			  ## RF_ble.c:2926:10
 1e12b3a:    04 08             	r4 = r0			  ## RF_ble.c:2926:10
 1e12b3c:    ce 17             	call -100 <hw_entity_alloc : 1e12ada >			  ## RF_ble.c:2927:37
 1e12b3e:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:2927:17
 1e12b40:    c8 ff e4 2f 00 00 	r8 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:2927:17
 1e12b46:    03 f6 00 80       	r3 = [r8 + 0]			  ## RF_ble.c:134:19
 1e12b4a:    41 46             	r1 = [r3 + 16]			  ## RF_ble.c:134:35
 1e12b4c:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e12b4e:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e12b50:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e12b54:    45 04             	r5 = r1.b0 (u)			  ## RF_ble.c:2897:5
 1e12b56:    d9 17             	call -78 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:2897:45
 1e12b58:    90 b7             	r0 |= 32768			  ## RF_ble.c:2897:35
 1e12b5a:    50 f8 00 35       	h[r3+r5<<1] = r0			  ## RF_ble.c:2897:33
 1e12b5e:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:1426:34
 1e12b60:    02 70             	r2 = 0			  ## RF_ble.c:1430:20
 1e12b62:    0a 50             	h[r0 + 0] = r2			  ## RF_ble.c:1430:20
 1e12b64:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:1431:20
 1e12b66:    c1 ff 88 d3 00 00 	r1 = 54152 <_nv_pre_end+0x1888 : d388 >			  ## RF_ble.c:1432:20
 1e12b6c:    29 50             	h[r0 + 4] = r1			  ## RF_ble.c:1432:20
 1e12b6e:    01 fc 44 00       	r1 = r0 + 68			  ## RF_ble.c:1432:20
 1e12b72:    2a 52             	h[r1 + 4] = r2			  ## RF_ble.c:1433:20
 1e12b74:    02 fb e7 51       	r2 = 20967 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x6D1 : 51e7 >			  ## RF_ble.c:1434:20
 1e12b78:    3a 52             	h[r1 + 6] = r2			  ## RF_ble.c:1434:20
 1e12b7a:    22 fc ef 6c       	r2 = r2 + 27887			  ## RF_ble.c:1443:25
 1e12b7e:    5a 50             	h[r0 + 10] = r2			  ## RF_ble.c:1443:25
 1e12b80:    22 fc b3 cf       	r2 = r2 + -12365			  ## RF_ble.c:1443:25
 1e12b84:    6a 50             	h[r0 + 12] = r2			  ## RF_ble.c:1443:25
 1e12b86:    02 fb 55 55       	r2 = 21845 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xA3F : 5555 >			  ## RF_ble.c:1449:22
 1e12b8a:    0a 52             	h[r1 + 0] = r2			  ## RF_ble.c:1449:22
 1e12b8c:    52 75             	r2 = 85			  ## RF_ble.c:1450:22
 1e12b8e:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:1450:22
 1e12b90:    82 72             	r2 = 40			  ## RF_ble.c:1452:21
 1e12b92:    4a 50             	h[r0 + 8] = r2			  ## RF_ble.c:1452:21
 1e12b94:    12 70             	r2 = 1			  ## RF_ble.c:1452:21
 1e12b96:    9a 50             	h[r0 + 18] = r2			  ## RF_ble.c:1453:20
 1e12b98:    aa 50             	h[r0 + 20] = r2			  ## RF_ble.c:1454:20
 1e12b9a:    42 50             	r2 = h[r0 + 8] (u)			  ## RF_ble.c:1455:5
 1e12b9c:    92 b4             	r2 |= 512			  ## RF_ble.c:1455:5
 1e12b9e:    4a 50             	h[r0 + 8] = r2			  ## RF_ble.c:1455:5
 1e12ba0:    f2 52             	r2 = h[r1 + 30] (u)			  ## RF_ble.c:1456:5
 1e12ba2:    92 b0             	r2 |= 2			  ## RF_ble.c:1456:5
 1e12ba4:    fa 52             	h[r1 + 30] = r2			  ## RF_ble.c:1456:5
 1e12ba6:    f2 52             	r2 = h[r1 + 30] (u)			  ## RF_ble.c:1457:5
 1e12ba8:    12 b1             	r2 |= 4			  ## RF_ble.c:1457:5
 1e12baa:    fa 52             	h[r1 + 30] = r2			  ## RF_ble.c:1457:5
 1e12bac:    02 fc 64 00       	r2 = r0 + 100			  ## RF_ble.c:1457:5
 1e12bb0:    23 64             	r3 = b[r2 + 2] (u)			  ## RF_ble.c:1458:5
 1e12bb2:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:1458:5
 1e12bb4:    2b 64             	b[r2 + 2] = r3			  ## RF_ble.c:1458:5
 1e12bb6:    33 64             	r3 = b[r2 + 3] (u)			  ## RF_ble.c:1459:5
 1e12bb8:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:1459:5
 1e12bba:    3b 64             	b[r2 + 3] = r3			  ## RF_ble.c:1459:5
 1e12bbc:    a6 70             	r6 = 10			  ## RF_ble.c:1459:5
 1e12bbe:    03 fc cc 01       	r3 = r0 + 460
 1e12bc2:    3e 66             	b[r3 + 3] = r6			  ## analog_ble.c:225:21
 1e12bc4:    c2 ff f4 09 00 00 	r2 = 2548 <system_data_end : 9f4 >			  ## analog_ble.c:225:21
 1e12bca:    27 f9 03 20       	r7 = b[r2 + 3] (s)			  ## analog_ble.c:248:12
 1e12bce:    c5 05             	r5 = r7.b0 (u)			  ## analog_ble.c:248:12
 1e12bd0:    95 e0 02 80       	if (r5 > 9) goto 4 <le_hw_open+0xA4 : 1e12bd8 >			  ## analog_ble.c:248:12
 1e12bd4:    3d 66             	b[r3 + 3] = r5			  ## analog_ble.c:250:25
 1e12bd6:    76 08             	r6 = r7			  ## analog_ble.c:250:25
 1e12bd8:    05 54             	r5 = h[r2 + 0] (u)			  ## analog_ble.c:254:38
 1e12bda:    2d d3             	r5 = r5 >> 12			  ## analog_ble.c:254:38
 1e12bdc:    56 f2 01 b0       	ifs (r6 < r5) goto 2 <le_hw_open+0xAE : 1e12be2 >			  ## analog_ble.c:254:38
 1e12be0:    56 08             	r6 = r5			  ## analog_ble.c:254:19
 1e12be2:    3e 66             	b[r3 + 3] = r6			  ## analog_ble.c:254:17
 1e12be4:    03 fc 20 01       	r3 = r0 + 288			  ## analog_ble.c:254:17
 1e12be8:    0e 46             	[r3 + 0] = r6			  ## analog_ble.c:261:27
 1e12bea:    55 54             	r5 = h[r2 + 10] (u)			  ## RF_ble.c:1472:5
 1e12bec:    65 fb 00 59       	r5 = 0 - r5			  ## RF_ble.c:1475:26
 1e12bf0:    2d c5             	r5 = r5 << 20			  ## RF_ble.c:1475:52
 1e12bf2:    c7 64             	r7 = b[r2 + 12] (u)			  ## RF_ble.c:1470:12
 1e12bf4:    02 fb c0 5d       	r2 = 24000 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x12AA : 5dc0 >			  ## RF_ble.c:1475:65
 1e12bf8:    e0 fe 20 55       	r5 = r5 / r2 (s)			  ## RF_ble.c:1475:65
 1e12bfc:    06 70             	r6 = 0			  ## RF_ble.c:1475:65
 1e12bfe:    02 70             	r2 = 0			  ## RF_ble.c:1475:65
 1e12c00:    01 2e             	if (r7 == 0) goto 2 <le_hw_open+0xD0 : 1e12c04 >			  ## RF_ble.c:1475:65
 1e12c02:    52 08             	r2 = r5			  ## RF_ble.c:1475:65
 1e12c04:    1a 46             	[r3 + 4] = r2			  ## RF_ble.c:1475:21
 1e12c06:    12 46             	r2 = [r3 + 4]			  ## RF_ble.c:1477:69
 1e12c08:    02 fb 01 01       	r2 = 257 <DRIVER_RAM_TOTAL+0xF : 101 >			  ## RF_ble.c:1478:24
 1e12c0c:    ea 52             	h[r1 + 28] = r2			  ## RF_ble.c:1478:24
 1e12c0e:    12 70             	r2 = 1			  ## RF_ble.c:1479:24
 1e12c10:    da 52             	h[r1 + 26] = r2			  ## RF_ble.c:1479:24
 1e12c12:    7e 50             	h[r0 + 14] = r6			  ## RF_ble.c:1481:19
 1e12c14:    8e 50             	h[r0 + 16] = r6			  ## RF_ble.c:1482:19
 1e12c16:    be 50             	h[r0 + 22] = r6			  ## RF_ble.c:1484:21
 1e12c18:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:1485:21
 1e12c1a:    ce 50             	h[r0 + 24] = r6			  ## RF_ble.c:1486:21
 1e12c1c:    ea 50             	h[r0 + 28] = r2			  ## RF_ble.c:1487:21
 1e12c1e:    f2 7f             	r2 = 255			  ## RF_ble.c:1487:21
 1e12c20:    ba 51             	h[r0 + 54] = r2			  ## RF_ble.c:1489:22
 1e12c22:    c3 ff 95 82 00 00 	r3 = 33429 <nvbss_size+0xF55 : 8295 >			  ## RF_ble.c:1490:20
 1e12c28:    cb 52             	h[r1 + 24] = r3			  ## RF_ble.c:1490:20
 1e12c2a:    ee 51             	h[r0 + 60] = r6			  ## RF_ble.c:1491:24
 1e12c2c:    4e 52             	h[r1 + 8] = r6			  ## RF_ble.c:1493:24
 1e12c2e:    5e 52             	h[r1 + 10] = r6			  ## RF_ble.c:1494:24
 1e12c30:    6e 52             	h[r1 + 12] = r6			  ## RF_ble.c:1495:24
 1e12c32:    d2 f5 04 00       	b[sp+4] = r2			  ## RF_ble.c:1497:5
 1e12c36:    f1 07             	r1 = -1			  ## RF_ble.c:1497:5
 1e12c38:    09 02             	[sp] = r1			  ## RF_ble.c:1497:5
 1e12c3a:    01 a0             	r1 = sp + 0			  ## RF_ble.c:1497:5
 1e12c3c:    bf f3 1a fa       	call -3020 <__set_channel_map : 1e12074 >			  ## RF_ble.c:1498:5
 1e12c40:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:2931:13
 1e12c42:    0d 20             	if (r0 == 0) goto 26 <le_hw_open+0x12A : 1e12c5e >			  ## RF_ble.c:2931:13
 1e12c44:    80 72             	r0 = 40			  ## RF_ble.c:2932:29
 1e12c46:    bf f3 d6 95       	call -54356 <btctler_nv_memory_malloc : 1e057f6 >			  ## RF_ble.c:2932:29
 1e12c4a:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:2932:13
 1e12c4c:    10 f6 e4 61       	[r6 + 484] = r0			  ## RF_ble.c:2932:27
 1e12c50:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2933:9
 1e12c54:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:2933:23
 1e12c58:    11 80             	r1 += 1			  ## RF_ble.c:2933:23
 1e12c5a:    11 f9 20 00       	b[r0 + 32] = r1			  ## RF_ble.c:2933:23
 1e12c5e:    60 fc 78 01       	r0 = r6 + 376
 1e12c62:    01 91             	r1 = r0 + 16			  ## RF_ble.c:3750:20
 1e12c64:    49 40             	[r0 + 16] = r1			  ## list.h:188:16
 1e12c66:    59 40             	[r0 + 20] = r1			  ## list.h:189:16
 1e12c68:    01 fc 20 00       	r1 = r0 + 32			  ## RF_ble.c:3751:20
 1e12c6c:    89 40             	[r0 + 32] = r1			  ## list.h:188:16
 1e12c6e:    99 40             	[r0 + 36] = r1			  ## list.h:189:16
 1e12c70:    81 91             	r1 = r0 + 24			  ## RF_ble.c:3752:20
 1e12c72:    69 40             	[r0 + 24] = r1			  ## list.h:188:16
 1e12c74:    79 40             	[r0 + 28] = r1			  ## list.h:189:16
 1e12c76:    01 70             	r1 = 0			  ## list.h:189:16
 1e12c78:    39 40             	[r0 + 12] = r1			  ## RF_ble.c:197:15
 1e12c7a:    29 40             	[r0 + 8] = r1			  ## RF_ble.c:197:15
 1e12c7c:    19 40             	[r0 + 4] = r1			  ## RF_ble.c:197:15
 1e12c7e:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:197:15
 1e12c80:    40 08             	r0 = r4			  ## RF_ble.c:3757:5
 1e12c82:    52 17             	call -348 <le_hw_standby : 1e12b28 >			  ## RF_ble.c:3757:5
 1e12c84:    40 08             	r0 = r4			  ## RF_ble.c:3760:1
 1e12c86:    04 0a             	sp += 8			  ## RF_ble.c:3760:1
 1e12c88:    58 01             	{pc, r8-r4} = [sp++]			  ## RF_ble.c:3760:1


__set_adv_channel_index:
 1e12c8a:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:500:0
 1e12c8c:    03 70             	r3 = 0			  ## RF_ble.c:500:0
 1e12c8e:    02 fb 00 25       	r2 = 9472 <edr_remote_address+0x4 : 2500 >			  ## RF_ble.c:500:0
 1e12c92:    55 72             	r5 = 37			  ## RF_ble.c:500:0
 1e12c94:    16 70             	r6 = 1			  ## RF_ble.c:500:0
 1e12c96:    04 70             	r4 = 0			  ## RF_ble.c:500:0
 1e12c98:    f8 fd 30 76       	r7 = r6 << r3			  ## RF_ble.c:507:27
 1e12c9c:    17 f0 05 00       	if ((r7 & r1) == 0) goto 10 <__set_adv_channel_index+0x20 : 1e12caa >			  ## RF_ble.c:507:27
 1e12ca0:    57 08             	r7 = r5
 1e12ca2:    60 ff ff 49 02 00 	if ((r4 & 255) == 0) goto 4 <__set_adv_channel_index+0x22 : 1e12cac >
 1e12ca8:    0a 18             	goto 20 <__set_adv_channel_index+0x34 : 1e12cbe >
 1e12caa:    47 08             	r7 = r4
 1e12cac:    15 80             	r5 += 1			  ## RF_ble.c:506:19
 1e12cae:    13 80             	r3 += 1			  ## RF_ble.c:506:25
 1e12cb0:    22 fc 00 01       	r2 = r2 + 256			  ## RF_ble.c:506:19
 1e12cb4:    74 08             	r4 = r7			  ## RF_ble.c:506:19
 1e12cb6:    33 e0 ef 3f       	if (r3 < 3) goto -34 <__set_adv_channel_index+0xE : 1e12c98 >			  ## RF_ble.c:506:19
 1e12cba:    02 70             	r2 = 0
 1e12cbc:    04 18             	goto 8 <__set_adv_channel_index+0x3C : 1e12cc6 >
 1e12cbe:    23 c2             	r3 = r4 << 8			  ## RF_ble.c:513:17
 1e12cc0:    e2 b4             	r2 = r2 - r3			  ## RF_ble.c:513:17
 1e12cc2:    22 fd ff 2a       	r2 = r2 & 65280			  ## RF_ble.c:513:17
 1e12cc6:    4b c1             	r3 = r1 << 5			  ## RF_ble.c:536:38
 1e12cc8:    23 fd 80 39       	r3 = r3 & 128			  ## RF_ble.c:518:14
 1e12ccc:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:535:38
 1e12cce:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:535:38
 1e12cd2:    51 b6             	r1 |= r3			  ## RF_ble.c:534:62
 1e12cd4:    31 b3             	r1 ^= 64			  ## RF_ble.c:534:62
 1e12cd6:    51 b8             	r1 |= r4			  ## RF_ble.c:535:56
 1e12cd8:    41 04             	r1 = r1.b0 (u)			  ## RF_ble.c:535:56
 1e12cda:    51 b4             	r1 |= r2			  ## RF_ble.c:535:56
 1e12cdc:    11 b7             	r1 |= 16384			  ## RF_ble.c:535:56
 1e12cde:    c2 ff 1c 80 1c 00 	r2 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e12ce4:    19 44             	[r2 + 4] = r1			  ## RF_ble.c:263:21
 1e12ce6:    08 00             	csync			  ## RF_ble.c:264:5
 1e12ce8:    c1 ff e4 2f 00 00 	r1 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e12cee:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:134:19
 1e12cf0:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e12cf2:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:134:17
 1e12cf4:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e12cf6:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e12cfa:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e12cfc:    01 fb f0 07       	r1 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e12d00:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e12d02:    01 fb 05 18       	r1 = 6149 <report_data_code_size+0x24D : 1805 >			  ## RF_ble.c:265:67
 1e12d06:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e12d08:    08 44             	[r2 + 0] = r0			  ## RF_ble.c:265:21
 1e12d0a:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:539:1


hw_alloc_tx:
 1e12d0c:    34 00             	[--sp] = rets			  ## RF_ble.c:180:0
 1e12d0e:    41 91             	r1 = r0 + 20			  ## RF_ble.c:184:53
 1e12d10:    10 70             	r0 = 1			  ## RF_ble.c:184:27
 1e12d12:    bf f3 74 96       	call -54040 <hw_dma_alloc : 1e059fe >			  ## RF_ble.c:184:27
 1e12d16:    05 20             	if (r0 == 0) goto 10 <hw_alloc_tx+0x16 : 1e12d22 >			  ## RF_ble.c:184:27
 1e12d18:    01 70             	r1 = 0			  ## RF_ble.c:187:9
 1e12d1a:    39 40             	[r0 + 12] = r1			  ## RF_ble.c:187:9
 1e12d1c:    29 40             	[r0 + 8] = r1			  ## RF_ble.c:187:9
 1e12d1e:    19 40             	[r0 + 4] = r1			  ## RF_ble.c:187:9
 1e12d20:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:187:9
 1e12d22:    30 00             	pc = [sp++]			  ## RF_ble.c:189:5


__adv_pdu:
 1e12d24:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2984:0
 1e12d26:    36 08             	r6 = r3			  ## RF_ble.c:2984:0
 1e12d28:    14 08             	r4 = r1			  ## RF_ble.c:2984:0
 1e12d2a:    62 e0 48 80       	if (r2 > 6) goto 144 <.GJTIE776_0_0_+0x82 : 1e12dbe >			  ## RF_ble.c:2984:0
 1e12d2e:    05 fc 68 01       	r5 = r0 + 360			  ## RF_ble.c:2984:0
 1e12d32:    a2 00             	tbb [r2]			  ## RF_ble.c:2984:0


.GJTIS776_0_0_:
 1e12d34:    04     < 4 : 0x4 >
 1e12d35:    22     < 34 : 0x22 >
 1e12d36:    04     < 4 : 0x4 >
 1e12d37:    45     < 69 : 0x45 >
 1e12d38:    45     < 69 : 0x45 >
 1e12d39:    45     < 69 : 0x45 >
 1e12d3a:    04     < 4 : 0x4 >
 1e12d3b:    00     < 0 : 0x0 >
 1e12d3c:    60 58             	r0 = h[r4 + 12] (u)			  ## RF_ble.c:2993:9
 1e12d3e:    21 fd 0f 29       	r1 = r2 & 15			  ## RF_ble.c:2994:9
 1e12d42:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:2993:9
 1e12d46:    50 b2             	r0 |= r1			  ## RF_ble.c:2994:9
 1e12d48:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:2994:9
 1e12d4a:    61 9c             	r1 = r6 + 6			  ## RF_ble.c:2995:9
 1e12d4c:    e9 68             	b[r4 + 14] = r1			  ## RF_ble.c:2995:9
 1e12d4e:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## RF_ble.c:2997:9
 1e12d52:    c2 ff 8f ff 00 00 	r2 = 65423 <_IRQ_MEM_ADDR+0x8F : ff8f >			  ## RF_ble.c:2997:9
 1e12d58:    50 b5             	r0 &= r2			  ## RF_ble.c:2997:9
 1e12d5a:    57 02             	r7 = [sp+20]			  ## RF_ble.c:2997:9
 1e12d5c:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:2997:9
 1e12d5e:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2997:9
 1e12d62:    50 b2             	r0 |= r1			  ## RF_ble.c:2997:9
 1e12d64:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:2997:9
 1e12d66:    00 99             	r0 = r4 + 16			  ## RF_ble.c:2998:9
 1e12d68:    62 70             	r2 = 6			  ## RF_ble.c:2998:9
 1e12d6a:    51 08             	r1 = r5			  ## RF_ble.c:2998:9
 1e12d6c:    97 f3 ba a0       	call 3096948 <memcpy : 106ee4 >			  ## RF_ble.c:2998:9
 1e12d70:    60 99             	r0 = r4 + 22			  ## RF_ble.c:3000:25
 1e12d72:    71 08             	r1 = r7			  ## RF_ble.c:3000:9
 1e12d74:    62 08             	r2 = r6			  ## RF_ble.c:3000:9
 1e12d76:    21 18             	goto 66 <.GJTIE776_0_0_+0x7E : 1e12dba >			  ## RF_ble.c:3000:9
 1e12d78:    60 58             	r0 = h[r4 + 12] (u)			  ## RF_ble.c:3007:9
 1e12d7a:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3007:9
 1e12d7e:    10 b0             	r0 |= 1			  ## RF_ble.c:3007:9
 1e12d80:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:3008:9
 1e12d82:    c1 70             	r1 = 12			  ## RF_ble.c:3008:9
 1e12d84:    e9 68             	b[r4 + 14] = r1			  ## RF_ble.c:3009:9
 1e12d86:    01 6a             	r1 = b[r5 + 0] (u)			  ## RF_ble.c:3011:9
 1e12d88:    30 fd 7e 09       	r0 = r0 & 4294967169			  ## RF_ble.c:3011:9
 1e12d8c:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3011:9
 1e12d8e:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3011:9
 1e12d92:    e0 fd 00 61       	r6 = r1 | r0			  ## RF_ble.c:3011:9
 1e12d96:    6e 58             	h[r4 + 12] = r6			  ## RF_ble.c:3011:9
 1e12d98:    00 99             	r0 = r4 + 16			  ## RF_ble.c:3012:9
 1e12d9a:    11 9a             	r1 = r5 + 1			  ## RF_ble.c:3012:9
 1e12d9c:    62 70             	r2 = 6			  ## RF_ble.c:3012:9
 1e12d9e:    97 f3 a1 a0       	call 3096898 <memcpy : 106ee4 >			  ## RF_ble.c:3012:9
 1e12da2:    70 6a             	r0 = b[r5 + 7] (u)			  ## RF_ble.c:3014:9
 1e12da4:    c1 ff 41 ff 00 00 	r1 = 65345 <_IRQ_MEM_ADDR+0x41 : ff41 >			  ## RF_ble.c:3014:9
 1e12daa:    51 bd             	r1 &= r6			  ## RF_ble.c:3014:9
 1e12dac:    c0 c1             	r0 = r0 << 7			  ## RF_ble.c:3014:9
 1e12dae:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:3014:9
 1e12db0:    50 b2             	r0 |= r1			  ## RF_ble.c:3014:9
 1e12db2:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:3014:9
 1e12db4:    60 99             	r0 = r4 + 22			  ## RF_ble.c:3015:25
 1e12db6:    81 9a             	r1 = r5 + 8			  ## RF_ble.c:3015:9
 1e12db8:    62 70             	r2 = 6			  ## RF_ble.c:3015:9
 1e12dba:    97 f3 93 a0       	call 3096870 <memcpy : 106ee4 >
 1e12dbe:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:3018:1


ble_hw_tx:
 1e12dc0:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:220:0
 1e12dc2:    15 08             	r5 = r1			  ## RF_ble.c:220:0
 1e12dc4:    03 08             	r3 = r0			  ## RF_ble.c:220:0
 1e12dc6:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:220:0
 1e12dc8:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:222:34
 1e12dca:    24 08             	r4 = r2
 1e12dcc:    07 28             	if (r4 == 0) goto 14 <ble_hw_tx+0x1C : 1e12ddc >
 1e12dce:    0d 20             	if (r0 == 0) goto 26 <ble_hw_tx+0x2A : 1e12dea >
 1e12dd0:    00 9b             	r0 = r5 + 16			  ## RF_ble.c:234:44
 1e12dd2:    9b 16             	call -714 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:234:33
 1e12dd4:    a8 5c             	h[r6 + 20] = r0			  ## RF_ble.c:234:31
 1e12dd6:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:235:9
 1e12dd8:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:235:9
 1e12dda:    08 18             	goto 16 <ble_hw_tx+0x2C : 1e12dec >			  ## RF_ble.c:235:9
 1e12ddc:    1d 20             	if (r0 == 0) goto 58 <ble_hw_tx+0x58 : 1e12e18 >
 1e12dde:    00 9b             	r0 = r5 + 16			  ## RF_ble.c:227:44
 1e12de0:    94 16             	call -728 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:227:33
 1e12de2:    98 5c             	h[r6 + 18] = r0			  ## RF_ble.c:227:31
 1e12de4:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:228:9
 1e12de6:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:228:9
 1e12de8:    18 18             	goto 48 <ble_hw_tx+0x5A : 1e12e1a >			  ## RF_ble.c:228:9
 1e12dea:    00 70             	r0 = 0
 1e12dec:    61 5a             	r1 = h[r5 + 12] (u)			  ## RF_ble.c:236:35
 1e12dee:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:236:72
 1e12df2:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:236:41
 1e12df4:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:236:47
 1e12df8:    51 b4             	r1 |= r2			  ## RF_ble.c:236:66
 1e12dfa:    c9 5c             	h[r6 + 24] = r1			  ## RF_ble.c:236:28
 1e12dfc:    e1 5c             	r1 = h[r6 + 28] (u)			  ## RF_ble.c:237:25
 1e12dfe:    62 5a             	r2 = h[r5 + 12] (u)			  ## RF_ble.c:238:52
 1e12e00:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:237:14
 1e12e04:    50 b2             	r0 |= r1			  ## RF_ble.c:238:45
 1e12e06:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:238:55
 1e12e08:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:238:55
 1e12e0c:    50 b2             	r0 |= r1			  ## RF_ble.c:238:61
 1e12e0e:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:238:72
 1e12e12:    50 b2             	r0 |= r1			  ## RF_ble.c:238:66
 1e12e14:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:238:28
 1e12e16:    16 18             	goto 44 <ble_hw_tx+0x84 : 1e12e44 >			  ## RF_ble.c:238:28
 1e12e18:    00 70             	r0 = 0
 1e12e1a:    61 5a             	r1 = h[r5 + 12] (u)			  ## RF_ble.c:229:35
 1e12e1c:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:229:72
 1e12e20:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:229:41
 1e12e22:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:229:47
 1e12e26:    51 b4             	r1 |= r2			  ## RF_ble.c:229:66
 1e12e28:    b9 5c             	h[r6 + 22] = r1			  ## RF_ble.c:229:28
 1e12e2a:    d1 5c             	r1 = h[r6 + 26] (u)			  ## RF_ble.c:230:25
 1e12e2c:    62 5a             	r2 = h[r5 + 12] (u)			  ## RF_ble.c:231:52
 1e12e2e:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:230:14
 1e12e32:    50 b2             	r0 |= r1			  ## RF_ble.c:231:45
 1e12e34:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:231:55
 1e12e36:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:231:55
 1e12e3a:    50 b2             	r0 |= r1			  ## RF_ble.c:231:61
 1e12e3c:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:231:72
 1e12e40:    50 b2             	r0 |= r1			  ## RF_ble.c:231:66
 1e12e42:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:231:28
 1e12e44:    80 67             	r0 = b[r3 + 24] (u)			  ## RF_ble.c:244:17
 1e12e46:    09 20             	if (r0 == 0) goto 18 <ble_hw_tx+0x9A : 1e12e5a >			  ## RF_ble.c:244:17
 1e12e48:    09 28             	if (r4 == 0) goto 18 <ble_hw_tx+0x9C : 1e12e5c >
 1e12e4a:    e0 5c             	r0 = h[r6 + 28] (u)			  ## RF_ble.c:246:9
 1e12e4c:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:246:9
 1e12e4e:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:246:9
 1e12e50:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:246:9
 1e12e52:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:246:9
 1e12e56:    50 b2             	r0 |= r1			  ## RF_ble.c:246:9
 1e12e58:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:246:9
 1e12e5a:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:248:1
 1e12e5c:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:245:26
 1e12e5e:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:245:26
 1e12e60:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:245:26
 1e12e62:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:245:26
 1e12e64:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:245:26
 1e12e68:    50 b2             	r0 |= r1			  ## RF_ble.c:245:26
 1e12e6a:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:245:26
 1e12e6c:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:248:1


ble_power_get:
 1e12e6e:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:670:0
 1e12e70:    04 08             	r4 = r0			  ## le_low_power.c:670:0
 1e12e72:    00 71             	r0 = 16			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:684:13
 1e12e74:    bf f3 94 c5       	call -29912 <malloc : 1e0b9a0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:684:13
 1e12e78:    0f 20             	if (r0 == 0) goto 30 <ble_power_get+0x2A : 1e12e98 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:685:9
 1e12e7a:    c1 ff 0c 1c e1 01 	r1 = 31529996 <ble_power_ops : 1e11c0c >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:690:16
 1e12e80:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:690:16
 1e12e82:    2c 40             	[r0 + 8] = r4			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/power/power_hw.c:691:17
 1e12e84:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:154:28
 1e12e8a:    12 42             	r2 = [r1 + 4]			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:154:28
 1e12e8c:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:137:16
 1e12e8e:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:138:16
 1e12e90:    1a 40             	[r0 + 4] = r2			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:139:16
 1e12e92:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/system/generic/list.h:140:16
 1e12e94:    58 48             	[r4 + 20] = r0			  ## le_low_power.c:672:20
 1e12e96:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:675:1
 1e12e98:    8f f3 bd 82       	call 2033018 <p33_soft_reset : 3416 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e12e9c:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:672:20
 1e12ea0:    14 01             	{rets, r4} = [sp++]			  ## cpu.h:148:5
 1e12ea2:    cf f3 b8 82       	goto 2033008 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


check_event_pending:
 1e12ea6:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:4353:0
 1e12ea8:    01 70             	r1 = 0			  ## RF_ble.c:4353:0
 1e12eaa:    c2 ff 28 80 1c 00 	r2 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >			  ## RF_ble.c:4353:0
 1e12eb0:    10 70             	r0 = 1			  ## RF_ble.c:4353:0
 1e12eb2:    04 44             	r4 = [r2 + 0]			  ## RF_ble.c:4356:13
 1e12eb4:    25 44             	r5 = [r2 + 8]			  ## RF_ble.c:4356:29
 1e12eb6:    f8 fd 10 30       	r3 = r0 << r1			  ## RF_ble.c:4356:44
 1e12eba:    54 b7             	r4 &= r3			  ## RF_ble.c:4356:42
 1e12ebc:    54 f1 09 00       	if ((r4 & r5) != 0) goto 18 <check_event_pending+0x2C : 1e12ed2 >			  ## RF_ble.c:4356:42
 1e12ec0:    94 44             	r4 = [r2 + 36]			  ## RF_ble.c:4359:13
 1e12ec2:    a5 44             	r5 = [r2 + 40]			  ## RF_ble.c:4359:29
 1e12ec4:    53 b9             	r3 &= r4			  ## RF_ble.c:4359:42
 1e12ec6:    53 f1 04 00       	if ((r3 & r5) != 0) goto 8 <check_event_pending+0x2C : 1e12ed2 >			  ## RF_ble.c:4359:42
 1e12eca:    11 80             	r1 += 1			  ## RF_ble.c:4355:39
 1e12ecc:    71 e0 f1 9f       	if (r1 <= 7) goto -30 <check_event_pending+0xC : 1e12eb2 >			  ## RF_ble.c:4355:39
 1e12ed0:    00 70             	r0 = 0
 1e12ed2:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:4364:1


le_hw_suspend:
 1e12ed4:    34 00             	[--sp] = rets			  ## RF_ble.c:3703:0
 1e12ed6:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3704:13
 1e12ed8:    02 f9 53 11       	r2 = b[r1 + 339] (u)			  ## RF_ble.c:3704:13
 1e12edc:    92 b0             	r2 |= 2			  ## RF_ble.c:3704:9
 1e12ede:    32 e0 05 00       	if (r2 == 3) goto 10 <le_hw_suspend+0x18 : 1e12eec >			  ## RF_ble.c:3704:9
 1e12ee2:    12 70             	r2 = 1			  ## RF_ble.c:3715:28
 1e12ee4:    12 f9 53 11       	b[r1 + 339] = r2			  ## RF_ble.c:3715:28
 1e12ee8:    bf f3 a9 f6       	call -4782 <ble_hw_disable : 1e11c3e >			  ## RF_ble.c:3716:5
 1e12eec:    30 00             	pc = [sp++]			  ## RF_ble.c:3717:1


ble_slot_schedule:
 1e12eee:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF_ble.c:4385:0
 1e12ef0:    cd ff e4 2f 00 00 	r13 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:4385:0
 1e12ef6:    0b f6 00 d0       	r11 = [r13 + 0]			  ## RF_ble.c:4395:9
 1e12efa:    00 f9 20 b0       	r0 = b[r11 + 32] (u)			  ## RF_ble.c:4395:17
 1e12efe:    20 e0 9c 30       	if (r0 < 2) goto 312 <.GJTIE781_0_0_+0xE8 : 1e1303a >			  ## RF_ble.c:4395:17
 1e12f02:    f5 07             	r5 = -1
 1e12f04:    07 70             	r7 = 0
 1e12f06:    18 70             	r8 = 1
 1e12f08:    c9 ff 1c 80 1c 00 	r9 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e12f0e:    ca 71             	r10 = 28
 1e12f10:    06 70             	r6 = 0			  ## RF_ble.c:134:19
 1e12f12:    0e 70             	r14 = 0			  ## RF_ble.c:134:19
 1e12f14:    ff 07             	r15 = -1			  ## RF_ble.c:134:19
 1e12f16:    04 18             	goto 8 <ble_slot_schedule+0x32 : 1e12f20 >			  ## RF_ble.c:134:19
 1e12f18:    0b f6 00 d0       	r11 = [r13 + 0]
 1e12f1c:    c7 81             	r7 += 28			  ## RF_ble.c:4400:5
 1e12f1e:    26 80             	r6 += 2			  ## RF_ble.c:4400:5
 1e12f20:    00 f8 00 b6       	r0 = h[r11+r6] (u)			  ## RF_ble.c:4401:13
 1e12f24:    4f 20             	if (r0 == 0) goto 158 <.GJTIE781_0_0_+0x72 : 1e12fc4 >			  ## RF_ble.c:4401:13
 1e12f26:    0c f6 10 b0       	r12 = [r11 + 16]			  ## RF_ble.c:4402:35
 1e12f2a:    80 fb 70 4c       	r4 = r12 + r7			  ## RF_ble.c:4407:29
 1e12f2e:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4407:29
 1e12f30:    4c 20             	if (r0 == 0) goto 152 <.GJTIE781_0_0_+0x78 : 1e12fca >			  ## RF_ble.c:4407:29
 1e12f32:    00 f9 52 01       	r0 = b[r0 + 338] (u)			  ## RF_ble.c:4410:23
 1e12f36:    f8 fd 00 18       	r1 = r8 << r0			  ## RF_ble.c:4410:23
 1e12f3a:    e4 fd 00 2e       	r2 = r14.b0 (u)			  ## RF_ble.c:4410:20
 1e12f3e:    f0 8f             	r0 += -1			  ## RF_ble.c:4411:13
 1e12f40:    e0 fd 20 e1       	r14 = r1 | r2			  ## RF_ble.c:4410:20
 1e12f44:    60 e0 3e 80       	if (r0 > 6) goto 124 <.GJTIE781_0_0_+0x72 : 1e12fc4 >			  ## RF_ble.c:4410:20
 1e12f48:    a0 00             	tbb [r0]


.GJTIS781_0_0_:
 1e12f4a:    37     < 55 : 0x37 >
 1e12f4b:    04     < 4 : 0x4 >
 1e12f4c:    37     < 55 : 0x37 >
 1e12f4d:    3d     < 61 : 0x3D >
 1e12f4e:    3d     < 61 : 0x3D >
 1e12f4f:    04     < 4 : 0x4 >
 1e12f50:    04     < 4 : 0x4 >
 1e12f51:    00     < 0 : 0x0 >
 1e12f52:    00 f6 1c 90       	r0 = [r9 + 28]			  ## RF_ble.c:4371:10
 1e12f56:    05 70             	r5 = 0			  ## RF_ble.c:4371:10
 1e12f58:    21 f3 34 00       	if ((r0 & 2) != 0) goto 104 <.GJTIE781_0_0_+0x72 : 1e12fc4 >			  ## RF_ble.c:4371:10
 1e12f5c:    a4 17             	call -184 <check_event_pending : 1e12ea6 >			  ## RF_ble.c:4371:39
 1e12f5e:    32 30             	if (r0 != 0) goto 100 <.GJTIE781_0_0_+0x72 : 1e12fc4 >			  ## RF_ble.c:4371:39
 1e12f60:    00 f6 10 b0       	r0 = [r11 + 16]			  ## RF_ble.c:134:35
 1e12f64:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e12f66:    e0 fe a0 00       	r0 = r0 / r10 (s)			  ## RF_ble.c:134:17
 1e12f6a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:256:50
 1e12f6c:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:256:50
 1e12f70:    90 b0             	r0 |= 2			  ## RF_ble.c:256:56
 1e12f72:    10 f6 00 90       	[r9 + 0] = r0			  ## RF_ble.c:256:21
 1e12f76:    08 00             	csync			  ## RF_ble.c:257:5
 1e12f78:    00 f6 08 90       	r0 = [r9 + 8]			  ## RF_ble.c:258:12
 1e12f7c:    01 f6 00 d0       	r1 = [r13 + 0]			  ## RF_ble.c:134:19
 1e12f80:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e12f82:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e12f84:    e0 fe a0 11       	r1 = r1 / r10 (s)			  ## RF_ble.c:134:17
 1e12f88:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:256:50
 1e12f8a:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:256:50
 1e12f8e:    51 b5             	r1 &= r2			  ## RF_ble.c:256:50
 1e12f90:    02 fb 02 38       	r2 = 14338 <_norflash_read+0x28 : 3802 >			  ## RF_ble.c:256:56
 1e12f94:    51 b4             	r1 |= r2			  ## RF_ble.c:256:56
 1e12f96:    11 f6 00 90       	[r9 + 0] = r1			  ## RF_ble.c:256:21
 1e12f9a:    08 00             	csync			  ## RF_ble.c:257:5
 1e12f9c:    01 f6 08 90       	r1 = [r9 + 8]			  ## RF_ble.c:258:12
 1e12fa0:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:4375:40
 1e12fa2:    09 c4             	r1 = r1 << 16			  ## RF_ble.c:4376:51
 1e12fa4:    21 fd ff 1b       	r1 = r1 & 16711680			  ## RF_ble.c:4376:51
 1e12fa8:    51 b0             	r1 |= r0			  ## RF_ble.c:4376:10
 1e12faa:    10 fc fd ff       	r0 = r1 + -3			  ## RF_ble.c:4379:44
 1e12fae:    11 80             	r1 += 1			  ## RF_ble.c:4377:9
 1e12fb0:    41 e0 08 30       	if (r1 < 4) goto 16 <.GJTIE781_0_0_+0x72 : 1e12fc4 >
 1e12fb4:    05 08             	r5 = r0			  ## RF_ble.c:4379:12
 1e12fb6:    06 18             	goto 12 <.GJTIE781_0_0_+0x72 : 1e12fc4 >			  ## RF_ble.c:4379:12
 1e12fb8:    40 08             	r0 = r4
 1e12fba:    8c 17             	call -232 <le_hw_suspend : 1e12ed4 >
 1e12fbc:    80 f6 00 c7       	r0 = [r12+r7]
 1e12fc0:    05 f7 58 02       	r5 = h[r0 + 600] (u)
 1e12fc4:    5f f2 01 30       	if (r15 < r5) goto 2 <.GJTIE781_0_0_+0x78 : 1e12fca >
 1e12fc8:    5f 08             	r15 = r5			  ## RF_ble.c:4427:21
 1e12fca:    e6 e0 a5 1f       	if (r6 != 14) goto -182 <ble_slot_schedule+0x2A : 1e12f18 >
 1e12fce:    20 fd 0a e9       	r0 = r14 & 10			  ## RF_ble.c:4431:5
 1e12fd2:    c1 ff 74 0f 00 00 	r1 = 3956 <ble_slot_schedule.credits : f74 >			  ## RF_ble.c:4431:5
 1e12fd8:    20 e0 08 00       	if (r0 == 2) goto 16 <.GJTIE781_0_0_+0x9A : 1e12fec >			  ## RF_ble.c:4431:5
 1e12fdc:    80 e0 08 00       	if (r0 == 8) goto 16 <.GJTIE781_0_0_+0x9E : 1e12ff0 >
 1e12fe0:    a0 e0 0a 10       	if (r0 != 10) goto 20 <.GJTIE781_0_0_+0xA6 : 1e12ff8 >
 1e12fe4:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4439:20
 1e12fe6:    38 70             	r8 = 3			  ## RF_ble.c:4439:19
 1e12fe8:    12 e0 03 00       	if (r2 == 1) goto 6 <.GJTIE781_0_0_+0xA0 : 1e12ff2 >			  ## RF_ble.c:4439:19
 1e12fec:    18 70             	r8 = 1
 1e12fee:    01 18             	goto 2 <.GJTIE781_0_0_+0xA0 : 1e12ff2 >
 1e12ff0:    38 70             	r8 = 3
 1e12ff2:    18 f9 00 10       	b[r1 + 0] = r8
 1e12ff6:    02 18             	goto 4 <.GJTIE781_0_0_+0xAA : 1e12ffc >
 1e12ff8:    08 f9 00 10       	r8 = b[r1 + 0] (u)
 1e12ffc:    01 f6 00 d0       	r1 = [r13 + 0]
 1e13000:    02 70             	r2 = 0
 1e13002:    13 08             	r3 = r1
 1e13004:    04 70             	r4 = 0
 1e13006:    85 f7 02 30       	r5 = h[r3 ++= 2] (u)			  ## RF_ble.c:4445:13
 1e1300a:    13 2a             	if (r5 == 0) goto 38 <.GJTIE781_0_0_+0xE0 : 1e13032 >			  ## RF_ble.c:4445:13
 1e1300c:    45 42             	r5 = [r1 + 16]			  ## RF_ble.c:4446:35
 1e1300e:    87 f6 00 52       	r7 = [r5+r2]			  ## RF_ble.c:4447:29
 1e13012:    0f 2e             	if (r7 == 0) goto 30 <.GJTIE781_0_0_+0xE0 : 1e13032 >			  ## RF_ble.c:4447:29
 1e13014:    76 fc 58 02       	r6 = r7 + 600
 1e13018:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:4457:30
 1e1301a:    0f f2 0a 30       	if (r15 < r0) goto 20 <.GJTIE781_0_0_+0xE0 : 1e13032 >			  ## RF_ble.c:4457:30
 1e1301e:    07 f9 52 71       	r7 = b[r7 + 338] (u)			  ## RF_ble.c:4458:35
 1e13022:    17 e0 02 10       	if (r7 != 1) goto 4 <.GJTIE781_0_0_+0xD8 : 1e1302a >			  ## RF_ble.c:4458:35
 1e13026:    18 e0 09 00       	if (r8 == 1) goto 18 <.GJTIE781_0_0_+0xEA : 1e1303c >
 1e1302a:    37 e0 02 10       	if (r7 != 3) goto 4 <.GJTIE781_0_0_+0xE0 : 1e13032 >
 1e1302e:    38 e0 05 00       	if (r8 == 3) goto 10 <.GJTIE781_0_0_+0xEA : 1e1303c >
 1e13032:    14 80             	r4 += 1			  ## RF_ble.c:4444:39
 1e13034:    c2 81             	r2 += 28			  ## RF_ble.c:4444:19
 1e13036:    84 e0 e6 3f       	if (r4 < 8) goto -52 <.GJTIE781_0_0_+0xB4 : 1e13006 >			  ## RF_ble.c:4444:19
 1e1303a:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF_ble.c:4471:1
 1e1303c:    11 5c             	r1 = h[r6 + 2] (u)
 1e1303e:    80 ba             	r0 = r5 + r2
 1e13040:    1f 01             	{rets, r15-r4} = [sp++]
 1e13042:    ff f3 d8 f6       	goto -4688 <le_hw_resume : 1e11df6 >


le_hw_advertising:
 1e13046:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:3138:0
 1e13048:    fe 0b             	sp += -4			  ## RF_ble.c:3138:0
 1e1304a:    05 08             	r5 = r0			  ## RF_ble.c:3138:0
 1e1304c:    0a f6 00 50       	r10 = [r5 + 0]			  ## RF_ble.c:3139:31
 1e13050:    a7 fc 10 01       	r7 = r10 + 272
 1e13054:    b2 5f             	r2 = h[r7 + 54] (u)
 1e13056:    16 08             	r6 = r1
 1e13058:    30 fd 1f 2a       	r0 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e1305c:    00 fd 1a 0a       	r0 = r0 | 6656			  ## RF_ble.c:823:23
 1e13060:    b8 5f             	h[r7 + 54] = r0			  ## RF_ble.c:823:23
 1e13062:    a0 fc 44 00       	r0 = r10 + 68			  ## RF_ble.c:823:23
 1e13066:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <le_hw_advertising+0x2A : 1e13070 >			  ## RF_ble.c:823:23
 1e1306a:    a1 71             	r1 = 26			  ## RF_ble.c:827:28
 1e1306c:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:827:28
 1e1306e:    d9 50             	h[r0 + 26] = r1			  ## RF_ble.c:828:28
 1e13070:    01 fb 55 55       	r1 = 21845 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xA3F : 5555 >			  ## RF_ble.c:3160:22
 1e13074:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:3160:22
 1e13076:    51 75             	r1 = 85			  ## RF_ble.c:3161:22
 1e13078:    19 50             	h[r0 + 2] = r1			  ## RF_ble.c:3161:22
 1e1307a:    20 73             	r0 = 50			  ## RF_ble.c:3161:22
 1e1307c:    10 f7 22 a0       	h[r10 + 34] = r0			  ## RF_ble.c:663:25
 1e13080:    04 70             	r4 = 0			  ## RF_ble.c:663:25
 1e13082:    14 f7 24 a0       	h[r10 + 36] = r4			  ## RF_ble.c:665:25
 1e13086:    18 5e             	h[r7 + 2] = r0			  ## RF_ble.c:666:25
 1e13088:    f8 4e             	[r7 + 60] = r0			  ## RF_ble.c:671:16
 1e1308a:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:3164:24
 1e1308c:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:3164:38
 1e13090:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:3164:38
 1e13092:    12 70             	r2 = 1			  ## RF_ble.c:3164:5
 1e13094:    50 08             	r0 = r5			  ## RF_ble.c:3164:5
 1e13096:    bf f3 88 f8       	call -3824 <__set_interval : 1e121aa >			  ## RF_ble.c:3164:5
 1e1309a:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:435:31
 1e1309c:    21 70             	r1 = 2
 1e1309e:    00 fc 52 01       	r0 = r0 + 338
 1e130a2:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:437:22
 1e130a4:    3c 50             	h[r0 + 6] = r4			  ## RF_ble.c:439:22
 1e130a6:    2c 50             	h[r0 + 4] = r4			  ## RF_ble.c:439:22
 1e130a8:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:439:22
 1e130ae:    c1 f4 20 0a       	[r0 + 4] = 8192			  ## RF_ble.c:263:21
 1e130b2:    08 00             	csync			  ## RF_ble.c:264:5
 1e130b4:    c9 ff e4 2f 00 00 	r9 = 12260 <bb_hdl : 2fe4 >
 1e130ba:    01 f6 00 90       	r1 = [r9 + 0]			  ## RF_ble.c:134:19
 1e130be:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e130c0:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e130c2:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e130c4:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e130c8:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e130ca:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:265:50
 1e130ce:    51 b5             	r1 &= r2			  ## RF_ble.c:265:50
 1e130d0:    52 81             	r2 += 21			  ## RF_ble.c:265:67
 1e130d2:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e130d4:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:265:21
 1e130d6:    62 6c             	r2 = b[r6 + 6] (u)			  ## RF_ble.c:3167:44
 1e130d8:    01 4a             	r1 = [r5 + 0]			  ## RF_ble.c:1565:37
 1e130da:    32 e0 05 00       	if (r2 == 3) goto 10 <le_hw_advertising+0xA2 : 1e130e8 >			  ## RF_ble.c:1569:5
 1e130de:    22 e0 06 00       	if (r2 == 2) goto 12 <le_hw_advertising+0xA8 : 1e130ee >
 1e130e2:    12 e0 02 00       	if (r2 == 1) goto 4 <le_hw_advertising+0xA4 : 1e130ea >
 1e130e6:    04 18             	goto 8 <le_hw_advertising+0xAA : 1e130f0 >
 1e130e8:    04 71             	r4 = 16
 1e130ea:    82 70             	r2 = 8
 1e130ec:    02 18             	goto 4 <le_hw_advertising+0xAC : 1e130f2 >
 1e130ee:    04 71             	r4 = 16
 1e130f0:    02 70             	r2 = 0
 1e130f2:    e3 53             	r3 = h[r1 + 60] (u)			  ## RF_ble.c:1592:35
 1e130f4:    23 fd f7 39       	r3 = r3 & 247			  ## RF_ble.c:1592:46
 1e130f8:    52 b6             	r2 |= r3			  ## RF_ble.c:1592:54
 1e130fa:    ea 53             	h[r1 + 60] = r2			  ## RF_ble.c:1592:24
 1e130fc:    e2 53             	r2 = h[r1 + 60] (u)			  ## RF_ble.c:1595:35
 1e130fe:    22 fd ef 29       	r2 = r2 & 239			  ## RF_ble.c:1595:46
 1e13102:    52 b8             	r2 |= r4			  ## RF_ble.c:1595:54
 1e13104:    ea 53             	h[r1 + 60] = r2			  ## RF_ble.c:1595:24
 1e13106:    11 5c             	r1 = h[r6 + 2] (u)			  ## RF_ble.c:3169:54
 1e13108:    42 6c             	r2 = b[r6 + 4] (u)			  ## RF_ble.c:3169:27
 1e1310a:    03 fb 71 02       	r3 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:3169:67
 1e1310e:    c9 0e             	r1 = r1 * r3			  ## RF_ble.c:3169:67
 1e13110:    92 c3             	r2 = r2 << 14			  ## RF_ble.c:3169:40
 1e13112:    51 b4             	r1 |= r2			  ## RF_ble.c:3169:47
 1e13114:    11 f7 04 a0       	h[r10 + 4] = r1			  ## RF_ble.c:3169:24
 1e13118:    71 6c             	r1 = b[r6 + 7] (u)			  ## RF_ble.c:3175:14
 1e1311a:    21 e0 14 00       	if (r1 == 2) goto 40 <le_hw_advertising+0x100 : 1e13146 >			  ## RF_ble.c:3175:14
 1e1311e:    01 5c             	r1 = h[r6 + 0] (u)			  ## RF_ble.c:3176:18
 1e13120:    b1 e0 11 30       	if (r1 < 11) goto 34 <le_hw_advertising+0x100 : 1e13146 >			  ## RF_ble.c:3176:18
 1e13124:    c1 f4 c0 0a       	[r0 + 4] = 49152			  ## RF_ble.c:263:21
 1e13128:    08 00             	csync			  ## RF_ble.c:264:5
 1e1312a:    01 f6 00 90       	r1 = [r9 + 0]			  ## RF_ble.c:134:19
 1e1312e:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e13130:    61 ba             	r1 = r5 - r1			  ## RF_ble.c:134:17
 1e13132:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e13134:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:134:17
 1e13138:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e1313a:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:265:50
 1e1313e:    02 fb 05 20       	r2 = 8197 <att_ram_buffer+0x2C1 : 2005 >			  ## RF_ble.c:265:67
 1e13142:    51 b4             	r1 |= r2			  ## RF_ble.c:265:67
 1e13144:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:265:21
 1e13146:    51 6c             	r1 = b[r6 + 5] (u)			  ## RF_ble.c:3180:5
 1e13148:    50 08             	r0 = r5			  ## RF_ble.c:3180:5
 1e1314a:    9f 15             	call -1218 <__set_adv_channel_index : 1e12c8a >			  ## RF_ble.c:3180:5
 1e1314c:    f0 7f             	r0 = 255			  ## RF_ble.c:3182:18
 1e1314e:    15 14             	call -2006 <hw_alloc_rx : 1e1297a >			  ## RF_ble.c:3182:18
 1e13150:    a8 4f             	[r7 + 104] = r0			  ## RF_ble.c:3182:16
 1e13152:    f0 7f             	r0 = 255			  ## RF_ble.c:3183:18
 1e13154:    12 14             	call -2012 <hw_alloc_rx : 1e1297a >			  ## RF_ble.c:3183:18
 1e13156:    b8 4f             	[r7 + 108] = r0			  ## RF_ble.c:3183:16
 1e13158:    e8 07             	r8 = -2			  ## RF_ble.c:3183:16
 1e1315a:    6f 20             	if (r0 == 0) goto 222 <le_hw_advertising+0x1F4 : 1e1323a >			  ## RF_ble.c:3183:16
 1e1315c:    a0 4f             	r0 = [r7 + 104]			  ## RF_ble.c:3184:10
 1e1315e:    6d 20             	if (r0 == 0) goto 218 <le_hw_advertising+0x1F4 : 1e1323a >
 1e13160:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:202:34
 1e13162:    40 81             	r0 += 20
 1e13164:    d2 14             	call -1628 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:205:29
 1e13166:    f8 56             	h[r3 + 30] = r0			  ## RF_ble.c:205:27
 1e13168:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:202:34
 1e1316a:    b0 4f             	r0 = [r7 + 108]			  ## RF_ble.c:3193:19
 1e1316c:    40 81             	r0 += 20
 1e1316e:    cd 14             	call -1638 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:205:29
 1e13170:    08 57             	h[r3 + 32] = r0			  ## RF_ble.c:207:27
 1e13172:    50 72             	r0 = 37			  ## RF_ble.c:3196:18
 1e13174:    cb 15             	call -1130 <hw_alloc_tx : 1e12d0c >			  ## RF_ble.c:3196:18
 1e13176:    c8 4f             	[r7 + 112] = r0			  ## RF_ble.c:3196:16
 1e13178:    50 72             	r0 = 37			  ## RF_ble.c:3197:18
 1e1317a:    c8 15             	call -1136 <hw_alloc_tx : 1e12d0c >			  ## RF_ble.c:3197:18
 1e1317c:    d8 4f             	[r7 + 116] = r0			  ## RF_ble.c:3197:16
 1e1317e:    5d 20             	if (r0 == 0) goto 186 <le_hw_advertising+0x1F4 : 1e1323a >			  ## RF_ble.c:3197:16
 1e13180:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3198:10
 1e13182:    5b 22             	if (r1 == 0) goto 182 <le_hw_advertising+0x1F4 : 1e1323a >			  ## RF_ble.c:3198:10
 1e13184:    a4 fc 0c 02       	r4 = r10 + 524
 1e13188:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3203:5
 1e1318a:    72 6c             	r2 = b[r6 + 7] (u)			  ## RF_ble.c:3203:5
 1e1318c:    38 98             	r8 = r4 + 3			  ## RF_ble.c:3203:61
 1e1318e:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3203:5
 1e13192:    a0 08             	r0 = r10			  ## RF_ble.c:3203:5
 1e13194:    c7 15             	call -1138 <__adv_pdu : 1e12d24 >			  ## RF_ble.c:3203:5
 1e13196:    70 6c             	r0 = b[r6 + 7] (u)			  ## RF_ble.c:3204:14
 1e13198:    d6 4f             	r6 = [r7 + 116]			  ## RF_ble.c:3204:14
 1e1319a:    10 e0 08 10       	if (r0 != 1) goto 16 <le_hw_advertising+0x168 : 1e131ae >			  ## RF_ble.c:3204:9
 1e1319e:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3205:9
 1e131a0:    12 70             	r2 = 1			  ## RF_ble.c:3205:9
 1e131a2:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3205:9
 1e131a6:    a0 08             	r0 = r10			  ## RF_ble.c:3205:9
 1e131a8:    61 08             	r1 = r6			  ## RF_ble.c:3205:9
 1e131aa:    bc 15             	call -1160 <__adv_pdu : 1e12d24 >			  ## RF_ble.c:3205:9
 1e131ac:    21 18             	goto 66 <le_hw_advertising+0x1AA : 1e131f0 >			  ## RF_ble.c:3205:9
 1e131ae:    60 5c             	r0 = h[r6 + 12] (u)			  ## RF_ble.c:3059:5
 1e131b0:    08 f9 2e a2       	r8 = b[r10 + 558] (u)			  ## RF_ble.c:3207:46
 1e131b4:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3059:5
 1e131b8:    10 b1             	r0 |= 4			  ## RF_ble.c:3059:5
 1e131ba:    68 5c             	h[r6 + 12] = r0			  ## RF_ble.c:3060:5
 1e131bc:    81 fc 06 00       	r1 = r8 + 6			  ## RF_ble.c:3061:5
 1e131c0:    e9 6c             	b[r6 + 14] = r1			  ## RF_ble.c:3061:5
 1e131c2:    01 f9 68 a1       	r1 = b[r10 + 360] (u)			  ## RF_ble.c:3064:5
 1e131c6:    c2 ff 84 ff 00 00 	r2 = 65412 <_IRQ_MEM_ADDR+0x84 : ff84 >			  ## RF_ble.c:3064:5
 1e131cc:    50 b5             	r0 &= r2			  ## RF_ble.c:3064:5
 1e131ce:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3064:5
 1e131d0:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3064:5
 1e131d4:    50 b2             	r0 |= r1			  ## RF_ble.c:3064:5
 1e131d6:    68 5c             	h[r6 + 12] = r0			  ## RF_ble.c:3064:5
 1e131d8:    00 9d             	r0 = r6 + 16			  ## RF_ble.c:3065:5
 1e131da:    71 fc 59 00       	r1 = r7 + 89			  ## RF_ble.c:3065:5
 1e131de:    62 70             	r2 = 6			  ## RF_ble.c:3065:5
 1e131e0:    97 f3 80 9e       	call 3095808 <memcpy : 106ee4 >			  ## RF_ble.c:3065:5
 1e131e4:    60 9d             	r0 = r6 + 22			  ## RF_ble.c:3066:21
 1e131e6:    41 fc 23 00       	r1 = r4 + 35			  ## RF_ble.c:3207:60
 1e131ea:    82 08             	r2 = r8			  ## RF_ble.c:3066:5
 1e131ec:    97 f3 7a 9e       	call 3095796 <memcpy : 106ee4 >			  ## RF_ble.c:3066:5
 1e131f0:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3213:19
 1e131f2:    02 70             	r2 = 0			  ## RF_ble.c:3213:5
 1e131f4:    08 70             	r8 = 0			  ## RF_ble.c:3213:5
 1e131f6:    50 08             	r0 = r5			  ## RF_ble.c:3213:5
 1e131f8:    e3 15             	call -1082 <ble_hw_tx : 1e12dc0 >			  ## RF_ble.c:3213:5
 1e131fa:    d1 4f             	r1 = [r7 + 116]			  ## RF_ble.c:3214:19
 1e131fc:    12 70             	r2 = 1			  ## RF_ble.c:3214:5
 1e131fe:    50 08             	r0 = r5			  ## RF_ble.c:3214:5
 1e13200:    df 15             	call -1090 <ble_hw_tx : 1e12dc0 >			  ## RF_ble.c:3214:5
 1e13202:    18 f9 4e a2       	b[r10 + 590] = r8			  ## RF_ble.c:3216:21
 1e13206:    00 f7 08 a0       	r0 = h[r10 + 8] (u)			  ## RF_ble.c:1084:21
 1e1320a:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1084:21
 1e1320c:    10 f7 08 a0       	h[r10 + 8] = r0			  ## RF_ble.c:1084:21
 1e13210:    50 08             	r0 = r5			  ## RF_ble.c:3231:5
 1e13212:    2d 16             	call -934 <ble_power_get : 1e12e6e >			  ## RF_ble.c:3231:5
 1e13214:    50 08             	r0 = r5			  ## RF_ble.c:613:5
 1e13216:    bf f3 64 f5       	call -5432 <__set_ble_hw_irq_init : 1e11ce2 >			  ## RF_ble.c:613:5
 1e1321a:    11 70             	r1 = 1			  ## RF_ble.c:614:5
 1e1321c:    50 08             	r0 = r5			  ## RF_ble.c:614:5
 1e1321e:    bf f3 93 f5       	call -5338 <__set_anchor_cnt : 1e11d48 >			  ## RF_ble.c:614:5
 1e13222:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:3235:9
 1e13226:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:3235:17
 1e1322a:    20 e0 01 30       	if (r0 < 2) goto 2 <le_hw_advertising+0x1EA : 1e13230 >			  ## RF_ble.c:3235:17
 1e1322e:    5f 16             	call -834 <ble_slot_schedule : 1e12eee >			  ## RF_ble.c:3236:9
 1e13230:    00 f7 06 a0       	r0 = h[r10 + 6] (u)			  ## RF_ble.c:3239:24
 1e13234:    10 b1             	r0 |= 4			  ## RF_ble.c:3239:24
 1e13236:    10 f7 06 a0       	h[r10 + 6] = r0			  ## RF_ble.c:3239:24
 1e1323a:    80 08             	r0 = r8			  ## RF_ble.c:3243:1
 1e1323c:    02 0a             	sp += 4			  ## RF_ble.c:3243:1
 1e1323e:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:3243:1


__get_ble_anchor_con:
 1e13240:    c2 ff e4 2f 00 00 	r2 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:255:0
 1e13246:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:134:19
 1e13248:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e1324a:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:134:17
 1e1324c:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e1324e:    e0 fe 20 00       	r0 = r0 / r2 (s)			  ## RF_ble.c:134:17
 1e13252:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:256:50
 1e13254:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:256:50
 1e13258:    89 c2             	r1 = r1 << 10			  ## RF_ble.c:256:30
 1e1325a:    50 b2             	r0 |= r1			  ## RF_ble.c:256:56
 1e1325c:    90 b0             	r0 |= 2			  ## RF_ble.c:256:56
 1e1325e:    41 fb 64 24       	r1 = r2 + 1867776			  ## RF_ble.c:256:56
 1e13262:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:256:21
 1e13264:    08 00             	csync			  ## RF_ble.c:257:5
 1e13266:    20 42             	r0 = [r1 + 8]			  ## RF_ble.c:258:12
 1e13268:    20 00             	rts			  ## RF_ble.c:258:5


__get_clkn:
 1e1326a:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:49:0
 1e1326c:    03 08             	r3 = r0			  ## le_low_power.c:49:0
 1e1326e:    01 70             	r1 = 0			  ## le_low_power.c:50:13
 1e13270:    e7 17             	call -50 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:50:13
 1e13272:    24 04             	r4 = r0.l (u)			  ## le_low_power.c:50:41
 1e13274:    e1 70             	r1 = 14			  ## le_low_power.c:50:54
 1e13276:    30 08             	r0 = r3			  ## le_low_power.c:50:54
 1e13278:    e3 17             	call -58 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:50:54
 1e1327a:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:50:91
 1e1327c:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:50:91
 1e13280:    50 b8             	r0 |= r4			  ## le_low_power.c:50:51
 1e13282:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:50:5


ble_event_irq_handler:
 1e13284:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:2755:0
 1e13286:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## RF_ble.c:2756:9
 1e1328a:    c8 ff e4 2f 00 00 	r8 = 12260 <bb_hdl : 2fe4 >
 1e13290:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2762:15
 1e13294:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:2762:31
 1e13296:    cc ff 0c 80 1c 00 	r12 = 1867788 <uECC_vli_cmp_unsafe+0xC1010 : 1c800c >
 1e1329c:    00 f6 1c c0       	r0 = [r12 + 28]			  ## RF_ble.c:2763:13
 1e132a0:    01 f6 24 c0       	r1 = [r12 + 36]			  ## RF_ble.c:2763:28
 1e132a4:    50 b3             	r0 &= r1			  ## RF_ble.c:2763:26
 1e132a6:    00 f3 27 02       	if ((r0 & 1) == 0) goto 1102 <ble_event_irq_handler+0x474 : 1e136f8 >			  ## RF_ble.c:2763:26
 1e132aa:    08 f4 01 c9       	[r12 + 32] |= 1			  ## RF_ble.c:2764:26
 1e132ae:    10 48             	r0 = [r4 + 4]			  ## RF_ble5.c:185:18
 1e132b0:    97 30             	if (r0 != 0) goto 302 <ble_event_irq_handler+0x15C : 1e133e0 >			  ## RF_ble5.c:185:18
 1e132b2:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:2619:34
 1e132b4:    95 2c             	if (r6 == 0) goto 298 <ble_event_irq_handler+0x15C : 1e133e0 >
 1e132b6:    65 fc d8 01       	r5 = r6 + 472
 1e132ba:    e0 6b             	r0 = b[r5 + 30] (u)			  ## RF_ble.c:2631:13
 1e132bc:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x3E : 1e132c2 >			  ## RF_ble.c:2631:13
 1e132be:    f0 8f             	r0 += -1			  ## RF_ble.c:2632:24
 1e132c0:    e8 6b             	b[r5 + 30] = r0			  ## RF_ble.c:2632:24
 1e132c2:    67 fc 44 01       	r7 = r6 + 324
 1e132c6:    e0 6e             	r0 = b[r7 + 14] (u)			  ## RF_ble.c:2637:14
 1e132c8:    69 fc 58 00       	r9 = r6 + 88			  ## RF_ble.c:2637:14
 1e132cc:    70 e0 63 00       	if (r0 == 7) goto 198 <ble_event_irq_handler+0x112 : 1e13396 >			  ## RF_ble.c:2637:14
 1e132d0:    60 e0 59 00       	if (r0 == 6) goto 178 <ble_event_irq_handler+0x102 : 1e13386 >
 1e132d4:    20 e0 84 10       	if (r0 != 2) goto 264 <ble_event_irq_handler+0x15C : 1e133e0 >
 1e132d8:    0a f7 0e 60       	r10 = h[r6 + 14] (u)			  ## RF_ble.c:2644:21
 1e132dc:    6b fc 4c 02       	r11 = r6 + 588
 1e132e0:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3041:13
 1e132e4:    00 f3 1a 00       	if ((r0 & 1) == 0) goto 52 <ble_event_irq_handler+0x98 : 1e1331c >			  ## RF_ble.c:3041:13
 1e132e8:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:3043:31
 1e132ea:    62 52             	r2 = h[r1 + 12] (u)			  ## RF_ble.c:3023:13
 1e132ec:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3023:5
 1e132f0:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0x92 : 1e13316 >			  ## RF_ble.c:3023:5
 1e132f4:    13 70             	r3 = 1
 1e132f6:    f8 fd 20 23       	r2 = r3 << r2
 1e132fa:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0x92 : 1e13316 >
 1e13300:    02 f9 0e 62       	r2 = b[r6 + 526] (u)			  ## RF_ble.c:3043:60
 1e13304:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3027:9
 1e13306:    e8 62             	b[r1 + 14] = r0			  ## RF_ble.c:3027:9
 1e13308:    60 93             	r0 = r1 + 22			  ## RF_ble.c:3029:25
 1e1330a:    51 fc 37 00       	r1 = r5 + 55			  ## RF_ble.c:3043:42
 1e1330e:    97 f3 e9 9d       	call 3095506 <memcpy : 106ee4 >			  ## RF_ble.c:3029:9
 1e13312:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3029:9
 1e13316:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:3045:24
 1e13318:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3045:24
 1e1331c:    2a fd 01 a9       	r10 = r10 & 1			  ## RF_ble.c:2644:27
 1e13320:    01 f3 1a 00       	if ((r0 & 2) == 0) goto 52 <ble_event_irq_handler+0xD4 : 1e13358 >			  ## RF_ble.c:2644:27
 1e13324:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:3050:31
 1e13326:    62 52             	r2 = h[r1 + 12] (u)			  ## RF_ble.c:3023:13
 1e13328:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3023:5
 1e1332c:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0xCE : 1e13352 >			  ## RF_ble.c:3023:5
 1e13330:    13 70             	r3 = 1
 1e13332:    f8 fd 20 23       	r2 = r3 << r2
 1e13336:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0xCE : 1e13352 >
 1e1333c:    02 f9 2e 62       	r2 = b[r6 + 558] (u)			  ## RF_ble.c:3050:65
 1e13340:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3027:9
 1e13342:    e8 62             	b[r1 + 14] = r0			  ## RF_ble.c:3027:9
 1e13344:    60 93             	r0 = r1 + 22			  ## RF_ble.c:3029:25
 1e13346:    51 fc 57 00       	r1 = r5 + 87			  ## RF_ble.c:3050:42
 1e1334a:    97 f3 cb 9d       	call 3095446 <memcpy : 106ee4 >			  ## RF_ble.c:3029:9
 1e1334e:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3029:9
 1e13352:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:3052:24
 1e13354:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3052:24
 1e13358:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:2652:27
 1e1335a:    40 08             	r0 = r4			  ## RF_ble.c:2652:9
 1e1335c:    a2 08             	r2 = r10			  ## RF_ble.c:2652:9
 1e1335e:    30 15             	call -1440 <ble_hw_tx : 1e12dc0 >			  ## RF_ble.c:2652:9
 1e13360:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:2653:27
 1e13362:    12 fd 01 a9       	r2 = r10 ^ 1			  ## RF_ble.c:2653:38
 1e13366:    40 08             	r0 = r4			  ## RF_ble.c:2653:9
 1e13368:    2b 15             	call -1450 <ble_hw_tx : 1e12dc0 >			  ## RF_ble.c:2653:9
 1e1336a:    10 5e             	r0 = h[r7 + 2] (u)
 1e1336c:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e13370:    01 fd 1a 1a       	r1 = r1 | 6656			  ## RF_ble.c:823:23
 1e13374:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:823:23
 1e13376:    2d f3 33 00       	if ((r0 & 8192) != 0) goto 102 <ble_event_irq_handler+0x15C : 1e133e0 >			  ## RF_ble.c:823:23
 1e1337a:    a0 71             	r0 = 26			  ## RF_ble.c:827:28
 1e1337c:    10 f7 08 90       	h[r9 + 8] = r0			  ## RF_ble.c:827:28
 1e13380:    10 f7 06 90       	h[r9 + 6] = r0			  ## RF_ble.c:828:28
 1e13384:    2d 18             	goto 90 <ble_event_irq_handler+0x15C : 1e133e0 >			  ## RF_ble.c:828:28
 1e13386:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2677:17
 1e13388:    06 20             	if (r0 == 0) goto 12 <ble_event_irq_handler+0x112 : 1e13396 >			  ## RF_ble.c:2677:17
 1e1338a:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2677:41
 1e1338c:    04 26             	if (r3 == 0) goto 8 <ble_event_irq_handler+0x112 : 1e13396 >			  ## RF_ble.c:2677:41
 1e1338e:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2678:50
 1e13390:    a2 5d             	r2 = h[r6 + 52] (u)			  ## RF_ble.c:2678:76
 1e13392:    11 70             	r1 = 1			  ## RF_ble.c:2678:13
 1e13394:    83 00             	call r3			  ## RF_ble.c:2678:13
 1e13396:    90 6f             	r0 = b[r7 + 25] (u)			  ## RF_ble.c:2683:21
 1e13398:    1a 20             	if (r0 == 0) goto 52 <ble_event_irq_handler+0x14A : 1e133ce >			  ## RF_ble.c:2683:21
 1e1339a:    00 f7 00 90       	r0 = h[r9 + 0] (u)			  ## RF_ble.c:2684:43
 1e1339e:    d1 5e             	r1 = h[r7 + 26] (u)			  ## RF_ble.c:2685:31
 1e133a0:    d0 b1             	r0 = ~r0			  ## RF_ble.c:2685:39
 1e133a2:    10 09             	r0 += r1			  ## RF_ble.c:2686:32
 1e133a4:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2686:32
 1e133a6:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0xCBE : 7ffe >			  ## RF_ble.c:2686:32
 1e133aa:    10 f2 10 30       	if (r0 < r1) goto 32 <ble_event_irq_handler+0x14A : 1e133ce >			  ## RF_ble.c:2686:32
 1e133ae:    00 70             	r0 = 0
 1e133b0:    98 6f             	b[r7 + 25] = r0			  ## RF_ble.c:2688:39
 1e133b2:    d8 5e             	h[r7 + 26] = r0			  ## RF_ble.c:2689:33
 1e133b4:    10 5e             	r0 = h[r7 + 2] (u)
 1e133b6:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e133ba:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:823:23
 1e133be:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:823:23
 1e133c0:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <ble_event_irq_handler+0x14A : 1e133ce >			  ## RF_ble.c:823:23
 1e133c4:    c0 71             	r0 = 28			  ## RF_ble.c:827:28
 1e133c6:    10 f7 08 90       	h[r9 + 8] = r0			  ## RF_ble.c:827:28
 1e133ca:    10 f7 06 90       	h[r9 + 6] = r0			  ## RF_ble.c:828:28
 1e133ce:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2693:21
 1e133d0:    07 20             	if (r0 == 0) goto 14 <ble_event_irq_handler+0x15C : 1e133e0 >			  ## RF_ble.c:2693:21
 1e133d2:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2693:45
 1e133d4:    05 26             	if (r3 == 0) goto 10 <ble_event_irq_handler+0x15C : 1e133e0 >			  ## RF_ble.c:2693:45
 1e133d6:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2694:54
 1e133d8:    02 f7 00 90       	r2 = h[r9 + 0] (u)			  ## RF_ble.c:2694:78
 1e133dc:    01 70             	r1 = 0			  ## RF_ble.c:2694:17
 1e133de:    83 00             	call r3			  ## RF_ble.c:2694:17
 1e133e0:    86 15             	call -1268 <ble_slot_schedule : 1e12eee >			  ## RF_ble.c:2779:13
 1e133e2:    01 48             	r1 = [r4 + 0]			  ## RF_ble.c:846:34
 1e133e4:    01 e0 84 01       	if (r1 == 0) goto 776 <ble_event_irq_handler+0x46C : 1e136f0 >
 1e133e8:    10 fc 44 01       	r0 = r1 + 324
 1e133ec:    e2 60             	r2 = b[r0 + 14] (u)			  ## RF_ble.c:852:20
 1e133ee:    72 b0             	r2 &= 4294967294			  ## RF_ble.c:856:32
 1e133f0:    62 e0 45 10       	if (r2 != 6) goto 138 <ble_event_irq_handler+0x1FA : 1e1347e >			  ## RF_ble.c:856:32
 1e133f4:    12 50             	r2 = h[r0 + 2] (u)			  ## RF_ble.c:858:23
 1e133f6:    85 fd 40 32       	r3 = uextra(r2, p:8, l:5)			  ## RF_ble.c:858:23
 1e133fa:    21 f3 0a 20       	if ((r2 & 2) != 0) goto 20 <ble_event_irq_handler+0x18E : 1e13412 >			  ## RF_ble.c:858:23
 1e133fe:    35 fd fc 29       	r5 = r2 & 4294967043			  ## RF_ble.c:866:34
 1e13402:    42 80             	r2 += 4			  ## RF_ble.c:866:34
 1e13404:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:866:34
 1e13408:    52 ba             	r2 |= r5			  ## RF_ble.c:866:34
 1e1340a:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:866:34
 1e1340c:    e3 e1 04 10       	if (r3 != 30) goto 8 <ble_event_irq_handler+0x194 : 1e13418 >			  ## RF_ble.c:866:34
 1e13410:    36 18             	goto 108 <ble_event_irq_handler+0x1FA : 1e1347e >			  ## RF_ble.c:866:34
 1e13412:    32 fd fc 29       	r2 = r2 & 4294967043			  ## RF_ble.c:863:35
 1e13416:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:863:35
 1e13418:    25 61             	r5 = b[r0 + 18] (u)			  ## RF_ble.c:874:17
 1e1341a:    c1 85             	r1 += 92			  ## RF_ble.c:874:17
 1e1341c:    02 2a             	if (r5 == 0) goto 4 <ble_event_irq_handler+0x19E : 1e13422 >
 1e1341e:    35 61             	r5 = b[r0 + 19] (u)			  ## RF_ble.c:874:35
 1e13420:    21 2a             	if (r5 == 0) goto 66 <ble_event_irq_handler+0x1E0 : 1e13464 >			  ## RF_ble.c:874:35
 1e13422:    35 41             	r5 = [r0 + 76]			  ## list.h:124:18
 1e13424:    06 fc 4c 00       	r6 = r0 + 76			  ## RF_ble.c:884:31
 1e13428:    65 f2 1f 10       	if (r5 != r6) goto 62 <ble_event_irq_handler+0x1E6 : 1e1346a >
 1e1342c:    61 ff f0 29 1c 00 	if ((r2 & 240) != 0) goto 56 <ble_event_irq_handler+0x1E6 : 1e1346a >
 1e13432:    55 41             	r5 = [r0 + 84]			  ## list.h:124:18
 1e13434:    06 fc 54 00       	r6 = r0 + 84			  ## RF_ble.c:911:31
 1e13438:    65 f2 72 01       	if (r5 == r6) goto 740 <ble_event_irq_handler+0x49C : 1e13720 >			  ## RF_ble.c:911:13
 1e1343c:    33 fd 1f 2a       	r3 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e13440:    03 fd 1c 3a       	r3 = r3 | 7168			  ## RF_ble.c:823:23
 1e13444:    1b 50             	h[r0 + 2] = r3			  ## RF_ble.c:823:23
 1e13446:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x1CC : 1e13450 >			  ## RF_ble.c:823:23
 1e1344a:    c5 71             	r5 = 28			  ## RF_ble.c:827:28
 1e1344c:    2d 52             	h[r1 + 4] = r5			  ## RF_ble.c:827:28
 1e1344e:    1d 52             	h[r1 + 2] = r5			  ## RF_ble.c:828:28
 1e13450:    c1 ff 03 fc 00 00 	r1 = 64515 <boot_arg_list+0x3 : fc03 >			  ## RF_ble.c:913:34
 1e13456:    51 b7             	r1 &= r3			  ## RF_ble.c:913:34
 1e13458:    42 80             	r2 += 4			  ## RF_ble.c:913:34
 1e1345a:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:913:34
 1e1345e:    51 b4             	r1 |= r2			  ## RF_ble.c:913:34
 1e13460:    19 50             	h[r0 + 2] = r1			  ## RF_ble.c:913:34
 1e13462:    0d 18             	goto 26 <ble_event_irq_handler+0x1FA : 1e1347e >			  ## RF_ble.c:913:34
 1e13464:    60 ff fc 29 0a 00 	if ((r2 & 252) == 0) goto 20 <ble_event_irq_handler+0x1FA : 1e1347e >
 1e1346a:    33 fd 1f 2a       	r3 = r2 & 4294959359
 1e1346e:    03 fd 1e 3a       	r3 = r3 | 7680
 1e13472:    1b 50             	h[r0 + 2] = r3
 1e13474:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x1FA : 1e1347e >
 1e13478:    e0 71             	r0 = 30
 1e1347a:    28 52             	h[r1 + 4] = r0
 1e1347c:    18 52             	h[r1 + 2] = r0
 1e1347e:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:376:34
 1e13480:    00 e0 36 01       	if (r0 == 0) goto 620 <ble_event_irq_handler+0x46C : 1e136f0 >
 1e13484:    01 fc 44 01       	r1 = r0 + 324
 1e13488:    e2 62             	r2 = b[r1 + 14] (u)			  ## RF_ble.c:381:20
 1e1348a:    72 b0             	r2 &= 4294967294			  ## RF_ble.c:383:32
 1e1348c:    62 e0 12 10       	if (r2 != 6) goto 36 <ble_event_irq_handler+0x230 : 1e134b4 >			  ## RF_ble.c:383:32
 1e13490:    22 63             	r2 = b[r1 + 18] (u)			  ## RF_ble.c:384:17
 1e13492:    10 24             	if (r2 == 0) goto 32 <ble_event_irq_handler+0x230 : 1e134b4 >			  ## RF_ble.c:384:17
 1e13494:    f2 42             	r2 = [r1 + 60]			  ## RF_ble.c:388:14
 1e13496:    02 34             	if (r2 != 0) goto 4 <ble_event_irq_handler+0x218 : 1e1349c >			  ## RF_ble.c:388:14
 1e13498:    02 43             	r2 = [r1 + 64]			  ## RF_ble.c:388:37
 1e1349a:    c0 24             	if (r2 == 0) goto 384 <ble_event_irq_handler+0x398 : 1e1361c >			  ## RF_ble.c:388:37
 1e1349c:    b2 52             	r2 = h[r1 + 22] (u)			  ## RF_ble.c:365:17
 1e1349e:    63 93             	r3 = r1 + 22			  ## RF_ble.c:365:17
 1e134a0:    22 e0 02 80       	if (r2 > 2) goto 4 <ble_event_irq_handler+0x224 : 1e134a8 >			  ## RF_ble.c:365:17
 1e134a4:    32 70             	r2 = 3
 1e134a6:    ba 52             	h[r1 + 22] = r2
 1e134a8:    20 fc ff ff       	r0 = r2 + -1			  ## RF_ble.c:401:25
 1e134ac:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:401:25
 1e134ae:    40 08             	r0 = r4			  ## RF_ble.c:403:13
 1e134b0:    bf f3 71 fa       	call -2846 <__set_latency_disable : 1e12996 >			  ## RF_ble.c:403:13
 1e134b4:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:4564:31
 1e134b6:    07 e0 1b 01       	if (r7 == 0) goto 566 <ble_event_irq_handler+0x46C : 1e136f0 >
 1e134ba:    75 fc 44 01       	r5 = r7 + 324
 1e134be:    10 6a             	r0 = b[r5 + 1] (u)			  ## RF_ble.c:4572:14
 1e134c0:    9c 20             	if (r0 == 0) goto 312 <ble_event_irq_handler+0x376 : 1e135fa >			  ## RF_ble.c:4572:14
 1e134c2:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:4580:21
 1e134c4:    70 e0 10 11       	if (r0 != 7) goto 544 <ble_event_irq_handler+0x464 : 1e136e8 >			  ## RF_ble.c:4580:21
 1e134c8:    20 6a             	r0 = b[r5 + 2] (u)			  ## RF_ble.c:4584:13
 1e134ca:    c9 ff 78 0f 00 00 	r9 = 3960 <ble_window_autozoom.widen : f78 >			  ## RF_ble.c:4584:13
 1e134d0:    20 f3 99 00       	if ((r0 & 1) != 0) goto 306 <ble_event_irq_handler+0x382 : 1e13606 >			  ## RF_ble.c:4584:13
 1e134d4:    0a f6 00 90       	r10 = [r9 + 0]			  ## RF_ble.c:4594:31
 1e134d8:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:4594:23
 1e134da:    a0 09             	r0 += r10			  ## RF_ble.c:4594:29
 1e134dc:    40 86             	r0 += 100			  ## RF_ble.c:4594:37
 1e134de:    08 ff cf 07 02 01 	if (r0 > 1999) goto 516 <ble_event_irq_handler+0x464 : 1e136e8 >			  ## RF_ble.c:4594:37
 1e134e4:    0b f6 08 50       	r11 = [r5 + 8]			  ## RF_ble.c:4597:71
 1e134e8:    40 08             	r0 = r4			  ## RF_ble.c:4510:16
 1e134ea:    bf 16             	call -642 <__get_clkn : 1e1326a >			  ## RF_ble.c:4510:16
 1e134ec:    03 f6 00 c0       	r3 = [r12 + 0]			  ## RF_ble.c:4512:22
 1e134f0:    0e f6 08 c0       	r14 = [r12 + 8]			  ## RF_ble.c:4512:49
 1e134f4:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e134f8:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e134fa:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e134fc:    c6 71             	r6 = 28			  ## RF_ble.c:134:17
 1e134fe:    e0 fe 60 11       	r1 = r1 / r6 (s)			  ## RF_ble.c:134:17
 1e13502:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:256:50
 1e13504:    06 fb f0 03       	r6 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:256:50
 1e13508:    51 bd             	r1 &= r6			  ## RF_ble.c:256:50
 1e1350a:    06 fb 02 1c       	r6 = 7170 <profile_l2cap_hdl+0x36 : 1c02 >			  ## RF_ble.c:256:56
 1e1350e:    51 bc             	r1 |= r6			  ## RF_ble.c:256:56
 1e13510:    11 f6 10 c0       	[r12 + 16] = r1			  ## RF_ble.c:256:21
 1e13514:    08 00             	csync			  ## RF_ble.c:257:5
 1e13516:    01 f6 18 c0       	r1 = [r12 + 24]			  ## RF_ble.c:258:12
 1e1351a:    72 04             	r2 = r1.l (s)			  ## RF_ble.c:4516:9
 1e1351c:    06 fd f8 2a       	r6 = r2 | 63488			  ## RF_ble.c:4517:21
 1e13520:    0b f3 01 20       	if ((r2 & 2048) == 0) goto 2 <ble_event_irq_handler+0x2A2 : 1e13526 >
 1e13524:    61 08             	r1 = r6			  ## RF_ble.c:4516:9
 1e13526:    7d 04             	r13 = r1.l (s)			  ## RF_ble.c:4520:21
 1e13528:    01 fb ff 03       	r1 = 1023 <BTCTLER_LE_RAM_TOTAL+0x27 : 3ff >			  ## RF_ble.c:4512:37
 1e1352c:    51 b7             	r1 &= r3			  ## RF_ble.c:4512:37
 1e1352e:    02 fb 71 02       	r2 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## RF_ble.c:4512:19
 1e13532:    61 b4             	r1 = r2 - r1			  ## RF_ble.c:4512:19
 1e13534:    e4 fd 00 2e       	r2 = r14.b0 (u)			  ## RF_ble.c:4512:64
 1e13538:    a1 b2             	r1 = r1 - r2			  ## RF_ble.c:4512:46
 1e1353a:    61 04             	r1 = r1.l (u)			  ## RF_ble.c:4520:11
 1e1353c:    80 fb 10 6d       	r6 = r13 + r1			  ## RF_ble.c:4520:19
 1e13540:    1f 70             	r15 = 1			  ## RF_ble.c:4520:19
 1e13542:    12 70             	r2 = 1			  ## RF_ble.c:4520:34
 1e13544:    0c ff 70 62 01 00 	ifs (r6 > 624) goto 2 <ble_event_irq_handler+0x2C8 : 1e1354c >			  ## RF_ble.c:4520:34
 1e1354a:    02 70             	r2 = 0			  ## RF_ble.c:4520:34
 1e1354c:    61 fc 9c ff       	r1 = r6 + -100			  ## RF_ble.c:4520:69
 1e13550:    13 70             	r3 = 1			  ## RF_ble.c:4520:85
 1e13552:    0b ff 71 12 01 00 	ifs (r1 < 625) goto 2 <ble_event_irq_handler+0x2D6 : 1e1355a >			  ## RF_ble.c:4520:85
 1e13558:    03 70             	r3 = 0			  ## RF_ble.c:4520:85
 1e1355a:    0e fb 9c ff       	r14 = -100 <bank_code_load_addr+0x1E5578 : 1ffff9c >
 1e1355e:    32 f1 10 00       	if ((r2 & r3) != 0) goto 32 <ble_event_irq_handler+0x2FE : 1e13582 >
 1e13562:    46 e6 0e 30       	if (r6 < 100) goto 28 <ble_event_irq_handler+0x2FE : 1e13582 >
 1e13566:    13 70             	r3 = 1
 1e13568:    0b ff 8f 1d 01 00 	ifs (r1 < -625) goto 2 <ble_event_irq_handler+0x2EC : 1e13570 >
 1e1356e:    03 70             	r3 = 0
 1e13570:    f1 d7             	r1 = r6 >> 31			  ## RF_ble.c:4526:41
 1e13572:    0e fb 0d 02       	r14 = 525 <BTCTLER_CONTROLLER_BSS_SIZE+0x4D : 20d >			  ## RF_ble.c:4529:5
 1e13576:    31 f1 02 00       	if ((r1 & r3) != 0) goto 4 <ble_event_irq_handler+0x2FA : 1e1357e >			  ## RF_ble.c:4529:5
 1e1357a:    0e fb 9c ff       	r14 = -100 <bank_code_load_addr+0x1E5578 : 1ffff9c >			  ## RF_ble.c:4529:5
 1e1357e:    e2 fd 30 f1       	r15 = r1 & r3			  ## RF_ble.c:4526:46
 1e13582:    0f f2 ab 20       	if (r15 >= r0) goto 342 <ble_event_irq_handler+0x458 : 1e136dc >
 1e13586:    1f f6 14 c0       	[r12 + 20] = r15			  ## RF_ble.c:263:21
 1e1358a:    08 00             	csync			  ## RF_ble.c:264:5
 1e1358c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e13590:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e13592:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e13594:    c1 71             	r1 = 28			  ## RF_ble.c:134:17
 1e13596:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e1359a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e1359c:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e135a0:    02 fb 05 40       	r2 = 16389 <low_power_system_down+0x199 : 4005 >			  ## RF_ble.c:265:67
 1e135a4:    50 b4             	r0 |= r2			  ## RF_ble.c:265:67
 1e135a6:    10 f6 10 c0       	[r12 + 16] = r0			  ## RF_ble.c:265:21
 1e135aa:    80 fb e0 0d       	r0 = r13 + r14			  ## RF_ble.c:265:21
 1e135ae:    30 04             	r0 = r0.l (s)			  ## RF_ble.c:4540:44
 1e135b0:    90 b7             	r0 |= 32768			  ## RF_ble.c:4540:42
 1e135b2:    10 f6 14 c0       	[r12 + 20] = r0			  ## RF_ble.c:263:21
 1e135b6:    08 00             	csync			  ## RF_ble.c:264:5
 1e135b8:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e135bc:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e135be:    f0 fd 08 2a       	r2 = r10 << 1			  ## RF_ble.c:4597:106
 1e135c2:    b2 09             	r2 += r11			  ## RF_ble.c:4597:106
 1e135c4:    22 fc c8 00       	r2 = r2 + 200			  ## RF_ble.c:4597:78
 1e135c8:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:134:17
 1e135ca:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:134:17
 1e135ce:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e135d0:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x18 : 3f0 >			  ## RF_ble.c:265:50
 1e135d4:    50 b3             	r0 &= r1			  ## RF_ble.c:265:50
 1e135d6:    01 fb 05 1c       	r1 = 7173 <btstack_stack+0x1 : 1c05 >			  ## RF_ble.c:265:67
 1e135da:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e135dc:    10 f6 10 c0       	[r12 + 16] = r0			  ## RF_ble.c:265:21
 1e135e0:    1a 5f             	h[r7 + 34] = r2			  ## RF_ble.c:4542:26
 1e135e2:    10 d4             	r0 = r2 >> 16			  ## RF_ble.c:4544:35
 1e135e4:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4544:26
 1e135e6:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:4599:27
 1e135ea:    40 86             	r0 += 100			  ## RF_ble.c:4599:27
 1e135ec:    10 f6 00 90       	[r9 + 0] = r0			  ## RF_ble.c:4599:27
 1e135f0:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4544:17
 1e135f4:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4542:17
 1e135f8:    75 18             	goto 234 <ble_event_irq_handler+0x460 : 1e136e4 >			  ## RF_ble.c:4542:17
 1e135fa:    00 f7 58 70       	r0 = h[r7 + 88] (u)			  ## RF_ble.c:4573:35
 1e135fe:    61 21             	if (r0 == 0) goto -318 <ble_event_irq_handler+0x23E : 1e134c2 >			  ## RF_ble.c:4573:35
 1e13600:    10 70             	r0 = 1			  ## RF_ble.c:4575:23
 1e13602:    18 6a             	b[r5 + 1] = r0			  ## RF_ble.c:4575:23
 1e13604:    75 18             	goto 234 <ble_event_irq_handler+0x46C : 1e136f0 >			  ## RF_ble.c:4575:23
 1e13606:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:4586:17
 1e1360a:    40 e6 6d 30       	if (r0 < 100) goto 218 <ble_event_irq_handler+0x464 : 1e136e8 >			  ## RF_ble.c:4586:17
 1e1360e:    c0 f4 00 99       	[r9 + 0] = 0			  ## RF_ble.c:4587:23
 1e13612:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:4589:42
 1e13614:    18 5f             	h[r7 + 34] = r0			  ## RF_ble.c:4553:26
 1e13616:    00 d4             	r0 = r0 >> 16			  ## RF_ble.c:4555:35
 1e13618:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4555:26
 1e1361a:    66 18             	goto 204 <ble_event_irq_handler+0x464 : 1e136e8 >			  ## RF_ble.c:4555:26
 1e1361c:    13 52             	r3 = h[r1 + 2] (u)			  ## RF_ble.c:391:25
 1e1361e:    b2 52             	r2 = h[r1 + 22] (u)			  ## RF_ble.c:391:25
 1e13620:    23 fd 02 39       	r3 = r3 & 2			  ## RF_ble.c:391:21
 1e13624:    e0 fd 20 53       	r5 = r3 | r2			  ## RF_ble.c:391:20
 1e13628:    63 93             	r3 = r1 + 22
 1e1362a:    96 2a             	if (r5 == 0) goto 300 <ble_event_irq_handler+0x4D4 : 1e13758 >
 1e1362c:    3d 35             	if (r2 != 0) goto -390 <ble_event_irq_handler+0x224 : 1e134a8 >
 1e1362e:    02 70             	r2 = 0
 1e13630:    3a 63             	b[r1 + 19] = r2			  ## RF_ble.c:322:27
 1e13632:    12 52             	r2 = h[r1 + 2] (u)
 1e13634:    33 fd 1f 2a       	r3 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e13638:    03 fd 1e 3a       	r3 = r3 | 7680			  ## RF_ble.c:823:23
 1e1363c:    1b 52             	h[r1 + 2] = r3			  ## RF_ble.c:823:23
 1e1363e:    2d f3 05 20       	if ((r2 & 8192) != 0) goto 10 <ble_event_irq_handler+0x3C8 : 1e1364c >			  ## RF_ble.c:823:23
 1e13642:    e1 71             	r1 = 30			  ## RF_ble.c:827:28
 1e13644:    11 f7 60 00       	h[r0 + 96] = r1			  ## RF_ble.c:827:28
 1e13648:    11 f7 5e 00       	h[r0 + 94] = r1			  ## RF_ble.c:828:28
 1e1364c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:134:19
 1e13650:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:134:35
 1e13652:    21 b8             	r1 = r4 - r0			  ## RF_ble.c:134:17
 1e13654:    c0 71             	r0 = 28			  ## RF_ble.c:134:17
 1e13656:    e0 fe 00 11       	r1 = r1 / r0 (s)			  ## RF_ble.c:134:17
 1e1365a:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:256:50
 1e1365c:    02 fb f0 07       	r2 = 2032 <DRIVER_CODE_TOTAL+0x5E : 7f0 >			  ## RF_ble.c:256:50
 1e13660:    51 b5             	r1 &= r2			  ## RF_ble.c:256:50
 1e13662:    23 95             	r3 = r2 + 18			  ## RF_ble.c:256:56
 1e13664:    51 b6             	r1 |= r3			  ## RF_ble.c:256:56
 1e13666:    11 f6 10 c0       	[r12 + 16] = r1			  ## RF_ble.c:256:21
 1e1366a:    08 00             	csync			  ## RF_ble.c:257:5
 1e1366c:    01 f6 18 c0       	r1 = [r12 + 24]			  ## RF_ble.c:258:12
 1e13670:    c3 ff ff f7 00 00 	r3 = 63487 <UPDATA_BREDR_BASE_BEG+0xC9F : f7ff >			  ## RF_ble.c:336:33
 1e13676:    51 b7             	r1 &= r3			  ## RF_ble.c:336:33
 1e13678:    91 b5             	r1 |= 2048			  ## RF_ble.c:336:33
 1e1367a:    11 f6 14 c0       	[r12 + 20] = r1			  ## RF_ble.c:263:21
 1e1367e:    08 00             	csync			  ## RF_ble.c:264:5
 1e13680:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e13684:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e13686:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e13688:    e0 fe 00 11       	r1 = r1 / r0 (s)			  ## RF_ble.c:134:17
 1e1368c:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:50
 1e1368e:    52 b3             	r2 &= r1			  ## RF_ble.c:265:50
 1e13690:    03 fb 05 08       	r3 = 2053 <report_mmu_tlb_size+0x5 : 805 >			  ## RF_ble.c:265:67
 1e13694:    52 b6             	r2 |= r3			  ## RF_ble.c:265:67
 1e13696:    12 f6 10 c0       	[r12 + 16] = r2			  ## RF_ble.c:265:21
 1e1369a:    21 fd 3f 10       	r1 = r1 & 3056			  ## RF_ble.c:256:50
 1e1369e:    02 fb 02 24       	r2 = 9218 <global_id : 2402 >			  ## RF_ble.c:256:56
 1e136a2:    51 b4             	r1 |= r2			  ## RF_ble.c:256:56
 1e136a4:    11 f6 10 c0       	[r12 + 16] = r1			  ## RF_ble.c:256:21
 1e136a8:    08 00             	csync			  ## RF_ble.c:257:5
 1e136aa:    01 f6 18 c0       	r1 = [r12 + 24]			  ## RF_ble.c:258:12
 1e136ae:    c2 ff bf ff 00 00 	r2 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## RF_ble.c:343:33
 1e136b4:    51 b5             	r1 &= r2			  ## RF_ble.c:343:33
 1e136b6:    11 b3             	r1 |= 64			  ## RF_ble.c:343:33
 1e136b8:    11 f6 14 c0       	[r12 + 20] = r1			  ## RF_ble.c:263:21
 1e136bc:    08 00             	csync			  ## RF_ble.c:264:5
 1e136be:    01 f6 00 80       	r1 = [r8 + 0]			  ## RF_ble.c:134:19
 1e136c2:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:134:35
 1e136c4:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:134:17
 1e136c6:    e0 fe 00 01       	r0 = r1 / r0 (s)			  ## RF_ble.c:134:17
 1e136ca:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e136cc:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:265:50
 1e136d0:    01 fb 05 24       	r1 = 9221 <g_bt_read_len+0x1 : 2405 >			  ## RF_ble.c:265:67
 1e136d4:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e136d6:    10 f6 10 c0       	[r12 + 16] = r0			  ## RF_ble.c:265:21
 1e136da:    ec 1e             	goto -552 <ble_event_irq_handler+0x230 : 1e134b4 >			  ## RF_ble.c:265:21
 1e136dc:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4601:74
 1e136e0:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4601:43
 1e136e4:    01 52             	r1 = h[r1 + 0] (u)			  ## RF_ble.c:4601:43
 1e136e6:    00 50             	r0 = h[r0 + 0] (u)			  ## RF_ble.c:4601:74
 1e136e8:    10 5a             	r0 = h[r5 + 2] (u)			  ## RF_ble.c:4613:19
 1e136ea:    30 fd 03 09       	r0 = r0 & 4294967292			  ## RF_ble.c:4614:26
 1e136ee:    18 5a             	h[r5 + 2] = r0			  ## RF_ble.c:4614:26
 1e136f0:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:688:13
 1e136f2:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x474 : 1e136f8 >			  ## le_low_power.c:688:13
 1e136f4:    bf f3 64 92       	call -56120 <low_power_request : 1e05bc0 >			  ## le_low_power.c:689:9
 1e136f8:    00 f6 44 c0       	r0 = [r12 + 68]			  ## RF_ble.c:2798:13
 1e136fc:    01 f6 40 c0       	r1 = [r12 + 64]			  ## RF_ble.c:2798:28
 1e13700:    50 b3             	r0 &= r1			  ## RF_ble.c:2798:26
 1e13702:    00 f3 02 00       	if ((r0 & 1) == 0) goto 4 <ble_event_irq_handler+0x486 : 1e1370a >			  ## RF_ble.c:2798:26
 1e13706:    10 f4 01 ca       	[r12 + 64] |= 256			  ## RF_ble.c:2799:26
 1e1370a:    00 f6 2c c0       	r0 = [r12 + 44]			  ## RF_ble.c:2807:9
 1e1370e:    10 04             	r0 = r0.b0 (s)			  ## RF_ble.c:2807:24
 1e13710:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <ble_event_irq_handler+0x494 : 1e13718 >			  ## RF_ble.c:2807:24
 1e13714:    0b f4 40 c9       	[r12 + 44] |= 64			  ## RF_ble.c:2808:25
 1e13718:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## RF_ble.c:2817:1
 1e1371c:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:2817:1
 1e1371e:    22 00             	rti			  ## RF_ble.c:2817:1
 1e13720:    35 fc ff ff       	r5 = r3 + -1			  ## RF_ble.c:918:9
 1e13724:    46 05             	r6 = r5.b0 (u)			  ## RF_ble.c:918:9
 1e13726:    b3 71             	r3 = 27			  ## RF_ble.c:918:9
 1e13728:    b6 e1 0b 80       	if (r6 > 27) goto 22 <ble_event_irq_handler+0x4BE : 1e13742 >			  ## RF_ble.c:918:9
 1e1372c:    33 71             	r3 = 19
 1e1372e:    96 e1 08 00       	if (r6 == 25) goto 16 <ble_event_irq_handler+0x4BE : 1e13742 >
 1e13732:    53 08             	r3 = r5
 1e13734:    36 e1 05 80       	if (r6 > 19) goto 10 <ble_event_irq_handler+0x4BE : 1e13742 >
 1e13738:    33 71             	r3 = 19			  ## RF_ble.c:930:13
 1e1373a:    60 ff fc 29 01 00 	if ((r2 & 252) == 0) goto 2 <ble_event_irq_handler+0x4BE : 1e13742 >			  ## RF_ble.c:930:13
 1e13740:    c3 71             	r3 = 28			  ## RF_ble.c:930:13
 1e13742:    25 fd 1f 39       	r5 = r3 & 31			  ## RF_ble.c:823:23
 1e13746:    36 fd 1f 2a       	r6 = r2 & 4294959359			  ## RF_ble.c:823:23
 1e1374a:    c5 fd 40 65       	r6 <= insert(r5, p:8, l:5)			  ## RF_ble.c:823:23
 1e1374e:    1e 50             	h[r0 + 2] = r6			  ## RF_ble.c:823:23
 1e13750:    2d f3 95 2e       	if ((r2 & 8192) != 0) goto -726 <ble_event_irq_handler+0x1FA : 1e1347e >			  ## RF_ble.c:823:23
 1e13754:    c0 04             	r0 = r3.b0 (u)			  ## RF_ble.c:827:30
 1e13756:    91 1e             	goto -734 <ble_event_irq_handler+0x1F6 : 1e1347a >			  ## RF_ble.c:827:30
 1e13758:    12 70             	r2 = 1
 1e1375a:    a5 1e             	goto -694 <ble_event_irq_handler+0x222 : 1e134a6 >


__ble_rx_buf_process_conn:
 1e1375c:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2072:0
 1e1375e:    04 08             	r4 = r0			  ## RF_ble.c:2072:0
 1e13760:    40 fc 66 00       	r0 = r4 + 102			  ## RF_ble.c:2078:47
 1e13764:    46 fc 67 00       	r6 = r4 + 103			  ## RF_ble.c:2078:26
 1e13768:    15 08             	r5 = r1			  ## RF_ble.c:2078:26
 1e1376a:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x12 : 1e1376e >
 1e1376c:    06 08             	r6 = r0			  ## RF_ble.c:2078:10
 1e1376e:    00 6c             	r0 = b[r6 + 0] (u)
 1e13770:    03 70             	r3 = 0
 1e13772:    00 f3 14 00       	if ((r0 & 1) == 0) goto 40 <__ble_rx_buf_process_conn+0x42 : 1e1379e >
 1e13776:    a8 c0             	r0 = r5 << 2			  ## RF_ble.c:2087:9
 1e13778:    07 b8             	r7 = r4 + r0			  ## RF_ble.c:2087:9
 1e1377a:    f0 7f             	r0 = 255			  ## RF_ble.c:2087:23
 1e1377c:    bf f3 fd f8       	call -3590 <hw_alloc_rx : 1e1297a >			  ## RF_ble.c:2087:23
 1e13780:    10 f6 78 71       	[r7 + 376] = r0			  ## RF_ble.c:2087:21
 1e13784:    13 70             	r3 = 1			  ## RF_ble.c:2087:21
 1e13786:    0b 20             	if (r0 == 0) goto 22 <__ble_rx_buf_process_conn+0x42 : 1e1379e >			  ## RF_ble.c:2087:21
 1e13788:    e1 99             	r1 = r4 + 30			  ## RF_ble.c:2086:67
 1e1378a:    04 82             	r4 += 32			  ## RF_ble.c:2086:42
 1e1378c:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x34 : 1e13790 >
 1e1378e:    14 08             	r4 = r1			  ## RF_ble.c:2086:18
 1e13790:    40 81             	r0 += 20			  ## RF_ble.c:2095:33
 1e13792:    bf f3 ba f9       	call -3212 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:2095:22
 1e13796:    08 58             	h[r4 + 0] = r0			  ## RF_ble.c:2095:20
 1e13798:    00 6c             	r0 = b[r6 + 0] (u)			  ## RF_ble.c:2101:9
 1e1379a:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2101:9
 1e1379c:    08 6c             	b[r6 + 0] = r0			  ## RF_ble.c:2101:9
 1e1379e:    30 08             	r0 = r3			  ## RF_ble.c:2107:1
 1e137a0:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2107:1


__hw_rx_buf_process:
 1e137a2:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:2368:0
 1e137a4:    0a 08             	r10 = r0			  ## RF_ble.c:2368:0
 1e137a6:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2369:31
 1e137a8:    04 fc 38 00       	r4 = r0 + 56			  ## RF_ble.c:2376:69
 1e137ac:    03 fc 3a 00       	r3 = r0 + 58			  ## RF_ble.c:2376:40
 1e137b0:    19 08             	r9 = r1			  ## RF_ble.c:2376:40
 1e137b2:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x14 : 1e137b6 >
 1e137b4:    43 08             	r3 = r4			  ## RF_ble.c:2376:14
 1e137b6:    01 56             	r1 = h[r3 + 0] (u)
 1e137b8:    04 fc 26 00       	r4 = r0 + 38			  ## RF_ble.c:2374:69
 1e137bc:    03 fc 28 00       	r3 = r0 + 40			  ## RF_ble.c:2374:40
 1e137c0:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x22 : 1e137c4 >			  ## RF_ble.c:2374:40
 1e137c2:    43 08             	r3 = r4			  ## RF_ble.c:2374:14
 1e137c4:    03 56             	r3 = h[r3 + 0] (u)
 1e137c6:    06 fc 2a 00       	r6 = r0 + 42			  ## RF_ble.c:2375:69
 1e137ca:    04 fc 2c 00       	r4 = r0 + 44			  ## RF_ble.c:2375:40
 1e137ce:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x30 : 1e137d2 >			  ## RF_ble.c:2375:40
 1e137d0:    64 08             	r4 = r6			  ## RF_ble.c:2375:14
 1e137d2:    02 58             	r2 = h[r4 + 0] (u)
 1e137d4:    14 d2             	r4 = r2 >> 8			  ## RF_ble.c:2388:5
 1e137d6:    9b fc f8 ff       	r11 = r9 + -8			  ## RF_ble.c:2388:5
 1e137da:    06 f7 10 b0       	r6 = h[r11 + 16] (u)			  ## RF_ble.c:2379:5
 1e137de:    14 f9 12 b0       	b[r11 + 18] = r4			  ## RF_ble.c:2388:5
 1e137e2:    14 c1             	r4 = r2 << 4			  ## RF_ble.c:2389:5
 1e137e4:    24 fd 30 49       	r4 = r4 & 48			  ## RF_ble.c:2389:5
 1e137e8:    92 c1             	r2 = r2 << 6			  ## RF_ble.c:2382:5
 1e137ea:    25 fd 02 2a       	r5 = r2 & 512			  ## RF_ble.c:2390:5
 1e137ee:    54 ba             	r4 |= r5			  ## RF_ble.c:2389:5
 1e137f0:    25 fd 01 2a       	r5 = r2 & 256			  ## RF_ble.c:2391:5
 1e137f4:    54 ba             	r4 |= r5			  ## RF_ble.c:2390:5
 1e137f6:    25 fd 0f 39       	r5 = r3 & 15			  ## RF_ble.c:2379:5
 1e137fa:    5f d0             	r7 = r3 >> 1			  ## RF_ble.c:2380:5
 1e137fc:    27 fd 40 79       	r7 = r7 & 64			  ## RF_ble.c:2380:5
 1e13800:    55 be             	r5 |= r7			  ## RF_ble.c:2379:5
 1e13802:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2381:5
 1e13804:    23 fd 80 39       	r3 = r3 & 128			  ## RF_ble.c:2381:5
 1e13808:    53 ba             	r3 |= r5			  ## RF_ble.c:2380:5
 1e1380a:    22 fd 04 2a       	r2 = r2 & 1024			  ## RF_ble.c:2382:5
 1e1380e:    52 b6             	r2 |= r3			  ## RF_ble.c:2381:5
 1e13810:    23 fd f8 6a       	r3 = r6 & 63488			  ## RF_ble.c:2389:5
 1e13814:    52 b6             	r2 |= r3			  ## RF_ble.c:2389:5
 1e13816:    52 b8             	r2 |= r4			  ## RF_ble.c:2391:5
 1e13818:    12 f7 10 b0       	h[r11 + 16] = r2			  ## RF_ble.c:2391:5
 1e1381c:    0b d2             	r3 = r1 >> 8			  ## RF_ble.c:2396:20
 1e1381e:    22 fd 01 39       	r2 = r3 & 1			  ## RF_ble.c:2396:20
 1e13822:    06 fc 2c 01       	r6 = r0 + 300			  ## RF_ble.c:2396:20
 1e13826:    8a 6d             	b[r6 + 24] = r2			  ## RF_ble.c:2396:18
 1e13828:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:2377:24
 1e1382c:    00 f3 03 30       	if ((r3 & 1) == 0) goto 6 <__hw_rx_buf_process+0x94 : 1e13836 >
 1e13830:    d3 5c             	r3 = h[r6 + 26] (u)			  ## RF_ble.c:2399:30
 1e13832:    93 b0             	r3 |= 2			  ## RF_ble.c:2399:30
 1e13834:    db 5c             	h[r6 + 26] = r3			  ## RF_ble.c:2399:30
 1e13836:    03 f7 58 00       	r3 = h[r0 + 88] (u)			  ## RF_ble.c:2402:31
 1e1383a:    13 f7 16 b0       	h[r11 + 22] = r3			  ## RF_ble.c:2402:21
 1e1383e:    a3 51             	r3 = h[r0 + 52] (u)			  ## RF_ble.c:2403:31
 1e13840:    13 f9 13 b0       	b[r11 + 19] = r3			  ## RF_ble.c:2403:21
 1e13844:    03 4c             	r3 = [r6 + 0]			  ## analog_ble.c:168:40
 1e13846:    1c d4             	r4 = r3 >> 16			  ## analog_ble.c:169:88
 1e13848:    1b d2             	r3 = r3 >> 8			  ## analog_ble.c:169:54
 1e1384a:    03 fd c0 39       	r3 = r3 | 192			  ## analog_ble.c:169:34
 1e1384e:    13 fd 3f 39       	r3 = r3 ^ 63			  ## analog_ble.c:169:34
 1e13852:    23 b7             	r3 = r3 - r4			  ## analog_ble.c:169:68
 1e13854:    13 f9 14 b0       	b[r11 + 20] = r3			  ## RF_ble.c:2404:21
 1e13858:    04 f7 10 b0       	r4 = h[r11 + 16] (u)			  ## RF_ble.c:2405:21
 1e1385c:    33 fd 08 4a       	r3 = r4 & 4294965247			  ## RF_ble.c:2405:21
 1e13860:    13 f7 10 b0       	h[r11 + 16] = r3			  ## RF_ble.c:2405:21
 1e13864:    08 fc d8 01       	r8 = r0 + 472			  ## RF_ble.c:2405:21
 1e13868:    12 e0 1e 10       	if (r2 != 1) goto 60 <__hw_rx_buf_process+0x106 : 1e138a8 >			  ## RF_ble.c:2405:21
 1e1386c:    00 fc 50 01       	r0 = r0 + 336
 1e13870:    21 60             	r1 = b[r0 + 2] (u)			  ## RF_ble.c:1848:17
 1e13872:    11 e0 34 00       	if (r1 == 1) goto 104 <__hw_rx_buf_process+0x13C : 1e138de >			  ## RF_ble.c:1848:5
 1e13876:    31 e0 39 00       	if (r1 == 3) goto 114 <__hw_rx_buf_process+0x14A : 1e138ec >
 1e1387a:    21 e0 55 10       	if (r1 != 2) goto 170 <__hw_rx_buf_process+0x186 : 1e13928 >
 1e1387e:    21 fd 0f 49       	r1 = r4 & 15			  ## RF_ble.c:1749:5
 1e13882:    61 e0 51 80       	if (r1 > 6) goto 162 <__hw_rx_buf_process+0x186 : 1e13928 >			  ## RF_ble.c:1749:5
 1e13886:    12 70             	r2 = 1
 1e13888:    42 0c             	r2 <<= r1
 1e1388a:    61 ff 57 29 9f 00 	if ((r2 & 87) != 0) goto 318 <__hw_rx_buf_process+0x22C : 1e139ce >
 1e13890:    51 e0 4a 10       	if (r1 != 5) goto 148 <__hw_rx_buf_process+0x186 : 1e13928 >
 1e13894:    01 f9 10 80       	r1 = b[r8 + 16] (u)			  ## RF_ble.c:1759:18
 1e13898:    47 32             	if (r1 != 0) goto 142 <__hw_rx_buf_process+0x186 : 1e13928 >			  ## RF_ble.c:1759:18
 1e1389a:    51 4d             	r1 = [r6 + 84]			  ## RF_ble.c:1760:17
 1e1389c:    61 52             	r1 = h[r1 + 12] (u)			  ## RF_ble.c:1760:28
 1e1389e:    21 fd 0f 19       	r1 = r1 & 15			  ## RF_ble.c:1760:28
 1e138a2:    11 e0 2d 00       	if (r1 == 1) goto 90 <__hw_rx_buf_process+0x15E : 1e13900 >			  ## RF_ble.c:1760:28
 1e138a6:    40 18             	goto 128 <__hw_rx_buf_process+0x186 : 1e13928 >			  ## RF_ble.c:1760:28
 1e138a8:    22 f3 0c 10       	if ((r1 & 4) != 0) goto 24 <__hw_rx_buf_process+0x122 : 1e138c4 >
 1e138ac:    03 f3 8f 10       	if ((r1 & 8) == 0) goto 286 <__hw_rx_buf_process+0x22C : 1e139ce >
 1e138b0:    00 70             	r0 = 0			  ## RF_ble.c:2423:13
 1e138b2:    10 f9 12 b0       	b[r11 + 18] = r0			  ## RF_ble.c:2423:13
 1e138b6:    30 fd 03 40       	r0 = r4 & 4294965199			  ## RF_ble.c:2423:13
 1e138ba:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2423:13
 1e138be:    10 f7 10 b0       	h[r11 + 16] = r0			  ## RF_ble.c:2423:13
 1e138c2:    67 18             	goto 206 <__hw_rx_buf_process+0x1F0 : 1e13992 >			  ## RF_ble.c:2423:13
 1e138c4:    00 70             	r0 = 0			  ## RF_ble.c:2414:13
 1e138c6:    10 f9 12 b0       	b[r11 + 18] = r0			  ## RF_ble.c:2414:13
 1e138ca:    30 fd 03 40       	r0 = r4 & 4294965199			  ## RF_ble.c:2414:13
 1e138ce:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2414:13
 1e138d2:    10 f7 10 b0       	h[r11 + 16] = r0			  ## RF_ble.c:2414:13
 1e138d6:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:2415:34
 1e138d8:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:2415:34
 1e138da:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:2415:34
 1e138dc:    5a 18             	goto 180 <__hw_rx_buf_process+0x1F0 : 1e13992 >			  ## RF_ble.c:2415:34
 1e138de:    20 fd 0f 49       	r0 = r4 & 15			  ## RF_ble.c:1781:5
 1e138e2:    30 e0 74 00       	if (r0 == 3) goto 232 <__hw_rx_buf_process+0x22C : 1e139ce >			  ## RF_ble.c:1781:5
 1e138e6:    50 e0 72 00       	if (r0 == 5) goto 228 <__hw_rx_buf_process+0x22C : 1e139ce >
 1e138ea:    1e 18             	goto 60 <__hw_rx_buf_process+0x186 : 1e13928 >
 1e138ec:    21 fd 0f 49       	r1 = r4 & 15			  ## RF_ble.c:1799:5
 1e138f0:    61 e0 1a 80       	if (r1 > 6) goto 52 <__hw_rx_buf_process+0x186 : 1e13928 >			  ## RF_ble.c:1799:5
 1e138f4:    12 70             	r2 = 1
 1e138f6:    f8 fd 10 12       	r1 = r2 << r1
 1e138fa:    60 ff 55 19 0e 00 	if ((r1 & 85) == 0) goto 28 <__hw_rx_buf_process+0x17A : 1e1391c >
 1e13900:    f0 61             	r0 = b[r0 + 31] (u)
 1e13902:    81 fd 38 14       	r1 = uextra(r4, p:7, l:1)
 1e13906:    10 f2 62 10       	if (r0 != r1) goto 196 <__hw_rx_buf_process+0x22C : 1e139ce >
 1e1390a:    60 fc 44 00       	r0 = r6 + 68
 1e1390e:    b1 fc 1c 00       	r1 = r11 + 28
 1e13912:    62 70             	r2 = 6
 1e13914:    97 f3 ea 9a       	call 3093972 <memcmp : 106eec >
 1e13918:    5a 30             	if (r0 != 0) goto 180 <__hw_rx_buf_process+0x22C : 1e139ce >
 1e1391a:    06 18             	goto 12 <__hw_rx_buf_process+0x186 : 1e13928 >
 1e1391c:    61 ff 28 19 56 00 	if ((r1 & 40) != 0) goto 172 <__hw_rx_buf_process+0x22C : 1e139ce >
 1e13922:    01 f9 10 80       	r1 = b[r8 + 16] (u)			  ## RF_ble.c:1802:17
 1e13926:    bc 22             	if (r1 == 0) goto 376 <__hw_rx_buf_process+0x2FE : 1e13aa0 >			  ## RF_ble.c:1802:17
 1e13928:    00 f6 00 a0       	r0 = [r10 + 0]			  ## RF_ble.c:2020:31
 1e1392c:    05 fc 50 01       	r5 = r0 + 336
 1e13930:    21 6a             	r1 = b[r5 + 2] (u)			  ## RF_ble.c:2021:18
 1e13932:    21 e0 2e 10       	if (r1 != 2) goto 92 <__hw_rx_buf_process+0x1F0 : 1e13992 >			  ## RF_ble.c:2021:18
 1e13936:    21 fd 0f 49       	r1 = r4 & 15			  ## RF_ble.c:1875:9
 1e1393a:    51 e0 09 00       	if (r1 == 5) goto 18 <__hw_rx_buf_process+0x1AE : 1e13950 >			  ## RF_ble.c:1875:9
 1e1393e:    31 e0 26 10       	if (r1 != 3) goto 76 <__hw_rx_buf_process+0x1EC : 1e1398e >
 1e13942:    81 fd 38 14       	r1 = uextra(r4, p:7, l:1)			  ## RF_ble.c:1876:9
 1e13946:    b2 fc 1c 00       	r2 = r11 + 28			  ## RF_ble.c:1876:41
 1e1394a:    bf f3 73 f3       	call -6426 <__set_peer_addr : 1e12034 >			  ## RF_ble.c:1876:9
 1e1394e:    21 18             	goto 66 <__hw_rx_buf_process+0x1F0 : 1e13992 >			  ## RF_ble.c:1876:9
 1e13950:    71 50             	r1 = h[r0 + 14] (u)			  ## RF_ble.c:1879:27
 1e13952:    a2 d0             	r2 = r4 >> 2			  ## RF_ble.c:1882:37
 1e13954:    22 fd 10 29       	r2 = r2 & 16			  ## RF_ble.c:1882:37
 1e13958:    ba 50             	h[r0 + 22] = r2			  ## RF_ble.c:1882:25
 1e1395a:    89 c0             	r1 = r1 << 2			  ## RF_ble.c:1883:42
 1e1395c:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:1883:42
 1e13960:    02 fd 01 19       	r2 = r1 | 1			  ## RF_ble.c:1883:48
 1e13964:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:1883:25
 1e13966:    02 f7 10 b0       	r2 = h[r11 + 16] (u)			  ## RF_ble.c:1884:31
 1e1396a:    92 d0             	r2 = r2 >> 2			  ## RF_ble.c:1884:37
 1e1396c:    22 fd 10 29       	r2 = r2 & 16			  ## RF_ble.c:1884:37
 1e13970:    ca 50             	h[r0 + 24] = r2			  ## RF_ble.c:1884:25
 1e13972:    11 fd 05 19       	r1 = r1 ^ 5			  ## RF_ble.c:1885:49
 1e13976:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:1885:25
 1e13978:    04 70             	r4 = 0			  ## RF_ble.c:1885:25
 1e1397a:    0c 6a             	b[r5 + 0] = r4			  ## RF_ble.c:1887:22
 1e1397c:    c0 4a             	r0 = [r5 + 48]			  ## RF_ble.c:1889:21
 1e1397e:    bf f3 a0 6d       	call -74944 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:1889:9
 1e13982:    d0 4a             	r0 = [r5 + 52]			  ## RF_ble.c:1890:21
 1e13984:    bf f3 9d 6d       	call -74950 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:1890:9
 1e13988:    cc 4a             	[r5 + 48] = r4			  ## RF_ble.c:214:15
 1e1398a:    dc 4a             	[r5 + 52] = r4			  ## RF_ble.c:215:15
 1e1398c:    02 18             	goto 4 <__hw_rx_buf_process+0x1F0 : 1e13992 >			  ## RF_ble.c:215:15
 1e1398e:    8f f3 42 7d       	call 2030212 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e13992:    00 f6 04 80       	r0 = [r8 + 4]			  ## RF_ble.c:2452:14
 1e13996:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x202 : 1e139a4 >			  ## RF_ble.c:2452:14
 1e13998:    12 40             	r2 = [r0 + 4]			  ## RF_ble.c:2452:39
 1e1399a:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x202 : 1e139a4 >			  ## RF_ble.c:2452:39
 1e1399c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2453:49
 1e139a0:    91 08             	r1 = r9			  ## RF_ble.c:2453:9
 1e139a2:    82 00             	call r2			  ## RF_ble.c:2453:9
 1e139a4:    00 f7 10 b0       	r0 = h[r11 + 16] (u)			  ## RF_ble.c:2456:9
 1e139a8:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2456:9
 1e139ac:    00 e1 03 10       	if (r0 != 16) goto 6 <__hw_rx_buf_process+0x214 : 1e139b6 >			  ## RF_ble.c:2456:9
 1e139b0:    00 f9 12 b0       	r0 = b[r11 + 18] (u)			  ## RF_ble.c:2456:9
 1e139b4:    62 20             	if (r0 == 0) goto 196 <__hw_rx_buf_process+0x2D8 : 1e13a7a >			  ## RF_ble.c:2456:9
 1e139b6:    c0 ff 70 0f 00 00 	r0 = 3952 <rx_update_handle : f70 >			  ## RF_ble.c:2460:13
 1e139bc:    03 40             	r3 = [r0 + 0]			  ## RF_ble.c:2460:13
 1e139be:    0b 26             	if (r3 == 0) goto 22 <__hw_rx_buf_process+0x234 : 1e139d6 >			  ## RF_ble.c:2460:13
 1e139c0:    02 f9 12 b0       	r2 = b[r11 + 18] (u)			  ## RF_ble.c:2461:51
 1e139c4:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2461:35
 1e139c8:    b1 fc 1c 00       	r1 = r11 + 28			  ## RF_ble.c:2461:41
 1e139cc:    83 00             	call r3			  ## RF_ble.c:2461:13
 1e139ce:    90 08             	r0 = r9
 1e139d0:    bf f3 77 6d       	call -75026 <hw_dma_free : 1e014c2 >
 1e139d4:    5b 01             	{pc, r11-r4} = [sp++]			  ## RF_ble.c:2485:1
 1e139d6:    00 f9 12 b0       	r0 = b[r11 + 18] (u)			  ## RF_ble.c:2465:36
 1e139da:    40 81             	r0 += 20			  ## RF_ble.c:170:46
 1e139dc:    21 fd 03 09       	r1 = r0 & 3			  ## lbuf.c:125:14
 1e139e0:    61 fb 04 19       	r1 = 4 - r1			  ## lbuf.c:126:19
 1e139e4:    02 70             	r2 = 0			  ## lbuf.c:126:19
 1e139e6:    60 ff 03 09 01 00 	if ((r0 & 3) == 0) goto 2 <__hw_rx_buf_process+0x24C : 1e139ee >			  ## lbuf.c:126:19
 1e139ec:    12 08             	r2 = r1			  ## lbuf.c:125:9
 1e139ee:    01 f7 04 b0       	r1 = h[r11 + 4] (u)
 1e139f2:    04 b4             	r4 = r2 + r0			  ## lbuf.c:125:9
 1e139f4:    14 f2 04 30       	if (r4 < r1) goto 8 <__hw_rx_buf_process+0x25E : 1e13a00 >
 1e139f8:    8f f3 0d 7d       	call 2030106 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e139fc:    01 f7 04 b0       	r1 = h[r11 + 4] (u)
 1e13a00:    10 fc f0 ff       	r0 = r1 + -16			  ## lbuf.c:131:28
 1e13a04:    05 70             	r5 = 0			  ## lbuf.c:131:28
 1e13a06:    04 f2 20 80       	if (r4 > r0) goto 64 <__hw_rx_buf_process+0x2A8 : 1e13a4a >			  ## lbuf.c:131:28
 1e13a0a:    97 f3 c7 99       	call 3093390 <local_irq_disable : 106d9c >			  ## lbuf.c:140:5
 1e13a0e:    00 f7 04 b0       	r0 = h[r11 + 4] (u)			  ## lbuf.c:143:48
 1e13a12:    41 fc 20 00       	r1 = r4 + 32			  ## lbuf.c:143:29
 1e13a16:    01 f2 15 20       	if (r1 >= r0) goto 42 <__hw_rx_buf_process+0x2A2 : 1e13a44 >			  ## lbuf.c:143:29
 1e13a1a:    01 f6 00 b0       	r1 = [r11 + 0]			  ## lbuf.c:145:28
 1e13a1e:    80 fb 40 29       	r2 = r9 + r4			  ## lbuf.c:144:44
 1e13a22:    29 44             	[r2 + 8] = r1			  ## lbuf.c:145:19
 1e13a24:    c1 ff f0 ff 00 00 	r1 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## lbuf.c:146:31
 1e13a2a:    21 b3             	r1 = r1 - r4			  ## lbuf.c:146:31
 1e13a2c:    10 09             	r0 += r1			  ## lbuf.c:146:48
 1e13a2e:    68 54             	h[r2 + 12] = r0			  ## lbuf.c:146:18
 1e13a30:    00 70             	r0 = 0			  ## lbuf.c:147:18
 1e13a32:    f8 64             	b[r2 + 15] = r0			  ## lbuf.c:147:18
 1e13a34:    0a 44             	[r2 + 0] = r2			  ## list.h:188:16
 1e13a36:    1a 44             	[r2 + 4] = r2			  ## list.h:189:16
 1e13a38:    00 99             	r0 = r4 + 16			  ## lbuf.c:143:14
 1e13a3a:    10 f7 04 b0       	h[r11 + 4] = r0			  ## lbuf.c:149:20
 1e13a3e:    00 95             	r0 = r2 + 16			  ## lbuf.c:157:32
 1e13a40:    bf f3 02 6d       	call -75260 <lbuf_free_btctrler : 1e01448 >			  ## lbuf.c:157:9
 1e13a44:    97 f3 a8 99       	call 3093328 <local_irq_enable : 106d98 >			  ## lbuf.c:159:5
 1e13a48:    95 08             	r5 = r9			  ## lbuf.c:159:5
 1e13a4a:    60 ff 03 59 02 00 	if ((r5 & 3) == 0) goto 4 <__hw_rx_buf_process+0x2B2 : 1e13a54 >
 1e13a50:    8f f3 e1 7c       	call 2030018 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e13a54:    02 3a             	if (r5 != 0) goto 4 <__hw_rx_buf_process+0x2B8 : 1e13a5a >
 1e13a56:    8f f3 de 7c       	call 2030012 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e13a5a:    60 fc 5c 00       	r0 = r6 + 92			  ## RF_ble.c:2466:31
 1e13a5e:    51 08             	r1 = r5			  ## RF_ble.c:2466:13
 1e13a60:    bf f3 e4 8f       	call -57400 <hw_dma_push : 1e05a2c >			  ## RF_ble.c:2466:13
 1e13a64:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2470:17
 1e13a66:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2470:17
 1e13a6a:    00 e3 07 00       	if (r0 == 48) goto 14 <__hw_rx_buf_process+0x2DA : 1e13a7c >			  ## RF_ble.c:2470:17
 1e13a6e:    70 5d             	r0 = h[r6 + 46] (u)			  ## RF_ble.c:365:17
 1e13a70:    20 e0 04 80       	if (r0 > 2) goto 8 <__hw_rx_buf_process+0x2DA : 1e13a7c >			  ## RF_ble.c:365:17
 1e13a74:    30 70             	r0 = 3
 1e13a76:    78 5d             	h[r6 + 46] = r0
 1e13a78:    01 18             	goto 2 <__hw_rx_buf_process+0x2DA : 1e13a7c >
 1e13a7a:    95 08             	r5 = r9
 1e13a7c:    00 f6 04 80       	r0 = [r8 + 4]			  ## RF_ble.c:2477:14
 1e13a80:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x2EC : 1e13a8e >			  ## RF_ble.c:2477:14
 1e13a82:    02 40             	r2 = [r0 + 0]			  ## RF_ble.c:2477:39
 1e13a84:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x2EC : 1e13a8e >			  ## RF_ble.c:2477:39
 1e13a86:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:2478:45
 1e13a8a:    51 08             	r1 = r5			  ## RF_ble.c:2478:9
 1e13a8c:    82 00             	call r2			  ## RF_ble.c:2478:9
 1e13a8e:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2481:10
 1e13a90:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2481:10
 1e13a94:    00 e1 9e 1f       	if (r0 != 16) goto -196 <__hw_rx_buf_process+0x232 : 1e139d4 >			  ## RF_ble.c:2481:10
 1e13a98:    a0 6a             	r0 = b[r5 + 10] (u)			  ## RF_ble.c:2481:10
 1e13a9a:    9c 31             	if (r0 != 0) goto -200 <__hw_rx_buf_process+0x232 : 1e139d4 >			  ## RF_ble.c:2481:10
 1e13a9c:    50 08             	r0 = r5			  ## RF_ble.c:2483:9
 1e13a9e:    98 1f             	goto -208 <__hw_rx_buf_process+0x22E : 1e139d0 >			  ## RF_ble.c:2483:9
 1e13aa0:    80 61             	r0 = b[r0 + 24] (u)			  ## RF_ble.c:1803:18
 1e13aa2:    81 fd 30 14       	r1 = uextra(r4, p:6, l:1)			  ## RF_ble.c:1803:45
 1e13aa6:    10 f2 92 1f       	if (r0 != r1) goto -220 <__hw_rx_buf_process+0x22C : 1e139ce >			  ## RF_ble.c:1803:45
 1e13aaa:    60 fc 3d 00       	r0 = r6 + 61			  ## RF_ble.c:1804:28
 1e13aae:    b1 fc 22 00       	r1 = r11 + 34			  ## RF_ble.c:1804:53
 1e13ab2:    2f 1f             	goto -418 <__hw_rx_buf_process+0x170 : 1e13912 >			  ## RF_ble.c:1804:53


__hw_tx_buf_proess:
 1e13ab4:    7e 01             	[--sp] = {rets, r14-r4}			  ## RF_ble.c:2156:0
 1e13ab6:    5c 0b             	sp += -328			  ## RF_ble.c:2156:0
 1e13ab8:    08 08             	r8 = r0			  ## RF_ble.c:2156:0
 1e13aba:    07 40             	r7 = [r0 + 0]			  ## RF_ble.c:2157:34
 1e13abc:    19 08             	r9 = r1
 1e13abe:    88 c0             	r0 = r1 << 2
 1e13ac0:    70 09             	r0 += r7
 1e13ac2:    0a fc 80 01       	r10 = r0 + 384
 1e13ac6:    01 f6 00 a0       	r1 = [r10 + 0]
 1e13aca:    7e fc 50 01       	r14 = r7 + 336
 1e13ace:    de 24             	if (r2 == 0) goto 444 <__hw_tx_buf_proess+0x1D8 : 1e13c8c >			  ## RF_ble.c:2163:9
 1e13ad0:    7d fc a0 01       	r13 = r7 + 416
 1e13ad4:    0d 22             	if (r1 == 0) goto 26 <__hw_tx_buf_proess+0x3C : 1e13af0 >
 1e13ad6:    00 f6 3c d0       	r0 = [r13 + 60]			  ## RF_ble.c:2137:13
 1e13ada:    07 20             	if (r0 == 0) goto 14 <__hw_tx_buf_proess+0x36 : 1e13aea >			  ## RF_ble.c:2137:13
 1e13adc:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:2137:37
 1e13ade:    05 24             	if (r2 == 0) goto 10 <__hw_tx_buf_proess+0x36 : 1e13aea >
 1e13ae0:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2138:43
 1e13ae4:    82 00             	call r2			  ## RF_ble.c:2138:9
 1e13ae6:    01 f6 00 a0       	r1 = [r10 + 0]
 1e13aea:    10 08             	r0 = r1			  ## RF_ble.c:2166:13
 1e13aec:    bf f3 e9 6c       	call -75310 <hw_dma_free : 1e014c2 >			  ## RF_ble.c:2166:13
 1e13af0:    00 f9 f5 71       	r0 = b[r7 + 501] (u)			  ## RF_ble.c:2169:17
 1e13af4:    06 70             	r6 = 0			  ## RF_ble.c:2169:17
 1e13af6:    05 30             	if (r0 != 0) goto 10 <__hw_tx_buf_proess+0x4E : 1e13b02 >			  ## RF_ble.c:2169:17
 1e13af8:    e0 fc 40 00       	r0 = r14 + 64			  ## RF_ble.c:2171:38
 1e13afc:    bf f3 6d 8f       	call -57638 <hw_dma_pop : 1e059da >			  ## RF_ble.c:2171:22
 1e13b00:    06 08             	r6 = r0			  ## RF_ble.c:2171:22
 1e13b02:    08 3c             	if (r6 != 0) goto 16 <__hw_tx_buf_proess+0x60 : 1e13b14 >
 1e13b04:    00 f9 f4 71       	r0 = b[r7 + 500] (u)			  ## RF_ble.c:2175:13
 1e13b08:    05 30             	if (r0 != 0) goto 10 <__hw_tx_buf_proess+0x60 : 1e13b14 >			  ## RF_ble.c:2175:13
 1e13b0a:    e0 fc 48 00       	r0 = r14 + 72			  ## RF_ble.c:2177:38
 1e13b0e:    bf f3 64 8f       	call -57656 <hw_dma_pop : 1e059da >			  ## RF_ble.c:2177:22
 1e13b12:    06 08             	r6 = r0			  ## RF_ble.c:2177:22
 1e13b14:    7c fc 60 00       	r12 = r7 + 96
 1e13b18:    ce 2c             	if (r6 == 0) goto 412 <__hw_tx_buf_proess+0x202 : 1e13cb6 >
 1e13b1a:    02 f6 48 e0       	r2 = [r14 + 72]			  ## list.h:124:18
 1e13b1e:    e3 fc 48 00       	r3 = r14 + 72			  ## RF_ble.c:2198:13
 1e13b22:    00 70             	r0 = 0
 1e13b24:    11 70             	r1 = 1
 1e13b26:    32 f2 01 10       	if (r2 != r3) goto 2 <__hw_tx_buf_proess+0x78 : 1e13b2c >
 1e13b2a:    01 70             	r1 = 0			  ## RF_ble.c:2198:13
 1e13b2c:    62 5c             	r2 = h[r6 + 12] (u)			  ## RF_ble.c:2198:13
 1e13b2e:    f2 b4             	r2 &= 4294966783			  ## RF_ble.c:2198:13
 1e13b30:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## RF_ble.c:2198:13
 1e13b34:    6a 5c             	h[r6 + 12] = r2			  ## RF_ble.c:2198:13
 1e13b36:    10 f5 44 01       	[sp+324] = r0			  ## RF_ble.c:1661:8
 1e13b3a:    10 f5 40 01       	[sp+320] = r0			  ## RF_ble.c:1661:8
 1e13b3e:    10 f5 3c 01       	[sp+316] = r0			  ## RF_ble.c:1661:8
 1e13b42:    10 f5 38 01       	[sp+312] = r0			  ## RF_ble.c:1661:8
 1e13b46:    c0 a1             	r0 = sp + 28			  ## RF_ble.c:1661:8
 1e13b48:    01 70             	r1 = 0			  ## RF_ble.c:1663:8
 1e13b4a:    02 fb 0f 01       	r2 = 271 <DRIVER_RAM_TOTAL+0x1D : 10f >			  ## RF_ble.c:1663:8
 1e13b4e:    97 f3 cf 99       	call 3093406 <memset : 106ef0 >			  ## RF_ble.c:1663:8
 1e13b52:    60 5c             	r0 = h[r6 + 12] (u)			  ## RF_ble.c:1664:19
 1e13b54:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:1664:19
 1e13b58:    d0 f5 1b 00       	b[sp+27] = r0			  ## RF_ble.c:1664:8
 1e13b5c:    00 f9 01 d0       	r0 = b[r13 + 1] (u)			  ## RF_ble.c:1667:19
 1e13b60:    73 20             	if (r0 == 0) goto 230 <__hw_tx_buf_proess+0x194 : 1e13c48 >			  ## RF_ble.c:1667:19
 1e13b62:    00 f6 54 e0       	r0 = [r14 + 84]			  ## RF_ble.c:1671:25
 1e13b66:    d0 f5 2b 01       	b[sp+299] = r0			  ## RF_ble.c:1671:14
 1e13b6a:    01 d2             	r1 = r0 >> 8			  ## RF_ble.c:1672:38
 1e13b6c:    d1 f5 2c 01       	b[sp+300] = r1			  ## RF_ble.c:1672:14
 1e13b70:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:1673:38
 1e13b72:    d1 f5 2d 01       	b[sp+301] = r1			  ## RF_ble.c:1673:14
 1e13b76:    00 d6             	r0 = r0 >> 24			  ## RF_ble.c:1674:38
 1e13b78:    d0 f5 2e 01       	b[sp+302] = r0			  ## RF_ble.c:1674:14
 1e13b7c:    00 f9 02 d0       	r0 = b[r13 + 2] (u)			  ## RF_ble.c:1675:25
 1e13b80:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1675:14
 1e13b84:    01 f9 02 e0       	r1 = b[r14 + 2] (u)			  ## RF_ble.c:1676:13
 1e13b88:    61 e0 03 10       	if (r1 != 6) goto 6 <__hw_tx_buf_proess+0xDE : 1e13b92 >			  ## RF_ble.c:1676:13
 1e13b8c:    90 b3             	r0 |= 128			  ## RF_ble.c:1678:18
 1e13b8e:    d0 f5 2f 01       	b[sp+303] = r0			  ## RF_ble.c:1678:18
 1e13b92:    00 f9 0e d0       	r0 = b[r13 + 14] (u)			  ## RF_ble.c:1680:5
 1e13b96:    01 f9 12 d0       	r1 = b[r13 + 18] (u)			  ## RF_ble.c:1680:5
 1e13b9a:    02 f9 0c d0       	r2 = b[r13 + 12] (u)			  ## RF_ble.c:1680:5
 1e13b9e:    0b f9 0d d0       	r11 = b[r13 + 13] (u)			  ## RF_ble.c:1680:5
 1e13ba2:    03 f9 13 d0       	r3 = b[r13 + 19] (u)			  ## RF_ble.c:1680:5
 1e13ba6:    07 f9 11 d0       	r7 = b[r13 + 17] (u)			  ## RF_ble.c:1680:5
 1e13baa:    04 f9 10 d0       	r4 = b[r13 + 16] (u)			  ## RF_ble.c:1680:5
 1e13bae:    05 f9 0f d0       	r5 = b[r13 + 15] (u)			  ## RF_ble.c:1680:5
 1e13bb2:    d3 f5 37 01       	b[sp+311] = r3			  ## RF_ble.c:1680:5
 1e13bb6:    d7 f5 35 01       	b[sp+309] = r7			  ## RF_ble.c:1680:5
 1e13bba:    d4 f5 34 01       	b[sp+308] = r4			  ## RF_ble.c:1680:5
 1e13bbe:    d5 f5 33 01       	b[sp+307] = r5			  ## RF_ble.c:1680:5
 1e13bc2:    db f5 31 01       	b[sp+305] = r11			  ## RF_ble.c:1680:5
 1e13bc6:    d2 f5 30 01       	b[sp+304] = r2			  ## RF_ble.c:1680:5
 1e13bca:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## RF_ble.c:1680:5
 1e13bce:    d0 fd 80 41       	r4 <= insert(r1, p:16, l:16)			  ## RF_ble.c:1680:5
 1e13bd2:    21 d4             	r1 = r4 >> 16			  ## RF_ble.c:1680:5
 1e13bd4:    d1 f5 36 01       	b[sp+310] = r1			  ## RF_ble.c:1680:5
 1e13bd8:    c8 fd 40 05       	r0 <= insert(r5, p:8, l:8)			  ## RF_ble.c:1680:5
 1e13bdc:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## RF_ble.c:1680:5
 1e13be0:    10 d4             	r0 = r2 >> 16			  ## RF_ble.c:1680:5
 1e13be2:    d0 f5 32 01       	b[sp+306] = r0			  ## RF_ble.c:1680:5
 1e13be6:    e0 6c             	r0 = b[r6 + 14] (u)			  ## RF_ble.c:1684:60
 1e13be8:    01 70             	r1 = 0			  ## RF_ble.c:1684:60
 1e13bea:    59 02             	[sp+20] = r1			  ## RF_ble.c:1684:5
 1e13bec:    41 70             	r1 = 4			  ## RF_ble.c:1684:5
 1e13bee:    49 02             	[sp+16] = r1			  ## RF_ble.c:1684:5
 1e13bf0:    e1 fb 38 01       	r1 = sp + 312			  ## RF_ble.c:1684:5
 1e13bf4:    39 02             	[sp+12] = r1			  ## RF_ble.c:1684:5
 1e13bf6:    c1 a1             	r1 = sp + 28			  ## RF_ble.c:1684:5
 1e13bf8:    29 02             	[sp+8] = r1			  ## RF_ble.c:1684:5
 1e13bfa:    18 02             	[sp+4] = r0			  ## RF_ble.c:1684:5
 1e13bfc:    0b 9d             	r11 = r6 + 16			  ## RF_ble.c:1684:50
 1e13bfe:    e0 fc 64 00       	r0 = r14 + 100			  ## RF_ble.c:1684:19
 1e13c02:    e1 fb 2b 01       	r1 = sp + 299			  ## RF_ble.c:1684:19
 1e13c06:    b2 a1             	r2 = sp + 27			  ## RF_ble.c:1684:19
 1e13c08:    13 70             	r3 = 1			  ## RF_ble.c:1684:5
 1e13c0a:    1b f5 00 00       	[sp] = r11			  ## RF_ble.c:1684:5
 1e13c0e:    bf f3 70 90       	call -57120 <ccm_memory_v2 : 1e05cf2 >			  ## RF_ble.c:1684:5
 1e13c12:    00 f6 54 e0       	r0 = [r14 + 84]			  ## RF_ble.c:1687:26
 1e13c16:    10 80             	r0 += 1			  ## RF_ble.c:1687:26
 1e13c18:    10 f6 54 e0       	[r14 + 84] = r0			  ## RF_ble.c:1687:26
 1e13c1c:    f0 ef 02 10       	if (r0 != -1) goto 4 <__hw_tx_buf_proess+0x170 : 1e13c24 >			  ## RF_ble.c:1687:26
 1e13c20:    8f f3 f9 7b       	call 2029554 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e13c24:    e5 6c             	r5 = b[r6 + 14] (u)			  ## RF_ble.c:1689:30
 1e13c26:    c1 a1             	r1 = sp + 28			  ## RF_ble.c:1689:30
 1e13c28:    b0 08             	r0 = r11			  ## RF_ble.c:1689:5
 1e13c2a:    52 08             	r2 = r5			  ## RF_ble.c:1689:5
 1e13c2c:    97 f3 5a 99       	call 3093172 <memcpy : 106ee4 >			  ## RF_ble.c:1689:5
 1e13c30:    00 f5 38 01       	r0 = [sp+312]			  ## RF_ble.c:1690:5
 1e13c34:    41 bd             	r1 = r6 + r5			  ## RF_ble.c:1690:21
 1e13c36:    08 63             	b[r1 + 16] = r0			  ## RF_ble.c:1690:5
 1e13c38:    02 d6             	r2 = r0 >> 24			  ## RF_ble.c:1690:5
 1e13c3a:    3a 63             	b[r1 + 19] = r2			  ## RF_ble.c:1690:5
 1e13c3c:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:1690:5
 1e13c3e:    2a 63             	b[r1 + 18] = r2			  ## RF_ble.c:1690:5
 1e13c40:    00 d2             	r0 = r0 >> 8			  ## RF_ble.c:1690:5
 1e13c42:    18 63             	b[r1 + 17] = r0			  ## RF_ble.c:1690:5
 1e13c44:    40 9a             	r0 = r5 + 4			  ## RF_ble.c:1691:13
 1e13c46:    e8 6c             	b[r6 + 14] = r0			  ## RF_ble.c:1691:13
 1e13c48:    16 f6 00 a0       	[r10 + 0] = r6			  ## RF_ble.c:2205:23
 1e13c4c:    80 08             	r0 = r8			  ## RF_ble.c:2208:9
 1e13c4e:    61 08             	r1 = r6			  ## RF_ble.c:2208:9
 1e13c50:    92 08             	r2 = r9			  ## RF_ble.c:2208:9
 1e13c52:    bf f3 b5 f8       	call -3734 <ble_hw_tx : 1e12dc0 >			  ## RF_ble.c:2208:9
 1e13c56:    00 f7 02 c0       	r0 = h[r12 + 2] (u)			  ## RF_ble.c:2211:9
 1e13c5a:    61 5c             	r1 = h[r6 + 12] (u)			  ## RF_ble.c:2211:9
 1e13c5c:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2211:9
 1e13c5e:    c9 d0             	r1 = r1 >> 3			  ## RF_ble.c:2211:9
 1e13c60:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2211:9
 1e13c64:    e0 fd 00 21       	r2 = r1 | r0			  ## RF_ble.c:2211:9
 1e13c68:    c1 fc 04 00       	r1 = r12 + 4			  ## RF_ble.c:2214:62
 1e13c6c:    c0 fc 05 00       	r0 = r12 + 5			  ## RF_ble.c:2214:40
 1e13c70:    12 f7 02 c0       	h[r12 + 2] = r2			  ## RF_ble.c:2211:9
 1e13c74:    09 e0 01 10       	if (r9 != 0) goto 2 <__hw_tx_buf_proess+0x1C6 : 1e13c7a >			  ## RF_ble.c:2211:9
 1e13c78:    10 08             	r0 = r1			  ## RF_ble.c:2214:21
 1e13c7a:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:2215:9
 1e13c7c:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:2215:9
 1e13c7e:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:2215:9
 1e13c80:    21 4c             	r1 = [r6 + 8]			  ## RF_ble.c:2217:17
 1e13c82:    20 22             	if (r1 == 0) goto 64 <__hw_tx_buf_proess+0x210 : 1e13cc4 >			  ## RF_ble.c:2217:17
 1e13c84:    00 f6 38 d0       	r0 = [r13 + 56]			  ## RF_ble.c:2218:30
 1e13c88:    81 00             	call r1			  ## RF_ble.c:2218:13
 1e13c8a:    1c 18             	goto 56 <__hw_tx_buf_proess+0x210 : 1e13cc4 >			  ## RF_ble.c:2218:13
 1e13c8c:    1b 22             	if (r1 == 0) goto 54 <__hw_tx_buf_proess+0x210 : 1e13cc4 >
 1e13c8e:    60 52             	r0 = h[r1 + 12] (u)			  ## RF_ble.c:2224:22
 1e13c90:    29 f3 18 00       	if ((r0 & 512) != 0) goto 48 <__hw_tx_buf_proess+0x210 : 1e13cc4 >			  ## RF_ble.c:2224:22
 1e13c94:    03 f6 48 e0       	r3 = [r14 + 72]			  ## list.h:124:18
 1e13c98:    e4 fc 48 00       	r4 = r14 + 72			  ## RF_ble.c:2225:17
 1e13c9c:    12 70             	r2 = 1			  ## RF_ble.c:2225:17
 1e13c9e:    43 f2 01 10       	if (r3 != r4) goto 2 <__hw_tx_buf_proess+0x1F0 : 1e13ca4 >
 1e13ca2:    02 70             	r2 = 0			  ## RF_ble.c:2225:17
 1e13ca4:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:2225:17
 1e13ca6:    c1 fd 48 02       	r0 <= insert(r2, p:9, l:1)			  ## RF_ble.c:2225:17
 1e13caa:    68 52             	h[r1 + 12] = r0			  ## RF_ble.c:2225:17
 1e13cac:    80 08             	r0 = r8			  ## RF_ble.c:2229:17
 1e13cae:    92 08             	r2 = r9			  ## RF_ble.c:2229:17
 1e13cb0:    bf f3 86 f8       	call -3828 <ble_hw_tx : 1e12dc0 >			  ## RF_ble.c:2229:17
 1e13cb4:    07 18             	goto 14 <__hw_tx_buf_proess+0x210 : 1e13cc4 >
 1e13cb6:    00 f7 02 c0       	r0 = h[r12 + 2] (u)			  ## RF_ble.c:2184:13
 1e13cba:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2184:13
 1e13cbc:    10 f7 02 c0       	h[r12 + 2] = r0			  ## RF_ble.c:2184:13
 1e13cc0:    c0 f4 00 a9       	[r10 + 0] = 0			  ## RF_ble.c:2188:27
 1e13cc4:    a4 0a             	sp += 328
 1e13cc6:    5e 01             	{pc, r14-r4} = [sp++]			  ## RF_ble.c:2235:1


__hw_tx_process:
 1e13cc8:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2274:0
 1e13cca:    fe 0b             	sp += -4			  ## RF_ble.c:2274:0
 1e13ccc:    04 08             	r4 = r0			  ## RF_ble.c:2274:0
 1e13cce:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:2275:34
 1e13cd0:    61 2e             	if (r7 == 0) goto 194 <__hw_tx_process+0xCC : 1e13d94 >
 1e13cd2:    00 f9 52 71       	r0 = b[r7 + 338] (u)			  ## RF_ble.c:2284:13
 1e13cd6:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2284:36
 1e13cd8:    60 e0 5c 10       	if (r0 != 6) goto 184 <__hw_tx_process+0xCC : 1e13d94 >			  ## RF_ble.c:2284:36
 1e13cdc:    97 f3 5e 98       	call 3092668 <local_irq_disable : 106d9c >			  ## RF_ble.c:2288:5
 1e13ce0:    08 00             	csync			  ## RF_ble.c:2288:5
 1e13ce2:    08 00             	csync			  ## RF_ble.c:2289:9
 1e13ce4:    76 fc ec 01       	r6 = r7 + 492			  ## RF_ble.c:2289:9
 1e13ce8:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:2289:9
 1e13cea:    10 e0 51 00       	if (r0 == 1) goto 162 <__hw_tx_process+0xC8 : 1e13d90 >			  ## RF_ble.c:2289:9
 1e13cee:    97 f3 55 98       	call 3092650 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e13cf2:    08 00             	csync			  ## atomic.h:47:5
 1e13cf4:    15 70             	r5 = 1			  ## atomic.h:47:5
 1e13cf6:    0d 4c             	[r6 + 0] = r5			  ## atomic.h:49:16
 1e13cf8:    97 f3 4e 98       	call 3092636 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e13cfc:    97 f3 4c 98       	call 3092632 <local_irq_enable : 106d98 >			  ## RF_ble.c:2295:5
 1e13d00:    70 5e             	r0 = h[r7 + 14] (u)			  ## RF_ble.c:2307:41
 1e13d02:    71 fc 64 00       	r1 = r7 + 100			  ## RF_ble.c:2307:41
 1e13d06:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:2308:42
 1e13d08:    20 fd 01 09       	r0 = r0 & 1			  ## RF_ble.c:2307:31
 1e13d0c:    13 62             	r3 = b[r1 + 1] (u)			  ## RF_ble.c:2309:42
 1e13d0e:    52 c0             	r2 = r2 << 1			  ## RF_ble.c:2308:32
 1e13d10:    22 fd 02 29       	r2 = r2 & 2			  ## RF_ble.c:2308:32
 1e13d14:    50 b4             	r0 |= r2			  ## RF_ble.c:2308:32
 1e13d16:    9a c0             	r2 = r3 << 2			  ## RF_ble.c:2309:32
 1e13d18:    22 fd 04 29       	r2 = r2 & 4			  ## RF_ble.c:2309:32
 1e13d1c:    50 b4             	r0 |= r2			  ## RF_ble.c:2309:32
 1e13d1e:    d0 f5 02 00       	b[sp+2] = r0			  ## RF_ble.c:2309:32
 1e13d22:    72 5e             	r2 = h[r7 + 14] (u)			  ## RF_ble.c:2312:41
 1e13d24:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:2313:42
 1e13d26:    22 fd 01 29       	r2 = r2 & 1			  ## RF_ble.c:2312:31
 1e13d2a:    11 62             	r1 = b[r1 + 1] (u)			  ## RF_ble.c:2314:42
 1e13d2c:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2313:32
 1e13d2e:    23 fd 02 39       	r3 = r3 & 2			  ## RF_ble.c:2313:32
 1e13d32:    52 b6             	r2 |= r3			  ## RF_ble.c:2313:32
 1e13d34:    89 c0             	r1 = r1 << 2			  ## RF_ble.c:2314:32
 1e13d36:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:2314:32
 1e13d3a:    51 b4             	r1 |= r2			  ## RF_ble.c:2314:32
 1e13d3c:    d0 b2             	r0 ^= r1			  ## RF_ble.c:2316:34
 1e13d3e:    d1 f5 03 00       	b[sp+3] = r1			  ## RF_ble.c:2314:32
 1e13d42:    70 e0 06 80       	if (r0 > 7) goto 12 <__hw_tx_process+0x8A : 1e13d52 >			  ## RF_ble.c:2314:32
 1e13d46:    11 70             	r1 = 1
 1e13d48:    f8 fd 00 01       	r0 = r1 << r0
 1e13d4c:    61 ff 8a 09 01 00 	if ((r0 & 138) != 0) goto 2 <__hw_tx_process+0x8C : 1e13d54 >
 1e13d52:    05 70             	r5 = 0
 1e13d54:    20 a0             	r0 = sp + 2
 1e13d56:    50 ba             	r0 |= r5			  ## RF_ble.c:2335:46
 1e13d58:    07 60             	r7 = b[r0 + 0] (u)			  ## RF_ble.c:2335:46
 1e13d5a:    25 fd 01 79       	r5 = r7 & 1			  ## RF_ble.c:2335:46
 1e13d5e:    10 9a             	r0 = r5 + 1			  ## RF_ble.c:2336:20
 1e13d60:    fa fd 00 07       	r0 = r7 >> r0			  ## RF_ble.c:2336:20
 1e13d64:    22 fd 01 09       	r2 = r0 & 1			  ## RF_ble.c:2336:20
 1e13d68:    40 08             	r0 = r4			  ## RF_ble.c:2340:5
 1e13d6a:    51 08             	r1 = r5			  ## RF_ble.c:2340:5
 1e13d6c:    a3 16             	call -698 <__hw_tx_buf_proess : 1e13ab4 >			  ## RF_ble.c:2340:5
 1e13d6e:    20 70             	r0 = 2			  ## RF_ble.c:2344:20
 1e13d70:    00 f3 01 70       	if ((r7 & 1) == 0) goto 2 <__hw_tx_process+0xAE : 1e13d76 >			  ## RF_ble.c:2344:20
 1e13d74:    10 70             	r0 = 1
 1e13d76:    fa fd 00 07       	r0 = r7 >> r0
 1e13d7a:    22 fd 01 09       	r2 = r0 & 1
 1e13d7e:    11 fd 01 59       	r1 = r5 ^ 1			  ## RF_ble.c:2343:20
 1e13d82:    40 08             	r0 = r4			  ## RF_ble.c:2348:5
 1e13d84:    97 16             	call -722 <__hw_tx_buf_proess : 1e13ab4 >			  ## RF_ble.c:2348:5
 1e13d86:    97 f3 09 98       	call 3092498 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e13d8a:    08 00             	csync			  ## atomic.h:47:5
 1e13d8c:    c0 f4 00 69       	[r6 + 0] = 0			  ## atomic.h:49:16
 1e13d90:    97 f3 02 98       	call 3092484 <local_irq_enable : 106d98 >
 1e13d94:    02 0a             	sp += 4
 1e13d96:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2352:1


ble_rx_irq_handler:
 1e13d98:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:2821:0
 1e13d9a:    78 f3 ff 03       	[--sp] = {r9-r0}			  ## RF_ble.c:2822:9
 1e13d9e:    fc 0b             	sp += -8			  ## RF_ble.c:2822:9
 1e13da0:    c0 ff e4 2f 00 00 	r0 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:2829:15
 1e13da6:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2829:15
 1e13da8:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:2829:31
 1e13daa:    c0 ff 28 80 1c 00 	r0 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >
 1e13db0:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:2831:13
 1e13db2:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:2831:28
 1e13db4:    51 b5             	r1 &= r2			  ## RF_ble.c:2831:26
 1e13db6:    08 f3 52 10       	if ((r1 & 256) == 0) goto 164 <ble_rx_irq_handler+0xC6 : 1e13e5e >			  ## RF_ble.c:2831:26
 1e13dba:    01 f4 01 0a       	[r0 + 4] |= 256			  ## RF_ble.c:2832:26
 1e13dbe:    10 48             	r0 = [r4 + 4]			  ## RF_ble5.c:185:18
 1e13dc0:    4e 30             	if (r0 != 0) goto 156 <ble_rx_irq_handler+0xC6 : 1e13e5e >			  ## RF_ble5.c:185:18
 1e13dc2:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:2557:34
 1e13dc4:    56 fc 44 01       	r6 = r5 + 324
 1e13dc8:    d0 4c             	r0 = [r6 + 52]			  ## RF_ble.c:2577:13
 1e13dca:    08 02             	[sp] = r0			  ## RF_ble.c:2577:11
 1e13dcc:    e0 4c             	r0 = [r6 + 56]			  ## RF_ble.c:2578:13
 1e13dce:    18 02             	[sp+4] = r0			  ## RF_ble.c:2578:11
 1e13dd0:    e0 6c             	r0 = b[r6 + 14] (u)			  ## RF_ble.c:2581:20
 1e13dd2:    81 5a             	r1 = h[r5 + 16] (u)			  ## RF_ble.c:2581:20
 1e13dd4:    38 fd 01 09       	r8 = r0 & 4294967294			  ## RF_ble.c:2583:32
 1e13dd8:    27 fd 01 19       	r7 = r1 & 1			  ## RF_ble.c:2583:32
 1e13ddc:    68 e0 0c 10       	if (r8 != 6) goto 24 <ble_rx_irq_handler+0x60 : 1e13df8 >			  ## RF_ble.c:2583:32
 1e13de0:    50 08             	r0 = r5			  ## RF_ble.c:2585:15
 1e13de2:    71 08             	r1 = r7			  ## RF_ble.c:2585:15
 1e13de4:    bb 14             	call -1674 <__ble_rx_buf_process_conn : 1e1375c >			  ## RF_ble.c:2585:15
 1e13de6:    11 5c             	r1 = h[r6 + 2] (u)			  ## RF_ble.c:2586:22
 1e13de8:    11 b0             	r1 |= 1			  ## RF_ble.c:2586:22
 1e13dea:    19 5c             	h[r6 + 2] = r1			  ## RF_ble.c:2586:22
 1e13dec:    11 70             	r1 = 1			  ## RF_ble.c:2586:22
 1e13dee:    10 e0 01 00       	if (r0 == 1) goto 2 <ble_rx_irq_handler+0x5C : 1e13df4 >			  ## RF_ble.c:2586:22
 1e13df2:    01 70             	r1 = 0			  ## RF_ble.c:2589:5
 1e13df4:    76 08             	r6 = r7
 1e13df6:    16 18             	goto 44 <ble_rx_irq_handler+0x8C : 1e13e24 >
 1e13df8:    16 fd 01 79       	r6 = r7 ^ 1			  ## RF_ble.c:2590:15
 1e13dfc:    b0 c0             	r0 = r6 << 2			  ## RF_ble.c:2056:5
 1e13dfe:    09 ba             	r9 = r5 + r0			  ## RF_ble.c:2056:5
 1e13e00:    f0 7f             	r0 = 255			  ## RF_ble.c:2056:19
 1e13e02:    bf f3 ba f5       	call -5260 <hw_alloc_rx : 1e1297a >			  ## RF_ble.c:2056:19
 1e13e06:    e1 9b             	r1 = r5 + 30			  ## RF_ble.c:2055:63
 1e13e08:    53 fc 20 00       	r3 = r5 + 32			  ## RF_ble.c:2055:38
 1e13e0c:    10 f6 78 91       	[r9 + 376] = r0			  ## RF_ble.c:2056:17
 1e13e10:    01 2e             	if (r7 == 0) goto 2 <ble_rx_irq_handler+0x7C : 1e13e14 >			  ## RF_ble.c:2056:17
 1e13e12:    13 08             	r3 = r1			  ## RF_ble.c:2055:14
 1e13e14:    04 20             	if (r0 == 0) goto 8 <ble_rx_irq_handler+0x86 : 1e13e1e >
 1e13e16:    40 81             	r0 += 20			  ## RF_ble.c:2064:25
 1e13e18:    bf f3 77 f6       	call -4882 <PHY_TO_BLE : 1e12b0a >			  ## RF_ble.c:2064:14
 1e13e1c:    01 18             	goto 2 <ble_rx_irq_handler+0x88 : 1e13e20 >			  ## RF_ble.c:2064:14
 1e13e1e:    00 70             	r0 = 0
 1e13e20:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:2060:16
 1e13e22:    11 70             	r1 = 1
 1e13e24:    00 a0             	r0 = sp + 0
 1e13e26:    06 22             	if (r1 == 0) goto 12 <ble_rx_irq_handler+0x9C : 1e13e34 >
 1e13e28:    a1 f6 00 06       	r1 = [r0+r6<<2]			  ## RF_ble.c:2594:11
 1e13e2c:    03 22             	if (r1 == 0) goto 6 <ble_rx_irq_handler+0x9C : 1e13e34 >
 1e13e2e:    40 08             	r0 = r4			  ## RF_ble.c:2596:9
 1e13e30:    62 08             	r2 = r6			  ## RF_ble.c:2596:9
 1e13e32:    b7 14             	call -1682 <__hw_rx_buf_process : 1e137a2 >			  ## RF_ble.c:2596:9
 1e13e34:    68 e0 11 10       	if (r8 != 6) goto 34 <ble_rx_irq_handler+0xC2 : 1e13e5a >
 1e13e38:    11 70             	r1 = 1			  ## RF_ble.c:2601:18
 1e13e3a:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0xA6 : 1e13e3e >			  ## RF_ble.c:2601:18
 1e13e3c:    01 70             	r1 = 0
 1e13e3e:    00 a0             	r0 = sp + 0
 1e13e40:    a7 f6 00 01       	r7 = [r0+r1<<2]			  ## RF_ble.c:2601:15
 1e13e44:    50 08             	r0 = r5			  ## RF_ble.c:2602:15
 1e13e46:    8a 14             	call -1772 <__ble_rx_buf_process_conn : 1e1375c >			  ## RF_ble.c:2602:15
 1e13e48:    08 2e             	if (r7 == 0) goto 16 <ble_rx_irq_handler+0xC2 : 1e13e5a >			  ## RF_ble.c:2602:15
 1e13e4a:    10 e0 06 10       	if (r0 != 1) goto 12 <ble_rx_irq_handler+0xC2 : 1e13e5a >
 1e13e4e:    12 70             	r2 = 1			  ## RF_ble.c:2601:18
 1e13e50:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0xBC : 1e13e54 >			  ## RF_ble.c:2601:18
 1e13e52:    02 70             	r2 = 0
 1e13e54:    40 08             	r0 = r4			  ## RF_ble.c:2604:13
 1e13e56:    71 08             	r1 = r7			  ## RF_ble.c:2604:13
 1e13e58:    a4 14             	call -1720 <__hw_rx_buf_process : 1e137a2 >			  ## RF_ble.c:2604:13
 1e13e5a:    40 08             	r0 = r4			  ## RF_ble.c:2609:5
 1e13e5c:    35 17             	call -406 <__hw_tx_process : 1e13cc8 >			  ## RF_ble.c:2609:5
 1e13e5e:    04 0a             	sp += 8
 1e13e60:    70 f3 ff 03       	{r9-r0} = [sp++]			  ## RF_ble.c:2847:1
 1e13e64:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:2847:1
 1e13e66:    22 00             	rti			  ## RF_ble.c:2847:1


__get_latency_valid:
 1e13e68:    34 00             	[--sp] = rets			  ## le_low_power.c:230:0
 1e13e6a:    02 08             	r2 = r0			  ## le_low_power.c:230:0
 1e13e6c:    01 44             	r1 = [r2 + 0]			  ## le_low_power.c:231:31
 1e13e6e:    03 f9 56 11       	r3 = b[r1 + 342] (u)			  ## le_low_power.c:233:14
 1e13e72:    00 70             	r0 = 0			  ## le_low_power.c:233:14
 1e13e74:    10 26             	if (r3 == 0) goto 32 <__get_latency_valid+0x2E : 1e13e96 >			  ## le_low_power.c:233:14
 1e13e76:    01 f9 57 11       	r1 = b[r1 + 343] (u)			  ## le_low_power.c:237:14
 1e13e7a:    11 e0 0c 00       	if (r1 == 1) goto 24 <__get_latency_valid+0x2E : 1e13e96 >
 1e13e7e:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e13e80:    20 08             	r0 = r2			  ## le_low_power.c:72:18
 1e13e82:    bf f3 dd f9       	call -3142 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:72:18
 1e13e86:    01 08             	r1 = r0			  ## le_low_power.c:72:18
 1e13e88:    c2 ff 80 ff 00 00 	r2 = 65408 <_IRQ_MEM_ADDR+0x80 : ff80 >			  ## le_low_power.c:241:31
 1e13e8e:    10 70             	r0 = 1			  ## le_low_power.c:242:9
 1e13e90:    21 f1 01 00       	if ((r1 & r2) != 0) goto 2 <__get_latency_valid+0x2E : 1e13e96 >			  ## le_low_power.c:242:9
 1e13e94:    00 70             	r0 = 0			  ## le_low_power.c:242:9
 1e13e96:    30 00             	pc = [sp++]			  ## le_low_power.c:246:1


__get_interval:
 1e13e98:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:55:0
 1e13e9a:    03 08             	r3 = r0			  ## le_low_power.c:55:0
 1e13e9c:    11 70             	r1 = 1			  ## le_low_power.c:56:13
 1e13e9e:    bf f3 cf f9       	call -3170 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:56:13
 1e13ea2:    01 fb ff 7f       	r1 = 32767 <nvbss_size+0xCBF : 7fff >			  ## le_low_power.c:56:41
 1e13ea6:    e2 fd 10 40       	r4 = r0 & r1			  ## le_low_power.c:56:41
 1e13eaa:    f1 70             	r1 = 15			  ## le_low_power.c:56:54
 1e13eac:    30 08             	r0 = r3			  ## le_low_power.c:56:54
 1e13eae:    bf f3 c7 f9       	call -3186 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:56:54
 1e13eb2:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:56:91
 1e13eb4:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:56:91
 1e13eb8:    50 b8             	r0 |= r4			  ## le_low_power.c:56:51
 1e13eba:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:56:5


__power_get_timeout.3531:
 1e13ebc:    7b 01             	[--sp] = {rets, r11-r4}			  ## le_low_power.c:254:0
 1e13ebe:    05 08             	r5 = r0			  ## le_low_power.c:254:0
 1e13ec0:    0a f6 00 50       	r10 = [r5 + 0]			  ## le_low_power.c:257:31
 1e13ec4:    c9 ff 38 80 1c 00 	r9 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e13eca:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e13ed0:    08 70             	r8 = 0
 1e13ed2:    00 f6 00 90       	r0 = [r9 + 0]			  ## le_low_power.c:262:9
 1e13ed6:    21 f3 58 00       	if ((r0 & 2) != 0) goto 176 <__power_get_timeout.3531+0xCE : 1e13f8a >			  ## le_low_power.c:262:9
 1e13eda:    bf f3 e4 f7       	call -4152 <check_event_pending : 1e12ea6 >			  ## le_low_power.c:262:32
 1e13ede:    55 30             	if (r0 != 0) goto 170 <__power_get_timeout.3531+0xCE : 1e13f8a >			  ## le_low_power.c:262:32
 1e13ee0:    00 f9 5d a1       	r0 = b[r10 + 349] (u)			  ## le_low_power.c:269:14
 1e13ee4:    0e 20             	if (r0 == 0) goto 28 <__power_get_timeout.3531+0x46 : 1e13f02 >			  ## le_low_power.c:269:14
 1e13ee6:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e13ee8:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e13eea:    bf f3 a9 f9       	call -3246 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:63:12
 1e13eee:    b0 09             	r0 += r11			  ## le_low_power.c:63:40
 1e13ef0:    23 04             	r3 = r0.l (u)			  ## le_low_power.c:270:13
 1e13ef2:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e13ef4:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e13ef6:    bf f3 a3 f9       	call -3258 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:81:13
 1e13efa:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:270:44
 1e13efc:    f0 8f             	r0 += -1			  ## le_low_power.c:270:68
 1e13efe:    03 f2 44 00       	if (r3 == r0) goto 136 <__power_get_timeout.3531+0xCE : 1e13f8a >			  ## le_low_power.c:270:68
 1e13f02:    50 08             	r0 = r5			  ## le_low_power.c:275:16
 1e13f04:    bf f3 b1 f9       	call -3230 <__get_clkn : 1e1326a >			  ## le_low_power.c:275:16
 1e13f08:    06 08             	r6 = r0			  ## le_low_power.c:275:16
 1e13f0a:    50 08             	r0 = r5			  ## le_low_power.c:279:9
 1e13f0c:    ad 17             	call -166 <__get_latency_valid : 1e13e68 >			  ## le_low_power.c:279:9
 1e13f0e:    64 08             	r4 = r6			  ## le_low_power.c:279:9
 1e13f10:    25 20             	if (r0 == 0) goto 74 <__power_get_timeout.3531+0xA0 : 1e13f5c >			  ## le_low_power.c:279:9
 1e13f12:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e13f14:    50 08             	r0 = r5			  ## le_low_power.c:72:18
 1e13f16:    bf f3 93 f9       	call -3290 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:72:18
 1e13f1a:    04 08             	r4 = r0			  ## le_low_power.c:72:18
 1e13f1c:    50 08             	r0 = r5			  ## le_low_power.c:284:27
 1e13f1e:    bc 17             	call -136 <__get_interval : 1e13e98 >			  ## le_low_power.c:284:27
 1e13f20:    03 08             	r3 = r0			  ## le_low_power.c:284:27
 1e13f22:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e13f24:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e13f26:    bf f3 8b f9       	call -3306 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:81:13
 1e13f2a:    07 08             	r7 = r0			  ## le_low_power.c:81:13
 1e13f2c:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e13f2e:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e13f30:    bf f3 86 f9       	call -3316 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:63:12
 1e13f34:    02 f9 5d a1       	r2 = b[r10 + 349] (u)			  ## le_low_power.c:292:18
 1e13f38:    89 fd 38 14       	r1 = uextra(r4, p:7, l:9)			  ## le_low_power.c:289:32
 1e13f3c:    64 08             	r4 = r6			  ## le_low_power.c:289:30
 1e13f3e:    80 fe 30 41       	r4 += r1 * r3			  ## le_low_power.c:289:30
 1e13f42:    0c 24             	if (r2 == 0) goto 24 <__power_get_timeout.3531+0xA0 : 1e13f5c >
 1e13f44:    b0 09             	r0 += r11			  ## le_low_power.c:63:40
 1e13f46:    20 be             	r0 = r7 - r0			  ## le_low_power.c:293:50
 1e13f48:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:293:50
 1e13f4a:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_get_timeout.3531+0xA0 : 1e13f5c >			  ## le_low_power.c:293:50
 1e13f4e:    11 80             	r1 += 1			  ## le_low_power.c:294:30
 1e13f50:    01 f2 04 30       	if (r1 < r0) goto 8 <__power_get_timeout.3531+0xA0 : 1e13f5c >			  ## le_low_power.c:294:30
 1e13f54:    e0 8f             	r0 += -2			  ## le_low_power.c:297:68
 1e13f56:    64 08             	r4 = r6			  ## le_low_power.c:297:42
 1e13f58:    80 fe 30 40       	r4 += r0 * r3			  ## le_low_power.c:297:42
 1e13f5c:    50 08             	r0 = r5			  ## le_low_power.c:304:20
 1e13f5e:    bf f3 84 f9       	call -3320 <__get_clkn : 1e1326a >			  ## le_low_power.c:304:20
 1e13f62:    02 3c             	if (r6 != 0) goto 4 <__power_get_timeout.3531+0xAC : 1e13f68 >
 1e13f64:    60 f2 b5 8f       	if (r0 > r6) goto -150 <__power_get_timeout.3531+0x16 : 1e13ed2 >
 1e13f68:    50 e0 0f 30       	if (r0 < 5) goto 30 <__power_get_timeout.3531+0xCE : 1e13f8a >
 1e13f6c:    00 f6 00 90       	r0 = [r9 + 0]			  ## le_low_power.c:316:9
 1e13f70:    21 f3 0b 00       	if ((r0 & 2) != 0) goto 22 <__power_get_timeout.3531+0xCE : 1e13f8a >
 1e13f74:    bf f3 97 f7       	call -4306 <check_event_pending : 1e12ea6 >			  ## le_low_power.c:316:32
 1e13f78:    08 30             	if (r0 != 0) goto 16 <__power_get_timeout.3531+0xCE : 1e13f8a >			  ## le_low_power.c:316:32
 1e13f7a:    00 fb 71 02       	r0 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## le_low_power.c:323:46
 1e13f7e:    20 0e             	r0 = r4 * r0			  ## le_low_power.c:323:46
 1e13f80:    00 fc 3c f6       	r0 = r0 + -2500			  ## le_low_power.c:323:46
 1e13f84:    44 e0 01 30       	if (r4 < 4) goto 2 <__power_get_timeout.3531+0xCE : 1e13f8a >			  ## le_low_power.c:323:46
 1e13f88:    08 08             	r8 = r0			  ## le_low_power.c:323:12
 1e13f8a:    80 08             	r0 = r8			  ## le_low_power.c:324:1
 1e13f8c:    5b 01             	{pc, r11-r4} = [sp++]			  ## le_low_power.c:324:1


__power_suspend_probe:
 1e13f8e:    34 00             	[--sp] = rets			  ## le_low_power.c:366:0
 1e13f90:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:366:0
 1e13f96:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:367:5
 1e13f98:    71 b1             	r1 &= 4294967291			  ## le_low_power.c:367:5
 1e13f9a:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:367:5
 1e13f9c:    00 f4 20 09       	[r0 + 0] |= 32			  ## le_low_power.c:368:5
 1e13fa0:    00 f4 01 09       	[r0 + 0] |= 1			  ## le_low_power.c:369:5
 1e13fa4:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:374:9
 1e13fa6:    08 f3 09 10       	if ((r1 & 256) == 0) goto 18 <__power_suspend_probe+0x2E : 1e13fbc >			  ## le_low_power.c:374:9
 1e13faa:    00 40             	r0 = [r0 + 0]
 1e13fac:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1E51DC : 1fffc00 >
 1e13fb0:    50 b3             	r0 &= r1
 1e13fb2:    20 ff 18 0a 02 00 	if (r0 == 6144) goto 4 <__power_suspend_probe+0x2E : 1e13fbc >
 1e13fb8:    8f f3 2d 7a       	call 2028634 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e13fbc:    30 00             	pc = [sp++]			  ## le_low_power.c:377:1


__power_suspend_post.3532:
 1e13fbe:    79 01             	[--sp] = {rets, r9-r4}			  ## le_low_power.c:381:0
 1e13fc0:    04 08             	r4 = r0			  ## le_low_power.c:381:0
 1e13fc2:    09 f6 00 40       	r9 = [r4 + 0]			  ## le_low_power.c:384:31
 1e13fc6:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e13fcc:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:387:12
 1e13fce:    03 f3 fd 2f       	if ((r2 & 8) == 0) goto -6 <__power_suspend_post.3532+0xE : 1e13fcc >			  ## le_low_power.c:387:5
 1e13fd2:    00 fc 34 7c       	r0 = r0 + 31796
 1e13fd6:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:389:12
 1e13fd8:    2b f3 fd 2f       	if ((r2 & 2048) != 0) goto -6 <__power_suspend_post.3532+0x18 : 1e13fd6 >			  ## le_low_power.c:389:5
 1e13fdc:    00 40             	r0 = [r0 + 0]			  ## le_low_power.c:391:24
 1e13fde:    02 fb ff 07       	r2 = 2047 <DRIVER_CODE_TOTAL+0x6D : 7ff >			  ## le_low_power.c:391:37
 1e13fe2:    50 b5             	r0 &= r2			  ## le_low_power.c:391:37
 1e13fe4:    c2 70             	r2 = 12			  ## le_low_power.c:391:46
 1e13fe6:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## le_low_power.c:391:46
 1e13fea:    10 09             	r0 += r1			  ## le_low_power.c:391:21
 1e13fec:    01 fb 71 02       	r1 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## le_low_power.c:392:25
 1e13ff0:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## le_low_power.c:392:25
 1e13ff4:    18 90             	r8 = r0 + 1			  ## le_low_power.c:392:40
 1e13ff6:    40 08             	r0 = r4			  ## le_low_power.c:396:16
 1e13ff8:    bf f3 37 f9       	call -3474 <__get_clkn : 1e1326a >			  ## le_low_power.c:396:16
 1e13ffc:    05 08             	r5 = r0			  ## le_low_power.c:396:16
 1e13ffe:    40 08             	r0 = r4			  ## le_low_power.c:400:9
 1e14000:    33 17             	call -410 <__get_latency_valid : 1e13e68 >			  ## le_low_power.c:400:9
 1e14002:    27 20             	if (r0 == 0) goto 78 <__power_suspend_post.3532+0x94 : 1e14052 >			  ## le_low_power.c:400:9
 1e14004:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e14006:    40 08             	r0 = r4			  ## le_low_power.c:72:18
 1e14008:    bf f3 1a f9       	call -3532 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:72:18
 1e1400c:    07 08             	r7 = r0			  ## le_low_power.c:72:18
 1e1400e:    40 08             	r0 = r4			  ## le_low_power.c:402:27
 1e14010:    43 17             	call -378 <__get_interval : 1e13e98 >			  ## le_low_power.c:402:27
 1e14012:    03 08             	r3 = r0			  ## le_low_power.c:402:27
 1e14014:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e14016:    40 08             	r0 = r4			  ## le_low_power.c:81:13
 1e14018:    bf f3 12 f9       	call -3548 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:81:13
 1e1401c:    06 08             	r6 = r0			  ## le_low_power.c:81:13
 1e1401e:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e14020:    40 08             	r0 = r4			  ## le_low_power.c:63:12
 1e14022:    bf f3 0d f9       	call -3558 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:63:12
 1e14026:    04 f9 5d 91       	r4 = b[r9 + 349] (u)			  ## le_low_power.c:410:18
 1e1402a:    89 fd 38 27       	r2 = uextra(r7, p:7, l:9)			  ## le_low_power.c:407:32
 1e1402e:    51 08             	r1 = r5			  ## le_low_power.c:407:30
 1e14030:    80 fe 30 12       	r1 += r2 * r3			  ## le_low_power.c:407:30
 1e14034:    0f 28             	if (r4 == 0) goto 30 <__power_suspend_post.3532+0x96 : 1e14054 >
 1e14036:    c4 ff ff ff 00 00 	r4 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1403c:    40 09             	r0 += r4			  ## le_low_power.c:63:40
 1e1403e:    20 bc             	r0 = r6 - r0			  ## le_low_power.c:411:50
 1e14040:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:411:50
 1e14042:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_suspend_post.3532+0x96 : 1e14054 >			  ## le_low_power.c:411:50
 1e14046:    12 80             	r2 += 1			  ## le_low_power.c:412:30
 1e14048:    02 f2 04 30       	if (r2 < r0) goto 8 <__power_suspend_post.3532+0x96 : 1e14054 >			  ## le_low_power.c:412:30
 1e1404c:    e0 8f             	r0 += -2			  ## le_low_power.c:415:68
 1e1404e:    80 fe 30 50       	r5 += r0 * r3			  ## le_low_power.c:415:42
 1e14052:    51 08             	r1 = r5
 1e14054:    81 f2 02 80       	if (r1 > r8) goto 4 <__power_suspend_post.3532+0x9E : 1e1405c >
 1e14058:    8f f3 dd 79       	call 2028474 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1405c:    59 01             	{pc, r9-r4} = [sp++]			  ## le_low_power.c:428:1


__set_ble_anchor_con:
 1e1405e:    c3 ff 1c 80 1c 00 	r3 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:262:0
 1e14064:    1a 46             	[r3 + 4] = r2			  ## RF_ble.c:263:21
 1e14066:    08 00             	csync			  ## RF_ble.c:264:5
 1e14068:    c2 ff e4 2f 00 00 	r2 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:134:19
 1e1406e:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:134:19
 1e14070:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:134:35
 1e14072:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:134:17
 1e14074:    c2 71             	r2 = 28			  ## RF_ble.c:134:17
 1e14076:    e0 fe 20 00       	r0 = r0 / r2 (s)			  ## RF_ble.c:134:17
 1e1407a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:265:50
 1e1407c:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:265:50
 1e14080:    89 c2             	r1 = r1 << 10			  ## RF_ble.c:265:30
 1e14082:    50 b2             	r0 |= r1			  ## RF_ble.c:265:67
 1e14084:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:265:67
 1e14088:    08 46             	[r3 + 0] = r0			  ## RF_ble.c:265:21
 1e1408a:    20 00             	rts			  ## RF_ble.c:266:1


__power_resume.3533:
 1e1408c:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_low_power.c:439:0
 1e1408e:    04 08             	r4 = r0			  ## le_low_power.c:439:0
 1e14090:    07 48             	r7 = [r4 + 0]			  ## le_low_power.c:442:31
 1e14092:    10 08             	r0 = r1			  ## le_low_power.c:446:16
 1e14094:    bf f3 a8 dd       	call -17584 <bt_get_fine_cnt : 1e0fbe8 >			  ## le_low_power.c:446:16
 1e14098:    c1 ff 7c 0f 00 00 	r1 = 3964 <ble_finetimecnt_poweroff_sfr : f7c >			  ## le_low_power.c:434:12
 1e1409e:    01 42             	r1 = [r1 + 0]			  ## le_low_power.c:434:12
 1e140a0:    09 b2             	r9 = r1 + r0			  ## le_low_power.c:448:14
 1e140a2:    40 08             	r0 = r4			  ## le_low_power.c:450:16
 1e140a4:    bf f3 e1 f8       	call -3646 <__get_clkn : 1e1326a >			  ## le_low_power.c:450:16
 1e140a8:    05 08             	r5 = r0			  ## le_low_power.c:450:16
 1e140aa:    02 3a             	if (r5 != 0) goto 4 <__power_resume.3533+0x24 : 1e140b0 >
 1e140ac:    8f f3 b3 79       	call 2028390 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e140b0:    00 fb 71 02       	r0 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >
 1e140b4:    c0 fe 00 69       	r6 = r9 / r0 (u)
 1e140b8:    40 08             	r0 = r4			  ## le_low_power.c:454:23
 1e140ba:    ee 16             	call -548 <__get_interval : 1e13e98 >			  ## le_low_power.c:454:23
 1e140bc:    01 f9 52 71       	r1 = b[r7 + 338] (u)			  ## le_low_power.c:474:31
 1e140c0:    71 e0 02 10       	if (r1 != 7) goto 4 <__power_resume.3533+0x3C : 1e140c8 >
 1e140c4:    d0 fe 00 66       	r6 = r6 % r0 (u)			  ## le_low_power.c:475:47
 1e140c8:    12 9c             	r2 = r6 + 1
 1e140ca:    25 f2 01 30       	if (r5 < r2) goto 2 <__power_resume.3533+0x44 : 1e140d0 >
 1e140ce:    00 70             	r0 = 0
 1e140d0:    27 b4             	r7 = r2 - r0			  ## le_low_power.c:479:9
 1e140d2:    c8 ff 38 80 1c 00 	r8 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e140d8:    17 f6 08 80       	[r8 + 8] = r7			  ## le_low_power.c:483:22
 1e140dc:    38 dc             	r0 = r7 >>> 16			  ## le_low_power.c:484:34
 1e140de:    10 f6 0c 80       	[r8 + 12] = r0			  ## le_low_power.c:484:22
 1e140e2:    06 fb 71 02       	r6 = 625 <BTCTLER_CONTROLLER_BSS_SIZE+0xB1 : 271 >			  ## le_low_power.c:485:32
 1e140e6:    d0 fe 60 09       	r0 = r9 % r6 (u)			  ## le_low_power.c:485:32
 1e140ea:    71 b0             	r1 &= 4294967294			  ## le_low_power.c:487:39
 1e140ec:    10 f6 04 80       	[r8 + 4] = r0			  ## le_low_power.c:485:21
 1e140f0:    61 e0 7b 10       	if (r1 != 6) goto 246 <__power_resume.3533+0x15E : 1e141ea >			  ## le_low_power.c:485:21
 1e140f4:    40 08             	r0 = r4			  ## le_low_power.c:130:23
 1e140f6:    d0 16             	call -608 <__get_interval : 1e13e98 >			  ## le_low_power.c:130:23
 1e140f8:    01 f6 10 80       	r1 = [r8 + 16]			  ## le_low_power.c:131:55
 1e140fc:    61 bc             	r1 = r6 - r1			  ## le_low_power.c:131:53
 1e140fe:    62 05             	r2 = r5.l (u)			  ## le_low_power.c:131:13
 1e14100:    80 fe 60 12       	r1 += r2 * r6			  ## le_low_power.c:131:37
 1e14104:    e2 bb             	r2 = r5 - r7			  ## le_low_power.c:133:25
 1e14106:    a2 04             	r2 = r2.l (u)			  ## le_low_power.c:133:10
 1e14108:    03 fc ff ff       	r3 = r0 + -1			  ## le_low_power.c:133:54
 1e1410c:    05 70             	r5 = 0			  ## le_low_power.c:133:54
 1e1410e:    32 f2 0a 10       	if (r2 != r3) goto 20 <__power_resume.3533+0x9A : 1e14126 >
 1e14112:    02 f6 10 80       	r2 = [r8 + 16]			  ## le_low_power.c:133:80
 1e14116:    03 f6 04 80       	r3 = [r8 + 4]			  ## le_low_power.c:133:98
 1e1411a:    32 09             	r2 += r3			  ## le_low_power.c:133:96
 1e1411c:    15 70             	r5 = 1			  ## le_low_power.c:133:77
 1e1411e:    03 ff 71 22 01 00 	if (r2 < 625) goto 2 <__power_resume.3533+0x9A : 1e14126 >
 1e14124:    05 70             	r5 = 0			  ## le_low_power.c:133:77
 1e14126:    19 f2 09 30       	if (r9 < r1) goto 18 <__power_resume.3533+0xB0 : 1e1413c >
 1e1412a:    90 fb 10 19       	r1 = r9 - r1			  ## le_low_power.c:144:25
 1e1412e:    62 08             	r2 = r6			  ## le_low_power.c:145:57
 1e14130:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## le_low_power.c:145:57
 1e14134:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## le_low_power.c:145:73
 1e14138:    50 09             	r0 += r5			  ## le_low_power.c:145:73
 1e1413a:    15 90             	r5 = r0 + 1			  ## le_low_power.c:145:87
 1e1413c:    40 08             	r0 = r4			  ## le_low_power.c:496:13
 1e1413e:    94 16             	call -728 <__get_latency_valid : 1e13e68 >			  ## le_low_power.c:496:13
 1e14140:    18 20             	if (r0 == 0) goto 48 <__power_resume.3533+0xE6 : 1e14172 >			  ## le_low_power.c:496:13
 1e14142:    61 70             	r1 = 6			  ## le_low_power.c:157:18
 1e14144:    40 08             	r0 = r4			  ## le_low_power.c:157:18
 1e14146:    bf f3 7b f8       	call -3850 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:157:18
 1e1414a:    85 fd 40 10       	r1 = uextra(r0, p:8, l:5)			  ## le_low_power.c:162:87
 1e1414e:    22 fd 3f 09       	r2 = r0 & 63			  ## le_low_power.c:162:40
 1e14152:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:162:57
 1e14154:    80 fe a0 21       	r2 += r1 * r10			  ## le_low_power.c:162:54
 1e14158:    51 72             	r1 = 37			  ## le_low_power.c:162:97
 1e1415a:    d0 fe 10 12       	r1 = r2 % r1 (u)			  ## le_low_power.c:162:97
 1e1415e:    c2 ff c0 ff 00 00 	r2 = 65472 <_IRQ_MEM_ADDR+0xC0 : ffc0 >			  ## le_low_power.c:162:28
 1e14164:    50 b5             	r0 &= r2			  ## le_low_power.c:162:28
 1e14166:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:162:28
 1e1416a:    61 70             	r1 = 6			  ## le_low_power.c:164:5
 1e1416c:    40 08             	r0 = r4			  ## le_low_power.c:164:5
 1e1416e:    77 17             	call -274 <__set_ble_anchor_con : 1e1405e >			  ## le_low_power.c:164:5
 1e14170:    01 18             	goto 2 <__power_resume.3533+0xE8 : 1e14174 >			  ## le_low_power.c:164:5
 1e14172:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:178:33
 1e14174:    09 f6 00 40       	r9 = [r4 + 0]			  ## le_low_power.c:171:31
 1e14178:    91 70             	r1 = 9			  ## le_low_power.c:177:18
 1e1417a:    40 08             	r0 = r4			  ## le_low_power.c:177:18
 1e1417c:    bf f3 60 f8       	call -3904 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:177:18
 1e14180:    05 08             	r5 = r0			  ## le_low_power.c:177:18
 1e14182:    89 fd 38 05       	r0 = uextra(r5, p:7, l:9)			  ## le_low_power.c:178:9
 1e14186:    a0 f2 03 20       	if (r0 >= r10) goto 6 <__power_resume.3533+0x104 : 1e14190 >			  ## le_low_power.c:178:9
 1e1418a:    01 f7 58 91       	r1 = h[r9 + 344] (u)			  ## le_low_power.c:181:32
 1e1418e:    10 09             	r0 += r1			  ## le_low_power.c:181:45
 1e14190:    90 fb a0 70       	r7 = r0 - r10
 1e14194:    21 70             	r1 = 2			  ## le_low_power.c:185:18
 1e14196:    40 08             	r0 = r4			  ## le_low_power.c:185:18
 1e14198:    bf f3 52 f8       	call -3932 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:185:18
 1e1419c:    06 08             	r6 = r0			  ## le_low_power.c:185:18
 1e1419e:    00 fb ff 01       	r0 = 511 <BTCTLER_CONTROLLER_BSS_SIZE+0x3F : 1ff >			  ## le_low_power.c:187:31
 1e141a2:    50 bf             	r0 &= r7			  ## le_low_power.c:187:31
 1e141a4:    21 fd fe 6a       	r1 = r6 & 65024			  ## le_low_power.c:187:31
 1e141a8:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:187:31
 1e141ac:    21 70             	r1 = 2			  ## le_low_power.c:189:5
 1e141ae:    40 08             	r0 = r4			  ## le_low_power.c:189:5
 1e141b0:    56 17             	call -340 <__set_ble_anchor_con : 1e1405e >			  ## le_low_power.c:189:5
 1e141b2:    f8 c1             	r0 = r7 << 7			  ## le_low_power.c:189:5
 1e141b4:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:197:33
 1e141b6:    21 fd 3f 59       	r1 = r5 & 63			  ## le_low_power.c:197:33
 1e141ba:    50 b2             	r0 |= r1			  ## le_low_power.c:197:33
 1e141bc:    02 fd 40 09       	r2 = r0 | 64			  ## le_low_power.c:197:33
 1e141c0:    91 70             	r1 = 9			  ## le_low_power.c:197:5
 1e141c2:    40 08             	r0 = r4			  ## le_low_power.c:197:5
 1e141c4:    4c 17             	call -360 <__set_ble_anchor_con : 1e1405e >			  ## le_low_power.c:197:5
 1e141c6:    00 f7 58 91       	r0 = h[r9 + 344] (u)			  ## le_low_power.c:202:38
 1e141ca:    c9 fd 00 60       	r6 <= insert(r0, p:0, l:9)			  ## le_low_power.c:202:31
 1e141ce:    a2 05             	r2 = r6.l (u)			  ## le_low_power.c:206:33
 1e141d0:    21 70             	r1 = 2			  ## le_low_power.c:206:5
 1e141d2:    40 08             	r0 = r4			  ## le_low_power.c:206:5
 1e141d4:    44 17             	call -376 <__set_ble_anchor_con : 1e1405e >			  ## le_low_power.c:206:5
 1e141d6:    31 70             	r1 = 3			  ## le_low_power.c:221:24
 1e141d8:    40 08             	r0 = r4			  ## le_low_power.c:221:24
 1e141da:    bf f3 31 f8       	call -3998 <__get_ble_anchor_con : 1e13240 >			  ## le_low_power.c:221:24
 1e141de:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:226:33
 1e141e0:    80 fb a0 20       	r2 = r0 + r10			  ## le_low_power.c:226:50
 1e141e4:    31 70             	r1 = 3			  ## le_low_power.c:226:5
 1e141e6:    40 08             	r0 = r4			  ## le_low_power.c:226:5
 1e141e8:    3a 17             	call -396 <__set_ble_anchor_con : 1e1405e >			  ## le_low_power.c:226:5
 1e141ea:    00 f4 04 89       	[r8 + 0] |= 4			  ## le_low_power.c:507:5
 1e141ee:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_low_power.c:508:1


__power_resume_post:
 1e141f0:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:511:0
 1e141f2:    c4 ff 38 80 1c 00 	r4 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:511:0
 1e141f8:    01 48             	r1 = [r4 + 0]			  ## le_low_power.c:519:12
 1e141fa:    23 f3 fd 1f       	if ((r1 & 8) != 0) goto -6 <__power_resume_post+0x8 : 1e141f8 >			  ## le_low_power.c:519:5
 1e141fe:    bf f3 34 f8       	call -3992 <__get_clkn : 1e1326a >			  ## le_low_power.c:521:16
 1e14202:    00 48             	r0 = [r4 + 0]			  ## le_low_power.c:524:9
 1e14204:    10 04             	r0 = r0.b0 (s)			  ## le_low_power.c:524:9
 1e14206:    f0 ef 04 c0       	ifs (r0 > -1) goto 8 <__power_resume_post+0x22 : 1e14212 >			  ## le_low_power.c:524:9
 1e1420a:    40 fc 38 7c       	r0 = r4 + 31800			  ## le_low_power.c:525:19
 1e1420e:    00 f4 02 09       	[r0 + 0] |= 2			  ## le_low_power.c:525:19
 1e14212:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:529:1


le_hw_init:
 1e14214:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:4270:0
 1e14216:    c7 ff 80 fc 1c 00 	r7 = 1899648 <uECC_vli_cmp_unsafe+0xC8C84 : 1cfc80 >			  ## RF_ble.c:4270:0
 1e1421c:    00 f4 01 79       	[r7 + 0] |= 1			  ## RF_ble.c:4273:16
 1e14220:    20 fb 64 64       	r6 = 1867776			  ## RF_ble.c:4273:16
 1e14224:    c0 f4 01 69       	[r6 + 0] = 1			  ## RF_ble.c:4275:15
 1e14228:    00 fb 01 13       	r0 = 4865 <UPDATE_CODE_TOTAL_SIZE+0xBF : 1301 >			  ## RF_ble.c:4278:17
 1e1422c:    d8 4c             	[r6 + 52] = r0			  ## RF_ble.c:4278:17
 1e1422e:    00 fb 68 0f       	r0 = 3944 <config_hci_ll_param.0 : f68 >			  ## RF_ble.c:4246:14
 1e14232:    bf f3 b5 bb       	call -34966 <malloc : 1e0b9a0 >			  ## RF_ble.c:4246:14
 1e14236:    04 08             	r4 = r0			  ## RF_ble.c:4246:14
 1e14238:    c0 ff e4 2f 00 00 	r0 = 12260 <bb_hdl : 2fe4 >			  ## RF_ble.c:4246:12
 1e1423e:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:4246:12
 1e14240:    02 38             	if (r4 != 0) goto 4 <le_hw_init+0x32 : 1e14246 >			  ## RF_ble.c:4246:12
 1e14242:    8f f3 e8 78       	call 2027984 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14246:    01 70             	r1 = 0			  ## RF_ble.c:4248:5
 1e14248:    02 fb 68 0f       	r2 = 3944 <config_hci_ll_param.0 : f68 >			  ## RF_ble.c:4248:5
 1e1424c:    40 08             	r0 = r4			  ## RF_ble.c:4248:5
 1e1424e:    97 f3 4f 96       	call 3091614 <memset : 106ef0 >			  ## RF_ble.c:4248:5
 1e14252:    40 fc 24 00       	r0 = r4 + 36			  ## RF_ble.c:4250:58
 1e14256:    48 48             	[r4 + 16] = r0			  ## RF_ble.c:4250:24
 1e14258:    40 fc 40 00       	r0 = r4 + 64			  ## RF_ble.c:4251:69
 1e1425c:    58 48             	[r4 + 20] = r0			  ## RF_ble.c:4251:31
 1e1425e:    40 fc a0 02       	r0 = r4 + 672			  ## RF_ble.c:4252:51
 1e14262:    68 48             	[r4 + 24] = r0			  ## RF_ble.c:4252:28
 1e14264:    45 fc 7d 08       	r5 = r4 + 2173			  ## RF_ble.c:4253:51
 1e14268:    7d 48             	[r4 + 28] = r5			  ## RF_ble.c:4253:28
 1e1426a:    1c 4e             	[r7 + 4] = r4			  ## RF_ble.c:4261:19
 1e1426c:    41 fc 68 0f       	r1 = r4 + 3944			  ## RF_ble.c:4263:45
 1e14270:    09 4f             	[r7 + 64] = r1			  ## RF_ble.c:4263:19
 1e14272:    01 fb dd 05       	r1 = 1501 <BTCTLER_CONTROLLER_DATA_SIZE+0x121 : 5dd >			  ## hw_dma.c:34:18
 1e14276:    bf f3 ad 8c       	call -59046 <lbuf_init_btctrler : 1e05bd4 >			  ## hw_dma.c:34:18
 1e1427a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## hw_dma.c:36:16
 1e14280:    10 f6 f0 40       	[r4 + 240] = r0			  ## hw_dma.c:34:16
 1e14284:    01 fb eb 06       	r1 = 1771 <BTCTLER_COMMON_RAM_TOTAL+0x6F : 6eb >			  ## hw_dma.c:36:18
 1e14288:    50 08             	r0 = r5			  ## hw_dma.c:36:18
 1e1428a:    bf f3 a3 8c       	call -59066 <lbuf_init_btctrler : 1e05bd4 >			  ## hw_dma.c:36:18
 1e1428e:    10 f6 f4 40       	[r4 + 244] = r0			  ## hw_dma.c:36:16
 1e14292:    c2 ff 84 32 e1 01 	r2 = 31535748 <ble_event_irq_handler : 1e13284 >			  ## RF_ble.c:4282:5
 1e14298:    70 72             	r0 = 39			  ## RF_ble.c:4282:5
 1e1429a:    21 70             	r1 = 2			  ## RF_ble.c:4282:5
 1e1429c:    bf f3 37 bc       	call -34706 <request_irq : 1e0bb0e >			  ## RF_ble.c:4282:5
 1e142a0:    c2 ff 98 3d e1 01 	r2 = 31538584 <ble_rx_irq_handler : 1e13d98 >			  ## RF_ble.c:4283:5
 1e142a6:    60 72             	r0 = 38			  ## RF_ble.c:4283:5
 1e142a8:    21 70             	r1 = 2			  ## RF_ble.c:4283:5
 1e142aa:    bf f3 30 bc       	call -34720 <request_irq : 1e0bb0e >			  ## RF_ble.c:4283:5
 1e142ae:    00 f4 20 6a       	[r6 + 0] |= 8192			  ## RF_ble.c:1515:5
 1e142b2:    00 f4 40 6a       	[r6 + 0] |= 16384			  ## RF_ble.c:1516:5
 1e142b6:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:1517:5
 1e142b8:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1517:5
 1e142ba:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:1517:5
 1e142bc:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:1529:5
 1e142be:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1E51DC : 1fffc00 >			  ## RF_ble.c:1529:5
 1e142c2:    50 b3             	r0 &= r1			  ## RF_ble.c:1529:5
 1e142c4:    00 fd 78 09       	r0 = r0 | 120			  ## RF_ble.c:1529:5
 1e142c8:    28 4c             	[r6 + 8] = r0			  ## RF_ble.c:1529:5
 1e142ca:    02 f4 f0 6a       	[r6 + 8] |= 61440			  ## RF_ble.c:1530:5
 1e142ce:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:1531:5
 1e142d0:    50 b3             	r0 &= r1			  ## RF_ble.c:1531:5
 1e142d2:    00 fd 64 09       	r0 = r0 | 100			  ## RF_ble.c:1531:5
 1e142d6:    38 4c             	[r6 + 12] = r0			  ## RF_ble.c:1531:5
 1e142d8:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1534:5
 1e142da:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1534:5
 1e142de:    00 fd 5a 09       	r0 = r0 | 90			  ## RF_ble.c:1534:5
 1e142e2:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1534:5
 1e142e4:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1535:5
 1e142e6:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1535:5
 1e142ea:    00 fd 78 0a       	r0 = r0 | 30720			  ## RF_ble.c:1535:5
 1e142ee:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1535:5
 1e142f0:    50 4c             	r0 = [r6 + 20]			  ## RF_ble.c:1538:5
 1e142f2:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1538:5
 1e142f6:    00 fd 1e 09       	r0 = r0 | 30			  ## RF_ble.c:1538:5
 1e142fa:    58 4c             	[r6 + 20] = r0			  ## RF_ble.c:1538:5
 1e142fc:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1541:5
 1e142fe:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1541:5
 1e14302:    00 fd 0a 09       	r0 = r0 | 10			  ## RF_ble.c:1541:5
 1e14306:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1541:5
 1e14308:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1542:5
 1e1430a:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1542:5
 1e1430e:    00 fd 0a 0a       	r0 = r0 | 2560			  ## RF_ble.c:1542:5
 1e14312:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1542:5
 1e14314:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:4286:1


le_hw_send_packet:
 1e14316:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:3828:0
 1e14318:    04 08             	r4 = r0			  ## RF_ble.c:3828:0
 1e1431a:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:3829:34
 1e1431c:    00 f7 ea 61       	r0 = h[r6 + 490] (u)
 1e14320:    77 02             	r7 = [sp+28]
 1e14322:    35 08             	r5 = r3
 1e14324:    28 08             	r8 = r2
 1e14326:    19 08             	r9 = r1
 1e14328:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet+0x1A : 1e14330 >
 1e1432c:    8f f3 73 78       	call 2027750 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14330:    70 08             	r0 = r7			  ## RF_ble.c:3832:27
 1e14332:    bf f3 eb f4       	call -5674 <hw_alloc_tx : 1e12d0c >			  ## RF_ble.c:3832:27
 1e14336:    07 08             	r7 = r0			  ## RF_ble.c:3832:27
 1e14338:    03 3e             	if (r7 != 0) goto 6 <le_hw_send_packet+0x2A : 1e14340 >
 1e1433a:    8f f3 6c 78       	call 2027736 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1433e:    07 70             	r7 = 0			  ## cpu.h:148:5
 1e14340:    00 70             	r0 = 0
 1e14342:    38 4e             	[r7 + 12] = r0			  ## RF_ble.c:3837:25
 1e14344:    28 4e             	[r7 + 8] = r0			  ## RF_ble.c:3837:25
 1e14346:    18 4e             	[r7 + 4] = r0			  ## RF_ble.c:3837:25
 1e14348:    08 4e             	[r7 + 0] = r0			  ## RF_ble.c:3837:25
 1e1434a:    f0 fd 20 09       	r0 = r9 << 4			  ## RF_ble.c:3839:5
 1e1434e:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:3839:5
 1e14352:    68 5e             	h[r7 + 12] = r0			  ## RF_ble.c:3839:5
 1e14354:    ed 6e             	b[r7 + 14] = r5			  ## RF_ble.c:3840:5
 1e14356:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <le_hw_send_packet+0x4A : 1e14360 >			  ## RF_ble.c:3840:5
 1e1435c:    8f f3 5b 78       	call 2027702 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14360:    00 9f             	r0 = r7 + 16			  ## RF_ble.c:3846:5
 1e14362:    81 08             	r1 = r8			  ## RF_ble.c:3846:5
 1e14364:    52 08             	r2 = r5			  ## RF_ble.c:3846:5
 1e14366:    97 f3 bd 95       	call 3091322 <memcpy : 106ee4 >			  ## RF_ble.c:3846:5
 1e1436a:    65 fc 46 01       	r5 = r6 + 326			  ## RF_ble.c:3846:5
 1e1436e:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:3850:22
 1e14372:    71 08             	r1 = r7			  ## RF_ble.c:3850:5
 1e14374:    bf f3 5a 8b       	call -59724 <hw_dma_push : 1e05a2c >			  ## RF_ble.c:3850:5
 1e14378:    00 5a             	r0 = h[r5 + 0] (u)
 1e1437a:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:823:23
 1e1437e:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:823:23
 1e14382:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:823:23
 1e14384:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet+0x7C : 1e14392 >			  ## RF_ble.c:823:23
 1e14388:    c0 71             	r0 = 28			  ## RF_ble.c:827:28
 1e1438a:    10 f7 60 60       	h[r6 + 96] = r0			  ## RF_ble.c:827:28
 1e1438e:    10 f7 5e 60       	h[r6 + 94] = r0			  ## RF_ble.c:828:28
 1e14392:    40 08             	r0 = r4			  ## RF_ble.c:3854:5
 1e14394:    99 14             	call -1742 <__hw_tx_process : 1e13cc8 >			  ## RF_ble.c:3854:5
 1e14396:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:365:17
 1e14398:    20 e0 02 80       	if (r0 > 2) goto 4 <le_hw_send_packet+0x8A : 1e143a0 >			  ## RF_ble.c:365:17
 1e1439c:    30 70             	r0 = 3
 1e1439e:    a8 5a             	h[r5 + 20] = r0
 1e143a0:    40 08             	r0 = r4			  ## RF_ble.c:3859:5
 1e143a2:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:3859:5
 1e143a4:    ff f3 21 f3       	goto -6590 <ble_latency_manualhold : 1e129ea >			  ## RF_ble.c:3859:5


ble_rx_update_handle_register:
 1e143a8:    c1 ff 70 0f 00 00 	r1 = 3952 <rx_update_handle : f70 >			  ## RF_ble.c:2355:0
 1e143ae:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:2363:22
 1e143b0:    20 00             	rts			  ## RF_ble.c:2364:1
 1e143b2:    00 00             	nop


master_sca:
 1e143b4:    f4 01             	[--sp] = {psr, sr4, retx}
 1e143b6:    fa 00             	flushinv [r10]
 1e143b8:    96 00             	goto r6
 1e143ba:    64 00             	cli r4
 1e143bc:    4b 00             	testset b[r11]
 1e143be:    32 00             	pc = [sp++]
 1e143c0:    1e 00             	sti
 1e143c2:    14 00             	lockset


conn_handler:
 1e143c4:    b6 47             	r6 = [r3 + 108]
 1e143c6:    e1 01             	[--sp] = {psr, reti}
 1e143c8:    00 00             	nop
 1e143ca:    00 00             	nop
 1e143cc:    66 48             	r6 = [r4 + 24]
 1e143ce:    e1 01             	[--sp] = {psr, reti}
 1e143d0:    a8 48             	[r4 + 40] = r0
 1e143d2:    e1 01             	[--sp] = {psr, reti}
 1e143d4:    00 00             	nop
 1e143d6:    00 00             	nop


master_features_exchange_steps:
 1e143d8:    08 00             	csync
 1e143da:    09 40             	[r0 + 0] = r1
 1e143dc:    ff 06             	r15 = -17


disconnect_steps:
 1e143de:    02 00             	idle
 1e143e0:    00 80             	r0 += 0
 1e143e2:    ff 0e             	r7 = r7 * r3


version_ind_steps:
 1e143e4:    0c 00             	syscall
 1e143e6:    0c 40             	[r0 + 0] = r4
 1e143e8:    ff 08             	r15 = r15


restart_encryption_steps:
 1e143ea:    0a 00             	ssync
 1e143ec:    0b 40             	[r0 + 0] = r3
 1e143ee:    0b 00             	ssync
 1e143f0:    00 80             	r0 += 0
 1e143f2:    03 00             	idle
 1e143f4:    04 40             	r4 = [r0 + 0]
 1e143f6:    05 40             	r5 = [r0 + 0]
 1e143f8:    06 00             	hbkpt
 1e143fa:    06 40             	r6 = [r0 + 0]
 1e143fc:    ff 0a             	sp += 508


start_encryption_steps:
 1e143fe:    03 00             	idle
 1e14400:    04 40             	r4 = [r0 + 0]
 1e14402:    05 40             	r5 = [r0 + 0]
 1e14404:    06 00             	hbkpt
 1e14406:    06 40             	r6 = [r0 + 0]
 1e14408:    ff 09             	r15 += r15


restart_encryption_req_steps:
 1e1440a:    05 00             	bkpt
 1e1440c:    06 40             	r6 = [r0 + 0]
 1e1440e:    06 00             	hbkpt
 1e14410:    ff 0c             	r15 >>>= r3


start_encryption_req_steps:
 1e14412:    05 00             	bkpt
 1e14414:    06 40             	r6 = [r0 + 0]
 1e14416:    06 00             	hbkpt
 1e14418:    ff 0b             	sp += -4
 1e1441a:    00 00             	nop


adv_handler:
 1e1441c:    d4 5a             	r4 = h[r5 + 26] (u)
 1e1441e:    e1 01             	[--sp] = {psr, reti}
 1e14420:    00 00             	nop
 1e14422:    00 00             	nop
 1e14424:    00 00             	nop
 1e14426:    00 00             	nop
 1e14428:    00 00             	nop
 1e1442a:    00 00             	nop
 1e1442c:    00 00             	nop
 1e1442e:    00 00             	nop


ll_adv_close:
 1e14430:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:843:0
 1e14432:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:843:0
 1e14438:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:849:9
 1e1443a:    17 20             	if (r0 == 0) goto 46 <ll_adv_close+0x3A : 1e1446a >			  ## ll_adv.c:849:9
 1e1443c:    14 40             	r4 = [r0 + 4]			  ## ll_adv.c:855:44
 1e1443e:    15 28             	if (r4 == 0) goto 42 <ll_adv_close+0x3A : 1e1446a >
 1e14440:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:865:19
 1e14442:    02 20             	if (r0 == 0) goto 4 <ll_adv_close+0x18 : 1e14448 >			  ## ll_adv.c:865:19
 1e14444:    bf f3 e9 ec       	call -9774 <le_hw_close : 1e11e1a >			  ## ll_adv.c:866:9
 1e14448:    50 48             	r0 = [r4 + 20]			  ## ll_adv.c:92:19
 1e1444a:    04 20             	if (r0 == 0) goto 8 <ll_adv_close+0x24 : 1e14454 >			  ## ll_adv.c:92:19
 1e1444c:    bf f3 4f 68       	call -77666 <sys_timer_remove : 1e014ee >			  ## ll_adv.c:93:9
 1e14450:    c5 f4 00 49       	[r4 + 20] = 0			  ## ll_adv.c:94:27
 1e14454:    40 08             	r0 = r4			  ## ll_adv.c:871:5
 1e14456:    bf f3 4d 68       	call -77670 <__bt_free : 1e014f4 >			  ## ll_adv.c:871:5
 1e1445a:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:873:5
 1e1445c:    04 70             	r4 = 0			  ## ll_adv.c:873:5
 1e1445e:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:873:22
 1e14460:    0c 60             	b[r0 + 0] = r4			  ## ll_adv.c:875:20
 1e14462:    03 20             	if (r0 == 0) goto 6 <ll_adv_close+0x3A : 1e1446a >			  ## ll_adv.c:875:20
 1e14464:    bf f3 46 68       	call -77684 <__bt_free : 1e014f4 >			  ## ll_adv.c:70:9
 1e14468:    0c 4a             	[r5 + 0] = r4			  ## ll_adv.c:71:16
 1e1446a:    55 01             	{pc, r5, r4} = [sp++]


ll_response_timeout_stop:
 1e1446c:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1367:0
 1e1446e:    04 08             	r4 = r0			  ## link_layer.c:1367:0
 1e14470:    00 f6 4c 41       	r0 = [r4 + 332]			  ## link_layer.c:1368:15
 1e14474:    05 20             	if (r0 == 0) goto 10 <ll_response_timeout_stop+0x14 : 1e14480 >			  ## link_layer.c:1368:15
 1e14476:    bf f3 3a 68       	call -77708 <sys_timer_remove : 1e014ee >			  ## link_layer.c:1369:9
 1e1447a:    00 70             	r0 = 0			  ## link_layer.c:1370:32
 1e1447c:    10 f6 4c 41       	[r4 + 332] = r0			  ## link_layer.c:1370:32
 1e14480:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1372:1


ll_supervision_timeout_stop:
 1e14482:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1193:0
 1e14484:    04 08             	r4 = r0			  ## link_layer.c:1193:0
 1e14486:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1194:15
 1e1448a:    05 20             	if (r0 == 0) goto 10 <ll_supervision_timeout_stop+0x14 : 1e14496 >			  ## link_layer.c:1194:15
 1e1448c:    bf f3 2f 68       	call -77730 <sys_timer_remove : 1e014ee >			  ## link_layer.c:1195:9
 1e14490:    00 70             	r0 = 0			  ## link_layer.c:1196:35
 1e14492:    10 f6 50 41       	[r4 + 336] = r0			  ## link_layer.c:1196:35
 1e14496:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1198:1


ll_close_conn_link:
 1e14498:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:893:0
 1e1449a:    04 08             	r4 = r0			  ## link_layer.c:893:0
 1e1449c:    45 fc f8 00       	r5 = r4 + 248			  ## link_layer.c:893:0
 1e144a0:    f0 4a             	r0 = [r5 + 60]			  ## link_layer.c:234:5
 1e144a2:    56 fc 3c 00       	r6 = r5 + 60			  ## link_layer.c:234:5
 1e144a6:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x2A : 1e144c2 >			  ## link_layer.c:234:5
 1e144aa:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e144ac:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e144ae:    07 40             	r7 = [r0 + 0]
 1e144b0:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e144b2:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e144b4:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e144b6:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e144b8:    bf f3 1c 68       	call -77768 <__bt_free : 1e014f4 >			  ## link_layer.c:236:9
 1e144bc:    70 08             	r0 = r7
 1e144be:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x12 : 1e144aa >
 1e144c2:    10 4b             	r0 = [r5 + 68]			  ## link_layer.c:199:5
 1e144c4:    56 fc 44 00       	r6 = r5 + 68			  ## link_layer.c:199:5
 1e144c8:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x4C : 1e144e4 >			  ## link_layer.c:199:5
 1e144cc:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e144ce:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e144d0:    07 40             	r7 = [r0 + 0]
 1e144d2:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e144d4:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e144d6:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e144d8:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e144da:    bf f3 0b 68       	call -77802 <__bt_free : 1e014f4 >			  ## link_layer.c:201:9
 1e144de:    70 08             	r0 = r7
 1e144e0:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x34 : 1e144cc >
 1e144e4:    30 4b             	r0 = [r5 + 76]			  ## link_layer.c:319:5
 1e144e6:    56 fc 4c 00       	r6 = r5 + 76			  ## link_layer.c:319:5
 1e144ea:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x6E : 1e14506 >			  ## link_layer.c:319:5
 1e144ee:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e144f0:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e144f2:    07 40             	r7 = [r0 + 0]
 1e144f4:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e144f6:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e144f8:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e144fa:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e144fc:    bf f3 fa 67       	call -77836 <__bt_free : 1e014f4 >			  ## link_layer.c:321:9
 1e14500:    70 08             	r0 = r7
 1e14502:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x56 : 1e144ee >
 1e14506:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:1105:5
 1e14508:    c6 9a             	r6 = r5 + 12			  ## link_layer.c:1105:5
 1e1450a:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x8E : 1e14526 >			  ## link_layer.c:1105:5
 1e1450e:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e14510:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e14512:    07 40             	r7 = [r0 + 0]
 1e14514:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e14516:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e14518:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e1451a:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e1451c:    bf f3 ea 67       	call -77868 <__bt_free : 1e014f4 >			  ## link_layer.c:1107:9
 1e14520:    70 08             	r0 = r7
 1e14522:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x76 : 1e1450e >
 1e14526:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:916:15
 1e14528:    02 20             	if (r0 == 0) goto 4 <ll_close_conn_link+0x96 : 1e1452e >			  ## link_layer.c:916:15
 1e1452a:    bf f3 76 ec       	call -10004 <le_hw_close : 1e11e1a >			  ## link_layer.c:917:9
 1e1452e:    d0 48             	r0 = [r4 + 52]			  ## list.h:171:36
 1e14530:    e1 48             	r1 = [r4 + 56]			  ## list.h:171:23
 1e14532:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e14534:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e14536:    40 fc 34 00       	r0 = r4 + 52			  ## link_layer.c:923:21
 1e1453a:    d8 48             	[r4 + 52] = r0			  ## list.h:172:17
 1e1453c:    e8 48             	[r4 + 56] = r0			  ## list.h:173:17
 1e1453e:    00 5a             	r0 = h[r5 + 0] (u)			  ## link_layer.c:925:28
 1e14540:    c1 ff 60 2d 00 00 	r1 = 11616 <ll_hdl : 2d60 >			  ## link_layer.c:927:19
 1e14546:    02 53             	r2 = h[r1 + 32] (u)			  ## link_layer.c:788:20
 1e14548:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:788:24
 1e1454c:    13 70             	r3 = 1			  ## link_layer.c:788:24
 1e1454e:    f8 fd 00 03       	r0 = r3 << r0			  ## link_layer.c:788:24
 1e14552:    e3 fd 00 02       	r0 = r2 & ~r0			  ## link_layer.c:788:20
 1e14556:    08 53             	h[r1 + 32] = r0			  ## link_layer.c:788:20
 1e14558:    00 f9 22 10       	r0 = b[r1 + 34] (u)			  ## link_layer.c:927:19
 1e1455c:    f0 8f             	r0 += -1			  ## link_layer.c:927:19
 1e1455e:    10 f9 22 10       	b[r1 + 34] = r0			  ## link_layer.c:927:19
 1e14562:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:929:25
 1e14566:    01 70             	r1 = 0			  ## link_layer.c:929:5
 1e14568:    97 f3 5a 94       	call 3090612 <os_mutex_del : 106e20 >			  ## link_layer.c:929:5
 1e1456c:    40 08             	r0 = r4			  ## link_layer.c:931:5
 1e1456e:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:931:5
 1e14570:    ff f3 c0 67       	goto -77952 <__bt_free : 1e014f4 >			  ## link_layer.c:931:5


ll_delete_link:
 1e14574:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:935:0
 1e14576:    04 08             	r4 = r0			  ## link_layer.c:935:0
 1e14578:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:938:26
 1e1457c:    01 70             	r1 = 0			  ## link_layer.c:938:5
 1e1457e:    05 70             	r5 = 0			  ## link_layer.c:938:5
 1e14580:    97 f3 50 94       	call 3090592 <os_mutex_pend : 106e24 >			  ## link_layer.c:938:5
 1e14584:    40 08             	r0 = r4			  ## link_layer.c:940:5
 1e14586:    72 17             	call -284 <ll_response_timeout_stop : 1e1446c >			  ## link_layer.c:940:5
 1e14588:    40 08             	r0 = r4			  ## link_layer.c:942:5
 1e1458a:    7b 17             	call -266 <ll_supervision_timeout_stop : 1e14482 >			  ## link_layer.c:942:5
 1e1458c:    40 fc 98 00       	r0 = r4 + 152
 1e14590:    4d 51             	h[r0 + 40] = r5			  ## link_layer.c:710:19
 1e14592:    4d 60             	b[r0 + 4] = r5			  ## link_layer.c:712:5
 1e14594:    0d 40             	[r0 + 0] = r5			  ## link_layer.c:712:5
 1e14596:    40 08             	r0 = r4			  ## link_layer.c:948:5
 1e14598:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:948:5
 1e1459a:    7e 1f             	goto -260 <ll_close_conn_link : 1e14498 >			  ## link_layer.c:948:5


ll_destroy:
 1e1459c:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3219:0
 1e1459e:    48 17             	call -368 <ll_adv_close : 1e14430 >			  ## link_layer.c:3230:5
 1e145a0:    c4 ff 60 2d 00 00 	r4 = 11616 <ll_hdl : 2d60 >			  ## link_layer.c:3230:5
 1e145a6:    00 f9 22 40       	r0 = b[r4 + 34] (u)			  ## link_layer.c:3239:17
 1e145aa:    0b 20             	if (r0 == 0) goto 22 <ll_destroy+0x26 : 1e145c2 >			  ## link_layer.c:3239:17
 1e145ac:    90 48             	r0 = [r4 + 36]			  ## link_layer.c:3241:9
 1e145ae:    45 fc 24 00       	r5 = r4 + 36			  ## link_layer.c:3241:9
 1e145b2:    50 f2 06 00       	if (r0 == r5) goto 12 <ll_destroy+0x26 : 1e145c2 >			  ## link_layer.c:3241:9
 1e145b6:    46 f6 cc 0f       	r6 = [r0 ++= -52]
 1e145ba:    dc 17             	call -72 <ll_delete_link : 1e14574 >			  ## link_layer.c:3243:13
 1e145bc:    60 08             	r0 = r6			  ## link_layer.c:3243:13
 1e145be:    56 f2 fa 1f       	if (r6 != r5) goto -12 <ll_destroy+0x1A : 1e145b6 >			  ## link_layer.c:3243:13
 1e145c2:    60 48             	r0 = [r4 + 24]			  ## link_layer.c:3248:24
 1e145c4:    03 20             	if (r0 == 0) goto 6 <ll_destroy+0x30 : 1e145cc >			  ## link_layer.c:3248:24
 1e145c6:    80 98             	r0 = r4 + 8			  ## link_layer.c:3249:9
 1e145c8:    bf f3 99 67       	call -78030 <thread_delete : 1e014fe >			  ## link_layer.c:3249:9
 1e145cc:    bf f3 86 ec       	call -9972 <le_hw_destroy : 1e11edc >			  ## link_layer.c:3253:5
 1e145d0:    10 48             	r0 = [r4 + 4]			  ## link_layer.c:3256:17
 1e145d2:    02 20             	if (r0 == 0) goto 4 <ll_destroy+0x3C : 1e145d8 >			  ## link_layer.c:3256:17
 1e145d4:    bf f3 a5 67       	call -78006 <lbuf_clear_btctrler : 1e01522 >			  ## link_layer.c:3257:9
 1e145d8:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3265:1


__rx_oneshot_add:
 1e145da:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:207:0
 1e145dc:    04 08             	r4 = r0			  ## link_layer.c:207:0
 1e145de:    c0 70             	r0 = 12			  ## link_layer.c:208:25
 1e145e0:    bf f3 1a 89       	call -60876 <__bt_malloc : 1e05818 >			  ## link_layer.c:208:25
 1e145e4:    0c 20             	if (r0 == 0) goto 24 <__rx_oneshot_add+0x24 : 1e145fe >			  ## link_layer.c:208:25
 1e145e6:    c1 ff 56 47 e1 01 	r1 = 31541078 <__set_conn_winsize : 1e14756 >			  ## link_layer.c:213:17
 1e145ec:    29 40             	[r0 + 8] = r1			  ## link_layer.c:213:17
 1e145ee:    41 fc 34 01       	r1 = r4 + 308			  ## link_layer.c:213:17
 1e145f2:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e145f4:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e145f6:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e145f8:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e145fa:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e145fc:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:216:1
 1e145fe:    14 01             	{rets, r4} = [sp++]			  ## cpu.h:148:5
 1e14600:    cf f3 09 77       	goto 2027026 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


__connection_upadte:
 1e14604:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1554:0
 1e14606:    04 08             	r4 = r0			  ## link_layer.c:1554:0
 1e14608:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1555:29
 1e1460a:    42 99             	r2 = r4 + 20			  ## link_layer.c:1555:57
 1e1460c:    71 70             	r1 = 7			  ## link_layer.c:1555:5
 1e1460e:    bf f3 fe ed       	call -9220 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:1555:5
 1e14612:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1531:29
 1e14614:    21 71             	r1 = 18			  ## link_layer.c:1531:5
 1e14616:    02 70             	r2 = 0			  ## link_layer.c:1531:5
 1e14618:    bf f3 f9 ed       	call -9230 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:1531:5
 1e1461c:    00 f6 c4 40       	r0 = [r4 + 196]			  ## link_layer.c:446:15
 1e14620:    00 f3 03 00       	if ((r0 & 1) == 0) goto 6 <__connection_upadte+0x26 : 1e1462a >			  ## link_layer.c:446:15
 1e14624:    70 b0             	r0 &= 4294967294			  ## link_layer.c:449:33
 1e14626:    10 f6 c4 40       	[r4 + 196] = r0			  ## link_layer.c:449:33
 1e1462a:    40 08             	r0 = r4			  ## link_layer.c:1559:5
 1e1462c:    d6 17             	call -84 <__rx_oneshot_add : 1e145da >			  ## link_layer.c:1559:5
 1e1462e:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1247:15
 1e14632:    06 20             	if (r0 == 0) goto 12 <__connection_upadte+0x3C : 1e14640 >
 1e14634:    11 59             	r1 = h[r4 + 34] (u)			  ## link_layer.c:1564:47
 1e14636:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:53:5
 1e14638:    01 fe 0a 19       	r1 = r1 * 10			  ## link_layer.c:1564:69
 1e1463c:    bf f3 4e b6       	call -37732 <sys_timer_modify : 1e0b2dc >			  ## sys_timer.c:53:5
 1e14640:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1568:1


__hci_emit_le_meta_event:
 1e14642:    62 01             	[--sp] = {r3, r2}			  ## link_layer.c:364:0
 1e14644:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:364:0
 1e14646:    fe 0b             	sp += -4			  ## link_layer.c:364:0
 1e14648:    14 08             	r4 = r1			  ## link_layer.c:364:0
 1e1464a:    05 08             	r5 = r0			  ## link_layer.c:364:0
 1e1464c:    f5 ee 18 80       	if (r5 > 239) goto 48 <__hci_emit_le_meta_event+0x3E : 1e14680 >			  ## link_layer.c:364:0
 1e14650:    c0 ff 10 0e 00 00 	r0 = 3600 <hci_param : e10 >			  ## link_layer.c:351:9
 1e14656:    71 60             	r1 = b[r0 + 7] (u)			  ## link_layer.c:351:9
 1e14658:    00 70             	r0 = 0			  ## link_layer.c:351:9
 1e1465a:    05 f3 3b 10       	if ((r1 & 32) == 0) goto 118 <__hci_emit_le_meta_event+0x92 : 1e146d4 >			  ## link_layer.c:351:9
 1e1465e:    51 fc ff ff       	r1 = r5 + -1			  ## link_layer.c:352:23
 1e14662:    82 70             	r2 = 8			  ## link_layer.c:353:47
 1e14664:    e0 fe 20 21       	r2 = r1 / r2 (s)			  ## link_layer.c:353:47
 1e14668:    c3 ff bc 0e 00 00 	r3 = 3772 <le_param : ebc >			  ## link_layer.c:353:13
 1e1466e:    02 fa 00 23       	r2 = b[r2+r3] (u)			  ## link_layer.c:353:13
 1e14672:    21 fd 07 19       	r1 = r1 & 7			  ## link_layer.c:353:54
 1e14676:    13 70             	r3 = 1			  ## link_layer.c:353:54
 1e14678:    f8 fd 10 13       	r1 = r3 << r1			  ## link_layer.c:353:54
 1e1467c:    12 f0 2a 00       	if ((r2 & r1) == 0) goto 84 <__hci_emit_le_meta_event+0x92 : 1e146d4 >			  ## link_layer.c:353:54
 1e14680:    c1 a1             	r1 = sp + 28
 1e14682:    09 02             	[sp] = r1			  ## link_layer.c:372:5
 1e14684:    40 08             	r0 = r4			  ## link_layer.c:337:12
 1e14686:    bf f3 cf 88       	call -61026 <__vsprintf_len : 1e05828 >			  ## link_layer.c:337:12
 1e1468a:    c8 ff 60 2d 00 00 	r8 = 11616 <ll_hdl : 2d60 >
 1e14690:    02 f6 04 80       	r2 = [r8 + 4]			  ## link_layer.c:338:41
 1e14694:    07 08             	r7 = r0			  ## link_layer.c:337:12
 1e14696:    31 9e             	r1 = r7 + 3			  ## link_layer.c:338:62
 1e14698:    20 08             	r0 = r2			  ## link_layer.c:338:13
 1e1469a:    bf f3 3f 89       	call -60802 <lbuf_alloc_btctrler : 1e0591c >			  ## link_layer.c:338:13
 1e1469e:    06 08             	r6 = r0			  ## link_layer.c:338:13
 1e146a0:    03 2c             	if (r6 == 0) goto 6 <__hci_emit_le_meta_event+0x66 : 1e146a8 >			  ## link_layer.c:339:9
 1e146a2:    10 9e             	r0 = r7 + 1			  ## link_layer.c:337:9
 1e146a4:    18 6c             	b[r6 + 1] = r0			  ## link_layer.c:343:16
 1e146a6:    05 18             	goto 10 <__hci_emit_le_meta_event+0x70 : 1e146b2 >			  ## link_layer.c:343:16
 1e146a8:    8f f3 b5 76       	call 2026858 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e146ac:    8f f3 b3 76       	call 2026854 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e146b0:    06 70             	r6 = 0			  ## cpu.h:148:5
 1e146b2:    e0 73             	r0 = 62			  ## link_layer.c:377:18
 1e146b4:    08 6c             	b[r6 + 0] = r0			  ## link_layer.c:377:18
 1e146b6:    2d 6c             	b[r6 + 2] = r5			  ## link_layer.c:378:20
 1e146b8:    c2 a1             	r2 = sp + 28			  ## link_layer.c:378:20
 1e146ba:    0a 02             	[sp] = r2			  ## link_layer.c:380:5
 1e146bc:    30 9c             	r0 = r6 + 3			  ## link_layer.c:381:28
 1e146be:    41 08             	r1 = r4			  ## link_layer.c:381:5
 1e146c0:    bf f3 3b 81       	call -64906 <__vsprintf : 1e0493a >			  ## link_layer.c:381:5
 1e146c4:    60 08             	r0 = r6			  ## link_layer.c:388:5
 1e146c6:    bf f3 5f 89       	call -60738 <lbuf_push_btctrler : 1e05988 >			  ## link_layer.c:388:5
 1e146ca:    80 fc 08 00       	r0 = r8 + 8			  ## link_layer.c:391:5
 1e146ce:    bf f3 70 89       	call -60704 <thread_resume : 1e059b2 >			  ## link_layer.c:391:5
 1e146d2:    10 70             	r0 = 1			  ## link_layer.c:391:5
 1e146d4:    02 0a             	sp += 4
 1e146d6:    18 01             	{rets, r8-r4} = [sp++]			  ## link_layer.c:396:1
 1e146d8:    04 0a             	sp += 8			  ## link_layer.c:396:1
 1e146da:    20 00             	rts			  ## link_layer.c:396:1


le_connection_update_complete_event:
 1e146dc:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:40:0
 1e146de:    fa 0b             	sp += -12			  ## ll_events.c:40:0
 1e146e0:    14 08             	r4 = r1			  ## ll_events.c:40:0
 1e146e2:    05 08             	r5 = r0			  ## ll_events.c:40:0
 1e146e4:    32 e0 0a 80       	if (r2 > 3) goto 20 <.GJTIE709_0_0_+0xA : 1e146fc >			  ## ll_events.c:41:5
 1e146e8:    20 08             	r0 = r2			  ## ll_events.c:41:5
 1e146ea:    02 70             	r2 = 0			  ## ll_events.c:41:5
 1e146ec:    a0 00             	tbb [r0]


.GJTIS709_0_0_:
 1e146ee:    10     < 16 : 0x10 >
 1e146ef:    02     < 2 : 0x2 >
 1e146f0:    0a     < 10 : 0xA >
 1e146f1:    0f     < 15 : 0xF >
 1e146f2:    02 38             	if (r4 != 0) goto 4 <.GJTIE709_0_0_+0x6 : 1e146f8 >
 1e146f4:    8f f3 8f 76       	call 2026782 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e146f8:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:50:18
 1e146fa:    09 18             	goto 18 <.GJTIE709_0_0_+0x1C : 1e1470e >
 1e146fc:    8f f3 8b 76       	call 2026774 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14700:    06 18             	goto 12 <.GJTIE709_0_0_+0x1C : 1e1470e >			  ## cpu.h:148:5
 1e14702:    02 38             	if (r4 != 0) goto 4 <.GJTIE709_0_0_+0x16 : 1e14708 >
 1e14704:    8f f3 87 76       	call 2026766 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14708:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:54:18
 1e1470a:    01 18             	goto 2 <.GJTIE709_0_0_+0x1C : 1e1470e >
 1e1470c:    a2 71             	r2 = 26
 1e1470e:    03 f7 f8 50       	r3 = h[r5 + 248] (u)			  ## ll_events.c:65:30
 1e14712:    f4 5a             	r4 = h[r5 + 30] (u)			  ## ll_events.c:66:30
 1e14714:    00 5b             	r0 = h[r5 + 32] (u)			  ## ll_events.c:67:30
 1e14716:    11 5b             	r1 = h[r5 + 34] (u)			  ## ll_events.c:68:30
 1e14718:    29 02             	[sp+8] = r1			  ## ll_events.c:62:5
 1e1471a:    18 02             	[sp+4] = r0			  ## ll_events.c:62:5
 1e1471c:    c1 ff a6 f1 e0 01 	r1 = 31519142 <bluetooth_base_uuid+0x19C : 1e0f1a6 >			  ## ll_events.c:62:5
 1e14722:    30 70             	r0 = 3			  ## ll_events.c:62:5
 1e14724:    0c 02             	[sp] = r4			  ## ll_events.c:62:5
 1e14726:    8d 17             	call -230 <__hci_emit_le_meta_event : 1e14642 >			  ## ll_events.c:62:5
 1e14728:    06 0a             	sp += 12
 1e1472a:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:75:1


__master_ll_send_conn_update_done:
 1e1472c:    01 70             	r1 = 0			  ## link_layer.c:1571:0
 1e1472e:    02 70             	r2 = 0			  ## link_layer.c:1572:5
 1e14730:    d5 1f             	goto -86 <le_connection_update_complete_event : 1e146dc >			  ## link_layer.c:1572:5


__channel_map_upadte:
 1e14732:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1885:0
 1e14734:    04 08             	r4 = r0			  ## link_layer.c:1885:0
 1e14736:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1886:29
 1e14738:    42 fc 24 00       	r2 = r4 + 36			  ## link_layer.c:1886:50
 1e1473c:    81 70             	r1 = 8			  ## link_layer.c:1886:5
 1e1473e:    bf f3 66 ed       	call -9524 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:1886:5
 1e14742:    00 f9 3d 40       	r0 = b[r4 + 61] (u)			  ## link_layer.c:1888:9
 1e14746:    10 e0 05 00       	if (r0 == 1) goto 10 <__channel_map_upadte+0x22 : 1e14754 >			  ## link_layer.c:1888:9
 1e1474a:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1877:29
 1e1474c:    21 71             	r1 = 18			  ## link_layer.c:1877:5
 1e1474e:    02 70             	r2 = 0			  ## link_layer.c:1877:5
 1e14750:    bf f3 5d ed       	call -9542 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:1877:5
 1e14754:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1893:1


__set_conn_winsize:
 1e14756:    01 08             	r1 = r0			  ## link_layer.c:1255:0
 1e14758:    02 f9 3d 10       	r2 = b[r1 + 61] (u)			  ## link_layer.c:1256:9
 1e1475c:    00 42             	r0 = [r1 + 0]			  ## link_layer.c:1256:9
 1e1475e:    12 e0 07 10       	if (r2 != 1) goto 14 <__set_conn_winsize+0x1A : 1e14770 >			  ## link_layer.c:1256:9
 1e14762:    51 53             	r1 = h[r1 + 42] (u)			  ## link_layer.c:1257:58
 1e14764:    49 c0             	r1 = r1 << 1			  ## link_layer.c:1257:81
 1e14766:    13 fc 32 00       	r3 = r1 + 50			  ## link_layer.c:1257:85
 1e1476a:    51 70             	r1 = 5			  ## link_layer.c:1257:9
 1e1476c:    22 73             	r2 = 50			  ## link_layer.c:1257:9
 1e1476e:    03 18             	goto 6 <__set_conn_winsize+0x20 : 1e14776 >			  ## link_layer.c:1257:9
 1e14770:    51 70             	r1 = 5			  ## link_layer.c:1259:9
 1e14772:    e2 71             	r2 = 30			  ## link_layer.c:1259:9
 1e14774:    03 70             	r3 = 0			  ## link_layer.c:1259:9
 1e14776:    ff f3 4a ed       	goto -9580 <le_hw_ioctrl : 1e1220e >


ll_disconnect_process:
 1e1477a:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1168:0
 1e1477c:    fe 0b             	sp += -4			  ## link_layer.c:1168:0
 1e1477e:    02 f9 3c 00       	r2 = b[r0 + 60] (u)			  ## link_layer.c:1171:9
 1e14782:    14 08             	r4 = r1			  ## link_layer.c:1171:9
 1e14784:    82 e0 13 00       	if (r2 == 8) goto 38 <ll_disconnect_process+0x34 : 1e147ae >
 1e14788:    05 f9 f8 00       	r5 = b[r0 + 248] (u)			  ## link_layer.c:1169:24
 1e1478c:    81 70             	r1 = 8			  ## link_layer.c:1169:24
 1e1478e:    11 f9 3c 00       	b[r0 + 60] = r1			  ## link_layer.c:1176:17
 1e14792:    c0 ff 68 2d 00 00 	r0 = 11624 <ll_hdl+0x8 : 2d68 >			  ## link_layer.c:1179:5
 1e14798:    bf f3 0b 89       	call -60906 <thread_resume : 1e059b2 >			  ## link_layer.c:1179:5
 1e1479c:    c1 ff e0 f1 e0 01 	r1 = 31519200 <bluetooth_base_uuid+0x1D6 : 1e0f1e0 >			  ## ll_events.c:382:5
 1e147a2:    50 70             	r0 = 5			  ## ll_events.c:382:5
 1e147a4:    02 70             	r2 = 0			  ## ll_events.c:382:5
 1e147a6:    0c 02             	[sp] = r4			  ## ll_events.c:382:5
 1e147a8:    53 08             	r3 = r5			  ## ll_events.c:382:5
 1e147aa:    bf f3 36 e9       	call -11668 <hci_send_event : 1e11a1a >			  ## ll_events.c:382:5
 1e147ae:    02 0a             	sp += 4
 1e147b0:    55 01             	{pc, r5, r4} = [sp++]			  ## link_layer.c:1182:1


ll_conn_fast_supervision_timer_handler:
 1e147b2:    e1 73             	r1 = 62			  ## link_layer.c:1187:0
 1e147b4:    e2 1f             	goto -60 <ll_disconnect_process : 1e1477a >			  ## link_layer.c:1188:5


conn_rx_probe_handler:
 1e147b6:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:2953:0
 1e147b8:    05 08             	r5 = r0			  ## link_layer.c:2953:0
 1e147ba:    00 f9 3c 50       	r0 = b[r5 + 60] (u)			  ## link_layer.c:2956:15
 1e147be:    18 08             	r8 = r1			  ## link_layer.c:2956:15
 1e147c0:    57 fc 34 01       	r7 = r5 + 308
 1e147c4:    60 e0 20 10       	if (r0 != 6) goto 64 <conn_rx_probe_handler+0x52 : 1e14808 >
 1e147c8:    70 70             	r0 = 7			  ## link_layer.c:2960:21
 1e147ca:    10 f9 3c 50       	b[r5 + 60] = r0			  ## link_layer.c:2960:21
 1e147ce:    44 4e             	r4 = [r7 + 16]			  ## link_layer.c:305:5
 1e147d0:    06 9f             	r6 = r7 + 16			  ## link_layer.c:305:5
 1e147d2:    64 f2 17 00       	if (r4 == r6) goto 46 <conn_rx_probe_handler+0x4E : 1e14804 >			  ## link_layer.c:305:5
 1e147d6:    c9 ff b2 47 e1 01 	r9 = 31541170 <ll_conn_fast_supervision_timer_handler : 1e147b2 >
 1e147dc:    41 08             	r1 = r4
 1e147de:    40 08             	r0 = r4
 1e147e0:    22 40             	r2 = [r0 + 8]			  ## link_layer.c:306:25
 1e147e2:    04 40             	r4 = [r0 + 0]			  ## link_layer.c:306:25
 1e147e4:    92 f2 0b 10       	if (r2 != r9) goto 22 <conn_rx_probe_handler+0x48 : 1e147fe >
 1e147e8:    32 40             	r2 = [r0 + 12]			  ## link_layer.c:306:46
 1e147ea:    62 e0 08 10       	if (r2 != 6) goto 16 <conn_rx_probe_handler+0x48 : 1e147fe >			  ## link_layer.c:306:46
 1e147ee:    02 42             	r2 = [r1 + 0]			  ## list.h:171:36
 1e147f0:    13 42             	r3 = [r1 + 4]			  ## list.h:171:23
 1e147f2:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e147f4:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e147f6:    09 42             	[r1 + 0] = r1			  ## list.h:172:17
 1e147f8:    19 42             	[r1 + 4] = r1			  ## list.h:173:17
 1e147fa:    bf f3 7b 66       	call -78602 <__bt_free : 1e014f4 >			  ## link_layer.c:308:13
 1e147fe:    41 08             	r1 = r4
 1e14800:    64 f2 ed 1f       	if (r4 != r6) goto -38 <conn_rx_probe_handler+0x28 : 1e147de >
 1e14804:    50 08             	r0 = r5			  ## link_layer.c:2962:9
 1e14806:    e9 16             	call -558 <__rx_oneshot_add : 1e145da >			  ## link_layer.c:2962:9
 1e14808:    70 4e             	r0 = [r7 + 28]			  ## link_layer.c:1240:15
 1e1480a:    03 20             	if (r0 == 0) goto 6 <conn_rx_probe_handler+0x5C : 1e14812 >
 1e1480c:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:48:5
 1e1480e:    bf f3 b5 b7       	call -37014 <sys_timer_re_run : 1e0b77c >			  ## sys_timer.c:48:5
 1e14812:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:223:5
 1e14814:    76 f2 10 00       	if (r6 == r7) goto 32 <conn_rx_probe_handler+0x82 : 1e14838 >
 1e14818:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e1481a:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e1481c:    04 4c             	r4 = [r6 + 0]
 1e1481e:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e14820:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e14822:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e14824:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e14826:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:225:12
 1e14828:    50 08             	r0 = r5			  ## link_layer.c:225:9
 1e1482a:    81 00             	call r1			  ## link_layer.c:225:9
 1e1482c:    60 08             	r0 = r6			  ## link_layer.c:226:9
 1e1482e:    bf f3 61 66       	call -78654 <__bt_free : 1e014f4 >			  ## link_layer.c:226:9
 1e14832:    46 08             	r6 = r4
 1e14834:    74 f2 f0 1f       	if (r4 != r7) goto -32 <conn_rx_probe_handler+0x62 : 1e14818 >
 1e14838:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:2969:9
 1e1483c:    2b f3 06 00       	if ((r0 & 2048) != 0) goto 12 <conn_rx_probe_handler+0x96 : 1e1484c >			  ## link_layer.c:2969:9
 1e14840:    00 f9 0c 80       	r0 = b[r8 + 12] (u)			  ## link_layer.c:2970:26
 1e14844:    10 f9 88 51       	b[r5 + 392] = r0			  ## link_layer.c:2970:20
 1e14848:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:2970:20
 1e1484c:    20 fd 30 09       	r0 = r0 & 48			  ## link_layer.c:2975:9
 1e14850:    00 e1 03 10       	if (r0 != 16) goto 6 <conn_rx_probe_handler+0xA4 : 1e1485a >			  ## link_layer.c:2975:9
 1e14854:    00 f9 0a 80       	r0 = b[r8 + 10] (u)			  ## link_layer.c:2975:9
 1e14858:    05 20             	if (r0 == 0) goto 10 <conn_rx_probe_handler+0xAE : 1e14864 >			  ## link_layer.c:2975:9
 1e1485a:    c0 ff 68 2d 00 00 	r0 = 11624 <ll_hdl+0x8 : 2d68 >			  ## link_layer.c:2980:9
 1e14860:    bf f3 a7 88       	call -61106 <thread_resume : 1e059b2 >			  ## link_layer.c:2980:9
 1e14864:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:2982:1


conn_tx_probe_handler:
 1e14866:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:2985:0
 1e14868:    61 52             	r1 = h[r1 + 12] (u)			  ## link_layer.c:2988:17
 1e1486a:    82 fd 20 11       	r1 = uextra(r1, p:4, l:2)
 1e1486e:    12 fc ff ff       	r2 = r1 + -1			  ## link_layer.c:2988:5
 1e14872:    04 fc fc 00       	r4 = r0 + 252			  ## link_layer.c:2988:5
 1e14876:    22 e0 07 20       	if (r2 >= 2) goto 14 <conn_tx_probe_handler+0x22 : 1e14888 >			  ## link_layer.c:2988:5
 1e1487a:    97 f3 8f 92       	call 3089694 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e1487e:    08 00             	csync			  ## atomic.h:16:5
 1e14880:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e14882:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e14884:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e14886:    08 18             	goto 16 <conn_tx_probe_handler+0x32 : 1e14898 >			  ## atomic.h:19:16
 1e14888:    31 e0 08 10       	if (r1 != 3) goto 16 <conn_tx_probe_handler+0x36 : 1e1489c >
 1e1488c:    97 f3 86 92       	call 3089676 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e14890:    08 00             	csync			  ## atomic.h:16:5
 1e14892:    10 48             	r0 = [r4 + 4]			  ## atomic.h:18:14
 1e14894:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e14896:    18 48             	[r4 + 4] = r0			  ## atomic.h:19:16
 1e14898:    97 f3 7e 92       	call 3089660 <local_irq_enable : 106d98 >
 1e1489c:    c0 ff 68 2d 00 00 	r0 = 11624 <ll_hdl+0x8 : 2d68 >			  ## link_layer.c:3003:5
 1e148a2:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:3003:5
 1e148a4:    ff f3 85 88       	goto -61174 <thread_resume : 1e059b2 >			  ## link_layer.c:3003:5


conn_evt_probe_handler:
 1e148a8:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:3024:0
 1e148aa:    24 08             	r4 = r2			  ## link_layer.c:3024:0
 1e148ac:    09 08             	r9 = r0			  ## link_layer.c:3024:0
 1e148ae:    01 22             	if (r1 == 0) goto 2 <conn_evt_probe_handler+0xA : 1e148b2 >			  ## link_layer.c:3024:0
 1e148b0:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3032:1
 1e148b2:    02 30             	if (r0 != 0) goto 4 <conn_evt_probe_handler+0x10 : 1e148b8 >
 1e148b4:    8f f3 af 75       	call 2026334 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e148b8:    14 f7 90 90       	h[r9 + 144] = r4			  ## link_layer.c:161:21
 1e148bc:    97 fc 3c 01       	r7 = r9 + 316			  ## link_layer.c:161:21
 1e148c0:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:163:5
 1e148c2:    76 f2 18 00       	if (r6 == r7) goto 48 <conn_evt_probe_handler+0x4E : 1e148f6 >
 1e148c6:    08 fb fd 7f       	r8 = 32765 <nvbss_size+0xCBD : 7ffd >
 1e148ca:    30 4c             	r0 = [r6 + 12]			  ## link_layer.c:164:15
 1e148cc:    20 b1             	r0 = r0 - r4			  ## link_layer.c:164:26
 1e148ce:    05 4c             	r5 = [r6 + 0]			  ## link_layer.c:164:26
 1e148d0:    20 04             	r0 = r0.l (u)			  ## link_layer.c:167:14
 1e148d2:    f0 8f             	r0 += -1			  ## link_layer.c:167:28
 1e148d4:    80 f2 0c 90       	if (r0 <= r8) goto 24 <conn_evt_probe_handler+0x48 : 1e148f0 >			  ## link_layer.c:167:28
 1e148d8:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e148da:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e148dc:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e148de:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e148e0:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e148e2:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e148e4:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:169:16
 1e148e6:    90 08             	r0 = r9			  ## link_layer.c:169:13
 1e148e8:    81 00             	call r1			  ## link_layer.c:169:13
 1e148ea:    60 08             	r0 = r6			  ## link_layer.c:170:13
 1e148ec:    bf f3 02 66       	call -78844 <__bt_free : 1e014f4 >			  ## link_layer.c:170:13
 1e148f0:    56 08             	r6 = r5
 1e148f2:    75 f2 ea 1f       	if (r5 != r7) goto -44 <conn_evt_probe_handler+0x22 : 1e148ca >
 1e148f6:    01 f9 8c 91       	r1 = b[r9 + 396] (u)			  ## link_layer.c:3010:15
 1e148fa:    c0 ff 68 2d 00 00 	r0 = 11624 <ll_hdl+0x8 : 2d68 >			  ## link_layer.c:3010:15
 1e14900:    60 ff 0f 19 08 00 	if ((r1 & 15) == 0) goto 16 <conn_evt_probe_handler+0x6E : 1e14916 >			  ## link_layer.c:3010:9
 1e14906:    21 fd 0f 19       	r1 = r1 & 15			  ## link_layer.c:3010:15
 1e1490a:    11 b2             	r1 |= 16			  ## link_layer.c:3011:35
 1e1490c:    11 f9 8c 91       	b[r9 + 396] = r1			  ## link_layer.c:3011:35
 1e14910:    19 01             	{rets, r9-r4} = [sp++]
 1e14912:    ff f3 4e 88       	goto -61284 <thread_resume : 1e059b2 >
 1e14916:    21 4e             	r1 = [r7 + 8]
 1e14918:    82 9e             	r2 = r7 + 8			  ## link_layer.c:266:5
 1e1491a:    21 f2 c9 0f       	if (r1 == r2) goto -110 <conn_evt_probe_handler+0x8 : 1e148b0 >			  ## link_layer.c:266:5
 1e1491e:    03 fb fd 7f       	r3 = 32765 <nvbss_size+0xCBD : 7ffd >
 1e14922:    35 42             	r5 = [r1 + 12]			  ## link_layer.c:267:15
 1e14924:    25 bb             	r5 = r5 - r4			  ## link_layer.c:267:26
 1e14926:    65 05             	r5 = r5.l (u)			  ## link_layer.c:268:14
 1e14928:    f5 8f             	r5 += -1			  ## link_layer.c:268:28
 1e1492a:    35 f2 f1 8f       	if (r5 > r3) goto -30 <conn_evt_probe_handler+0x68 : 1e14910 >			  ## link_layer.c:268:28
 1e1492e:    01 42             	r1 = [r1 + 0]
 1e14930:    21 f2 f7 1f       	if (r1 != r2) goto -18 <conn_evt_probe_handler+0x7A : 1e14922 >
 1e14934:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3032:1


ll_conn_supervision_timer_handler:
 1e14936:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1202:0
 1e14938:    04 08             	r4 = r0			  ## link_layer.c:1202:0
 1e1493a:    0b 28             	if (r4 == 0) goto 22 <ll_conn_supervision_timer_handler+0x1C : 1e14952 >			  ## link_layer.c:1202:0
 1e1493c:    a2 15             	call -1212 <ll_supervision_timeout_stop : 1e14482 >			  ## link_layer.c:1214:5
 1e1493e:    00 f9 3c 40       	r0 = b[r4 + 60] (u)			  ## link_layer.c:1220:14
 1e14942:    10 b0             	r0 |= 1			  ## link_layer.c:1220:14
 1e14944:    00 04             	r0 = r0.b0 (u)			  ## link_layer.c:1220:14
 1e14946:    81 70             	r1 = 8			  ## link_layer.c:1220:14
 1e14948:    70 e0 01 00       	if (r0 == 7) goto 2 <ll_conn_supervision_timer_handler+0x18 : 1e1494e >			  ## link_layer.c:1220:14
 1e1494c:    e1 73             	r1 = 62
 1e1494e:    40 08             	r0 = r4			  ## link_layer.c:1223:5
 1e14950:    14 17             	call -472 <ll_disconnect_process : 1e1477a >			  ## link_layer.c:1223:5
 1e14952:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1225:1


__event_oneshot_add:
 1e14954:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:139:0
 1e14956:    24 08             	r4 = r2			  ## link_layer.c:139:0
 1e14958:    16 08             	r6 = r1			  ## link_layer.c:139:0
 1e1495a:    05 08             	r5 = r0			  ## link_layer.c:139:0
 1e1495c:    00 71             	r0 = 16			  ## link_layer.c:140:25
 1e1495e:    bf f3 5b 87       	call -61770 <__bt_malloc : 1e05818 >			  ## link_layer.c:140:25
 1e14962:    0a 20             	if (r0 == 0) goto 20 <__event_oneshot_add+0x24 : 1e14978 >			  ## link_layer.c:140:25
 1e14964:    2e 40             	[r0 + 8] = r6			  ## link_layer.c:145:17
 1e14966:    3c 40             	[r0 + 12] = r4			  ## link_layer.c:146:20
 1e14968:    51 fc 3c 01       	r1 = r5 + 316			  ## link_layer.c:146:20
 1e1496c:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e1496e:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e14970:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e14972:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e14974:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e14976:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:149:1
 1e14978:    16 01             	{rets, r6-r4} = [sp++]			  ## cpu.h:148:5
 1e1497a:    cf f3 4c 75       	goto 2026136 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


__event_oneshot_post_add:
 1e1497e:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:244:0
 1e14980:    24 08             	r4 = r2			  ## link_layer.c:244:0
 1e14982:    16 08             	r6 = r1			  ## link_layer.c:244:0
 1e14984:    05 08             	r5 = r0			  ## link_layer.c:244:0
 1e14986:    00 71             	r0 = 16			  ## link_layer.c:245:25
 1e14988:    bf f3 46 87       	call -61812 <__bt_malloc : 1e05818 >			  ## link_layer.c:245:25
 1e1498c:    0a 20             	if (r0 == 0) goto 20 <__event_oneshot_post_add+0x24 : 1e149a2 >			  ## link_layer.c:245:25
 1e1498e:    2e 40             	[r0 + 8] = r6			  ## link_layer.c:250:17
 1e14990:    3c 40             	[r0 + 12] = r4			  ## link_layer.c:251:20
 1e14992:    51 fc 44 01       	r1 = r5 + 324			  ## link_layer.c:251:20
 1e14996:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e14998:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e1499a:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e1499c:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e1499e:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e149a0:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:254:1
 1e149a2:    16 01             	{rets, r6-r4} = [sp++]			  ## cpu.h:148:5
 1e149a4:    cf f3 37 75       	goto 2026094 <p33_soft_reset : 3416 >			  ## cpu.h:148:5


le_read_remote_used_features_complete_event:
 1e149a8:    74 01             	[--sp] = {rets, r4}			  ## ll_events.c:78:0
 1e149aa:    fe 0b             	sp += -4			  ## ll_events.c:78:0
 1e149ac:    14 08             	r4 = r1			  ## ll_events.c:78:0
 1e149ae:    03 08             	r3 = r0			  ## ll_events.c:78:0
 1e149b0:    04 24             	if (r2 == 0) goto 8 <le_read_remote_used_features_complete_event+0x12 : 1e149ba >			  ## ll_events.c:78:0
 1e149b2:    32 e0 04 10       	if (r2 != 3) goto 8 <le_read_remote_used_features_complete_event+0x16 : 1e149be >			  ## ll_events.c:78:0
 1e149b6:    a2 71             	r2 = 26			  ## ll_events.c:78:0
 1e149b8:    04 18             	goto 8 <le_read_remote_used_features_complete_event+0x1A : 1e149c2 >			  ## ll_events.c:78:0
 1e149ba:    02 70             	r2 = 0			  ## ll_events.c:78:0
 1e149bc:    02 18             	goto 4 <le_read_remote_used_features_complete_event+0x1A : 1e149c2 >			  ## ll_events.c:78:0
 1e149be:    8f f3 2a 75       	call 2026068 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e149c2:    03 f7 f8 30       	r3 = h[r3 + 248] (u)
 1e149c6:    c1 ff ac f1 e0 01 	r1 = 31519148 <bluetooth_base_uuid+0x1A2 : 1e0f1ac >
 1e149cc:    02 28             	if (r4 == 0) goto 4 <le_read_remote_used_features_complete_event+0x2A : 1e149d2 >
 1e149ce:    54 81             	r4 += 21			  ## ll_events.c:99:43
 1e149d0:    01 18             	goto 2 <le_read_remote_used_features_complete_event+0x2C : 1e149d4 >
 1e149d2:    04 70             	r4 = 0			  ## ll_events.c:93:9
 1e149d4:    40 70             	r0 = 4
 1e149d6:    0c 02             	[sp] = r4
 1e149d8:    34 16             	call -920 <__hci_emit_le_meta_event : 1e14642 >
 1e149da:    02 0a             	sp += 4
 1e149dc:    54 01             	{pc, r4} = [sp++]			  ## ll_events.c:104:1


hci_event_encryption_change:
 1e149de:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:312:0
 1e149e0:    fe 0b             	sp += -4			  ## ll_events.c:312:0
 1e149e2:    c3 ff 10 0e 00 00 	r3 = 3600 <hci_param : e10 >			  ## ll_events.c:313:19
 1e149e8:    05 f9 91 30       	r5 = b[r3 + 145] (u)			  ## ll_events.c:313:19
 1e149ec:    14 08             	r4 = r1			  ## ll_events.c:313:19
 1e149ee:    03 08             	r3 = r0
 1e149f0:    26 3a             	if (r5 != 0) goto 76 <.GJTIE724_0_0_+0x3C : 1e14a3e >
 1e149f2:    42 e0 0b 80       	if (r2 > 4) goto 22 <.GJTIE724_0_0_+0xA : 1e14a0c >			  ## ll_events.c:316:5
 1e149f6:    20 08             	r0 = r2			  ## ll_events.c:316:5
 1e149f8:    02 70             	r2 = 0			  ## ll_events.c:316:5
 1e149fa:    a0 00             	tbb [r0]


.GJTIS724_0_0_:
 1e149fc:    13     < 19 : 0x13 >
 1e149fd:    03     < 3 : 0x3 >
 1e149fe:    0b     < 11 : 0xB >
 1e149ff:    10     < 16 : 0x10 >
 1e14a00:    12     < 18 : 0x12 >
 1e14a01:    00     < 0 : 0x0 >
 1e14a02:    02 38             	if (r4 != 0) goto 4 <.GJTIE724_0_0_+0x6 : 1e14a08 >
 1e14a04:    8f f3 07 75       	call 2025998 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14a08:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:327:18
 1e14a0a:    0b 18             	goto 22 <.GJTIE724_0_0_+0x20 : 1e14a22 >			  ## ll_events.c:327:18
 1e14a0c:    8f f3 03 75       	call 2025990 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14a10:    08 18             	goto 16 <.GJTIE724_0_0_+0x20 : 1e14a22 >			  ## cpu.h:148:5
 1e14a12:    02 38             	if (r4 != 0) goto 4 <.GJTIE724_0_0_+0x16 : 1e14a18 >
 1e14a14:    8f f3 ff 74       	call 2025982 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14a18:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:331:18
 1e14a1a:    03 18             	goto 6 <.GJTIE724_0_0_+0x20 : 1e14a22 >			  ## ll_events.c:331:18
 1e14a1c:    a2 71             	r2 = 26
 1e14a1e:    01 18             	goto 2 <.GJTIE724_0_0_+0x20 : 1e14a22 >
 1e14a20:    22 72             	r2 = 34
 1e14a22:    00 f9 93 30       	r0 = b[r3 + 147] (u)			  ## ll_events.c:340:5
 1e14a26:    14 70             	r4 = 1			  ## ll_events.c:340:5
 1e14a28:    01 30             	if (r0 != 0) goto 2 <.GJTIE724_0_0_+0x2A : 1e14a2c >
 1e14a2a:    04 70             	r4 = 0			  ## ll_events.c:340:5
 1e14a2c:    03 f7 f8 30       	r3 = h[r3 + 248] (u)			  ## ll_events.c:340:5
 1e14a30:    c1 ff e0 f1 e0 01 	r1 = 31519200 <bluetooth_base_uuid+0x1D6 : 1e0f1e0 >			  ## ll_events.c:340:5
 1e14a36:    80 70             	r0 = 8			  ## ll_events.c:340:5
 1e14a38:    0c 02             	[sp] = r4			  ## ll_events.c:340:5
 1e14a3a:    bf f3 ee e7       	call -12324 <hci_send_event : 1e11a1a >			  ## ll_events.c:340:5
 1e14a3e:    02 0a             	sp += 4
 1e14a40:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:349:1


hci_event_encryption_refresh_complete:
 1e14a42:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:352:0
 1e14a44:    25 08             	r5 = r2			  ## ll_events.c:352:0
 1e14a46:    13 08             	r3 = r1			  ## ll_events.c:352:0
 1e14a48:    04 08             	r4 = r0			  ## ll_events.c:352:0
 1e14a4a:    45 e0 0a 80       	if (r5 > 4) goto 20 <.GJTIE725_0_0_+0xA : 1e14a62 >			  ## ll_events.c:353:5
 1e14a4e:    02 70             	r2 = 0
 1e14a50:    a5 00             	tbb [r5]


.GJTIS725_0_0_:
 1e14a52:    13     < 19 : 0x13 >
 1e14a53:    03     < 3 : 0x3 >
 1e14a54:    0b     < 11 : 0xB >
 1e14a55:    10     < 16 : 0x10 >
 1e14a56:    12     < 18 : 0x12 >
 1e14a57:    00     < 0 : 0x0 >
 1e14a58:    02 36             	if (r3 != 0) goto 4 <.GJTIE725_0_0_+0x6 : 1e14a5e >
 1e14a5a:    8f f3 dc 74       	call 2025912 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14a5e:    52 67             	r2 = b[r3 + 21] (u)			  ## ll_events.c:364:18
 1e14a60:    0b 18             	goto 22 <.GJTIE725_0_0_+0x20 : 1e14a78 >			  ## ll_events.c:364:18
 1e14a62:    8f f3 d8 74       	call 2025904 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14a66:    08 18             	goto 16 <.GJTIE725_0_0_+0x20 : 1e14a78 >			  ## cpu.h:148:5
 1e14a68:    02 36             	if (r3 != 0) goto 4 <.GJTIE725_0_0_+0x16 : 1e14a6e >
 1e14a6a:    8f f3 d4 74       	call 2025896 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14a6e:    62 67             	r2 = b[r3 + 22] (u)			  ## ll_events.c:368:18
 1e14a70:    03 18             	goto 6 <.GJTIE725_0_0_+0x20 : 1e14a78 >			  ## ll_events.c:368:18
 1e14a72:    a2 71             	r2 = 26
 1e14a74:    01 18             	goto 2 <.GJTIE725_0_0_+0x20 : 1e14a78 >
 1e14a76:    22 72             	r2 = 34
 1e14a78:    03 f7 f8 40       	r3 = h[r4 + 248] (u)			  ## ll_events.c:375:5
 1e14a7c:    c1 ff e4 f1 e0 01 	r1 = 31519204 <bluetooth_base_uuid+0x1DA : 1e0f1e4 >			  ## ll_events.c:375:5
 1e14a82:    00 73             	r0 = 48			  ## ll_events.c:375:5
 1e14a84:    15 01             	{rets, r5, r4} = [sp++]			  ## ll_events.c:375:5
 1e14a86:    ff f3 c8 e7       	goto -12400 <hci_send_event : 1e11a1a >			  ## ll_events.c:375:5


ll_control_procedure_finish:
 1e14a8a:    7a 01             	[--sp] = {rets, r10-r4}			  ## link_layer.c:500:0
 1e14a8c:    fa 0b             	sp += -12			  ## link_layer.c:500:0
 1e14a8e:    05 08             	r5 = r0			  ## link_layer.c:500:0
 1e14a90:    57 fc c0 00       	r7 = r5 + 192			  ## link_layer.c:500:0
 1e14a94:    00 6e             	r0 = b[r7 + 0] (u)			  ## link_layer.c:501:39
 1e14a96:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:504:25
 1e14a98:    50 09             	r0 += r5			  ## link_layer.c:504:25
 1e14a9a:    0a fc 98 00       	r10 = r0 + 152			  ## link_layer.c:504:25
 1e14a9e:    03 f9 04 a0       	r3 = b[r10 + 4] (u)			  ## link_layer.c:504:25
 1e14aa2:    00 f6 00 a0       	r0 = [r10 + 0]			  ## link_layer.c:504:25
 1e14aa6:    46 f8 00 03       	r6 = h[r0+r3<<1] (u)			  ## link_layer.c:504:25
 1e14aaa:    84 05             	r4 = r6.b0 (u)			  ## link_layer.c:506:10
 1e14aac:    28 08             	r8 = r2			  ## link_layer.c:506:10
 1e14aae:    19 08             	r9 = r1
 1e14ab0:    00 ff ff 40 13 00 	if (r4 == 255) goto 38 <ll_control_procedure_finish+0x52 : 1e14adc >
 1e14ab6:    11 96             	r1 = r3 + 1			  ## link_layer.c:489:33
 1e14ab8:    42 04             	r2 = r1.b0 (u)
 1e14aba:    46 f8 00 02       	r6 = h[r0+r2<<1] (u)
 1e14abe:    82 05             	r2 = r6.b0 (u)			  ## link_layer.c:490:32
 1e14ac0:    11 80             	r1 += 1			  ## link_layer.c:490:13
 1e14ac2:    01 ff ff 20 f8 ff 	if (r2 != 255) goto -16 <ll_control_procedure_finish+0x2E : 1e14ab8 >			  ## link_layer.c:490:13
 1e14ac8:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:509:33
 1e14aca:    11 71             	r1 = 17			  ## link_layer.c:509:9
 1e14acc:    02 70             	r2 = 0			  ## link_layer.c:509:9
 1e14ace:    bf f3 9e eb       	call -10436 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:509:9
 1e14ad2:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:510:33
 1e14ad4:    21 71             	r1 = 18			  ## link_layer.c:510:9
 1e14ad6:    02 70             	r2 = 0			  ## link_layer.c:510:9
 1e14ad8:    bf f3 99 eb       	call -10446 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:510:9
 1e14adc:    30 d2             	r0 = r6 >> 8
 1e14ade:    e0 e0 7c 80       	if (r0 > 14) goto 248 <.GJTIE726_0_0_+0xE6 : 1e14bda >
 1e14ae2:    a0 00             	tbb [r0]


.GJTIS726_0_0_:
 1e14ae4:    08     < 8 : 0x8 >
 1e14ae5:    08     < 8 : 0x8 >
 1e14ae6:    28     < 40 : 0x28 >
 1e14ae7:    7b     < 123 : 0x7B >
 1e14ae8:    7b     < 123 : 0x7B >
 1e14ae9:    3c     < 60 : 0x3C >
 1e14aea:    0d     < 13 : 0xD >
 1e14aeb:    0d     < 13 : 0xD >
 1e14aec:    4a     < 74 : 0x4A >
 1e14aed:    12     < 18 : 0x12 >
 1e14aee:    1d     < 29 : 0x1D >
 1e14aef:    12     < 18 : 0x12 >
 1e14af0:    1d     < 29 : 0x1D >
 1e14af1:    7b     < 123 : 0x7B >
 1e14af2:    50     < 80 : 0x50 >
 1e14af3:    00     < 0 : 0x0 >
 1e14af4:    50 08             	r0 = r5
 1e14af6:    91 08             	r1 = r9
 1e14af8:    82 08             	r2 = r8
 1e14afa:    f0 15             	call -1056 <le_connection_update_complete_event : 1e146dc >
 1e14afc:    6e 18             	goto 220 <.GJTIE726_0_0_+0xE6 : 1e14bda >
 1e14afe:    50 08             	r0 = r5
 1e14b00:    91 08             	r1 = r9
 1e14b02:    82 08             	r2 = r8
 1e14b04:    51 17             	call -350 <le_read_remote_used_features_complete_event : 1e149a8 >
 1e14b06:    69 18             	goto 210 <.GJTIE726_0_0_+0xE6 : 1e14bda >
 1e14b08:    00 4a             	r0 = [r5 + 0]
 1e14b0a:    11 71             	r1 = 17
 1e14b0c:    02 70             	r2 = 0
 1e14b0e:    bf f3 7e eb       	call -10500 <le_hw_ioctrl : 1e1220e >
 1e14b12:    e4 fd 00 28       	r2 = r8.b0 (u)
 1e14b16:    50 08             	r0 = r5
 1e14b18:    91 08             	r1 = r9
 1e14b1a:    61 17             	call -318 <hci_event_encryption_change : 1e149de >
 1e14b1c:    5e 18             	goto 188 <.GJTIE726_0_0_+0xE6 : 1e14bda >
 1e14b1e:    00 4a             	r0 = [r5 + 0]
 1e14b20:    11 71             	r1 = 17
 1e14b22:    02 70             	r2 = 0
 1e14b24:    bf f3 73 eb       	call -10522 <le_hw_ioctrl : 1e1220e >
 1e14b28:    e4 fd 00 28       	r2 = r8.b0 (u)
 1e14b2c:    50 08             	r0 = r5
 1e14b2e:    91 08             	r1 = r9
 1e14b30:    88 17             	call -240 <hci_event_encryption_refresh_complete : 1e14a42 >
 1e14b32:    53 18             	goto 166 <.GJTIE726_0_0_+0xE6 : 1e14bda >
 1e14b34:    d6 5f             	r6 = h[r7 + 58] (u)			  ## link_layer.c:1579:50
 1e14b36:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1579:29
 1e14b38:    41 70             	r1 = 4			  ## link_layer.c:1579:5
 1e14b3a:    62 08             	r2 = r6			  ## link_layer.c:1579:5
 1e14b3c:    bf f3 67 eb       	call -10546 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:1579:5
 1e14b40:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:1583:60
 1e14b44:    c1 ff 04 46 e1 01 	r1 = 31540740 <__connection_upadte : 1e14604 >			  ## link_layer.c:1583:5
 1e14b4a:    50 08             	r0 = r5			  ## link_layer.c:1583:5
 1e14b4c:    03 17             	call -506 <__event_oneshot_add : 1e14954 >			  ## link_layer.c:1583:5
 1e14b4e:    c1 ff 2c 47 e1 01 	r1 = 31541036 <__master_ll_send_conn_update_done : 1e1472c >			  ## link_layer.c:1585:5
 1e14b54:    50 08             	r0 = r5			  ## link_layer.c:1585:5
 1e14b56:    62 08             	r2 = r6			  ## link_layer.c:1585:5
 1e14b58:    12 17             	call -476 <__event_oneshot_post_add : 1e1497e >			  ## link_layer.c:1585:5
 1e14b5a:    3f 18             	goto 126 <.GJTIE726_0_0_+0xE6 : 1e14bda >			  ## link_layer.c:1585:5
 1e14b5c:    d6 5f             	r6 = h[r7 + 58] (u)			  ## link_layer.c:1900:50
 1e14b5e:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1900:29
 1e14b60:    41 70             	r1 = 4			  ## link_layer.c:1900:5
 1e14b62:    62 08             	r2 = r6			  ## link_layer.c:1900:5
 1e14b64:    bf f3 53 eb       	call -10586 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:1900:5
 1e14b68:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:1902:61
 1e14b6c:    c1 ff 32 47 e1 01 	r1 = 31541042 <__channel_map_upadte : 1e14732 >			  ## link_layer.c:1902:5
 1e14b72:    50 08             	r0 = r5			  ## link_layer.c:1902:5
 1e14b74:    ef 16             	call -546 <__event_oneshot_add : 1e14954 >			  ## link_layer.c:1902:5
 1e14b76:    31 18             	goto 98 <.GJTIE726_0_0_+0xE6 : 1e14bda >			  ## link_layer.c:1902:5
 1e14b78:    08 e0 0a 00       	if (r8 == 0) goto 20 <.GJTIE726_0_0_+0x9C : 1e14b90 >
 1e14b7c:    48 e0 0a 10       	if (r8 != 4) goto 20 <.GJTIE726_0_0_+0xA0 : 1e14b94 >
 1e14b80:    28 72             	r8 = 34
 1e14b82:    0a 18             	goto 20 <.GJTIE726_0_0_+0xA4 : 1e14b98 >
 1e14b84:    08 e0 21 00       	if (r8 == 0) goto 66 <.GJTIE726_0_0_+0xD6 : 1e14bca >
 1e14b88:    48 e0 21 10       	if (r8 != 4) goto 66 <.GJTIE726_0_0_+0xDA : 1e14bce >
 1e14b8c:    28 72             	r8 = 34
 1e14b8e:    21 18             	goto 66 <.GJTIE726_0_0_+0xDE : 1e14bd2 >
 1e14b90:    08 70             	r8 = 0
 1e14b92:    02 18             	goto 4 <.GJTIE726_0_0_+0xA4 : 1e14b98 >
 1e14b94:    8f f3 3f 74       	call 2025598 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14b98:    c3 5f             	r3 = h[r7 + 56] (u)			  ## ll_events.c:431:5
 1e14b9a:    04 f9 15 90       	r4 = b[r9 + 21] (u)			  ## ll_events.c:431:5
 1e14b9e:    92 fc 15 00       	r2 = r9 + 21			  ## ll_events.c:430:17
 1e14ba2:    11 70             	r1 = 1			  ## ll_events.c:431:5
 1e14ba4:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e14ba6:    bf f3 e0 7f       	call -65600 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_events.c:431:5
 1e14baa:    05 08             	r5 = r0			  ## ll_events.c:431:5
 1e14bac:    31 70             	r1 = 3			  ## ll_events.c:431:5
 1e14bae:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e14bb0:    bf f3 db 7f       	call -65610 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_events.c:431:5
 1e14bb4:    28 02             	[sp+8] = r0			  ## ll_events.c:431:5
 1e14bb6:    1d 02             	[sp+4] = r5			  ## ll_events.c:431:5
 1e14bb8:    c1 ff f0 f1 e0 01 	r1 = 31519216 <bluetooth_base_uuid+0x1E6 : 1e0f1f0 >			  ## ll_events.c:431:5
 1e14bbe:    c0 70             	r0 = 12			  ## ll_events.c:431:5
 1e14bc0:    0c 02             	[sp] = r4			  ## ll_events.c:431:5
 1e14bc2:    82 08             	r2 = r8			  ## ll_events.c:431:5
 1e14bc4:    bf f3 29 e7       	call -12718 <hci_send_event : 1e11a1a >			  ## ll_events.c:431:5
 1e14bc8:    08 18             	goto 16 <.GJTIE726_0_0_+0xE6 : 1e14bda >
 1e14bca:    68 71             	r8 = 22
 1e14bcc:    02 18             	goto 4 <.GJTIE726_0_0_+0xDE : 1e14bd2 >
 1e14bce:    8f f3 22 74       	call 2025540 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14bd2:    e4 fd 00 18       	r1 = r8.b0 (u)			  ## ll_events.c:301:5
 1e14bd6:    50 08             	r0 = r5			  ## ll_events.c:301:5
 1e14bd8:    d0 15             	call -1120 <ll_disconnect_process : 1e1477a >			  ## ll_events.c:301:5
 1e14bda:    00 70             	r0 = 0
 1e14bdc:    10 f6 00 a0       	[r10 + 0] = r0			  ## link_layer.c:579:18
 1e14be0:    02 6e             	r2 = b[r7 + 0] (u)			  ## link_layer.c:581:28
 1e14be2:    11 94             	r1 = r2 + 1			  ## link_layer.c:581:91
 1e14be4:    42 e0 01 00       	if (r2 == 4) goto 2 <.GJTIE726_0_0_+0xF6 : 1e14bea >			  ## link_layer.c:581:91
 1e14be8:    10 08             	r0 = r1			  ## link_layer.c:581:21
 1e14bea:    08 6e             	b[r7 + 0] = r0			  ## link_layer.c:581:19
 1e14bec:    06 0a             	sp += 12			  ## link_layer.c:581:19
 1e14bee:    5a 01             	{pc, r10-r4} = [sp++]			  ## link_layer.c:584:1


ll_response_timeout_handler:
 1e14bf0:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1347:0
 1e14bf2:    04 08             	r4 = r0			  ## link_layer.c:1347:0
 1e14bf4:    08 28             	if (r4 == 0) goto 16 <ll_response_timeout_handler+0x16 : 1e14c06 >			  ## link_layer.c:1347:0
 1e14bf6:    3a 14             	call -1932 <ll_response_timeout_stop : 1e1446c >			  ## link_layer.c:1357:5
 1e14bf8:    01 70             	r1 = 0			  ## link_layer.c:1360:5
 1e14bfa:    42 70             	r2 = 4			  ## link_layer.c:1360:5
 1e14bfc:    40 08             	r0 = r4			  ## link_layer.c:1360:5
 1e14bfe:    45 17             	call -374 <ll_control_procedure_finish : 1e14a8a >			  ## link_layer.c:1360:5
 1e14c00:    21 72             	r1 = 34			  ## link_layer.c:1362:5
 1e14c02:    40 08             	r0 = r4			  ## link_layer.c:1362:5
 1e14c04:    ba 15             	call -1164 <ll_disconnect_process : 1e1477a >			  ## link_layer.c:1362:5
 1e14c06:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1364:1


ll_control_step_verify:
 1e14c08:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:589:0
 1e14c0a:    14 08             	r4 = r1			  ## link_layer.c:589:0
 1e14c0c:    01 f9 c0 40       	r1 = b[r4 + 192] (u)			  ## link_layer.c:590:39
 1e14c10:    c9 c0             	r1 = r1 << 3			  ## link_layer.c:595:12
 1e14c12:    43 b8             	r3 = r4 + r1			  ## link_layer.c:595:12
 1e14c14:    01 f6 98 30       	r1 = [r3 + 152]			  ## link_layer.c:595:12
 1e14c18:    28 08             	r8 = r2			  ## link_layer.c:595:12
 1e14c1a:    06 08             	r6 = r0
 1e14c1c:    41 22             	if (r1 == 0) goto 130 <ll_control_step_verify+0x98 : 1e14ca0 >
 1e14c1e:    00 fb 07 40       	r0 = 16391 <low_power_system_down+0x19B : 4007 >			  ## link_layer.c:601:9
 1e14c22:    06 f2 06 00       	if (r6 == r0) goto 12 <ll_control_step_verify+0x2A : 1e14c32 >			  ## link_layer.c:601:9
 1e14c26:    60 80             	r0 += 6
 1e14c28:    06 f2 1e 00       	if (r6 == r0) goto 60 <ll_control_step_verify+0x60 : 1e14c68 >
 1e14c2c:    40 80             	r0 += 4
 1e14c2e:    06 f2 1f 10       	if (r6 != r0) goto 62 <ll_control_step_verify+0x68 : 1e14c70 >
 1e14c32:    30 fc 9c 00       	r0 = r3 + 156
 1e14c36:    02 60             	r2 = b[r0 + 0] (u)			  ## link_layer.c:611:19
 1e14c38:    f2 8f             	r2 += -1			  ## link_layer.c:611:19
 1e14c3a:    03 f9 15 80       	r3 = b[r8 + 21] (u)			  ## link_layer.c:614:13
 1e14c3e:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:611:19
 1e14c40:    87 04             	r7 = r2.b0 (u)			  ## link_layer.c:612:23
 1e14c42:    47 f8 00 17       	r7 = h[r1+r7<<1] (u)			  ## link_layer.c:612:23
 1e14c46:    c5 05             	r5 = r7.b0 (u)			  ## link_layer.c:614:23
 1e14c48:    53 f2 18 10       	if (r3 != r5) goto 48 <ll_control_step_verify+0x74 : 1e14c7c >			  ## link_layer.c:614:23
 1e14c4c:    40 08             	r0 = r4			  ## link_layer.c:615:13
 1e14c4e:    0e 14             	call -2020 <ll_response_timeout_stop : 1e1446c >			  ## link_layer.c:615:13
 1e14c50:    01 fb 07 40       	r1 = 16391 <low_power_system_down+0x19B : 4007 >			  ## link_layer.c:461:9
 1e14c54:    30 70             	r0 = 3			  ## link_layer.c:461:9
 1e14c56:    16 f2 01 00       	if (r6 == r1) goto 2 <ll_control_step_verify+0x54 : 1e14c5c >			  ## link_layer.c:461:9
 1e14c5a:    10 70             	r0 = 1			  ## link_layer.c:461:9
 1e14c5c:    a1 80             	r1 += 10			  ## link_layer.c:461:9
 1e14c5e:    22 70             	r2 = 2			  ## link_layer.c:461:9
 1e14c60:    16 f2 1b 00       	if (r6 == r1) goto 54 <ll_control_step_verify+0x92 : 1e14c9a >			  ## link_layer.c:461:9
 1e14c64:    02 08             	r2 = r0			  ## link_layer.c:461:9
 1e14c66:    19 18             	goto 50 <ll_control_step_verify+0x92 : 1e14c9a >			  ## link_layer.c:461:9
 1e14c68:    40 08             	r0 = r4			  ## link_layer.c:602:9
 1e14c6a:    00 14             	call -2048 <ll_response_timeout_stop : 1e1446c >			  ## link_layer.c:602:9
 1e14c6c:    12 70             	r2 = 1			  ## link_layer.c:603:9
 1e14c6e:    15 18             	goto 42 <ll_control_step_verify+0x92 : 1e14c9a >			  ## link_layer.c:603:9
 1e14c70:    02 f9 9c 30       	r2 = b[r3 + 156] (u)
 1e14c74:    47 f8 00 12       	r7 = h[r1+r2<<1] (u)
 1e14c78:    30 fc 9c 00       	r0 = r3 + 156
 1e14c7c:    67 f2 10 10       	if (r7 != r6) goto 32 <ll_control_step_verify+0x98 : 1e14ca0 >
 1e14c80:    12 80             	r2 += 1			  ## link_layer.c:625:19
 1e14c82:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:625:19
 1e14c84:    80 04             	r0 = r2.b0 (u)			  ## link_layer.c:629:13
 1e14c86:    40 c0             	r0 = r0 << 1			  ## link_layer.c:629:13
 1e14c88:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## link_layer.c:629:13
 1e14c8c:    01 ff ff 00 07 00 	if (r0 != 255) goto 14 <ll_control_step_verify+0x98 : 1e14ca0 >			  ## link_layer.c:629:13
 1e14c92:    40 08             	r0 = r4			  ## link_layer.c:631:13
 1e14c94:    bf f3 ea fb       	call -2092 <ll_response_timeout_stop : 1e1446c >			  ## link_layer.c:631:13
 1e14c98:    02 70             	r2 = 0			  ## link_layer.c:632:13
 1e14c9a:    40 08             	r0 = r4
 1e14c9c:    81 08             	r1 = r8
 1e14c9e:    f5 16             	call -534 <ll_control_procedure_finish : 1e14a8a >
 1e14ca0:    58 01             	{pc, r8-r4} = [sp++]			  ## link_layer.c:639:1


ll_link_for_handle:
 1e14ca2:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:759:0
 1e14ca4:    c3 ff 60 2d 00 00 	r3 = 11616 <ll_hdl : 2d60 >			  ## link_layer.c:759:0
 1e14caa:    02 f9 22 30       	r2 = b[r3 + 34] (u)			  ## link_layer.c:760:17
 1e14cae:    01 08             	r1 = r0			  ## link_layer.c:760:17
 1e14cb0:    00 70             	r0 = 0
 1e14cb2:    0e 24             	if (r2 == 0) goto 28 <ll_link_for_handle+0x2E : 1e14cd0 >
 1e14cb4:    92 46             	r2 = [r3 + 36]
 1e14cb6:    43 82             	r3 += 36
 1e14cb8:    32 f2 0a 00       	if (r2 == r3) goto 20 <ll_link_for_handle+0x2E : 1e14cd0 >
 1e14cbc:    04 f7 c4 20       	r4 = h[r2 + 196] (u)			  ## link_layer.c:769:13
 1e14cc0:    14 f2 04 00       	if (r4 == r1) goto 8 <ll_link_for_handle+0x2A : 1e14ccc >			  ## link_layer.c:769:13
 1e14cc4:    02 44             	r2 = [r2 + 0]
 1e14cc6:    32 f2 f9 1f       	if (r2 != r3) goto -14 <ll_link_for_handle+0x1A : 1e14cbc >
 1e14cca:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:775:1
 1e14ccc:    20 fc cc ff       	r0 = r2 + -52
 1e14cd0:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:775:1


ll_send_control_data:
 1e14cd2:    63 01             	[--sp] = {r3}			  ## link_layer.c:957:0
 1e14cd4:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:957:0
 1e14cd6:    fc 0b             	sp += -8			  ## link_layer.c:957:0
 1e14cd8:    26 08             	r6 = r2			  ## link_layer.c:957:0
 1e14cda:    17 08             	r7 = r1			  ## link_layer.c:957:0
 1e14cdc:    04 08             	r4 = r0			  ## link_layer.c:957:0
 1e14cde:    c1 a1             	r1 = sp + 28			  ## link_layer.c:957:0
 1e14ce0:    19 02             	[sp+4] = r1			  ## link_layer.c:961:5
 1e14ce2:    60 08             	r0 = r6			  ## link_layer.c:962:5
 1e14ce4:    bf f3 a0 85       	call -62656 <__vsprintf_len : 1e05828 >			  ## link_layer.c:962:5
 1e14ce8:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data+0x1E : 1e14cf0 >
 1e14cec:    8f f3 93 73       	call 2025254 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e14cf0:    45 fc c8 00       	r5 = r4 + 200
 1e14cf4:    0f 6a             	b[r5 + 0] = r7			  ## link_layer.c:964:23
 1e14cf6:    08 2c             	if (r6 == 0) goto 16 <ll_send_control_data+0x36 : 1e14d08 >			  ## link_layer.c:964:23
 1e14cf8:    c2 a1             	r2 = sp + 28
 1e14cfa:    1a 02             	[sp+4] = r2			  ## link_layer.c:967:9
 1e14cfc:    10 9a             	r0 = r5 + 1			  ## link_layer.c:968:42
 1e14cfe:    61 08             	r1 = r6			  ## link_layer.c:968:16
 1e14d00:    bf f3 1b 7e       	call -66506 <__vsprintf : 1e0493a >			  ## link_layer.c:968:16
 1e14d04:    13 90             	r3 = r0 + 1			  ## link_layer.c:968:13
 1e14d06:    01 18             	goto 2 <ll_send_control_data+0x38 : 1e14d0a >
 1e14d08:    13 70             	r3 = 1
 1e14d0a:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:974:39
 1e14d0c:    01 70             	r1 = 0			  ## link_layer.c:974:5
 1e14d0e:    32 70             	r2 = 3			  ## link_layer.c:974:5
 1e14d10:    0b 02             	[sp] = r3			  ## link_layer.c:974:5
 1e14d12:    53 08             	r3 = r5			  ## link_layer.c:974:5
 1e14d14:    bf f3 77 ee       	call -8978 <le_hw_send_packet_high : 1e12a06 >			  ## link_layer.c:974:5
 1e14d18:    04 0a             	sp += 8			  ## link_layer.c:974:5
 1e14d1a:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:975:1
 1e14d1c:    02 0a             	sp += 4			  ## link_layer.c:975:1
 1e14d1e:    20 00             	rts			  ## link_layer.c:975:1


ll_send_control_data_state_machine:
 1e14d20:    7b 01             	[--sp] = {rets, r11-r4}			  ## link_layer.c:657:0
 1e14d22:    e8 0b             	sp += -48			  ## link_layer.c:657:0
 1e14d24:    04 08             	r4 = r0			  ## link_layer.c:657:0
 1e14d26:    00 f9 c0 40       	r0 = b[r4 + 192] (u)			  ## link_layer.c:658:39
 1e14d2a:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:662:12
 1e14d2c:    02 b8             	r2 = r4 + r0			  ## link_layer.c:662:12
 1e14d2e:    00 f6 98 20       	r0 = [r2 + 152]			  ## link_layer.c:662:12
 1e14d32:    19 08             	r9 = r1			  ## link_layer.c:662:12
 1e14d34:    d7 20             	if (r0 == 0) goto 430 <ll_send_control_data_state_machine+0x1C4 : 1e14ee4 >
 1e14d36:    01 f9 9c 20       	r1 = b[r2 + 156] (u)			  ## link_layer.c:666:15
 1e14d3a:    40 f8 00 01       	r0 = h[r0+r1<<1] (u)			  ## link_layer.c:666:15
 1e14d3e:    81 d3             	r1 = r0 >> 14			  ## link_layer.c:669:9
 1e14d40:    d1 32             	if (r1 != 0) goto 418 <ll_send_control_data_state_machine+0x1C4 : 1e14ee4 >			  ## link_layer.c:669:9
 1e14d42:    06 04             	r6 = r0.b0 (u)			  ## link_layer.c:2748:13
 1e14d44:    c7 ff 10 0e 00 00 	r7 = 3600 <hci_param : e10 >			  ## link_layer.c:2748:13
 1e14d4a:    ca ff bc 0e 00 00 	r10 = 3772 <le_param : ebc >			  ## link_layer.c:2748:13
 1e14d50:    76 e0 12 d0       	ifs (r6 <= 7) goto 36 <ll_send_control_data_state_machine+0x58 : 1e14d78 >			  ## link_layer.c:2748:13
 1e14d54:    86 e0 8d 00       	if (r6 == 8) goto 282 <ll_send_control_data_state_machine+0x152 : 1e14e72 >
 1e14d58:    c6 e0 9a 00       	if (r6 == 12) goto 308 <ll_send_control_data_state_machine+0x170 : 1e14e90 >
 1e14d5c:    86 e4 be 10       	if (r6 != 72) goto 380 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14d60:    10 70             	r0 = 1			  ## link_layer.c:2737:12
 1e14d62:    15 70             	r5 = 1			  ## link_layer.c:2737:12
 1e14d64:    9e 17             	call -196 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2737:12
 1e14d66:    ba 20             	if (r0 == 0) goto 372 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14d68:    01 70             	r1 = 0			  ## link_layer.c:2742:5
 1e14d6a:    19 02             	[sp+4] = r1			  ## link_layer.c:2742:5
 1e14d6c:    c2 ff e7 f1 e0 01 	r2 = 31519207 <bluetooth_base_uuid+0x1DD : 1e0f1e7 >			  ## link_layer.c:2742:5
 1e14d72:    81 74             	r1 = 72			  ## link_layer.c:2742:5
 1e14d74:    f3 70             	r3 = 15			  ## link_layer.c:2742:5
 1e14d76:    9f 18             	goto 318 <ll_send_control_data_state_machine+0x196 : 1e14eb6 >			  ## link_layer.c:2742:5
 1e14d78:    26 e0 9f 00       	if (r6 == 2) goto 318 <ll_send_control_data_state_machine+0x19A : 1e14eba >
 1e14d7c:    56 e0 ae 10       	if (r6 != 5) goto 348 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14d80:    00 f7 7a a0       	r0 = h[r10 + 122] (u)			  ## link_layer.c:2261:47
 1e14d84:    8e 17             	call -228 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2261:28
 1e14d86:    08 08             	r8 = r0			  ## link_layer.c:2261:28
 1e14d88:    a9 20             	if (r0 == 0) goto 338 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14d8a:    00 fc 2c 01       	r0 = r0 + 300
 1e14d8e:    31 60             	r1 = b[r0 + 3] (u)			  ## link_layer.c:2273:5
 1e14d90:    22 60             	r2 = b[r0 + 2] (u)			  ## link_layer.c:2273:5
 1e14d92:    13 60             	r3 = b[r0 + 1] (u)			  ## link_layer.c:2273:5
 1e14d94:    07 60             	r7 = b[r0 + 0] (u)			  ## link_layer.c:2273:5
 1e14d96:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## link_layer.c:2273:5
 1e14d9a:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## link_layer.c:2273:5
 1e14d9e:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## link_layer.c:2273:5
 1e14da2:    af 02             	[sp+40] = r7			  ## link_layer.c:2273:5
 1e14da4:    71 60             	r1 = b[r0 + 7] (u)			  ## link_layer.c:2275:5
 1e14da6:    62 60             	r2 = b[r0 + 6] (u)			  ## link_layer.c:2275:5
 1e14da8:    53 60             	r3 = b[r0 + 5] (u)			  ## link_layer.c:2275:5
 1e14daa:    40 60             	r0 = b[r0 + 4] (u)			  ## link_layer.c:2275:5
 1e14dac:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## link_layer.c:2275:5
 1e14db0:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## link_layer.c:2275:5
 1e14db4:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## link_layer.c:2275:5
 1e14db8:    b8 02             	[sp+44] = r0			  ## link_layer.c:2275:5
 1e14dba:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2278:29
 1e14dbe:    82 a2             	r2 = sp + 40			  ## link_layer.c:2278:29
 1e14dc0:    01 70             	r1 = 0			  ## link_layer.c:2278:5
 1e14dc2:    bf f3 24 ea       	call -11192 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:2278:5
 1e14dc6:    87 fc 0c 01       	r7 = r8 + 268			  ## link_layer.c:2278:5
 1e14dca:    70 6f             	r0 = b[r7 + 23] (u)			  ## link_layer.c:2284:5
 1e14dcc:    61 6f             	r1 = b[r7 + 22] (u)			  ## link_layer.c:2284:5
 1e14dce:    52 6f             	r2 = b[r7 + 21] (u)			  ## link_layer.c:2284:5
 1e14dd0:    43 6f             	r3 = b[r7 + 20] (u)			  ## link_layer.c:2284:5
 1e14dd2:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## link_layer.c:2284:5
 1e14dd6:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## link_layer.c:2284:5
 1e14dda:    0b f9 11 70       	r11 = b[r7 + 17] (u)			  ## link_layer.c:2284:5
 1e14dde:    32 6f             	r2 = b[r7 + 19] (u)			  ## link_layer.c:2284:5
 1e14de0:    25 6f             	r5 = b[r7 + 18] (u)			  ## link_layer.c:2284:5
 1e14de2:    00 6f             	r0 = b[r7 + 16] (u)			  ## link_layer.c:2284:5
 1e14de4:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## link_layer.c:2284:5
 1e14de8:    3b 02             	[sp+12] = r3			  ## link_layer.c:2284:5
 1e14dea:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## link_layer.c:2284:5
 1e14dee:    c8 fd 40 0b       	r0 <= insert(r11, p:8, l:8)			  ## link_layer.c:2284:5
 1e14df2:    d0 fd 80 05       	r0 <= insert(r5, p:16, l:16)			  ## link_layer.c:2284:5
 1e14df6:    28 02             	[sp+8] = r0			  ## link_layer.c:2284:5
 1e14df8:    f0 6f             	r0 = b[r7 + 31] (u)			  ## link_layer.c:2286:5
 1e14dfa:    e1 6f             	r1 = b[r7 + 30] (u)			  ## link_layer.c:2286:5
 1e14dfc:    d2 6f             	r2 = b[r7 + 29] (u)			  ## link_layer.c:2286:5
 1e14dfe:    c3 6f             	r3 = b[r7 + 28] (u)			  ## link_layer.c:2286:5
 1e14e00:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## link_layer.c:2286:5
 1e14e04:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## link_layer.c:2286:5
 1e14e08:    0b f9 19 70       	r11 = b[r7 + 25] (u)			  ## link_layer.c:2286:5
 1e14e0c:    b2 6f             	r2 = b[r7 + 27] (u)			  ## link_layer.c:2286:5
 1e14e0e:    a5 6f             	r5 = b[r7 + 26] (u)			  ## link_layer.c:2286:5
 1e14e10:    80 6f             	r0 = b[r7 + 24] (u)			  ## link_layer.c:2286:5
 1e14e12:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## link_layer.c:2286:5
 1e14e16:    5b 02             	[sp+20] = r3			  ## link_layer.c:2286:5
 1e14e18:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## link_layer.c:2286:5
 1e14e1c:    c8 fd 40 0b       	r0 <= insert(r11, p:8, l:8)			  ## link_layer.c:2286:5
 1e14e20:    d0 fd 80 05       	r0 <= insert(r5, p:16, l:16)			  ## link_layer.c:2286:5
 1e14e24:    48 02             	[sp+16] = r0			  ## link_layer.c:2286:5
 1e14e26:    a1 fc 7c 00       	r1 = r10 + 124			  ## link_layer.c:2287:5
 1e14e2a:    02 71             	r2 = 16			  ## link_layer.c:2287:5
 1e14e2c:    70 08             	r0 = r7			  ## link_layer.c:2287:5
 1e14e2e:    97 f3 59 90       	call 3088562 <memcpy : 106ee4 >			  ## link_layer.c:2287:5
 1e14e32:    81 a0             	r1 = sp + 8			  ## link_layer.c:2287:5
 1e14e34:    85 a1             	r5 = sp + 24
 1e14e36:    70 08             	r0 = r7			  ## link_layer.c:2290:5
 1e14e38:    52 08             	r2 = r5			  ## link_layer.c:2290:5
 1e14e3a:    bf f3 04 86       	call -62456 <aes128_start : 1e05a46 >			  ## link_layer.c:2290:5
 1e14e3e:    f0 70             	r0 = 15
 1e14e40:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## btcontroller_util.c:117:28
 1e14e44:    82 a0             	r2 = sp + 8
 1e14e46:    11 fa 00 20       	b[r2+r0] = r1			  ## btcontroller_util.c:117:26
 1e14e4a:    f0 8f             	r0 += -1			  ## btcontroller_util.c:116:19
 1e14e4c:    f0 ef f8 1f       	if (r0 != -1) goto -16 <ll_send_control_data_state_machine+0x120 : 1e14e40 >			  ## btcontroller_util.c:116:19
 1e14e50:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2296:29
 1e14e54:    82 a0             	r2 = sp + 8			  ## link_layer.c:2296:29
 1e14e56:    11 70             	r1 = 1			  ## link_layer.c:2296:5
 1e14e58:    bf f3 d9 e9       	call -11342 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:2296:5
 1e14e5c:    00 f6 00 80       	r0 = [r8 + 0]			  ## link_layer.c:2298:31
 1e14e60:    b1 70             	r1 = 11			  ## link_layer.c:2300:5
 1e14e62:    12 70             	r2 = 1			  ## link_layer.c:2300:5
 1e14e64:    bf f3 d3 e9       	call -11354 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:2300:5
 1e14e68:    51 70             	r1 = 5			  ## link_layer.c:2302:5
 1e14e6a:    02 70             	r2 = 0			  ## link_layer.c:2302:5
 1e14e6c:    80 08             	r0 = r8			  ## link_layer.c:2302:5
 1e14e6e:    31 17             	call -414 <ll_send_control_data : 1e14cd2 >			  ## link_layer.c:2302:5
 1e14e70:    35 18             	goto 106 <ll_send_control_data_state_machine+0x1BC : 1e14edc >			  ## link_layer.c:2302:5
 1e14e72:    00 f7 5c a0       	r0 = h[r10 + 92] (u)			  ## link_layer.c:1981:47
 1e14e76:    15 17             	call -470 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:1981:28
 1e14e78:    31 20             	if (r0 == 0) goto 98 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14e7a:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:1990:9
 1e14e7e:    c2 ff d8 f1 e0 01 	r2 = 31519192 <bluetooth_base_uuid+0x1CE : 1e0f1d8 >			  ## link_layer.c:1990:9
 1e14e84:    a3 fc 22 00       	r3 = r10 + 34			  ## link_layer.c:1994:9
 1e14e88:    11 e0 26 10       	if (r1 != 1) goto 76 <ll_send_control_data_state_machine+0x1B8 : 1e14ed8 >			  ## link_layer.c:1990:9
 1e14e8c:    e1 70             	r1 = 14			  ## link_layer.c:1991:9
 1e14e8e:    25 18             	goto 74 <ll_send_control_data_state_machine+0x1BA : 1e14eda >			  ## link_layer.c:1991:9
 1e14e90:    01 f9 9c 70       	r1 = b[r7 + 156] (u)			  ## link_layer.c:2059:47
 1e14e94:    00 f9 9b 70       	r0 = b[r7 + 155] (u)			  ## link_layer.c:2059:47
 1e14e98:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2059:47
 1e14e9c:    02 17             	call -508 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2059:28
 1e14e9e:    1e 20             	if (r0 == 0) goto 60 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14ea0:    03 f9 32 a0       	r3 = b[r10 + 50] (u)			  ## link_layer.c:2070:26
 1e14ea4:    05 f7 34 a0       	r5 = h[r10 + 52] (u)			  ## link_layer.c:2071:26
 1e14ea8:    01 f7 36 a0       	r1 = h[r10 + 54] (u)			  ## link_layer.c:2072:26
 1e14eac:    19 02             	[sp+4] = r1			  ## link_layer.c:2068:5
 1e14eae:    c2 ff f2 f1 e0 01 	r2 = 31519218 <bluetooth_base_uuid+0x1E8 : 1e0f1f2 >			  ## link_layer.c:2068:5
 1e14eb4:    c1 70             	r1 = 12			  ## link_layer.c:2068:5
 1e14eb6:    0d 02             	[sp] = r5
 1e14eb8:    10 18             	goto 32 <ll_send_control_data_state_machine+0x1BA : 1e14eda >
 1e14eba:    01 f9 9e 70       	r1 = b[r7 + 158] (u)			  ## link_layer.c:2407:47
 1e14ebe:    00 f9 9d 70       	r0 = b[r7 + 157] (u)			  ## link_layer.c:2407:47
 1e14ec2:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2407:47
 1e14ec6:    ed 16             	call -550 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2407:28
 1e14ec8:    09 20             	if (r0 == 0) goto 18 <ll_send_control_data_state_machine+0x1BC : 1e14edc >
 1e14eca:    03 f9 9f 70       	r3 = b[r7 + 159] (u)			  ## link_layer.c:2416:55
 1e14ece:    c2 ff e9 f1 e0 01 	r2 = 31519209 <bluetooth_base_uuid+0x1DF : 1e0f1e9 >			  ## link_layer.c:2416:5
 1e14ed4:    21 70             	r1 = 2			  ## link_layer.c:2416:5
 1e14ed6:    01 18             	goto 2 <ll_send_control_data_state_machine+0x1BA : 1e14eda >			  ## link_layer.c:2416:5
 1e14ed8:    81 70             	r1 = 8			  ## link_layer.c:1994:9
 1e14eda:    fb 16             	call -522 <ll_send_control_data : 1e14cd2 >
 1e14edc:    60 08             	r0 = r6			  ## link_layer.c:682:5
 1e14ede:    41 08             	r1 = r4			  ## link_layer.c:682:5
 1e14ee0:    92 08             	r2 = r9			  ## link_layer.c:682:5
 1e14ee2:    92 16             	call -732 <ll_control_step_verify : 1e14c08 >			  ## link_layer.c:682:5
 1e14ee4:    18 0a             	sp += 48
 1e14ee6:    5b 01             	{pc, r11-r4} = [sp++]			  ## link_layer.c:683:1


ll_thread_process:
 1e14ee8:    7f 01             	[--sp] = {rets, r15-r4}			  ## link_layer.c:3041:0
 1e14eea:    f6 0b             	sp += -20			  ## link_layer.c:3041:0
 1e14eec:    c7 ff 60 2d 00 00 	r7 = 11616 <ll_hdl : 2d60 >			  ## link_layer.c:3041:0
 1e14ef2:    15 4e             	r5 = [r7 + 4]			  ## link_layer.c:408:39
 1e14ef4:    06 08             	r6 = r0
 1e14ef6:    97 f3 51 8f       	call 3088034 <local_irq_disable : 106d9c >			  ## lbuf.c:236:5
 1e14efa:    04 4a             	r4 = [r5 + 0]			  ## lbuf.c:236:5
 1e14efc:    54 f2 05 00       	if (r4 == r5) goto 10 <ll_thread_process+0x22 : 1e14f0a >
 1e14f00:    e0 68             	r0 = b[r4 + 14] (u)			  ## lbuf.c:242:16
 1e14f02:    06 20             	if (r0 == 0) goto 12 <ll_thread_process+0x28 : 1e14f10 >			  ## lbuf.c:242:13
 1e14f04:    04 48             	r4 = [r4 + 0]
 1e14f06:    54 f2 fb 1f       	if (r4 != r5) goto -10 <ll_thread_process+0x18 : 1e14f00 >
 1e14f0a:    97 f3 45 8f       	call 3088010 <local_irq_enable : 106d98 >			  ## lbuf.c:249:5
 1e14f0e:    12 18             	goto 36 <ll_thread_process+0x4C : 1e14f34 >			  ## lbuf.c:249:5
 1e14f10:    10 70             	r0 = 1			  ## lbuf.c:243:22
 1e14f12:    e8 68             	b[r4 + 14] = r0			  ## lbuf.c:243:22
 1e14f14:    97 f3 40 8f       	call 3088000 <local_irq_enable : 106d98 >			  ## lbuf.c:244:13
 1e14f18:    c0 ff a8 2c 00 00 	r0 = 11432 <h4_transport : 2ca8 >			  ## link_layer.c:412:9
 1e14f1e:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:412:9
 1e14f20:    63 40             	r3 = [r0 + 24]			  ## link_layer.c:412:24
 1e14f22:    10 69             	r0 = b[r4 + 17] (u)			  ## link_layer.c:412:84
 1e14f24:    04 81             	r4 += 16			  ## lbuf.c:245:22
 1e14f26:    22 90             	r2 = r0 + 2			  ## link_layer.c:412:82
 1e14f28:    40 70             	r0 = 4			  ## link_layer.c:412:9
 1e14f2a:    41 08             	r1 = r4			  ## link_layer.c:412:9
 1e14f2c:    83 00             	call r3			  ## link_layer.c:412:9
 1e14f2e:    40 08             	r0 = r4			  ## link_layer.c:413:9
 1e14f30:    bf f3 8a 62       	call -80620 <lbuf_free_btctrler : 1e01448 >			  ## link_layer.c:413:9
 1e14f34:    c0 ff b0 0e 00 00 	r0 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:557:9
 1e14f3a:    00 40             	r0 = [r0 + 0]			  ## ll_adv.c:557:9
 1e14f3c:    11 70             	r1 = 1			  ## ll_adv.c:557:9
 1e14f3e:    12 20             	if (r0 == 0) goto 36 <ll_thread_process+0x7C : 1e14f64 >			  ## ll_adv.c:557:9
 1e14f40:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:561:44
 1e14f42:    10 20             	if (r0 == 0) goto 32 <ll_thread_process+0x7C : 1e14f64 >
 1e14f44:    04 40             	r4 = [r0 + 0]			  ## ll_adv.c:567:19
 1e14f46:    0e 28             	if (r4 == 0) goto 28 <ll_thread_process+0x7C : 1e14f64 >
 1e14f48:    00 48             	r0 = [r4 + 0]
 1e14f4a:    c1 ff 14 57 e1 01 	r1 = 31545108 <__adv_rx_post_handler : 1e15714 >			  ## ll_adv.c:573:5
 1e14f50:    bf f3 7f ec       	call -9986 <le_hw_upload_data : 1e12852 >			  ## ll_adv.c:573:5
 1e14f54:    02 a1             	r2 = sp + 16			  ## ll_adv.c:573:5
 1e14f56:    31 71             	r1 = 19			  ## ll_adv.c:577:5
 1e14f58:    40 08             	r0 = r4			  ## ll_adv.c:577:5
 1e14f5a:    bf f3 58 e9       	call -11600 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:577:5
 1e14f5e:    40 02             	r0 = [sp+16]			  ## ll_adv.c:579:12
 1e14f60:    21 fd 01 09       	r1 = r0 & 1
 1e14f64:    0e f6 24 70       	r14 = [r7 + 36]			  ## link_layer.c:3060:5
 1e14f68:    7b fc 24 00       	r11 = r7 + 36			  ## link_layer.c:3060:5
 1e14f6c:    1e 02             	[sp+4] = r6			  ## link_layer.c:3060:5
 1e14f6e:    be f2 c3 00       	if (r14 == r11) goto 390 <ll_thread_process+0x210 : 1e150f8 >			  ## link_layer.c:3060:5
 1e14f72:    08 fb fd 7f       	r8 = 32765 <nvbss_size+0xCBD : 7ffd >
 1e14f76:    29 02             	[sp+8] = r1
 1e14f78:    e9 08             	r9 = r14
 1e14f7a:    0e f6 00 90       	r14 = [r9 + 0]
 1e14f7e:    08 00             	csync			  ## link_layer.c:2911:12
 1e14f80:    9c fc 5c 00       	r12 = r9 + 92			  ## link_layer.c:2911:12
 1e14f84:    00 f6 6c c0       	r0 = [r12 + 108]			  ## link_layer.c:2911:12
 1e14f88:    9f fc cc ff       	r15 = r9 + -52			  ## link_layer.c:2911:12
 1e14f8c:    9a fc c4 00       	r10 = r9 + 196			  ## link_layer.c:2911:12
 1e14f90:    38 20             	if (r0 == 0) goto 112 <ll_thread_process+0x11A : 1e15002 >			  ## link_layer.c:2911:12
 1e14f92:    cd fc 74 00       	r13 = r12 + 116
 1e14f96:    05 70             	r5 = 0
 1e14f98:    00 f6 74 c0       	r0 = [r12 + 116]			  ## list.h:124:18
 1e14f9c:    d0 f2 49 00       	if (r0 == r13) goto 146 <ll_thread_process+0x14A : 1e15032 >			  ## list.h:124:18
 1e14fa0:    97 f3 fc 8e       	call 3087864 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e14fa4:    08 00             	csync			  ## atomic.h:32:5
 1e14fa6:    00 f6 6c c0       	r0 = [r12 + 108]			  ## atomic.h:34:14
 1e14faa:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e14fac:    10 f6 6c c0       	[r12 + 108] = r0			  ## atomic.h:35:16
 1e14fb0:    97 f3 f2 8e       	call 3087844 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e14fb4:    00 f6 74 c0       	r0 = [r12 + 116]			  ## link_layer.c:1087:5
 1e14fb8:    01 70             	r1 = 0			  ## link_layer.c:1087:5
 1e14fba:    d0 f2 0f 00       	if (r0 == r13) goto 30 <ll_thread_process+0xF4 : 1e14fdc >			  ## link_layer.c:1087:5
 1e14fbe:    82 60             	r2 = b[r0 + 8] (u)			  ## link_layer.c:1090:32
 1e14fc0:    f2 8f             	r2 += -1			  ## link_layer.c:1090:32
 1e14fc2:    8a 60             	b[r0 + 8] = r2			  ## link_layer.c:1090:32
 1e14fc4:    61 ff ff 29 09 00 	if ((r2 & 255) != 0) goto 18 <ll_thread_process+0xF4 : 1e14fdc >			  ## link_layer.c:1090:32
 1e14fca:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e14fcc:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e14fce:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e14fd0:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e14fd2:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e14fd4:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e14fd6:    bf f3 8d 62       	call -80614 <__bt_free : 1e014f4 >			  ## link_layer.c:1093:13
 1e14fda:    11 70             	r1 = 1
 1e14fdc:    08 00             	csync			  ## link_layer.c:2911:12
 1e14fde:    00 f6 6c c0       	r0 = [r12 + 108]			  ## link_layer.c:2911:12
 1e14fe2:    15 09             	r5 += r1			  ## link_layer.c:2918:22
 1e14fe4:    d9 31             	if (r0 != 0) goto -78 <ll_thread_process+0xB0 : 1e14f98 >			  ## link_layer.c:2918:22
 1e14fe6:    60 ff ff 59 0b 00 	if ((r5 & 255) == 0) goto 22 <ll_thread_process+0x11A : 1e15002 >
 1e14fec:    03 f7 00 a0       	r3 = h[r10 + 0] (u)			  ## ll_events.c:408:5
 1e14ff0:    41 05             	r1 = r5.b0 (u)			  ## ll_events.c:408:5
 1e14ff2:    30 71             	r0 = 19			  ## ll_events.c:408:5
 1e14ff4:    12 70             	r2 = 1			  ## ll_events.c:408:5
 1e14ff6:    09 02             	[sp] = r1			  ## ll_events.c:408:5
 1e14ff8:    c1 ff c4 f1 e0 01 	r1 = 31519172 <bluetooth_base_uuid+0x1BA : 1e0f1c4 >			  ## ll_events.c:408:5
 1e14ffe:    bf f3 0c e5       	call -13800 <hci_send_event : 1e11a1a >			  ## ll_events.c:408:5
 1e15002:    08 00             	csync			  ## link_layer.c:2924:12
 1e15004:    13 18             	goto 38 <ll_thread_process+0x144 : 1e1502c >			  ## link_layer.c:2924:12
 1e15006:    97 f3 c9 8e       	call 3087762 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e1500a:    08 00             	csync			  ## atomic.h:32:5
 1e1500c:    00 f6 70 c0       	r0 = [r12 + 112]			  ## atomic.h:34:14
 1e15010:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e15012:    10 f6 70 c0       	[r12 + 112] = r0			  ## atomic.h:35:16
 1e15016:    97 f3 bf 8e       	call 3087742 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e1501a:    20 fb 80 0a       	r0 = 32768			  ## link_layer.c:2897:5
 1e1501e:    02 70             	r2 = 0			  ## link_layer.c:2897:5
 1e15020:    f1 08             	r1 = r15			  ## link_layer.c:2897:5
 1e15022:    f2 15             	call -1052 <ll_control_step_verify : 1e14c08 >			  ## link_layer.c:2897:5
 1e15024:    01 70             	r1 = 0			  ## link_layer.c:2900:5
 1e15026:    f0 08             	r0 = r15			  ## link_layer.c:2900:5
 1e15028:    7b 16             	call -778 <ll_send_control_data_state_machine : 1e14d20 >			  ## link_layer.c:2900:5
 1e1502a:    08 00             	csync			  ## link_layer.c:2924:12
 1e1502c:    00 f6 70 c0       	r0 = [r12 + 112]
 1e15030:    ea 31             	if (r0 != 0) goto -44 <ll_thread_process+0x11E : 1e15006 >
 1e15032:    00 f6 cc 9f       	r0 = [r9 + -52]
 1e15036:    01 f9 09 90       	r1 = b[r9 + 9] (u)			  ## link_layer.c:2875:9
 1e1503a:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2875:9
 1e1503c:    11 e0 04 10       	if (r1 != 1) goto 8 <ll_thread_process+0x160 : 1e15048 >			  ## link_layer.c:2875:9
 1e15040:    c1 ff ca 51 e1 01 	r1 = 31543754 <__conn_slave_rx_post_handler : 1e151ca >			  ## ll_slave.c:726:5
 1e15046:    03 18             	goto 6 <ll_thread_process+0x166 : 1e1504e >			  ## ll_slave.c:726:5
 1e15048:    c1 ff be 60 e1 01 	r1 = 31547582 <__conn_master_rx_post_handler : 1e160be >			  ## ll_master.c:582:5
 1e1504e:    bf f3 00 ec       	call -10240 <le_hw_upload_data : 1e12852 >
 1e15052:    07 f7 00 c0       	r7 = h[r12 + 0] (u)			  ## link_layer.c:2887:36
 1e15056:    05 f6 4c a0       	r5 = [r10 + 76]			  ## link_layer.c:285:5
 1e1505a:    a6 fc 4c 00       	r6 = r10 + 76			  ## link_layer.c:285:5
 1e1505e:    65 f2 16 00       	if (r5 == r6) goto 44 <ll_thread_process+0x1A6 : 1e1508e >
 1e15062:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:286:15
 1e15064:    e0 b1             	r0 = r0 - r7			  ## link_layer.c:286:26
 1e15066:    04 4a             	r4 = [r5 + 0]			  ## link_layer.c:286:26
 1e15068:    20 04             	r0 = r0.l (u)			  ## link_layer.c:287:14
 1e1506a:    f0 8f             	r0 += -1			  ## link_layer.c:287:28
 1e1506c:    80 f2 0c 90       	if (r0 <= r8) goto 24 <ll_thread_process+0x1A0 : 1e15088 >			  ## link_layer.c:287:28
 1e15070:    00 4a             	r0 = [r5 + 0]			  ## list.h:171:36
 1e15072:    11 4a             	r1 = [r5 + 4]			  ## list.h:171:23
 1e15074:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e15076:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e15078:    0d 4a             	[r5 + 0] = r5			  ## list.h:172:17
 1e1507a:    1d 4a             	[r5 + 4] = r5			  ## list.h:173:17
 1e1507c:    21 4a             	r1 = [r5 + 8]			  ## link_layer.c:289:16
 1e1507e:    f0 08             	r0 = r15			  ## link_layer.c:289:13
 1e15080:    81 00             	call r1			  ## link_layer.c:289:13
 1e15082:    50 08             	r0 = r5			  ## link_layer.c:290:13
 1e15084:    bf f3 36 62       	call -80788 <__bt_free : 1e014f4 >			  ## link_layer.c:290:13
 1e15088:    45 08             	r5 = r4
 1e1508a:    64 f2 ea 1f       	if (r4 != r6) goto -44 <ll_thread_process+0x17A : 1e15062 >
 1e1508e:    00 f9 08 90       	r0 = b[r9 + 8] (u)			  ## link_layer.c:3072:19
 1e15092:    80 e0 0f 10       	if (r0 != 8) goto 30 <ll_thread_process+0x1CC : 1e150b4 >			  ## link_layer.c:3072:13
 1e15096:    f0 08             	r0 = r15			  ## link_layer.c:3074:13
 1e15098:    bf f3 6c fa       	call -2856 <ll_delete_link : 1e14574 >			  ## link_layer.c:3074:13
 1e1509c:    e0 7f             	r0 = 254			  ## link_layer.c:3075:13
 1e1509e:    02 70             	r2 = 0			  ## link_layer.c:3075:13
 1e150a0:    03 70             	r3 = 0			  ## link_layer.c:3075:13
 1e150a2:    c1 ff e8 f1 e0 01 	r1 = 31519208 <bluetooth_base_uuid+0x1DE : 1e0f1e8 >			  ## link_layer.c:3075:13
 1e150a8:    bf f3 b7 e4       	call -13970 <hci_send_event : 1e11a1a >			  ## link_layer.c:3075:13
 1e150ac:    e9 08             	r9 = r14			  ## link_layer.c:3075:13
 1e150ae:    b9 f2 64 1f       	if (r9 != r11) goto -312 <ll_thread_process+0x92 : 1e14f7a >			  ## link_layer.c:3075:13
 1e150b2:    21 18             	goto 66 <ll_thread_process+0x20E : 1e150f6 >			  ## link_layer.c:3075:13
 1e150b4:    00 f6 cc 9f       	r0 = [r9 + -52]			  ## link_layer.c:3082:33
 1e150b8:    c2 a0             	r2 = sp + 12			  ## link_layer.c:3082:33
 1e150ba:    31 71             	r1 = 19			  ## link_layer.c:3082:9
 1e150bc:    bf f3 a7 e8       	call -11954 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:3082:9
 1e150c0:    00 f9 58 91       	r0 = b[r9 + 344] (u)			  ## link_layer.c:3087:19
 1e150c4:    34 02             	r4 = [sp+12]			  ## link_layer.c:3085:18
 1e150c6:    00 e1 11 30       	if (r0 < 16) goto 34 <ll_thread_process+0x204 : 1e150ec >
 1e150ca:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:3087:19
 1e150ce:    0e 20             	if (r0 == 0) goto 28 <ll_thread_process+0x204 : 1e150ec >			  ## link_layer.c:3087:19
 1e150d0:    10 f9 58 91       	b[r9 + 344] = r0			  ## link_layer.c:3088:39
 1e150d4:    03 f7 00 a0       	r3 = h[r10 + 0] (u)			  ## ll_events.c:679:34
 1e150d8:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## ll_events.c:680:34
 1e150dc:    00 7f             	r0 = 240			  ## ll_events.c:676:9
 1e150de:    02 70             	r2 = 0			  ## ll_events.c:676:9
 1e150e0:    09 02             	[sp] = r1			  ## ll_events.c:676:9
 1e150e2:    c1 ff c8 f1 e0 01 	r1 = 31519176 <bluetooth_base_uuid+0x1BE : 1e0f1c8 >			  ## ll_events.c:676:9
 1e150e8:    bf f3 ab fa       	call -2730 <__hci_emit_le_meta_event : 1e14642 >			  ## ll_events.c:676:9
 1e150ec:    21 02             	r1 = [sp+8]
 1e150ee:    51 b9             	r1 &= r4			  ## link_layer.c:3085:15
 1e150f0:    be f2 41 1f       	if (r14 != r11) goto -382 <ll_thread_process+0x8E : 1e14f76 >
 1e150f4:    01 18             	goto 2 <ll_thread_process+0x210 : 1e150f8 >
 1e150f6:    21 02             	r1 = [sp+8]
 1e150f8:    0f 22             	if (r1 == 0) goto 30 <ll_thread_process+0x230 : 1e15118 >
 1e150fa:    c0 ff 60 2d 00 00 	r0 = 11616 <ll_hdl : 2d60 >			  ## link_layer.c:3112:47
 1e15100:    14 40             	r4 = [r0 + 4]			  ## link_layer.c:3112:47
 1e15102:    97 f3 4b 8e       	call 3087510 <local_irq_disable : 106d9c >			  ## lbuf.c:169:5
 1e15106:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e15108:    97 f3 46 8e       	call 3087500 <local_irq_enable : 106d98 >			  ## lbuf.c:171:9
 1e1510c:    45 f2 04 10       	if (r5 != r4) goto 8 <ll_thread_process+0x230 : 1e15118 >			  ## lbuf.c:171:9
 1e15110:    01 70             	r1 = 0			  ## link_layer.c:3114:9
 1e15112:    10 02             	r0 = [sp+4]			  ## link_layer.c:3114:9
 1e15114:    bf f3 32 85       	call -62876 <thread_suspend : 1e05b7c >			  ## link_layer.c:3114:9
 1e15118:    0a 0a             	sp += 20
 1e1511a:    5f 01             	{pc, r15-r4} = [sp++]			  ## link_layer.c:3116:1


conn_rx_acl_u_post_handler:
 1e1511c:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1318:0
 1e1511e:    a2 62             	r2 = b[r1 + 10] (u)			  ## link_layer.c:1319:13
 1e15120:    1e 24             	if (r2 == 0) goto 60 <conn_rx_acl_u_post_handler+0x42 : 1e1515e >			  ## link_layer.c:1319:13
 1e15122:    03 f9 f8 00       	r3 = b[r0 + 248] (u)			  ## link_layer.c:1323:25
 1e15126:    0b 63             	b[r1 + 16] = r3			  ## link_layer.c:1323:17
 1e15128:    43 52             	r3 = h[r1 + 8] (u)			  ## link_layer.c:1326:13
 1e1512a:    82 fd 20 43       	r4 = uextra(r3, p:4, l:2)			  ## link_layer.c:1326:9
 1e1512e:    03 93             	r3 = r1 + 16			  ## link_layer.c:1323:5
 1e15130:    24 e0 04 00       	if (r4 == 2) goto 8 <conn_rx_acl_u_post_handler+0x20 : 1e1513c >			  ## link_layer.c:1323:5
 1e15134:    14 e0 07 10       	if (r4 != 1) goto 14 <conn_rx_acl_u_post_handler+0x2A : 1e15146 >
 1e15138:    04 71             	r4 = 16
 1e1513a:    01 18             	goto 2 <conn_rx_acl_u_post_handler+0x22 : 1e1513e >
 1e1513c:    04 72             	r4 = 32
 1e1513e:    00 f9 f9 00       	r0 = b[r0 + 249] (u)
 1e15142:    50 b8             	r0 |= r4
 1e15144:    18 63             	b[r1 + 17] = r0
 1e15146:    2a 63             	b[r1 + 18] = r2			  ## link_layer.c:1332:17
 1e15148:    00 70             	r0 = 0			  ## link_layer.c:1333:17
 1e1514a:    38 63             	b[r1 + 19] = r0			  ## link_layer.c:1333:17
 1e1514c:    c0 ff a8 2c 00 00 	r0 = 11432 <h4_transport : 2ca8 >			  ## link_layer.c:1337:5
 1e15152:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:1337:5
 1e15154:    64 40             	r4 = [r0 + 24]			  ## link_layer.c:1337:20
 1e15156:    42 80             	r2 += 4			  ## link_layer.c:1337:71
 1e15158:    20 70             	r0 = 2			  ## link_layer.c:1337:5
 1e1515a:    31 08             	r1 = r3			  ## link_layer.c:1337:5
 1e1515c:    84 00             	call r4			  ## link_layer.c:1337:5
 1e1515e:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1338:1


__instant_link_lost:
 1e15160:    12 70             	r2 = 1			  ## link_layer.c:1269:0
 1e15162:    13 70             	r3 = 1			  ## link_layer.c:1276:35
 1e15164:    10 f2 01 00       	if (r0 == r1) goto 2 <__instant_link_lost+0xA : 1e1516a >			  ## link_layer.c:1276:35
 1e15168:    03 70             	r3 = 0			  ## link_layer.c:1276:35
 1e1516a:    60 b0             	r0 = r0 - r1			  ## link_layer.c:1274:19
 1e1516c:    20 04             	r0 = r0.l (u)			  ## link_layer.c:1274:19
 1e1516e:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0xCBE : 7ffe >			  ## link_layer.c:1276:14
 1e15172:    10 f2 01 80       	if (r0 > r1) goto 2 <__instant_link_lost+0x18 : 1e15178 >
 1e15176:    02 70             	r2 = 0			  ## link_layer.c:1276:14
 1e15178:    e0 fd 20 03       	r0 = r3 | r2			  ## link_layer.c:1276:23
 1e1517c:    20 00             	rts			  ## link_layer.c:1281:1


ll_send_control_data_callback:
 1e1517e:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:979:0
 1e15180:    fc 0b             	sp += -8			  ## link_layer.c:979:0
 1e15182:    04 08             	r4 = r0			  ## link_layer.c:979:0
 1e15184:    81 a1             	r1 = sp + 24			  ## link_layer.c:979:0
 1e15186:    19 02             	[sp+4] = r1			  ## link_layer.c:983:5
 1e15188:    c5 ff cc f1 e0 01 	r5 = 31519180 <bluetooth_base_uuid+0x1C2 : 1e0f1cc >			  ## link_layer.c:983:5
 1e1518e:    50 08             	r0 = r5			  ## link_layer.c:984:5
 1e15190:    bf f3 4a 83       	call -63852 <__vsprintf_len : 1e05828 >			  ## link_layer.c:984:5
 1e15194:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data_callback+0x1E : 1e1519c >
 1e15198:    8f f3 3d 71       	call 2024058 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1519c:    40 70             	r0 = 4			  ## link_layer.c:986:23
 1e1519e:    46 fc c8 00       	r6 = r4 + 200			  ## link_layer.c:986:23
 1e151a2:    08 6c             	b[r6 + 0] = r0			  ## link_layer.c:986:23
 1e151a4:    82 a1             	r2 = sp + 24			  ## link_layer.c:986:23
 1e151a6:    1a 02             	[sp+4] = r2			  ## link_layer.c:989:9
 1e151a8:    10 9c             	r0 = r6 + 1			  ## link_layer.c:990:42
 1e151aa:    51 08             	r1 = r5			  ## link_layer.c:990:16
 1e151ac:    bf f3 c5 7b       	call -67702 <__vsprintf : 1e0493a >			  ## link_layer.c:990:16
 1e151b0:    03 48             	r3 = [r4 + 0]			  ## link_layer.c:996:39
 1e151b2:    10 80             	r0 += 1			  ## link_layer.c:990:13
 1e151b4:    c1 ff ac 56 e1 01 	r1 = 31545004 <__slave_ll_send_enc_rsp_callback : 1e156ac >			  ## link_layer.c:996:5
 1e151ba:    32 70             	r2 = 3			  ## link_layer.c:996:5
 1e151bc:    08 02             	[sp] = r0			  ## link_layer.c:996:5
 1e151be:    30 08             	r0 = r3			  ## link_layer.c:996:5
 1e151c0:    63 08             	r3 = r6			  ## link_layer.c:996:5
 1e151c2:    bf f3 20 ec       	call -10176 <le_hw_send_packet_high : 1e12a06 >			  ## link_layer.c:996:5
 1e151c6:    04 0a             	sp += 8
 1e151c8:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:997:1


__conn_slave_rx_post_handler:
 1e151ca:    7f 01             	[--sp] = {rets, r15-r4}			  ## ll_slave.c:705:0
 1e151cc:    f6 0b             	sp += -20			  ## ll_slave.c:705:0
 1e151ce:    14 08             	r4 = r1			  ## ll_slave.c:705:0
 1e151d0:    87 98             	r7 = r4 + 8			  ## ll_slave.c:705:0
 1e151d2:    01 5e             	r1 = h[r7 + 0] (u)			  ## ll_slave.c:708:17
 1e151d4:    09 d1             	r1 = r1 >> 4			  ## ll_slave.c:708:17
 1e151d6:    05 08             	r5 = r0			  ## ll_slave.c:708:17
 1e151d8:    60 ff 03 19 5d 02 	if ((r1 & 3) == 0) goto 1210 <.GJTIE753_0_0_+0x3F4 : 1e15698 >
 1e151de:    20 fd 03 19       	r0 = r1 & 3			  ## ll_slave.c:708:5
 1e151e2:    30 e0 04 00       	if (r0 == 3) goto 8 <__conn_slave_rx_post_handler+0x24 : 1e151ee >			  ## ll_slave.c:708:5
 1e151e6:    50 08             	r0 = r5			  ## ll_slave.c:714:9
 1e151e8:    41 08             	r1 = r4			  ## ll_slave.c:714:9
 1e151ea:    98 17             	call -208 <conn_rx_acl_u_post_handler : 1e1511c >			  ## ll_slave.c:714:9
 1e151ec:    55 1a             	goto 1194 <.GJTIE753_0_0_+0x3F4 : 1e15698 >			  ## ll_slave.c:714:9
 1e151ee:    c3 6e             	r3 = b[r7 + 12] (u)			  ## ll_slave.c:503:17
 1e151f0:    c8 ff e9 f1 e0 01 	r8 = 31519209 <bluetooth_base_uuid+0x1DF : 1e0f1e9 >			  ## ll_slave.c:503:17
 1e151f6:    53 e4 5d 80       	if (r3 > 69) goto 186 <.GJTIE753_0_0_+0x10 : 1e152b4 >			  ## ll_slave.c:503:17
 1e151fa:    da 9e             	r10 = r7 + 13			  ## ll_slave.c:504:23
 1e151fc:    58 c0             	r0 = r3 << 1
 1e151fe:    c2 ff bc 0e 00 00 	r2 = 3772 <le_param : ebc >
 1e15204:    c9 ff e7 f1 e0 01 	r9 = 31519207 <bluetooth_base_uuid+0x1DD : 1e0f1e7 >
 1e1520a:    5c fc 28 00       	r12 = r5 + 40
 1e1520e:    56 fc 90 00       	r6 = r5 + 144
 1e15212:    5b fc c0 00       	r11 = r5 + 192
 1e15216:    b0 00             	tbh [r0]


.GJTIL753_0_0_:
 1e15218:    72 00     < 114 : 0x72 >
 1e1521a:    dc 00     < 220 : 0xDC >
 1e1521c:    ea 00     < 234 : 0xEA >
 1e1521e:    f2 00     < 242 : 0xF2 >
 1e15220:    4b 00     < 75 : 0x4B >
 1e15222:    4b 00     < 75 : 0x4B >
 1e15224:    6b 01     < 363 : 0x16B >
 1e15226:    36 02     < 566 : 0x236 >
 1e15228:    75 01     < 373 : 0x175 >
 1e1522a:    a0 01     < 416 : 0x1A0 >
 1e1522c:    c5 01     < 453 : 0x1C5 >
 1e1522e:    d0 01     < 464 : 0x1D0 >
 1e15230:    d9 01     < 473 : 0x1D9 >
 1e15232:    4b 00     < 75 : 0x4B >
 1e15234:    4b 00     < 75 : 0x4B >
 1e15236:    46 00     < 70 : 0x46 >
 1e15238:    4b 00     < 75 : 0x4B >
 1e1523a:    36 02     < 566 : 0x236 >
 1e1523c:    46 00     < 70 : 0x46 >
 1e1523e:    36 02     < 566 : 0x236 >
 1e15240:    46 00     < 70 : 0x46 >
 1e15242:    46 00     < 70 : 0x46 >
 1e15244:    46 00     < 70 : 0x46 >
 1e15246:    46 00     < 70 : 0x46 >
 1e15248:    36 02     < 566 : 0x236 >
 1e1524a:    46 00     < 70 : 0x46 >
 1e1524c:    46 00     < 70 : 0x46 >
 1e1524e:    46 00     < 70 : 0x46 >
 1e15250:    46 00     < 70 : 0x46 >
 1e15252:    46 00     < 70 : 0x46 >
 1e15254:    46 00     < 70 : 0x46 >
 1e15256:    36 02     < 566 : 0x236 >
 1e15258:    46 00     < 70 : 0x46 >
 1e1525a:    36 02     < 566 : 0x236 >
 1e1525c:    46 00     < 70 : 0x46 >
 1e1525e:    46 00     < 70 : 0x46 >
 1e15260:    46 00     < 70 : 0x46 >
 1e15262:    46 00     < 70 : 0x46 >
 1e15264:    46 00     < 70 : 0x46 >
 1e15266:    46 00     < 70 : 0x46 >
 1e15268:    46 00     < 70 : 0x46 >
 1e1526a:    46 00     < 70 : 0x46 >
 1e1526c:    46 00     < 70 : 0x46 >
 1e1526e:    46 00     < 70 : 0x46 >
 1e15270:    46 00     < 70 : 0x46 >
 1e15272:    46 00     < 70 : 0x46 >
 1e15274:    46 00     < 70 : 0x46 >
 1e15276:    46 00     < 70 : 0x46 >
 1e15278:    46 00     < 70 : 0x46 >
 1e1527a:    46 00     < 70 : 0x46 >
 1e1527c:    46 00     < 70 : 0x46 >
 1e1527e:    46 00     < 70 : 0x46 >
 1e15280:    46 00     < 70 : 0x46 >
 1e15282:    46 00     < 70 : 0x46 >
 1e15284:    46 00     < 70 : 0x46 >
 1e15286:    46 00     < 70 : 0x46 >
 1e15288:    46 00     < 70 : 0x46 >
 1e1528a:    46 00     < 70 : 0x46 >
 1e1528c:    46 00     < 70 : 0x46 >
 1e1528e:    46 00     < 70 : 0x46 >
 1e15290:    46 00     < 70 : 0x46 >
 1e15292:    46 00     < 70 : 0x46 >
 1e15294:    46 00     < 70 : 0x46 >
 1e15296:    46 00     < 70 : 0x46 >
 1e15298:    f8 01     < 504 : 0x1F8 >
 1e1529a:    46 00     < 70 : 0x46 >
 1e1529c:    46 00     < 70 : 0x46 >
 1e1529e:    46 00     < 70 : 0x46 >
 1e152a0:    46 00     < 70 : 0x46 >
 1e152a2:    12 02     < 530 : 0x212 >
 1e152a4:    71 70             	r1 = 7
 1e152a6:    50 08             	r0 = r5
 1e152a8:    82 08             	r2 = r8
 1e152aa:    13 15             	call -1498 <ll_send_control_data : 1e14cd2 >
 1e152ac:    eb 19             	goto 982 <.GJTIE753_0_0_+0x3E0 : 1e15684 >
 1e152ae:    8f f3 b2 70       	call 2023780 <p33_soft_reset : 3416 >
 1e152b2:    e8 19             	goto 976 <.GJTIE753_0_0_+0x3E0 : 1e15684 >
 1e152b4:    93 e4 f6 1f       	if (r3 != 73) goto -20 <.GJTIE753_0_0_ : 1e152a4 >
 1e152b8:    bf f3 32 d4       	call -22428 <get_bt_osc_offset_flag : 1e0fb20 >			  ## ll_slave.c:479:9
 1e152bc:    00 e0 e2 11       	if (r0 != 0) goto 964 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## ll_slave.c:479:9
 1e152c0:    00 6f             	r0 = b[r7 + 16] (u)			  ## ll_slave.c:478:24
 1e152c2:    f1 6e             	r1 = b[r7 + 15] (u)			  ## ll_slave.c:478:46
 1e152c4:    e2 6e             	r2 = b[r7 + 14] (u)			  ## ll_slave.c:478:68
 1e152c6:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:478:88
 1e152c8:    00 c6             	r0 = r0 << 24			  ## ll_slave.c:478:36
 1e152ca:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## ll_slave.c:478:43
 1e152ce:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## ll_slave.c:478:65
 1e152d2:    50 b6             	r0 |= r3			  ## ll_slave.c:478:86
 1e152d4:    bf f3 5d d4       	call -22342 <bt_osc_offset_set : 1e0fb92 >			  ## ll_slave.c:485:5
 1e152d8:    10 6f             	r0 = b[r7 + 17] (u)			  ## ll_slave.c:487:9
 1e152da:    0b 20             	if (r0 == 0) goto 22 <.GJTIE753_0_0_+0x4E : 1e152f2 >			  ## ll_slave.c:487:9
 1e152dc:    bf f3 62 d4       	call -22332 <bt_osc_offset_save : 1e0fba4 >			  ## ll_slave.c:489:9
 1e152e0:    bf f3 7c d4       	call -22280 <bt_fre_offset_get : 1e0fbdc >			  ## ll_slave.c:490:63
 1e152e4:    02 08             	r2 = r0			  ## ll_slave.c:490:63
 1e152e6:    c1 ff b8 f1 e0 01 	r1 = 31519160 <bluetooth_base_uuid+0x1AE : 1e0f1b8 >			  ## ll_slave.c:490:9
 1e152ec:    60 7f             	r0 = 246			  ## ll_slave.c:490:9
 1e152ee:    bf f3 94 e3       	call -14552 <hci_send_event : 1e11a1a >			  ## ll_slave.c:490:9
 1e152f2:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:494:30
 1e152f4:    bf f3 c8 eb       	call -10352 <ble_pll_comp_reset : 1e12a88 >			  ## ll_slave.c:494:5
 1e152f8:    01 75             	r1 = 80			  ## ll_slave.c:495:5
 1e152fa:    59 19             	goto 690 <.GJTIE753_0_0_+0x30A : 1e155ae >			  ## ll_slave.c:495:5
 1e152fc:    91 70             	r1 = 9			  ## ll_slave.c:52:19
 1e152fe:    a0 08             	r0 = r10			  ## ll_slave.c:52:19
 1e15300:    bf f3 33 7c       	call -67482 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:52:19
 1e15304:    31 5e             	r1 = h[r7 + 6] (u)			  ## ll_slave.c:55:9
 1e15306:    09 08             	r9 = r0			  ## ll_slave.c:52:19
 1e15308:    2b 17             	call -426 <__instant_link_lost : 1e15160 >			  ## ll_slave.c:55:9
 1e1530a:    10 e0 6a 00       	if (r0 == 1) goto 212 <.GJTIE753_0_0_+0x13E : 1e153e2 >
 1e1530e:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:64:29
 1e15310:    0b f7 1e 50       	r11 = h[r5 + 30] (u)			  ## ll_slave.c:71:69
 1e15314:    b8 6b             	b[r5 + 27] = r0			  ## ll_slave.c:64:27
 1e15316:    11 70             	r1 = 1			  ## ll_slave.c:65:29
 1e15318:    a0 08             	r0 = r10			  ## ll_slave.c:65:29
 1e1531a:    bf f3 26 7c       	call -67508 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:65:29
 1e1531e:    08 08             	r8 = r0			  ## ll_slave.c:65:29
 1e15320:    e8 5a             	h[r5 + 28] = r0			  ## ll_slave.c:65:27
 1e15322:    31 70             	r1 = 3			  ## ll_slave.c:66:29
 1e15324:    a0 08             	r0 = r10			  ## ll_slave.c:66:29
 1e15326:    bf f3 20 7c       	call -67520 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:66:29
 1e1532a:    03 08             	r3 = r0			  ## ll_slave.c:66:29
 1e1532c:    fb 5a             	h[r5 + 30] = r3			  ## ll_slave.c:66:27
 1e1532e:    51 70             	r1 = 5			  ## ll_slave.c:67:29
 1e15330:    a0 08             	r0 = r10			  ## ll_slave.c:67:29
 1e15332:    bf f3 1a 7c       	call -67532 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:67:29
 1e15336:    02 08             	r2 = r0			  ## ll_slave.c:67:29
 1e15338:    0a 5b             	h[r5 + 32] = r2			  ## ll_slave.c:67:27
 1e1533a:    71 70             	r1 = 7			  ## ll_slave.c:68:29
 1e1533c:    a0 08             	r0 = r10			  ## ll_slave.c:68:29
 1e1533e:    bf f3 14 7c       	call -67544 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:68:29
 1e15342:    18 5b             	h[r5 + 34] = r0			  ## ll_slave.c:68:27
 1e15344:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## ll_slave.c:71:54
 1e15348:    00 d1             	r0 = r0 >> 4			  ## ll_slave.c:71:31
 1e1534a:    20 fd 0e 09       	r0 = r0 & 14			  ## ll_slave.c:71:54
 1e1534e:    c1 ff b4 43 e1 01 	r1 = 31540148 <master_sca : 1e143b4 >			  ## ll_slave.c:71:31
 1e15354:    00 f8 00 01       	r0 = h[r0+r1] (u)			  ## ll_slave.c:71:31
 1e15358:    00 fc f4 01       	r0 = r0 + 500			  ## ll_slave.c:71:59
 1e1535c:    19 0e             	r1 = r3 * r0			  ## ll_slave.c:73:67
 1e1535e:    12 80             	r2 += 1			  ## ll_slave.c:73:113
 1e15360:    8a 0e             	r2 = r1 * r2			  ## ll_slave.c:73:90
 1e15362:    01 fb 20 03       	r1 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x18 : 320 >			  ## ll_slave.c:71:115
 1e15366:    c0 fe 10 22       	r2 = r2 / r1 (u)			  ## ll_slave.c:73:126
 1e1536a:    52 c0             	r2 = r2 << 1			  ## ll_slave.c:74:26
 1e1536c:    22 80             	r2 += 2			  ## ll_slave.c:74:26
 1e1536e:    a6 04             	r6 = r2.l (u)			  ## ll_slave.c:77:54
 1e15370:    03 fb c4 09       	r3 = 2500 <system_data_start+0x10 : 9c4 >			  ## ll_slave.c:77:54
 1e15374:    08 ff c4 69 01 00 	if (r6 > 2500) goto 2 <.GJTIE753_0_0_+0xD8 : 1e1537c >			  ## ll_slave.c:77:54
 1e1537a:    23 08             	r3 = r2			  ## ll_slave.c:77:9
 1e1537c:    52 5b             	r2 = h[r5 + 42] (u)			  ## ll_slave.c:81:9
 1e1537e:    5b 5b             	h[r5 + 42] = r3			  ## ll_slave.c:74:26
 1e15380:    80 fb b0 38       	r3 = r8 + r11			  ## ll_slave.c:71:82
 1e15384:    18 0e             	r0 = r3 * r0			  ## ll_slave.c:71:66
 1e15386:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## ll_slave.c:71:115
 1e1538a:    40 c0             	r0 = r0 << 1			  ## ll_slave.c:72:22
 1e1538c:    21 90             	r1 = r0 + 2			  ## ll_slave.c:72:22
 1e1538e:    61 04             	r1 = r1.l (u)			  ## ll_slave.c:81:24
 1e15390:    03 70             	r3 = 0			  ## ll_slave.c:81:24
 1e15392:    12 f2 07 90       	if (r2 <= r1) goto 14 <.GJTIE753_0_0_+0x100 : 1e153a4 >			  ## ll_slave.c:81:24
 1e15396:    c3 ff fe ff 00 00 	r3 = 65534 <_IRQ_MEM_ADDR+0xFE : fffe >
 1e1539c:    32 09             	r2 += r3
 1e1539e:    20 b4             	r0 = r2 - r0			  ## ll_slave.c:82:52
 1e153a0:    49 c0             	r1 = r1 << 1			  ## ll_slave.c:83:42
 1e153a2:    43 b0             	r3 = r0 + r1			  ## ll_slave.c:83:37
 1e153a4:    6b 5b             	h[r5 + 44] = r3			  ## ll_slave.c:85:37
 1e153a6:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:94:29
 1e153a8:    41 70             	r1 = 4			  ## ll_slave.c:94:5
 1e153aa:    92 08             	r2 = r9			  ## ll_slave.c:94:5
 1e153ac:    bf f3 2f e7       	call -12706 <le_hw_ioctrl : 1e1220e >			  ## ll_slave.c:94:5
 1e153b0:    92 fc ff ff       	r2 = r9 + -1			  ## ll_slave.c:96:60
 1e153b4:    c1 ff 04 46 e1 01 	r1 = 31540740 <__connection_upadte : 1e14604 >			  ## ll_slave.c:96:5
 1e153ba:    50 08             	r0 = r5			  ## ll_slave.c:96:5
 1e153bc:    bf f3 ca fa       	call -2668 <__event_oneshot_add : 1e14954 >			  ## ll_slave.c:96:5
 1e153c0:    c1 ff 9c 56 e1 01 	r1 = 31544988 <__slave_ll_receive_conn_update_req_done : 1e1569c >			  ## ll_slave.c:98:5
 1e153c6:    50 08             	r0 = r5			  ## ll_slave.c:98:5
 1e153c8:    92 08             	r2 = r9			  ## ll_slave.c:98:5
 1e153ca:    bf f3 d8 fa       	call -2640 <__event_oneshot_post_add : 1e1497e >			  ## ll_slave.c:98:5
 1e153ce:    5a 19             	goto 692 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## ll_slave.c:98:5
 1e153d0:    51 70             	r1 = 5			  ## ll_slave.c:107:19
 1e153d2:    a0 08             	r0 = r10			  ## ll_slave.c:107:19
 1e153d4:    bf f3 c9 7b       	call -67694 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:107:19
 1e153d8:    31 5e             	r1 = h[r7 + 6] (u)			  ## ll_slave.c:109:9
 1e153da:    08 08             	r8 = r0			  ## ll_slave.c:107:19
 1e153dc:    c1 16             	call -638 <__instant_link_lost : 1e15160 >			  ## ll_slave.c:109:9
 1e153de:    10 e0 3e 11       	if (r0 != 1) goto 636 <.GJTIE753_0_0_+0x3BA : 1e1565e >
 1e153e2:    81 72             	r1 = 40
 1e153e4:    50 08             	r0 = r5
 1e153e6:    bf f3 c8 f9       	call -3184 <ll_disconnect_process : 1e1477a >
 1e153ea:    4c 19             	goto 664 <.GJTIE753_0_0_+0x3E0 : 1e15684 >
 1e153ec:    02 5c             	r2 = h[r6 + 0] (u)			  ## ll_slave.c:134:66
 1e153ee:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:133:20
 1e153f0:    10 f9 89 51       	b[r5 + 393] = r0			  ## ll_slave.c:133:18
 1e153f4:    c1 ff a4 56 e1 01 	r1 = 31544996 <__slave_receive_terminte_ind_done : 1e156a4 >			  ## ll_slave.c:134:5
 1e153fa:    41 19             	goto 642 <.GJTIE753_0_0_+0x3DA : 1e1567e >			  ## ll_slave.c:134:5
 1e153fc:    01 f9 15 c0       	r1 = b[r12 + 21] (u)
 1e15400:    19 70             	r9 = 1
 1e15402:    11 e0 07 00       	if (r1 == 1) goto 14 <.GJTIE753_0_0_+0x170 : 1e15414 >
 1e15406:    8f f3 06 70       	call 2023436 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1540a:    01 f9 15 c0       	r1 = b[r12 + 21] (u)			  ## cpu.h:148:5
 1e1540e:    11 e0 01 00       	if (r1 == 1) goto 2 <.GJTIE753_0_0_+0x170 : 1e15414 >			  ## cpu.h:148:5
 1e15412:    09 70             	r9 = 0			  ## ll_slave.c:180:5
 1e15414:    0f f9 19 70       	r15 = b[r7 + 25] (u)			  ## ll_slave.c:184:5
 1e15418:    d2 6f             	r2 = b[r7 + 29] (u)			  ## ll_slave.c:184:5
 1e1541a:    73 6f             	r3 = b[r7 + 23] (u)			  ## ll_slave.c:184:5
 1e1541c:    0c f9 18 70       	r12 = b[r7 + 24] (u)			  ## ll_slave.c:184:5
 1e15420:    0d f9 1a 70       	r13 = b[r7 + 26] (u)			  ## ll_slave.c:184:5
 1e15424:    e0 6f             	r0 = b[r7 + 30] (u)			  ## ll_slave.c:184:5
 1e15426:    0e f9 1c 70       	r14 = b[r7 + 28] (u)			  ## ll_slave.c:184:5
 1e1542a:    b1 6f             	r1 = b[r7 + 27] (u)			  ## ll_slave.c:184:5
 1e1542c:    56 fc 1c 01       	r6 = r5 + 284			  ## ll_slave.c:184:5
 1e15430:    78 6c             	b[r6 + 7] = r0			  ## ll_slave.c:184:5
 1e15432:    1e f9 05 60       	b[r6 + 5] = r14			  ## ll_slave.c:184:5
 1e15436:    49 6c             	b[r6 + 4] = r1			  ## ll_slave.c:184:5
 1e15438:    1d f9 03 60       	b[r6 + 3] = r13			  ## ll_slave.c:184:5
 1e1543c:    1c f9 01 60       	b[r6 + 1] = r12			  ## ll_slave.c:184:5
 1e15440:    0b 6c             	b[r6 + 0] = r3			  ## ll_slave.c:184:5
 1e15442:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)			  ## ll_slave.c:184:5
 1e15446:    d0 fd 80 12       	r1 <= insert(r2, p:16, l:16)			  ## ll_slave.c:184:5
 1e1544a:    08 d4             	r0 = r1 >> 16			  ## ll_slave.c:184:5
 1e1544c:    68 6c             	b[r6 + 6] = r0			  ## ll_slave.c:184:5
 1e1544e:    c8 fd 40 fd       	r15 <= insert(r13, p:8, l:8)			  ## ll_slave.c:184:5
 1e15452:    d0 fd 80 3f       	r3 <= insert(r15, p:16, l:16)			  ## ll_slave.c:184:5
 1e15456:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:184:5
 1e15458:    28 6c             	b[r6 + 2] = r0			  ## ll_slave.c:184:5
 1e1545a:    40 fc 28 00       	r0 = r4 + 40			  ## ll_slave.c:184:5
 1e1545e:    21 60             	r1 = b[r0 + 2] (u)			  ## ll_slave.c:186:5
 1e15460:    02 60             	r2 = b[r0 + 0] (u)			  ## ll_slave.c:186:5
 1e15462:    f3 6f             	r3 = b[r7 + 31] (u)			  ## ll_slave.c:186:5
 1e15464:    10 60             	r0 = b[r0 + 1] (u)			  ## ll_slave.c:186:5
 1e15466:    39 6d             	b[r6 + 19] = r1			  ## ll_slave.c:186:5
 1e15468:    1a 6d             	b[r6 + 17] = r2			  ## ll_slave.c:186:5
 1e1546a:    0b 6d             	b[r6 + 16] = r3			  ## ll_slave.c:186:5
 1e1546c:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## ll_slave.c:186:5
 1e15470:    d0 fd 80 30       	r3 <= insert(r0, p:16, l:16)			  ## ll_slave.c:186:5
 1e15474:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:186:5
 1e15476:    28 6d             	b[r6 + 18] = r0			  ## ll_slave.c:186:5
 1e15478:    09 e0 02 10       	if (r9 != 0) goto 4 <.GJTIE753_0_0_+0x1DC : 1e15480 >			  ## ll_slave.c:186:5
 1e1547c:    8f f3 cb 6f       	call 2023318 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15480:    00 a1             	r0 = sp + 16
 1e15482:    41 70             	r1 = 4			  ## ll_slave.c:211:5
 1e15484:    bf f3 8b 83       	call -63722 <pseudo_random_genrate : 1e05b9e >			  ## ll_slave.c:211:5
 1e15488:    40 02             	r0 = [sp+16]			  ## ll_slave.c:213:5
 1e1548a:    48 6d             	b[r6 + 20] = r0			  ## ll_slave.c:213:5
 1e1548c:    01 d6             	r1 = r0 >> 24			  ## ll_slave.c:213:5
 1e1548e:    79 6d             	b[r6 + 23] = r1			  ## ll_slave.c:213:5
 1e15490:    01 d4             	r1 = r0 >> 16			  ## ll_slave.c:213:5
 1e15492:    69 6d             	b[r6 + 22] = r1			  ## ll_slave.c:213:5
 1e15494:    00 d2             	r0 = r0 >> 8			  ## ll_slave.c:213:5
 1e15496:    58 6d             	b[r6 + 21] = r0			  ## ll_slave.c:213:5
 1e15498:    80 a0             	r0 = sp + 8			  ## ll_slave.c:213:5
 1e1549a:    81 70             	r1 = 8			  ## ll_slave.c:216:5
 1e1549c:    bf f3 7f 83       	call -63746 <pseudo_random_genrate : 1e05b9e >			  ## ll_slave.c:216:5
 1e154a0:    30 02             	r0 = [sp+12]			  ## ll_slave.c:218:5
 1e154a2:    21 02             	r1 = [sp+8]			  ## ll_slave.c:218:5
 1e154a4:    c8 6c             	b[r6 + 12] = r0			  ## ll_slave.c:218:5
 1e154a6:    89 6c             	b[r6 + 8] = r1			  ## ll_slave.c:218:5
 1e154a8:    02 d6             	r2 = r0 >> 24			  ## ll_slave.c:218:5
 1e154aa:    fa 6c             	b[r6 + 15] = r2			  ## ll_slave.c:218:5
 1e154ac:    02 d4             	r2 = r0 >> 16			  ## ll_slave.c:218:5
 1e154ae:    ea 6c             	b[r6 + 14] = r2			  ## ll_slave.c:218:5
 1e154b0:    00 d2             	r0 = r0 >> 8			  ## ll_slave.c:218:5
 1e154b2:    d8 6c             	b[r6 + 13] = r0			  ## ll_slave.c:218:5
 1e154b4:    08 d6             	r0 = r1 >> 24			  ## ll_slave.c:218:5
 1e154b6:    b8 6c             	b[r6 + 11] = r0			  ## ll_slave.c:218:5
 1e154b8:    08 d4             	r0 = r1 >> 16			  ## ll_slave.c:218:5
 1e154ba:    a8 6c             	b[r6 + 10] = r0			  ## ll_slave.c:218:5
 1e154bc:    08 d2             	r0 = r1 >> 8			  ## ll_slave.c:218:5
 1e154be:    98 6c             	b[r6 + 9] = r0			  ## ll_slave.c:218:5
 1e154c0:    b0 fc 70 00       	r0 = r11 + 112			  ## ll_slave.c:213:5
 1e154c4:    18 02             	[sp+4] = r0			  ## ll_slave.c:222:5
 1e154c6:    b0 fc 64 00       	r0 = r11 + 100			  ## ll_slave.c:218:5
 1e154ca:    08 02             	[sp] = r0			  ## ll_slave.c:222:5
 1e154cc:    50 08             	r0 = r5			  ## ll_slave.c:222:5
 1e154ce:    57 16             	call -850 <ll_send_control_data_callback : 1e1517e >			  ## ll_slave.c:222:5
 1e154d0:    02 f7 38 b0       	r2 = h[r11 + 56] (u)			  ## ll_events.c:113:37
 1e154d4:    53 9f             	r3 = r7 + 21			  ## ll_events.c:115:50
 1e154d6:    c1 ff b2 f1 e0 01 	r1 = 31519154 <bluetooth_base_uuid+0x1A8 : 1e0f1b2 >			  ## ll_events.c:111:12
 1e154dc:    50 70             	r0 = 5			  ## ll_events.c:111:12
 1e154de:    0b 02             	[sp] = r3			  ## ll_events.c:111:12
 1e154e0:    a3 08             	r3 = r10			  ## ll_events.c:111:12
 1e154e2:    bf f3 ae f8       	call -3748 <__hci_emit_le_meta_event : 1e14642 >			  ## ll_events.c:111:12
 1e154e6:    ce 30             	if (r0 != 0) goto 412 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## ll_events.c:111:12
 1e154e8:    d1 70             	r1 = 13			  ## ll_slave.c:231:5
 1e154ea:    63 70             	r3 = 6			  ## ll_slave.c:231:5
 1e154ec:    dc 1e             	goto -584 <.GJTIE753_0_0_+0x2 : 1e152a6 >			  ## ll_slave.c:231:5
 1e154ee:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:141:31
 1e154f0:    a1 70             	r1 = 10			  ## ll_slave.c:143:5
 1e154f2:    12 70             	r2 = 1			  ## ll_slave.c:143:5
 1e154f4:    18 70             	r8 = 1			  ## ll_slave.c:143:5
 1e154f6:    bf f3 8a e6       	call -13036 <le_hw_ioctrl : 1e1220e >			  ## ll_slave.c:143:5
 1e154fa:    18 f9 03 60       	b[r6 + 3] = r8			  ## ll_slave.c:144:26
 1e154fe:    61 70             	r1 = 6			  ## ll_slave.c:153:9
 1e15500:    56 18             	goto 172 <.GJTIE753_0_0_+0x30A : 1e155ae >			  ## ll_slave.c:153:9
 1e15502:    0b f9 02 a0       	r11 = b[r10 + 2] (u)			  ## ll_slave.c:161:5
 1e15506:    01 f9 06 a0       	r1 = b[r10 + 6] (u)			  ## ll_slave.c:161:5
 1e1550a:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:161:5
 1e1550c:    08 f9 01 a0       	r8 = b[r10 + 1] (u)			  ## ll_slave.c:161:5
 1e15510:    06 f9 07 a0       	r6 = b[r10 + 7] (u)			  ## ll_slave.c:161:5
 1e15514:    09 f9 05 a0       	r9 = b[r10 + 5] (u)			  ## ll_slave.c:161:5
 1e15518:    00 f9 04 a0       	r0 = b[r10 + 4] (u)			  ## ll_slave.c:161:5
 1e1551c:    0a f9 03 a0       	r10 = b[r10 + 3] (u)			  ## ll_slave.c:161:5
 1e15520:    ce 65             	b[r2 + 28] = r6			  ## ll_slave.c:161:5
 1e15522:    19 f9 1a 20       	b[r2 + 26] = r9			  ## ll_slave.c:161:5
 1e15526:    98 65             	b[r2 + 25] = r0			  ## ll_slave.c:161:5
 1e15528:    1a f9 18 20       	b[r2 + 24] = r10			  ## ll_slave.c:161:5
 1e1552c:    18 f9 16 20       	b[r2 + 22] = r8			  ## ll_slave.c:161:5
 1e15530:    5b 65             	b[r2 + 21] = r3			  ## ll_slave.c:161:5
 1e15532:    c8 fd 40 16       	r1 <= insert(r6, p:8, l:8)			  ## ll_slave.c:161:5
 1e15536:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:161:5
 1e1553a:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:161:5
 1e1553c:    b8 65             	b[r2 + 27] = r0			  ## ll_slave.c:161:5
 1e1553e:    c8 fd 40 ba       	r11 <= insert(r10, p:8, l:8)			  ## ll_slave.c:161:5
 1e15542:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## ll_slave.c:161:5
 1e15546:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:161:5
 1e15548:    78 65             	b[r2 + 23] = r0			  ## ll_slave.c:161:5
 1e1554a:    23 fc 22 00       	r3 = r2 + 34			  ## ll_slave.c:166:5
 1e1554e:    c2 ff d8 f1 e0 01 	r2 = 31519192 <bluetooth_base_uuid+0x1CE : 1e0f1d8 >			  ## ll_slave.c:166:5
 1e15554:    91 70             	r1 = 9			  ## ll_slave.c:166:5
 1e15556:    56 18             	goto 172 <.GJTIE753_0_0_+0x360 : 1e15604 >			  ## ll_slave.c:166:5
 1e15558:    0b f9 02 a0       	r11 = b[r10 + 2] (u)			  ## ll_slave.c:171:5
 1e1555c:    01 f9 06 a0       	r1 = b[r10 + 6] (u)			  ## ll_slave.c:171:5
 1e15560:    d3 6e             	r3 = b[r7 + 13] (u)			  ## ll_slave.c:171:5
 1e15562:    08 f9 01 a0       	r8 = b[r10 + 1] (u)			  ## ll_slave.c:171:5
 1e15566:    06 f9 07 a0       	r6 = b[r10 + 7] (u)			  ## ll_slave.c:171:5
 1e1556a:    09 f9 05 a0       	r9 = b[r10 + 5] (u)			  ## ll_slave.c:171:5
 1e1556e:    00 f9 04 a0       	r0 = b[r10 + 4] (u)			  ## ll_slave.c:171:5
 1e15572:    0a f9 03 a0       	r10 = b[r10 + 3] (u)			  ## ll_slave.c:171:5
 1e15576:    ce 65             	b[r2 + 28] = r6			  ## ll_slave.c:171:5
 1e15578:    19 f9 1a 20       	b[r2 + 26] = r9			  ## ll_slave.c:171:5
 1e1557c:    98 65             	b[r2 + 25] = r0			  ## ll_slave.c:171:5
 1e1557e:    1a f9 18 20       	b[r2 + 24] = r10			  ## ll_slave.c:171:5
 1e15582:    18 f9 16 20       	b[r2 + 22] = r8			  ## ll_slave.c:171:5
 1e15586:    5b 65             	b[r2 + 21] = r3			  ## ll_slave.c:171:5
 1e15588:    c8 fd 40 16       	r1 <= insert(r6, p:8, l:8)			  ## ll_slave.c:171:5
 1e1558c:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:171:5
 1e15590:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:171:5
 1e15592:    b8 65             	b[r2 + 27] = r0			  ## ll_slave.c:171:5
 1e15594:    c8 fd 40 ba       	r11 <= insert(r10, p:8, l:8)			  ## ll_slave.c:171:5
 1e15598:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## ll_slave.c:171:5
 1e1559c:    18 d4             	r0 = r3 >> 16			  ## ll_slave.c:171:5
 1e1559e:    78 65             	b[r2 + 23] = r0			  ## ll_slave.c:171:5
 1e155a0:    71 18             	goto 226 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## ll_slave.c:171:5
 1e155a2:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:259:31
 1e155a4:    b1 70             	r1 = 11			  ## ll_slave.c:261:5
 1e155a6:    02 70             	r2 = 0			  ## ll_slave.c:261:5
 1e155a8:    bf f3 31 e6       	call -13214 <le_hw_ioctrl : 1e1220e >			  ## ll_slave.c:261:5
 1e155ac:    b1 70             	r1 = 11			  ## ll_slave.c:271:9
 1e155ae:    02 70             	r2 = 0
 1e155b0:    50 08             	r0 = r5
 1e155b2:    bf f3 8e fb       	call -2276 <ll_send_control_data : 1e14cd2 >
 1e155b6:    66 18             	goto 204 <.GJTIE753_0_0_+0x3E0 : 1e15684 >
 1e155b8:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:279:31
 1e155ba:    a1 70             	r1 = 10			  ## ll_slave.c:281:5
 1e155bc:    02 70             	r2 = 0			  ## ll_slave.c:281:5
 1e155be:    08 70             	r8 = 0			  ## ll_slave.c:281:5
 1e155c0:    bf f3 25 e6       	call -13238 <le_hw_ioctrl : 1e1220e >			  ## ll_slave.c:281:5
 1e155c4:    18 f9 03 60       	b[r6 + 3] = r8			  ## ll_slave.c:282:26
 1e155c8:    5d 18             	goto 186 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## ll_slave.c:282:26
 1e155ca:    d0 6e             	r0 = b[r7 + 13] (u)			  ## ll_slave.c:299:30
 1e155cc:    d8 65             	b[r2 + 29] = r0			  ## ll_slave.c:299:28
 1e155ce:    11 70             	r1 = 1			  ## ll_slave.c:300:30
 1e155d0:    a0 08             	r0 = r10			  ## ll_slave.c:300:30
 1e155d2:    bf f3 ca 7a       	call -68204 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:300:30
 1e155d6:    f8 54             	h[r2 + 30] = r0			  ## ll_slave.c:300:28
 1e155d8:    31 70             	r1 = 3			  ## ll_slave.c:301:33
 1e155da:    a0 08             	r0 = r10			  ## ll_slave.c:301:33
 1e155dc:    bf f3 c5 7a       	call -68214 <btctler_little_endian_read_16 : 1e04b6a >			  ## ll_slave.c:301:33
 1e155e0:    08 55             	h[r2 + 32] = r0			  ## ll_slave.c:301:31
 1e155e2:    00 f9 00 b0       	r0 = b[r11 + 0] (u)			  ## link_layer.c:650:39
 1e155e6:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:652:12
 1e155e8:    50 09             	r0 += r5			  ## link_layer.c:652:12
 1e155ea:    00 f6 98 00       	r0 = [r0 + 152]			  ## link_layer.c:652:12
 1e155ee:    4a 30             	if (r0 != 0) goto 148 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## link_layer.c:652:12
 1e155f0:    03 f9 32 20       	r3 = b[r2 + 50] (u)			  ## ll_slave.c:305:37
 1e155f4:    a0 55             	r0 = h[r2 + 52] (u)			  ## ll_slave.c:305:54
 1e155f6:    b1 55             	r1 = h[r2 + 54] (u)			  ## ll_slave.c:305:71
 1e155f8:    19 02             	[sp+4] = r1			  ## ll_slave.c:304:9
 1e155fa:    c2 ff f2 f1 e0 01 	r2 = 31519218 <bluetooth_base_uuid+0x1E8 : 1e0f1f2 >			  ## ll_slave.c:304:9
 1e15600:    c1 70             	r1 = 12			  ## ll_slave.c:304:9
 1e15602:    08 02             	[sp] = r0			  ## ll_slave.c:304:9
 1e15604:    50 08             	r0 = r5
 1e15606:    51 1e             	goto -862 <.GJTIE753_0_0_+0x6 : 1e152aa >
 1e15608:    bf f3 8a d2       	call -23276 <get_bt_osc_offset_flag : 1e0fb20 >			  ## ll_slave.c:456:9
 1e1560c:    06 08             	r6 = r0			  ## ll_slave.c:456:9
 1e1560e:    bf f3 93 d2       	call -23258 <bt_fre_offset_value_init : 1e0fb38 >			  ## ll_slave.c:461:5
 1e15612:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:462:30
 1e15614:    bf f3 38 ea       	call -11152 <ble_pll_comp_reset : 1e12a88 >			  ## ll_slave.c:462:5
 1e15618:    c1 ff e8 f1 e0 01 	r1 = 31519208 <bluetooth_base_uuid+0x1DE : 1e0f1e8 >			  ## ll_slave.c:464:5
 1e1561e:    e0 7f             	r0 = 254			  ## ll_slave.c:464:5
 1e15620:    22 70             	r2 = 2			  ## ll_slave.c:464:5
 1e15622:    13 70             	r3 = 1			  ## ll_slave.c:464:5
 1e15624:    bf f3 f9 e1       	call -15374 <hci_send_event : 1e11a1a >			  ## ll_slave.c:464:5
 1e15628:    f0 70             	r0 = 15			  ## ll_slave.c:466:5
 1e1562a:    18 02             	[sp+4] = r0			  ## ll_slave.c:466:5
 1e1562c:    03 70             	r3 = 0			  ## ll_slave.c:466:5
 1e1562e:    01 2c             	if (r6 == 0) goto 2 <.GJTIE753_0_0_+0x38E : 1e15632 >
 1e15630:    f3 7f             	r3 = 255
 1e15632:    11 74             	r1 = 65			  ## ll_slave.c:466:5
 1e15634:    0b 02             	[sp] = r3			  ## ll_slave.c:466:5
 1e15636:    50 08             	r0 = r5			  ## ll_slave.c:466:5
 1e15638:    92 08             	r2 = r9			  ## ll_slave.c:466:5
 1e1563a:    37 1e             	goto -914 <.GJTIE753_0_0_+0x6 : 1e152aa >			  ## ll_slave.c:466:5
 1e1563c:    00 70             	r0 = 0			  ## ll_slave.c:439:5
 1e1563e:    18 02             	[sp+4] = r0			  ## ll_slave.c:439:5
 1e15640:    10 70             	r0 = 1			  ## ll_slave.c:439:5
 1e15642:    81 74             	r1 = 72			  ## ll_slave.c:439:5
 1e15644:    f3 70             	r3 = 15			  ## ll_slave.c:439:5
 1e15646:    08 02             	[sp] = r0			  ## ll_slave.c:439:5
 1e15648:    50 08             	r0 = r5			  ## ll_slave.c:439:5
 1e1564a:    92 08             	r2 = r9			  ## ll_slave.c:439:5
 1e1564c:    bf f3 41 fb       	call -2430 <ll_send_control_data : 1e14cd2 >			  ## ll_slave.c:439:5
 1e15650:    c0 ff 0b 00 40 00 	r0 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## ll_slave.c:440:5
 1e15656:    01 70             	r1 = 0			  ## ll_slave.c:440:5
 1e15658:    bf f3 a9 e1       	call -15534 <btctrler_hci_cmd_to_task : 1e119ae >			  ## ll_slave.c:440:5
 1e1565c:    13 18             	goto 38 <.GJTIE753_0_0_+0x3E0 : 1e15684 >			  ## ll_slave.c:440:5
 1e1565e:    50 fc 24 00       	r0 = r5 + 36			  ## ll_slave.c:117:5
 1e15662:    52 70             	r2 = 5			  ## ll_slave.c:117:5
 1e15664:    a1 08             	r1 = r10			  ## ll_slave.c:117:5
 1e15666:    97 f3 3d 8c       	call 3086458 <memcpy : 106ee4 >			  ## ll_slave.c:117:5
 1e1566a:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:119:29
 1e1566c:    41 70             	r1 = 4			  ## ll_slave.c:119:5
 1e1566e:    82 08             	r2 = r8			  ## ll_slave.c:119:5
 1e15670:    bf f3 cd e5       	call -13414 <le_hw_ioctrl : 1e1220e >			  ## ll_slave.c:119:5
 1e15674:    82 fc ff ff       	r2 = r8 + -1			  ## ll_slave.c:121:61
 1e15678:    c1 ff 32 47 e1 01 	r1 = 31541042 <__channel_map_upadte : 1e14732 >			  ## ll_slave.c:121:5
 1e1567e:    50 08             	r0 = r5
 1e15680:    bf f3 68 f9       	call -3376 <__event_oneshot_add : 1e14954 >
 1e15684:    c0 6e             	r0 = b[r7 + 12] (u)			  ## ll_slave.c:693:29
 1e15686:    10 b7             	r0 |= 16384			  ## ll_slave.c:693:41
 1e15688:    51 08             	r1 = r5			  ## ll_slave.c:693:5
 1e1568a:    42 08             	r2 = r4			  ## ll_slave.c:693:5
 1e1568c:    bf f3 bc fa       	call -2696 <ll_control_step_verify : 1e14c08 >			  ## ll_slave.c:693:5
 1e15690:    50 08             	r0 = r5			  ## ll_slave.c:696:5
 1e15692:    41 08             	r1 = r4			  ## ll_slave.c:696:5
 1e15694:    bf f3 44 fb       	call -2424 <ll_send_control_data_state_machine : 1e14d20 >			  ## ll_slave.c:696:5
 1e15698:    0a 0a             	sp += 20
 1e1569a:    5f 01             	{pc, r15-r4} = [sp++]			  ## ll_slave.c:722:1


__slave_ll_receive_conn_update_req_done:
 1e1569c:    01 70             	r1 = 0			  ## ll_slave.c:42:0
 1e1569e:    02 70             	r2 = 0			  ## ll_slave.c:43:5
 1e156a0:    ff f3 1c f8       	goto -4040 <le_connection_update_complete_event : 1e146dc >			  ## ll_slave.c:43:5


__slave_receive_terminte_ind_done:
 1e156a4:    01 f9 89 01       	r1 = b[r0 + 393] (u)			  ## ll_slave.c:125:0
 1e156a8:    ff f3 67 f8       	goto -3890 <ll_disconnect_process : 1e1477a >			  ## ll_slave.c:126:5


__slave_ll_send_enc_rsp_callback:
 1e156ac:    00 40             	r0 = [r0 + 0]			  ## ll_slave.c:197:0
 1e156ae:    11 71             	r1 = 17			  ## ll_slave.c:200:5
 1e156b0:    12 70             	r2 = 1			  ## ll_slave.c:200:5
 1e156b2:    ff f3 ac e5       	goto -13480 <le_hw_ioctrl : 1e1220e >			  ## ll_slave.c:200:5


le_connection_complete_event:
 1e156b6:    79 01             	[--sp] = {rets, r9-r4}			  ## ll_events.c:166:0
 1e156b8:    e0 0b             	sp += -64			  ## ll_events.c:166:0
 1e156ba:    18 08             	r8 = r1			  ## ll_events.c:166:0
 1e156bc:    c1 ff ba f1 e0 01 	r1 = 31519162 <bluetooth_base_uuid+0x1B0 : 1e0f1ba >			  ## ll_events.c:166:0
 1e156c2:    15 20             	if (r0 == 0) goto 42 <le_connection_complete_event+0x38 : 1e156ee >			  ## ll_events.c:167:9
 1e156c4:    03 f7 f8 00       	r3 = h[r0 + 248] (u)			  ## ll_events.c:172:34
 1e156c8:    09 f9 3d 00       	r9 = b[r0 + 61] (u)			  ## ll_events.c:173:34
 1e156cc:    b5 60             	r5 = b[r0 + 11] (u)			  ## ll_events.c:174:34
 1e156ce:    f6 50             	r6 = h[r0 + 30] (u)			  ## ll_events.c:176:34
 1e156d0:    07 51             	r7 = h[r0 + 32] (u)			  ## ll_events.c:177:34
 1e156d2:    12 51             	r2 = h[r0 + 34] (u)			  ## ll_events.c:178:34
 1e156d4:    04 f9 3e 00       	r4 = b[r0 + 62] (u)			  ## ll_events.c:179:34
 1e156d8:    6c 02             	[sp+24] = r4			  ## ll_events.c:169:9
 1e156da:    5a 02             	[sp+20] = r2			  ## ll_events.c:169:9
 1e156dc:    4f 02             	[sp+16] = r7			  ## ll_events.c:169:9
 1e156de:    3e 02             	[sp+12] = r6			  ## ll_events.c:169:9
 1e156e0:    c0 80             	r0 += 12			  ## ll_events.c:175:34
 1e156e2:    28 02             	[sp+8] = r0			  ## ll_events.c:169:9
 1e156e4:    1d 02             	[sp+4] = r5			  ## ll_events.c:169:9
 1e156e6:    10 70             	r0 = 1			  ## ll_events.c:169:9
 1e156e8:    19 f5 00 00       	[sp] = r9			  ## ll_events.c:169:9
 1e156ec:    0e 18             	goto 28 <le_connection_complete_event+0x54 : 1e1570a >			  ## ll_events.c:169:9
 1e156ee:    02 70             	r2 = 0
 1e156f0:    92 f5 20 00       	h[sp+32] = r2			  ## ll_events.c:182:9
 1e156f4:    7a 02             	[sp+28] = r2			  ## ll_events.c:182:9
 1e156f6:    6a 02             	[sp+24] = r2			  ## ll_events.c:183:9
 1e156f8:    5a 02             	[sp+20] = r2			  ## ll_events.c:183:9
 1e156fa:    4a 02             	[sp+16] = r2			  ## ll_events.c:183:9
 1e156fc:    3a 02             	[sp+12] = r2			  ## ll_events.c:183:9
 1e156fe:    c0 a1             	r0 = sp + 28			  ## ll_events.c:183:9
 1e15700:    28 02             	[sp+8] = r0			  ## ll_events.c:183:9
 1e15702:    1a 02             	[sp+4] = r2			  ## ll_events.c:183:9
 1e15704:    10 70             	r0 = 1			  ## ll_events.c:183:9
 1e15706:    03 70             	r3 = 0			  ## ll_events.c:183:9
 1e15708:    0a 02             	[sp] = r2			  ## ll_events.c:183:9
 1e1570a:    82 08             	r2 = r8
 1e1570c:    bf f3 99 f7       	call -4302 <__hci_emit_le_meta_event : 1e14642 >
 1e15710:    20 0a             	sp += 64
 1e15712:    59 01             	{pc, r9-r4} = [sp++]			  ## ll_events.c:197:1


__adv_rx_post_handler:
 1e15714:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:539:0
 1e15716:    14 08             	r4 = r1			  ## ll_adv.c:539:0
 1e15718:    41 58             	r1 = h[r4 + 8] (u)			  ## ll_adv.c:540:17
 1e1571a:    21 fd 0f 19       	r1 = r1 & 15			  ## ll_adv.c:540:5
 1e1571e:    05 08             	r5 = r0			  ## ll_adv.c:540:5
 1e15720:    51 e0 86 10       	if (r1 != 5) goto 268 <__adv_rx_post_handler+0x11C : 1e15830 >
 1e15724:    c0 ff b0 0e 00 00 	r0 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:522:36
 1e1572a:    00 40             	r0 = [r0 + 0]			  ## ll_adv.c:522:36
 1e1572c:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:522:44
 1e1572e:    06 70             	r6 = 0
 1e15730:    0e 40             	[r0 + 0] = r6			  ## ll_adv.c:525:18
 1e15732:    bf f3 7d f6       	call -4870 <ll_adv_close : 1e14430 >			  ## ll_adv.c:527:5
 1e15736:    c7 ff 60 2d 00 00 	r7 = 11616 <ll_hdl : 2d60 >
 1e1573c:    00 5f             	r0 = h[r7 + 32] (u)
 1e1573e:    11 70             	r1 = 1
 1e15740:    f8 fd 60 21       	r2 = r1 << r6			  ## link_layer.c:804:31
 1e15744:    20 f0 06 00       	if ((r0 & r2) == 0) goto 12 <__adv_rx_post_handler+0x40 : 1e15754 >			  ## link_layer.c:804:31
 1e15748:    16 80             	r6 += 1			  ## link_layer.c:803:26
 1e1574a:    06 e1 f9 3f       	if (r6 < 16) goto -14 <__adv_rx_post_handler+0x2C : 1e15740 >			  ## link_layer.c:803:26
 1e1574e:    8f f3 62 6e       	call 2022596 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15752:    02 18             	goto 4 <__adv_rx_post_handler+0x44 : 1e15758 >			  ## cpu.h:148:5
 1e15754:    50 b4             	r0 |= r2			  ## link_layer.c:805:28
 1e15756:    08 5f             	h[r7 + 32] = r0			  ## link_layer.c:805:28
 1e15758:    00 fd 50 69       	r0 = r6 | 80			  ## link_layer.c:811:15
 1e1575c:    58 fc f8 00       	r8 = r5 + 248			  ## link_layer.c:811:15
 1e15760:    10 f7 00 80       	h[r8 + 0] = r0			  ## link_layer.c:881:18
 1e15764:    c0 ff b4 0e 00 00 	r0 = 3764 <le_data_length.6 : eb4 >			  ## link_layer.c:881:18
 1e1576a:    01 60             	r1 = b[r0 + 0] (u)			  ## link_layer.c:881:18
 1e1576c:    b0 7f             	r0 = 251			  ## link_layer.c:881:18
 1e1576e:    b2 7f             	r2 = 251			  ## link_layer.c:881:18
 1e15770:    01 32             	if (r1 != 0) goto 2 <__adv_rx_post_handler+0x60 : 1e15774 >			  ## link_layer.c:881:18
 1e15772:    02 70             	r2 = 0
 1e15774:    56 fc 6c 01       	r6 = r5 + 364
 1e15778:    0a 5c             	h[r6 + 0] = r2			  ## ll_data_extension.c:146:35
 1e1577a:    18 5c             	h[r6 + 2] = r0			  ## ll_data_extension.c:148:35
 1e1577c:    c0 ff b8 0e 00 00 	r0 = 3768 <le_data_length.7 : eb8 >			  ## ll_data_extension.c:148:35
 1e15782:    03 60             	r3 = b[r0 + 0] (u)			  ## ll_data_extension.c:148:35
 1e15784:    00 fb 48 08       	r0 = 2120 <old_battery_level : 848 >			  ## ll_data_extension.c:148:35
 1e15788:    01 08             	r1 = r0			  ## ll_data_extension.c:148:35
 1e1578a:    01 36             	if (r3 != 0) goto 2 <__adv_rx_post_handler+0x7A : 1e1578e >			  ## ll_data_extension.c:148:35
 1e1578c:    01 70             	r1 = 0
 1e1578e:    69 5c             	h[r6 + 12] = r1			  ## ll_data_extension.c:150:33
 1e15790:    78 5c             	h[r6 + 14] = r0			  ## ll_data_extension.c:152:33
 1e15792:    b0 71             	r0 = 27			  ## ll_data_extension.c:155:41
 1e15794:    28 5c             	h[r6 + 4] = r0			  ## ll_data_extension.c:155:41
 1e15796:    38 5c             	h[r6 + 6] = r0			  ## ll_data_extension.c:156:41
 1e15798:    00 fb 48 01       	r0 = 328 <DRIVER_RAM_TOTAL+0x56 : 148 >			  ## ll_data_extension.c:159:39
 1e1579c:    88 5c             	h[r6 + 16] = r0			  ## ll_data_extension.c:159:39
 1e1579e:    98 5c             	h[r6 + 18] = r0			  ## ll_data_extension.c:160:39
 1e157a0:    b2 e1 01 30       	if (r2 < 27) goto 2 <__adv_rx_post_handler+0x92 : 1e157a6 >			  ## ll_data_extension.c:160:39
 1e157a4:    b2 71             	r2 = 27			  ## ll_data_extension.c:72:46
 1e157a6:    4a 5c             	h[r6 + 8] = r2			  ## ll_data_extension.c:72:44
 1e157a8:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:73:29
 1e157aa:    f1 70             	r1 = 15			  ## ll_data_extension.c:73:5
 1e157ac:    bf f3 2f e5       	call -13730 <le_hw_ioctrl : 1e1220e >			  ## ll_data_extension.c:73:5
 1e157b0:    20 5c             	r0 = h[r6 + 4] (u)			  ## ll_data_extension.c:75:46
 1e157b2:    12 5c             	r2 = h[r6 + 2] (u)			  ## ll_data_extension.c:75:46
 1e157b4:    02 f2 01 30       	if (r2 < r0) goto 2 <__adv_rx_post_handler+0xA6 : 1e157ba >			  ## ll_data_extension.c:75:46
 1e157b8:    02 08             	r2 = r0			  ## ll_data_extension.c:75:46
 1e157ba:    5a 5c             	h[r6 + 10] = r2			  ## ll_data_extension.c:75:44
 1e157bc:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:76:29
 1e157be:    01 71             	r1 = 16			  ## ll_data_extension.c:76:5
 1e157c0:    bf f3 25 e5       	call -13750 <le_hw_ioctrl : 1e1220e >			  ## ll_data_extension.c:76:5
 1e157c4:    91 5c             	r1 = h[r6 + 18] (u)			  ## ll_data_extension.c:78:44
 1e157c6:    60 5c             	r0 = h[r6 + 12] (u)			  ## ll_data_extension.c:78:44
 1e157c8:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xBA : 1e157ce >			  ## ll_data_extension.c:78:44
 1e157cc:    10 08             	r0 = r1			  ## ll_data_extension.c:78:44
 1e157ce:    a8 5c             	h[r6 + 20] = r0			  ## ll_data_extension.c:78:42
 1e157d0:    81 5c             	r1 = h[r6 + 16] (u)			  ## ll_data_extension.c:80:44
 1e157d2:    70 5c             	r0 = h[r6 + 14] (u)			  ## ll_data_extension.c:80:44
 1e157d4:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xC6 : 1e157da >			  ## ll_data_extension.c:80:44
 1e157d8:    10 08             	r0 = r1			  ## ll_data_extension.c:80:44
 1e157da:    b8 5c             	h[r6 + 22] = r0			  ## ll_data_extension.c:80:42
 1e157dc:    00 f9 22 70       	r0 = b[r7 + 34] (u)			  ## link_layer.c:885:19
 1e157e0:    10 80             	r0 += 1			  ## link_layer.c:885:19
 1e157e2:    10 f9 22 70       	b[r7 + 34] = r0			  ## link_layer.c:885:19
 1e157e6:    a0 4e             	r0 = [r7 + 40]			  ## list.h:154:28
 1e157e8:    51 fc 34 00       	r1 = r5 + 52			  ## link_layer.c:887:26
 1e157ec:    a9 4e             	[r7 + 40] = r1			  ## list.h:137:16
 1e157ee:    72 fc 24 00       	r2 = r7 + 36			  ## list.h:154:28
 1e157f2:    da 4a             	[r5 + 52] = r2			  ## list.h:138:16
 1e157f4:    e8 4a             	[r5 + 56] = r0			  ## list.h:139:16
 1e157f6:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e157f8:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_slave.c:666:17
 1e157fa:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_slave.c:666:5
 1e157fe:    30 e0 15 00       	if (r0 == 3) goto 42 <__adv_rx_post_handler+0x118 : 1e1582c >			  ## ll_slave.c:666:5
 1e15802:    10 5b             	r0 = h[r5 + 34] (u)			  ## ll_slave.c:678:40
 1e15804:    00 fe 0a 09       	r0 = r0 * 10			  ## ll_slave.c:678:62
 1e15808:    c1 ff 36 49 e1 01 	r1 = 31541558 <ll_conn_supervision_timer_handler : 1e14936 >			  ## link_layer.c:1231:33
 1e1580e:    bf f3 d0 81       	call -64608 <sys_timer_register : 1e05bb2 >			  ## link_layer.c:1231:33
 1e15812:    10 f6 58 80       	[r8 + 88] = r0			  ## link_layer.c:1231:31
 1e15816:    04 30             	if (r0 != 0) goto 8 <__adv_rx_post_handler+0x10C : 1e15820 >			  ## link_layer.c:1231:31
 1e15818:    8f f3 fd 6d       	call 2022394 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1581c:    00 f6 58 80       	r0 = [r8 + 88]			  ## cpu.h:148:5
 1e15820:    51 08             	r1 = r5			  ## link_layer.c:1235:5
 1e15822:    bf f3 ca 81       	call -64620 <sys_timer_set_context : 1e05bba >			  ## link_layer.c:1235:5
 1e15826:    01 70             	r1 = 0			  ## ll_events.c:208:9
 1e15828:    50 08             	r0 = r5			  ## ll_events.c:208:9
 1e1582a:    45 17             	call -374 <le_connection_complete_event : 1e156b6 >			  ## ll_events.c:208:9
 1e1582c:    c0 68             	r0 = b[r4 + 12] (u)			  ## ll_adv.c:534:22
 1e1582e:    c8 6d             	b[r6 + 28] = r0			  ## ll_adv.c:534:16
 1e15830:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:549:1


ll_adv_timeout_handler:
 1e15832:    34 00             	[--sp] = rets			  ## ll_adv.c:99:0
 1e15834:    05 20             	if (r0 == 0) goto 10 <ll_adv_timeout_handler+0xE : 1e15840 >			  ## ll_adv.c:99:0
 1e15836:    bf f3 fb f5       	call -5130 <ll_adv_close : 1e14430 >			  ## ll_adv.c:109:5
 1e1583a:    00 70             	r0 = 0			  ## ll_adv.c:111:5
 1e1583c:    c1 73             	r1 = 60			  ## ll_adv.c:111:5
 1e1583e:    3b 17             	call -394 <le_connection_complete_event : 1e156b6 >			  ## ll_adv.c:111:5
 1e15840:    30 00             	pc = [sp++]			  ## ll_adv.c:114:1


ll_white_list_match:
 1e15842:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_white_list.c:66:0
 1e15844:    c2 ff bc 0e 00 00 	r2 = 3772 <le_param : ebc >			  ## ll_white_list.c:66:0
 1e1584a:    07 f6 98 20       	r7 = [r2 + 152]			  ## ll_white_list.c:66:0
 1e1584e:    15 08             	r5 = r1			  ## ll_white_list.c:66:0
 1e15850:    06 08             	r6 = r0			  ## ll_white_list.c:66:0
 1e15852:    24 fc 98 00       	r4 = r2 + 152			  ## ll_white_list.c:66:0
 1e15856:    08 70             	r8 = 0			  ## ll_white_list.c:66:0
 1e15858:    47 f2 11 00       	if (r7 == r4) goto 34 <ll_white_list_match+0x3C : 1e1587e >			  ## ll_white_list.c:66:0
 1e1585c:    71 fc f9 ff       	r1 = r7 + -7			  ## ll_white_list.c:76:48
 1e15860:    62 70             	r2 = 6			  ## ll_white_list.c:76:15
 1e15862:    50 08             	r0 = r5			  ## ll_white_list.c:76:15
 1e15864:    97 f3 42 8b       	call 3085956 <memcmp : 106eec >			  ## ll_white_list.c:76:15
 1e15868:    05 30             	if (r0 != 0) goto 10 <ll_white_list_match+0x32 : 1e15874 >			  ## ll_white_list.c:76:15
 1e1586a:    70 fc f8 ff       	r0 = r7 + -8
 1e1586e:    01 60             	r1 = b[r0 + 0] (u)			  ## ll_white_list.c:77:37
 1e15870:    61 f2 04 00       	if (r1 == r6) goto 8 <ll_white_list_match+0x3A : 1e1587c >			  ## ll_white_list.c:77:37
 1e15874:    07 4e             	r7 = [r7 + 0]
 1e15876:    47 f2 f1 1f       	if (r7 != r4) goto -30 <ll_white_list_match+0x1A : 1e1585c >
 1e1587a:    01 18             	goto 2 <ll_white_list_match+0x3C : 1e1587e >
 1e1587c:    08 08             	r8 = r0
 1e1587e:    80 08             	r0 = r8			  ## ll_white_list.c:85:1
 1e15880:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_white_list.c:85:1


le_ll_adv_addr_process:
 1e15882:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:333:0
 1e15884:    04 08             	r4 = r0			  ## ll_adv.c:333:0
 1e15886:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:333:0
 1e15888:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_adv.c:333:0
 1e1588c:    30 e0 04 00       	if (r0 == 3) goto 8 <le_ll_adv_addr_process+0x16 : 1e15898 >			  ## ll_adv.c:333:0
 1e15890:    50 e0 02 00       	if (r0 == 5) goto 4 <le_ll_adv_addr_process+0x16 : 1e15898 >			  ## ll_adv.c:333:0
 1e15894:    8f f3 bf 6d       	call 2022270 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15898:    c0 ff 94 2f 00 00 	r0 = 12180 <adv_param : 2f94 >			  ## ll_adv.c:252:19
 1e1589e:    e6 60             	r6 = b[r0 + 14] (u)			  ## ll_adv.c:252:19
 1e158a0:    c5 ff 90 2f 00 00 	r5 = 12176 <ll_error_code : 2f90 >			  ## ll_adv.c:252:19
 1e158a6:    00 70             	r0 = 0			  ## ll_adv.c:252:19
 1e158a8:    08 6a             	b[r5 + 0] = r0			  ## ll_adv.c:252:19
 1e158aa:    00 f3 0c 60       	if ((r6 & 1) == 0) goto 24 <le_ll_adv_addr_process+0x44 : 1e158c6 >			  ## ll_adv.c:252:19
 1e158ae:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:253:17
 1e158b0:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:253:17
 1e158b4:    31 e0 07 10       	if (r1 != 3) goto 14 <le_ll_adv_addr_process+0x44 : 1e158c6 >			  ## ll_adv.c:253:17
 1e158b8:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:267:32
 1e158bc:    41 99             	r1 = r4 + 20			  ## ll_adv.c:268:63
 1e158be:    c1 17             	call -126 <ll_white_list_match : 1e15842 >			  ## ll_adv.c:267:32
 1e158c0:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x44 : 1e158c6 >
 1e158c2:    10 70             	r0 = 1
 1e158c4:    08 6a             	b[r5 + 0] = r0
 1e158c6:    01 f3 0c 60       	if ((r6 & 2) == 0) goto 24 <le_ll_adv_addr_process+0x60 : 1e158e2 >
 1e158ca:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:279:17
 1e158cc:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:279:17
 1e158d0:    51 e0 07 10       	if (r1 != 5) goto 14 <le_ll_adv_addr_process+0x60 : 1e158e2 >			  ## ll_adv.c:279:17
 1e158d4:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:293:32
 1e158d8:    41 99             	r1 = r4 + 20			  ## ll_adv.c:294:63
 1e158da:    b3 17             	call -154 <ll_white_list_match : 1e15842 >			  ## ll_adv.c:293:32
 1e158dc:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x60 : 1e158e2 >
 1e158de:    10 70             	r0 = 1
 1e158e0:    08 6a             	b[r5 + 0] = r0
 1e158e2:    56 01             	{pc, r6-r4} = [sp++]			  ## ll_adv.c:342:1


__set_ll_adv_peer_addr:
 1e158e4:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_adv.c:231:0
 1e158e6:    c1 ff b0 0e 00 00 	r1 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:231:0
 1e158ec:    06 42             	r6 = [r1 + 0]			  ## ll_adv.c:231:0
 1e158ee:    04 08             	r4 = r0			  ## ll_adv.c:231:0
 1e158f0:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x12 : 1e158f6 >			  ## ll_adv.c:231:0
 1e158f2:    8f f3 90 6d       	call 2022176 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e158f6:    c7 ff 94 2f 00 00 	r7 = 12180 <adv_param : 2f94 >
 1e158fc:    40 6e             	r0 = b[r7 + 4] (u)			  ## ll_adv.c:234:20
 1e158fe:    40 e0 02 00       	if (r0 == 4) goto 4 <__set_ll_adv_peer_addr+0x22 : 1e15906 >			  ## ll_adv.c:234:20
 1e15902:    10 e0 1e 10       	if (r0 != 1) goto 60 <__set_ll_adv_peer_addr+0x5E : 1e15942 >
 1e15906:    60 6e             	r0 = b[r7 + 6] (u)			  ## ll_adv.c:236:46
 1e15908:    b8 68             	b[r4 + 11] = r0			  ## ll_adv.c:236:34
 1e1590a:    c5 98             	r5 = r4 + 12			  ## ll_adv.c:238:9
 1e1590c:    71 9e             	r1 = r7 + 7			  ## ll_adv.c:238:9
 1e1590e:    62 70             	r2 = 6			  ## ll_adv.c:238:9
 1e15910:    50 08             	r0 = r5			  ## ll_adv.c:238:9
 1e15912:    97 f3 e7 8a       	call 3085774 <memcpy : 106ee4 >			  ## ll_adv.c:238:9
 1e15916:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x38 : 1e1591c >			  ## ll_adv.c:238:9
 1e15918:    8f f3 7d 6d       	call 2022138 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1591c:    52 6e             	r2 = b[r7 + 5] (u)			  ## ll_adv.c:195:23
 1e1591e:    30 fd 01 29       	r0 = r2 & 4294967294			  ## ll_adv.c:195:5
 1e15922:    20 e0 02 10       	if (r0 != 2) goto 4 <__set_ll_adv_peer_addr+0x46 : 1e1592a >			  ## ll_adv.c:195:5
 1e15926:    ba 68             	b[r4 + 11] = r2			  ## ll_adv.c:205:34
 1e15928:    01 18             	goto 2 <__set_ll_adv_peer_addr+0x48 : 1e1592c >			  ## ll_adv.c:205:34
 1e1592a:    b2 68             	r2 = b[r4 + 11] (u)
 1e1592c:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:209:33
 1e1592e:    31 70             	r1 = 3			  ## ll_adv.c:209:5
 1e15930:    53 08             	r3 = r5			  ## ll_adv.c:209:5
 1e15932:    bf f3 6c e4       	call -14120 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:209:5
 1e15936:    b2 68             	r2 = b[r4 + 11] (u)			  ## ll_adv.c:215:23
 1e15938:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:214:33
 1e1593a:    91 70             	r1 = 9			  ## ll_adv.c:214:5
 1e1593c:    53 08             	r3 = r5			  ## ll_adv.c:214:5
 1e1593e:    bf f3 66 e4       	call -14132 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:214:5
 1e15942:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_adv.c:243:1


__set_ll_local_addr_common:
 1e15944:    34 00             	[--sp] = rets			  ## link_layer.c:3282:0
 1e15946:    12 08             	r2 = r1			  ## link_layer.c:3282:0
 1e15948:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:3283:21
 1e1594a:    32 e0 0d 80       	if (r2 > 3) goto 26 <.GJTIE772_0_0_+0xE : 1e15968 >			  ## link_layer.c:3283:21
 1e1594e:    c1 ff c4 0e 00 00 	r1 = 3780 <le_param+0x8 : ec4 >
 1e15954:    a2 00             	tbb [r2]


.GJTIS772_0_0_:
 1e15956:    02     < 2 : 0x2 >
 1e15957:    04     < 4 : 0x4 >
 1e15958:    02     < 2 : 0x2 >
 1e15959:    04     < 4 : 0x4 >
 1e1595a:    10 80             	r0 += 1			  ## link_layer.c:3288:9
 1e1595c:    02 18             	goto 4 <.GJTIE772_0_0_+0x8 : 1e15962 >
 1e1595e:    10 80             	r0 += 1			  ## link_layer.c:3294:9
 1e15960:    61 80             	r1 += 6			  ## link_layer.c:3294:9
 1e15962:    62 70             	r2 = 6
 1e15964:    97 f3 be 8a       	call 3085692 <memcpy : 106ee4 >
 1e15968:    30 00             	pc = [sp++]			  ## link_layer.c:3299:1


__set_ll_local_addr:
 1e1596a:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:3302:0
 1e1596c:    14 08             	r4 = r1			  ## link_layer.c:3302:0
 1e1596e:    05 08             	r5 = r0			  ## link_layer.c:3302:0
 1e15970:    40 08             	r0 = r4			  ## link_layer.c:3303:5
 1e15972:    21 08             	r1 = r2			  ## link_layer.c:3303:5
 1e15974:    e7 17             	call -50 <__set_ll_local_addr_common : 1e15944 >			  ## link_layer.c:3303:5
 1e15976:    82 f9 01 40       	r2 = b[r4 ++= 1] (u)			  ## link_layer.c:3307:23
 1e1597a:    21 70             	r1 = 2			  ## link_layer.c:3305:5
 1e1597c:    50 08             	r0 = r5			  ## link_layer.c:3305:5
 1e1597e:    43 08             	r3 = r4			  ## link_layer.c:3305:5
 1e15980:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:3305:5
 1e15982:    ff f3 44 e4       	goto -14200 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:3305:5


__set_ll_adv_state:
 1e15986:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:345:0
 1e15988:    fc 0b             	sp += -8			  ## ll_adv.c:345:0
 1e1598a:    c8 ff 94 2f 00 00 	r8 = 12180 <adv_param : 2f94 >			  ## ll_adv.c:345:0
 1e15990:    01 f9 0d 80       	r1 = b[r8 + 13] (u)			  ## ll_adv.c:351:33
 1e15994:    04 08             	r4 = r0			  ## ll_adv.c:351:33
 1e15996:    d1 f5 05 00       	b[sp+5] = r1			  ## ll_adv.c:351:21
 1e1599a:    00 70             	r0 = 0			  ## ll_adv.c:351:21
 1e1599c:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:352:29
 1e159a0:    12 70             	r2 = 1			  ## ll_adv.c:352:29
 1e159a2:    06 70             	r6 = 0			  ## ll_adv.c:354:24
 1e159a4:    03 70             	r3 = 0			  ## ll_adv.c:354:24
 1e159a6:    f8 fd 30 52       	r5 = r2 << r3			  ## ll_adv.c:353:31
 1e159aa:    17 9c             	r7 = r6 + 1			  ## ll_adv.c:354:24
 1e159ac:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x2C : 1e159b2 >			  ## ll_adv.c:354:24
 1e159b0:    76 08             	r6 = r7			  ## ll_adv.c:353:13
 1e159b2:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x32 : 1e159b8 >
 1e159b6:    70 08             	r0 = r7			  ## ll_adv.c:353:13
 1e159b8:    13 80             	r3 += 1			  ## ll_adv.c:352:42
 1e159ba:    33 e0 f4 1f       	if (r3 != 3) goto -24 <__set_ll_adv_state+0x20 : 1e159a6 >			  ## ll_adv.c:352:42
 1e159be:    03 f9 03 80       	r3 = b[r8 + 3] (u)			  ## ll_adv.c:365:21
 1e159c2:    01 f9 02 80       	r1 = b[r8 + 2] (u)			  ## ll_adv.c:365:21
 1e159c6:    02 f9 01 80       	r2 = b[r8 + 1] (u)			  ## ll_adv.c:366:21
 1e159ca:    07 f9 0e 80       	r7 = b[r8 + 14] (u)			  ## ll_adv.c:368:35
 1e159ce:    05 f9 04 80       	r5 = b[r8 + 4] (u)			  ## ll_adv.c:370:23
 1e159d2:    06 f9 00 80       	r6 = b[r8 + 0] (u)			  ## ll_adv.c:366:21
 1e159d6:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:354:24
 1e159da:    d7 f5 06 00       	b[sp+6] = r7			  ## ll_adv.c:368:23
 1e159de:    45 e0 4c 80       	if (r5 > 4) goto 152 <.GJTIE783_0_0_+0x8C : 1e15a7a >			  ## ll_adv.c:368:23
 1e159e2:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## ll_adv.c:365:21
 1e159e6:    a5 00             	tbb [r5]			  ## ll_adv.c:365:21


.GJTIS783_0_0_:
 1e159e8:    03     < 3 : 0x3 >
 1e159e9:    0c     < 12 : 0xC >
 1e159ea:    28     < 40 : 0x28 >
 1e159eb:    31     < 49 : 0x31 >
 1e159ec:    3a     < 58 : 0x3A >
 1e159ed:    00     < 0 : 0x0 >
 1e159ee:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:372:28
 1e159f2:    20 70             	r0 = 2			  ## ll_adv.c:372:28
 1e159f4:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:373:28
 1e159f8:    00 70             	r0 = 0			  ## ll_adv.c:374:28
 1e159fa:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:374:28
 1e159fe:    3d 18             	goto 122 <.GJTIE783_0_0_+0x8C : 1e15a7a >			  ## ll_adv.c:374:28
 1e15a00:    60 70             	r0 = 6
 1e15a02:    90 f5 00 00       	h[sp] = r0			  ## ll_adv.c:377:28
 1e15a06:    20 70             	r0 = 2			  ## ll_adv.c:377:28
 1e15a08:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:378:28
 1e15a0c:    10 70             	r0 = 1			  ## ll_adv.c:379:28
 1e15a0e:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:379:28
 1e15a12:    00 70             	r0 = 0			  ## ll_adv.c:379:28
 1e15a14:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:382:28
 1e15a18:    c1 ff 32 58 e1 01 	r1 = 31545394 <ll_adv_timeout_handler : 1e15832 >			  ## ll_adv.c:119:25
 1e15a1e:    00 fb 00 05       	r0 = 1280 <BTCTLER_CONTROLLER_DATA_SIZE+0x44 : 500 >			  ## ll_adv.c:119:25
 1e15a22:    bf f3 c6 80       	call -65140 <sys_timer_register : 1e05bb2 >			  ## ll_adv.c:119:25
 1e15a26:    58 48             	[r4 + 20] = r0			  ## ll_adv.c:119:23
 1e15a28:    03 30             	if (r0 != 0) goto 6 <.GJTIE783_0_0_+0x42 : 1e15a30 >			  ## ll_adv.c:119:23
 1e15a2a:    8f f3 f4 6c       	call 2021864 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15a2e:    50 48             	r0 = [r4 + 20]			  ## cpu.h:148:5
 1e15a30:    41 08             	r1 = r4			  ## ll_adv.c:123:5
 1e15a32:    bf f3 c2 80       	call -65148 <sys_timer_set_context : 1e05bba >			  ## ll_adv.c:123:5
 1e15a36:    1f 18             	goto 62 <.GJTIE783_0_0_+0x88 : 1e15a76 >			  ## ll_adv.c:123:5
 1e15a38:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:393:28
 1e15a3c:    20 70             	r0 = 2			  ## ll_adv.c:393:28
 1e15a3e:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:394:28
 1e15a42:    60 70             	r0 = 6			  ## ll_adv.c:395:28
 1e15a44:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:395:28
 1e15a48:    18 18             	goto 48 <.GJTIE783_0_0_+0x8C : 1e15a7a >			  ## ll_adv.c:395:28
 1e15a4a:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:400:28
 1e15a4e:    10 70             	r0 = 1			  ## ll_adv.c:404:28
 1e15a50:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:404:28
 1e15a54:    20 70             	r0 = 2			  ## ll_adv.c:404:28
 1e15a56:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:406:28
 1e15a5a:    0f 18             	goto 30 <.GJTIE783_0_0_+0x8C : 1e15a7a >			  ## ll_adv.c:406:28
 1e15a5c:    c8 fd 40 62       	r6 <= insert(r2, p:8, l:8)			  ## ll_adv.c:366:21
 1e15a60:    96 f5 00 00       	h[sp] = r6			  ## ll_adv.c:409:28
 1e15a64:    30 70             	r0 = 3			  ## ll_adv.c:410:28
 1e15a66:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:410:28
 1e15a6a:    10 70             	r0 = 1			  ## ll_adv.c:411:28
 1e15a6c:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:411:28
 1e15a70:    00 70             	r0 = 0			  ## ll_adv.c:414:28
 1e15a72:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:414:28
 1e15a76:    40 08             	r0 = r4
 1e15a78:    35 17             	call -406 <__set_ll_adv_peer_addr : 1e158e4 >
 1e15a7a:    c0 ff b0 0e 00 00 	r0 = 3760 <adv_hdl : eb0 >
 1e15a80:    00 40             	r0 = [r0 + 0]
 1e15a82:    02 30             	if (r0 != 0) goto 4 <.GJTIE783_0_0_+0x9A : 1e15a88 >
 1e15a84:    8f f3 c7 6c       	call 2021774 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15a88:    02 f9 05 80       	r2 = b[r8 + 5] (u)			  ## ll_adv.c:223:5
 1e15a8c:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:223:35
 1e15a8e:    41 98             	r1 = r4 + 4			  ## ll_adv.c:224:36
 1e15a90:    6c 17             	call -296 <__set_ll_local_addr : 1e1596a >			  ## ll_adv.c:223:5
 1e15a92:    c2 ff a3 2f 00 00 	r2 = 12195 <adv_data.3045 : 2fa3 >			  ## ll_adv.c:223:5
 1e15a98:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:431:18
 1e15a9a:    04 20             	if (r0 == 0) goto 8 <.GJTIE783_0_0_+0xB6 : 1e15aa4 >			  ## ll_adv.c:431:18
 1e15a9c:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:436:37
 1e15a9e:    51 71             	r1 = 21			  ## ll_adv.c:436:9
 1e15aa0:    bf f3 b5 e3       	call -14486 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:436:9
 1e15aa4:    c2 ff c3 2f 00 00 	r2 = 12227 <scan_resp_data : 2fc3 >
 1e15aaa:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:440:24
 1e15aac:    04 20             	if (r0 == 0) goto 8 <.GJTIE783_0_0_+0xC8 : 1e15ab6 >			  ## ll_adv.c:440:24
 1e15aae:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:445:37
 1e15ab0:    61 71             	r1 = 22			  ## ll_adv.c:445:9
 1e15ab2:    bf f3 ac e3       	call -14504 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:445:9
 1e15ab6:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:450:51
 1e15ab8:    01 a0             	r1 = sp + 0			  ## ll_adv.c:450:51
 1e15aba:    bf f3 c4 ea       	call -10872 <le_hw_advertising : 1e13046 >			  ## ll_adv.c:450:18
 1e15abe:    01 08             	r1 = r0			  ## ll_adv.c:450:18
 1e15ac0:    30 70             	r0 = 3			  ## ll_adv.c:455:12
 1e15ac2:    01 32             	if (r1 != 0) goto 2 <.GJTIE783_0_0_+0xD8 : 1e15ac6 >			  ## ll_adv.c:455:12
 1e15ac4:    00 70             	r0 = 0
 1e15ac6:    04 0a             	sp += 8
 1e15ac8:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:455:5


ll_thread_resume:
 1e15aca:    c0 ff 68 2d 00 00 	r0 = 11624 <ll_hdl+0x8 : 2d68 >			  ## link_layer.c:2947:0
 1e15ad0:    ff f3 6f 7f       	goto -65826 <thread_resume : 1e059b2 >			  ## link_layer.c:2948:5


adv_rx_probe_handler:
 1e15ad4:    7b 01             	[--sp] = {rets, r11-r4}			  ## ll_adv.c:496:0
 1e15ad6:    14 08             	r4 = r1			  ## ll_adv.c:496:0
 1e15ad8:    45 58             	r5 = h[r4 + 8] (u)			  ## ll_adv.c:501:17
 1e15ada:    0b 08             	r11 = r0			  ## ll_adv.c:501:17
 1e15adc:    20 fd 0f 59       	r0 = r5 & 15			  ## ll_adv.c:501:5
 1e15ae0:    c9 ff 90 2f 00 00 	r9 = 12176 <ll_error_code : 2f90 >			  ## ll_adv.c:501:5
 1e15ae6:    50 e0 08 00       	if (r0 == 5) goto 16 <adv_rx_probe_handler+0x26 : 1e15afa >			  ## ll_adv.c:501:5
 1e15aea:    30 e0 90 10       	if (r0 != 3) goto 288 <adv_rx_probe_handler+0x13A : 1e15c0e >
 1e15aee:    40 08             	r0 = r4			  ## ll_adv.c:461:5
 1e15af0:    c8 16             	call -624 <le_ll_adv_addr_process : 1e15882 >			  ## ll_adv.c:461:5
 1e15af2:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## ll_adv.c:461:5
 1e15af6:    84 20             	if (r0 == 0) goto 264 <adv_rx_probe_handler+0x12C : 1e15c00 >			  ## ll_adv.c:461:5
 1e15af8:    8a 18             	goto 276 <adv_rx_probe_handler+0x13A : 1e15c0e >			  ## ll_adv.c:461:5
 1e15afa:    08 f6 00 b0       	r8 = [r11 + 0]			  ## ll_adv.c:478:45
 1e15afe:    00 fb 90 01       	r0 = 400 <BTCTLER_CL_BSS_SIZE+0x4 : 190 >			  ## link_layer.c:835:12
 1e15b02:    bf f3 89 7e       	call -66286 <__bt_malloc : 1e05818 >			  ## link_layer.c:835:12
 1e15b06:    06 08             	r6 = r0			  ## link_layer.c:835:12
 1e15b08:    60 fc 40 00       	r0 = r6 + 64			  ## link_layer.c:841:28
 1e15b0c:    97 f3 86 89       	call 3085068 <os_mutex_create : 106e1c >			  ## link_layer.c:841:5
 1e15b10:    18 f6 00 60       	[r6 + 0] = r8			  ## link_layer.c:844:14
 1e15b14:    b1 fc 04 00       	r1 = r11 + 4			  ## ll_adv.c:478:60
 1e15b18:    40 9c             	r0 = r6 + 4			  ## link_layer.c:845:19
 1e15b1a:    72 70             	r2 = 7			  ## link_layer.c:845:5
 1e15b1c:    97 f3 e2 89       	call 3085252 <memcpy : 106ee4 >			  ## link_layer.c:845:5
 1e15b20:    81 fd 38 05       	r0 = uextra(r5, p:7, l:1)			  ## ll_adv.c:478:82
 1e15b24:    b8 6c             	b[r6 + 11] = r0			  ## link_layer.c:847:26
 1e15b26:    41 99             	r1 = r4 + 20			  ## ll_adv.c:478:89
 1e15b28:    c0 9c             	r0 = r6 + 12			  ## link_layer.c:848:23
 1e15b2a:    62 70             	r2 = 6			  ## link_layer.c:848:5
 1e15b2c:    6a 70             	r10 = 6			  ## link_layer.c:848:5
 1e15b2e:    97 f3 d9 89       	call 3085234 <memcpy : 106ee4 >			  ## link_layer.c:848:5
 1e15b32:    10 70             	r0 = 1			  ## link_layer.c:848:5
 1e15b34:    65 fc 28 00       	r5 = r6 + 40			  ## link_layer.c:848:5
 1e15b38:    58 6b             	b[r5 + 21] = r0			  ## link_layer.c:850:20
 1e15b3a:    41 fc 20 00       	r1 = r4 + 32			  ## ll_adv.c:478:108
 1e15b3e:    47 9d             	r7 = r6 + 20			  ## ll_adv.c:478:108
 1e15b40:    62 71             	r2 = 22			  ## link_layer.c:3654:5
 1e15b42:    70 08             	r0 = r7			  ## link_layer.c:3654:5
 1e15b44:    97 f3 ce 89       	call 3085212 <memcpy : 106ee4 >			  ## link_layer.c:3654:5
 1e15b48:    10 6a             	r0 = b[r5 + 1] (u)			  ## link_layer.c:3658:44
 1e15b4a:    00 d1             	r0 = r0 >> 4			  ## link_layer.c:3658:26
 1e15b4c:    20 fd 0e 09       	r0 = r0 & 14			  ## link_layer.c:3658:44
 1e15b50:    c1 ff b4 43 e1 01 	r1 = 31540148 <master_sca : 1e143b4 >			  ## link_layer.c:3658:26
 1e15b56:    00 f8 00 01       	r0 = h[r0+r1] (u)			  ## link_layer.c:3658:26
 1e15b5a:    f1 5c             	r1 = h[r6 + 30] (u)			  ## link_layer.c:3658:58
 1e15b5c:    02 5d             	r2 = h[r6 + 32] (u)			  ## link_layer.c:3658:77
 1e15b5e:    00 fc f4 01       	r0 = r0 + 500			  ## link_layer.c:3658:49
 1e15b62:    40 0e             	r0 = r0 * r1			  ## link_layer.c:3658:56
 1e15b64:    11 94             	r1 = r2 + 1			  ## link_layer.c:3658:92
 1e15b66:    40 0e             	r0 = r0 * r1			  ## link_layer.c:3658:74
 1e15b68:    01 fb 20 03       	r1 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x18 : 320 >			  ## link_layer.c:3658:105
 1e15b6c:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## link_layer.c:3658:105
 1e15b70:    40 c0             	r0 = r0 << 1			  ## link_layer.c:3659:21
 1e15b72:    20 80             	r0 += 2			  ## link_layer.c:3659:21
 1e15b74:    58 5d             	h[r6 + 42] = r0			  ## link_layer.c:3659:21
 1e15b76:    61 70             	r1 = 6			  ## link_layer.c:860:5
 1e15b78:    80 08             	r0 = r8			  ## link_layer.c:860:5
 1e15b7a:    72 08             	r2 = r7			  ## link_layer.c:860:5
 1e15b7c:    bf f3 47 e3       	call -14706 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:860:5
 1e15b80:    60 fc 04 01       	r0 = r6 + 260			  ## link_layer.c:860:5
 1e15b84:    01 fc 30 00       	r1 = r0 + 48			  ## link_layer.c:862:27
 1e15b88:    c9 40             	[r0 + 48] = r1			  ## list.h:188:16
 1e15b8a:    d9 40             	[r0 + 52] = r1			  ## list.h:189:16
 1e15b8c:    01 fc 38 00       	r1 = r0 + 56			  ## link_layer.c:863:27
 1e15b90:    e9 40             	[r0 + 56] = r1			  ## list.h:188:16
 1e15b92:    f9 40             	[r0 + 60] = r1			  ## list.h:189:16
 1e15b94:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e15b96:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e15b98:    01 fc 40 00       	r1 = r0 + 64			  ## link_layer.c:865:27
 1e15b9c:    09 41             	[r0 + 64] = r1			  ## list.h:188:16
 1e15b9e:    19 41             	[r0 + 68] = r1			  ## list.h:189:16
 1e15ba0:    1a f9 14 50       	b[r5 + 20] = r10			  ## link_layer.c:867:20
 1e15ba4:    00 4c             	r0 = [r6 + 0]			  ## link_layer.c:869:39
 1e15ba6:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:869:39
 1e15ba8:    c2 ff c4 43 e1 01 	r2 = 31540164 <conn_handler : 1e143c4 >			  ## link_layer.c:869:5
 1e15bae:    61 08             	r1 = r6			  ## link_layer.c:869:5
 1e15bb0:    bf f3 79 e7       	call -12558 <le_hw_handler_register : 1e12aa6 >			  ## link_layer.c:869:5
 1e15bb4:    c1 ff b2 47 e1 01 	r1 = 31541170 <ll_conn_fast_supervision_timer_handler : 1e147b2 >			  ## link_layer.c:874:5
 1e15bba:    62 70             	r2 = 6			  ## link_layer.c:874:5
 1e15bbc:    60 08             	r0 = r6			  ## link_layer.c:874:5
 1e15bbe:    bf f3 de f6       	call -4676 <__event_oneshot_post_add : 1e1497e >			  ## link_layer.c:874:5
 1e15bc2:    40 08             	r0 = r4			  ## ll_adv.c:482:5
 1e15bc4:    5e 16             	call -836 <le_ll_adv_addr_process : 1e15882 >			  ## ll_adv.c:482:5
 1e15bc6:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## ll_adv.c:482:5
 1e15bca:    1a 20             	if (r0 == 0) goto 52 <adv_rx_probe_handler+0x12C : 1e15c00 >			  ## ll_adv.c:482:5
 1e15bcc:    60 08             	r0 = r6			  ## ll_adv.c:486:9
 1e15bce:    bf f3 63 f4       	call -5946 <ll_close_conn_link : 1e14498 >			  ## ll_adv.c:486:9
 1e15bd2:    c6 ff b0 0e 00 00 	r6 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:486:9
 1e15bd8:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:671:36
 1e15bda:    15 40             	r5 = [r0 + 4]			  ## ll_adv.c:671:44
 1e15bdc:    bf f3 aa e7       	call -12460 <le_hw_open : 1e12b34 >			  ## ll_adv.c:673:20
 1e15be0:    08 4a             	[r5 + 0] = r0			  ## ll_adv.c:673:18
 1e15be2:    15 20             	if (r0 == 0) goto 42 <adv_rx_probe_handler+0x13A : 1e15c0e >			  ## ll_adv.c:673:18
 1e15be4:    00 40             	r0 = [r0 + 0]
 1e15be6:    c2 ff 1c 44 e1 01 	r2 = 31540252 <adv_handler : 1e1441c >			  ## ll_adv.c:680:5
 1e15bec:    51 08             	r1 = r5			  ## ll_adv.c:680:5
 1e15bee:    bf f3 5a e7       	call -12620 <le_hw_handler_register : 1e12aa6 >			  ## ll_adv.c:680:5
 1e15bf2:    50 08             	r0 = r5			  ## ll_adv.c:686:18
 1e15bf4:    c8 16             	call -624 <__set_ll_adv_state : 1e15986 >			  ## ll_adv.c:686:18
 1e15bf6:    0b 30             	if (r0 != 0) goto 22 <adv_rx_probe_handler+0x13A : 1e15c0e >
 1e15bf8:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:693:5
 1e15bfa:    11 70             	r1 = 1			  ## ll_adv.c:693:20
 1e15bfc:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:693:20
 1e15bfe:    07 18             	goto 14 <adv_rx_probe_handler+0x13A : 1e15c0e >			  ## ll_adv.c:693:20
 1e15c00:    00 f6 00 b0       	r0 = [r11 + 0]
 1e15c04:    e1 70             	r1 = 14
 1e15c06:    03 70             	r3 = 0
 1e15c08:    42 08             	r2 = r4
 1e15c0a:    bf f3 00 e3       	call -14848 <le_hw_ioctrl : 1e1220e >
 1e15c0e:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:513:9
 1e15c10:    20 fd 30 09       	r0 = r0 & 48			  ## ll_adv.c:513:9
 1e15c14:    00 e1 02 10       	if (r0 != 16) goto 4 <adv_rx_probe_handler+0x148 : 1e15c1c >			  ## ll_adv.c:513:9
 1e15c18:    a0 68             	r0 = b[r4 + 10] (u)			  ## ll_adv.c:513:9
 1e15c1a:    01 20             	if (r0 == 0) goto 2 <adv_rx_probe_handler+0x14A : 1e15c1e >			  ## ll_adv.c:513:9
 1e15c1c:    56 17             	call -340 <ll_thread_resume : 1e15aca >			  ## ll_adv.c:516:9
 1e15c1e:    5b 01             	{pc, r11-r4} = [sp++]			  ## ll_adv.c:518:1


ll_init:
 1e15c20:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3148:0
 1e15c22:    c6 ff 60 2d 00 00 	r6 = 11616 <ll_hdl : 2d60 >			  ## link_layer.c:3148:0
 1e15c28:    c0 ff 90 2d 00 00 	r0 = 11664 <pEvent_buf_static : 2d90 >			  ## link_layer.c:3170:28
 1e15c2e:    08 4c             	[r6 + 0] = r0			  ## link_layer.c:3170:28
 1e15c30:    61 fc 24 00       	r1 = r6 + 36			  ## list.h:188:16
 1e15c34:    99 4c             	[r6 + 36] = r1			  ## list.h:188:16
 1e15c36:    a9 4c             	[r6 + 40] = r1			  ## list.h:189:16
 1e15c38:    c4 ff de 0e 00 00 	r4 = 3806 <le_param+0x22 : ede >			  ## list.h:189:16
 1e15c3e:    41 fc 76 00       	r1 = r4 + 118			  ## list.h:189:16
 1e15c42:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e15c44:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e15c46:    c2 92             	r2 = r1 + 12			  ## list.h:188:16
 1e15c48:    3a 42             	[r1 + 12] = r2			  ## list.h:188:16
 1e15c4a:    4a 42             	[r1 + 16] = r2			  ## list.h:189:16
 1e15c4c:    c1 ff b4 0e 00 00 	r1 = 3764 <le_data_length.6 : eb4 >			  ## list.h:189:16
 1e15c52:    15 70             	r5 = 1
 1e15c54:    0d 62             	b[r1 + 0] = r5
 1e15c56:    c1 ff b8 0e 00 00 	r1 = 3768 <le_data_length.7 : eb8 >
 1e15c5c:    0d 62             	b[r1 + 0] = r5
 1e15c5e:    01 fb 00 02       	r1 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## link_layer.c:3190:24
 1e15c62:    bf f3 b7 7f       	call -65682 <lbuf_init_btctrler : 1e05bd4 >			  ## link_layer.c:3190:24
 1e15c66:    18 4c             	[r6 + 4] = r0			  ## link_layer.c:3190:22
 1e15c68:    02 30             	if (r0 != 0) goto 4 <ll_init+0x4E : 1e15c6e >			  ## link_layer.c:3190:22
 1e15c6a:    8f f3 d4 6b       	call 2021288 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15c6e:    bf f3 d1 f2       	call -6750 <le_hw_init : 1e14214 >			  ## link_layer.c:3193:9
 1e15c72:    80 9c             	r0 = r6 + 8			  ## link_layer.c:3195:9
 1e15c74:    c1 ff 9b f1 e0 01 	r1 = 31519131 <bluetooth_base_uuid+0x191 : 1e0f19b >			  ## link_layer.c:3195:9
 1e15c7a:    c2 ff e8 4e e1 01 	r2 = 31543016 <ll_thread_process : 1e14ee8 >			  ## link_layer.c:3195:9
 1e15c80:    c3 ff f8 0d 00 00 	r3 = 3576 <bt_task_thread : df8 >			  ## link_layer.c:3195:9
 1e15c86:    bf f3 e1 7f       	call -65598 <thread_create : 1e05c4c >			  ## link_layer.c:3195:9
 1e15c8a:    00 70             	r0 = 0			  ## link_layer.c:3198:9
 1e15c8c:    38 58             	h[r4 + 6] = r0			  ## link_layer.c:3198:9
 1e15c8e:    28 58             	h[r4 + 4] = r0			  ## link_layer.c:3198:9
 1e15c90:    c1 ff 10 0e 00 00 	r1 = 3600 <hci_param : e10 >			  ## link_layer.c:3198:9
 1e15c96:    82 52             	r2 = h[r1 + 16] (u)			  ## link_layer.c:3199:41
 1e15c98:    81 62             	r1 = b[r1 + 8] (u)			  ## link_layer.c:3200:41
 1e15c9a:    18 58             	h[r4 + 2] = r0			  ## link_layer.c:3198:9
 1e15c9c:    0d 58             	h[r4 + 0] = r5			  ## link_layer.c:3198:9
 1e15c9e:    9a 58             	h[r4 + 18] = r2			  ## link_layer.c:3199:29
 1e15ca0:    09 69             	b[r4 + 16] = r1			  ## link_layer.c:3200:29
 1e15ca2:    60 70             	r0 = 6			  ## link_layer.c:3136:37
 1e15ca4:    e8 69             	b[r4 + 30] = r0			  ## link_layer.c:3136:37
 1e15ca6:    b0 71             	r0 = 27			  ## link_layer.c:3138:37
 1e15ca8:    08 59             	h[r4 + 32] = r0			  ## link_layer.c:3138:37
 1e15caa:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3213:1


ll_control_data_step_start:
 1e15cac:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:687:0
 1e15cae:    02 fc c1 00       	r2 = r0 + 193			  ## link_layer.c:687:0
 1e15cb2:    03 64             	r3 = b[r2 + 0] (u)			  ## link_layer.c:688:39
 1e15cb4:    db c0             	r3 = r3 << 3			  ## link_layer.c:690:8
 1e15cb6:    03 09             	r3 += r0			  ## link_layer.c:690:8
 1e15cb8:    11 f6 98 30       	[r3 + 152] = r1			  ## link_layer.c:690:18
 1e15cbc:    01 70             	r1 = 0			  ## link_layer.c:690:18
 1e15cbe:    11 f9 9c 30       	b[r3 + 156] = r1			  ## link_layer.c:691:16
 1e15cc2:    04 64             	r4 = b[r2 + 0] (u)			  ## link_layer.c:693:28
 1e15cc4:    13 98             	r3 = r4 + 1			  ## link_layer.c:693:91
 1e15cc6:    44 e0 01 00       	if (r4 == 4) goto 2 <ll_control_data_step_start+0x20 : 1e15ccc >			  ## link_layer.c:693:91
 1e15cca:    31 08             	r1 = r3			  ## link_layer.c:693:21
 1e15ccc:    09 64             	b[r2 + 0] = r1			  ## link_layer.c:693:19
 1e15cce:    01 70             	r1 = 0			  ## link_layer.c:704:5
 1e15cd0:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:704:5
 1e15cd2:    ff f3 25 f8       	goto -4022 <ll_send_control_data_state_machine : 1e14d20 >			  ## link_layer.c:704:5


ll_response_timeout_start:
 1e15cd6:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1376:0
 1e15cd8:    04 08             	r4 = r0			  ## link_layer.c:1376:0
 1e15cda:    45 fc 4c 01       	r5 = r4 + 332			  ## link_layer.c:1376:0
 1e15cde:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1378:15
 1e15ce0:    03 20             	if (r0 == 0) goto 6 <ll_response_timeout_start+0x12 : 1e15ce8 >			  ## link_layer.c:1378:15
 1e15ce2:    40 08             	r0 = r4			  ## link_layer.c:1380:9
 1e15ce4:    bf f3 c2 f3       	call -6268 <ll_response_timeout_stop : 1e1446c >			  ## link_layer.c:1380:9
 1e15ce8:    c0 ff 40 9c 00 00 	r0 = 40000 <BTCTLER_CODE_TOTAL+0x1984 : 9c40 >			  ## link_layer.c:1382:30
 1e15cee:    c1 ff f0 4b e1 01 	r1 = 31542256 <ll_response_timeout_handler : 1e14bf0 >			  ## link_layer.c:1382:30
 1e15cf4:    bf f3 5d 7f       	call -65862 <sys_timer_register : 1e05bb2 >			  ## link_layer.c:1382:30
 1e15cf8:    08 4a             	[r5 + 0] = r0			  ## link_layer.c:1382:28
 1e15cfa:    03 30             	if (r0 != 0) goto 6 <ll_response_timeout_start+0x2C : 1e15d02 >			  ## link_layer.c:1382:28
 1e15cfc:    8f f3 8b 6b       	call 2021142 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15d00:    00 4a             	r0 = [r5 + 0]			  ## cpu.h:148:5
 1e15d02:    41 08             	r1 = r4			  ## link_layer.c:1386:5
 1e15d04:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:1386:5
 1e15d06:    ff f3 58 7f       	goto -65872 <sys_timer_set_context : 1e05bba >			  ## link_layer.c:1386:5


ll_push_control_data:
 1e15d0a:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:2640:0
 1e15d0c:    32 fd fc 0a       	r2 = r0 & 4294902783			  ## link_layer.c:2644:16
 1e15d10:    23 fd fc 0a       	r3 = r0 & 64512			  ## link_layer.c:2643:24
 1e15d14:    14 08             	r4 = r1			  ## link_layer.c:2643:24
 1e15d16:    21 08             	r1 = r2			  ## link_layer.c:2643:9
 1e15d18:    20 ff 20 3a 01 00 	if (r3 == 8192) goto 2 <ll_push_control_data+0x16 : 1e15d20 >			  ## link_layer.c:2643:9
 1e15d1e:    01 08             	r1 = r0			  ## link_layer.c:2643:9
 1e15d20:    20 fd fc 1a       	r0 = r1 & 64512			  ## link_layer.c:2647:24
 1e15d24:    20 ff f8 0a 01 00 	if (r0 == 63488) goto 2 <ll_push_control_data+0x22 : 1e15d2c >
 1e15d2a:    12 08             	r2 = r1			  ## link_layer.c:2647:9
 1e15d2c:    15 70             	r5 = 1
 1e15d2e:    c6 ff e9 f1 e0 01 	r6 = 31519209 <bluetooth_base_uuid+0x1DF : 1e0f1e9 >
 1e15d34:    0c ff 82 20 20 00 	ifs (r2 > 130) goto 64 <.GJTIE821_0_0_+0x22 : 1e15d7a >			  ## link_layer.c:2651:5
 1e15d3a:    20 fc ea ff       	r0 = r2 + -22
 1e15d3e:    50 e0 d4 80       	if (r0 > 5) goto 424 <.GJTIE821_0_0_+0x192 : 1e15eea >
 1e15d42:    41 c0             	r1 = r0 << 1
 1e15d44:    c7 ff bc 0e 00 00 	r7 = 3772 <le_param : ebc >
 1e15d4a:    b1 00             	tbh [r1]


.GJTIL821_0_0_:
 1e15d4c:    06 00     < 6 : 0x6 >
 1e15d4e:    cf 00     < 207 : 0xCF >
 1e15d50:    cf 00     < 207 : 0xCF >
 1e15d52:    49 00     < 73 : 0x49 >
 1e15d54:    66 00     < 102 : 0x66 >
 1e15d56:    81 00     < 129 : 0x81 >
 1e15d58:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2022:54
 1e15d5a:    04 68             	r4 = b[r4 + 0] (u)			  ## link_layer.c:2022:54
 1e15d5c:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## link_layer.c:2022:54
 1e15d60:    40 08             	r0 = r4			  ## link_layer.c:2022:28
 1e15d62:    bf f3 9e f7       	call -4292 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2022:28
 1e15d66:    b1 20             	if (r0 == 0) goto 354 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15d68:    14 f7 5c 70       	h[r7 + 92] = r4			  ## link_layer.c:2031:5
 1e15d6c:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:2033:9
 1e15d70:    11 e0 ad 10       	if (r1 != 1) goto 346 <.GJTIE821_0_0_+0x176 : 1e15ece >			  ## link_layer.c:2033:9
 1e15d74:    8f f3 4f 6b       	call 2021022 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15d78:    b7 18             	goto 366 <.GJTIE821_0_0_+0x190 : 1e15ee8 >
 1e15d7a:    0c ff 05 24 10 00 	ifs (r2 > 1029) goto 32 <.GJTIE821_0_0_+0x48 : 1e15da0 >
 1e15d80:    00 ff 83 20 76 00 	if (r2 == 131) goto 236 <.GJTIE821_0_0_+0x11A : 1e15e72 >
 1e15d86:    01 ff 84 20 af 00 	if (r2 != 132) goto 350 <.GJTIE821_0_0_+0x192 : 1e15eea >
 1e15d8c:    00 58             	r0 = h[r4 + 0] (u)			  ## link_layer.c:2628:31
 1e15d8e:    bf f3 88 f7       	call -4336 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2628:12
 1e15d92:    9b 20             	if (r0 == 0) goto 310 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15d94:    12 58             	r2 = h[r4 + 2] (u)			  ## link_layer.c:2633:55
 1e15d96:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2633:29
 1e15d98:    71 71             	r1 = 23			  ## link_layer.c:2633:5
 1e15d9a:    bf f3 38 e2       	call -15248 <le_hw_ioctrl : 1e1220e >			  ## link_layer.c:2633:5
 1e15d9e:    a4 18             	goto 328 <.GJTIE821_0_0_+0x190 : 1e15ee8 >			  ## link_layer.c:2633:5
 1e15da0:    c7 ff 10 0e 00 00 	r7 = 3600 <hci_param : e10 >
 1e15da6:    00 ff 06 24 73 00 	if (r2 == 1030) goto 230 <.GJTIE821_0_0_+0x13A : 1e15e92 >
 1e15dac:    01 ff 1d 24 9c 00 	if (r2 != 1053) goto 312 <.GJTIE821_0_0_+0x192 : 1e15eea >
 1e15db2:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2086:47
 1e15db4:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2086:47
 1e15db6:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2086:47
 1e15dba:    bf f3 72 f7       	call -4380 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2086:28
 1e15dbe:    05 08             	r5 = r0			  ## link_layer.c:2086:28
 1e15dc0:    84 2a             	if (r5 == 0) goto 264 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15dc2:    89 17             	call -238 <ll_response_timeout_start : 1e15cd6 >			  ## link_layer.c:2095:5
 1e15dc4:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2097:5
 1e15dc6:    01 68             	r1 = b[r4 + 0] (u)			  ## link_layer.c:2097:5
 1e15dc8:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## link_layer.c:2097:5
 1e15dcc:    11 f9 9b 70       	b[r7 + 155] = r1			  ## link_layer.c:2097:5
 1e15dd0:    08 d2             	r0 = r1 >> 8			  ## link_layer.c:2097:5
 1e15dd2:    10 f9 9c 70       	b[r7 + 156] = r0			  ## link_layer.c:2097:5
 1e15dd6:    c1 ff e4 43 e1 01 	r1 = 31540196 <version_ind_steps : 1e143e4 >			  ## link_layer.c:2099:5
 1e15ddc:    83 18             	goto 262 <.GJTIE821_0_0_+0x18C : 1e15ee4 >			  ## link_layer.c:2099:5
 1e15dde:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2228:47
 1e15de0:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2228:47
 1e15de2:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2228:47
 1e15de6:    bf f3 5c f7       	call -4424 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2228:28
 1e15dea:    05 08             	r5 = r0			  ## link_layer.c:2228:28
 1e15dec:    6e 2a             	if (r5 == 0) goto 220 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15dee:    00 f9 3d 50       	r0 = b[r5 + 61] (u)
 1e15df2:    10 e0 02 10       	if (r0 != 1) goto 4 <.GJTIE821_0_0_+0xA2 : 1e15dfa >
 1e15df6:    8f f3 0e 6b       	call 2020892 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15dfa:    70 fc 5e 00       	r0 = r7 + 94			  ## link_layer.c:2239:5
 1e15dfe:    c2 71             	r2 = 28			  ## link_layer.c:2239:5
 1e15e00:    41 08             	r1 = r4			  ## link_layer.c:2239:5
 1e15e02:    97 f3 6f 88       	call 3084510 <memcpy : 106ee4 >			  ## link_layer.c:2239:5
 1e15e06:    50 08             	r0 = r5			  ## link_layer.c:2241:5
 1e15e08:    66 17             	call -308 <ll_response_timeout_start : 1e15cd6 >			  ## link_layer.c:2241:5
 1e15e0a:    00 f9 93 50       	r0 = b[r5 + 147] (u)			  ## link_layer.c:2243:9
 1e15e0e:    63 20             	if (r0 == 0) goto 198 <.GJTIE821_0_0_+0x17E : 1e15ed6 >			  ## link_layer.c:2243:9
 1e15e10:    c1 ff ea 43 e1 01 	r1 = 31540202 <restart_encryption_steps : 1e143ea >			  ## link_layer.c:2244:9
 1e15e16:    66 18             	goto 204 <.GJTIE821_0_0_+0x18C : 1e15ee4 >			  ## link_layer.c:2244:9
 1e15e18:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2333:47
 1e15e1a:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2333:47
 1e15e1c:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2333:47
 1e15e20:    bf f3 3f f7       	call -4482 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2333:28
 1e15e24:    05 08             	r5 = r0			  ## link_layer.c:2333:28
 1e15e26:    51 2a             	if (r5 == 0) goto 162 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15e28:    00 f9 3d 50       	r0 = b[r5 + 61] (u)
 1e15e2c:    10 e0 02 00       	if (r0 == 1) goto 4 <.GJTIE821_0_0_+0xDC : 1e15e34 >
 1e15e30:    8f f3 f1 6a       	call 2020834 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15e34:    70 fc 7a 00       	r0 = r7 + 122			  ## link_layer.c:2346:5
 1e15e38:    22 71             	r2 = 18			  ## link_layer.c:2346:5
 1e15e3a:    41 08             	r1 = r4			  ## link_layer.c:2346:5
 1e15e3c:    97 f3 52 88       	call 3084452 <memcpy : 106ee4 >			  ## link_layer.c:2346:5
 1e15e40:    00 f9 93 50       	r0 = b[r5 + 147] (u)			  ## link_layer.c:2348:9
 1e15e44:    4c 20             	if (r0 == 0) goto 152 <.GJTIE821_0_0_+0x186 : 1e15ede >			  ## link_layer.c:2348:9
 1e15e46:    c1 ff 0a 44 e1 01 	r1 = 31540234 <restart_encryption_req_steps : 1e1440a >			  ## link_layer.c:2349:9
 1e15e4c:    4b 18             	goto 150 <.GJTIE821_0_0_+0x18C : 1e15ee4 >			  ## link_layer.c:2349:9
 1e15e4e:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2371:47
 1e15e50:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2371:47
 1e15e52:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2371:47
 1e15e56:    bf f3 24 f7       	call -4536 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2371:28
 1e15e5a:    02 08             	r2 = r0			  ## link_layer.c:2371:28
 1e15e5c:    36 24             	if (r2 == 0) goto 108 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15e5e:    00 f9 3d 20       	r0 = b[r2 + 61] (u)
 1e15e62:    10 e0 02 00       	if (r0 == 1) goto 4 <.GJTIE821_0_0_+0x112 : 1e15e6a >
 1e15e66:    8f f3 d6 6a       	call 2020780 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15e6a:    d1 70             	r1 = 13			  ## link_layer.c:2382:5
 1e15e6c:    63 70             	r3 = 6			  ## link_layer.c:2382:5
 1e15e6e:    20 08             	r0 = r2			  ## link_layer.c:2382:5
 1e15e70:    0c 18             	goto 24 <.GJTIE821_0_0_+0x132 : 1e15e8a >			  ## link_layer.c:2382:5
 1e15e72:    02 38             	if (r4 != 0) goto 4 <.GJTIE821_0_0_+0x120 : 1e15e78 >
 1e15e74:    8f f3 cf 6a       	call 2020766 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15e78:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2602:31
 1e15e7a:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2602:31
 1e15e7c:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2602:31
 1e15e80:    bf f3 0f f7       	call -4578 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2602:12
 1e15e84:    22 20             	if (r0 == 0) goto 68 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15e86:    23 68             	r3 = b[r4 + 2] (u)			  ## link_layer.c:2609:61
 1e15e88:    41 74             	r1 = 68			  ## link_layer.c:2609:5
 1e15e8a:    62 08             	r2 = r6
 1e15e8c:    bf f3 21 f7       	call -4542 <ll_send_control_data : 1e14cd2 >
 1e15e90:    2b 18             	goto 86 <.GJTIE821_0_0_+0x190 : 1e15ee8 >
 1e15e92:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2435:47
 1e15e94:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2435:47
 1e15e96:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2435:47
 1e15e9a:    bf f3 02 f7       	call -4604 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:2435:28
 1e15e9e:    06 08             	r6 = r0			  ## link_layer.c:2435:28
 1e15ea0:    14 2c             	if (r6 == 0) goto 40 <.GJTIE821_0_0_+0x172 : 1e15eca >
 1e15ea2:    00 f9 3c 60       	r0 = b[r6 + 60] (u)			  ## link_layer.c:2444:9
 1e15ea6:    70 b0             	r0 &= 4294967294			  ## link_layer.c:2444:9
 1e15ea8:    05 70             	r5 = 0			  ## link_layer.c:2444:9
 1e15eaa:    60 e0 1e 10       	if (r0 != 6) goto 60 <.GJTIE821_0_0_+0x192 : 1e15eea >			  ## link_layer.c:2444:9
 1e15eae:    60 08             	r0 = r6			  ## link_layer.c:2445:9
 1e15eb0:    12 17             	call -476 <ll_response_timeout_start : 1e15cd6 >			  ## link_layer.c:2445:9
 1e15eb2:    70 fc 9d 00       	r0 = r7 + 157			  ## link_layer.c:2447:9
 1e15eb6:    32 70             	r2 = 3			  ## link_layer.c:2447:9
 1e15eb8:    41 08             	r1 = r4			  ## link_layer.c:2447:9
 1e15eba:    97 f3 13 88       	call 3084326 <memcpy : 106ee4 >			  ## link_layer.c:2447:9
 1e15ebe:    c1 ff de 43 e1 01 	r1 = 31540190 <disconnect_steps : 1e143de >			  ## link_layer.c:2449:9
 1e15ec4:    60 08             	r0 = r6			  ## link_layer.c:2449:9
 1e15ec6:    f2 16             	call -540 <ll_control_data_step_start : 1e15cac >			  ## link_layer.c:2449:9
 1e15ec8:    10 18             	goto 32 <.GJTIE821_0_0_+0x192 : 1e15eea >			  ## link_layer.c:2449:9
 1e15eca:    25 70             	r5 = 2
 1e15ecc:    0e 18             	goto 28 <.GJTIE821_0_0_+0x192 : 1e15eea >
 1e15ece:    c1 ff d8 43 e1 01 	r1 = 31540184 <master_features_exchange_steps : 1e143d8 >			  ## link_layer.c:2040:9
 1e15ed4:    08 18             	goto 16 <.GJTIE821_0_0_+0x18E : 1e15ee6 >			  ## link_layer.c:2040:9
 1e15ed6:    c1 ff fe 43 e1 01 	r1 = 31540222 <start_encryption_steps : 1e143fe >			  ## link_layer.c:2246:9
 1e15edc:    03 18             	goto 6 <.GJTIE821_0_0_+0x18C : 1e15ee4 >			  ## link_layer.c:2246:9
 1e15ede:    c1 ff 12 44 e1 01 	r1 = 31540242 <start_encryption_req_steps : 1e14412 >			  ## link_layer.c:2351:9
 1e15ee4:    50 08             	r0 = r5
 1e15ee6:    e2 16             	call -572 <ll_control_data_step_start : 1e15cac >
 1e15ee8:    05 70             	r5 = 0
 1e15eea:    50 08             	r0 = r5			  ## link_layer.c:2722:1
 1e15eec:    57 01             	{pc, r7-r4} = [sp++]			  ## link_layer.c:2722:1


ll_adv_init:
 1e15eee:    74 01             	[--sp] = {rets, r4}			  ## ll_adv.c:53:0
 1e15ef0:    c4 ff b0 0e 00 00 	r4 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:53:0
 1e15ef6:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:54:9
 1e15ef8:    07 30             	if (r0 != 0) goto 14 <ll_adv_init+0x1A : 1e15f08 >			  ## ll_adv.c:54:9
 1e15efa:    80 72             	r0 = 40			  ## ll_adv.c:61:14
 1e15efc:    bf f3 8c 7c       	call -67304 <__bt_malloc : 1e05818 >			  ## ll_adv.c:61:14
 1e15f00:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:61:12
 1e15f02:    02 30             	if (r0 != 0) goto 4 <ll_adv_init+0x1A : 1e15f08 >			  ## ll_adv.c:61:12
 1e15f04:    8f f3 87 6a       	call 2020622 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e15f08:    54 01             	{pc, r4} = [sp++]			  ## ll_adv.c:64:1


ll_adv_set_params:
 1e15f0a:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:589:0
 1e15f0c:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:589:0
 1e15f12:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:594:9
 1e15f14:    04 08             	r4 = r0			  ## ll_adv.c:594:9
 1e15f16:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_params+0x12 : 1e15f1c >			  ## ll_adv.c:594:9
 1e15f18:    ea 17             	call -44 <ll_adv_init : 1e15eee >			  ## ll_adv.c:595:9
 1e15f1a:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:595:9
 1e15f1c:    00 62             	r0 = b[r1 + 0] (u)			  ## ll_adv.c:601:17
 1e15f1e:    07 30             	if (r0 != 0) goto 14 <ll_adv_set_params+0x24 : 1e15f2e >			  ## ll_adv.c:601:17
 1e15f20:    c0 ff 94 2f 00 00 	r0 = 12180 <adv_param : 2f94 >			  ## ll_adv.c:606:5
 1e15f26:    f2 70             	r2 = 15			  ## ll_adv.c:606:5
 1e15f28:    41 08             	r1 = r4			  ## ll_adv.c:606:5
 1e15f2a:    97 f3 db 87       	call 3084214 <memcpy : 106ee4 >			  ## ll_adv.c:606:5
 1e15f2e:    55 01             	{pc, r5, r4} = [sp++]


ll_adv_set_adv_data:
 1e15f30:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:614:0
 1e15f32:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:614:0
 1e15f38:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:619:9
 1e15f3a:    04 08             	r4 = r0			  ## ll_adv.c:619:9
 1e15f3c:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_adv_data+0x12 : 1e15f42 >			  ## ll_adv.c:619:9
 1e15f3e:    d7 17             	call -82 <ll_adv_init : 1e15eee >			  ## ll_adv.c:620:9
 1e15f40:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:620:9
 1e15f42:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:623:44
 1e15f44:    c5 ff a3 2f 00 00 	r5 = 12195 <adv_data.3045 : 2fa3 >
 1e15f4a:    01 70             	r1 = 0			  ## ll_adv.c:625:5
 1e15f4c:    02 72             	r2 = 32			  ## ll_adv.c:625:5
 1e15f4e:    50 08             	r0 = r5			  ## ll_adv.c:625:5
 1e15f50:    97 f3 ce 87       	call 3084188 <memset : 106ef0 >			  ## ll_adv.c:625:5
 1e15f54:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:626:23
 1e15f56:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:626:21
 1e15f5a:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:627:44
 1e15f5c:    11 98             	r1 = r4 + 1			  ## ll_adv.c:627:35
 1e15f5e:    50 08             	r0 = r5			  ## ll_adv.c:627:5
 1e15f60:    97 f3 c0 87       	call 3084160 <memcpy : 106ee4 >			  ## ll_adv.c:627:5
 1e15f64:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_adv_data+0x42 : 1e15f72 >			  ## ll_adv.c:627:5
 1e15f66:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:633:31
 1e15f68:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_adv_data+0x42 : 1e15f72 >			  ## ll_adv.c:633:31
 1e15f6a:    51 71             	r1 = 21			  ## ll_adv.c:634:9
 1e15f6c:    42 08             	r2 = r4			  ## ll_adv.c:634:9
 1e15f6e:    bf f3 4e e1       	call -15716 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:634:9
 1e15f72:    56 01             	{pc, r6-r4} = [sp++]


ll_adv_set_scan_rsp_data:
 1e15f74:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:640:0
 1e15f76:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:640:0
 1e15f7c:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:645:9
 1e15f7e:    04 08             	r4 = r0			  ## ll_adv.c:645:9
 1e15f80:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_scan_rsp_data+0x12 : 1e15f86 >			  ## ll_adv.c:645:9
 1e15f82:    b5 17             	call -150 <ll_adv_init : 1e15eee >			  ## ll_adv.c:646:9
 1e15f84:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:646:9
 1e15f86:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:649:44
 1e15f88:    c5 ff c3 2f 00 00 	r5 = 12227 <scan_resp_data : 2fc3 >
 1e15f8e:    01 70             	r1 = 0			  ## ll_adv.c:651:5
 1e15f90:    02 72             	r2 = 32			  ## ll_adv.c:651:5
 1e15f92:    50 08             	r0 = r5			  ## ll_adv.c:651:5
 1e15f94:    97 f3 ac 87       	call 3084120 <memset : 106ef0 >			  ## ll_adv.c:651:5
 1e15f98:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:652:29
 1e15f9a:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:652:27
 1e15f9e:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:653:50
 1e15fa0:    11 98             	r1 = r4 + 1			  ## ll_adv.c:653:41
 1e15fa2:    50 08             	r0 = r5			  ## ll_adv.c:653:5
 1e15fa4:    97 f3 9e 87       	call 3084092 <memcpy : 106ee4 >			  ## ll_adv.c:653:5
 1e15fa8:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_scan_rsp_data+0x42 : 1e15fb6 >			  ## ll_adv.c:653:5
 1e15faa:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:659:31
 1e15fac:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_scan_rsp_data+0x42 : 1e15fb6 >			  ## ll_adv.c:659:31
 1e15fae:    61 71             	r1 = 22			  ## ll_adv.c:660:9
 1e15fb0:    42 08             	r2 = r4			  ## ll_adv.c:660:9
 1e15fb2:    bf f3 2c e1       	call -15784 <le_hw_ioctrl : 1e1220e >			  ## ll_adv.c:660:9
 1e15fb6:    56 01             	{pc, r6-r4} = [sp++]


ll_adv_open:
 1e15fb8:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:784:0
 1e15fba:    c5 ff b0 0e 00 00 	r5 = 3760 <adv_hdl : eb0 >			  ## ll_adv.c:784:0
 1e15fc0:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:790:9
 1e15fc2:    02 30             	if (r0 != 0) goto 4 <ll_adv_open+0x10 : 1e15fc8 >			  ## ll_adv.c:790:9
 1e15fc4:    94 17             	call -216 <ll_adv_init : 1e15eee >			  ## ll_adv.c:791:9
 1e15fc6:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:791:9
 1e15fc8:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:796:44
 1e15fca:    01 20             	if (r0 == 0) goto 2 <ll_adv_open+0x16 : 1e15fce >
 1e15fcc:    55 01             	{pc, r5, r4} = [sp++]
 1e15fce:    80 71             	r0 = 24			  ## ll_adv.c:803:16
 1e15fd0:    bf f3 22 7c       	call -67516 <__bt_malloc : 1e05818 >			  ## ll_adv.c:803:16
 1e15fd4:    04 08             	r4 = r0			  ## ll_adv.c:803:16
 1e15fd6:    fa 29             	if (r4 == 0) goto -12 <ll_adv_open+0x14 : 1e15fcc >			  ## ll_adv.c:803:16
 1e15fd8:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:810:5
 1e15fda:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:810:22
 1e15fdc:    bf f3 aa e5       	call -13484 <le_hw_open : 1e12b34 >			  ## ll_adv.c:812:20
 1e15fe0:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:812:18
 1e15fe2:    f4 21             	if (r0 == 0) goto -24 <ll_adv_open+0x14 : 1e15fcc >			  ## ll_adv.c:812:18
 1e15fe4:    00 40             	r0 = [r0 + 0]
 1e15fe6:    c2 ff 1c 44 e1 01 	r2 = 31540252 <adv_handler : 1e1441c >			  ## ll_adv.c:820:5
 1e15fec:    41 08             	r1 = r4			  ## ll_adv.c:820:5
 1e15fee:    bf f3 5a e5       	call -13644 <le_hw_handler_register : 1e12aa6 >			  ## ll_adv.c:820:5
 1e15ff2:    40 08             	r0 = r4			  ## ll_adv.c:826:18
 1e15ff4:    c8 14             	call -1648 <__set_ll_adv_state : 1e15986 >			  ## ll_adv.c:826:18
 1e15ff6:    ea 31             	if (r0 != 0) goto -44 <ll_adv_open+0x14 : 1e15fcc >
 1e15ff8:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:837:5
 1e15ffa:    11 70             	r1 = 1			  ## ll_adv.c:837:20
 1e15ffc:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:837:20
 1e15ffe:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_adv.c:837:20


ll_send_acl_packet:
 1e16000:    7c 01             	[--sp] = {rets, r12-r4}			  ## link_layer.c:1006:0
 1e16002:    fe 0b             	sp += -4			  ## link_layer.c:1006:0
 1e16004:    25 08             	r5 = r2			  ## link_layer.c:1006:0
 1e16006:    14 08             	r4 = r1			  ## link_layer.c:1006:0
 1e16008:    bf f3 4b f6       	call -4970 <ll_link_for_handle : 1e14ca2 >			  ## link_layer.c:1009:12
 1e1600c:    09 08             	r9 = r0			  ## link_layer.c:1009:12
 1e1600e:    55 20             	if (r0 == 0) goto 170 <ll_send_acl_packet+0xBA : 1e160ba >
 1e16010:    08 fc 40 00       	r8 = r0 + 64			  ## link_layer.c:1017:26
 1e16014:    01 70             	r1 = 0			  ## link_layer.c:1017:5
 1e16016:    06 70             	r6 = 0			  ## link_layer.c:1017:5
 1e16018:    80 08             	r0 = r8			  ## link_layer.c:1017:5
 1e1601a:    97 f3 03 87       	call 3083782 <os_mutex_pend : 106e24 >			  ## link_layer.c:1017:5
 1e1601e:    0a f9 01 40       	r10 = b[r4 + 1] (u)			  ## link_layer.c:1021:15
 1e16022:    c0 70             	r0 = 12			  ## link_layer.c:1038:19
 1e16024:    bf f3 f8 7b       	call -67600 <__bt_malloc : 1e05818 >			  ## link_layer.c:1038:19
 1e16028:    0c 08             	r12 = r0			  ## link_layer.c:1038:19
 1e1602a:    02 30             	if (r0 != 0) goto 4 <ll_send_acl_packet+0x30 : 1e16030 >			  ## link_layer.c:1038:19
 1e1602c:    8f f3 f3 69       	call 2020326 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16030:    16 f9 08 c0       	b[r12 + 8] = r6			  ## link_layer.c:1040:38
 1e16034:    96 fc 74 01       	r6 = r9 + 372			  ## link_layer.c:1040:38
 1e16038:    07 5c             	r7 = h[r6 + 0] (u)			  ## link_layer.c:1042:47
 1e1603a:    80 5c             	r0 = h[r6 + 16] (u)			  ## link_layer.c:1043:48
 1e1603c:    9b fc 04 01       	r11 = r9 + 260			  ## link_layer.c:1043:48
 1e16040:    07 f2 04 10       	if (r7 != r0) goto 8 <ll_send_acl_packet+0x4C : 1e1604c >			  ## link_layer.c:1043:48
 1e16044:    08 18             	goto 16 <ll_send_acl_packet+0x56 : 1e16056 >			  ## link_layer.c:1043:48
 1e16046:    10 70             	r0 = 1			  ## link_layer.c:1046:13
 1e16048:    97 f3 b6 86       	call 3083628 <os_time_dly : 106db8 >			  ## link_layer.c:1046:13
 1e1604c:    00 f6 00 b0       	r0 = [r11 + 0]
 1e16050:    b0 f2 f9 1f       	if (r0 != r11) goto -14 <ll_send_acl_packet+0x46 : 1e16046 >
 1e16054:    8f 5c             	h[r6 + 16] = r7			  ## link_layer.c:1048:48
 1e16056:    44 80             	r4 += 4			  ## link_layer.c:1031:36
 1e16058:    05 18             	goto 10 <ll_send_acl_packet+0x64 : 1e16064 >
 1e1605a:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1059:42
 1e1605e:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1060:59
 1e16060:    21 70             	r1 = 2			  ## link_layer.c:1059:13
 1e16062:    0d 18             	goto 26 <ll_send_acl_packet+0x7E : 1e1607e >			  ## link_layer.c:1059:13
 1e16064:    71 08             	r1 = r7			  ## link_layer.c:1053:30
 1e16066:    75 f2 01 c0       	ifs (r5 > r7) goto 2 <ll_send_acl_packet+0x6C : 1e1606c >			  ## link_layer.c:1053:30
 1e1606a:    51 08             	r1 = r5			  ## link_layer.c:1053:30
 1e1606c:    24 f3 03 a0       	if ((r10 & 16) != 0) goto 6 <ll_send_acl_packet+0x76 : 1e16076 >
 1e16070:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1057:52
 1e16074:    f2 21             	if (r0 == 0) goto -28 <ll_send_acl_packet+0x5A : 1e1605a >			  ## link_layer.c:1057:52
 1e16076:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1063:42
 1e1607a:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1064:59
 1e1607c:    11 70             	r1 = 1			  ## link_layer.c:1063:13
 1e1607e:    0f 02             	[sp] = r7
 1e16080:    42 08             	r2 = r4
 1e16082:    63 08             	r3 = r6
 1e16084:    bf f3 47 f1       	call -7538 <le_hw_send_packet : 1e14316 >
 1e16088:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1069:41
 1e1608c:    10 80             	r0 += 1			  ## link_layer.c:1069:41
 1e1608e:    10 f9 08 c0       	b[r12 + 8] = r0			  ## link_layer.c:1069:41
 1e16092:    a5 bb             	r5 = r5 - r6			  ## link_layer.c:1068:38
 1e16094:    64 09             	r4 += r6			  ## link_layer.c:1067:31
 1e16096:    e6 3b             	if (r5 != 0) goto -52 <ll_send_acl_packet+0x64 : 1e16064 >
 1e16098:    97 f3 80 86       	call 3083520 <local_irq_disable : 106d9c >			  ## link_layer.c:1074:5
 1e1609c:    00 f6 04 b0       	r0 = [r11 + 4]			  ## list.h:154:28
 1e160a0:    1c f6 04 b0       	[r11 + 4] = r12			  ## list.h:137:16
 1e160a4:    1b f6 00 c0       	[r12 + 0] = r11			  ## list.h:138:16
 1e160a8:    10 f6 04 c0       	[r12 + 4] = r0			  ## list.h:139:16
 1e160ac:    1c f6 00 00       	[r0 + 0] = r12			  ## list.h:140:16
 1e160b0:    97 f3 72 86       	call 3083492 <local_irq_enable : 106d98 >			  ## link_layer.c:1076:5
 1e160b4:    80 08             	r0 = r8			  ## link_layer.c:1079:5
 1e160b6:    97 f3 b7 86       	call 3083630 <os_mutex_post : 106e28 >			  ## link_layer.c:1079:5
 1e160ba:    02 0a             	sp += 4
 1e160bc:    5c 01             	{pc, r12-r4} = [sp++]			  ## link_layer.c:1080:1


__conn_master_rx_post_handler:
 1e160be:    34 00             	[--sp] = rets			  ## ll_master.c:561:0
 1e160c0:    42 52             	r2 = h[r1 + 8] (u)			  ## ll_master.c:564:17
 1e160c2:    92 c6             	r2 = r2 << 26			  ## ll_master.c:564:5
 1e160c4:    22 fd c0 2c       	r2 = r2 & 3221225472			  ## ll_master.c:564:17
 1e160c8:    42 fb c0 2c       	r2 = r2 + 3221225472			  ## ll_master.c:564:5
 1e160cc:    92 df             	r2 = r2 >>> 30			  ## ll_master.c:564:5
 1e160ce:    02 e0 02 b0       	ifs (r2 < 0) goto 4 <__conn_master_rx_post_handler+0x18 : 1e160d6 >			  ## ll_master.c:564:5
 1e160d2:    bf f3 23 f8       	call -4026 <conn_rx_acl_u_post_handler : 1e1511c >			  ## ll_master.c:570:9
 1e160d6:    30 00             	pc = [sp++]			  ## ll_master.c:578:1


ll_update_send_data_handle:
 1e160d8:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_slave.c:408:0
 1e160da:    fa 0b             	sp += -12			  ## ll_slave.c:408:0
 1e160dc:    c6 ff 60 2d 00 00 	r6 = 11616 <ll_hdl : 2d60 >			  ## ll_slave.c:408:0
 1e160e2:    07 f9 22 60       	r7 = b[r6 + 34] (u)			  ## link_layer.c:742:17
 1e160e6:    14 08             	r4 = r1			  ## link_layer.c:742:17
 1e160e8:    05 08             	r5 = r0
 1e160ea:    17 2e             	if (r7 == 0) goto 46 <ll_update_send_data_handle+0x42 : 1e1611a >
 1e160ec:    90 4c             	r0 = [r6 + 36]
 1e160ee:    61 fc 24 00       	r1 = r6 + 36
 1e160f2:    10 f2 12 00       	if (r0 == r1) goto 36 <ll_update_send_data_handle+0x42 : 1e1611a >
 1e160f6:    86 60             	r6 = b[r0 + 8] (u)			  ## link_layer.c:748:19
 1e160f8:    76 e0 04 00       	if (r6 == 7) goto 8 <ll_update_send_data_handle+0x2C : 1e16104 >			  ## link_layer.c:748:13
 1e160fc:    00 40             	r0 = [r0 + 0]
 1e160fe:    10 f2 fa 1f       	if (r0 != r1) goto -12 <ll_update_send_data_handle+0x1E : 1e160f6 >
 1e16102:    0b 18             	goto 22 <ll_update_send_data_handle+0x42 : 1e1611a >
 1e16104:    2b 02             	[sp+8] = r3			  ## ll_slave.c:403:5
 1e16106:    1a 02             	[sp+4] = r2			  ## ll_slave.c:403:5
 1e16108:    c0 8c             	r0 += -52			  ## ll_slave.c:403:5
 1e1610a:    c2 ff f8 f1 e0 01 	r2 = 31519224 <bluetooth_base_uuid+0x1EE : 1e0f1f8 >			  ## ll_slave.c:403:5
 1e16110:    61 74             	r1 = 70			  ## ll_slave.c:403:5
 1e16112:    0c 02             	[sp] = r4			  ## ll_slave.c:403:5
 1e16114:    53 08             	r3 = r5			  ## ll_slave.c:403:5
 1e16116:    bf f3 dc f5       	call -5192 <ll_send_control_data : 1e14cd2 >			  ## ll_slave.c:403:5
 1e1611a:    06 0a             	sp += 12
 1e1611c:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_slave.c:416:1


create_param_default:
 1e1611e:    0b 00             	ssync
 1e16120:    0b 00             	ssync
 1e16122:    00 00             	nop
 1e16124:    00 00             	nop
 1e16126:    00 00             	nop
 1e16128:    00 00             	nop
 1e1612a:    00 06             	r0 = -32
 1e1612c:    00 20             	if (r0 == 0) goto 0 <create_param_default+0x10 : 1e1612e >
 1e1612e:    00 00             	nop
 1e16130:    00 80             	r0 += 0
 1e16132:    01 01             	{r3-r1} = [sp++]
 1e16134:    00 01             	{r3-r0} = [sp++]
 1e16136:    00 00             	nop


le_controller_get_mac:
 1e16138:    c1 ff c4 0e 00 00 	r1 = 3780 <le_param+0x8 : ec4 >			  ## hci_ll_cmds.c:611:0
 1e1613e:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e16140:    d7 f3 d0 86       	goto 3083680 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5


ll_hci_destory:
 1e16144:    ff f3 2a f2       	goto -7084 <ll_destroy : 1e1459c >			  ## hci_ll.c:63:0


le_controller_set_mac:
 1e16148:    01 08             	r1 = r0			  ## hci_ll_cmds.c:602:0
 1e1614a:    c0 ff c4 0e 00 00 	r0 = 3780 <le_param+0x8 : ec4 >			  ## hci_ll_cmds.c:606:5
 1e16150:    62 70             	r2 = 6			  ## hci_ll_cmds.c:606:5
 1e16152:    d7 f3 c7 86       	goto 3083662 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:606:5


ll_hci_set_event_mask:
 1e16156:    c0 ff bc 0e 00 00 	r0 = 3772 <le_param : ebc >			  ## hci_ll.c:72:0
 1e1615c:    c1 ff 07 f8 bf 3d 	r1 = 1035991047 <uECC_vli_cmp_unsafe+0x1AF880B : 1bff807 >			  ## hci_ll.c:73:5
 1e16162:    19 40             	[r0 + 4] = r1			  ## hci_ll.c:73:5
 1e16164:    c1 ff ff ff fb ff 	r1 = 4294705151 <bank_code_load_addr+0x1A55DB : 1fbffff >			  ## hci_ll.c:73:5
 1e1616a:    09 40             	[r0 + 0] = r1			  ## hci_ll.c:73:5
 1e1616c:    20 00             	rts			  ## hci_ll.c:74:1


ll_hci_get_acl_data_len:
 1e1616e:    c0 ff bc 0e 00 00 	r0 = 3772 <le_param : ebc >			  ## hci_ll.c:146:0
 1e16174:    00 f7 42 00       	r0 = h[r0 + 66] (u)			  ## hci_ll.c:147:5
 1e16178:    20 00             	rts			  ## hci_ll.c:147:5


ll_hci_get_acl_total_num:
 1e1617a:    c0 ff bc 0e 00 00 	r0 = 3772 <le_param : ebc >			  ## hci_ll.c:151:0
 1e16180:    00 f9 40 00       	r0 = b[r0 + 64] (u)			  ## hci_ll.c:152:21
 1e16184:    20 00             	rts			  ## hci_ll.c:152:5


hci_ll_get_device_address:
 1e16186:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:687:0
 1e16188:    c2 ff 68 0f 00 00 	r2 = 3944 <config_hci_ll_param.0 : f68 >			  ## hci_ll.c:690:29
 1e1618e:    02 64             	r2 = b[r2 + 0] (u)			  ## hci_ll.c:690:29
 1e16190:    04 08             	r4 = r0			  ## hci_ll.c:690:29
 1e16192:    20 fd 01 29       	r0 = r2 & 1
 1e16196:    90 b0             	r0 |= 2			  ## hci_ll.c:690:51
 1e16198:    c3 ff c4 0e 00 00 	r3 = 3780 <le_param+0x8 : ec4 >			  ## hci_ll.c:690:51
 1e1619e:    20 e0 07 10       	if (r0 != 2) goto 14 <hci_ll_get_device_address+0x2A : 1e161b0 >			  ## hci_ll.c:690:51
 1e161a2:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e161a4:    10 08             	r0 = r1			  ## hci_ll_cmds.c:612:5
 1e161a6:    31 08             	r1 = r3			  ## hci_ll_cmds.c:612:5
 1e161a8:    97 f3 9c 86       	call 3083576 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5
 1e161ac:    00 70             	r0 = 0			  ## hci_ll_cmds.c:612:5
 1e161ae:    07 18             	goto 14 <hci_ll_get_device_address+0x38 : 1e161be >			  ## hci_ll_cmds.c:612:5
 1e161b0:    63 80             	r3 += 6			  ## hci_ll_cmds.c:627:5
 1e161b2:    62 70             	r2 = 6			  ## hci_ll_cmds.c:627:5
 1e161b4:    10 08             	r0 = r1			  ## hci_ll_cmds.c:627:5
 1e161b6:    31 08             	r1 = r3			  ## hci_ll_cmds.c:627:5
 1e161b8:    97 f3 94 86       	call 3083560 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:627:5
 1e161bc:    10 70             	r0 = 1			  ## hci_ll_cmds.c:627:5
 1e161be:    08 68             	b[r4 + 0] = r0			  ## hci_ll.c:692:20
 1e161c0:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:697:1


ll_hci_connection_update:
 1e161c2:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_ll.c:301:0
 1e161c4:    f4 0b             	sp += -24			  ## hci_ll.c:301:0
 1e161c6:    14 08             	r4 = r1			  ## hci_ll.c:301:0
 1e161c8:    05 08             	r5 = r0			  ## hci_ll.c:301:0
 1e161ca:    c0 02             	r0 = [sp+48]			  ## hci_ll.c:301:0
 1e161cc:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:301:0
 1e161ce:    a6 02             	r6 = [sp+40]			  ## hci_ll.c:301:0
 1e161d0:    58 02             	[sp+20] = r0			  ## hci_ll.c:303:5
 1e161d2:    49 02             	[sp+16] = r1			  ## hci_ll.c:303:5
 1e161d4:    3e 02             	[sp+12] = r6			  ## hci_ll.c:303:5
 1e161d6:    2b 02             	[sp+8] = r3			  ## hci_ll.c:303:5
 1e161d8:    1a 02             	[sp+4] = r2			  ## hci_ll.c:303:5
 1e161da:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:303:5
 1e161e0:    81 70             	r1 = 8			  ## hci_ll.c:303:5
 1e161e2:    02 fb 13 20       	r2 = 8211 <att_ram_buffer+0x2CF : 2013 >			  ## hci_ll.c:303:5
 1e161e6:    0c 02             	[sp] = r4			  ## hci_ll.c:303:5
 1e161e8:    53 08             	r3 = r5			  ## hci_ll.c:303:5
 1e161ea:    bf f3 e0 db       	call -18496 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:303:5
 1e161ee:    0c 0a             	sp += 24			  ## hci_ll.c:303:5
 1e161f0:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_ll.c:303:5


ll_hci_private_free_dma_rx:
 1e161f2:    00 8f             	r0 += -16			  ## hci_ll.c:672:0
 1e161f4:    ff f3 65 59       	goto -85302 <hw_dma_free : 1e014c2 >			  ## hci_ll.c:675:5


ll_hci_adv_enable:
 1e161f8:    03 08             	r3 = r0			  ## hci_ll.c:182:0
 1e161fa:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:183:5
 1e16200:    21 70             	r1 = 2			  ## hci_ll.c:183:5
 1e16202:    02 fb 0a 20       	r2 = 8202 <att_ram_buffer+0x2C6 : 200a >			  ## hci_ll.c:183:5
 1e16206:    ff f3 d2 db       	goto -18524 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:183:5


ll_hci_adv_set_params:
 1e1620a:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:79:0
 1e1620c:    fa 0b             	sp += -12			  ## hci_ll.c:79:0
 1e1620e:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:79:0
 1e16210:    25 08             	r5 = r2			  ## hci_ll.c:79:0
 1e16212:    0b 08             	r11 = r0			  ## hci_ll.c:79:0
 1e16214:    50 6c             	r0 = b[r6 + 5] (u)			  ## hci_ll.c:87:5
 1e16216:    09 f5 38 00       	r9 = [sp+56]			  ## hci_ll.c:87:5
 1e1621a:    c7 ff 68 0f 00 00 	r7 = 3944 <config_hci_ll_param.0 : f68 >			  ## hci_ll.c:90:63
 1e16220:    0c f9 00 70       	r12 = b[r7 + 0] (u)			  ## hci_ll.c:90:63
 1e16224:    08 f9 00 60       	r8 = b[r6 + 0] (u)			  ## hci_ll.c:97:5
 1e16228:    0a f9 02 60       	r10 = b[r6 + 2] (u)			  ## hci_ll.c:87:5
 1e1622c:    12 6c             	r2 = b[r6 + 1] (u)			  ## hci_ll.c:87:5
 1e1622e:    44 6c             	r4 = b[r6 + 4] (u)			  ## hci_ll.c:87:5
 1e16230:    36 6c             	r6 = b[r6 + 3] (u)			  ## hci_ll.c:87:5
 1e16232:    c8 fd 40 09       	r0 <= insert(r9, p:8, l:8)			  ## hci_ll.c:89:41
 1e16236:    82 fd 10 7c       	r7 = uextra(r12, p:2, l:2)			  ## hci_ll.c:90:63
 1e1623a:    c2 fd 80 07       	r0 <= insert(r7, p:16, l:2)			  ## hci_ll.c:90:41
 1e1623e:    28 02             	[sp+8] = r0			  ## hci_ll.c:99:5
 1e16240:    c8 fd 40 64       	r6 <= insert(r4, p:8, l:8)			  ## hci_ll.c:87:5
 1e16244:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:87:5
 1e16248:    d0 fd 80 26       	r2 <= insert(r6, p:16, l:16)			  ## hci_ll.c:87:5
 1e1624c:    1a 02             	[sp+4] = r2			  ## hci_ll.c:99:5
 1e1624e:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## hci_ll.c:97:5
 1e16252:    c8 fd c0 58       	r5 <= insert(r8, p:24, l:8)			  ## hci_ll.c:97:5
 1e16256:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:97:5
 1e1625a:    c2 fd 40 50       	r5 <= insert(r0, p:8, l:2)			  ## hci_ll.c:97:5
 1e1625e:    d0 fd 80 b1       	r11 <= insert(r1, p:16, l:16)			  ## hci_ll.c:97:5
 1e16262:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:99:5
 1e16268:    61 70             	r1 = 6			  ## hci_ll.c:99:5
 1e1626a:    02 fb 06 20       	r2 = 8198 <att_ram_buffer+0x2C2 : 2006 >			  ## hci_ll.c:99:5
 1e1626e:    0d 02             	[sp] = r5			  ## hci_ll.c:99:5
 1e16270:    b3 08             	r3 = r11			  ## hci_ll.c:99:5
 1e16272:    bf f3 9c db       	call -18632 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:99:5
 1e16276:    06 0a             	sp += 12			  ## hci_ll.c:99:5
 1e16278:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:101:1


ll_hci_adv_set_data:
 1e1627a:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:110:0
 1e1627c:    e2 0b             	sp += -60			  ## hci_ll.c:110:0
 1e1627e:    14 08             	r4 = r1			  ## hci_ll.c:110:0
 1e16280:    05 08             	r5 = r0			  ## hci_ll.c:110:0
 1e16282:    c6 a1             	r6 = sp + 28			  ## hci_ll.c:110:0
 1e16284:    01 70             	r1 = 0			  ## hci_ll.c:111:21
 1e16286:    02 72             	r2 = 32			  ## hci_ll.c:111:21
 1e16288:    60 08             	r0 = r6			  ## hci_ll.c:111:21
 1e1628a:    97 f3 31 86       	call 3083362 <memset : 106ef0 >			  ## hci_ll.c:111:21
 1e1628e:    d5 f5 1c 00       	b[sp+28] = r5			  ## hci_ll.c:112:18
 1e16292:    00 fd 01 69       	r0 = r6 | 1			  ## hci_ll.c:115:5
 1e16296:    41 08             	r1 = r4			  ## hci_ll.c:115:5
 1e16298:    52 08             	r2 = r5			  ## hci_ll.c:115:5
 1e1629a:    97 f3 23 86       	call 3083334 <memcpy : 106ee4 >			  ## hci_ll.c:115:5
 1e1629e:    73 02             	r3 = [sp+28]			  ## hci_ll.c:117:5
 1e162a0:    84 02             	r4 = [sp+32]			  ## hci_ll.c:117:5
 1e162a2:    90 02             	r0 = [sp+36]			  ## hci_ll.c:117:5
 1e162a4:    a1 02             	r1 = [sp+40]			  ## hci_ll.c:117:5
 1e162a6:    b2 02             	r2 = [sp+44]			  ## hci_ll.c:117:5
 1e162a8:    c5 02             	r5 = [sp+48]			  ## hci_ll.c:117:5
 1e162aa:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:117:5
 1e162ac:    e7 02             	r7 = [sp+56]			  ## hci_ll.c:117:5
 1e162ae:    6f 02             	[sp+24] = r7			  ## hci_ll.c:117:5
 1e162b0:    5e 02             	[sp+20] = r6			  ## hci_ll.c:117:5
 1e162b2:    4d 02             	[sp+16] = r5			  ## hci_ll.c:117:5
 1e162b4:    3a 02             	[sp+12] = r2			  ## hci_ll.c:117:5
 1e162b6:    29 02             	[sp+8] = r1			  ## hci_ll.c:117:5
 1e162b8:    18 02             	[sp+4] = r0			  ## hci_ll.c:117:5
 1e162ba:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:117:5
 1e162c0:    a1 70             	r1 = 10			  ## hci_ll.c:117:5
 1e162c2:    02 fb 08 20       	r2 = 8200 <att_ram_buffer+0x2C4 : 2008 >			  ## hci_ll.c:117:5
 1e162c6:    0c 02             	[sp] = r4			  ## hci_ll.c:117:5
 1e162c8:    bf f3 71 db       	call -18718 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:117:5
 1e162cc:    1e 0a             	sp += 60			  ## hci_ll.c:117:5
 1e162ce:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:119:1


ll_hci_adv_scan_response_set_data:
 1e162d0:    7f 01             	[--sp] = {rets, r15-r4}			  ## hci_ll.c:123:0
 1e162d2:    c0 0b             	sp += -128			  ## hci_ll.c:123:0
 1e162d4:    02 08             	r2 = r0			  ## hci_ll.c:123:0
 1e162d6:    7a 03             	[sp+92] = r2			  ## hci_ll.c:127:5
 1e162d8:    00 a6             	r0 = sp + 96			  ## hci_ll.c:127:5
 1e162da:    97 f3 03 86       	call 3083270 <memcpy : 106ee4 >			  ## hci_ll.c:127:5
 1e162de:    c0 f5 7e 00       	r0 = b[sp+126] (u)			  ## hci_ll.c:133:5
 1e162e2:    d8 02             	[sp+52] = r0			  ## hci_ll.c:133:5
 1e162e4:    cb f5 7d 00       	r11 = b[sp+125] (u)			  ## hci_ll.c:133:5
 1e162e8:    c0 f5 7c 00       	r0 = b[sp+124] (u)			  ## hci_ll.c:133:5
 1e162ec:    c8 02             	[sp+48] = r0			  ## hci_ll.c:133:5
 1e162ee:    c3 f5 7b 00       	r3 = b[sp+123] (u)			  ## hci_ll.c:133:5
 1e162f2:    c0 f5 62 00       	r0 = b[sp+98] (u)			  ## hci_ll.c:133:5
 1e162f6:    68 03             	[sp+88] = r0			  ## hci_ll.c:133:5
 1e162f8:    80 f5 60 00       	r0 = h[sp+96] (u)			  ## hci_ll.c:133:5
 1e162fc:    58 03             	[sp+84] = r0			  ## hci_ll.c:133:5
 1e162fe:    c0 f5 64 00       	r0 = b[sp+100] (u)			  ## hci_ll.c:133:5
 1e16302:    48 03             	[sp+80] = r0			  ## hci_ll.c:133:5
 1e16304:    cd f5 63 00       	r13 = b[sp+99] (u)			  ## hci_ll.c:133:5
 1e16308:    c0 f5 66 00       	r0 = b[sp+102] (u)			  ## hci_ll.c:133:5
 1e1630c:    38 03             	[sp+76] = r0			  ## hci_ll.c:133:5
 1e1630e:    c0 f5 65 00       	r0 = b[sp+101] (u)			  ## hci_ll.c:133:5
 1e16312:    28 03             	[sp+72] = r0			  ## hci_ll.c:133:5
 1e16314:    c0 f5 68 00       	r0 = b[sp+104] (u)			  ## hci_ll.c:133:5
 1e16318:    18 03             	[sp+68] = r0			  ## hci_ll.c:133:5
 1e1631a:    c8 f5 67 00       	r8 = b[sp+103] (u)			  ## hci_ll.c:133:5
 1e1631e:    c0 f5 6a 00       	r0 = b[sp+106] (u)			  ## hci_ll.c:133:5
 1e16322:    08 03             	[sp+64] = r0			  ## hci_ll.c:133:5
 1e16324:    c0 f5 69 00       	r0 = b[sp+105] (u)			  ## hci_ll.c:133:5
 1e16328:    b8 02             	[sp+44] = r0			  ## hci_ll.c:133:5
 1e1632a:    c0 f5 6c 00       	r0 = b[sp+108] (u)			  ## hci_ll.c:133:5
 1e1632e:    f8 02             	[sp+60] = r0			  ## hci_ll.c:133:5
 1e16330:    c6 f5 6b 00       	r6 = b[sp+107] (u)			  ## hci_ll.c:133:5
 1e16334:    c0 f5 6e 00       	r0 = b[sp+110] (u)			  ## hci_ll.c:133:5
 1e16338:    e8 02             	[sp+56] = r0			  ## hci_ll.c:133:5
 1e1633a:    cc f5 6d 00       	r12 = b[sp+109] (u)			  ## hci_ll.c:133:5
 1e1633e:    c0 f5 70 00       	r0 = b[sp+112] (u)			  ## hci_ll.c:133:5
 1e16342:    a8 02             	[sp+40] = r0			  ## hci_ll.c:133:5
 1e16344:    c4 f5 6f 00       	r4 = b[sp+111] (u)			  ## hci_ll.c:133:5
 1e16348:    c0 f5 72 00       	r0 = b[sp+114] (u)			  ## hci_ll.c:133:5
 1e1634c:    98 02             	[sp+36] = r0			  ## hci_ll.c:133:5
 1e1634e:    c9 f5 71 00       	r9 = b[sp+113] (u)			  ## hci_ll.c:133:5
 1e16352:    c0 f5 74 00       	r0 = b[sp+116] (u)			  ## hci_ll.c:133:5
 1e16356:    88 02             	[sp+32] = r0			  ## hci_ll.c:133:5
 1e16358:    c1 f5 73 00       	r1 = b[sp+115] (u)			  ## hci_ll.c:133:5
 1e1635c:    c0 f5 76 00       	r0 = b[sp+118] (u)			  ## hci_ll.c:133:5
 1e16360:    78 02             	[sp+28] = r0			  ## hci_ll.c:133:5
 1e16362:    c5 f5 75 00       	r5 = b[sp+117] (u)			  ## hci_ll.c:133:5
 1e16366:    ce f5 78 00       	r14 = b[sp+120] (u)			  ## hci_ll.c:133:5
 1e1636a:    c0 f5 77 00       	r0 = b[sp+119] (u)			  ## hci_ll.c:133:5
 1e1636e:    ca f5 7a 00       	r10 = b[sp+122] (u)			  ## hci_ll.c:133:5
 1e16372:    c2 f5 79 00       	r2 = b[sp+121] (u)			  ## hci_ll.c:133:5
 1e16376:    0f f5 34 00       	r15 = [sp+52]			  ## hci_ll.c:133:5
 1e1637a:    c8 fd 40 bf       	r11 <= insert(r15, p:8, l:8)			  ## hci_ll.c:133:5
 1e1637e:    c7 02             	r7 = [sp+48]			  ## hci_ll.c:133:5
 1e16380:    c8 fd 40 37       	r3 <= insert(r7, p:8, l:8)			  ## hci_ll.c:133:5
 1e16384:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## hci_ll.c:133:5
 1e16388:    6b 02             	[sp+24] = r3			  ## hci_ll.c:135:5
 1e1638a:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:133:5
 1e1638e:    c8 fd 40 0e       	r0 <= insert(r14, p:8, l:8)			  ## hci_ll.c:133:5
 1e16392:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## hci_ll.c:133:5
 1e16396:    58 02             	[sp+20] = r0			  ## hci_ll.c:135:5
 1e16398:    70 02             	r0 = [sp+28]			  ## hci_ll.c:133:5
 1e1639a:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e1639e:    80 02             	r0 = [sp+32]			  ## hci_ll.c:133:5
 1e163a0:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163a4:    d0 fd 80 15       	r1 <= insert(r5, p:16, l:16)			  ## hci_ll.c:133:5
 1e163a8:    49 02             	[sp+16] = r1			  ## hci_ll.c:135:5
 1e163aa:    90 02             	r0 = [sp+36]			  ## hci_ll.c:133:5
 1e163ac:    c8 fd 40 90       	r9 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163b0:    a0 02             	r0 = [sp+40]			  ## hci_ll.c:133:5
 1e163b2:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163b6:    d0 fd 80 49       	r4 <= insert(r9, p:16, l:16)			  ## hci_ll.c:133:5
 1e163ba:    3c 02             	[sp+12] = r4			  ## hci_ll.c:135:5
 1e163bc:    e0 02             	r0 = [sp+56]			  ## hci_ll.c:133:5
 1e163be:    c8 fd 40 c0       	r12 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163c2:    f0 02             	r0 = [sp+60]			  ## hci_ll.c:133:5
 1e163c4:    c8 fd 40 60       	r6 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163c8:    d0 fd 80 6c       	r6 <= insert(r12, p:16, l:16)			  ## hci_ll.c:133:5
 1e163cc:    2e 02             	[sp+8] = r6			  ## hci_ll.c:135:5
 1e163ce:    00 03             	r0 = [sp+64]			  ## hci_ll.c:133:5
 1e163d0:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:133:5
 1e163d2:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163d6:    10 03             	r0 = [sp+68]			  ## hci_ll.c:133:5
 1e163d8:    c8 fd 40 80       	r8 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163dc:    d0 fd 80 81       	r8 <= insert(r1, p:16, l:16)			  ## hci_ll.c:133:5
 1e163e0:    18 f5 04 00       	[sp+4] = r8			  ## hci_ll.c:135:5
 1e163e4:    21 03             	r1 = [sp+72]			  ## hci_ll.c:135:5
 1e163e6:    30 03             	r0 = [sp+76]			  ## hci_ll.c:133:5
 1e163e8:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163ec:    40 03             	r0 = [sp+80]			  ## hci_ll.c:133:5
 1e163ee:    c8 fd 40 d0       	r13 <= insert(r0, p:8, l:8)			  ## hci_ll.c:133:5
 1e163f2:    d0 fd 80 d1       	r13 <= insert(r1, p:16, l:16)			  ## hci_ll.c:133:5
 1e163f6:    50 03             	r0 = [sp+84]
 1e163f8:    61 03             	r1 = [sp+88]			  ## hci_ll.c:133:5
 1e163fa:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## hci_ll.c:133:5
 1e163fe:    73 03             	r3 = [sp+92]			  ## hci_ll.c:133:5
 1e16400:    d8 fd 40 30       	r3 <= insert(r0, p:8, l:24)			  ## hci_ll.c:135:5
 1e16404:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:135:5
 1e1640a:    a1 70             	r1 = 10			  ## hci_ll.c:135:5
 1e1640c:    02 fb 09 20       	r2 = 8201 <att_ram_buffer+0x2C5 : 2009 >			  ## hci_ll.c:135:5
 1e16410:    1d f5 00 00       	[sp] = r13			  ## hci_ll.c:135:5
 1e16414:    bf f3 cb da       	call -19050 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:135:5
 1e16418:    40 0a             	sp += 128			  ## hci_ll.c:135:5
 1e1641a:    5f 01             	{pc, r15-r4} = [sp++]			  ## hci_ll.c:137:1


ll_hci_scan_enable:
 1e1641c:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:188:0
 1e1641e:    fe 0b             	sp += -4			  ## hci_ll.c:188:0
 1e16420:    13 08             	r3 = r1			  ## hci_ll.c:188:0
 1e16422:    04 08             	r4 = r0			  ## hci_ll.c:188:0
 1e16424:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:189:5
 1e1642a:    31 70             	r1 = 3			  ## hci_ll.c:189:5
 1e1642c:    02 fb 0c 20       	r2 = 8204 <att_ram_buffer+0x2C8 : 200c >			  ## hci_ll.c:189:5
 1e16430:    0b 02             	[sp] = r3			  ## hci_ll.c:189:5
 1e16432:    43 08             	r3 = r4			  ## hci_ll.c:189:5
 1e16434:    bf f3 bb da       	call -19082 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:189:5
 1e16438:    02 0a             	sp += 4			  ## hci_ll.c:189:5
 1e1643a:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:189:5


ll_hci_disconnect:
 1e1643c:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:311:0
 1e1643e:    fe 0b             	sp += -4			  ## hci_ll.c:311:0
 1e16440:    03 08             	r3 = r0			  ## hci_ll.c:311:0
 1e16442:    34 71             	r4 = 19			  ## hci_ll.c:312:5
 1e16444:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:312:5
 1e1644a:    31 70             	r1 = 3			  ## hci_ll.c:312:5
 1e1644c:    02 fb 06 04       	r2 = 1030 <BTCTLER_LE_RAM_TOTAL+0x2E : 406 >			  ## hci_ll.c:312:5
 1e16450:    0c 02             	[sp] = r4			  ## hci_ll.c:312:5
 1e16452:    bf f3 ac da       	call -19112 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:312:5
 1e16456:    02 0a             	sp += 4			  ## hci_ll.c:312:5
 1e16458:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:312:5


ll_hci_create_conn:
 1e1645a:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:209:0
 1e1645c:    fc 0b             	sp += -8			  ## hci_ll.c:209:0
 1e1645e:    14 08             	r4 = r1			  ## hci_ll.c:209:0
 1e16460:    05 08             	r5 = r0			  ## hci_ll.c:209:0
 1e16462:    c1 ff 23 61 e1 01 	r1 = 31547683 <create_param_default+0x5 : 1e16123 >			  ## hci_ll.c:211:5
 1e16468:    06 a0             	r6 = sp + 0			  ## hci_ll.c:211:5
 1e1646a:    72 70             	r2 = 7			  ## hci_ll.c:211:5
 1e1646c:    60 08             	r0 = r6			  ## hci_ll.c:211:5
 1e1646e:    97 f3 39 85       	call 3082866 <memcpy : 106ee4 >			  ## hci_ll.c:211:5
 1e16472:    09 f9 05 50       	r9 = b[r5 + 5] (u)			  ## hci_ll.c:214:18
 1e16476:    08 f9 04 50       	r8 = b[r5 + 4] (u)			  ## hci_ll.c:214:18
 1e1647a:    0a f9 01 50       	r10 = b[r5 + 1] (u)			  ## hci_ll.c:214:18
 1e1647e:    07 6a             	r7 = b[r5 + 0] (u)			  ## hci_ll.c:214:18
 1e16480:    0b f9 03 50       	r11 = b[r5 + 3] (u)			  ## hci_ll.c:214:18
 1e16484:    25 6a             	r5 = b[r5 + 2] (u)			  ## hci_ll.c:214:18
 1e16486:    c0 ff 68 0f 00 00 	r0 = 3944 <config_hci_ll_param.0 : f68 >			  ## hci_ll.c:212:64
 1e1648c:    0c f9 00 00       	r12 = b[r0 + 0] (u)			  ## hci_ll.c:212:64
 1e16490:    72 70             	r2 = 7			  ## hci_ll.c:215:5
 1e16492:    60 08             	r0 = r6			  ## hci_ll.c:215:5
 1e16494:    41 08             	r1 = r4			  ## hci_ll.c:215:5
 1e16496:    97 f3 25 85       	call 3082826 <memcpy : 106ee4 >			  ## hci_ll.c:215:5
 1e1649a:    c4 ff e0 2c 00 00 	r4 = 11488 <hci_cmd_tmp_buff : 2ce0 >			  ## hci_ll.c:215:5
 1e164a0:    c0 f4 0b 4d       	[r4 + 0] = 720907			  ## hci_ll.c:219:5
 1e164a4:    f2 fd 30 0c       	r0 = r12 >> 6			  ## hci_ll.c:212:64
 1e164a8:    48 68             	b[r4 + 4] = r0			  ## hci_ll.c:219:5
 1e164aa:    50 98             	r0 = r4 + 5			  ## hci_ll.c:219:5
 1e164ac:    72 70             	r2 = 7			  ## hci_ll.c:219:5
 1e164ae:    61 08             	r1 = r6			  ## hci_ll.c:219:5
 1e164b0:    97 f3 18 85       	call 3082800 <memcpy : 106ee4 >			  ## hci_ll.c:219:5
 1e164b4:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:213:57
 1e164b8:    c8 68             	b[r4 + 12] = r0			  ## hci_ll.c:219:5
 1e164ba:    c8 fd 40 5b       	r5 <= insert(r11, p:8, l:8)			  ## hci_ll.c:214:18
 1e164be:    c8 fd 40 7a       	r7 <= insert(r10, p:8, l:8)			  ## hci_ll.c:214:18
 1e164c2:    d0 fd 80 75       	r7 <= insert(r5, p:16, l:16)			  ## hci_ll.c:214:18
 1e164c6:    38 d4             	r0 = r7 >> 16			  ## hci_ll.c:214:18
 1e164c8:    d8 fd 40 89       	r8 <= insert(r9, p:8, l:24)			  ## hci_ll.c:214:18
 1e164cc:    d0 fd 80 08       	r0 <= insert(r8, p:16, l:16)			  ## hci_ll.c:214:18
 1e164d0:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:219:5
 1e164d2:    49 69             	b[r4 + 20] = r1			  ## hci_ll.c:219:5
 1e164d4:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:219:5
 1e164d6:    39 69             	b[r4 + 19] = r1			  ## hci_ll.c:219:5
 1e164d8:    01 d2             	r1 = r0 >> 8			  ## hci_ll.c:219:5
 1e164da:    29 69             	b[r4 + 18] = r1			  ## hci_ll.c:219:5
 1e164dc:    18 69             	b[r4 + 17] = r0			  ## hci_ll.c:219:5
 1e164de:    60 70             	r0 = 6			  ## hci_ll.c:219:5
 1e164e0:    d0 fd 80 07       	r0 <= insert(r7, p:16, l:16)			  ## hci_ll.c:214:18
 1e164e4:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:219:5
 1e164e6:    09 69             	b[r4 + 16] = r1			  ## hci_ll.c:219:5
 1e164e8:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:219:5
 1e164ea:    f9 68             	b[r4 + 15] = r1			  ## hci_ll.c:219:5
 1e164ec:    01 70             	r1 = 0			  ## hci_ll.c:219:5
 1e164ee:    e9 68             	b[r4 + 14] = r1			  ## hci_ll.c:219:5
 1e164f0:    d8 68             	b[r4 + 13] = r0			  ## hci_ll.c:219:5
 1e164f2:    89 69             	b[r4 + 24] = r1			  ## hci_ll.c:219:5
 1e164f4:    10 70             	r0 = 1			  ## hci_ll.c:219:5
 1e164f6:    78 69             	b[r4 + 23] = r0			  ## hci_ll.c:219:5
 1e164f8:    69 69             	b[r4 + 22] = r1			  ## hci_ll.c:219:5
 1e164fa:    58 69             	b[r4 + 21] = r0			  ## hci_ll.c:219:5
 1e164fc:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:220:5
 1e16502:    21 70             	r1 = 2			  ## hci_ll.c:220:5
 1e16504:    02 fb 0d 20       	r2 = 8205 <att_ram_buffer+0x2C9 : 200d >			  ## hci_ll.c:220:5
 1e16508:    43 08             	r3 = r4			  ## hci_ll.c:220:5
 1e1650a:    bf f3 50 da       	call -19296 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:220:5
 1e1650e:    04 0a             	sp += 8			  ## hci_ll.c:220:5
 1e16510:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:220:5


ll_hci_create_conn_cancel:
 1e16512:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:228:0
 1e16518:    11 70             	r1 = 1			  ## hci_ll.c:229:5
 1e1651a:    02 fb 0e 20       	r2 = 8206 <att_ram_buffer+0x2CA : 200e >			  ## hci_ll.c:229:5
 1e1651e:    ff f3 46 da       	goto -19316 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:229:5


ll_hci_vendor_send_key_num:
 1e16522:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:234:0
 1e16524:    fe 0b             	sp += -4			  ## hci_ll.c:234:0
 1e16526:    14 08             	r4 = r1			  ## hci_ll.c:234:0
 1e16528:    03 08             	r3 = r0			  ## hci_ll.c:234:0
 1e1652a:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:235:5
 1e16530:    c2 ff 83 f8 00 00 	r2 = 63619 <UPDATA_BREDR_BASE_BEG+0xD23 : f883 >			  ## hci_ll.c:235:5
 1e16536:    31 70             	r1 = 3			  ## hci_ll.c:235:5
 1e16538:    0c 02             	[sp] = r4			  ## hci_ll.c:235:5
 1e1653a:    bf f3 38 da       	call -19344 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:235:5
 1e1653e:    02 0a             	sp += 4			  ## hci_ll.c:235:5
 1e16540:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:235:5


ll_vendor_latency_hold_cnt:
 1e16542:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:240:0
 1e16544:    fe 0b             	sp += -4			  ## hci_ll.c:240:0
 1e16546:    14 08             	r4 = r1			  ## hci_ll.c:240:0
 1e16548:    03 08             	r3 = r0			  ## hci_ll.c:240:0
 1e1654a:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:241:5
 1e16550:    c2 ff 84 f8 00 00 	r2 = 63620 <UPDATA_BREDR_BASE_BEG+0xD24 : f884 >			  ## hci_ll.c:241:5
 1e16556:    31 70             	r1 = 3			  ## hci_ll.c:241:5
 1e16558:    0c 02             	[sp] = r4			  ## hci_ll.c:241:5
 1e1655a:    bf f3 28 da       	call -19376 <btctrler_hci_cmd_to_task : 1e119ae >			  ## hci_ll.c:241:5
 1e1655e:    02 0a             	sp += 4			  ## hci_ll.c:241:5
 1e16560:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:241:5


ll_hci_cmd_handler:
 1e16562:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:432:0
 1e16564:    a8 0b             	sp += -176			  ## hci_ll.c:432:0
 1e16566:    06 08             	r6 = r0			  ## hci_ll.c:432:0
 1e16568:    04 5c             	r4 = h[r6 + 0] (u)			  ## hci_ll.c:433:18
 1e1656a:    c5 ff d3 f1 e0 01 	r5 = 31519187 <bluetooth_base_uuid+0x1C9 : 1e0f1d3 >
 1e16570:    01 ff 06 44 11 00 	if (r4 != 1030) goto 34 <ll_hci_cmd_handler+0x36 : 1e16598 >			  ## hci_ll.c:437:9
 1e16576:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:443:42
 1e16578:    90 f5 ac 00       	h[sp+172] = r0			  ## hci_ll.c:443:40
 1e1657c:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:444:31
 1e1657e:    d0 f5 ae 00       	b[sp+174] = r0			  ## hci_ll.c:444:29
 1e16582:    c1 aa             	r1 = sp + 172			  ## hci_ll.c:444:29
 1e16584:    40 08             	r0 = r4			  ## hci_ll.c:445:26
 1e16586:    bf f3 c0 fb       	call -2176 <ll_push_control_data : 1e15d0a >			  ## hci_ll.c:445:26
 1e1658a:    02 08             	r2 = r0			  ## hci_ll.c:445:26
 1e1658c:    01 fb 06 04       	r1 = 1030 <BTCTLER_LE_RAM_TOTAL+0x2E : 406 >			  ## hci_ll.c:446:17
 1e16590:    f0 70             	r0 = 15			  ## hci_ll.c:446:17
 1e16592:    13 70             	r3 = 1			  ## hci_ll.c:446:17
 1e16594:    09 02             	[sp] = r1			  ## hci_ll.c:446:17
 1e16596:    aa 18             	goto 340 <.GJTIE828_0_0_+0x128 : 1e166ec >			  ## hci_ll.c:446:17
 1e16598:    30 fd fc 4a       	r0 = r4 & 4294902783
 1e1659c:    40 e2 1c c0       	ifs (r0 > 36) goto 56 <.GJTIE828_0_0_+0x14 : 1e165d8 >			  ## hci_ll.c:452:5
 1e165a0:    a0 8f             	r0 += -6
 1e165a2:    50 e1 a6 80       	if (r0 > 21) goto 332 <.GJTIE828_0_0_+0x12E : 1e166f2 >
 1e165a6:    c7 ff d4 f1 e0 01 	r7 = 31519188 <bluetooth_base_uuid+0x1CA : 1e0f1d4 >
 1e165ac:    a0 00             	tbb [r0]


.GJTIS828_0_0_:
 1e165ae:    0b     < 11 : 0xB >
 1e165af:    a2     < 162 : 0xA2 >
 1e165b0:    2d     < 45 : 0x2D >
 1e165b1:    37     < 55 : 0x37 >
 1e165b2:    41     < 65 : 0x41 >
 1e165b3:    a2     < 162 : 0xA2 >
 1e165b4:    a2     < 162 : 0xA2 >
 1e165b5:    a2     < 162 : 0xA2 >
 1e165b6:    a2     < 162 : 0xA2 >
 1e165b7:    a2     < 162 : 0xA2 >
 1e165b8:    a2     < 162 : 0xA2 >
 1e165b9:    a2     < 162 : 0xA2 >
 1e165ba:    a2     < 162 : 0xA2 >
 1e165bb:    a2     < 162 : 0xA2 >
 1e165bc:    a2     < 162 : 0xA2 >
 1e165bd:    a2     < 162 : 0xA2 >
 1e165be:    a2     < 162 : 0xA2 >
 1e165bf:    46     < 70 : 0x46 >
 1e165c0:    62     < 98 : 0x62 >
 1e165c1:    70     < 112 : 0x70 >
 1e165c2:    72     < 114 : 0x72 >
 1e165c3:    7d     < 125 : 0x7D >
 1e165c4:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:471:36
 1e165c6:    d4 a9             	r4 = sp + 157			  ## hci_ll.c:471:36
 1e165c8:    f2 70             	r2 = 15			  ## hci_ll.c:471:13
 1e165ca:    40 08             	r0 = r4			  ## hci_ll.c:471:13
 1e165cc:    97 f3 8a 84       	call 3082516 <memcpy : 106ee4 >			  ## hci_ll.c:471:13
 1e165d0:    40 08             	r0 = r4			  ## hci_ll.c:472:13
 1e165d2:    bf f3 9a fc       	call -1740 <ll_adv_set_params : 1e15f0a >			  ## hci_ll.c:472:13
 1e165d6:    8d 18             	goto 282 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:472:13
 1e165d8:    0c ff 82 00 07 00 	ifs (r0 > 130) goto 14 <.GJTIE828_0_0_+0x28 : 1e165ec >
 1e165de:    50 e2 02 00       	if (r0 == 37) goto 4 <.GJTIE828_0_0_+0x22 : 1e165e6 >
 1e165e2:    60 e2 86 10       	if (r0 != 38) goto 268 <.GJTIE828_0_0_+0x12E : 1e166f2 >
 1e165e6:    f0 70             	r0 = 15
 1e165e8:    02 70             	r2 = 0
 1e165ea:    7e 18             	goto 252 <.GJTIE828_0_0_+0x124 : 1e166e8 >
 1e165ec:    00 ff 83 00 6f 00 	if (r0 == 131) goto 222 <.GJTIE828_0_0_+0x10C : 1e166d0 >
 1e165f2:    01 ff 84 00 7d 00 	if (r0 != 132) goto 250 <.GJTIE828_0_0_+0x12E : 1e166f2 >
 1e165f8:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:620:27
 1e165fa:    90 f5 04 00       	h[sp+4] = r0			  ## hci_ll.c:620:25
 1e165fe:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:621:27
 1e16600:    90 f5 06 00       	h[sp+6] = r0			  ## hci_ll.c:621:25
 1e16604:    41 a0             	r1 = sp + 4			  ## hci_ll.c:621:25
 1e16606:    6b 18             	goto 214 <.GJTIE828_0_0_+0x11A : 1e166de >			  ## hci_ll.c:621:25
 1e16608:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:479:35
 1e1660a:    d4 a7             	r4 = sp + 125			  ## hci_ll.c:479:35
 1e1660c:    02 72             	r2 = 32			  ## hci_ll.c:479:13
 1e1660e:    40 08             	r0 = r4			  ## hci_ll.c:479:13
 1e16610:    97 f3 68 84       	call 3082448 <memcpy : 106ee4 >			  ## hci_ll.c:479:13
 1e16614:    40 08             	r0 = r4			  ## hci_ll.c:480:13
 1e16616:    bf f3 8b fc       	call -1770 <ll_adv_set_adv_data : 1e15f30 >			  ## hci_ll.c:480:13
 1e1661a:    6b 18             	goto 214 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:480:13
 1e1661c:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:487:41
 1e1661e:    d4 a5             	r4 = sp + 93			  ## hci_ll.c:487:41
 1e16620:    02 72             	r2 = 32			  ## hci_ll.c:487:13
 1e16622:    40 08             	r0 = r4			  ## hci_ll.c:487:13
 1e16624:    97 f3 5e 84       	call 3082428 <memcpy : 106ee4 >			  ## hci_ll.c:487:13
 1e16628:    40 08             	r0 = r4			  ## hci_ll.c:488:13
 1e1662a:    bf f3 a3 fc       	call -1722 <ll_adv_set_scan_rsp_data : 1e15f74 >			  ## hci_ll.c:488:13
 1e1662e:    61 18             	goto 194 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:488:13
 1e16630:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:493:13
 1e16632:    61 20             	if (r0 == 0) goto 194 <.GJTIE828_0_0_+0x132 : 1e166f6 >			  ## hci_ll.c:493:13
 1e16634:    bf f3 c0 fc       	call -1664 <ll_adv_open : 1e15fb8 >			  ## hci_ll.c:494:22
 1e16638:    5c 18             	goto 184 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:494:22
 1e1663a:    41 9c             	r1 = r6 + 4			  ## hci_ll.c:526:29
 1e1663c:    d4 a4             	r4 = sp + 77			  ## hci_ll.c:526:29
 1e1663e:    02 71             	r2 = 16			  ## hci_ll.c:526:13
 1e16640:    40 08             	r0 = r4			  ## hci_ll.c:526:13
 1e16642:    97 f3 4f 84       	call 3082398 <memcpy : 106ee4 >			  ## hci_ll.c:526:13
 1e16646:    41 9d             	r1 = r6 + 20			  ## hci_ll.c:527:40
 1e16648:    d5 a3             	r5 = sp + 61			  ## hci_ll.c:527:40
 1e1664a:    02 71             	r2 = 16			  ## hci_ll.c:527:13
 1e1664c:    50 08             	r0 = r5			  ## hci_ll.c:527:13
 1e1664e:    97 f3 49 84       	call 3082386 <memcpy : 106ee4 >			  ## hci_ll.c:527:13
 1e16652:    d6 a2             	r6 = sp + 45			  ## hci_ll.c:527:13
 1e16654:    40 08             	r0 = r4			  ## hci_ll.c:528:13
 1e16656:    51 08             	r1 = r5			  ## hci_ll.c:528:13
 1e16658:    62 08             	r2 = r6			  ## hci_ll.c:528:13
 1e1665a:    bf f3 f4 79       	call -68632 <aes128_start : 1e05a46 >			  ## hci_ll.c:528:13
 1e1665e:    c1 ff eb f1 e0 01 	r1 = 31519211 <bluetooth_base_uuid+0x1E1 : 1e0f1eb >			  ## hci_ll.c:529:13
 1e16664:    00 fb 17 20       	r0 = 8215 <att_ram_buffer+0x2D3 : 2017 >			  ## hci_ll.c:529:13
 1e16668:    02 70             	r2 = 0			  ## hci_ll.c:529:13
 1e1666a:    63 08             	r3 = r6			  ## hci_ll.c:529:13
 1e1666c:    bf f3 19 da       	call -19406 <hci_send_event_cmd_complete : 1e11aa2 >			  ## hci_ll.c:529:13
 1e16670:    40 18             	goto 128 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:529:13
 1e16672:    55 a2             	r5 = sp + 37
 1e16674:    81 70             	r1 = 8			  ## hci_ll.c:536:13
 1e16676:    50 08             	r0 = r5			  ## hci_ll.c:536:13
 1e16678:    bf f3 91 7a       	call -68318 <pseudo_random_genrate : 1e05b9e >			  ## hci_ll.c:536:13
 1e1667c:    c1 ff d7 f1 e0 01 	r1 = 31519191 <bluetooth_base_uuid+0x1CD : 1e0f1d7 >			  ## hci_ll.c:537:13
 1e16682:    02 70             	r2 = 0			  ## hci_ll.c:537:13
 1e16684:    40 08             	r0 = r4			  ## hci_ll.c:537:13
 1e16686:    53 08             	r3 = r5			  ## hci_ll.c:537:13
 1e16688:    bf f3 0b da       	call -19434 <hci_send_event_cmd_complete : 1e11aa2 >			  ## hci_ll.c:537:13
 1e1668c:    32 18             	goto 100 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:537:13
 1e1668e:    11 4c             	r1 = [r6 + 4]			  ## hci_ll.c:545:63
 1e16690:    26 18             	goto 76 <.GJTIE828_0_0_+0x11A : 1e166de >			  ## hci_ll.c:545:63
 1e16692:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:557:42
 1e16694:    90 f5 10 00       	h[sp+16] = r0			  ## hci_ll.c:557:40
 1e16698:    05 a1             	r5 = sp + 16			  ## hci_ll.c:557:40
 1e1669a:    00 fd 02 59       	r0 = r5 | 2			  ## hci_ll.c:558:17
 1e1669e:    81 9c             	r1 = r6 + 8			  ## hci_ll.c:558:48
 1e166a0:    02 71             	r2 = 16			  ## hci_ll.c:558:17
 1e166a2:    97 f3 1f 84       	call 3082302 <memcpy : 106ee4 >			  ## hci_ll.c:558:17
 1e166a6:    04 18             	goto 8 <.GJTIE828_0_0_+0xEC : 1e166b0 >			  ## hci_ll.c:558:17
 1e166a8:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:572:42
 1e166aa:    90 f5 0c 00       	h[sp+12] = r0			  ## hci_ll.c:572:40
 1e166ae:    c5 a0             	r5 = sp + 12			  ## hci_ll.c:572:40
 1e166b0:    40 08             	r0 = r4
 1e166b2:    51 08             	r1 = r5
 1e166b4:    bf f3 29 fb       	call -2478 <ll_push_control_data : 1e15d0a >
 1e166b8:    02 08             	r2 = r0
 1e166ba:    01 70             	r1 = 0
 1e166bc:    50 08             	r0 = r5
 1e166be:    bf f3 54 72       	call -72536 <btctler_little_endian_read_16 : 1e04b6a >
 1e166c2:    33 fd f0 0a       	r3 = r0 & 4294905855
 1e166c6:    40 08             	r0 = r4
 1e166c8:    71 08             	r1 = r7
 1e166ca:    bf f3 ea d9       	call -19500 <hci_send_event_cmd_complete : 1e11aa2 >
 1e166ce:    11 18             	goto 34 <.GJTIE828_0_0_+0x12E : 1e166f2 >
 1e166d0:    10 4c             	r0 = [r6 + 4]			  ## hci_ll.c:610:38
 1e166d2:    90 f5 08 00       	h[sp+8] = r0			  ## hci_ll.c:610:36
 1e166d6:    20 4c             	r0 = [r6 + 8]			  ## hci_ll.c:611:28
 1e166d8:    d0 f5 0a 00       	b[sp+10] = r0			  ## hci_ll.c:611:26
 1e166dc:    81 a0             	r1 = sp + 8			  ## hci_ll.c:611:26
 1e166de:    40 08             	r0 = r4
 1e166e0:    bf f3 13 fb       	call -2522 <ll_push_control_data : 1e15d0a >
 1e166e4:    02 08             	r2 = r0
 1e166e6:    f0 70             	r0 = 15
 1e166e8:    13 70             	r3 = 1
 1e166ea:    0c 02             	[sp] = r4
 1e166ec:    51 08             	r1 = r5
 1e166ee:    bf f3 94 d9       	call -19672 <hci_send_event : 1e11a1a >
 1e166f2:    58 0a             	sp += 176
 1e166f4:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:655:1
 1e166f6:    bf f3 9b ee       	call -8906 <ll_adv_close : 1e14430 >			  ## hci_ll.c:496:22
 1e166fa:    fb 1f             	goto -10 <.GJTIE828_0_0_+0x12E : 1e166f2 >			  ## hci_ll.c:496:22


ll_push_acl_data:
 1e166fc:    74 01             	[--sp] = {rets, r4}			  ## hci_ll_cmds.c:541:0
 1e166fe:    02 08             	r2 = r0			  ## hci_ll_cmds.c:541:0
 1e16700:    01 70             	r1 = 0			  ## hci_ll_cmds.c:546:14
 1e16702:    bf f3 32 72       	call -72604 <btctler_little_endian_read_16 : 1e04b6a >			  ## hci_ll_cmds.c:546:14
 1e16706:    03 08             	r3 = r0			  ## hci_ll_cmds.c:546:14
 1e16708:    21 70             	r1 = 2			  ## hci_ll_cmds.c:547:12
 1e1670a:    20 08             	r0 = r2			  ## hci_ll_cmds.c:547:12
 1e1670c:    bf f3 2d 72       	call -72614 <btctler_little_endian_read_16 : 1e04b6a >			  ## hci_ll_cmds.c:547:12
 1e16710:    04 08             	r4 = r0			  ## hci_ll_cmds.c:547:12
 1e16712:    30 fd f0 3a       	r0 = r3 & 4294905855			  ## hci_ll_cmds.c:546:14
 1e16716:    21 08             	r1 = r2			  ## hci_ll_cmds.c:552:5
 1e16718:    42 08             	r2 = r4			  ## hci_ll_cmds.c:552:5
 1e1671a:    14 01             	{rets, r4} = [sp++]			  ## hci_ll_cmds.c:552:5
 1e1671c:    ff f3 70 fc       	goto -1824 <ll_send_acl_packet : 1e16000 >			  ## hci_ll_cmds.c:552:5


__bt_updata_save_connection_info:
 1e16720:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:718:0
 1e16722:    f6 0b             	sp += -20			  ## lmp_escape3.c:718:0
 1e16724:    c0 ff 80 0f 00 00 	r0 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:719:35
 1e1672a:    04 40             	r4 = [r0 + 0]			  ## lmp_escape3.c:719:35
 1e1672c:    14 28             	if (r4 == 0) goto 40 <__bt_updata_save_connection_info+0x36 : 1e16756 >
 1e1672e:    97 f3 35 83       	call 3081834 <local_irq_disable : 106d9c >			  ## lmp_escape3.c:725:5
 1e16732:    30 70             	r0 = 3			  ## lmp_escape3.c:728:33
 1e16734:    d0 f5 02 00       	b[sp+2] = r0			  ## lmp_escape3.c:728:33
 1e16738:    00 f6 c4 40       	r0 = [r4 + 196]			  ## lmp_escape3.c:729:38
 1e1673c:    01 a0             	r1 = sp + 0			  ## lmp_escape3.c:729:38
 1e1673e:    80 f3 61 02       	call 1218 <__bt_updata_save_link_info : 1e16c04 >			  ## lmp_escape3.c:729:5
 1e16742:    00 f6 c4 40       	r0 = [r4 + 196]			  ## lmp_escape3.c:730:44
 1e16746:    00 f6 cc 00       	r0 = [r0 + 204]			  ## lmp_escape3.c:730:50
 1e1674a:    80 f3 7c 02       	call 1272 <__bt_updata_save_curr_used_frame : 1e16c46 >			  ## lmp_escape3.c:730:5
 1e1674e:    97 f3 23 83       	call 3081798 <local_irq_enable : 106d98 >			  ## lmp_escape3.c:733:5
 1e16752:    00 70             	r0 = 0			  ## lmp_escape3.c:733:5
 1e16754:    01 18             	goto 2 <__bt_updata_save_connection_info+0x38 : 1e16758 >			  ## lmp_escape3.c:733:5
 1e16756:    f0 07             	r0 = -1
 1e16758:    0a 0a             	sp += 20
 1e1675a:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:736:1


bredr_get_rssi_for_address:
 1e1675c:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp.c:407:0
 1e1675e:    c6 ff 94 30 00 00 	r6 = 12436 <lmp_acl_link : 3094 >			  ## lmp.c:407:0
 1e16764:    05 70             	r5 = 0			  ## lmp.c:407:0
 1e16766:    c8 ff fc 24 00 00 	r8 = 9468 <edr_remote_address : 24fc >			  ## lmp.c:407:0
 1e1676c:    60 08             	r0 = r6			  ## lmp.c:407:0
 1e1676e:    07 fc a8 00       	r7 = r0 + 168			  ## lmp.c:407:0
 1e16772:    00 5e             	r0 = h[r7 + 0] (u)			  ## lmp.c:414:26
 1e16774:    0e 20             	if (r0 == 0) goto 28 <bredr_get_rssi_for_address+0x36 : 1e16792 >			  ## lmp.c:414:26
 1e16776:    74 4e             	r4 = [r7 + 28]			  ## lmp.c:414:42
 1e16778:    0c 28             	if (r4 == 0) goto 24 <bredr_get_rssi_for_address+0x36 : 1e16792 >			  ## lmp.c:414:42
 1e1677a:    40 fc a3 00       	r0 = r4 + 163			  ## lmp.c:415:25
 1e1677e:    62 70             	r2 = 6			  ## lmp.c:415:18
 1e16780:    81 08             	r1 = r8			  ## lmp.c:415:18
 1e16782:    97 f3 b3 83       	call 3082086 <memcmp : 106eec >			  ## lmp.c:415:18
 1e16786:    05 30             	if (r0 != 0) goto 10 <bredr_get_rssi_for_address+0x36 : 1e16792 >			  ## lmp.c:415:18
 1e16788:    00 f6 cc 40       	r0 = [r4 + 204]			  ## lmp.c:416:58
 1e1678c:    80 f3 a4 02       	call 1352 <bredr_analog_get_rssi : 1e16cd8 >			  ## lmp.c:416:24
 1e16790:    05 08             	r5 = r0			  ## lmp.c:416:24
 1e16792:    70 fc 38 00       	r0 = r7 + 56			  ## lmp.c:413:5
 1e16796:    61 fc e0 00       	r1 = r6 + 224
 1e1679a:    10 f2 e8 3f       	if (r0 < r1) goto -48 <bredr_get_rssi_for_address+0x12 : 1e1676e >
 1e1679e:    50 05             	r0 = r5.b0 (s)			  ## lmp.c:421:1
 1e167a0:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp.c:421:1


get_random_number:
 1e167a2:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp.c:239:0
 1e167a4:    fe 0b             	sp += -4			  ## lmp.c:239:0
 1e167a6:    14 08             	r4 = r1			  ## lmp.c:239:0
 1e167a8:    05 08             	r5 = r0			  ## lmp.c:239:0
 1e167aa:    19 28             	if (r4 == 0) goto 50 <get_random_number+0x3C : 1e167de >			  ## lmp.c:239:0
 1e167ac:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## lmp.c:239:0
 1e167b2:    00 f6 00 80       	r0 = [r8 + 0]			  ## lmp.c:246:27
 1e167b6:    01 05             	r1 = r4.b0 (u)			  ## lmp.c:248:13
 1e167b8:    08 02             	[sp] = r0			  ## lmp.c:246:16
 1e167ba:    47 08             	r7 = r4			  ## lmp.c:248:13
 1e167bc:    41 e0 01 30       	if (r1 < 4) goto 2 <get_random_number+0x20 : 1e167c2 >			  ## lmp.c:248:13
 1e167c0:    47 70             	r7 = 4			  ## lmp.c:248:13
 1e167c2:    c6 05             	r6 = r7.b0 (u)			  ## lmp.c:251:40
 1e167c4:    01 a0             	r1 = sp + 0			  ## lmp.c:251:40
 1e167c6:    50 08             	r0 = r5			  ## lmp.c:251:9
 1e167c8:    62 08             	r2 = r6			  ## lmp.c:251:9
 1e167ca:    97 f3 8b 83       	call 3082006 <memcpy : 106ee4 >			  ## lmp.c:251:9
 1e167ce:    a0 70             	r0 = 10			  ## lmp.c:254:9
 1e167d0:    8f f3 f9 6c       	call 2021874 <delay : 41c6 >			  ## lmp.c:254:9
 1e167d4:    e4 b9             	r4 = r4 - r7			  ## lmp.c:253:17
 1e167d6:    65 09             	r5 += r6			  ## lmp.c:252:17
 1e167d8:    61 ff ff 49 ea ff 	if ((r4 & 255) != 0) goto -44 <get_random_number+0x10 : 1e167b2 >
 1e167de:    02 0a             	sp += 4
 1e167e0:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp.c:256:1


lmp_private_remote_addr_for_handler:
 1e167e2:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:461:0
 1e167e4:    c2 ff 94 30 00 00 	r2 = 12436 <lmp_acl_link : 3094 >			  ## lmp.c:461:0
 1e167ea:    23 08             	r3 = r2			  ## lmp.c:461:0
 1e167ec:    01 f7 a8 30       	r1 = h[r3 + 168] (u)			  ## lmp.c:428:13
 1e167f0:    02 22             	if (r1 == 0) goto 4 <lmp_private_remote_addr_for_handler+0x14 : 1e167f6 >			  ## lmp.c:428:13
 1e167f2:    01 f2 15 00       	if (r1 == r0) goto 42 <lmp_private_remote_addr_for_handler+0x3E : 1e16820 >
 1e167f6:    33 fc e0 00       	r3 = r3 + 224			  ## lmp.c:427:5
 1e167fa:    21 fc e0 00       	r1 = r2 + 224
 1e167fe:    13 f2 f5 3f       	if (r3 < r1) goto -22 <lmp_private_remote_addr_for_handler+0xA : 1e167ec >
 1e16802:    22 fc a8 00       	r2 = r2 + 168
 1e16806:    03 54             	r3 = h[r2 + 0] (u)			  ## lmp.c:468:30
 1e16808:    05 26             	if (r3 == 0) goto 10 <lmp_private_remote_addr_for_handler+0x32 : 1e16814 >			  ## lmp.c:468:30
 1e1680a:    93 44             	r3 = [r2 + 36]			  ## lmp.c:469:27
 1e1680c:    03 26             	if (r3 == 0) goto 6 <lmp_private_remote_addr_for_handler+0x32 : 1e16814 >			  ## lmp.c:469:27
 1e1680e:    04 66             	r4 = b[r3 + 0] (u)			  ## lmp.c:469:40
 1e16810:    04 f2 05 00       	if (r4 == r0) goto 10 <lmp_private_remote_addr_for_handler+0x3C : 1e1681e >			  ## lmp.c:469:40
 1e16814:    82 83             	r2 += 56			  ## lmp.c:467:9
 1e16816:    12 f2 f4 3f       	if (r2 < r1) goto -24 <lmp_private_remote_addr_for_handler+0x20 : 1e16802 >
 1e1681a:    00 70             	r0 = 0
 1e1681c:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:476:1
 1e1681e:    73 46             	r3 = [r3 + 28]			  ## lmp.c:470:45
 1e16820:    00 f6 c4 30       	r0 = [r3 + 196]
 1e16824:    00 fc a3 00       	r0 = r0 + 163
 1e16828:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:476:1


lmp_hci_set_connection_encryption:
 1e1682a:    ff f3 6b d8       	goto -20266 <lmp_hci_cmd_to_conn_for_handle : 1e11904 >			  ## lmp_hci.c:299:0


lmp_conn_for_handle:
 1e1682e:    c2 ff 94 30 00 00 	r2 = 12436 <lmp_acl_link : 3094 >			  ## lmp.c:424:0
 1e16834:    01 08             	r1 = r0			  ## lmp.c:424:0
 1e16836:    20 08             	r0 = r2			  ## lmp.c:424:0
 1e16838:    03 f7 a8 00       	r3 = h[r0 + 168] (u)			  ## lmp.c:428:13
 1e1683c:    02 26             	if (r3 == 0) goto 4 <lmp_conn_for_handle+0x14 : 1e16842 >			  ## lmp.c:428:13
 1e1683e:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_handle+0x22 : 1e16850 >
 1e16842:    00 fc e0 00       	r0 = r0 + 224			  ## lmp.c:427:5
 1e16846:    23 fc e0 00       	r3 = r2 + 224
 1e1684a:    30 f2 f5 3f       	if (r0 < r3) goto -22 <lmp_conn_for_handle+0xA : 1e16838 >
 1e1684e:    00 70             	r0 = 0
 1e16850:    20 00             	rts			  ## lmp.c:433:1


lmp_format_packet:
 1e16852:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:565:0
 1e16854:    fe 0b             	sp += -4			  ## lmp.c:565:0
 1e16856:    04 08             	r4 = r0			  ## lmp.c:565:0
 1e16858:    0a 02             	[sp] = r2			  ## lmp.c:565:0
 1e1685a:    0d 18             	goto 26 <lmp_format_packet+0x24 : 1e16876 >			  ## lmp.c:565:0
 1e1685c:    00 02             	r0 = [sp]			  ## lmp.c:568:39
 1e1685e:    42 90             	r2 = r0 + 4			  ## lmp.c:568:39
 1e16860:    0a 02             	[sp] = r2			  ## lmp.c:568:39
 1e16862:    00 40             	r0 = [r0 + 0]			  ## lmp.c:568:39
 1e16864:    10 b1             	r0 |= 4			  ## lmp.c:568:28
 1e16866:    08 68             	b[r4 + 0] = r0			  ## lmp.c:568:26
 1e16868:    05 18             	goto 10 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:568:26
 1e1686a:    00 02             	r0 = [sp]			  ## lmp.c:572:30
 1e1686c:    42 90             	r2 = r0 + 4			  ## lmp.c:572:30
 1e1686e:    0a 02             	[sp] = r2			  ## lmp.c:572:30
 1e16870:    00 40             	r0 = [r0 + 0]			  ## lmp.c:572:30
 1e16872:    28 68             	b[r4 + 2] = r0			  ## lmp.c:572:28
 1e16874:    11 80             	r1 += 1			  ## lmp.c:590:15
 1e16876:    00 62             	r0 = b[r1 + 0] (u)
 1e16878:    c0 e4 1e d0       	ifs (r0 <= 76) goto 60 <.GJTIE476_1_1_+0x28 : 1e168b8 >
 1e1687c:    02 fc b3 ff       	r2 = r0 + -77
 1e16880:    92 e0 35 80       	if (r2 > 9) goto 106 <.GJTIE476_0_0_+0x26 : 1e168ee >
 1e16884:    a2 00             	tbb [r2]


.GJTIS476_1_1_:
 1e16886:    13     < 19 : 0x13 >
 1e16887:    38     < 56 : 0x38 >
 1e16888:    38     < 56 : 0x38 >
 1e16889:    0f     < 15 : 0xF >
 1e1688a:    38     < 56 : 0x38 >
 1e1688b:    38     < 56 : 0x38 >
 1e1688c:    0b     < 11 : 0xB >
 1e1688d:    38     < 56 : 0x38 >
 1e1688e:    38     < 56 : 0x38 >
 1e1688f:    05     < 5 : 0x5 >
 1e16890:    00 02             	r0 = [sp]			  ## lmp.c:574:30
 1e16892:    42 90             	r2 = r0 + 4			  ## lmp.c:574:30
 1e16894:    0a 02             	[sp] = r2			  ## lmp.c:574:30
 1e16896:    00 40             	r0 = [r0 + 0]			  ## lmp.c:574:30
 1e16898:    38 68             	b[r4 + 3] = r0			  ## lmp.c:574:28
 1e1689a:    ec 1f             	goto -40 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:574:28
 1e1689c:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:580:35
 1e1689e:    10 b1             	r0 |= 4			  ## lmp.c:580:35
 1e168a0:    58 68             	b[r4 + 5] = r0			  ## lmp.c:580:35
 1e168a2:    e8 1f             	goto -48 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:580:35
 1e168a4:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:576:26
 1e168a6:    10 b0             	r0 |= 1			  ## lmp.c:576:26
 1e168a8:    58 68             	b[r4 + 5] = r0			  ## lmp.c:576:26
 1e168aa:    e4 1f             	goto -56 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:576:26
 1e168ac:    00 02             	r0 = [sp]			  ## lmp.c:586:34
 1e168ae:    42 90             	r2 = r0 + 4			  ## lmp.c:586:34
 1e168b0:    0a 02             	[sp] = r2			  ## lmp.c:586:34
 1e168b2:    00 40             	r0 = [r0 + 0]			  ## lmp.c:586:34
 1e168b4:    48 68             	b[r4 + 4] = r0			  ## lmp.c:586:32
 1e168b6:    de 1f             	goto -68 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:586:32
 1e168b8:    f0 8b             	r0 += -65
 1e168ba:    60 e0 1c 80       	if (r0 > 6) goto 56 <.GJTIE476_0_0_+0x2E : 1e168f6 >
 1e168be:    a0 00             	tbb [r0]


.GJTIS476_0_0_:
 1e168c0:    13     < 19 : 0x13 >
 1e168c1:    1b     < 27 : 0x1B >
 1e168c2:    1b     < 27 : 0x1B >
 1e168c3:    0f     < 15 : 0xF >
 1e168c4:    08     < 8 : 0x8 >
 1e168c5:    1b     < 27 : 0x1B >
 1e168c6:    04     < 4 : 0x4 >
 1e168c7:    00     < 0 : 0x0 >
 1e168c8:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:582:33
 1e168ca:    90 b1             	r0 |= 8			  ## lmp.c:582:33
 1e168cc:    58 68             	b[r4 + 5] = r0			  ## lmp.c:582:33
 1e168ce:    d2 1f             	goto -92 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:582:33
 1e168d0:    00 02             	r0 = [sp]			  ## lmp.c:570:39
 1e168d2:    42 90             	r2 = r0 + 4			  ## lmp.c:570:39
 1e168d4:    0a 02             	[sp] = r2			  ## lmp.c:570:39
 1e168d6:    00 40             	r0 = [r0 + 0]			  ## lmp.c:570:39
 1e168d8:    10 b1             	r0 |= 4			  ## lmp.c:570:28
 1e168da:    18 68             	b[r4 + 1] = r0			  ## lmp.c:570:26
 1e168dc:    cb 1f             	goto -106 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:570:26
 1e168de:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:578:26
 1e168e0:    90 b0             	r0 |= 2			  ## lmp.c:578:26
 1e168e2:    58 68             	b[r4 + 5] = r0			  ## lmp.c:578:26
 1e168e4:    c7 1f             	goto -114 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:578:26
 1e168e6:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp.c:584:25
 1e168e8:    10 b2             	r0 |= 16			  ## lmp.c:584:25
 1e168ea:    58 68             	b[r4 + 5] = r0			  ## lmp.c:584:25
 1e168ec:    c3 1f             	goto -122 <lmp_format_packet+0x22 : 1e16874 >			  ## lmp.c:584:25
 1e168ee:    60 e7 bc 0f       	if (r0 == 118) goto -136 <lmp_format_packet+0x18 : 1e1686a >
 1e168f2:    50 e6 b3 0f       	if (r0 == 101) goto -154 <lmp_format_packet+0xA : 1e1685c >
 1e168f6:    30 70             	r0 = 3			  ## lmp.c:593:14
 1e168f8:    68 68             	b[r4 + 6] = r0			  ## lmp.c:593:14
 1e168fa:    78 68             	b[r4 + 7] = r0			  ## lmp.c:594:16
 1e168fc:    02 02             	r2 = [sp]			  ## lmp.c:595:44
 1e168fe:    c0 99             	r0 = r4 + 28			  ## lmp.c:595:26
 1e16900:    bf f3 1b 70       	call -73674 <__vsprintf : 1e0493a >			  ## lmp.c:595:15
 1e16904:    58 58             	h[r4 + 10] = r0			  ## lmp.c:595:13
 1e16906:    02 0a             	sp += 4			  ## lmp.c:595:13
 1e16908:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:596:1


lmp_get_esco_conn_statu:
 1e1690a:    c0 ff 94 30 00 00 	r0 = 12436 <lmp_acl_link : 3094 >			  ## lmp_esco.c:1119:0
 1e16910:    01 08             	r1 = r0			  ## lmp_esco.c:1119:0
 1e16912:    02 f6 cc 10       	r2 = [r1 + 204]			  ## lmp_esco.c:1122:19
 1e16916:    08 34             	if (r2 != 0) goto 16 <lmp_get_esco_conn_statu+0x1E : 1e16928 >			  ## lmp_esco.c:1122:19
 1e16918:    11 fc e0 00       	r1 = r1 + 224			  ## lmp_esco.c:1121:5
 1e1691c:    02 fc e0 00       	r2 = r0 + 224			  ## lmp_esco.c:1121:5
 1e16920:    21 f2 f7 3f       	if (r1 < r2) goto -18 <lmp_get_esco_conn_statu+0x8 : 1e16912 >			  ## lmp_esco.c:1121:5
 1e16924:    00 70             	r0 = 0
 1e16926:    20 00             	rts			  ## lmp_esco.c:1127:1
 1e16928:    10 70             	r0 = 1
 1e1692a:    20 00             	rts			  ## lmp_esco.c:1127:1


lmp_request:
 1e1692c:    62 01             	[--sp] = {r3, r2}			  ## lmp.c:620:0
 1e1692e:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:620:0
 1e16930:    fe 0b             	sp += -4			  ## lmp.c:620:0
 1e16932:    16 08             	r6 = r1			  ## lmp.c:620:0
 1e16934:    04 08             	r4 = r0			  ## lmp.c:620:0
 1e16936:    10 71             	r0 = 17			  ## lmp.c:624:10
 1e16938:    bf f3 d8 6f       	call -73808 <bredr_tx_bulk_alloc : 1e048ec >			  ## lmp.c:624:10
 1e1693c:    05 08             	r5 = r0			  ## lmp.c:624:10
 1e1693e:    02 3a             	if (r5 != 0) goto 4 <lmp_request+0x18 : 1e16944 >
 1e16940:    8f f3 69 65       	call 2018002 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16944:    42 a1             	r2 = sp + 20
 1e16946:    0a 02             	[sp] = r2			  ## lmp.c:627:5
 1e16948:    50 08             	r0 = r5			  ## lmp.c:628:5
 1e1694a:    61 08             	r1 = r6			  ## lmp.c:628:5
 1e1694c:    82 17             	call -252 <lmp_format_packet : 1e16852 >			  ## lmp.c:628:5
 1e1694e:    00 f9 7e 40       	r0 = b[r4 + 126] (u)			  ## lmp.c:632:20
 1e16952:    10 e0 03 10       	if (r0 != 1) goto 6 <lmp_request+0x30 : 1e1695c >			  ## lmp.c:632:20
 1e16956:    c0 6b             	r0 = b[r5 + 28] (u)			  ## lmp.c:633:21
 1e16958:    10 b0             	r0 |= 1			  ## lmp.c:633:21
 1e1695a:    c8 6b             	b[r5 + 28] = r0			  ## lmp.c:633:21
 1e1695c:    00 f6 c4 40       	r0 = [r4 + 196]			  ## lmp.c:637:38
 1e16960:    51 08             	r1 = r5			  ## lmp.c:637:5
 1e16962:    80 f3 16 04       	call 2092 <link_conn_tx_bulk_avaiable : 1e17192 >			  ## lmp.c:637:5
 1e16966:    02 0a             	sp += 4			  ## lmp.c:637:5
 1e16968:    16 01             	{rets, r6-r4} = [sp++]			  ## lmp.c:637:5
 1e1696a:    04 0a             	sp += 8			  ## lmp.c:637:5
 1e1696c:    20 00             	rts			  ## lmp.c:637:5


lmp_hci_disconnect:
 1e1696e:    7a 01             	[--sp] = {rets, r10-r4}			  ## lmp_hci.c:371:0
 1e16970:    fc 0b             	sp += -8			  ## lmp_hci.c:371:0
 1e16972:    04 08             	r4 = r0			  ## lmp_hci.c:371:0
 1e16974:    5c 17             	call -328 <lmp_conn_for_handle : 1e1682e >			  ## lmp_hci.c:372:35
 1e16976:    03 20             	if (r0 == 0) goto 6 <lmp_hci_disconnect+0x10 : 1e1697e >			  ## lmp_hci.c:374:9
 1e16978:    bf f3 c4 d7       	call -20600 <lmp_hci_cmd_to_conn_for_handle : 1e11904 >			  ## lmp_hci.c:376:16
 1e1697c:    2e 18             	goto 92 <lmp_hci_disconnect+0x6C : 1e169da >
 1e1697e:    2d 28             	if (r4 == 0) goto 90 <lmp_hci_disconnect+0x6C : 1e169da >
 1e16980:    c5 ff 94 30 00 00 	r5 = 12436 <lmp_acl_link : 3094 >
 1e16986:    6a 71             	r10 = 22
 1e16988:    c8 ff 01 f2 e0 01 	r8 = 31519233 <bluetooth_base_uuid+0x1F7 : 1e0f201 >
 1e1698e:    c9 ff fd f1 e0 01 	r9 = 31519229 <bluetooth_base_uuid+0x1F3 : 1e0f1fd >
 1e16994:    50 08             	r0 = r5
 1e16996:    06 fc 7c 00       	r6 = r0 + 124
 1e1699a:    41 4d             	r1 = [r6 + 80]			  ## lmp_esco.c:275:19
 1e1699c:    18 22             	if (r1 == 0) goto 48 <lmp_hci_disconnect+0x60 : 1e169ce >			  ## lmp_esco.c:275:19
 1e1699e:    02 62             	r2 = b[r1 + 0] (u)			  ## lmp_esco.c:276:17
 1e169a0:    42 f2 15 10       	if (r2 != r4) goto 42 <lmp_hci_disconnect+0x60 : 1e169ce >			  ## lmp_esco.c:276:17
 1e169a4:    22 62             	r2 = b[r1 + 2] (u)			  ## lmp_esco.c:277:56
 1e169a6:    87 62             	r7 = b[r1 + 8] (u)			  ## lmp_esco.c:277:56
 1e169a8:    22 e0 09 10       	if (r2 != 2) goto 18 <lmp_hci_disconnect+0x50 : 1e169be >			  ## lmp_esco.c:277:21
 1e169ac:    1a f5 04 00       	[sp+4] = r10			  ## lmp_esco.c:278:21
 1e169b0:    e2 7f             	r2 = 254			  ## lmp_esco.c:278:21
 1e169b2:    d3 70             	r3 = 13			  ## lmp_esco.c:278:21
 1e169b4:    0f 02             	[sp] = r7			  ## lmp_esco.c:278:21
 1e169b6:    81 08             	r1 = r8			  ## lmp_esco.c:278:21
 1e169b8:    b9 17             	call -142 <lmp_request : 1e1692c >			  ## lmp_esco.c:278:21
 1e169ba:    50 75             	r0 = 85			  ## lmp_esco.c:278:21
 1e169bc:    07 18             	goto 14 <lmp_hci_disconnect+0x5E : 1e169cc >			  ## lmp_esco.c:278:21
 1e169be:    82 75             	r2 = 88			  ## lmp_esco.c:282:21
 1e169c0:    1a f5 00 00       	[sp] = r10			  ## lmp_esco.c:282:21
 1e169c4:    91 08             	r1 = r9			  ## lmp_esco.c:282:21
 1e169c6:    73 08             	r3 = r7			  ## lmp_esco.c:282:21
 1e169c8:    b1 17             	call -158 <lmp_request : 1e1692c >			  ## lmp_esco.c:282:21
 1e169ca:    30 75             	r0 = 83			  ## lmp_esco.c:282:21
 1e169cc:    18 6c             	b[r6 + 1] = r0
 1e169ce:    60 fc 64 00       	r0 = r6 + 100			  ## lmp_esco.c:274:5
 1e169d2:    51 fc e0 00       	r1 = r5 + 224
 1e169d6:    10 f2 de 3f       	if (r0 < r1) goto -68 <lmp_hci_disconnect+0x28 : 1e16996 >
 1e169da:    04 0a             	sp += 8
 1e169dc:    5a 01             	{pc, r10-r4} = [sp++]


lmp_hci_io_capability_request_reply:
 1e169de:    ff f3 dc d7       	goto -20552 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:305:0


lmp_private_handler_for_remote_addr:
 1e169e2:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:479:0
 1e169e4:    16 08             	r6 = r1			  ## lmp.c:479:0
 1e169e6:    05 08             	r5 = r0			  ## lmp.c:479:0
 1e169e8:    8f f3 75 6d       	call 2022122 <lmp_conn_for_address : 44d6 >			  ## lmp.c:481:12
 1e169ec:    04 70             	r4 = 0
 1e169ee:    18 20             	if (r0 == 0) goto 48 <lmp_private_handler_for_remote_addr+0x3E : 1e16a20 >
 1e169f0:    00 fc a4 00       	r0 = r0 + 164
 1e169f4:    16 e0 07 10       	if (r6 != 1) goto 14 <lmp_private_handler_for_remote_addr+0x24 : 1e16a06 >			  ## lmp.c:486:9
 1e169f8:    01 40             	r1 = [r0 + 0]			  ## lmp.c:487:26
 1e169fa:    21 fd 09 19       	r1 = r1 & 9			  ## lmp.c:487:60
 1e169fe:    81 e0 0f 00       	if (r1 == 8) goto 30 <lmp_private_handler_for_remote_addr+0x3E : 1e16a20 >			  ## lmp.c:487:60
 1e16a02:    24 50             	r4 = h[r0 + 4] (u)			  ## lmp.c:490:29
 1e16a04:    0d 18             	goto 26 <lmp_private_handler_for_remote_addr+0x3E : 1e16a20 >			  ## lmp.c:490:29
 1e16a06:    a6 40             	r6 = [r0 + 40]			  ## lmp.c:493:15
 1e16a08:    0b 2c             	if (r6 == 0) goto 22 <lmp_private_handler_for_remote_addr+0x3E : 1e16a20 >
 1e16a0a:    70 4c             	r0 = [r6 + 28]			  ## lmp.c:493:53
 1e16a0c:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lmp.c:493:63
 1e16a10:    00 fc a3 00       	r0 = r0 + 163			  ## lmp.c:493:36
 1e16a14:    62 70             	r2 = 6			  ## lmp.c:493:29
 1e16a16:    51 08             	r1 = r5			  ## lmp.c:493:29
 1e16a18:    97 f3 68 82       	call 3081424 <memcmp : 106eec >			  ## lmp.c:493:29
 1e16a1c:    01 30             	if (r0 != 0) goto 2 <lmp_private_handler_for_remote_addr+0x3E : 1e16a20 >			  ## lmp.c:493:29
 1e16a1e:    04 6c             	r4 = b[r6 + 0] (u)			  ## lmp.c:494:33
 1e16a20:    40 08             	r0 = r4			  ## lmp.c:498:1
 1e16a22:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:498:1


lmp_hci_accept_connection_request:
 1e16a24:    ff f3 b9 d7       	goto -20622 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:406:0


lmp_hci_accept_sco_connection_request:
 1e16a28:    ff f3 b7 d7       	goto -20626 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:413:0


lmp_hci_reject_connection_request:
 1e16a2c:    ff f3 b5 d7       	goto -20630 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:424:0


lmp_hci_link_key_request_reply:
 1e16a30:    ff f3 b3 d7       	goto -20634 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:491:0


lmp_hci_link_key_request_negative_reply:
 1e16a34:    ff f3 b1 d7       	goto -20638 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:499:0


lmp_hci_pin_code_request_reply:
 1e16a38:    ff f3 af d7       	goto -20642 <lmp_hci_cmd_to_conn_for_addr : 1e1199a >			  ## lmp_hci.c:341:0


lmp_private_get_tx_packet_buffer:
 1e16a3c:    74 01             	[--sp] = {rets, r4}			  ## lmp_hci.c:97:0
 1e16a3e:    04 fc fc ff       	r4 = r0 + -4			  ## lmp_hci.c:100:35
 1e16a42:    40 08             	r0 = r4			  ## lmp_hci.c:100:10
 1e16a44:    bf f3 52 6f       	call -74076 <bredr_tx_bulk_alloc : 1e048ec >			  ## lmp_hci.c:100:10
 1e16a48:    03 20             	if (r0 == 0) goto 6 <lmp_private_get_tx_packet_buffer+0x14 : 1e16a50 >
 1e16a4a:    5c 50             	h[r0 + 10] = r4			  ## lmp_hci.c:102:17
 1e16a4c:    80 81             	r0 += 24			  ## lmp_hci.c:104:16
 1e16a4e:    54 01             	{pc, r4} = [sp++]			  ## lmp_hci.c:108:1
 1e16a50:    00 70             	r0 = 0
 1e16a52:    54 01             	{pc, r4} = [sp++]			  ## lmp_hci.c:108:1


lmp_hci_send_packet:
 1e16a54:    77 01             	[--sp] = {rets, r7-r4}			  ## lmp_hci.c:111:0
 1e16a56:    16 08             	r6 = r1			  ## lmp_hci.c:111:0
 1e16a58:    04 08             	r4 = r0			  ## lmp_hci.c:111:0
 1e16a5a:    01 70             	r1 = 0			  ## lmp_hci.c:112:18
 1e16a5c:    bf f3 85 70       	call -73462 <btctler_little_endian_read_16 : 1e04b6a >			  ## lmp_hci.c:112:18
 1e16a60:    30 fd f0 0a       	r0 = r0 & 4294905855			  ## lmp_hci.c:112:18
 1e16a64:    e4 16             	call -568 <lmp_conn_for_handle : 1e1682e >			  ## lmp_hci.c:113:35
 1e16a66:    05 08             	r5 = r0			  ## lmp_hci.c:113:35
 1e16a68:    84 8e             	r4 += -24
 1e16a6a:    1e 2a             	if (r5 == 0) goto 60 <lmp_hci_send_packet+0x54 : 1e16aa8 >
 1e16a6c:    50 58             	r0 = h[r4 + 10] (u)
 1e16a6e:    67 fc fc ff       	r7 = r6 + -4
 1e16a72:    07 f2 02 d0       	ifs (r7 <= r0) goto 4 <lmp_hci_send_packet+0x26 : 1e16a7a >
 1e16a76:    8f f3 ce 64       	call 2017692 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16a7a:    81 9d             	r1 = r6 + 24			  ## link_bulk.c:414:38
 1e16a7c:    40 08             	r0 = r4			  ## link_bulk.c:414:5
 1e16a7e:    bf f3 3c be       	call -33672 <lbuf_realloc : 1e0e6fa >			  ## link_bulk.c:414:5
 1e16a82:    00 70             	r0 = 0			  ## lmp_hci.c:132:21
 1e16a84:    68 58             	h[r4 + 12] = r0			  ## lmp_hci.c:132:21
 1e16a86:    5f 58             	h[r4 + 10] = r7			  ## lmp_hci.c:133:21
 1e16a88:    b0 70             	r0 = 11			  ## lmp_hci.c:134:21
 1e16a8a:    38 68             	b[r4 + 3] = r0			  ## lmp_hci.c:134:21
 1e16a8c:    90 69             	r0 = b[r4 + 25] (u)			  ## lmp_hci.c:136:9
 1e16a8e:    21 fd f0 09       	r1 = r0 & 240			  ## lmp_hci.c:136:32
 1e16a92:    10 70             	r0 = 1			  ## lmp_hci.c:136:32
 1e16a94:    01 e1 01 00       	if (r1 == 16) goto 2 <lmp_hci_send_packet+0x46 : 1e16a9a >			  ## lmp_hci.c:136:32
 1e16a98:    20 70             	r0 = 2			  ## lmp_hci.c:136:9
 1e16a9a:    68 68             	b[r4 + 6] = r0
 1e16a9c:    00 f6 c4 50       	r0 = [r5 + 196]			  ## lmp_hci.c:144:38
 1e16aa0:    41 08             	r1 = r4			  ## lmp_hci.c:144:5
 1e16aa2:    17 01             	{rets, r7-r4} = [sp++]			  ## lmp_hci.c:144:5
 1e16aa4:    c0 f3 75 03       	goto 1770 <link_conn_tx_bulk_avaiable : 1e17192 >			  ## lmp_hci.c:144:5
 1e16aa8:    40 08             	r0 = r4			  ## lmp_hci.c:117:9
 1e16aaa:    17 01             	{rets, r7-r4} = [sp++]			  ## lmp_hci.c:117:9
 1e16aac:    ff f3 2e 70       	goto -73636 <bredr_tx_bulk_free : 1e04b0c >			  ## lmp_hci.c:117:9


lmp_hci_create_connection:
 1e16ab0:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp_hci.c:543:0
 1e16ab2:    f6 0b             	sp += -20			  ## lmp_hci.c:543:0
 1e16ab4:    08 f9 01 00       	r8 = b[r0 + 1] (u)			  ## lmp_hci.c:546:5
 1e16ab8:    03 60             	r3 = b[r0 + 0] (u)			  ## lmp_hci.c:546:5
 1e16aba:    35 60             	r5 = b[r0 + 3] (u)			  ## lmp_hci.c:546:5
 1e16abc:    26 60             	r6 = b[r0 + 2] (u)			  ## lmp_hci.c:546:5
 1e16abe:    57 60             	r7 = b[r0 + 5] (u)			  ## lmp_hci.c:546:5
 1e16ac0:    44 60             	r4 = b[r0 + 4] (u)			  ## lmp_hci.c:546:5
 1e16ac2:    4a 02             	[sp+16] = r2			  ## lmp_hci.c:547:5
 1e16ac4:    00 70             	r0 = 0			  ## lmp_hci.c:547:5
 1e16ac6:    38 02             	[sp+12] = r0			  ## lmp_hci.c:547:5
 1e16ac8:    28 02             	[sp+8] = r0			  ## lmp_hci.c:547:5
 1e16aca:    19 02             	[sp+4] = r1			  ## lmp_hci.c:547:5
 1e16acc:    c8 fd 40 47       	r4 <= insert(r7, p:8, l:8)			  ## lmp_hci.c:546:5
 1e16ad0:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## lmp_hci.c:546:5
 1e16ad4:    c8 fd 40 38       	r3 <= insert(r8, p:8, l:8)			  ## lmp_hci.c:546:5
 1e16ad8:    d0 fd 80 36       	r3 <= insert(r6, p:16, l:16)			  ## lmp_hci.c:546:5
 1e16adc:    c0 ff 02 00 40 00 	r0 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## lmp_hci.c:547:5
 1e16ae2:    71 70             	r1 = 7			  ## lmp_hci.c:547:5
 1e16ae4:    02 fb 05 04       	r2 = 1029 <BTCTLER_LE_RAM_TOTAL+0x2D : 405 >			  ## lmp_hci.c:547:5
 1e16ae8:    0c 02             	[sp] = r4			  ## lmp_hci.c:547:5
 1e16aea:    bf f3 60 d7       	call -20800 <btctrler_hci_cmd_to_task : 1e119ae >			  ## lmp_hci.c:547:5
 1e16aee:    0a 0a             	sp += 20
 1e16af0:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp_hci.c:548:1


lmp_hci_host_num_of_completed_packets:
 1e16af2:    ff f3 07 d7       	goto -20978 <lmp_hci_cmd_to_conn_for_handle : 1e11904 >			  ## lmp_hci.c:257:0


lmp_hci_private_free_acl_packet:
 1e16af6:    74 01             	[--sp] = {rets, r4}			  ## lmp_hci.c:598:0
 1e16af8:    04 08             	r4 = r0			  ## lmp_hci.c:598:0
 1e16afa:    97 f3 4f 81       	call 3080862 <local_irq_disable : 106d9c >			  ## lmp_hci.c:601:5
 1e16afe:    00 f7 f2 4f       	r0 = h[r4 + -14] (u)			  ## lmp_hci.c:602:16
 1e16b02:    90 b1             	r0 |= 8			  ## lmp_hci.c:602:16
 1e16b04:    10 f7 f2 4f       	h[r4 + -14] = r0			  ## lmp_hci.c:602:16
 1e16b08:    14 01             	{rets, r4} = [sp++]			  ## lmp_hci.c:603:5
 1e16b0a:    d7 f3 45 81       	goto 3080842 <local_irq_enable : 106d98 >			  ## lmp_hci.c:603:5


lmp_hci_private_try_free_acl_packet:
 1e16b0e:    74 01             	[--sp] = {rets, r4}			  ## lmp_hci.c:578:0
 1e16b10:    04 08             	r4 = r0			  ## lmp_hci.c:578:0
 1e16b12:    97 f3 43 81       	call 3080838 <local_irq_disable : 106d9c >			  ## lmp_hci.c:581:5
 1e16b16:    00 f7 f2 4f       	r0 = h[r4 + -14] (u)			  ## lmp_hci.c:582:14
 1e16b1a:    24 f3 03 00       	if ((r0 & 16) != 0) goto 6 <lmp_hci_private_try_free_acl_packet+0x16 : 1e16b24 >			  ## lmp_hci.c:582:14
 1e16b1e:    90 b1             	r0 |= 8			  ## lmp_hci.c:583:20
 1e16b20:    10 f7 f2 4f       	h[r4 + -14] = r0			  ## lmp_hci.c:583:20
 1e16b24:    14 01             	{rets, r4} = [sp++]			  ## lmp_hci.c:585:5
 1e16b26:    d7 f3 37 81       	goto 3080814 <local_irq_enable : 106d98 >			  ## lmp_hci.c:585:5


tws_lmp_clear_a2dp_packet:
 1e16b2a:    20 00             	rts			  ## lmp.c:4523:0


bt_updata_clr_flag:
 1e16b2c:    c0 ff 84 0f 00 00 	r0 = 3972 <bt_res_updata_flag : f84 >			  ## lmp_escape3.c:58:0
 1e16b32:    01 40             	r1 = [r0 + 0]			  ## lmp_escape3.c:60:28
 1e16b34:    f1 b0             	r1 &= 4294967293			  ## lmp_escape3.c:60:28
 1e16b36:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:60:28
 1e16b38:    20 00             	rts			  ## lmp_escape3.c:62:1


bt_updata_control:
 1e16b3a:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:515:0
 1e16b3c:    f8 0b             	sp += -16			  ## lmp_escape3.c:515:0
 1e16b3e:    c4 ff 80 0f 00 00 	r4 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:517:35
 1e16b44:    04 48             	r4 = [r4 + 0]			  ## lmp_escape3.c:517:35
 1e16b46:    0b 28             	if (r4 == 0) goto 22 <bt_updata_control+0x24 : 1e16b5e >
 1e16b48:    3b 02             	[sp+12] = r3			  ## lmp_escape3.c:524:5
 1e16b4a:    2a 02             	[sp+8] = r2			  ## lmp_escape3.c:524:5
 1e16b4c:    19 02             	[sp+4] = r1			  ## lmp_escape3.c:524:5
 1e16b4e:    c1 ff f6 f1 e0 01 	r1 = 31519222 <bluetooth_base_uuid+0x1EC : 1e0f1f6 >			  ## lmp_escape3.c:524:5
 1e16b54:    c2 7f             	r2 = 252			  ## lmp_escape3.c:524:5
 1e16b56:    63 76             	r3 = 102			  ## lmp_escape3.c:524:5
 1e16b58:    08 02             	[sp] = r0			  ## lmp_escape3.c:524:5
 1e16b5a:    40 08             	r0 = r4			  ## lmp_escape3.c:524:5
 1e16b5c:    e7 16             	call -562 <lmp_request : 1e1692c >			  ## lmp_escape3.c:524:5
 1e16b5e:    08 0a             	sp += 16
 1e16b60:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:525:1


bt_updata_get_flag:
 1e16b62:    c0 ff 84 0f 00 00 	r0 = 3972 <bt_res_updata_flag : f84 >			  ## lmp_escape3.c:65:0
 1e16b68:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:67:16
 1e16b6a:    20 00             	rts			  ## lmp_escape3.c:70:1


reg_revic_buf_addr:
 1e16b6c:    c0 ff 88 0f 00 00 	r0 = 3976 <uboot_revic_handle : f88 >			  ## lmp_escape3.c:74:0
 1e16b72:    c1 ff 86 82 e1 01 	r1 = 31556230 <bt_updata_handle : 1e18286 >			  ## lmp_escape3.c:75:24
 1e16b78:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:75:24
 1e16b7a:    20 00             	rts			  ## lmp_escape3.c:76:1


lmp_update_init:
 1e16b7c:    c0 ff 80 0f 00 00 	r0 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:542:0
 1e16b82:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:544:39
 1e16b84:    04 20             	if (r0 == 0) goto 8 <lmp_update_init+0x12 : 1e16b8e >
 1e16b86:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lmp_escape3.c:549:15
 1e16b8a:    11 70             	r1 = 1			  ## lmp_escape3.c:549:39
 1e16b8c:    49 61             	b[r0 + 20] = r1			  ## lmp_escape3.c:549:39
 1e16b8e:    20 00             	rts


lmp_update_exit:
 1e16b90:    c0 ff 80 0f 00 00 	r0 = 3968 <update_conn : f80 >			  ## lmp_escape3.c:555:0
 1e16b96:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:557:39
 1e16b98:    04 20             	if (r0 == 0) goto 8 <lmp_update_exit+0x12 : 1e16ba2 >
 1e16b9a:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lmp_escape3.c:563:15
 1e16b9e:    01 70             	r1 = 0			  ## lmp_escape3.c:563:39
 1e16ba0:    49 61             	b[r0 + 20] = r1			  ## lmp_escape3.c:563:39
 1e16ba2:    20 00             	rts


packet_1M_table:
 1e16ba4:    11 00             	lockclr
 1e16ba6:    11 00             	lockclr
 1e16ba8:    03 00             	idle
 1e16baa:    01 00             	nop
 1e16bac:    1b 00             	cli
 1e16bae:    1b 00             	cli
 1e16bb0:    04 00             	bkpt
 1e16bb2:    01 00             	nop
 1e16bb4:    79 00             	sti r9
 1e16bb6:    79 00             	sti r9
 1e16bb8:    0a 00             	ssync
 1e16bba:    03 00             	idle
 1e16bbc:    b7 00             	tbh [r7]
 1e16bbe:    b7 00             	tbh [r7]
 1e16bc0:    0b 00             	ssync
 1e16bc2:    03 00             	idle
 1e16bc4:    e0 00             	flush [r0]
 1e16bc6:    e0 00             	flush [r0]
 1e16bc8:    0e 00              <unkown instruction>
 1e16bca:    05 00             	bkpt
 1e16bcc:    53 01             	{pc, r3} = [sp++]
 1e16bce:    53 01             	{pc, r3} = [sp++]
 1e16bd0:    0f 00              <unkown instruction>
 1e16bd2:    05 00             	bkpt


packet_1M_table_tws:
 1e16bd4:    1b 00             	cli
 1e16bd6:    1b 00             	cli
 1e16bd8:    04 00             	bkpt
 1e16bda:    01 00             	nop
 1e16bdc:    b7 00             	tbh [r7]
 1e16bde:    b7 00             	tbh [r7]
 1e16be0:    0b 00             	ssync
 1e16be2:    03 00             	idle
 1e16be4:    53 01             	{pc, r3} = [sp++]
 1e16be6:    53 01             	{pc, r3} = [sp++]
 1e16be8:    0f 00              <unkown instruction>
 1e16bea:    05 00             	bkpt


packet_2M_table:
 1e16bec:    6c 00             	cli r12
 1e16bee:    36 00             	[--sp] = rets
 1e16bf0:    04 00             	bkpt
 1e16bf2:    01 00             	nop
 1e16bf4:    a5 01             	{psr, retx, reti} = [sp++]
 1e16bf6:    6f 01             	[--sp] = {r15-r4}
 1e16bf8:    0a 00             	ssync
 1e16bfa:    03 00             	idle
 1e16bfc:    a7 02             	r7 = [sp+40]
 1e16bfe:    a7 02             	r7 = [sp+40]
 1e16c00:    0e 00              <unkown instruction>
 1e16c02:    05 00             	bkpt


__bt_updata_save_link_info:
 1e16c04:    80 85             	r0 += 88			  ## bredr_link.c:5625:0
 1e16c06:    22 60             	r2 = b[r0 + 2] (u)			  ## bredr_link.c:5639:40
 1e16c08:    83 62             	r3 = b[r1 + 8] (u)			  ## bredr_link.c:5639:21
 1e16c0a:    52 d0             	r2 = r2 >> 1			  ## bredr_link.c:5639:21
 1e16c0c:    c1 fd 08 32       	r3 <= insert(r2, p:1, l:1)			  ## bredr_link.c:5639:21
 1e16c10:    8b 62             	b[r1 + 8] = r3			  ## bredr_link.c:5639:21
 1e16c12:    22 60             	r2 = b[r0 + 2] (u)			  ## bredr_link.c:5640:40
 1e16c14:    5b d0             	r3 = r3 >> 1			  ## bredr_link.c:5640:21
 1e16c16:    df fd 08 23       	r2 <= insert(r3, p:1, l:31)			  ## bredr_link.c:5640:21
 1e16c1a:    8a 62             	b[r1 + 8] = r2			  ## bredr_link.c:5640:21
 1e16c1c:    23 60             	r3 = b[r0 + 2] (u)			  ## bredr_link.c:5641:40
 1e16c1e:    9b d0             	r3 = r3 >> 2			  ## bredr_link.c:5641:21
 1e16c20:    c1 fd 10 23       	r2 <= insert(r3, p:2, l:1)			  ## bredr_link.c:5641:21
 1e16c24:    8a 62             	b[r1 + 8] = r2			  ## bredr_link.c:5641:21
 1e16c26:    23 60             	r3 = b[r0 + 2] (u)			  ## bredr_link.c:5642:41
 1e16c28:    22 fd 87 29       	r2 = r2 & 135			  ## bredr_link.c:5642:22
 1e16c2c:    23 fd 78 39       	r3 = r3 & 120			  ## bredr_link.c:5642:41
 1e16c30:    52 b6             	r2 |= r3			  ## bredr_link.c:5642:22
 1e16c32:    8a 62             	b[r1 + 8] = r2			  ## bredr_link.c:5642:22
 1e16c34:    32 60             	r2 = b[r0 + 3] (u)			  ## bredr_link.c:5643:46
 1e16c36:    9a 62             	b[r1 + 9] = r2			  ## bredr_link.c:5643:27
 1e16c38:    42 60             	r2 = b[r0 + 4] (u)			  ## bredr_link.c:5644:46
 1e16c3a:    aa 62             	b[r1 + 10] = r2			  ## bredr_link.c:5644:27
 1e16c3c:    32 50             	r2 = h[r0 + 6] (u)			  ## bredr_link.c:5645:42
 1e16c3e:    6a 52             	h[r1 + 12] = r2			  ## bredr_link.c:5645:23
 1e16c40:    50 40             	r0 = [r0 + 20]			  ## bredr_link.c:5646:37
 1e16c42:    48 42             	[r1 + 16] = r0			  ## bredr_link.c:5646:31
 1e16c44:    20 00             	rts			  ## bredr_link.c:5654:1


__bt_updata_save_curr_used_frame:
 1e16c46:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_frame.c:2801:0
 1e16c48:    c4 ff 20 2b 00 00 	r4 = 11040 <btctler_bss_start : 2b20 >			  ## bredr_frame.c:2801:0
 1e16c4e:    05 70             	r5 = 0			  ## bredr_frame.c:2801:0
 1e16c50:    42 08             	r2 = r4			  ## bredr_frame.c:2801:0
 1e16c52:    03 70             	r3 = 0			  ## bredr_frame.c:2801:0
 1e16c54:    46 f6 04 20       	r6 = [r2 ++= 4]			  ## bredr_frame.c:2816:22
 1e16c58:    06 f2 05 00       	if (r6 == r0) goto 10 <__bt_updata_save_curr_used_frame+0x20 : 1e16c66 >			  ## bredr_frame.c:2816:22
 1e16c5c:    13 80             	r3 += 1			  ## bredr_frame.c:2815:39
 1e16c5e:    15 80             	r5 += 1			  ## bredr_frame.c:2815:19
 1e16c60:    83 e0 f8 bf       	ifs (r3 < 8) goto -16 <__bt_updata_save_curr_used_frame+0xE : 1e16c54 >			  ## bredr_frame.c:2815:19
 1e16c64:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_frame.c:2824:1
 1e16c66:    40 fc 40 00       	r0 = r4 + 64			  ## bredr_frame.c:2817:13
 1e16c6a:    42 71             	r2 = 20			  ## bredr_frame.c:2817:13
 1e16c6c:    97 f3 3a 81       	call 3080820 <memcpy : 106ee4 >			  ## bredr_frame.c:2817:13
 1e16c70:    15 f9 41 40       	b[r4 + 65] = r5			  ## bredr_frame.c:2818:51
 1e16c74:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_frame.c:2824:1


bredr_bd_close_frame:
 1e16c76:    20 fb 1c 0b       	r0 = 1835008			  ## bredr_frame.c:2253:0
 1e16c7a:    11 40             	r1 = [r0 + 4]			  ## bredr_frame.c:2254:21
 1e16c7c:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:2254:21
 1e16c7e:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2254:21
 1e16c80:    00 f4 84 09       	[r0 + 0] |= 132			  ## bredr_frame.c:2255:15
 1e16c84:    01 40             	r1 = [r0 + 0]			  ## bredr_frame.c:2259:12
 1e16c86:    28 f3 fd 1f       	if ((r1 & 256) != 0) goto -6 <bredr_bd_close_frame+0xE : 1e16c84 >			  ## bredr_frame.c:2259:5
 1e16c8a:    20 00             	rts			  ## bredr_frame.c:2261:1


bredr_bd_frame_disable:
 1e16c8c:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2280:0
 1e16c8e:    04 08             	r4 = r0			  ## bredr_frame.c:2280:0
 1e16c90:    97 f3 84 80       	call 3080456 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2281:5
 1e16c94:    c0 ff 04 00 1c 00 	r0 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2283:15
 1e16c9a:    00 40             	r0 = [r0 + 0]			  ## bredr_frame.c:2283:15
 1e16c9c:    01 f9 34 42       	r1 = b[r4 + 564] (u)			  ## bredr_frame.c:2285:15
 1e16ca0:    84 fd 60 00       	r0 = uextra(r0, p:12, l:4)			  ## bredr_frame.c:2283:38
 1e16ca4:    10 f2 01 10       	if (r0 != r1) goto 2 <bredr_bd_frame_disable+0x1E : 1e16caa >
 1e16ca8:    e6 17             	call -52 <bredr_bd_close_frame : 1e16c76 >			  ## bredr_frame.c:2286:9
 1e16caa:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2289:5
 1e16cac:    d7 f3 74 80       	goto 3080424 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2289:5


bredr_bd_frame_enable:
 1e16cb0:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2270:0
 1e16cb2:    04 08             	r4 = r0			  ## bredr_frame.c:2270:0
 1e16cb4:    97 f3 72 80       	call 3080420 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2271:5
 1e16cb8:    00 f9 34 42       	r0 = b[r4 + 564] (u)			  ## bredr_frame.c:2272:24
 1e16cbc:    01 f7 36 42       	r1 = h[r4 + 566] (u)			  ## bredr_frame.c:2272:44
 1e16cc0:    00 c3             	r0 = r0 << 12			  ## bredr_frame.c:2272:34
 1e16cc2:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:2272:58
 1e16cc4:    50 b2             	r0 |= r1			  ## bredr_frame.c:2272:41
 1e16cc6:    c1 ff 04 00 1c 00 	r1 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2272:41
 1e16ccc:    08 42             	[r1 + 0] = r0			  ## bredr_frame.c:2272:21
 1e16cce:    00 f4 01 19       	[r1 + 0] |= 1			  ## bredr_frame.c:2265:21
 1e16cd2:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2274:5
 1e16cd4:    d7 f3 60 80       	goto 3080384 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2274:5


bredr_analog_get_rssi:
 1e16cd8:    00 f6 f8 01       	r0 = [r0 + 504]			  ## bredr_frame.c:2587:0
 1e16cdc:    01 d4             	r1 = r0 >> 16			  ## bredr_frame.c:2589:88
 1e16cde:    00 d2             	r0 = r0 >> 8			  ## bredr_frame.c:2589:54
 1e16ce0:    00 fd c0 09       	r0 = r0 | 192			  ## bredr_frame.c:2589:34
 1e16ce4:    10 fd 3f 09       	r0 = r0 ^ 63			  ## bredr_frame.c:2589:34
 1e16ce8:    60 b0             	r0 = r0 - r1			  ## bredr_frame.c:2589:68
 1e16cea:    10 04             	r0 = r0.b0 (s)			  ## bredr_frame.c:2591:5
 1e16cec:    20 00             	rts			  ## bredr_frame.c:2591:5


lp_winsize_init:
 1e16cee:    c0 ff d0 08 00 00 	r0 = 2256 <lp_winsize : 8d0 >			  ## bredr_link.c:3609:0
 1e16cf4:    c1 ff e8 2f 00 00 	r1 = 12264 <bredr_link_v : 2fe8 >			  ## bredr_link.c:3610:19
 1e16cfa:    28 42             	[r1 + 8] = r0			  ## bredr_link.c:3610:19
 1e16cfc:    20 00             	rts			  ## bredr_link.c:3611:1


__write_reg_packet_type:
 1e16cfe:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:83:0
 1e16d00:    10 09             	r0 += r1			  ## bredr_frame.c:86:13
 1e16d02:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:86:13
 1e16d04:    c2 ff b0 80 00 00 	r2 = 32944 <nvbss_size+0xD70 : 80b0 >			  ## bredr_frame.c:87:11
 1e16d0a:    51 b5             	r1 &= r2			  ## bredr_frame.c:87:11
 1e16d0c:    11 b7             	r1 |= 16384			  ## bredr_frame.c:89:5
 1e16d0e:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:89:5
 1e16d10:    20 00             	rts			  ## bredr_frame.c:90:1


bredr_frame_get_empty_txbuf_index:
 1e16d12:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_frame.c:1086:0
 1e16d14:    14 08             	r4 = r1			  ## bredr_frame.c:1086:0
 1e16d16:    05 08             	r5 = r0			  ## bredr_frame.c:1086:0
 1e16d18:    97 f3 40 80       	call 3080320 <local_irq_disable : 106d9c >			  ## bredr_frame.c:1093:5
 1e16d1c:    00 f9 34 52       	r0 = b[r5 + 564] (u)			  ## bredr_frame.c:1093:5
 1e16d20:    00 c1             	r0 = r0 << 4			  ## bredr_frame.c:1093:5
 1e16d22:    20 fb 1c 1b       	r1 = 1835008			  ## bredr_frame.c:1093:5
 1e16d26:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1096:19
 1e16d28:    32 fd 70 29       	r2 = r2 & 4294967183			  ## bredr_frame.c:1096:19
 1e16d2c:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1096:19
 1e16d2e:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1097:19
 1e16d30:    52 b0             	r2 |= r0			  ## bredr_frame.c:1097:19
 1e16d32:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1097:19
 1e16d34:    00 f4 08 19       	[r1 + 0] |= 8			  ## bredr_frame.c:1098:19
 1e16d38:    72 5a             	r2 = h[r5 + 14] (u)			  ## bredr_frame.c:1100:29
 1e16d3a:    06 f7 54 50       	r6 = h[r5 + 84] (u)			  ## bredr_frame.c:1101:29
 1e16d3e:    07 f7 56 50       	r7 = h[r5 + 86] (u)			  ## bredr_frame.c:1102:29
 1e16d42:    93 5a             	r3 = h[r5 + 18] (u)			  ## bredr_frame.c:1103:29
 1e16d44:    a3 5a             	r3 = h[r5 + 20] (u)			  ## bredr_frame.c:1104:29
 1e16d46:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:1105:16
 1e16d48:    03 f3 ed 3f       	if ((r3 & 8) == 0) goto -38 <bredr_frame_get_empty_txbuf_index+0x14 : 1e16d26 >			  ## bredr_frame.c:1105:5
 1e16d4c:    25 fd 01 29       	r5 = r2 & 1			  ## bredr_frame.c:1100:35
 1e16d50:    97 f3 22 80       	call 3080260 <local_irq_enable : 106d98 >			  ## bredr_frame.c:1107:5
 1e16d54:    00 70             	r0 = 0
 1e16d56:    01 70             	r1 = 0
 1e16d58:    06 2a             	if (r5 == 0) goto 12 <bredr_frame_get_empty_txbuf_index+0x54 : 1e16d66 >			  ## bredr_frame.c:1112:13
 1e16d5a:    02 70             	r2 = 0
 1e16d5c:    00 f3 08 70       	if ((r7 & 1) == 0) goto 16 <bredr_frame_get_empty_txbuf_index+0x5E : 1e16d70 >
 1e16d60:    15 fa 00 41       	b[r4+r1] = r5			  ## bredr_frame.c:1114:33
 1e16d64:    05 18             	goto 10 <bredr_frame_get_empty_txbuf_index+0x5E : 1e16d70 >			  ## bredr_frame.c:1114:33
 1e16d66:    12 70             	r2 = 1
 1e16d68:    00 f3 02 60       	if ((r6 & 1) == 0) goto 4 <bredr_frame_get_empty_txbuf_index+0x5E : 1e16d70 >
 1e16d6c:    10 fa 00 41       	b[r4+r1] = r0			  ## bredr_frame.c:1120:33
 1e16d70:    11 80             	r1 += 1			  ## bredr_frame.c:1111:29
 1e16d72:    25 08             	r5 = r2
 1e16d74:    21 e0 f0 1f       	if (r1 != 2) goto -32 <bredr_frame_get_empty_txbuf_index+0x46 : 1e16d58 >
 1e16d78:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_frame.c:1126:1


link_conn_set_ptt:
 1e16d7a:    b1 50             	r1 = h[r0 + 22] (u)			  ## bredr_link.c:3460:0
 1e16d7c:    91 b1             	r1 |= 8			  ## bredr_frame.h:132:24
 1e16d7e:    b9 50             	h[r0 + 22] = r1			  ## bredr_frame.h:132:24
 1e16d80:    20 00             	rts			  ## bredr_link.c:3462:1


link_conn_set_encrypt:
 1e16d82:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_link.c:3562:0
 1e16d84:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:307:22
 1e16d88:    9b 50             	h[r0 + 18] = r3			  ## bredr_frame.c:307:22
 1e16d8a:    a3 50             	r3 = h[r0 + 20] (u)			  ## bredr_frame.c:308:22
 1e16d8c:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:308:22
 1e16d90:    ab 50             	h[r0 + 20] = r3			  ## bredr_frame.c:308:22
 1e16d92:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_frame.c:309:22
 1e16d94:    89 c1             	r1 = r1 << 6			  ## bredr_frame.c:309:33
 1e16d96:    52 c1             	r2 = r2 << 5			  ## bredr_frame.c:309:49
 1e16d98:    51 b4             	r1 |= r2			  ## bredr_frame.c:309:39
 1e16d9a:    e0 fd 10 23       	r2 = r3 | r1			  ## bredr_frame.c:309:22
 1e16d9e:    9a 50             	h[r0 + 18] = r2			  ## bredr_frame.c:309:22
 1e16da0:    a2 50             	r2 = h[r0 + 20] (u)			  ## bredr_frame.c:310:22
 1e16da2:    51 b4             	r1 |= r2			  ## bredr_frame.c:310:22
 1e16da4:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:310:22
 1e16da6:    20 00             	rts			  ## bredr_link.c:3564:1


slot_timer_disable:
 1e16da8:    34 00             	[--sp] = rets			  ## bredr_slot_timer.c:214:0
 1e16daa:    02 08             	r2 = r0			  ## bredr_slot_timer.c:214:0
 1e16dac:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:216:5
 1e16db0:    02 e1 02 30       	if (r2 < 16) goto 4 <slot_timer_disable+0x10 : 1e16db8 >
 1e16db4:    8f f3 2f 63       	call 2016862 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16db8:    c0 ff ac 00 1c 00 	r0 = 1835180 <uECC_vli_cmp_unsafe+0xB90B0 : 1c00ac >
 1e16dbe:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:219:22
 1e16dc0:    13 70             	r3 = 1			  ## bredr_slot_timer.c:219:26
 1e16dc2:    f8 fd 20 23       	r2 = r3 << r2			  ## bredr_slot_timer.c:219:26
 1e16dc6:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:219:22
 1e16dca:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:219:22
 1e16dcc:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:220:23
 1e16dce:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:220:23
 1e16dd0:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:220:23
 1e16dd2:    30 00             	pc = [sp++]			  ## bredr_slot_timer.c:221:1


slot_timer_put:
 1e16dd4:    74 01             	[--sp] = {rets, r4}			  ## bredr_slot_timer.c:198:0
 1e16dd6:    04 08             	r4 = r0			  ## bredr_slot_timer.c:198:0
 1e16dd8:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:200:5
 1e16ddc:    04 e1 02 30       	if (r4 < 16) goto 4 <slot_timer_put+0x10 : 1e16de4 >
 1e16de0:    8f f3 19 63       	call 2016818 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16de4:    97 f3 da 7f       	call 3080116 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:203:5
 1e16de8:    40 08             	r0 = r4			  ## bredr_slot_timer.c:205:5
 1e16dea:    de 17             	call -68 <slot_timer_disable : 1e16da8 >			  ## bredr_slot_timer.c:205:5
 1e16dec:    c0 ff e8 2f 00 00 	r0 = 12264 <bredr_link_v : 2fe8 >			  ## bredr_slot_timer.c:207:23
 1e16df2:    01 f7 a0 00       	r1 = h[r0 + 160] (u)			  ## bredr_slot_timer.c:206:24
 1e16df6:    12 70             	r2 = 1			  ## bredr_slot_timer.c:206:28
 1e16df8:    02 0d             	r2 <<= r4			  ## bredr_slot_timer.c:206:28
 1e16dfa:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:206:24
 1e16dfe:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:206:24
 1e16e02:    e1 c0             	r1 = r4 << 3			  ## bredr_slot_timer.c:207:23
 1e16e04:    10 09             	r0 += r1			  ## bredr_slot_timer.c:207:23
 1e16e06:    c9 f4 00 09       	[r0 + 36] = 0			  ## bredr_slot_timer.c:207:28
 1e16e0a:    14 01             	{rets, r4} = [sp++]			  ## bredr_slot_timer.c:209:5
 1e16e0c:    d7 f3 c4 7f       	goto 3080072 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:209:5


bredr_link_enable_afh:
 1e16e10:    7b 01             	[--sp] = {rets, r11-r4}			  ## bredr_link.c:4412:0
 1e16e12:    fa 0b             	sp += -12			  ## bredr_link.c:4412:0
 1e16e14:    04 08             	r4 = r0			  ## bredr_link.c:4412:0
 1e16e16:    97 f3 c1 7f       	call 3080066 <local_irq_disable : 106d9c >			  ## bredr_link.c:4415:5
 1e16e1a:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4416:13
 1e16e1c:    00 ff ff 00 03 00 	if (r0 == 255) goto 6 <bredr_link_enable_afh+0x18 : 1e16e28 >			  ## bredr_link.c:4416:13
 1e16e22:    d8 17             	call -80 <slot_timer_put : 1e16dd4 >			  ## bredr_link.c:4417:9
 1e16e24:    f0 7f             	r0 = 255			  ## bredr_link.c:4418:23
 1e16e26:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4418:23
 1e16e28:    97 f3 b6 7f       	call 3080044 <local_irq_enable : 106d98 >			  ## bredr_link.c:4420:5
 1e16e2c:    00 70             	r0 = 0			  ## bredr_link.c:4420:5
 1e16e2e:    10 f9 2b 40       	b[r4 + 43] = r0			  ## bredr_link.c:4422:28
 1e16e32:    08 f6 cc 40       	r8 = [r4 + 204]			  ## bredr_link.c:4423:22
 1e16e36:    90 f5 08 00       	h[sp+8] = r0			  ## bredr_frame.c:2430:5
 1e16e3a:    18 02             	[sp+4] = r0			  ## bredr_frame.c:2430:5
 1e16e3c:    08 02             	[sp] = r0			  ## bredr_frame.c:2430:5
 1e16e3e:    49 fc 21 00       	r9 = r4 + 33			  ## bredr_link.c:4423:36
 1e16e42:    2a 70             	r10 = 2
 1e16e44:    1b 70             	r11 = 1
 1e16e46:    03 fa 00 90       	r3 = b[r9+r0] (u)			  ## bredr_frame.c:2434:16
 1e16e4a:    41 d8             	r1 = r0 >>> 1			  ## bredr_frame.c:2435:18
 1e16e4c:    02 a0             	r2 = sp + 0
 1e16e4e:    44 b4             	r4 = r2 + r1
 1e16e50:    52 98             	r2 = r4 + 5
 1e16e52:    05 70             	r5 = 0
 1e16e54:    f0 fe a0 65       	r6 = r5 % r10 (s)			  ## bredr_frame.c:2438:53
 1e16e58:    69 d8             	r1 = r5 >>> 1			  ## bredr_frame.c:2438:42
 1e16e5a:    61 09             	r1 += r6			  ## bredr_frame.c:2438:48
 1e16e5c:    f8 fd 50 7b       	r7 = r11 << r5			  ## bredr_frame.c:2438:27
 1e16e60:    57 b7             	r7 &= r3			  ## bredr_frame.c:2438:25
 1e16e62:    fa fd 10 17       	r1 = r7 >> r1			  ## bredr_frame.c:2438:35
 1e16e66:    0f c1             	r7 = r1 << 4			  ## bredr_frame.c:2440:29
 1e16e68:    00 f3 01 00       	if ((r0 & 1) == 0) goto 2 <bredr_link_enable_afh+0x5E : 1e16e6e >
 1e16e6c:    71 08             	r1 = r7			  ## bredr_frame.c:2439:17
 1e16e6e:    27 08             	r7 = r2			  ## bredr_frame.c:2442:17
 1e16e70:    01 3c             	if (r6 != 0) goto 2 <bredr_link_enable_afh+0x64 : 1e16e74 >			  ## bredr_frame.c:2442:17
 1e16e72:    47 08             	r7 = r4			  ## bredr_frame.c:2442:17
 1e16e74:    06 6e             	r6 = b[r7 + 0] (u)
 1e16e76:    51 bc             	r1 |= r6
 1e16e78:    15 80             	r5 += 1			  ## bredr_frame.c:2437:29
 1e16e7a:    09 6e             	b[r7 + 0] = r1
 1e16e7c:    85 e0 ea 1f       	if (r5 != 8) goto -44 <bredr_link_enable_afh+0x44 : 1e16e54 >
 1e16e80:    10 80             	r0 += 1			  ## bredr_frame.c:2433:26
 1e16e82:    a0 e0 e0 1f       	if (r0 != 10) goto -64 <bredr_link_enable_afh+0x36 : 1e16e46 >
 1e16e86:    84 fc 4c 01       	r4 = r8 + 332			  ## bredr_frame.c:2495:30
 1e16e8a:    01 70             	r1 = 0			  ## bredr_frame.c:2450:5
 1e16e8c:    02 75             	r2 = 80			  ## bredr_frame.c:2450:5
 1e16e8e:    07 70             	r7 = 0			  ## bredr_frame.c:2450:5
 1e16e90:    40 08             	r0 = r4			  ## bredr_frame.c:2450:5
 1e16e92:    97 f3 2d 80       	call 3080282 <memset : 106ef0 >			  ## bredr_frame.c:2450:5
 1e16e96:    10 70             	r0 = 1
 1e16e98:    01 70             	r1 = 0
 1e16e9a:    72 08             	r2 = r7
 1e16e9c:    03 70             	r3 = 0
 1e16e9e:    05 a0             	r5 = sp + 0
 1e16ea0:    05 fa 00 51       	r5 = b[r5+r1] (u)			  ## bredr_frame.c:2457:17
 1e16ea4:    f8 fd 30 60       	r6 = r0 << r3			  ## bredr_frame.c:2457:24
 1e16ea8:    65 f0 02 00       	if ((r5 & r6) == 0) goto 4 <bredr_link_enable_afh+0xA0 : 1e16eb0 >			  ## bredr_frame.c:2457:24
 1e16eac:    92 f9 01 40       	b[r4 ++= 1] = r2			  ## bredr_frame.c:2458:30
 1e16eb0:    13 80             	r3 += 1			  ## bredr_frame.c:2456:29
 1e16eb2:    22 80             	r2 += 2			  ## bredr_frame.c:2460:23
 1e16eb4:    83 e0 f3 1f       	if (r3 != 8) goto -26 <bredr_link_enable_afh+0x8E : 1e16e9e >			  ## bredr_frame.c:2460:23
 1e16eb8:    02 9f             	r2 = r7 + 16			  ## bredr_frame.c:2456:9
 1e16eba:    17 70             	r7 = 1			  ## bredr_frame.c:2456:9
 1e16ebc:    41 e0 01 00       	if (r1 == 4) goto 2 <bredr_link_enable_afh+0xB2 : 1e16ec2 >
 1e16ec0:    27 08             	r7 = r2			  ## bredr_frame.c:2462:13
 1e16ec2:    11 80             	r1 += 1			  ## bredr_frame.c:2455:35
 1e16ec4:    a1 e0 e9 1f       	if (r1 != 10) goto -46 <bredr_link_enable_afh+0x8A : 1e16e9a >
 1e16ec8:    00 70             	r0 = 0
 1e16eca:    01 70             	r1 = 0
 1e16ecc:    02 fa 00 91       	r2 = b[r9+r1] (u)
 1e16ed0:    03 70             	r3 = 0
 1e16ed2:    14 70             	r4 = 1
 1e16ed4:    f8 fd 30 54       	r5 = r4 << r3			  ## bredr_frame.c:2500:34
 1e16ed8:    52 f1 01 00       	if ((r2 & r5) != 0) goto 2 <bredr_link_enable_afh+0xCE : 1e16ede >			  ## bredr_frame.c:2500:34
 1e16edc:    04 70             	r4 = 0			  ## bredr_frame.c:2500:17
 1e16ede:    13 80             	r3 += 1			  ## bredr_frame.c:2499:29
 1e16ee0:    40 09             	r0 += r4			  ## bredr_frame.c:2500:17
 1e16ee2:    83 e0 f6 1f       	if (r3 != 8) goto -20 <bredr_link_enable_afh+0xC2 : 1e16ed2 >
 1e16ee6:    11 80             	r1 += 1			  ## bredr_frame.c:2498:35
 1e16ee8:    a1 e0 f0 1f       	if (r1 != 10) goto -32 <bredr_link_enable_afh+0xBC : 1e16ecc >
 1e16eec:    90 b3             	r0 |= 128
 1e16eee:    10 f7 34 80       	h[r8 + 52] = r0			  ## bredr_frame.c:2507:23
 1e16ef2:    c0 f5 01 00       	r0 = b[sp+1] (u)			  ## bredr_frame.c:2508:35
 1e16ef6:    c1 f5 00 00       	r1 = b[sp] (u)			  ## bredr_frame.c:2508:25
 1e16efa:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2508:32
 1e16efe:    11 f7 36 80       	h[r8 + 54] = r1			  ## bredr_frame.c:2508:23
 1e16f02:    c0 f5 03 00       	r0 = b[sp+3] (u)			  ## bredr_frame.c:2509:35
 1e16f06:    c1 f5 02 00       	r1 = b[sp+2] (u)			  ## bredr_frame.c:2509:25
 1e16f0a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2509:32
 1e16f0e:    11 f7 38 80       	h[r8 + 56] = r1			  ## bredr_frame.c:2509:23
 1e16f12:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## bredr_frame.c:2510:35
 1e16f16:    c1 f5 04 00       	r1 = b[sp+4] (u)			  ## bredr_frame.c:2510:25
 1e16f1a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2510:32
 1e16f1e:    11 f7 3a 80       	h[r8 + 58] = r1			  ## bredr_frame.c:2510:23
 1e16f22:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## bredr_frame.c:2511:35
 1e16f26:    c1 f5 06 00       	r1 = b[sp+6] (u)			  ## bredr_frame.c:2511:25
 1e16f2a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2511:32
 1e16f2e:    11 f7 3c 80       	h[r8 + 60] = r1			  ## bredr_frame.c:2511:23
 1e16f32:    c0 f5 09 00       	r0 = b[sp+9] (u)			  ## bredr_frame.c:2512:35
 1e16f36:    c1 f5 08 00       	r1 = b[sp+8] (u)			  ## bredr_frame.c:2512:25
 1e16f3a:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2512:32
 1e16f3e:    11 f7 3e 80       	h[r8 + 62] = r1			  ## bredr_frame.c:2512:23
 1e16f42:    06 0a             	sp += 12			  ## bredr_frame.c:2512:23
 1e16f44:    5b 01             	{pc, r11-r4} = [sp++]			  ## bredr_link.c:4440:1


READ_SLOT_CLK:
 1e16f46:    c1 ff b4 00 1c 00 	r1 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## bredr_frame.c:127:0
 1e16f4c:    00 42             	r0 = [r1 + 0]			  ## bredr_frame.c:131:25
 1e16f4e:    12 42             	r2 = [r1 + 4]			  ## bredr_frame.c:132:25
 1e16f50:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:134:31
 1e16f52:    30 f2 fb 1f       	if (r0 != r3) goto -10 <READ_SLOT_CLK+0x6 : 1e16f4c >			  ## bredr_frame.c:134:5
 1e16f56:    11 c4             	r1 = r2 << 16			  ## bredr_frame.c:135:44
 1e16f58:    50 b2             	r0 |= r1			  ## bredr_frame.c:135:27
 1e16f5a:    40 d0             	r0 = r0 >> 1			  ## bredr_frame.c:135:52
 1e16f5c:    20 00             	rts			  ## bredr_frame.c:135:5


bredr_get_link_slot_clk:
 1e16f5e:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:4380:0
 1e16f60:    24 08             	r4 = r2			  ## bredr_link.c:4380:0
 1e16f62:    15 08             	r5 = r1			  ## bredr_link.c:4380:0
 1e16f64:    06 08             	r6 = r0			  ## bredr_link.c:4380:0
 1e16f66:    ef 17             	call -34 <READ_SLOT_CLK : 1e16f46 >			  ## bredr_link.c:4384:17
 1e16f68:    01 f6 cc 60       	r1 = [r6 + 204]			  ## bredr_link.c:4385:61
 1e16f6c:    01 f6 3c 12       	r1 = [r1 + 572]			  ## bredr_frame.c:190:19
 1e16f70:    49 d8             	r1 = r1 >>> 1			  ## bredr_link.c:4385:68
 1e16f72:    02 b2             	r2 = r1 + r0			  ## bredr_link.c:4385:33
 1e16f74:    f2 ef 09 d0       	ifs (r2 <= -1) goto 18 <bredr_get_link_slot_clk+0x2C : 1e16f8a >
 1e16f78:    41 fb f8 2c       	r1 = r2 + 4160749568			  ## bredr_link.c:4390:33
 1e16f7c:    c3 ff ff ff ff 07 	r3 = 134217727 <bank_code_load_addr+0x1E55DB : 1ffffff >			  ## bredr_link.c:4389:27
 1e16f82:    32 f2 04 c0       	ifs (r2 > r3) goto 8 <bredr_get_link_slot_clk+0x30 : 1e16f8e >			  ## bredr_link.c:4389:27
 1e16f86:    21 08             	r1 = r2			  ## bredr_link.c:4389:16
 1e16f88:    02 18             	goto 4 <bredr_get_link_slot_clk+0x30 : 1e16f8e >
 1e16f8a:    41 fb 08 2c       	r1 = r2 + 134217728			  ## bredr_link.c:4388:32
 1e16f8e:    01 2a             	if (r5 == 0) goto 2 <bredr_get_link_slot_clk+0x34 : 1e16f92 >
 1e16f90:    09 4a             	[r5 + 0] = r1			  ## bredr_link.c:4396:15
 1e16f92:    01 28             	if (r4 == 0) goto 2 <bredr_get_link_slot_clk+0x38 : 1e16f96 >
 1e16f94:    08 48             	[r4 + 0] = r0			  ## bredr_link.c:4400:15
 1e16f96:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:4402:1


slot_timer_get:
 1e16f98:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_slot_timer.c:128:0
 1e16f9a:    97 f3 ff 7e       	call 3079678 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:129:5
 1e16f9e:    c0 ff e8 2f 00 00 	r0 = 12264 <bredr_link_v : 2fe8 >			  ## bredr_slot_timer.c:129:5
 1e16fa4:    01 f7 a0 00       	r1 = h[r0 + 160] (u)
 1e16fa8:    04 70             	r4 = 0
 1e16faa:    12 70             	r2 = 1
 1e16fac:    03 70             	r3 = 0
 1e16fae:    f8 fd 30 52       	r5 = r2 << r3			  ## bredr_slot_timer.c:132:36
 1e16fb2:    51 f0 0a 00       	if ((r1 & r5) == 0) goto 20 <slot_timer_get+0x32 : 1e16fca >			  ## bredr_slot_timer.c:132:13
 1e16fb6:    13 80             	r3 += 1			  ## bredr_slot_timer.c:131:30
 1e16fb8:    14 80             	r4 += 1			  ## bredr_slot_timer.c:131:23
 1e16fba:    03 e1 f8 bf       	ifs (r3 < 16) goto -16 <slot_timer_get+0x16 : 1e16fae >			  ## bredr_slot_timer.c:131:23
 1e16fbe:    97 f3 eb 7e       	call 3079638 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:139:5
 1e16fc2:    8f f3 28 62       	call 2016336 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16fc6:    f4 7f             	r4 = 255			  ## cpu.h:148:5
 1e16fc8:    05 18             	goto 10 <slot_timer_get+0x3C : 1e16fd4 >			  ## cpu.h:148:5
 1e16fca:    51 ba             	r1 |= r5			  ## bredr_slot_timer.c:133:32
 1e16fcc:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:133:32
 1e16fd0:    97 f3 e2 7e       	call 3079620 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:134:13
 1e16fd4:    00 05             	r0 = r4.b0 (u)			  ## bredr_slot_timer.c:148:1
 1e16fd6:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_slot_timer.c:148:1


slot_timer_set_finecnt:
 1e16fd8:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:161:0
 1e16fda:    14 08             	r4 = r1			  ## bredr_slot_timer.c:161:0
 1e16fdc:    05 08             	r5 = r0			  ## bredr_slot_timer.c:161:0
 1e16fde:    05 e1 02 30       	if (r5 < 16) goto 4 <slot_timer_set_finecnt+0xE : 1e16fe6 >			  ## bredr_slot_timer.c:161:0
 1e16fe2:    8f f3 18 62       	call 2016304 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e16fe6:    40 02             	r0 = [sp+16]
 1e16fe8:    e9 c0             	r1 = r5 << 3			  ## bredr_slot_timer.c:163:23
 1e16fea:    c6 ff e8 2f 00 00 	r6 = 12264 <bredr_link_v : 2fe8 >			  ## bredr_slot_timer.c:164:23
 1e16ff0:    16 09             	r6 += r1			  ## bredr_slot_timer.c:163:23
 1e16ff2:    8a 4c             	[r6 + 32] = r2			  ## bredr_slot_timer.c:163:28
 1e16ff4:    41 fb f8 3c       	r1 = r3 + 4160749568			  ## bredr_slot_timer.c:64:14
 1e16ff8:    c2 ff ff ff ff 07 	r2 = 134217727 <bank_code_load_addr+0x1E55DB : 1ffffff >			  ## bredr_slot_timer.c:63:14
 1e16ffe:    9c 4c             	[r6 + 36] = r4			  ## bredr_slot_timer.c:164:28
 1e17000:    23 f2 01 c0       	ifs (r3 > r2) goto 2 <slot_timer_set_finecnt+0x2E : 1e17006 >			  ## bredr_slot_timer.c:164:28
 1e17004:    31 08             	r1 = r3			  ## bredr_slot_timer.c:63:9
 1e17006:    22 70             	r2 = 2
 1e17008:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## bredr_slot_timer.c:66:34
 1e1700c:    c2 ff 68 00 1c 00 	r2 = 1835112 <uECC_vli_cmp_unsafe+0xB906C : 1c0068 >			  ## bredr_slot_timer.c:66:5
 1e17012:    b1 f6 00 25       	[r2+r5<<2] = r1			  ## bredr_slot_timer.c:66:27
 1e17016:    20 04             	r0 = r0.l (u)			  ## bredr_slot_timer.c:67:29
 1e17018:    21 fc c0 ff       	r1 = r2 + -64			  ## bredr_slot_timer.c:67:5
 1e1701c:    b0 f6 00 15       	[r1+r5<<2] = r0			  ## bredr_slot_timer.c:67:27
 1e17020:    10 fc 84 00       	r0 = r1 + 132			  ## bredr_slot_timer.c:67:27
 1e17024:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:69:23
 1e17026:    12 70             	r2 = 1			  ## bredr_slot_timer.c:69:26
 1e17028:    42 0d             	r2 <<= r5			  ## bredr_slot_timer.c:69:26
 1e1702a:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:69:23
 1e1702c:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:69:23
 1e1702e:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:70:22
 1e17030:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:70:22
 1e17032:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:70:22
 1e17034:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:166:1


slot_timer_set_ext:
 1e17036:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:169:0
 1e17038:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:169:0
 1e1703a:    c4 ff bc 00 1c 00 	r4 = 1835196 <uECC_vli_cmp_unsafe+0xB90C0 : 1c00bc >			  ## bredr_slot_timer.c:170:19
 1e17040:    05 48             	r5 = [r4 + 0]			  ## bredr_slot_timer.c:170:19
 1e17042:    54 02             	r4 = [sp+20]
 1e17044:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <slot_timer_set_ext+0x1E : 1e17054 >
 1e17048:    55 fc 71 02       	r5 = r5 + 625			  ## bredr_slot_timer.c:172:28
 1e1704c:    06 fb e2 04       	r6 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x26 : 4e2 >			  ## bredr_slot_timer.c:172:35
 1e17050:    f0 fe 60 55       	r5 = r5 % r6 (s)			  ## bredr_slot_timer.c:172:35
 1e17054:    06 fb ff 07       	r6 = 2047 <DRIVER_CODE_TOTAL+0x6D : 7ff >			  ## bredr_slot_timer.c:174:5
 1e17058:    55 bd             	r5 &= r6			  ## bredr_slot_timer.c:174:5
 1e1705a:    43 09             	r3 += r4			  ## bredr_slot_timer.c:174:55
 1e1705c:    0d 02             	[sp] = r5			  ## bredr_slot_timer.c:174:5
 1e1705e:    bc 17             	call -136 <slot_timer_set_finecnt : 1e16fd8 >			  ## bredr_slot_timer.c:174:5
 1e17060:    02 0a             	sp += 4
 1e17062:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:175:1


slot_timer_set:
 1e17064:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_slot_timer.c:178:0
 1e17066:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:178:0
 1e17068:    34 08             	r4 = r3			  ## bredr_slot_timer.c:178:0
 1e1706a:    25 08             	r5 = r2			  ## bredr_slot_timer.c:178:0
 1e1706c:    16 08             	r6 = r1			  ## bredr_slot_timer.c:178:0
 1e1706e:    07 08             	r7 = r0			  ## bredr_slot_timer.c:178:0
 1e17070:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:180:5
 1e17074:    07 e1 02 30       	if (r7 < 16) goto 4 <slot_timer_set+0x18 : 1e1707c >
 1e17078:    8f f3 cd 61       	call 2016154 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1707c:    64 17             	call -312 <READ_SLOT_CLK : 1e16f46 >			  ## bredr_slot_timer.c:183:48
 1e1707e:    08 02             	[sp] = r0			  ## bredr_slot_timer.c:183:5
 1e17080:    70 08             	r0 = r7			  ## bredr_slot_timer.c:183:5
 1e17082:    61 08             	r1 = r6			  ## bredr_slot_timer.c:183:5
 1e17084:    52 08             	r2 = r5			  ## bredr_slot_timer.c:183:5
 1e17086:    43 08             	r3 = r4			  ## bredr_slot_timer.c:183:5
 1e17088:    d6 17             	call -84 <slot_timer_set_ext : 1e17036 >			  ## bredr_slot_timer.c:183:5
 1e1708a:    02 0a             	sp += 4			  ## bredr_slot_timer.c:183:5
 1e1708c:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_slot_timer.c:184:1


bredr_link_set_afh:
 1e1708e:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:4491:0
 1e17090:    fe 0b             	sp += -4			  ## bredr_link.c:4491:0
 1e17092:    36 08             	r6 = r3			  ## bredr_link.c:4491:0
 1e17094:    15 08             	r5 = r1			  ## bredr_link.c:4491:0
 1e17096:    04 08             	r4 = r0			  ## bredr_link.c:4491:0
 1e17098:    31 24             	if (r2 == 0) goto 98 <bredr_link_set_afh+0x6E : 1e170fc >			  ## bredr_link.c:4491:0
 1e1709a:    00 f9 2b 40       	r0 = b[r4 + 43] (u)			  ## bredr_link.c:4501:13
 1e1709e:    02 20             	if (r0 == 0) goto 4 <bredr_link_set_afh+0x16 : 1e170a4 >			  ## bredr_link.c:4501:13
 1e170a0:    40 08             	r0 = r4			  ## bredr_link.c:4503:9
 1e170a2:    b6 16             	call -660 <bredr_link_enable_afh : 1e16e10 >			  ## bredr_link.c:4503:9
 1e170a4:    10 70             	r0 = 1			  ## bredr_link.c:4506:28
 1e170a6:    10 f9 2b 40       	b[r4 + 43] = r0			  ## bredr_link.c:4506:28
 1e170aa:    40 fc 21 00       	r0 = r4 + 33			  ## bredr_link.c:4508:5
 1e170ae:    a2 70             	r2 = 10			  ## bredr_link.c:4508:5
 1e170b0:    61 08             	r1 = r6			  ## bredr_link.c:4508:5
 1e170b2:    97 f3 17 7f       	call 3079726 <memcpy : 106ee4 >			  ## bredr_link.c:4508:5
 1e170b6:    40 08             	r0 = r4			  ## bredr_link.c:4510:17
 1e170b8:    80 f3 da 00       	call 436 <lmp_sniff_and_afh_offset_ali : 1e17270 >			  ## bredr_link.c:4510:17
 1e170bc:    06 08             	r6 = r0			  ## bredr_link.c:4510:17
 1e170be:    01 a0             	r1 = sp + 0
 1e170c0:    02 70             	r2 = 0			  ## bredr_link.c:4407:5
 1e170c2:    40 08             	r0 = r4			  ## bredr_link.c:4407:5
 1e170c4:    4c 17             	call -360 <bredr_get_link_slot_clk : 1e16f5e >			  ## bredr_link.c:4407:5
 1e170c6:    40 bd             	r0 = r6 + r5			  ## bredr_link.c:4510:14
 1e170c8:    01 02             	r1 = [sp]			  ## bredr_link.c:4408:12
 1e170ca:    c2 ff fe ff ff 07 	r2 = 134217726 <bank_code_load_addr+0x1E55DA : 1fffffe >			  ## bredr_link.c:4517:26
 1e170d0:    02 09             	r2 += r0			  ## bredr_link.c:4517:26
 1e170d2:    30 fd f8 2c       	r0 = r2 & 134217727			  ## bredr_link.c:4517:31
 1e170d6:    10 f2 16 20       	if (r0 >= r1) goto 44 <bredr_link_set_afh+0x78 : 1e17106 >
 1e170da:    20 b2             	r0 = r1 - r0			  ## bredr_link.c:4522:30
 1e170dc:    c3 ff fe ff ff 0f 	r3 = 268435454 <bank_code_load_addr+0x1E55DA : 1fffffe >			  ## bredr_link.c:4522:42
 1e170e2:    e2 fd 30 50       	r5 = r0 & r3			  ## bredr_link.c:4522:42
 1e170e6:    c6 ff 01 b0 1e 04 	r6 = 69120001 <uECC_vli_cmp_unsafe+0xE4005 : 1eb001 >			  ## bredr_link.c:4523:13
 1e170ec:    20 70             	r0 = 2			  ## bredr_link.c:4523:13
 1e170ee:    65 f2 0f 30       	if (r5 < r6) goto 30 <bredr_link_set_afh+0x82 : 1e17110 >			  ## bredr_link.c:4523:13
 1e170f2:    00 fd 08 2c       	r0 = r2 | 134217728			  ## bredr_link.c:4524:33
 1e170f6:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4524:46
 1e170f8:    50 b7             	r0 &= r3			  ## bredr_link.c:4524:58
 1e170fa:    0a 18             	goto 20 <bredr_link_set_afh+0x82 : 1e17110 >
 1e170fc:    00 f6 cc 40       	r0 = [r4 + 204]			  ## bredr_link.c:4494:57
 1e17100:    01 70             	r1 = 0			  ## bredr_frame.c:2470:19
 1e17102:    a9 51             	h[r0 + 52] = r1			  ## bredr_frame.c:2470:19
 1e17104:    1b 18             	goto 54 <bredr_link_set_afh+0xAE : 1e1713c >			  ## bredr_frame.c:2470:19
 1e17106:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4520:28
 1e17108:    c1 ff fe ff ff 0f 	r1 = 268435454 <bank_code_load_addr+0x1E55DA : 1fffffe >			  ## bredr_link.c:4520:42
 1e1710e:    50 b3             	r0 &= r1			  ## bredr_link.c:4520:42
 1e17110:    25 70             	r5 = 2			  ## bredr_link.c:4529:9
 1e17112:    20 e0 01 80       	if (r0 > 2) goto 2 <bredr_link_set_afh+0x8A : 1e17118 >			  ## bredr_link.c:4529:9
 1e17116:    20 70             	r0 = 2			  ## bredr_link.c:4529:9
 1e17118:    c1 ff 00 b0 1e 04 	r1 = 69120000 <uECC_vli_cmp_unsafe+0xE4004 : 1eb000 >			  ## bredr_link.c:4533:16
 1e1711e:    10 f2 01 80       	if (r0 > r1) goto 2 <bredr_link_set_afh+0x96 : 1e17124 >
 1e17122:    05 08             	r5 = r0			  ## bredr_link.c:4533:9
 1e17124:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4536:13
 1e17126:    01 ff ff 00 02 00 	if (r0 != 255) goto 4 <bredr_link_set_afh+0xA2 : 1e17130 >			  ## bredr_link.c:4536:13
 1e1712c:    35 17             	call -406 <slot_timer_get : 1e16f98 >			  ## bredr_link.c:4537:25
 1e1712e:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4537:23
 1e17130:    c1 ff 10 6e e1 01 	r1 = 31550992 <bredr_link_enable_afh : 1e16e10 >			  ## bredr_link.c:4539:5
 1e17136:    42 08             	r2 = r4			  ## bredr_link.c:4539:5
 1e17138:    53 08             	r3 = r5			  ## bredr_link.c:4539:5
 1e1713a:    94 17             	call -216 <slot_timer_set : 1e17064 >			  ## bredr_link.c:4539:5
 1e1713c:    02 0a             	sp += 4
 1e1713e:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:4550:1


__write_reg_txinfo:
 1e17140:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_frame.c:112:0
 1e17142:    44 02             	r4 = [sp+16]			  ## bredr_frame.c:112:0
 1e17144:    35 02             	r5 = [sp+12]			  ## bredr_frame.c:112:0
 1e17146:    0e 22             	if (r1 == 0) goto 28 <__write_reg_txinfo+0x24 : 1e17164 >			  ## bredr_frame.c:112:0
 1e17148:    2a 51             	h[r0 + 36] = r2			  ## bredr_frame.c:119:25
 1e1714a:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:120:37
 1e1714c:    39 51             	h[r0 + 38] = r1			  ## bredr_frame.c:120:25
 1e1714e:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:121:32
 1e17150:    51 ba             	r1 |= r5			  ## bredr_frame.c:121:38
 1e17152:    11 b1             	r1 |= 4			  ## bredr_frame.c:121:27
 1e17154:    f9 50             	h[r0 + 30] = r1			  ## bredr_frame.c:121:25
 1e17156:    a1 50             	r1 = h[r0 + 20] (u)			  ## bredr_frame.c:122:47
 1e17158:    31 fd 1f 19       	r1 = r1 & 4294967264			  ## bredr_frame.c:122:57
 1e1715c:    51 b8             	r1 |= r4			  ## bredr_frame.c:122:37
 1e1715e:    11 b2             	r1 |= 16			  ## bredr_frame.c:122:68
 1e17160:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:122:26
 1e17162:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1
 1e17164:    0a 51             	h[r0 + 32] = r2			  ## bredr_frame.c:114:25
 1e17166:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:115:37
 1e17168:    19 51             	h[r0 + 34] = r1			  ## bredr_frame.c:115:25
 1e1716a:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:116:32
 1e1716c:    51 ba             	r1 |= r5			  ## bredr_frame.c:116:38
 1e1716e:    11 b1             	r1 |= 4			  ## bredr_frame.c:116:27
 1e17170:    e9 50             	h[r0 + 28] = r1			  ## bredr_frame.c:116:25
 1e17172:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:117:36
 1e17174:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## bredr_frame.c:117:46
 1e17178:    51 b8             	r1 |= r4			  ## bredr_frame.c:117:57
 1e1717a:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:117:26
 1e1717c:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1


__clean_reg_txempty:
 1e1717e:    40 85             	r0 += 84			  ## bredr_frame.c:345:0
 1e17180:    04 22             	if (r1 == 0) goto 8 <__clean_reg_txempty+0xC : 1e1718a >			  ## bredr_frame.c:345:0
 1e17182:    11 50             	r1 = h[r0 + 2] (u)			  ## bredr_frame.c:349:27
 1e17184:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:349:27
 1e17186:    19 50             	h[r0 + 2] = r1			  ## bredr_frame.c:349:27
 1e17188:    20 00             	rts			  ## bredr_frame.c:351:1
 1e1718a:    01 50             	r1 = h[r0 + 0] (u)			  ## bredr_frame.c:347:27
 1e1718c:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:347:27
 1e1718e:    09 50             	h[r0 + 0] = r1			  ## bredr_frame.c:347:27
 1e17190:    20 00             	rts			  ## bredr_frame.c:351:1


link_conn_tx_bulk_avaiable:
 1e17192:    79 01             	[--sp] = {rets, r9-r4}			  ## bredr_link.c:2555:0
 1e17194:    15 08             	r5 = r1			  ## bredr_link.c:2555:0
 1e17196:    04 08             	r4 = r0			  ## bredr_link.c:2555:0
 1e17198:    97 f3 00 7e       	call 3079168 <local_irq_disable : 106d9c >			  ## bredr_link.c:2558:5
 1e1719c:    c0 ff e8 2f 00 00 	r0 = 12264 <bredr_link_v : 2fe8 >			  ## bredr_link.c:2558:5
 1e171a2:    01 40             	r1 = [r0 + 0]			  ## bredr_link.c:2558:5
 1e171a4:    01 f2 26 00       	if (r1 == r0) goto 76 <link_conn_tx_bulk_avaiable+0x62 : 1e171f4 >
 1e171a8:    41 f2 04 00       	if (r1 == r4) goto 8 <link_conn_tx_bulk_avaiable+0x22 : 1e171b4 >
 1e171ac:    01 42             	r1 = [r1 + 0]
 1e171ae:    01 f2 fb 1f       	if (r1 != r0) goto -10 <link_conn_tx_bulk_avaiable+0x16 : 1e171a8 >
 1e171b2:    20 18             	goto 64 <link_conn_tx_bulk_avaiable+0x62 : 1e171f4 >
 1e171b4:    49 fc cc 00       	r9 = r4 + 204
 1e171b8:    08 f6 00 90       	r8 = [r9 + 0]			  ## bredr_link.c:2564:19
 1e171bc:    08 e0 1a 00       	if (r8 == 0) goto 52 <link_conn_tx_bulk_avaiable+0x62 : 1e171f4 >
 1e171c0:    4e 2a             	if (r5 == 0) goto 156 <link_conn_tx_bulk_avaiable+0xCC : 1e1725e >
 1e171c2:    60 6a             	r0 = b[r5 + 6] (u)			  ## bredr_link.c:2566:25
 1e171c4:    30 e0 1d 10       	if (r0 != 3) goto 58 <link_conn_tx_bulk_avaiable+0x70 : 1e17202 >			  ## bredr_link.c:2566:21
 1e171c8:    00 f6 30 90       	r0 = [r9 + 48]			  ## bredr_dut.c:549:14
 1e171cc:    3e 20             	if (r0 == 0) goto 124 <link_conn_tx_bulk_avaiable+0xB8 : 1e1724a >			  ## bredr_dut.c:549:14
 1e171ce:    97 f3 e5 7d       	call 3079114 <local_irq_disable : 106d9c >			  ## bredr_dut.c:554:5
 1e171d2:    00 f6 24 90       	r0 = [r9 + 36]			  ## bredr_dut.c:530:9
 1e171d6:    1d 20             	if (r0 == 0) goto 58 <link_conn_tx_bulk_avaiable+0x80 : 1e17212 >			  ## bredr_dut.c:530:9
 1e171d8:    bf f3 98 6c       	call -75472 <bredr_tx_bulk_free : 1e04b0c >			  ## bredr_dut.c:531:9
 1e171dc:    00 f6 28 90       	r0 = [r9 + 40]			  ## bredr_dut.c:532:13
 1e171e0:    01 f6 24 90       	r1 = [r9 + 36]			  ## bredr_dut.c:532:31
 1e171e4:    10 f2 03 10       	if (r0 != r1) goto 6 <link_conn_tx_bulk_avaiable+0x5C : 1e171ee >			  ## bredr_dut.c:532:31
 1e171e8:    00 70             	r0 = 0
 1e171ea:    10 f6 28 90       	[r9 + 40] = r0			  ## bredr_dut.c:533:28
 1e171ee:    c9 f4 00 99       	[r9 + 36] = 0			  ## bredr_dut.c:535:24
 1e171f2:    11 18             	goto 34 <link_conn_tx_bulk_avaiable+0x84 : 1e17216 >			  ## bredr_dut.c:535:24
 1e171f4:    03 2a             	if (r5 == 0) goto 6 <link_conn_tx_bulk_avaiable+0x6A : 1e171fc >
 1e171f6:    50 08             	r0 = r5			  ## bredr_link.c:2591:9
 1e171f8:    bf f3 88 6c       	call -75504 <bredr_tx_bulk_free : 1e04b0c >			  ## bredr_link.c:2591:9
 1e171fc:    19 01             	{rets, r9-r4} = [sp++]			  ## bredr_link.c:2595:5
 1e171fe:    d7 f3 cb 7d       	goto 3079062 <local_irq_enable : 106d98 >			  ## bredr_link.c:2595:5
 1e17202:    00 f6 18 90       	r0 = [r9 + 24]			  ## list.h:154:28
 1e17206:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2579:40
 1e17208:    11 f6 18 90       	[r9 + 24] = r1			  ## list.h:137:16
 1e1720c:    92 fc 14 00       	r2 = r9 + 20			  ## bredr_link.c:2579:52
 1e17210:    23 18             	goto 70 <link_conn_tx_bulk_avaiable+0xC6 : 1e17258 >
 1e17212:    00 f6 28 90       	r0 = [r9 + 40]
 1e17216:    02 20             	if (r0 == 0) goto 4 <link_conn_tx_bulk_avaiable+0x8A : 1e1721c >
 1e17218:    bf f3 78 6c       	call -75536 <bredr_tx_bulk_free : 1e04b0c >			  ## bredr_dut.c:538:9
 1e1721c:    ca f4 00 99       	[r9 + 40] = 0			  ## bredr_dut.c:540:20
 1e17220:    00 f6 14 90       	r0 = [r9 + 20]			  ## bredr_dut.c:542:5
 1e17224:    96 fc 14 00       	r6 = r9 + 20			  ## bredr_dut.c:542:5
 1e17228:    60 f2 07 00       	if (r0 == r6) goto 14 <link_conn_tx_bulk_avaiable+0xA8 : 1e1723a >			  ## bredr_dut.c:542:5
 1e1722c:    47 f6 f0 0f       	r7 = [r0 ++= -16]
 1e17230:    bf f3 6c 6c       	call -75560 <bredr_tx_bulk_free : 1e04b0c >			  ## bredr_dut.c:543:9
 1e17234:    70 08             	r0 = r7
 1e17236:    67 f2 f9 1f       	if (r7 != r6) goto -14 <link_conn_tx_bulk_avaiable+0x9A : 1e1722c >
 1e1723a:    01 70             	r1 = 0			  ## bredr_dut.c:557:5
 1e1723c:    80 08             	r0 = r8			  ## bredr_dut.c:557:5
 1e1723e:    5f 15             	call -1346 <__write_reg_packet_type : 1e16cfe >			  ## bredr_dut.c:557:5
 1e17240:    11 70             	r1 = 1			  ## bredr_dut.c:558:5
 1e17242:    80 08             	r0 = r8			  ## bredr_dut.c:558:5
 1e17244:    5c 15             	call -1352 <__write_reg_packet_type : 1e16cfe >			  ## bredr_dut.c:558:5
 1e17246:    97 f3 a7 7d       	call 3078990 <local_irq_enable : 106d98 >			  ## bredr_dut.c:559:5
 1e1724a:    00 f6 10 90       	r0 = [r9 + 16]			  ## list.h:154:28
 1e1724e:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2572:40
 1e17250:    11 f6 10 90       	[r9 + 16] = r1			  ## list.h:137:16
 1e17254:    92 fc 0c 00       	r2 = r9 + 12			  ## bredr_link.c:2572:52
 1e17258:    4a 4a             	[r5 + 16] = r2			  ## list.h:138:16
 1e1725a:    58 4a             	[r5 + 20] = r0			  ## list.h:139:16
 1e1725c:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e1725e:    00 f6 30 90       	r0 = [r9 + 48]			  ## bredr_link.c:2582:22
 1e17262:    cc 31             	if (r0 != 0) goto -104 <link_conn_tx_bulk_avaiable+0x6A : 1e171fc >			  ## bredr_link.c:2582:22
 1e17264:    40 08             	r0 = r4			  ## bredr_link.c:2583:17
 1e17266:    8f f3 5b 69       	call 2020022 <connection_tx_handler : 4520 >			  ## bredr_link.c:2583:17
 1e1726a:    c8 1f             	goto -112 <link_conn_tx_bulk_avaiable+0x6A : 1e171fc >			  ## bredr_link.c:2583:17


sys_event_recode:
 1e1726c:    00 70             	r0 = 0			  ## tws_event.c:67:0
 1e1726e:    20 00             	rts			  ## tws_event.c:117:1


lmp_sniff_and_afh_offset_ali:
 1e17270:    74 01             	[--sp] = {rets, r4}			  ## lmp_sniff.c:1314:0
 1e17272:    8f f3 1f 69       	call 2019902 <lmp_conn_for_link : 44b4 >			  ## lmp_sniff.c:1315:35
 1e17276:    04 08             	r4 = r0			  ## lmp_sniff.c:1315:35
 1e17278:    03 70             	r3 = 0
 1e1727a:    bf f3 46 fb       	call -2420 <lmp_get_esco_conn_statu : 1e1690a >			  ## lmp_sniff.c:1318:18
 1e1727e:    0a 28             	if (r4 == 0) goto 20 <lmp_sniff_and_afh_offset_ali+0x24 : 1e17294 >			  ## lmp_sniff.c:1318:18
 1e17280:    09 30             	if (r0 != 0) goto 18 <lmp_sniff_and_afh_offset_ali+0x24 : 1e17294 >
 1e17282:    00 f9 9f 40       	r0 = b[r4 + 159] (u)			  ## lmp_sniff.c:1319:35
 1e17286:    20 e0 05 10       	if (r0 != 2) goto 10 <lmp_sniff_and_afh_offset_ali+0x24 : 1e17294 >			  ## lmp_sniff.c:1319:35
 1e1728a:    00 f6 c8 40       	r0 = [r4 + 200]			  ## lmp_sniff.c:1291:37
 1e1728e:    02 20             	if (r0 == 0) goto 4 <lmp_sniff_and_afh_offset_ali+0x24 : 1e17294 >
 1e17290:    80 50             	r0 = h[r0 + 16] (u)			  ## lmp_sniff.c:1298:22
 1e17292:    43 c0             	r3 = r0 << 1			  ## lmp_sniff.c:1298:37
 1e17294:    30 08             	r0 = r3			  ## lmp_sniff.c:1325:5
 1e17296:    54 01             	{pc, r4} = [sp++]			  ## lmp_sniff.c:1325:5


update_code_start:
 1e17298:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_frame.c:2936:0
 1e1729a:    c5 ff 20 2b 00 00 	r5 = 11040 <btctler_bss_start : 2b20 >			  ## bredr_frame.c:2942:37
 1e172a0:    06 f9 41 50       	r6 = b[r5 + 65] (u)			  ## bredr_frame.c:2943:37
 1e172a4:    a0 f6 00 56       	r0 = [r5+r6<<2]			  ## bredr_frame.c:2943:37
 1e172a8:    bf f3 f0 fc       	call -1568 <bredr_bd_frame_disable : 1e16c8c >			  ## bredr_frame.c:2945:5
 1e172ac:    c4 ff 60 eb 00 00 	r4 = 60256 <UPDATA_BREDR_BASE_BEG : eb60 >			  ## bredr_frame.c:2949:5
 1e172b2:    01 70             	r1 = 0			  ## bredr_frame.c:2947:5
 1e172b4:    02 fb 84 03       	r2 = 900 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x7C : 384 >			  ## bredr_frame.c:2947:5
 1e172b8:    40 08             	r0 = r4			  ## bredr_frame.c:2947:5
 1e172ba:    97 f3 19 7e       	call 3079218 <memset : 106ef0 >			  ## bredr_frame.c:2947:5
 1e172be:    40 fc 20 00       	r0 = r4 + 32			  ## bredr_frame.c:2948:5
 1e172c2:    51 fc 40 00       	r1 = r5 + 64			  ## bredr_frame.c:2942:37
 1e172c6:    42 71             	r2 = 20			  ## bredr_frame.c:2948:5
 1e172c8:    97 f3 0c 7e       	call 3079192 <memcpy : 106ee4 >			  ## bredr_frame.c:2948:5
 1e172cc:    a1 f6 00 56       	r1 = [r5+r6<<2]			  ## bredr_frame.c:2949:42
 1e172d0:    45 fc 38 00       	r5 = r4 + 56			  ## bredr_frame.c:2949:5
 1e172d4:    02 fb 48 02       	r2 = 584 <BTCTLER_CONTROLLER_BSS_SIZE+0x88 : 248 >			  ## bredr_frame.c:2949:5
 1e172d8:    50 08             	r0 = r5			  ## bredr_frame.c:2949:5
 1e172da:    97 f3 03 7e       	call 3079174 <memcpy : 106ee4 >			  ## bredr_frame.c:2949:5
 1e172de:    b5 f6 00 46       	[r4+r6<<2] = r5			  ## bredr_frame.c:2950:35
 1e172e2:    c0 ff 44 fc 1c 00 	r0 = 1899588 <uECC_vli_cmp_unsafe+0xC8C48 : 1cfc44 >			  ## bredr_frame.c:2952:21
 1e172e8:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2952:21
 1e172ea:    c0 ff c0 00 1c 00 	r0 = 1835200 <uECC_vli_cmp_unsafe+0xB90C4 : 1c00c0 >			  ## bredr_frame.c:2952:21
 1e172f0:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2953:22
 1e172f2:    21 d4             	r1 = r4 >> 16			  ## bredr_frame.c:2954:22
 1e172f4:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2954:22
 1e172f6:    50 08             	r0 = r5			  ## bredr_frame.c:2959:5
 1e172f8:    bf f3 da fc       	call -1612 <bredr_bd_frame_enable : 1e16cb0 >			  ## bredr_frame.c:2959:5
 1e172fc:    c0 ff 04 41 1e 00 	r0 = 1982724 <uECC_vli_cmp_unsafe+0xDD108 : 1e4104 >			  ## bredr_frame.c:2961:24
 1e17302:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_frame.c:2961:24
 1e17308:    09 40             	[r0 + 0] = r1			  ## bredr_frame.c:2961:24
 1e1730a:    10 70             	r0 = 1			  ## bredr_frame.c:2974:5
 1e1730c:    16 01             	{rets, r6-r4} = [sp++]			  ## bredr_frame.c:2974:5
 1e1730e:    ff f3 5d 47       	goto -94534 <__BT_UPDATA_JUMP : 1e001cc >			  ## bredr_frame.c:2974:5
 1e17312:    00 00             	nop


lmp_ch_update_op:
 1e17314:    6c 82             	r12 += 38
 1e17316:    e1 01             	[--sp] = {psr, reti}
 1e17318:    58 81             	r8 += 21
 1e1731a:    e1 01             	[--sp] = {psr, reti}
 1e1731c:    f0 80             	r0 += 15
 1e1731e:    e1 01             	[--sp] = {psr, reti}
 1e17320:    cc 80             	r12 += 12
 1e17322:    e1 01             	[--sp] = {psr, reti}
 1e17324:    04 82             	r4 += 32
 1e17326:    e1 01             	[--sp] = {psr, reti}
 1e17328:    a6 81             	r6 += 26
 1e1732a:    e1 01             	[--sp] = {psr, reti}
 1e1732c:    a6 82             	r6 += 42
 1e1732e:    e1 01             	[--sp] = {psr, reti}


ble_ll_ch_update_op:
 1e17330:    a4 83             	r4 += 58
 1e17332:    e1 01             	[--sp] = {psr, reti}
 1e17334:    38 83             	r8 += 51
 1e17336:    e1 01             	[--sp] = {psr, reti}
 1e17338:    ce 82             	r14 += 44
 1e1733a:    e1 01             	[--sp] = {psr, reti}
 1e1733c:    aa 82             	r10 += 42
 1e1733e:    e1 01             	[--sp] = {psr, reti}
 1e17340:    70 83             	r0 += 55
 1e17342:    e1 01             	[--sp] = {psr, reti}
 1e17344:    5c 83             	r12 += 53
 1e17346:    e1 01             	[--sp] = {psr, reti}
 1e17348:    9e 83             	r14 += 57
 1e1734a:    e1 01             	[--sp] = {psr, reti}


update_loader_match_tab:
 1e1734c:    05 5a             	r5 = h[r5 + 0] (u)
 1e1734e:    65 64             	r5 = b[r2 + 6] (u)
 1e17350:    72 5f             	r2 = h[r7 + 46] (u)
 1e17352:    6f 74             	r15 = 70
 1e17354:    61 32             	if (r1 != 0) goto 194 <JL_FLASH2_BIN_FILE_NAME+0x8 : 1e17418 >
 1e17356:    2e 62             	b[r1 + 2] = r6
 1e17358:    69 6e             	b[r7 + 6] = r1
 1e1735a:    00 00             	nop
 1e1735c:    00 00             	nop
 1e1735e:    01 5a             	r1 = h[r5 + 0] (u)
 1e17360:    73 64             	r3 = b[r2 + 7] (u)
 1e17362:    5f 75             	r15 = 85
 1e17364:    70 64             	r0 = b[r2 + 7] (u)
 1e17366:    61 74             	r1 = 70
 1e17368:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init : 1e17434 >
 1e1736a:    2e 62             	b[r1 + 2] = r6
 1e1736c:    69 6e             	b[r7 + 6] = r1
 1e1736e:    00 00             	nop
 1e17370:    02 5a             	r2 = h[r5 + 0] (u)
 1e17372:    73 64             	r3 = b[r2 + 7] (u)
 1e17374:    5f 75             	r15 = 85
 1e17376:    70 64             	r0 = b[r2 + 7] (u)
 1e17378:    61 74             	r1 = 70
 1e1737a:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init+0x12 : 1e17446 >
 1e1737c:    2e 62             	b[r1 + 2] = r6
 1e1737e:    69 6e             	b[r7 + 6] = r1
 1e17380:    00 00             	nop
 1e17382:    06 5a             	r6 = h[r5 + 0] (u)
 1e17384:    62 6c             	r2 = b[r6 + 6] (u)
 1e17386:    65 5f             	r5 = h[r7 + 44] (u)
 1e17388:    61 70             	r1 = 6
 1e1738a:    70 5f             	r0 = h[r7 + 46] (u)
 1e1738c:    6f 74             	r15 = 70
 1e1738e:    61 2e             	if (r7 == 0) goto 194 <update_part_tab_init+0x1E : 1e17452 >
 1e17390:    62 69             	r2 = b[r4 + 22] (u)
 1e17392:    6e 00             	cli r14
 1e17394:    07 5a             	r7 = h[r5 + 0] (u)
 1e17396:    73 70             	r3 = 7
 1e17398:    70 5f             	r0 = h[r7 + 46] (u)
 1e1739a:    61 70             	r1 = 6
 1e1739c:    70 5f             	r0 = h[r7 + 46] (u)
 1e1739e:    6f 74             	r15 = 70
 1e173a0:    61 2e             	if (r7 == 0) goto 194 <update_part_tab_init+0x30 : 1e17464 >
 1e173a2:    62 69             	r2 = b[r4 + 22] (u)
 1e173a4:    6e 00             	cli r14
 1e173a6:    00 5a             	r0 = h[r5 + 0] (u)
 1e173a8:    75 73             	r5 = 55
 1e173aa:    62 5f             	r2 = h[r7 + 44] (u)
 1e173ac:    75 70             	r5 = 7
 1e173ae:    64 61             	r4 = b[r0 + 22] (u)
 1e173b0:    74 65             	r4 = b[r2 + 23] (u)
 1e173b2:    32 2e             	if (r7 == 0) goto 100 <JL_FLASH2_BIN_FILE_NAME+0x8 : 1e17418 >
 1e173b4:    62 69             	r2 = b[r4 + 22] (u)
 1e173b6:    6e 00             	cli r14
 1e173b8:    09 5a             	h[r5 + 0] = r1
 1e173ba:    62 6c             	r2 = b[r6 + 6] (u)
 1e173bc:    65 5f             	r5 = h[r7 + 44] (u)
 1e173be:    6f 74             	r15 = 70
 1e173c0:    61 2e             	if (r7 == 0) goto 194 <JL_BT_CFG_FILE_NAME+0x8 : 1e17484 >
 1e173c2:    62 69             	r2 = b[r4 + 22] (u)
 1e173c4:    6e 00             	cli r14
 1e173c6:    00 00             	nop
 1e173c8:    00 00             	nop
 1e173ca:    04 5a             	r4 = h[r5 + 0] (u)
 1e173cc:    75 61             	r5 = b[r0 + 23] (u)
 1e173ce:    72 74             	r2 = 71
 1e173d0:    5f 75             	r15 = 85
 1e173d2:    73 65             	r3 = b[r2 + 23] (u)
 1e173d4:    72 2e             	if (r7 == 0) goto 228 <decode_data_by_user_key+0x14 : 1e174ba >
 1e173d6:    62 69             	r2 = b[r4 + 22] (u)
 1e173d8:    6e 00             	cli r14
 1e173da:    00 00             	nop
 1e173dc:    0b 5a             	h[r5 + 0] = r3
 1e173de:    6e 6f             	b[r7 + 22] = r6
 1e173e0:    72 5f             	r2 = h[r7 + 46] (u)
 1e173e2:    6f 74             	r15 = 70
 1e173e4:    61 2e             	if (r7 == 0) goto 194 <decode_data_by_user_key+0x2 : 1e174a8 >
 1e173e6:    62 69             	r2 = b[r4 + 22] (u)
 1e173e8:    6e 00             	cli r14
 1e173ea:    00 00             	nop
 1e173ec:    00 00             	nop


JL_RESERVED_VM_FILE_NAME:
 1e173ee:    56 4d             	r6 = [r6 + 84]
 1e173f0:    00 61             	r0 = b[r0 + 16] (u)


JL_APP_CODE0_FILE_NAME:
 1e173f1:    61 70             	r1 = 6
 1e173f3:    70 5f             	r0 = h[r7 + 46] (u)
 1e173f5:    64 69             	r4 = b[r4 + 22] (u)
 1e173f7:    72 5f             	r2 = h[r7 + 46] (u)
 1e173f9:    68 65             	b[r2 + 22] = r0
 1e173fb:    61 64             	r1 = b[r2 + 6] (u)
 1e173fd:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH_BIN_FILE_NAME:
 1e173fe:    66 6c             	r6 = b[r6 + 6] (u)
 1e17400:    61 73             	r1 = 54
 1e17402:    68 2e             	if (r7 == 0) goto 208 <decode_data_by_user_key+0x2E : 1e174d4 >
 1e17404:    62 69             	r2 = b[r4 + 22] (u)
 1e17406:    6e 00             	cli r14


JL_OTA_LOADER_FILE_NAME:
 1e17408:    6f 74             	r15 = 70
 1e1740a:    61 2e             	if (r7 == 0) goto 194 <decode_data_by_user_key+0x28 : 1e174ce >
 1e1740c:    62 69             	r2 = b[r4 + 22] (u)
 1e1740e:    6e 00             	cli r14


JL_FLASH2_BIN_FILE_NAME:
 1e17410:    66 6c             	r6 = b[r6 + 6] (u)
 1e17412:    61 73             	r1 = 54
 1e17414:    68 32             	if (r1 != 0) goto 208 <update_resource_release+0xC : 1e174e6 >
 1e17416:    2e 62             	b[r1 + 2] = r6
 1e17418:    69 6e             	b[r7 + 6] = r1
 1e1741a:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH3_BIN_FILE_NAME:
 1e1741b:    66 6c             	r6 = b[r6 + 6] (u)
 1e1741d:    61 73             	r1 = 54
 1e1741f:    68 33             	if (r1 != 0) goto -304 <update_code_start+0x59 : 1e172f1 >
 1e17421:    2e 62             	b[r1 + 2] = r6
 1e17423:    69 6e             	b[r7 + 6] = r1
 1e17425:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH4_BIN_FILE_NAME:
 1e17426:    66 6c             	r6 = b[r6 + 6] (u)
 1e17428:    61 73             	r1 = 54
 1e1742a:    68 34             	if (r2 != 0) goto 208 <active_update_task+0x4 : 1e174fc >
 1e1742c:    2e 62             	b[r1 + 2] = r6
 1e1742e:    69 6e             	b[r7 + 6] = r1
 1e17430:    00 00             	nop
 1e17432:    00 00             	nop


update_part_tab_init:
 1e17434:    7c 74             	r12 = 71
 1e17436:    e1 01             	[--sp] = {psr, reti}
 1e17438:    01 00             	nop
 1e1743a:    00 00             	nop
 1e1743c:    00 00             	nop
 1e1743e:    00 00             	nop
 1e17440:    00 00             	nop
 1e17442:    00 00             	nop
 1e17444:    74 84             	r4 += 71
 1e17446:    e1 01             	[--sp] = {psr, reti}
 1e17448:    0c 00             	syscall
 1e1744a:    00 00             	nop
 1e1744c:    fe 73             	r14 = 63
 1e1744e:    e1 01             	[--sp] = {psr, reti}
 1e17450:    ff ff ff ff 00 00 	pc = 65535
 1e17456:    00 00             	nop
 1e17458:    00 00             	nop
 1e1745a:    00 00             	nop
 1e1745c:    00 00             	nop
 1e1745e:    00 00             	nop
 1e17460:    00 00             	nop
 1e17462:    00 00             	nop
 1e17464:    10 74             	r0 = 65
 1e17466:    e1 01             	[--sp] = {psr, reti}
 1e17468:    ff ff ff ff 00 00 	pc = 65535
 1e1746e:    00 00             	nop
 1e17470:    00 00             	nop
 1e17472:    00 00             	nop
 1e17474:    00 00             	nop
 1e17476:    00 00             	nop
 1e17478:    00 00             	nop
 1e1747a:    00 00             	nop


JL_BT_CFG_FILE_NAME:
 1e1747c:    63 66             	r3 = b[r3 + 6] (u)
 1e1747e:    67 5f             	r7 = h[r7 + 44] (u)
 1e17480:    74 6f             	r4 = b[r7 + 23] (u)
 1e17482:    6f 6c             	b[r6 + 6] = r7
 1e17484:    2e 62             	b[r1 + 2] = r6
 1e17486:    69 6e             	b[r7 + 6] = r1
 1e17488:    00 00             	nop


update_stop:
 1e1748a:    75 01             	[--sp] = {rets, r5, r4}			  ## download_loop.c:450:0
 1e1748c:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:450:0
 1e17492:    01 f6 2c 51       	r1 = [r5 + 300]			  ## download_loop.c:453:17
 1e17496:    04 08             	r4 = r0			  ## download_loop.c:453:17
 1e17498:    05 22             	if (r1 == 0) goto 10 <update_stop+0x1A : 1e174a4 >			  ## download_loop.c:453:17
 1e1749a:    41 42             	r1 = [r1 + 16]			  ## download_loop.c:459:22
 1e1749c:    01 22             	if (r1 == 0) goto 2 <update_stop+0x16 : 1e174a0 >			  ## download_loop.c:459:22
 1e1749e:    81 00             	call r1			  ## download_loop.c:460:9
 1e174a0:    14 f9 22 50       	b[r5 + 34] = r4			  ## download_loop.c:463:23
 1e174a4:    55 01             	{pc, r5, r4} = [sp++]


decode_data_by_user_key:
 1e174a6:    79 01             	[--sp] = {rets, r9-r4}			  ## encrypt_api.c:97:0
 1e174a8:    34 08             	r4 = r3			  ## encrypt_api.c:97:0
 1e174aa:    15 08             	r5 = r1			  ## encrypt_api.c:97:0
 1e174ac:    08 08             	r8 = r0			  ## encrypt_api.c:97:0
 1e174ae:    14 24             	if (r2 == 0) goto 40 <decode_data_by_user_key+0x32 : 1e174d8 >			  ## encrypt_api.c:97:0
 1e174b0:    09 f5 1c 00       	r9 = [sp+28]			  ## encrypt_api.c:97:0
 1e174b4:    a6 04             	r6 = r2.l (u)			  ## encrypt_api.c:102:18
 1e174b6:    97 08             	r7 = r9			  ## encrypt_api.c:102:17
 1e174b8:    76 f2 01 80       	if (r6 > r7) goto 2 <decode_data_by_user_key+0x18 : 1e174be >			  ## encrypt_api.c:102:17
 1e174bc:    67 08             	r7 = r6			  ## encrypt_api.c:102:17
 1e174be:    a0 d0             	r0 = r4 >> 2			  ## encrypt_api.c:103:30
 1e174c0:    e1 fd 80 00       	r0 = r0 ^ r8			  ## encrypt_api.c:103:35
 1e174c4:    20 04             	r0 = r0.l (u)			  ## encrypt_api.c:105:9
 1e174c6:    51 08             	r1 = r5			  ## encrypt_api.c:105:9
 1e174c8:    72 08             	r2 = r7			  ## encrypt_api.c:105:9
 1e174ca:    bf f3 f5 4c       	call -91670 <doe : 1e00eb8 >			  ## encrypt_api.c:105:9
 1e174ce:    74 09             	r4 += r7			  ## encrypt_api.c:110:18
 1e174d0:    e2 bd             	r2 = r6 - r7			  ## encrypt_api.c:111:14
 1e174d2:    a0 04             	r0 = r2.l (u)			  ## encrypt_api.c:101:5
 1e174d4:    75 09             	r5 += r7			  ## encrypt_api.c:109:14
 1e174d6:    ee 31             	if (r0 != 0) goto -36 <decode_data_by_user_key+0xE : 1e174b4 >			  ## encrypt_api.c:109:14
 1e174d8:    59 01             	{pc, r9-r4} = [sp++]


update_resource_release:
 1e174da:    74 01             	[--sp] = {rets, r4}			  ## download_loop.c:1557:0
 1e174dc:    c4 ff 74 31 00 00 	r4 = 12660 <update_bss_start : 3174 >			  ## download_loop.c:1557:0
 1e174e2:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1560:9
 1e174e4:    08 20             	if (r0 == 0) goto 16 <update_resource_release+0x1C : 1e174f6 >			  ## download_loop.c:1560:9
 1e174e6:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1561:21
 1e174e8:    04 22             	if (r1 == 0) goto 8 <update_resource_release+0x18 : 1e174f2 >			  ## download_loop.c:1561:21
 1e174ea:    10 08             	r0 = r1			  ## download_loop.c:1562:13
 1e174ec:    bf f3 5d a2       	call -47942 <free : 1e0b9aa >			  ## download_loop.c:1562:13
 1e174f0:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1562:13
 1e174f2:    bf f3 5a a2       	call -47948 <free : 1e0b9aa >			  ## download_loop.c:1564:9
 1e174f6:    54 01             	{pc, r4} = [sp++]


active_update_task:
 1e174f8:    7f 01             	[--sp] = {rets, r15-r4}			  ## update_main.c:86:0
 1e174fa:    1c 0b             	sp += -456			  ## update_main.c:86:0
 1e174fc:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## update_main.c:86:0
 1e17502:    01 f6 28 d1       	r1 = [r13 + 296]			  ## update_main.c:89:5
 1e17506:    0b 08             	r11 = r0			  ## update_main.c:89:5
 1e17508:    10 70             	r0 = 1			  ## update_main.c:89:22
 1e1750a:    10 f9 64 10       	b[r1 + 100] = r0			  ## update_main.c:89:22
 1e1750e:    03 f6 60 b0       	r3 = [r11 + 96]			  ## update_main.c:94:15
 1e17512:    bc fc 50 00       	r12 = r11 + 80			  ## update_main.c:92:39
 1e17516:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x28 : 1e17520 >			  ## update_main.c:92:39
 1e17518:    11 70             	r1 = 1			  ## update_main.c:95:9
 1e1751a:    02 70             	r2 = 0			  ## update_main.c:95:9
 1e1751c:    c0 08             	r0 = r12			  ## update_main.c:95:9
 1e1751e:    83 00             	call r3			  ## update_main.c:95:9
 1e17520:    00 f6 58 b0       	r0 = [r11 + 88]			  ## update_main.c:58:15
 1e17524:    0b 20             	if (r0 == 0) goto 22 <active_update_task+0x44 : 1e1753c >			  ## update_main.c:58:15
 1e17526:    10 f6 2c d1       	[r13 + 300] = r0			  ## download_loop.c:2489:17
 1e1752a:    02 40             	r2 = [r0 + 0]			  ## update_main.c:60:29
 1e1752c:    07 24             	if (r2 == 0) goto 14 <active_update_task+0x44 : 1e1753c >			  ## update_main.c:60:29
 1e1752e:    c0 ff 06 84 e1 01 	r0 = 31556614 <update_thread_resume : 1e18406 >			  ## update_main.c:61:13
 1e17534:    c1 ff 14 84 e1 01 	r1 = 31556628 <update_thread_sleep : 1e18414 >			  ## update_main.c:61:13
 1e1753a:    82 00             	call r2			  ## update_main.c:61:13
 1e1753c:    05 f6 50 b0       	r5 = [r11 + 80]			  ## update_main.c:105:19
 1e17540:    00 fb 07 5a       	r0 = 23047 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEF1 : 5a07 >			  ## update_main.c:105:24
 1e17544:    05 f2 04 10       	if (r5 != r0) goto 8 <active_update_task+0x58 : 1e17550 >			  ## update_main.c:105:24
 1e17548:    05 fb 06 5a       	r5 = 23046 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEF0 : 5a06 >
 1e1754c:    15 f6 50 b0       	[r11 + 80] = r5			  ## update_main.c:106:24
 1e17550:    00 70             	r0 = 0
 1e17552:    10 f9 22 d0       	b[r13 + 34] = r0			  ## download_loop.c:1530:23
 1e17556:    00 fb 44 02       	r0 = 580 <BTCTLER_CONTROLLER_BSS_SIZE+0x84 : 244 >			  ## download_loop.c:1532:31
 1e1755a:    bf f3 21 a2       	call -48062 <malloc : 1e0b9a0 >			  ## download_loop.c:1532:31
 1e1755e:    04 08             	r4 = r0			  ## download_loop.c:1532:31
 1e17560:    ce ff 74 31 00 00 	r14 = 12660 <update_bss_start : 3174 >			  ## download_loop.c:1532:31
 1e17566:    14 f6 00 e0       	[r14 + 0] = r4			  ## download_loop.c:1532:12
 1e1756a:    3d 28             	if (r4 == 0) goto 122 <active_update_task+0xEE : 1e175e6 >			  ## download_loop.c:1532:12
 1e1756c:    01 70             	r1 = 0			  ## download_loop.c:1540:5
 1e1756e:    02 fb 44 02       	r2 = 580 <BTCTLER_CONTROLLER_BSS_SIZE+0x84 : 244 >			  ## download_loop.c:1540:5
 1e17572:    06 70             	r6 = 0			  ## download_loop.c:1540:5
 1e17574:    97 f3 bc 7c       	call 3078520 <memset : 106ef0 >			  ## download_loop.c:1540:5
 1e17578:    40 fc f8 01       	r0 = r4 + 504			  ## download_loop.c:1541:5
 1e1757c:    c1 ff 34 74 e1 01 	r1 = 31552564 <update_part_tab_init : 1e17434 >			  ## download_loop.c:1541:5
 1e17582:    82 74             	r2 = 72			  ## download_loop.c:1541:5
 1e17584:    97 f3 ae 7c       	call 3078492 <memcpy : 106ee4 >			  ## download_loop.c:1541:5
 1e17588:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >			  ## download_loop.c:1541:5
 1e1758c:    28 58             	h[r4 + 4] = r0			  ## download_loop.c:1543:28
 1e1758e:    bf f3 07 a2       	call -48114 <malloc : 1e0b9a0 >			  ## download_loop.c:1544:32
 1e17592:    08 48             	[r4 + 0] = r0			  ## download_loop.c:1544:24
 1e17594:    28 20             	if (r0 == 0) goto 80 <active_update_task+0xEE : 1e175e6 >			  ## download_loop.c:1544:24
 1e17596:    8d 02             	[sp+32] = r5
 1e17598:    16 f6 30 d1       	[r13 + 304] = r6			  ## flash_fs_api.c:68:20
 1e1759c:    80 a3             	r0 = sp + 56			  ## flash_fs_api.c:68:20
 1e1759e:    09 fd 02 09       	r9 = r0 | 2
 1e175a2:    c4 ff 5c f2 e0 01 	r4 = 31519324 <boot_addr_tab : 1e0f25c >
 1e175a8:    0a 72             	r10 = 32
 1e175aa:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e175b0:    47 f6 04 40       	r7 = [r4 ++= 4]			  ## flash_fs_api.c:70:42
 1e175b4:    85 a3             	r5 = sp + 56			  ## flash_fs_api.c:70:42
 1e175b6:    02 72             	r2 = 32			  ## flash_fs_api.c:70:9
 1e175b8:    50 08             	r0 = r5			  ## flash_fs_api.c:70:9
 1e175ba:    71 08             	r1 = r7			  ## flash_fs_api.c:70:9
 1e175bc:    bf f3 7a 4c       	call -91916 <norflash_origin_read : 1e00eb4 >			  ## flash_fs_api.c:70:9
 1e175c0:    02 72             	r2 = 32			  ## flash_fs_api.c:71:9
 1e175c2:    03 70             	r3 = 0			  ## flash_fs_api.c:71:9
 1e175c4:    1a f5 00 00       	[sp] = r10			  ## flash_fs_api.c:71:9
 1e175c8:    80 08             	r0 = r8			  ## flash_fs_api.c:71:9
 1e175ca:    51 08             	r1 = r5			  ## flash_fs_api.c:71:9
 1e175cc:    6c 17             	call -296 <decode_data_by_user_key : 1e174a6 >			  ## flash_fs_api.c:71:9
 1e175ce:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e175d0:    90 08             	r0 = r9			  ## flash_fs_api.c:44:20
 1e175d2:    bf f3 93 4c       	call -91866 <CRC16 : 1e00efc >			  ## flash_fs_api.c:44:20
 1e175d6:    81 f5 38 00       	r1 = h[sp+56] (u)			  ## flash_fs_api.c:45:15
 1e175da:    01 f2 27 00       	if (r1 == r0) goto 78 <active_update_task+0x134 : 1e1762c >			  ## flash_fs_api.c:45:15
 1e175de:    16 80             	r6 += 1			  ## flash_fs_api.c:69:72
 1e175e0:    16 e0 e6 9f       	if (r6 <= 1) goto -52 <active_update_task+0xB8 : 1e175b0 >			  ## flash_fs_api.c:69:72
 1e175e4:    25 18             	goto 74 <active_update_task+0x138 : 1e17630 >			  ## flash_fs_api.c:69:72
 1e175e6:    20 79             	r0 = 146			  ## download_loop.c:1748:9
 1e175e8:    50 17             	call -352 <update_stop : 1e1748a >			  ## download_loop.c:1748:9
 1e175ea:    f6 07             	r6 = -1
 1e175ec:    76 17             	call -276 <update_resource_release : 1e174da >			  ## download_loop.c:1910:5
 1e175ee:    00 f9 22 d0       	r0 = b[r13 + 34] (u)			  ## download_loop.c:488:12
 1e175f2:    9e 02             	[sp+36] = r6			  ## update_main.c:116:34
 1e175f4:    d0 f5 28 00       	b[sp+40] = r0			  ## update_main.c:116:34
 1e175f8:    00 f6 58 b0       	r0 = [r11 + 88]			  ## update_main.c:69:15
 1e175fc:    04 20             	if (r0 == 0) goto 8 <active_update_task+0x10E : 1e17606 >			  ## update_main.c:69:15
 1e175fe:    61 40             	r1 = [r0 + 24]			  ## update_main.c:69:43
 1e17600:    02 22             	if (r1 == 0) goto 4 <active_update_task+0x10E : 1e17606 >			  ## update_main.c:69:43
 1e17602:    c0 08             	r0 = r12			  ## update_main.c:70:9
 1e17604:    81 00             	call r1			  ## update_main.c:70:9
 1e17606:    03 f6 60 b0       	r3 = [r11 + 96]			  ## update_main.c:127:15
 1e1760a:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x11C : 1e17614 >			  ## update_main.c:127:15
 1e1760c:    42 a2             	r2 = sp + 36
 1e1760e:    31 70             	r1 = 3			  ## update_main.c:128:9
 1e17610:    c0 08             	r0 = r12			  ## update_main.c:128:9
 1e17612:    83 00             	call r3			  ## update_main.c:128:9
 1e17614:    01 f6 28 d1       	r1 = [r13 + 296]			  ## update_main.c:131:5
 1e17618:    00 70             	r0 = 0			  ## update_main.c:131:22
 1e1761a:    c1 85             	r1 += 92			  ## update_main.c:131:22
 1e1761c:    88 62             	b[r1 + 8] = r0			  ## update_main.c:131:22
 1e1761e:    02 62             	r2 = b[r1 + 0] (u)			  ## update_main.c:133:22
 1e17620:    03 24             	if (r2 == 0) goto 6 <active_update_task+0x130 : 1e17628 >			  ## update_main.c:133:22
 1e17622:    08 62             	b[r1 + 0] = r0			  ## update_main.c:134:30
 1e17624:    bf f3 65 ab       	call -43318 <task_kill : 1e0ccf2 >			  ## update_main.c:135:9
 1e17628:    e4 0a             	sp += 456
 1e1762a:    5f 01             	{pc, r15-r4} = [sp++]			  ## update_main.c:137:1
 1e1762c:    17 f6 30 d1       	[r13 + 304] = r7			  ## flash_fs_api.c:73:28
 1e17630:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:433:17
 1e17634:    f6 07             	r6 = -1			  ## download_loop.c:433:17
 1e17636:    da 21             	if (r0 == 0) goto -76 <active_update_task+0xF4 : 1e175ec >			  ## download_loop.c:433:17
 1e17638:    10 40             	r0 = [r0 + 4]			  ## download_loop.c:439:23
 1e1763a:    80 00             	call r0			  ## download_loop.c:439:10
 1e1763c:    d7 21             	if (r0 == 0) goto -82 <active_update_task+0xF4 : 1e175ec >
 1e1763e:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:660:13
 1e17642:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:1762:24
 1e17646:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:660:26
 1e17648:    04 42             	r4 = [r1 + 0]			  ## download_loop.c:1762:32
 1e1764a:    00 70             	r0 = 0			  ## download_loop.c:660:13
 1e1764c:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:660:13
 1e17650:    41 08             	r1 = r4			  ## download_loop.c:660:13
 1e17652:    83 00             	call r3			  ## download_loop.c:660:13
 1e17654:    1c f5 1c 00       	[sp+28] = r12			  ## download_loop.c:661:9
 1e17658:    80 f2 01 02       	if (r0 == r8) goto 1026 <active_update_task+0x566 : 1e17a5e >			  ## download_loop.c:661:9
 1e1765c:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:666:13
 1e17660:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:666:26
 1e17662:    41 fc 00 02       	r1 = r4 + 512			  ## download_loop.c:666:46
 1e17666:    00 70             	r0 = 0			  ## download_loop.c:666:13
 1e17668:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:666:13
 1e1766c:    83 00             	call r3			  ## download_loop.c:666:13
 1e1766e:    80 f2 f6 01       	if (r0 == r8) goto 1004 <active_update_task+0x566 : 1e17a5e >
 1e17672:    00 74             	r0 = 64
 1e17674:    8f 08             	r15 = r8
 1e17676:    02 74             	r2 = 64			  ## download_loop.c:680:5
 1e17678:    03 70             	r3 = 0			  ## download_loop.c:680:5
 1e1767a:    08 02             	[sp] = r0			  ## download_loop.c:680:5
 1e1767c:    f0 08             	r0 = r15			  ## download_loop.c:680:5
 1e1767e:    41 08             	r1 = r4			  ## download_loop.c:680:5
 1e17680:    12 17             	call -476 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:680:5
 1e17682:    20 98             	r0 = r4 + 2			  ## download_loop.c:686:43
 1e17684:    e1 73             	r1 = 62			  ## download_loop.c:307:12
 1e17686:    bf f3 39 4c       	call -92046 <CRC16 : 1e00efc >			  ## download_loop.c:307:12
 1e1768a:    01 58             	r1 = h[r4 + 0] (u)			  ## download_loop.c:687:24
 1e1768c:    01 f2 e7 11       	if (r1 != r0) goto 974 <active_update_task+0x566 : 1e17a5e >			  ## download_loop.c:687:24
 1e17690:    08 f7 08 40       	r8 = h[r4 + 8] (u)			  ## download_loop.c:704:36
 1e17694:    47 fc 40 00       	r7 = r4 + 64			  ## download_loop.c:683:73
 1e17698:    08 e0 11 00       	if (r8 == 0) goto 34 <active_update_task+0x1C6 : 1e176be >
 1e1769c:    00 70             	r0 = 0
 1e1769e:    15 70             	r5 = 1
 1e176a0:    06 75             	r6 = 80
 1e176a2:    f9 08             	r9 = r15
 1e176a4:    71 08             	r1 = r7			  ## download_loop.c:710:33
 1e176a6:    80 fe 60 10       	r1 += r0 * r6			  ## download_loop.c:710:33
 1e176aa:    02 75             	r2 = 80			  ## download_loop.c:709:9
 1e176ac:    03 70             	r3 = 0			  ## download_loop.c:709:9
 1e176ae:    0e 02             	[sp] = r6			  ## download_loop.c:709:9
 1e176b0:    90 08             	r0 = r9			  ## download_loop.c:709:9
 1e176b2:    f9 16             	call -526 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:709:9
 1e176b4:    41 58             	r1 = h[r4 + 8] (u)			  ## download_loop.c:708:21
 1e176b6:    40 05             	r0 = r5.b0 (u)			  ## download_loop.c:708:17
 1e176b8:    15 80             	r5 += 1			  ## download_loop.c:708:5
 1e176ba:    10 f2 f3 3f       	if (r0 < r1) goto -26 <active_update_task+0x1AC : 1e176a4 >			  ## download_loop.c:708:5
 1e176be:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:496:5
 1e176c2:    0c 70             	r12 = 0			  ## download_loop.c:496:5
 1e176c4:    01 fc 40 02       	r1 = r0 + 576			  ## download_loop.c:496:5
 1e176c8:    49 02             	[sp+16] = r1			  ## download_loop.c:496:5
 1e176ca:    1c f9 00 10       	b[r1 + 0] = r12			  ## download_loop.c:496:35
 1e176ce:    1c f5 64 00       	[sp+100] = r12			  ## download_loop.c:497:29
 1e176d2:    1c f5 60 00       	[sp+96] = r12			  ## download_loop.c:497:29
 1e176d6:    1c f5 5c 00       	[sp+92] = r12			  ## download_loop.c:497:29
 1e176da:    1c f5 58 00       	[sp+88] = r12			  ## download_loop.c:497:29
 1e176de:    60 ff ff 89 c6 00 	if ((r8 & 255) == 0) goto 396 <active_update_task+0x378 : 1e17870 >
 1e176e4:    e4 fd 00 48       	r4 = r8.b0 (u)			  ## download_loop.c:741:69
 1e176e8:    0d fc 04 02       	r13 = r0 + 516			  ## download_loop.c:500:5
 1e176ec:    01 fc 58 01       	r1 = r0 + 344			  ## download_loop.c:500:5
 1e176f0:    19 02             	[sp+4] = r1			  ## download_loop.c:500:5
 1e176f2:    01 fc 08 01       	r1 = r0 + 264			  ## download_loop.c:500:5
 1e176f6:    29 02             	[sp+8] = r1			  ## download_loop.c:500:5
 1e176f8:    01 fc b8 00       	r1 = r0 + 184			  ## download_loop.c:500:5
 1e176fc:    39 02             	[sp+12] = r1			  ## download_loop.c:500:5
 1e176fe:    81 91             	r1 = r0 + 24			  ## download_loop.c:500:5
 1e17700:    59 02             	[sp+20] = r1			  ## download_loop.c:500:5
 1e17702:    80 86             	r0 += 104			  ## download_loop.c:500:5
 1e17704:    68 02             	[sp+24] = r0			  ## download_loop.c:500:5
 1e17706:    05 70             	r5 = 0			  ## download_loop.c:500:5
 1e17708:    0a f6 0c 70       	r10 = [r7 + 12]			  ## download_loop.c:502:127
 1e1770c:    79 fc 40 00       	r9 = r7 + 64			  ## download_loop.c:502:64
 1e17710:    06 70             	r6 = 0
 1e17712:    0a e0 23 00       	if (r10 == 0) goto 70 <active_update_task+0x264 : 1e1775c >
 1e17716:    0e f6 08 70       	r14 = [r7 + 8]			  ## download_loop.c:502:102
 1e1771a:    d0 08             	r0 = r13
 1e1771c:    0f fc f4 ff       	r15 = r0 + -12
 1e17720:    08 f6 00 f0       	r8 = [r15 + 0]			  ## download_loop.c:320:60
 1e17724:    80 08             	r0 = r8			  ## download_loop.c:320:71
 1e17726:    97 f3 e9 7b       	call 3078098 <strlen : 106efc >			  ## download_loop.c:320:71
 1e1772a:    02 08             	r2 = r0			  ## download_loop.c:320:71
 1e1772c:    90 08             	r0 = r9			  ## download_loop.c:320:18
 1e1772e:    81 08             	r1 = r8			  ## download_loop.c:320:18
 1e17730:    97 f3 dc 7b       	call 3078072 <memcmp : 106eec >			  ## download_loop.c:320:18
 1e17734:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x24C : 1e17744 >			  ## download_loop.c:320:18
 1e17736:    16 80             	r6 += 1			  ## download_loop.c:319:92
 1e17738:    f0 fc 24 00       	r0 = r15 + 36			  ## download_loop.c:319:19
 1e1773c:    26 e0 ee 9f       	if (r6 <= 2) goto -36 <active_update_task+0x224 : 1e1771c >			  ## download_loop.c:319:19
 1e17740:    06 70             	r6 = 0
 1e17742:    06 18             	goto 12 <active_update_task+0x258 : 1e17750 >
 1e17744:    06 f6 04 f0       	r6 = [r15 + 4]			  ## download_loop.c:321:47
 1e17748:    1e f6 08 f0       	[r15 + 8] = r14			  ## download_loop.c:322:51
 1e1774c:    1a f6 0c f0       	[r15 + 12] = r10			  ## download_loop.c:323:44
 1e17750:    ce ff 74 31 00 00 	r14 = 12660 <update_bss_start : 3174 >
 1e17756:    cf ff ff ff 00 00 	r15 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1775c:    a2 70             	r2 = 10			  ## download_loop.c:503:18
 1e1775e:    90 08             	r0 = r9			  ## download_loop.c:503:18
 1e17760:    c1 ff fe 73 e1 01 	r1 = 31552510 <JL_FLASH_BIN_FILE_NAME : 1e173fe >			  ## download_loop.c:503:18
 1e17766:    97 f3 c1 7b       	call 3078018 <memcmp : 106eec >			  ## download_loop.c:503:18
 1e1776a:    27 20             	if (r0 == 0) goto 78 <active_update_task+0x2C2 : 1e177ba >			  ## download_loop.c:503:18
 1e1776c:    82 70             	r2 = 8			  ## download_loop.c:507:25
 1e1776e:    90 08             	r0 = r9			  ## download_loop.c:507:25
 1e17770:    c1 ff 08 74 e1 01 	r1 = 31552520 <JL_OTA_LOADER_FILE_NAME : 1e17408 >			  ## download_loop.c:507:25
 1e17776:    97 f3 b9 7b       	call 3078002 <memcmp : 106eec >			  ## download_loop.c:507:25
 1e1777a:    22 20             	if (r0 == 0) goto 68 <active_update_task+0x2C8 : 1e177c0 >			  ## download_loop.c:507:25
 1e1777c:    b2 70             	r2 = 11			  ## download_loop.c:513:23
 1e1777e:    90 08             	r0 = r9			  ## download_loop.c:513:23
 1e17780:    c1 ff 10 74 e1 01 	r1 = 31552528 <JL_FLASH2_BIN_FILE_NAME : 1e17410 >			  ## download_loop.c:513:23
 1e17786:    97 f3 b1 7b       	call 3077986 <memcmp : 106eec >			  ## download_loop.c:513:23
 1e1778a:    1d 20             	if (r0 == 0) goto 58 <active_update_task+0x2CE : 1e177c6 >			  ## download_loop.c:513:23
 1e1778c:    b2 70             	r2 = 11			  ## download_loop.c:518:25
 1e1778e:    90 08             	r0 = r9			  ## download_loop.c:518:25
 1e17790:    c1 ff 1b 74 e1 01 	r1 = 31552539 <JL_FLASH3_BIN_FILE_NAME : 1e1741b >			  ## download_loop.c:518:25
 1e17796:    97 f3 a9 7b       	call 3077970 <memcmp : 106eec >			  ## download_loop.c:518:25
 1e1779a:    18 20             	if (r0 == 0) goto 48 <active_update_task+0x2D4 : 1e177cc >			  ## download_loop.c:518:25
 1e1779c:    b2 70             	r2 = 11			  ## download_loop.c:522:25
 1e1779e:    90 08             	r0 = r9			  ## download_loop.c:522:25
 1e177a0:    c1 ff 26 74 e1 01 	r1 = 31552550 <JL_FLASH4_BIN_FILE_NAME : 1e17426 >			  ## download_loop.c:522:25
 1e177a6:    97 f3 a1 7b       	call 3077954 <memcmp : 106eec >			  ## download_loop.c:522:25
 1e177aa:    13 20             	if (r0 == 0) goto 38 <active_update_task+0x2DA : 1e177d2 >			  ## download_loop.c:522:25
 1e177ac:    40 02             	r0 = [sp+16]			  ## download_loop.c:528:30
 1e177ae:    00 60             	r0 = b[r0 + 0] (u)			  ## download_loop.c:528:30
 1e177b0:    15 30             	if (r0 != 0) goto 42 <active_update_task+0x2E4 : 1e177dc >			  ## download_loop.c:528:30
 1e177b2:    40 02             	r0 = [sp+16]			  ## download_loop.c:529:47
 1e177b4:    01 70             	r1 = 0			  ## download_loop.c:529:47
 1e177b6:    09 60             	b[r0 + 0] = r1			  ## download_loop.c:529:47
 1e177b8:    11 18             	goto 34 <active_update_task+0x2E4 : 1e177dc >			  ## download_loop.c:529:47
 1e177ba:    02 75             	r2 = 80			  ## download_loop.c:505:13
 1e177bc:    60 02             	r0 = [sp+24]			  ## download_loop.c:505:13
 1e177be:    0b 18             	goto 22 <active_update_task+0x2DE : 1e177d6 >			  ## download_loop.c:505:13
 1e177c0:    02 75             	r2 = 80			  ## download_loop.c:509:13
 1e177c2:    50 02             	r0 = [sp+20]			  ## download_loop.c:509:13
 1e177c4:    08 18             	goto 16 <active_update_task+0x2DE : 1e177d6 >			  ## download_loop.c:509:13
 1e177c6:    02 75             	r2 = 80			  ## download_loop.c:515:13
 1e177c8:    30 02             	r0 = [sp+12]			  ## download_loop.c:515:13
 1e177ca:    05 18             	goto 10 <active_update_task+0x2DE : 1e177d6 >			  ## download_loop.c:515:13
 1e177cc:    02 75             	r2 = 80			  ## download_loop.c:520:13
 1e177ce:    20 02             	r0 = [sp+8]			  ## download_loop.c:520:13
 1e177d0:    02 18             	goto 4 <active_update_task+0x2DE : 1e177d6 >			  ## download_loop.c:520:13
 1e177d2:    02 75             	r2 = 80			  ## download_loop.c:524:13
 1e177d4:    10 02             	r0 = [sp+4]			  ## download_loop.c:524:13
 1e177d6:    71 08             	r1 = r7
 1e177d8:    97 f3 84 7b       	call 3077896 <memcpy : 106ee4 >
 1e177dc:    5c bc             	r12 |= r6			  ## download_loop.c:502:26
 1e177de:    15 80             	r5 += 1			  ## download_loop.c:500:32
 1e177e0:    60 05             	r0 = r5.l (u)			  ## download_loop.c:500:32
 1e177e2:    07 85             	r7 += 80			  ## download_loop.c:539:23
 1e177e4:    40 f2 90 1f       	if (r0 != r4) goto -224 <active_update_task+0x210 : 1e17708 >
 1e177e8:    40 02             	r0 = [sp+16]
 1e177ea:    00 60             	r0 = b[r0 + 0] (u)
 1e177ec:    13 20             	if (r0 == 0) goto 38 <active_update_task+0x31C : 1e17814 >
 1e177ee:    05 06             	r5 = -32
 1e177f0:    00 4a             	r0 = [r5 + 0]			  ## download_loop.c:543:64
 1e177f2:    c1 ff 1f f2 e0 01 	r1 = 31519263 <bluetooth_base_uuid+0x215 : 1e0f21f >			  ## download_loop.c:369:14
 1e177f8:    72 70             	r2 = 7			  ## download_loop.c:369:14
 1e177fa:    97 f3 77 7b       	call 3077870 <memcmp : 106eec >			  ## download_loop.c:369:14
 1e177fe:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e17804:    0b 20             	if (r0 == 0) goto 22 <active_update_task+0x324 : 1e1781c >
 1e17806:    12 4a             	r2 = [r5 + 4]			  ## download_loop.c:392:51
 1e17808:    33 24             	if (r2 == 0) goto 102 <active_update_task+0x378 : 1e17870 >			  ## download_loop.c:392:51
 1e1780a:    01 f6 2c d1       	r1 = [r13 + 300]			  ## download_loop.c:544:38
 1e1780e:    80 a5             	r0 = sp + 88			  ## download_loop.c:544:38
 1e17810:    82 00             	call r2			  ## download_loop.c:393:15
 1e17812:    2e 18             	goto 92 <active_update_task+0x378 : 1e17870 >			  ## download_loop.c:393:15
 1e17814:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e1781a:    2a 18             	goto 84 <active_update_task+0x378 : 1e17870 >
 1e1781c:    00 fb 00 02       	r0 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:336:20
 1e17820:    bf f3 be a0       	call -48772 <malloc : 1e0b9a0 >			  ## download_loop.c:336:20
 1e17824:    04 08             	r4 = r0			  ## download_loop.c:336:20
 1e17826:    ef 29             	if (r4 == 0) goto -34 <active_update_task+0x30E : 1e17806 >
 1e17828:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:339:13
 1e1782c:    10 20             	if (r0 == 0) goto 32 <active_update_task+0x356 : 1e1784e >			  ## download_loop.c:339:13
 1e1782e:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:339:41
 1e17830:    0e 26             	if (r3 == 0) goto 28 <active_update_task+0x356 : 1e1784e >			  ## download_loop.c:339:41
 1e17832:    20 40             	r0 = [r0 + 8]			  ## download_loop.c:339:64
 1e17834:    0c 20             	if (r0 == 0) goto 24 <active_update_task+0x356 : 1e1784e >			  ## download_loop.c:339:64
 1e17836:    00 70             	r0 = 0			  ## download_loop.c:340:13
 1e17838:    01 70             	r1 = 0			  ## download_loop.c:340:13
 1e1783a:    02 70             	r2 = 0			  ## download_loop.c:340:13
 1e1783c:    83 00             	call r3			  ## download_loop.c:340:13
 1e1783e:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:341:13
 1e17842:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:341:26
 1e17844:    00 70             	r0 = 0			  ## download_loop.c:341:13
 1e17846:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:341:13
 1e1784a:    41 08             	r1 = r4			  ## download_loop.c:341:13
 1e1784c:    83 00             	call r3			  ## download_loop.c:341:13
 1e1784e:    40 fc 22 00       	r0 = r4 + 34			  ## download_loop.c:347:45
 1e17852:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e17854:    bf f3 52 4b       	call -92508 <CRC16 : 1e00efc >			  ## download_loop.c:307:12
 1e17858:    90 48             	r0 = [r4 + 36]			  ## download_loop.c:353:43
 1e1785a:    68 03             	[sp+88] = r0			  ## download_loop.c:353:20
 1e1785c:    a0 48             	r0 = [r4 + 40]			  ## download_loop.c:354:29
 1e1785e:    78 03             	[sp+92] = r0			  ## download_loop.c:354:19
 1e17860:    10 59             	r0 = h[r4 + 34] (u)			  ## download_loop.c:355:29
 1e17862:    90 f5 60 00       	h[sp+96] = r0			  ## download_loop.c:355:19
 1e17866:    f0 48             	r0 = [r4 + 60]			  ## download_loop.c:356:34
 1e17868:    98 03             	[sp+100] = r0			  ## download_loop.c:356:24
 1e1786a:    40 08             	r0 = r4			  ## download_loop.c:360:9
 1e1786c:    bf f3 9d a0       	call -48838 <free : 1e0b9aa >			  ## download_loop.c:360:9
 1e17870:    05 f6 00 e0       	r5 = [r14 + 0]			  ## download_loop.c:744:38
 1e17874:    02 f6 30 d1       	r2 = [r13 + 304]			  ## flash_fs_api.c:88:12
 1e17878:    84 a7             	r4 = sp + 120			  ## flash_fs_api.c:88:12
 1e1787a:    01 72             	r1 = 32			  ## flash_fs_api.c:588:5
 1e1787c:    40 08             	r0 = r4			  ## flash_fs_api.c:588:5
 1e1787e:    bf f3 59 4b       	call -92494 <norflash_read : 1e00f34 >			  ## flash_fs_api.c:588:5
 1e17882:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:44:42
 1e17886:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e17888:    bf f3 38 4b       	call -92560 <CRC16 : 1e00efc >			  ## flash_fs_api.c:44:20
 1e1788c:    81 f5 78 00       	r1 = h[sp+120] (u)			  ## flash_fs_api.c:45:15
 1e17890:    01 f2 08 10       	if (r1 != r0) goto 16 <active_update_task+0x3AC : 1e178a4 >
 1e17894:    c0 f5 85 00       	r0 = b[sp+133] (u)			  ## flash_fs_api.c:596:42
 1e17898:    68 6a             	b[r5 + 6] = r0			  ## flash_fs_api.c:596:29
 1e1789a:    c1 f5 84 00       	r1 = b[sp+132] (u)			  ## flash_fs_api.c:599:40
 1e1789e:    79 6a             	b[r5 + 7] = r1			  ## flash_fs_api.c:599:27
 1e178a0:    10 f9 23 d0       	b[r13 + 35] = r0			  ## flash_fs_api.c:602:26
 1e178a4:    04 f6 00 e0       	r4 = [r14 + 0]			  ## download_loop.c:745:40
 1e178a8:    00 f6 30 d1       	r0 = [r13 + 304]			  ## flash_fs_api.c:88:12
 1e178ac:    02 fc 60 00       	r2 = r0 + 96			  ## flash_fs_api.c:613:77
 1e178b0:    80 a9             	r0 = sp + 152
 1e178b2:    01 72             	r1 = 32			  ## flash_fs_api.c:618:5
 1e178b4:    05 72             	r5 = 32			  ## flash_fs_api.c:618:5
 1e178b6:    bf f3 3d 4b       	call -92550 <norflash_read : 1e00f34 >			  ## flash_fs_api.c:618:5
 1e178ba:    00 f5 9c 00       	r0 = [sp+156]			  ## flash_fs_api.c:623:42
 1e178be:    28 48             	[r4 + 8] = r0			  ## flash_fs_api.c:623:25
 1e178c0:    fc ef 5b 00       	if (r12 == -1) goto 182 <active_update_task+0x482 : 1e1797a >			  ## download_loop.c:748:9
 1e178c4:    04 70             	r4 = 0
 1e178c6:    15 70             	r5 = 1
 1e178c8:    06 70             	r6 = 0
 1e178ca:    f8 fd 60 05       	r0 = r5 << r6			  ## download_loop.c:1472:32
 1e178ce:    c0 f0 0a 00       	if ((r0 & r12) == 0) goto 20 <active_update_task+0x3EE : 1e178e6 >			  ## download_loop.c:1472:32
 1e178d2:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1473:17
 1e178d6:    40 09             	r0 += r4			  ## download_loop.c:1473:44
 1e178d8:    01 f6 08 02       	r1 = [r0 + 520]			  ## download_loop.c:1473:44
 1e178dc:    04 22             	if (r1 == 0) goto 8 <active_update_task+0x3EE : 1e178e6 >			  ## download_loop.c:1473:44
 1e178de:    00 fc f8 01       	r0 = r0 + 504			  ## download_loop.c:1474:26
 1e178e2:    81 00             	call r1			  ## download_loop.c:1474:26
 1e178e4:    c3 30             	if (r0 != 0) goto 390 <active_update_task+0x574 : 1e17a6c >			  ## download_loop.c:1474:26
 1e178e6:    16 80             	r6 += 1			  ## download_loop.c:1471:26
 1e178e8:    84 81             	r4 += 24			  ## download_loop.c:1471:19
 1e178ea:    06 e2 ee 3f       	if (r6 < 32) goto -36 <active_update_task+0x3D2 : 1e178ca >			  ## download_loop.c:1471:19
 1e178ee:    0c 70             	r12 = 0
 1e178f0:    08 70             	r8 = 0
 1e178f2:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1817:41
 1e178f6:    01 f6 2c d1       	r1 = [r13 + 300]			  ## download_loop.c:1817:5
 1e178fa:    82 40             	r2 = [r0 + 32]			  ## download_loop.c:1817:70
 1e178fc:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:1817:18
 1e178fe:    00 70             	r0 = 0			  ## download_loop.c:1817:5
 1e17900:    01 70             	r1 = 0			  ## download_loop.c:1817:5
 1e17902:    05 70             	r5 = 0			  ## download_loop.c:1817:5
 1e17904:    83 00             	call r3			  ## download_loop.c:1817:5
 1e17906:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1818:39
 1e1790a:    02 f6 2c d1       	r2 = [r13 + 300]			  ## download_loop.c:1818:13
 1e1790e:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1818:47
 1e17910:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:1818:26
 1e17912:    00 70             	r0 = 0			  ## download_loop.c:1818:13
 1e17914:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1818:13
 1e17918:    83 00             	call r3			  ## download_loop.c:1818:13
 1e1791a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1820:37
 1e1791e:    09 f6 00 00       	r9 = [r0 + 0]			  ## download_loop.c:1820:45
 1e17922:    c6 ff 4e 73 e1 01 	r6 = 31552334 <update_loader_match_tab+0x2 : 1e1734e >
 1e17928:    80 02             	r0 = [sp+32]
 1e1792a:    20 04             	r0 = r0.l (u)
 1e1792c:    01 f7 fe 6f       	r1 = h[r6 + -2] (u)			  ## download_loop.c:794:48
 1e17930:    01 f2 05 00       	if (r1 == r0) goto 10 <active_update_task+0x446 : 1e1793e >			  ## download_loop.c:794:48
 1e17934:    15 80             	r5 += 1			  ## download_loop.c:793:31
 1e17936:    26 81             	r6 += 18			  ## download_loop.c:793:19
 1e17938:    85 e0 f8 9f       	if (r5 <= 8) goto -16 <active_update_task+0x434 : 1e1792c >			  ## download_loop.c:793:19
 1e1793c:    06 70             	r6 = 0
 1e1793e:    05 70             	r5 = 0
 1e17940:    ce ff 78 31 00 00 	r14 = 12664 <curr_loader_file_head : 3178 >
 1e17946:    04 f7 00 90       	r4 = h[r9 + 0] (u)			  ## download_loop.c:816:33
 1e1794a:    97 fc 02 00       	r7 = r9 + 2			  ## download_loop.c:307:12
 1e1794e:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e17950:    70 08             	r0 = r7			  ## download_loop.c:307:12
 1e17952:    bf f3 d3 4a       	call -92762 <CRC16 : 1e00efc >			  ## download_loop.c:307:12
 1e17956:    04 f2 9c 10       	if (r4 != r0) goto 312 <active_update_task+0x59A : 1e17a92 >			  ## download_loop.c:307:12
 1e1795a:    e0 6e             	r0 = b[r7 + 14] (u)			  ## download_loop.c:816:126
 1e1795c:    9a 20             	if (r0 == 0) goto 308 <active_update_task+0x59A : 1e17a92 >			  ## download_loop.c:816:126
 1e1795e:    0a f9 0a 70       	r10 = b[r7 + 10] (u)			  ## download_loop.c:823:53
 1e17962:    e7 80             	r7 += 14			  ## download_loop.c:826:18
 1e17964:    02 71             	r2 = 16			  ## download_loop.c:826:18
 1e17966:    70 08             	r0 = r7			  ## download_loop.c:826:18
 1e17968:    61 08             	r1 = r6			  ## download_loop.c:826:18
 1e1796a:    97 f3 bf 7a       	call 3077502 <memcmp : 106eec >			  ## download_loop.c:826:18
 1e1796e:    89 20             	if (r0 == 0) goto 274 <active_update_task+0x58A : 1e17a82 >			  ## download_loop.c:826:18
 1e17970:    15 80             	r5 += 1			  ## download_loop.c:815:41
 1e17972:    09 9f             	r9 = r7 + 16			  ## download_loop.c:815:5
 1e17974:    95 e0 e7 3f       	if (r5 < 9) goto -50 <active_update_task+0x44E : 1e17946 >			  ## download_loop.c:815:5
 1e17978:    89 18             	goto 274 <active_update_task+0x594 : 1e17a8c >			  ## download_loop.c:815:5
 1e1797a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:749:57
 1e1797e:    71 60             	r1 = b[r0 + 7] (u)			  ## download_loop.c:749:95
 1e17980:    69 02             	[sp+24] = r1			  ## download_loop.c:749:65
 1e17982:    61 60             	r1 = b[r0 + 6] (u)			  ## download_loop.c:749:65
 1e17984:    59 02             	[sp+20] = r1			  ## download_loop.c:557:18
 1e17986:    08 fc 68 00       	r8 = r0 + 104			  ## download_loop.c:557:18
 1e1798a:    18 f5 68 00       	[sp+104] = r8			  ## download_loop.c:556:45
 1e1798e:    01 fc b8 00       	r1 = r0 + 184			  ## download_loop.c:558:18
 1e17992:    b9 03             	[sp+108] = r1			  ## download_loop.c:556:45
 1e17994:    01 fc 08 01       	r1 = r0 + 264			  ## download_loop.c:561:18
 1e17998:    c9 03             	[sp+112] = r1			  ## download_loop.c:556:45
 1e1799a:    01 fc 58 01       	r1 = r0 + 344			  ## download_loop.c:562:18
 1e1799e:    d9 03             	[sp+116] = r1			  ## download_loop.c:556:45
 1e179a0:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:572:35
 1e179a2:    01 f9 32 d1       	r1 = b[r13 + 306] (u)			  ## flash_fs_api.c:88:12
 1e179a6:    49 02             	[sp+16] = r1			  ## download_loop.c:572:46
 1e179a8:    09 fc 00 02       	r9 = r0 + 512			  ## download_loop.c:572:46
 1e179ac:    0d 70             	r13 = 0
 1e179ae:    cc ff f1 73 e1 01 	r12 = 31552497 <JL_APP_CODE0_FILE_NAME : 1e173f1 >
 1e179b4:    3b 18             	goto 118 <active_update_task+0x534 : 1e17a2c >
 1e179b6:    0a 70             	r10 = 0
 1e179b8:    96 08             	r6 = r9
 1e179ba:    04 70             	r4 = 0
 1e179bc:    03 18             	goto 6 <active_update_task+0x4CC : 1e179c4 >
 1e179be:    6a 08             	r10 = r6
 1e179c0:    06 82             	r6 += 32			  ## download_loop.c:594:9
 1e179c2:    14 70             	r4 = 1			  ## download_loop.c:594:9
 1e179c4:    02 72             	r2 = 32			  ## download_loop.c:596:13
 1e179c6:    03 70             	r3 = 0			  ## download_loop.c:596:13
 1e179c8:    0d 02             	[sp] = r5			  ## download_loop.c:596:13
 1e179ca:    f0 08             	r0 = r15			  ## download_loop.c:596:13
 1e179cc:    61 08             	r1 = r6			  ## download_loop.c:596:13
 1e179ce:    6b 15             	call -1322 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:596:13
 1e179d0:    60 ff ff 49 f4 ff 	if ((r4 & 255) == 0) goto -24 <active_update_task+0x4C6 : 1e179be >			  ## download_loop.c:596:13
 1e179d6:    07 9d             	r7 = r6 + 16			  ## download_loop.c:599:29
 1e179d8:    d2 70             	r2 = 13			  ## download_loop.c:599:29
 1e179da:    70 08             	r0 = r7			  ## download_loop.c:599:29
 1e179dc:    c1 08             	r1 = r12			  ## download_loop.c:599:29
 1e179de:    97 f3 85 7a       	call 3077386 <memcmp : 106eec >			  ## download_loop.c:599:29
 1e179e2:    06 20             	if (r0 == 0) goto 12 <active_update_task+0x4F8 : 1e179f0 >			  ## download_loop.c:599:29
 1e179e4:    14 80             	r4 += 1			  ## download_loop.c:594:63
 1e179e6:    00 05             	r0 = r4.b0 (u)			  ## download_loop.c:594:63
 1e179e8:    06 9f             	r6 = r7 + 16			  ## download_loop.c:594:9
 1e179ea:    00 e1 eb 3f       	if (r0 < 16) goto -42 <active_update_task+0x4CC : 1e179c4 >			  ## download_loop.c:594:9
 1e179ee:    06 70             	r6 = 0
 1e179f0:    a0 08             	r0 = r10			  ## download_loop.c:606:18
 1e179f2:    bf f3 c9 4a       	call -92782 <jl_file_head_valid_check : 1e00f88 >			  ## download_loop.c:606:18
 1e179f6:    30 30             	if (r0 != 0) goto 96 <active_update_task+0x560 : 1e17a58 >			  ## download_loop.c:606:18
 1e179f8:    60 08             	r0 = r6			  ## download_loop.c:612:18
 1e179fa:    bf f3 c5 4a       	call -92790 <jl_file_head_valid_check : 1e00f88 >			  ## download_loop.c:612:18
 1e179fe:    2c 30             	if (r0 != 0) goto 88 <active_update_task+0x560 : 1e17a58 >			  ## download_loop.c:612:18
 1e17a00:    00 f9 0c a0       	r0 = b[r10 + 12] (u)			  ## download_loop.c:618:56
 1e17a04:    61 02             	r1 = [sp+24]			  ## download_loop.c:618:13
 1e17a06:    10 f2 0b 10       	if (r0 != r1) goto 22 <active_update_task+0x528 : 1e17a20 >			  ## download_loop.c:618:13
 1e17a0a:    00 f9 0d a0       	r0 = b[r10 + 13] (u)			  ## download_loop.c:623:57
 1e17a0e:    51 02             	r1 = [sp+20]			  ## download_loop.c:623:13
 1e17a10:    10 f2 06 10       	if (r0 != r1) goto 12 <active_update_task+0x528 : 1e17a20 >			  ## download_loop.c:623:13
 1e17a14:    10 5c             	r0 = h[r6 + 2] (u)			  ## download_loop.c:627:57
 1e17a16:    10 80             	r0 += 1			  ## download_loop.c:627:76
 1e17a18:    00 04             	r0 = r0.b0 (u)			  ## download_loop.c:628:37
 1e17a1a:    41 02             	r1 = [sp+16]			  ## download_loop.c:628:13
 1e17a1c:    01 f2 3c 01       	if (r1 == r0) goto 632 <active_update_task+0x7A0 : 1e17c98 >			  ## download_loop.c:628:13
 1e17a20:    1d 80             	r13 += 1			  ## download_loop.c:580:31
 1e17a22:    3d e0 19 80       	if (r13 > 3) goto 50 <active_update_task+0x560 : 1e17a58 >			  ## download_loop.c:580:31
 1e17a26:    80 a6             	r0 = sp + 104
 1e17a28:    a8 f6 00 0d       	r8 = [r0+r13<<2]
 1e17a2c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e17a32:    04 08             	r4 = r0
 1e17a34:    00 f6 2c 41       	r0 = [r4 + 300]			  ## download_loop.c:582:9
 1e17a38:    02 f6 08 80       	r2 = [r8 + 8]			  ## download_loop.c:582:68
 1e17a3c:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:582:22
 1e17a3e:    00 70             	r0 = 0			  ## download_loop.c:582:9
 1e17a40:    01 70             	r1 = 0			  ## download_loop.c:582:9
 1e17a42:    83 00             	call r3			  ## download_loop.c:582:9
 1e17a44:    00 f6 2c 41       	r0 = [r4 + 300]			  ## download_loop.c:583:17
 1e17a48:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:583:30
 1e17a4a:    00 70             	r0 = 0			  ## download_loop.c:583:17
 1e17a4c:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:583:17
 1e17a50:    91 08             	r1 = r9			  ## download_loop.c:583:17
 1e17a52:    83 00             	call r3			  ## download_loop.c:583:17
 1e17a54:    f0 f2 af 1f       	if (r0 != r15) goto -162 <active_update_task+0x4BE : 1e179b6 >			  ## download_loop.c:583:17
 1e17a58:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e17a5e:    60 78             	r0 = 134			  ## download_loop.c:1763:9
 1e17a60:    14 15             	call -1496 <update_stop : 1e1748a >			  ## download_loop.c:1763:9
 1e17a62:    3b 15             	call -1418 <update_resource_release : 1e174da >			  ## download_loop.c:1910:5
 1e17a64:    f6 07             	r6 = -1			  ## download_loop.c:1910:5
 1e17a66:    0c f5 1c 00       	r12 = [sp+28]			  ## download_loop.c:1910:5
 1e17a6a:    c1 1d             	goto -1150 <active_update_task+0xF6 : 1e175ee >			  ## download_loop.c:1910:5
 1e17a6c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1477:32
 1e17a70:    40 09             	r0 += r4			  ## download_loop.c:1477:59
 1e17a72:    00 f9 0c 02       	r0 = b[r0 + 524] (u)			  ## download_loop.c:1477:59
 1e17a76:    0c 70             	r12 = 0			  ## download_loop.c:1477:59
 1e17a78:    08 70             	r8 = 0			  ## download_loop.c:1477:59
 1e17a7a:    c0 e0 3a 1f       	if (r0 != 12) goto -396 <active_update_task+0x3FA : 1e178f2 >			  ## download_loop.c:1477:59
 1e17a7e:    10 70             	r0 = 1			  ## download_loop.c:1806:13
 1e17a80:    09 18             	goto 18 <active_update_task+0x59C : 1e17a94 >			  ## download_loop.c:1806:13
 1e17a82:    02 72             	r2 = 32			  ## download_loop.c:828:13
 1e17a84:    e0 08             	r0 = r14			  ## download_loop.c:828:13
 1e17a86:    91 08             	r1 = r9			  ## download_loop.c:828:13
 1e17a88:    97 f3 2c 7a       	call 3077208 <memcpy : 106ee4 >			  ## download_loop.c:828:13
 1e17a8c:    40 05             	r0 = r5.b0 (u)
 1e17a8e:    90 e0 05 10       	if (r0 != 9) goto 10 <active_update_task+0x5A4 : 1e17a9c >
 1e17a92:    60 78             	r0 = 134			  ## download_loop.c:1822:9
 1e17a94:    fa 14             	call -1548 <update_stop : 1e1748a >
 1e17a96:    0c f5 1c 00       	r12 = [sp+28]
 1e17a9a:    a7 1d             	goto -1202 <active_update_task+0xF2 : 1e175ea >
 1e17a9c:    07 f6 08 e0       	r7 = [r14 + 8]			  ## download_loop.c:1835:82
 1e17aa0:    00 70             	r0 = 0
 1e17aa2:    10 f5 64 01       	[sp+356] = r0			  ## flash_fs_api.c:389:20
 1e17aa6:    10 f5 60 01       	[sp+352] = r0			  ## flash_fs_api.c:389:20
 1e17aaa:    10 f5 5c 01       	[sp+348] = r0			  ## flash_fs_api.c:389:20
 1e17aae:    10 f5 58 01       	[sp+344] = r0			  ## flash_fs_api.c:389:20
 1e17ab2:    c0 ff 02 56 04 40 	r0 = 1074025986 <text_size+0x2CAB6 : 45602 >			  ## flash_fs_api.c:390:5
 1e17ab8:    e1 fb 58 01       	r1 = sp + 344			  ## flash_fs_api.c:390:5
 1e17abc:    bf f3 73 4a       	call -92954 <norflash_ioctl : 1e00fa6 >			  ## flash_fs_api.c:390:5
 1e17ac0:    04 f5 64 01       	r4 = [sp+356]			  ## flash_fs_api.c:397:62
 1e17ac4:    06 f5 5c 01       	r6 = [sp+348]			  ## flash_fs_api.c:397:49
 1e17ac8:    e1 fb b8 01       	r1 = sp + 440
 1e17acc:    70 76             	r0 = 103			  ## flash_fs_api.c:271:5
 1e17ace:    bf f3 6a 4a       	call -92972 <norflash_ioctl : 1e00fa6 >			  ## flash_fs_api.c:271:5
 1e17ad2:    09 f5 b8 01       	r9 = [sp+440]			  ## flash_fs_api.c:273:12
 1e17ad6:    8e b9             	r14 = r4 + r6			  ## flash_fs_api.c:303:47
 1e17ad8:    80 fb 80 dc       	r13 = r12 + r8			  ## flash_fs_api.c:305:45
 1e17adc:    c0 08             	r0 = r12			  ## flash_fs_api.c:291:29
 1e17ade:    bf f3 f9 4a       	call -92686 <__jl_fs_sector_align : 1e010d4 >			  ## flash_fs_api.c:291:29
 1e17ae2:    80 09             	r0 += r8			  ## flash_fs_api.c:291:29
 1e17ae4:    48 fb 01 fb       	r8 = r15 + 65536			  ## flash_fs_api.c:291:29
 1e17ae8:    80 09             	r0 += r8			  ## flash_fs_api.c:291:29
 1e17aea:    cf ff 00 00 fe ff 	r15 = 4294836224 <bank_code_load_addr+0x1C55DC : 1fe0000 >			  ## flash_fs_api.c:291:29
 1e17af0:    e2 fd f0 50       	r5 = r0 & r15			  ## flash_fs_api.c:291:29
 1e17af4:    60 08             	r0 = r6			  ## flash_fs_api.c:292:31
 1e17af6:    bf f3 ed 4a       	call -92710 <__jl_fs_sector_align : 1e010d4 >			  ## flash_fs_api.c:292:31
 1e17afa:    40 09             	r0 += r4			  ## flash_fs_api.c:292:31
 1e17afc:    80 09             	r0 += r8			  ## flash_fs_api.c:292:31
 1e17afe:    e2 fd f0 40       	r4 = r0 & r15			  ## flash_fs_api.c:292:31
 1e17b02:    45 f2 01 30       	if (r5 < r4) goto 2 <active_update_task+0x610 : 1e17b08 >
 1e17b06:    de 08             	r14 = r13			  ## flash_fs_api.c:301:9
 1e17b08:    78 08             	r8 = r7
 1e17b0a:    70 fc 20 01       	r0 = r7 + 288			  ## flash_fs_api.c:293:33
 1e17b0e:    bf f3 e1 4a       	call -92734 <__jl_fs_sector_align : 1e010d4 >			  ## flash_fs_api.c:293:33
 1e17b12:    0d 08             	r13 = r0			  ## flash_fs_api.c:293:33
 1e17b14:    90 fb 00 0e       	r0 = r14 - r0
 1e17b18:    c6 f2 01 30       	if (r6 < r12) goto 2 <active_update_task+0x626 : 1e17b1e >
 1e17b1c:    6c 08             	r12 = r6			  ## flash_fs_api.c:298:31
 1e17b1e:    61 fb 02 db       	r1 = 131072 - r13			  ## flash_fs_api.c:311:53
 1e17b22:    47 b3             	r7 = r1 + r5			  ## flash_fs_api.c:311:71
 1e17b24:    ce ff 74 31 00 00 	r14 = 12660 <update_bss_start : 3174 >
 1e17b2a:    cf ff ff ff 00 00 	r15 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e17b30:    c0 f2 01 30       	if (r0 < r12) goto 2 <active_update_task+0x63E : 1e17b36 >
 1e17b34:    07 08             	r7 = r0			  ## flash_fs_api.c:309:9
 1e17b36:    f6 07             	r6 = -1
 1e17b38:    95 f2 01 30       	if (r5 < r9) goto 2 <active_update_task+0x646 : 1e17b3e >
 1e17b3c:    07 08             	r7 = r0			  ## flash_fs_api.c:309:9
 1e17b3e:    94 f2 01 30       	if (r4 < r9) goto 2 <active_update_task+0x64C : 1e17b44 >
 1e17b42:    07 08             	r7 = r0			  ## flash_fs_api.c:309:9
 1e17b44:    95 f2 02 90       	if (r5 <= r9) goto 4 <active_update_task+0x654 : 1e17b4c >
 1e17b48:    10 78             	r0 = 129			  ## download_loop.c:1844:13
 1e17b4a:    03 18             	goto 6 <active_update_task+0x65A : 1e17b52 >			  ## download_loop.c:1844:13
 1e17b4c:    c7 f2 08 20       	if (r7 >= r12) goto 16 <active_update_task+0x668 : 1e17b60 >
 1e17b50:    20 78             	r0 = 130			  ## download_loop.c:1841:13
 1e17b52:    9b 14             	call -1738 <update_stop : 1e1748a >
 1e17b54:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e17b5a:    0c f5 1c 00       	r12 = [sp+28]
 1e17b5e:    46 1d             	goto -1396 <active_update_task+0xF4 : 1e175ec >
 1e17b60:    06 f5 5c 01       	r6 = [sp+348]			  ## flash_fs_api.c:452:25
 1e17b64:    60 08             	r0 = r6			  ## flash_fs_api.c:454:21
 1e17b66:    bf f3 74 4b       	call -92440 <flash_erase_by_first_unit : 1e01252 >			  ## flash_fs_api.c:454:21
 1e17b6a:    60 09             	r0 += r6			  ## flash_fs_api.c:463:44
 1e17b6c:    76 08             	r6 = r7			  ## flash_fs_api.c:464:22
 1e17b6e:    07 f2 01 80       	if (r7 > r0) goto 2 <active_update_task+0x67C : 1e17b74 >
 1e17b72:    06 08             	r6 = r0			  ## flash_fs_api.c:464:22
 1e17b74:    60 08             	r0 = r6			  ## flash_fs_api.c:466:21
 1e17b76:    bf f3 6c 4b       	call -92456 <flash_erase_by_first_unit : 1e01252 >			  ## flash_fs_api.c:466:21
 1e17b7a:    6f 02             	[sp+24] = r7			  ## flash_fs_api.c:466:21
 1e17b7c:    80 fb d0 97       	r9 = r7 + r13			  ## flash_fs_api.c:468:56
 1e17b80:    97 fc 00 f0       	r7 = r9 + -4096			  ## flash_fs_api.c:468:74
 1e17b84:    0c 08             	r12 = r0			  ## flash_fs_api.c:466:21
 1e17b86:    01 fb 00 10       	r1 = 4096 <sys_clock_limit+0x50 : 1000 >			  ## flash_fs_api.c:468:9
 1e17b8a:    70 08             	r0 = r7			  ## flash_fs_api.c:468:9
 1e17b8c:    bf f3 da 4a       	call -92748 <flash_erase_by_blcok_n_sector : 1e01144 >			  ## flash_fs_api.c:468:9
 1e17b90:    80 fb c0 06       	r0 = r6 + r12			  ## flash_fs_api.c:467:42
 1e17b94:    91 08             	r1 = r9			  ## flash_fs_api.c:470:27
 1e17b96:    70 f2 01 80       	if (r0 > r7) goto 2 <active_update_task+0x6A4 : 1e17b9c >			  ## flash_fs_api.c:470:27
 1e17b9a:    01 08             	r1 = r0			  ## flash_fs_api.c:470:27
 1e17b9c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1957:5
 1e17ba0:    39 40             	[r0 + 12] = r1			  ## download_loop.c:1957:29
 1e17ba2:    d1 fc 00 f0       	r1 = r13 + -4096			  ## flash_fs_api.c:469:81
 1e17ba6:    62 02             	r2 = [sp+24]			  ## download_loop.c:1958:31
 1e17ba8:    4a 40             	[r0 + 16] = r2			  ## download_loop.c:1958:31
 1e17baa:    28 ff 10 da 01 00 	if (r13 > 4096) goto 2 <active_update_task+0x6BA : 1e17bb2 >			  ## download_loop.c:1958:31
 1e17bb0:    01 70             	r1 = 0			  ## flash_fs_api.c:469:25
 1e17bb2:    59 40             	[r0 + 20] = r1			  ## download_loop.c:1959:30
 1e17bb4:    9f f5 3a 01       	h[sp+314] = r15			  ## flash_fs_api.c:483:21
 1e17bb8:    65 02             	r5 = [sp+24]			  ## flash_fs_api.c:483:21
 1e17bba:    15 f5 3c 01       	[sp+316] = r5			  ## flash_fs_api.c:484:21
 1e17bbe:    80 fc 20 00       	r0 = r8 + 32			  ## flash_fs_api.c:485:33
 1e17bc2:    10 f5 40 01       	[sp+320] = r0			  ## flash_fs_api.c:485:20
 1e17bc6:    da f5 44 01       	b[sp+324] = r10			  ## flash_fs_api.c:486:22
 1e17bca:    f0 7f             	r0 = 255			  ## flash_fs_api.c:486:22
 1e17bcc:    d0 f5 45 01       	b[sp+325] = r0			  ## flash_fs_api.c:487:16
 1e17bd0:    9f f5 46 01       	h[sp+326] = r15			  ## flash_fs_api.c:488:19
 1e17bd4:    e4 fb 38 01       	r4 = sp + 312			  ## flash_fs_api.c:488:19
 1e17bd8:    00 99             	r0 = r4 + 16			  ## flash_fs_api.c:490:5
 1e17bda:    c1 ff 27 f2 e0 01 	r1 = 31519271 <bluetooth_base_uuid+0x21D : 1e0f227 >			  ## flash_fs_api.c:490:5
 1e17be0:    02 71             	r2 = 16			  ## flash_fs_api.c:490:5
 1e17be2:    97 f3 7f 79       	call 3076862 <memcpy : 106ee4 >			  ## flash_fs_api.c:490:5
 1e17be6:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:483:10
 1e17bea:    e1 71             	r1 = 30			  ## flash_fs_api.c:491:19
 1e17bec:    bf f3 86 49       	call -93428 <CRC16 : 1e00efc >			  ## flash_fs_api.c:491:19
 1e17bf0:    90 f5 38 01       	h[sp+312] = r0			  ## flash_fs_api.c:491:17
 1e17bf4:    02 72             	r2 = 32			  ## flash_fs_api.c:493:10
 1e17bf6:    40 08             	r0 = r4			  ## flash_fs_api.c:493:10
 1e17bf8:    51 08             	r1 = r5			  ## flash_fs_api.c:493:10
 1e17bfa:    bf f3 75 4b       	call -92438 <sfc_write : 1e012e8 >			  ## flash_fs_api.c:493:10
 1e17bfe:    01 70             	r1 = 0			  ## flash_fs_api.c:497:5
 1e17c00:    02 72             	r2 = 32			  ## flash_fs_api.c:497:5
 1e17c02:    40 08             	r0 = r4			  ## flash_fs_api.c:497:5
 1e17c04:    97 f3 74 79       	call 3076840 <memset : 106ef0 >			  ## flash_fs_api.c:497:5
 1e17c08:    02 72             	r2 = 32			  ## flash_fs_api.c:498:5
 1e17c0a:    40 08             	r0 = r4			  ## flash_fs_api.c:498:5
 1e17c0c:    51 08             	r1 = r5			  ## flash_fs_api.c:498:5
 1e17c0e:    bf f3 72 4b       	call -92444 <sfc_read : 1e012f6 >			  ## flash_fs_api.c:498:5
 1e17c12:    e4 fb 68 01       	r4 = sp + 360			  ## flash_fs_api.c:498:5
 1e17c16:    f1 7f             	r1 = 255			  ## flash_fs_api.c:511:5
 1e17c18:    02 75             	r2 = 80			  ## flash_fs_api.c:511:5
 1e17c1a:    40 08             	r0 = r4			  ## flash_fs_api.c:511:5
 1e17c1c:    97 f3 68 79       	call 3076816 <memset : 106ef0 >			  ## flash_fs_api.c:511:5
 1e17c20:    15 f5 b0 01       	[sp+432] = r5			  ## flash_fs_api.c:512:30
 1e17c24:    86 02             	r6 = [sp+32]			  ## flash_fs_api.c:512:30
 1e17c26:    96 f5 6a 01       	h[sp+362] = r6			  ## flash_fs_api.c:513:31
 1e17c2a:    95 fc 00 ff       	r5 = r9 + -256			  ## flash_fs_api.c:506:61
 1e17c2e:    01 75             	r1 = 80			  ## flash_fs_api.c:515:32
 1e17c30:    40 08             	r0 = r4			  ## flash_fs_api.c:515:32
 1e17c32:    52 08             	r2 = r5			  ## flash_fs_api.c:515:32
 1e17c34:    bf f3 21 4b       	call -92606 <norflash_write : 1e0127a >			  ## flash_fs_api.c:515:32
 1e17c38:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1853:35
 1e17c3c:    c1 ff 78 31 00 00 	r1 = 12664 <curr_loader_file_head : 3178 >			  ## download_loop.c:1853:96
 1e17c42:    08 f6 04 10       	r8 = [r1 + 4]			  ## download_loop.c:1853:96
 1e17c46:    01 f9 40 02       	r1 = b[r0 + 576] (u)			  ## download_loop.c:1855:17
 1e17c4a:    84 40             	r4 = [r0 + 32]			  ## download_loop.c:1853:64
 1e17c4c:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1853:64
 1e17c52:    10 22             	if (r1 == 0) goto 32 <active_update_task+0x77C : 1e17c74 >			  ## download_loop.c:1853:64
 1e17c54:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:418:9
 1e17c58:    21 70             	r1 = 2			  ## download_loop.c:414:19
 1e17c5a:    d1 f5 bd 01       	b[sp+445] = r1			  ## download_loop.c:414:19
 1e17c5e:    0a 20             	if (r0 == 0) goto 20 <active_update_task+0x77C : 1e17c74 >			  ## download_loop.c:414:19
 1e17c60:    01 fb 05 5a       	r1 = 23045 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEEF : 5a05 >			  ## download_loop.c:418:73
 1e17c64:    16 f2 06 10       	if (r6 != r1) goto 12 <active_update_task+0x77C : 1e17c74 >			  ## download_loop.c:418:73
 1e17c68:    52 40             	r2 = [r0 + 20]			  ## download_loop.c:418:37
 1e17c6a:    04 24             	if (r2 == 0) goto 8 <active_update_task+0x77C : 1e17c74 >			  ## download_loop.c:418:37
 1e17c6c:    e0 fb bd 01       	r0 = sp + 445
 1e17c70:    01 70             	r1 = 0			  ## download_loop.c:419:9
 1e17c72:    82 00             	call r2			  ## download_loop.c:419:9
 1e17c74:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:478:9
 1e17c78:    c1 ff 78 31 00 00 	r1 = 12664 <curr_loader_file_head : 3178 >			  ## download_loop.c:1865:60
 1e17c7e:    26 42             	r6 = [r1 + 8]			  ## download_loop.c:1865:60
 1e17c80:    50 20             	if (r0 == 0) goto 160 <active_update_task+0x82A : 1e17d22 >
 1e17c82:    52 40             	r2 = [r0 + 20]			  ## download_loop.c:478:37
 1e17c84:    67 02             	r7 = [sp+24]			  ## download_loop.c:478:37
 1e17c86:    4e 24             	if (r2 == 0) goto 156 <active_update_task+0x82C : 1e17d24 >			  ## download_loop.c:478:37
 1e17c88:    00 70             	r0 = 0			  ## download_loop.c:479:9
 1e17c8a:    61 08             	r1 = r6			  ## download_loop.c:479:9
 1e17c8c:    82 00             	call r2			  ## download_loop.c:479:9
 1e17c8e:    c0 ff 78 31 00 00 	r0 = 12664 <curr_loader_file_head : 3178 >			  ## download_loop.c:479:9
 1e17c94:    26 40             	r6 = [r0 + 8]			  ## download_loop.c:479:9
 1e17c96:    46 18             	goto 140 <active_update_task+0x82C : 1e17d24 >			  ## download_loop.c:479:9
 1e17c98:    04 f6 00 e0       	r4 = [r14 + 0]			  ## download_loop.c:638:23
 1e17c9c:    40 fc a8 01       	r0 = r4 + 424			  ## download_loop.c:638:9
 1e17ca0:    02 75             	r2 = 80			  ## download_loop.c:638:9
 1e17ca2:    81 08             	r1 = r8			  ## download_loop.c:638:9
 1e17ca4:    97 f3 1e 79       	call 3076668 <memcpy : 106ee4 >			  ## download_loop.c:638:9
 1e17ca8:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:638:9
 1e17cae:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:1772:9
 1e17cb2:    02 f6 b0 41       	r2 = [r4 + 432]			  ## download_loop.c:1772:72
 1e17cb6:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1772:22
 1e17cb8:    00 70             	r0 = 0			  ## download_loop.c:1772:9
 1e17cba:    01 70             	r1 = 0			  ## download_loop.c:1772:9
 1e17cbc:    05 70             	r5 = 0			  ## download_loop.c:1772:9
 1e17cbe:    83 00             	call r3			  ## download_loop.c:1772:9
 1e17cc0:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1773:43
 1e17cc4:    02 f6 2c d1       	r2 = [r13 + 300]			  ## download_loop.c:1773:17
 1e17cc8:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1773:51
 1e17cca:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:1773:30
 1e17ccc:    00 70             	r0 = 0			  ## download_loop.c:1773:17
 1e17cce:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1773:17
 1e17cd2:    83 00             	call r3			  ## download_loop.c:1773:17
 1e17cd4:    f0 f2 df 0e       	if (r0 == r15) goto -578 <active_update_task+0x59E : 1e17a96 >			  ## download_loop.c:1773:17
 1e17cd8:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1781:42
 1e17cdc:    04 40             	r4 = [r0 + 0]			  ## download_loop.c:1781:50
 1e17cde:    ca ff 00 08 00 00 	r10 = 2048 <report_mmu_tlb_size : 800 >			  ## download_loop.c:1781:50
 1e17ce4:    08 f7 1c a0       	r8 = h[r10 + 28] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e17ce8:    80 ad             	r0 = sp + 216			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e17cea:    06 91             	r6 = r0 + 16
 1e17cec:    0d 72             	r13 = 32
 1e17cee:    f9 08             	r9 = r15
 1e17cf0:    41 b9             	r1 = r4 + r5			  ## download_loop.c:1358:9
 1e17cf2:    87 ad             	r7 = sp + 216			  ## download_loop.c:1358:9
 1e17cf4:    02 72             	r2 = 32			  ## download_loop.c:1358:9
 1e17cf6:    70 08             	r0 = r7			  ## download_loop.c:1358:9
 1e17cf8:    97 f3 f4 78       	call 3076584 <memcpy : 106ee4 >			  ## download_loop.c:1358:9
 1e17cfc:    02 72             	r2 = 32			  ## download_loop.c:1359:9
 1e17cfe:    03 70             	r3 = 0			  ## download_loop.c:1359:9
 1e17d00:    1d f5 00 00       	[sp] = r13			  ## download_loop.c:1359:9
 1e17d04:    90 08             	r0 = r9			  ## download_loop.c:1359:9
 1e17d06:    71 08             	r1 = r7			  ## download_loop.c:1359:9
 1e17d08:    bf f3 cd fb       	call -2150 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:1359:9
 1e17d0c:    d2 70             	r2 = 13			  ## download_loop.c:1360:18
 1e17d0e:    60 08             	r0 = r6			  ## download_loop.c:1360:18
 1e17d10:    c1 08             	r1 = r12			  ## download_loop.c:1360:18
 1e17d12:    97 f3 eb 78       	call 3076566 <memcmp : 106eec >			  ## download_loop.c:1360:18
 1e17d16:    d9 20             	if (r0 == 0) goto 434 <active_update_task+0x9D2 : 1e17eca >			  ## download_loop.c:1360:18
 1e17d18:    05 82             	r5 += 32			  ## download_loop.c:1357:48
 1e17d1a:    09 ff ff 51 e8 ff 	if (r5 <= 511) goto -48 <active_update_task+0x7F8 : 1e17cf0 >
 1e17d20:    29 19             	goto 594 <active_update_task+0xA7C : 1e17f74 >
 1e17d22:    67 02             	r7 = [sp+24]
 1e17d24:    00 fb 00 02       	r0 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1127:20
 1e17d28:    bf f3 3a 9e       	call -50060 <malloc : 1e0b9a0 >			  ## download_loop.c:1127:20
 1e17d2c:    0c 08             	r12 = r0			  ## download_loop.c:1127:20
 1e17d2e:    00 e0 98 0e       	if (r0 == 0) goto -720 <active_update_task+0x56A : 1e17a62 >
 1e17d32:    5d 02             	[sp+20] = r5
 1e17d34:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:1085:5
 1e17d38:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1085:18
 1e17d3a:    80 fb 40 28       	r2 = r8 + r4			  ## download_loop.c:1853:72
 1e17d3e:    78 fc 20 00       	r8 = r7 + 32			  ## flash_fs_api.c:502:41
 1e17d42:    00 70             	r0 = 0			  ## download_loop.c:1085:5
 1e17d44:    01 70             	r1 = 0			  ## download_loop.c:1085:5
 1e17d46:    09 70             	r9 = 0			  ## download_loop.c:1085:5
 1e17d48:    83 00             	call r3			  ## download_loop.c:1085:5
 1e17d4a:    42 2c             	if (r6 == 0) goto 132 <active_update_task+0x8D8 : 1e17dd0 >
 1e17d4c:    0a fb 00 f0       	r10 = -4096 <bank_code_load_addr+0x1E45DC : 1fff000 >
 1e17d50:    84 08             	r4 = r8
 1e17d52:    67 08             	r7 = r6			  ## download_loop.c:1088:17
 1e17d54:    03 ff 00 62 02 00 	if (r6 < 512) goto 4 <active_update_task+0x866 : 1e17d5e >			  ## download_loop.c:1088:17
 1e17d5a:    07 fb 00 02       	r7 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1088:17
 1e17d5e:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:1090:15
 1e17d62:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1090:28
 1e17d64:    e2 05             	r2 = r7.l (u)			  ## download_loop.c:1090:15
 1e17d66:    00 70             	r0 = 0			  ## download_loop.c:1090:15
 1e17d68:    c1 08             	r1 = r12			  ## download_loop.c:1090:15
 1e17d6a:    83 00             	call r3			  ## download_loop.c:1090:15
 1e17d6c:    f0 f2 30 00       	if (r0 == r15) goto 96 <active_update_task+0x8D8 : 1e17dd0 >			  ## download_loop.c:1090:15
 1e17d70:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:947:9
 1e17d74:    30 42             	r0 = [r1 + 12]			  ## download_loop.c:947:17
 1e17d76:    1f 20             	if (r0 == 0) goto 62 <active_update_task+0x8BE : 1e17db6 >			  ## download_loop.c:947:17
 1e17d78:    02 bf             	r2 = r7 + r4			  ## download_loop.c:949:42
 1e17d7a:    20 f2 1c 20       	if (r0 >= r2) goto 56 <active_update_task+0x8BE : 1e17db6 >
 1e17d7e:    42 42             	r2 = [r1 + 16]			  ## download_loop.c:948:41
 1e17d80:    51 42             	r1 = [r1 + 20]			  ## download_loop.c:948:69
 1e17d82:    12 09             	r2 += r1			  ## download_loop.c:948:59
 1e17d84:    01 fc ff 0f       	r1 = r0 + 4095			  ## download_loop.c:951:32
 1e17d88:    e2 fd a0 11       	r1 = r1 & r10			  ## download_loop.c:951:32
 1e17d8c:    73 fc ff 0f       	r3 = r7 + 4095			  ## download_loop.c:955:29
 1e17d90:    23 fd 10 3a       	r3 = r3 & 4096			  ## download_loop.c:955:29
 1e17d94:    25 b6             	r5 = r3 - r0			  ## download_loop.c:951:75
 1e17d96:    51 09             	r1 += r5			  ## download_loop.c:961:31
 1e17d98:    2d b4             	r13 = r2 - r0			  ## download_loop.c:958:51
 1e17d9a:    03 09             	r3 += r0			  ## download_loop.c:957:41
 1e17d9c:    23 f2 01 80       	if (r3 > r2) goto 2 <active_update_task+0x8AA : 1e17da2 >			  ## download_loop.c:957:41
 1e17da0:    1d 08             	r13 = r1			  ## download_loop.c:957:17
 1e17da2:    0d e0 08 00       	if (r13 == 0) goto 16 <active_update_task+0x8BE : 1e17db6 >
 1e17da6:    d1 08             	r1 = r13			  ## download_loop.c:966:17
 1e17da8:    bf f3 cc 49       	call -93288 <flash_erase_by_blcok_n_sector : 1e01144 >			  ## download_loop.c:966:17
 1e17dac:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:967:17
 1e17db0:    31 40             	r1 = [r0 + 12]			  ## download_loop.c:967:41
 1e17db2:    d1 09             	r1 += r13			  ## download_loop.c:967:41
 1e17db4:    39 40             	[r0 + 12] = r1			  ## download_loop.c:967:41
 1e17db6:    c0 08             	r0 = r12			  ## download_loop.c:1109:19
 1e17db8:    41 08             	r1 = r4			  ## download_loop.c:1109:19
 1e17dba:    72 08             	r2 = r7			  ## download_loop.c:1109:19
 1e17dbc:    bf f3 94 4a       	call -92888 <sfc_write : 1e012e8 >			  ## download_loop.c:1109:19
 1e17dc0:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1109:19
 1e17dc6:    07 f2 03 10       	if (r7 != r0) goto 6 <active_update_task+0x8D8 : 1e17dd0 >			  ## download_loop.c:1109:19
 1e17dca:    e6 bd             	r6 = r6 - r7			  ## download_loop.c:1118:20
 1e17dcc:    74 09             	r4 += r7			  ## download_loop.c:1117:20
 1e17dce:    c1 3d             	if (r6 != 0) goto -126 <active_update_task+0x85A : 1e17d52 >
 1e17dd0:    c0 08             	r0 = r12			  ## download_loop.c:1154:9
 1e17dd2:    bf f3 ea 9d       	call -50220 <free : 1e0b9aa >			  ## download_loop.c:1154:9
 1e17dd6:    c0 ff 78 31 00 00 	r0 = 12664 <curr_loader_file_head : 3178 >			  ## download_loop.c:1154:9
 1e17ddc:    0a f7 02 00       	r10 = h[r0 + 2] (u)			  ## download_loop.c:1883:102
 1e17de0:    27 40             	r7 = [r0 + 8]			  ## download_loop.c:1883:75
 1e17de2:    00 fb 00 02       	r0 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:878:20
 1e17de6:    bf f3 db 9d       	call -50250 <malloc : 1e0b9a0 >			  ## download_loop.c:878:20
 1e17dea:    0c 08             	r12 = r0			  ## download_loop.c:878:20
 1e17dec:    f6 07             	r6 = -1
 1e17dee:    43 20             	if (r0 == 0) goto 134 <active_update_task+0x97E : 1e17e76 >
 1e17df0:    3f 2e             	if (r7 == 0) goto 126 <active_update_task+0x978 : 1e17e70 >
 1e17df2:    05 70             	r5 = 0
 1e17df4:    c6 ff 00 35 1e 00 	r6 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >
 1e17dfa:    bf f3 88 49       	call -93424 <clr_wdt : 1e0110e >			  ## download_loop.c:887:9
 1e17dfe:    74 08             	r4 = r7			  ## download_loop.c:888:17
 1e17e00:    03 ff 00 72 02 00 	if (r7 < 512) goto 4 <active_update_task+0x912 : 1e17e0a >			  ## download_loop.c:888:17
 1e17e06:    04 fb 00 02       	r4 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:888:17
 1e17e0a:    c0 08             	r0 = r12			  ## download_loop.c:893:13
 1e17e0c:    81 08             	r1 = r8			  ## download_loop.c:893:13
 1e17e0e:    42 08             	r2 = r4			  ## download_loop.c:893:13
 1e17e10:    bf f3 71 4a       	call -92958 <sfc_read : 1e012f6 >			  ## download_loop.c:893:13
 1e17e14:    97 f3 c2 77       	call 3075972 <local_irq_disable : 106d9c >			  ## download_loop.c:848:5
 1e17e18:    08 00             	csync			  ## download_loop.c:848:5
 1e17e1a:    e6 fd 00 09       	r0 = r9.l (u)			  ## download_loop.c:849:19
 1e17e1e:    21 05             	r1 = r4.l (u)			  ## download_loop.c:850:5
 1e17e20:    18 4c             	[r6 + 4] = r0			  ## download_loop.c:849:17
 1e17e22:    09 22             	if (r1 == 0) goto 18 <active_update_task+0x93E : 1e17e36 >			  ## download_loop.c:849:17
 1e17e24:    60 fb 00 49       	r0 = 0 - r4			  ## download_loop.c:850:15
 1e17e28:    c1 08             	r1 = r12			  ## download_loop.c:850:15
 1e17e2a:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## download_loop.c:851:24
 1e17e2e:    10 80             	r0 += 1			  ## download_loop.c:850:5
 1e17e30:    23 04             	r3 = r0.l (u)			  ## download_loop.c:850:5
 1e17e32:    0a 4c             	[r6 + 0] = r2			  ## download_loop.c:851:22
 1e17e34:    fa 37             	if (r3 != 0) goto -12 <active_update_task+0x932 : 1e17e2a >
 1e17e36:    08 00             	csync			  ## download_loop.c:853:5
 1e17e38:    09 f6 04 60       	r9 = [r6 + 4]			  ## download_loop.c:855:19
 1e17e3c:    45 09             	r5 += r4			  ## download_loop.c:900:17
 1e17e3e:    27 bf             	r7 = r7 - r4			  ## download_loop.c:899:13
 1e17e40:    97 f3 aa 77       	call 3075924 <local_irq_enable : 106d98 >			  ## download_loop.c:856:5
 1e17e44:    23 ff 08 5b 10 00 	if (r5 < 524288) goto 32 <active_update_task+0x972 : 1e17e6a >			  ## download_loop.c:856:5
 1e17e4a:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:866:5
 1e17e4e:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:866:18
 1e17e50:    00 70             	r0 = 0			  ## download_loop.c:866:5
 1e17e52:    01 70             	r1 = 0			  ## download_loop.c:866:5
 1e17e54:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## download_loop.c:866:5
 1e17e58:    83 00             	call r3			  ## download_loop.c:866:5
 1e17e5a:    00 f6 2c d1       	r0 = [r13 + 300]			  ## download_loop.c:867:12
 1e17e5e:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:867:25
 1e17e60:    e1 fb be 01       	r1 = sp + 446			  ## download_loop.c:867:25
 1e17e64:    00 70             	r0 = 0			  ## download_loop.c:867:12
 1e17e66:    a2 70             	r2 = 10			  ## download_loop.c:867:12
 1e17e68:    83 00             	call r3			  ## download_loop.c:867:12
 1e17e6a:    48 09             	r8 += r4			  ## download_loop.c:898:14
 1e17e6c:    c6 3f             	if (r7 != 0) goto -116 <active_update_task+0x902 : 1e17dfa >
 1e17e6e:    f6 07             	r6 = -1
 1e17e70:    c0 08             	r0 = r12			  ## download_loop.c:908:9
 1e17e72:    bf f3 9a 9d       	call -50380 <free : 1e0b9aa >			  ## download_loop.c:908:9
 1e17e76:    e6 fd 00 09       	r0 = r9.l (u)			  ## download_loop.c:921:18
 1e17e7a:    a0 f2 1f 10       	if (r0 != r10) goto 62 <active_update_task+0x9C4 : 1e17ebc >			  ## download_loop.c:921:18
 1e17e7e:    00 f6 28 d1       	r0 = [r13 + 296]			  ## update_main.c:80:9
 1e17e82:    61 02             	r1 = [sp+24]			  ## download_loop.c:1893:32
 1e17e84:    b9 02             	[sp+44] = r1			  ## download_loop.c:1893:32
 1e17e86:    51 02             	r1 = [sp+20]			  ## download_loop.c:1893:32
 1e17e88:    c9 02             	[sp+48] = r1			  ## download_loop.c:1893:32
 1e17e8a:    c1 ff 26 84 e1 01 	r1 = 31556646 <loader_info_record_write : 1e18426 >			  ## download_loop.c:1893:32
 1e17e90:    d9 02             	[sp+52] = r1			  ## download_loop.c:1893:32
 1e17e92:    0c f5 1c 00       	r12 = [sp+28]
 1e17e96:    06 20             	if (r0 == 0) goto 12 <active_update_task+0x9AC : 1e17ea4 >
 1e17e98:    83 41             	r3 = [r0 + 96]			  ## update_main.c:80:27
 1e17e9a:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x9AC : 1e17ea4 >			  ## update_main.c:80:27
 1e17e9c:    00 85             	r0 += 80			  ## update_main.c:81:43
 1e17e9e:    c2 a2             	r2 = sp + 44			  ## update_main.c:81:43
 1e17ea0:    21 70             	r1 = 2			  ## update_main.c:81:9
 1e17ea2:    83 00             	call r3			  ## update_main.c:81:9
 1e17ea4:    80 02             	r0 = [sp+32]			  ## download_loop.c:1904:38
 1e17ea6:    10 b0             	r0 |= 1			  ## download_loop.c:1904:38
 1e17ea8:    01 fb 07 5a       	r1 = 23047 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0xEF1 : 5a07 >			  ## download_loop.c:1904:38
 1e17eac:    10 f2 03 10       	if (r0 != r1) goto 6 <active_update_task+0x9BE : 1e17eb6 >			  ## download_loop.c:1904:38
 1e17eb0:    00 70             	r0 = 0			  ## download_loop.c:1905:13
 1e17eb2:    bf f3 ea fa       	call -2604 <update_stop : 1e1748a >			  ## download_loop.c:1905:13
 1e17eb6:    06 70             	r6 = 0
 1e17eb8:    ff f3 98 fb       	goto -2256 <active_update_task+0xF4 : 1e175ec >
 1e17ebc:    30 78             	r0 = 131			  ## download_loop.c:1885:9
 1e17ebe:    bf f3 e4 fa       	call -2616 <update_stop : 1e1748a >			  ## download_loop.c:1885:9
 1e17ec2:    0c f5 1c 00       	r12 = [sp+28]			  ## download_loop.c:1885:9
 1e17ec6:    ff f3 91 fb       	goto -2270 <active_update_task+0xF4 : 1e175ec >			  ## download_loop.c:1885:9
 1e17eca:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1374:28
 1e17ece:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1374:28
 1e17ed4:    17 08             	r7 = r1			  ## download_loop.c:1374:28
 1e17ed6:    01 f6 2c 71       	r1 = [r7 + 300]			  ## download_loop.c:1375:5
 1e17eda:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1375:101
 1e17ede:    03 f5 dc 00       	r3 = [sp+220]			  ## download_loop.c:1361:13
 1e17ee2:    04 40             	r4 = [r0 + 0]			  ## download_loop.c:1374:36
 1e17ee4:    35 42             	r5 = [r1 + 12]			  ## download_loop.c:1375:18
 1e17ee6:    32 09             	r2 += r3			  ## download_loop.c:1375:72
 1e17ee8:    00 70             	r0 = 0			  ## download_loop.c:1375:5
 1e17eea:    01 70             	r1 = 0			  ## download_loop.c:1375:5
 1e17eec:    06 70             	r6 = 0			  ## download_loop.c:1375:5
 1e17eee:    85 00             	call r5			  ## download_loop.c:1375:5
 1e17ef0:    00 f6 2c 71       	r0 = [r7 + 300]			  ## download_loop.c:1376:5
 1e17ef4:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1376:18
 1e17ef6:    49 fc 00 02       	r9 = r4 + 512			  ## download_loop.c:1374:47
 1e17efa:    00 70             	r0 = 0			  ## download_loop.c:1376:5
 1e17efc:    02 fb 00 02       	r2 = 512 <BTCTLER_CONTROLLER_BSS_SIZE+0x40 : 200 >			  ## download_loop.c:1376:5
 1e17f00:    91 08             	r1 = r9			  ## download_loop.c:1376:5
 1e17f02:    83 00             	call r3			  ## download_loop.c:1376:5
 1e17f04:    84 ab             	r4 = sp + 184			  ## download_loop.c:1376:5
 1e17f06:    02 72             	r2 = 32			  ## download_loop.c:1378:5
 1e17f08:    05 72             	r5 = 32			  ## download_loop.c:1378:5
 1e17f0a:    40 08             	r0 = r4			  ## download_loop.c:1378:5
 1e17f0c:    91 08             	r1 = r9			  ## download_loop.c:1378:5
 1e17f0e:    97 f3 e9 77       	call 3076050 <memcpy : 106ee4 >			  ## download_loop.c:1378:5
 1e17f12:    02 72             	r2 = 32			  ## download_loop.c:1379:5
 1e17f14:    03 70             	r3 = 0			  ## download_loop.c:1379:5
 1e17f16:    0d 02             	[sp] = r5			  ## download_loop.c:1379:5
 1e17f18:    80 08             	r0 = r8			  ## download_loop.c:1379:5
 1e17f1a:    41 08             	r1 = r4			  ## download_loop.c:1379:5
 1e17f1c:    bf f3 c3 fa       	call -2682 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:1379:5
 1e17f20:    00 fd 02 49       	r0 = r4 | 2			  ## download_loop.c:1381:58
 1e17f24:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e17f26:    bf f3 e9 47       	call -94254 <CRC16 : 1e00efc >			  ## download_loop.c:307:12
 1e17f2a:    81 f5 b8 00       	r1 = h[sp+184] (u)			  ## download_loop.c:1382:31
 1e17f2e:    01 f2 21 10       	if (r1 != r0) goto 66 <active_update_task+0xA7C : 1e17f74 >
 1e17f32:    0c f7 1c a0       	r12 = h[r10 + 28] (u)			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e17f36:    80 af             	r0 = sp + 248			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e17f38:    07 91             	r7 = r0 + 16
 1e17f3a:    c8 ff ee 73 e1 01 	r8 = 31552494 <JL_RESERVED_VM_FILE_NAME : 1e173ee >
 1e17f40:    80 fb 60 19       	r1 = r9 + r6			  ## download_loop.c:1323:9
 1e17f44:    84 af             	r4 = sp + 248			  ## download_loop.c:1323:9
 1e17f46:    02 72             	r2 = 32			  ## download_loop.c:1323:9
 1e17f48:    40 08             	r0 = r4			  ## download_loop.c:1323:9
 1e17f4a:    97 f3 cb 77       	call 3075990 <memcpy : 106ee4 >			  ## download_loop.c:1323:9
 1e17f4e:    02 72             	r2 = 32			  ## download_loop.c:1324:9
 1e17f50:    0d 02             	[sp] = r5			  ## download_loop.c:1324:9
 1e17f52:    c0 08             	r0 = r12			  ## download_loop.c:1324:9
 1e17f54:    41 08             	r1 = r4			  ## download_loop.c:1324:9
 1e17f56:    63 08             	r3 = r6			  ## download_loop.c:1324:9
 1e17f58:    bf f3 a5 fa       	call -2742 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:1324:9
 1e17f5c:    32 70             	r2 = 3			  ## download_loop.c:1326:18
 1e17f5e:    70 08             	r0 = r7			  ## download_loop.c:1326:18
 1e17f60:    81 08             	r1 = r8			  ## download_loop.c:1326:18
 1e17f62:    97 f3 c3 77       	call 3075974 <memcmp : 106eec >			  ## download_loop.c:1326:18
 1e17f66:    0d 20             	if (r0 == 0) goto 26 <active_update_task+0xA8A : 1e17f82 >			  ## download_loop.c:1326:13
 1e17f68:    06 82             	r6 += 32			  ## download_loop.c:1322:48
 1e17f6a:    03 ff 00 62 e8 ff 	if (r6 < 512) goto -48 <active_update_task+0xA48 : 1e17f40 >
 1e17f70:    60 78             	r0 = 134			  ## download_loop.c:1791:13
 1e17f72:    01 18             	goto 2 <active_update_task+0xA7E : 1e17f76 >			  ## download_loop.c:1791:13
 1e17f74:    10 70             	r0 = 1			  ## download_loop.c:1783:13
 1e17f76:    bf f3 88 fa       	call -2800 <update_stop : 1e1748a >
 1e17f7a:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e17f80:    8a 1d             	goto -1260 <active_update_task+0x59E : 1e17a96 >
 1e17f82:    e0 08             	r0 = r14			  ## download_loop.c:1250:63
 1e17f84:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1250:63
 1e17f86:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1250:71
 1e17f88:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1256:34
 1e17f8c:    14 fc 00 02       	r4 = r1 + 512			  ## download_loop.c:1256:34
 1e17f90:    5d 24             	if (r2 == 0) goto 186 <active_update_task+0xB54 : 1e1804c >			  ## download_loop.c:1256:34
 1e17f92:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1256:71
 1e17f96:    5a 20             	if (r0 == 0) goto 180 <active_update_task+0xB54 : 1e1804c >			  ## download_loop.c:1256:71
 1e17f98:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >
 1e17f9e:    07 08             	r7 = r0
 1e17fa0:    00 f6 2c 71       	r0 = [r7 + 300]			  ## download_loop.c:1261:5
 1e17fa4:    08 f5 00 01       	r8 = [sp+256]			  ## download_loop.c:1329:31
 1e17fa8:    0c f5 fc 00       	r12 = [sp+252]			  ## download_loop.c:1328:35
 1e17fac:    06 f6 30 71       	r6 = [r7 + 304]			  ## flash_fs_api.c:88:12
 1e17fb0:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1261:18
 1e17fb2:    00 70             	r0 = 0			  ## download_loop.c:1261:5
 1e17fb4:    01 70             	r1 = 0			  ## download_loop.c:1261:5
 1e17fb6:    05 70             	r5 = 0			  ## download_loop.c:1261:5
 1e17fb8:    83 00             	call r3			  ## download_loop.c:1261:5
 1e17fba:    00 f6 2c 71       	r0 = [r7 + 300]			  ## download_loop.c:1262:5
 1e17fbe:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1262:18
 1e17fc0:    00 70             	r0 = 0			  ## download_loop.c:1262:5
 1e17fc2:    02 72             	r2 = 32			  ## download_loop.c:1262:5
 1e17fc4:    09 72             	r9 = 32			  ## download_loop.c:1262:5
 1e17fc6:    41 08             	r1 = r4			  ## download_loop.c:1262:5
 1e17fc8:    83 00             	call r3			  ## download_loop.c:1262:5
 1e17fca:    e7 fb 18 01       	r7 = sp + 280			  ## download_loop.c:1262:5
 1e17fce:    01 72             	r1 = 32			  ## download_loop.c:1265:5
 1e17fd0:    70 08             	r0 = r7			  ## download_loop.c:1265:5
 1e17fd2:    62 08             	r2 = r6			  ## download_loop.c:1265:5
 1e17fd4:    bf f3 ae 47       	call -94372 <norflash_read : 1e00f34 >			  ## download_loop.c:1265:5
 1e17fd8:    f0 08             	r0 = r15			  ## download_loop.c:1266:5
 1e17fda:    02 72             	r2 = 32			  ## download_loop.c:1266:5
 1e17fdc:    03 70             	r3 = 0			  ## download_loop.c:1266:5
 1e17fde:    19 f5 00 00       	[sp] = r9			  ## download_loop.c:1266:5
 1e17fe2:    71 08             	r1 = r7			  ## download_loop.c:1266:5
 1e17fe4:    bf f3 5f fa       	call -2882 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:1266:5
 1e17fe8:    40 98             	r0 = r4 + 4			  ## download_loop.c:1268:54
 1e17fea:    41 70             	r1 = 4
 1e17fec:    02 fa 00 05       	r2 = b[r0+r5] (u)			  ## download_loop.c:1220:13
 1e17ff0:    01 ff ff 20 07 00 	if (r2 != 255) goto 14 <active_update_task+0xB0C : 1e18004 >			  ## download_loop.c:1220:13
 1e17ff6:    15 80             	r5 += 1			  ## download_loop.c:1219:27
 1e17ff8:    f1 8f             	r1 += -1			  ## download_loop.c:1219:19
 1e17ffa:    45 e0 f7 3f       	if (r5 < 4) goto -18 <active_update_task+0xAF4 : 1e17fec >			  ## download_loop.c:1219:19
 1e17ffe:    60 ff ff 19 0e 00 	if ((r1 & 255) == 0) goto 28 <active_update_task+0xB28 : 1e18020 >
 1e18004:    31 60             	r1 = b[r0 + 3] (u)			  ## download_loop.c:1275:13
 1e18006:    22 60             	r2 = b[r0 + 2] (u)			  ## download_loop.c:1275:13
 1e18008:    10 60             	r0 = b[r0 + 1] (u)			  ## download_loop.c:1275:13
 1e1800a:    43 68             	r3 = b[r4 + 4] (u)			  ## download_loop.c:1275:13
 1e1800c:    05 f5 1c 01       	r5 = [sp+284]			  ## download_loop.c:1275:13
 1e18010:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## download_loop.c:1275:13
 1e18014:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## download_loop.c:1275:13
 1e18018:    d0 fd 80 32       	r3 <= insert(r2, p:16, l:16)			  ## download_loop.c:1275:13
 1e1801c:    35 f2 16 10       	if (r5 != r3) goto 44 <active_update_task+0xB54 : 1e1804c >			  ## download_loop.c:1275:13
 1e18020:    01 99             	r1 = r4 + 16			  ## download_loop.c:1283:54
 1e18022:    02 70             	r2 = 0
 1e18024:    00 71             	r0 = 16
 1e18026:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## download_loop.c:1220:13
 1e1802a:    01 ff ff 30 07 00 	if (r3 != 255) goto 14 <active_update_task+0xB46 : 1e1803e >			  ## download_loop.c:1220:13
 1e18030:    12 80             	r2 += 1			  ## download_loop.c:1219:27
 1e18032:    f0 8f             	r0 += -1			  ## download_loop.c:1219:19
 1e18034:    02 e1 f7 3f       	if (r2 < 16) goto -18 <active_update_task+0xB2E : 1e18026 >			  ## download_loop.c:1219:19
 1e18038:    60 ff ff 09 09 00 	if ((r0 & 255) == 0) goto 18 <active_update_task+0xB58 : 1e18050 >
 1e1803e:    e0 fb 18 01       	r0 = sp + 280
 1e18042:    00 81             	r0 += 16			  ## download_loop.c:1286:9
 1e18044:    02 71             	r2 = 16			  ## download_loop.c:1289:13
 1e18046:    97 f3 51 77       	call 3075746 <memcmp : 106eec >			  ## download_loop.c:1289:13
 1e1804a:    02 20             	if (r0 == 0) goto 4 <active_update_task+0xB58 : 1e18050 >
 1e1804c:    a0 78             	r0 = 138			  ## download_loop.c:1799:13
 1e1804e:    93 1f             	goto -218 <active_update_task+0xA7E : 1e17f76 >			  ## download_loop.c:1799:13
 1e18050:    cd ff c0 23 00 00 	r13 = 9152 <cur_ch : 23c0 >
 1e18056:    4d 1c             	goto -1894 <active_update_task+0x3FA : 1e178f2 >


app_active_update_task_init:
 1e18058:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:311:0
 1e1805a:    c1 ff c0 23 00 00 	r1 = 9152 <cur_ch : 23c0 >			  ## update_main.c:312:9
 1e18060:    04 f6 28 11       	r4 = [r1 + 296]			  ## update_main.c:312:9
 1e18064:    02 f9 64 40       	r2 = b[r4 + 100] (u)			  ## update_main.c:312:17
 1e18068:    01 08             	r1 = r0			  ## update_main.c:312:17
 1e1806a:    01 24             	if (r2 == 0) goto 2 <app_active_update_task_init+0x16 : 1e1806e >			  ## update_main.c:312:17
 1e1806c:    54 01             	{pc, r4} = [sp++]
 1e1806e:    40 fc 50 00       	r0 = r4 + 80			  ## update_main.c:317:27
 1e18072:    02 71             	r2 = 16			  ## update_main.c:317:5
 1e18074:    97 f3 36 77       	call 3075692 <memcpy : 106ee4 >			  ## update_main.c:317:5
 1e18078:    00 f9 5c 40       	r0 = b[r4 + 92] (u)			  ## update_main.c:146:22
 1e1807c:    0e 20             	if (r0 == 0) goto 28 <app_active_update_task_init+0x42 : 1e1809a >			  ## update_main.c:146:9
 1e1807e:    01 70             	r1 = 0			  ## update_main.c:147:9
 1e18080:    40 08             	r0 = r4			  ## update_main.c:147:9
 1e18082:    97 f3 bd 76       	call 3075450 <os_sem_create : 106e00 >			  ## update_main.c:147:9
 1e18086:    c0 ff f8 74 e1 01 	r0 = 31552760 <active_update_task : 1e174f8 >			  ## update_main.c:149:9
 1e1808c:    c2 ff 64 f0 e0 01 	r2 = 31518820 <bluetooth_base_uuid+0x5A : 1e0f064 >			  ## update_main.c:149:9
 1e18092:    41 08             	r1 = r4			  ## update_main.c:149:9
 1e18094:    14 01             	{rets, r4} = [sp++]			  ## update_main.c:149:9
 1e18096:    ff f3 09 a6       	goto -46062 <task_create : 1e0ccac >			  ## update_main.c:149:9
 1e1809a:    40 08             	r0 = r4			  ## update_main.c:151:9
 1e1809c:    bf f3 2c fa       	call -2984 <active_update_task : 1e174f8 >			  ## update_main.c:151:9
 1e180a0:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:151:9


update_module_init:
 1e180a2:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:324:0
 1e180a4:    80 76             	r0 = 104			  ## update_main.c:325:14
 1e180a6:    bf f3 7b 9c       	call -50954 <malloc : 1e0b9a0 >			  ## update_main.c:325:14
 1e180aa:    04 08             	r4 = r0			  ## update_main.c:325:14
 1e180ac:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update_main.c:325:12
 1e180b2:    14 f6 28 01       	[r0 + 296] = r4			  ## update_main.c:325:12
 1e180b6:    09 28             	if (r4 == 0) goto 18 <update_module_init+0x28 : 1e180ca >			  ## update_main.c:325:12
 1e180b8:    01 70             	r1 = 0			  ## update_main.c:327:9
 1e180ba:    82 76             	r2 = 104			  ## update_main.c:327:9
 1e180bc:    40 08             	r0 = r4			  ## update_main.c:327:9
 1e180be:    97 f3 17 77       	call 3075630 <memset : 106ef0 >			  ## update_main.c:327:9
 1e180c2:    c0 ff 02 16 e0 01 	r0 = 31462914 <update_common_state_cbk : 1e01602 >			  ## update_main.c:328:34
 1e180c8:    88 49             	[r4 + 96] = r0			  ## update_main.c:328:34
 1e180ca:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:333:1


bt_f_seek:
 1e180cc:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:57:0
 1e180d2:    07 22             	if (r1 == 0) goto 14 <bt_f_seek+0x16 : 1e180e2 >			  ## lmp_ch_update.c:57:0
 1e180d4:    11 e0 0a 10       	if (r1 != 1) goto 20 <bt_f_seek+0x20 : 1e180ec >			  ## lmp_ch_update.c:57:0
 1e180d8:    01 f6 f8 00       	r1 = [r0 + 248]			  ## lmp_ch_update.c:62:24
 1e180dc:    12 09             	r2 += r1			  ## lmp_ch_update.c:62:24
 1e180de:    21 70             	r1 = 2
 1e180e0:    01 18             	goto 2 <bt_f_seek+0x18 : 1e180e4 >
 1e180e2:    11 70             	r1 = 1
 1e180e4:    12 f6 f8 00       	[r0 + 248] = r2
 1e180e8:    11 f9 20 00       	b[r0 + 32] = r1
 1e180ec:    00 70             	r0 = 0			  ## lmp_ch_update.c:67:5
 1e180ee:    20 00             	rts			  ## lmp_ch_update.c:67:5


bt_f_read:
 1e180f0:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:71:0
 1e180f2:    24 08             	r4 = r2			  ## lmp_ch_update.c:71:0
 1e180f4:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:71:0
 1e180fa:    00 70             	r0 = 0			  ## lmp_ch_update.c:71:0
 1e180fc:    10 f7 44 50       	h[r5 + 68] = r0			  ## lmp_ch_update.c:72:19
 1e18100:    11 f6 fc 50       	[r5 + 252] = r1			  ## lmp_ch_update.c:73:17
 1e18104:    bf f3 12 f5       	call -5596 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:74:5
 1e18108:    03 f6 f8 50       	r3 = [r5 + 248]			  ## lmp_ch_update.c:77:63
 1e1810c:    02 f9 20 50       	r2 = b[r5 + 32] (u)			  ## lmp_ch_update.c:77:5
 1e18110:    40 70             	r0 = 4			  ## lmp_ch_update.c:77:5
 1e18112:    41 08             	r1 = r4			  ## lmp_ch_update.c:77:5
 1e18114:    bf f3 11 f5       	call -5598 <bt_updata_control : 1e16b3a >			  ## lmp_ch_update.c:77:5
 1e18118:    bf f3 23 f5       	call -5562 <bt_updata_get_flag : 1e16b62 >
 1e1811c:    21 f3 0c 00       	if ((r0 & 2) != 0) goto 24 <bt_f_read+0x48 : 1e18138 >
 1e18120:    01 f6 00 51       	r1 = [r5 + 256]			  ## lmp_ch_update.c:79:13
 1e18124:    f9 23             	if (r1 == 0) goto -14 <bt_f_read+0x28 : 1e18118 >			  ## lmp_ch_update.c:79:13
 1e18126:    00 70             	r0 = 0			  ## lmp_ch_update.c:80:13
 1e18128:    81 00             	call r1			  ## lmp_ch_update.c:80:13
 1e1812a:    bf f3 1a f5       	call -5580 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:81:46
 1e1812e:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_read+0x28 : 1e18118 >			  ## lmp_ch_update.c:81:46
 1e18132:    bf f3 fb f4       	call -5642 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:82:17
 1e18136:    0b 18             	goto 22 <bt_f_read+0x5E : 1e1814e >			  ## lmp_ch_update.c:82:17
 1e18138:    bf f3 f8 f4       	call -5648 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:88:5
 1e1813c:    00 f7 44 50       	r0 = h[r5 + 68] (u)			  ## lmp_ch_update.c:89:9
 1e18140:    06 20             	if (r0 == 0) goto 12 <bt_f_read+0x5E : 1e1814e >			  ## lmp_ch_update.c:89:9
 1e18142:    00 f6 f8 50       	r0 = [r5 + 248]			  ## lmp_ch_update.c:92:20
 1e18146:    40 09             	r0 += r4			  ## lmp_ch_update.c:92:20
 1e18148:    10 f6 f8 50       	[r5 + 248] = r0			  ## lmp_ch_update.c:92:20
 1e1814c:    03 18             	goto 6 <bt_f_read+0x64 : 1e18154 >			  ## lmp_ch_update.c:92:20
 1e1814e:    c4 ff ff ff 00 00 	r4 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e18154:    40 08             	r0 = r4			  ## lmp_ch_update.c:95:1
 1e18156:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:95:1


bt_f_open:
 1e18158:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:100:0
 1e1815a:    bf f3 e7 f4       	call -5682 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:105:5
 1e1815e:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:105:5
 1e18164:    00 70             	r0 = 0			  ## lmp_ch_update.c:105:5
 1e18166:    10 f6 f8 50       	[r5 + 248] = r0			  ## lmp_ch_update.c:107:20
 1e1816a:    14 70             	r4 = 1			  ## lmp_ch_update.c:107:20
 1e1816c:    14 f9 20 50       	b[r5 + 32] = r4			  ## lmp_ch_update.c:108:18
 1e18170:    10 70             	r0 = 1			  ## lmp_ch_update.c:109:5
 1e18172:    01 70             	r1 = 0			  ## lmp_ch_update.c:109:5
 1e18174:    02 70             	r2 = 0			  ## lmp_ch_update.c:109:5
 1e18176:    03 70             	r3 = 0			  ## lmp_ch_update.c:109:5
 1e18178:    bf f3 df f4       	call -5698 <bt_updata_control : 1e16b3a >			  ## lmp_ch_update.c:109:5
 1e1817c:    bf f3 f1 f4       	call -5662 <bt_updata_get_flag : 1e16b62 >
 1e18180:    21 f3 0d 00       	if ((r0 & 2) != 0) goto 26 <bt_f_open+0x46 : 1e1819e >
 1e18184:    01 f6 00 51       	r1 = [r5 + 256]			  ## lmp_ch_update.c:124:13
 1e18188:    f9 23             	if (r1 == 0) goto -14 <bt_f_open+0x24 : 1e1817c >			  ## lmp_ch_update.c:124:13
 1e1818a:    00 70             	r0 = 0			  ## lmp_ch_update.c:125:13
 1e1818c:    81 00             	call r1			  ## lmp_ch_update.c:125:13
 1e1818e:    bf f3 e8 f4       	call -5680 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:126:46
 1e18192:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_open+0x24 : 1e1817c >			  ## lmp_ch_update.c:126:46
 1e18196:    bf f3 c9 f4       	call -5742 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:127:17
 1e1819a:    04 70             	r4 = 0			  ## lmp_ch_update.c:127:17
 1e1819c:    02 18             	goto 4 <bt_f_open+0x4A : 1e181a2 >			  ## lmp_ch_update.c:127:17
 1e1819e:    bf f3 c5 f4       	call -5750 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:133:5
 1e181a2:    40 08             	r0 = r4			  ## lmp_ch_update.c:135:1
 1e181a4:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:135:1


bt_f_send_update_len:
 1e181a6:    74 01             	[--sp] = {rets, r4}			  ## lmp_ch_update.c:138:0
 1e181a8:    13 08             	r3 = r1			  ## lmp_ch_update.c:138:0
 1e181aa:    02 08             	r2 = r0			  ## lmp_ch_update.c:138:0
 1e181ac:    bf f3 be f4       	call -5764 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:145:5
 1e181b0:    27 24             	if (r2 == 0) goto 78 <bt_f_send_update_len+0x5A : 1e18200 >			  ## lmp_ch_update.c:145:5
 1e181b2:    00 64             	r0 = b[r2 + 0] (u)			  ## lmp_ch_update.c:150:31
 1e181b4:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_f_send_update_len+0x1C : 1e181c2 >			  ## lmp_ch_update.c:150:13
 1e181b8:    09 30             	if (r0 != 0) goto 18 <bt_f_send_update_len+0x26 : 1e181cc >
 1e181ba:    20 70             	r0 = 2			  ## lmp_ch_update.c:151:13
 1e181bc:    01 70             	r1 = 0			  ## lmp_ch_update.c:151:13
 1e181be:    02 71             	r2 = 16			  ## lmp_ch_update.c:151:13
 1e181c0:    03 18             	goto 6 <bt_f_send_update_len+0x22 : 1e181c8 >
 1e181c2:    20 70             	r0 = 2			  ## lmp_ch_update.c:153:13
 1e181c4:    01 70             	r1 = 0			  ## lmp_ch_update.c:153:13
 1e181c6:    12 71             	r2 = 17			  ## lmp_ch_update.c:153:13
 1e181c8:    bf f3 b7 f4       	call -5778 <bt_updata_control : 1e16b3a >
 1e181cc:    bf f3 c9 f4       	call -5742 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:160:41
 1e181d0:    21 f3 10 00       	if ((r0 & 2) != 0) goto 32 <bt_f_send_update_len+0x4E : 1e181f4 >			  ## lmp_ch_update.c:160:41
 1e181d4:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e181da:    01 f6 00 41       	r1 = [r4 + 256]			  ## lmp_ch_update.c:161:13
 1e181de:    06 22             	if (r1 == 0) goto 12 <bt_f_send_update_len+0x46 : 1e181ec >			  ## lmp_ch_update.c:161:13
 1e181e0:    00 70             	r0 = 0			  ## lmp_ch_update.c:162:13
 1e181e2:    81 00             	call r1			  ## lmp_ch_update.c:162:13
 1e181e4:    bf f3 bd f4       	call -5766 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:163:46
 1e181e8:    01 f3 08 00       	if ((r0 & 2) == 0) goto 16 <bt_f_send_update_len+0x56 : 1e181fc >			  ## lmp_ch_update.c:163:46
 1e181ec:    bf f3 b9 f4       	call -5774 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:160:41
 1e181f0:    01 f3 f3 0f       	if ((r0 & 2) == 0) goto -26 <bt_f_send_update_len+0x34 : 1e181da >			  ## lmp_ch_update.c:160:41
 1e181f4:    bf f3 9a f4       	call -5836 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:169:5
 1e181f8:    10 70             	r0 = 1			  ## lmp_ch_update.c:169:5
 1e181fa:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1
 1e181fc:    bf f3 96 f4       	call -5844 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:164:17
 1e18200:    00 70             	r0 = 0
 1e18202:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1


bt_f_stop:
 1e18204:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:174:0
 1e18206:    04 08             	r4 = r0			  ## lmp_ch_update.c:174:0
 1e18208:    bf f3 90 f4       	call -5856 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:179:5
 1e1820c:    14 e0 03 00       	if (r4 == 1) goto 6 <bt_f_stop+0x12 : 1e18216 >			  ## lmp_ch_update.c:180:9
 1e18210:    20 38             	if (r4 != 0) goto 64 <bt_f_stop+0x4E : 1e18252 >
 1e18212:    00 70             	r0 = 0			  ## lmp_ch_update.c:181:9
 1e18214:    01 18             	goto 2 <bt_f_stop+0x14 : 1e18218 >			  ## lmp_ch_update.c:181:9
 1e18216:    50 70             	r0 = 5			  ## lmp_ch_update.c:183:9
 1e18218:    01 70             	r1 = 0
 1e1821a:    02 70             	r2 = 0
 1e1821c:    03 70             	r3 = 0
 1e1821e:    bf f3 8c f4       	call -5864 <bt_updata_control : 1e16b3a >
 1e18222:    bf f3 9e f4       	call -5828 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:189:41
 1e18226:    21 f3 10 00       	if ((r0 & 2) != 0) goto 32 <bt_f_stop+0x46 : 1e1824a >			  ## lmp_ch_update.c:189:41
 1e1822a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >
 1e18230:    01 f6 00 41       	r1 = [r4 + 256]			  ## lmp_ch_update.c:197:13
 1e18234:    06 22             	if (r1 == 0) goto 12 <bt_f_stop+0x3E : 1e18242 >			  ## lmp_ch_update.c:197:13
 1e18236:    00 70             	r0 = 0			  ## lmp_ch_update.c:198:13
 1e18238:    81 00             	call r1			  ## lmp_ch_update.c:198:13
 1e1823a:    bf f3 92 f4       	call -5852 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:199:46
 1e1823e:    01 f3 10 00       	if ((r0 & 2) == 0) goto 32 <bt_f_stop+0x5E : 1e18262 >			  ## lmp_ch_update.c:199:46
 1e18242:    bf f3 8e f4       	call -5860 <bt_updata_get_flag : 1e16b62 >			  ## lmp_ch_update.c:189:41
 1e18246:    01 f3 f3 0f       	if ((r0 & 2) == 0) goto -26 <bt_f_stop+0x2C : 1e18230 >			  ## lmp_ch_update.c:189:41
 1e1824a:    bf f3 6f f4       	call -5922 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:206:5
 1e1824e:    15 70             	r5 = 1			  ## lmp_ch_update.c:206:5
 1e18250:    0b 18             	goto 22 <bt_f_stop+0x64 : 1e18268 >			  ## lmp_ch_update.c:206:5
 1e18252:    00 70             	r0 = 0			  ## lmp_ch_update.c:185:9
 1e18254:    02 70             	r2 = 0			  ## lmp_ch_update.c:185:9
 1e18256:    03 70             	r3 = 0			  ## lmp_ch_update.c:185:9
 1e18258:    05 70             	r5 = 0			  ## lmp_ch_update.c:185:9
 1e1825a:    41 08             	r1 = r4			  ## lmp_ch_update.c:185:9
 1e1825c:    bf f3 6d f4       	call -5926 <bt_updata_control : 1e16b3a >			  ## lmp_ch_update.c:185:9
 1e18260:    03 18             	goto 6 <bt_f_stop+0x64 : 1e18268 >			  ## lmp_ch_update.c:185:9
 1e18262:    bf f3 63 f4       	call -5946 <bt_updata_clr_flag : 1e16b2c >			  ## lmp_ch_update.c:200:17
 1e18266:    05 70             	r5 = 0			  ## lmp_ch_update.c:200:17
 1e18268:    50 08             	r0 = r5			  ## lmp_ch_update.c:208:1
 1e1826a:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:208:1


lmp_ch_update_init:
 1e1826c:    34 00             	[--sp] = rets			  ## lmp_ch_update.c:231:0
 1e1826e:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:227:29
 1e18274:    10 f6 04 21       	[r2 + 260] = r0			  ## lmp_ch_update.c:226:30
 1e18278:    11 f6 00 21       	[r2 + 256] = r1			  ## lmp_ch_update.c:227:29
 1e1827c:    bf f3 76 f4       	call -5908 <reg_revic_buf_addr : 1e16b6c >			  ## lmp_ch_update.c:234:5
 1e18280:    88 01             	{rets} = [sp++]			  ## lmp_ch_update.c:236:5
 1e18282:    ff f3 7b f4       	goto -5898 <lmp_update_init : 1e16b7c >			  ## lmp_ch_update.c:236:5


bt_updata_handle:
 1e18286:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:216:0
 1e18288:    c5 ff c0 23 00 00 	r5 = 9152 <cur_ch : 23c0 >			  ## lmp_ch_update.c:216:0
 1e1828e:    02 f6 fc 50       	r2 = [r5 + 252]			  ## lmp_ch_update.c:218:9
 1e18292:    14 08             	r4 = r1			  ## lmp_ch_update.c:218:9
 1e18294:    01 08             	r1 = r0
 1e18296:    06 24             	if (r2 == 0) goto 12 <bt_updata_handle+0x1E : 1e182a4 >
 1e18298:    20 08             	r0 = r2			  ## lmp_ch_update.c:219:9
 1e1829a:    42 08             	r2 = r4			  ## lmp_ch_update.c:219:9
 1e1829c:    97 f3 22 76       	call 3075140 <memcpy : 106ee4 >			  ## lmp_ch_update.c:219:9
 1e182a0:    14 f7 44 50       	h[r5 + 68] = r4			  ## lmp_ch_update.c:220:23
 1e182a4:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:222:1


lmp_ch_update_exit:
 1e182a6:    ff f3 73 f4       	goto -5914 <lmp_update_exit : 1e16b90 >			  ## lmp_ch_update.c:240:0


ble_f_seek:
 1e182aa:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:78:0
 1e182b0:    07 22             	if (r1 == 0) goto 14 <ble_f_seek+0x16 : 1e182c0 >			  ## ble_ll_ch_update.c:78:0
 1e182b2:    11 e0 0a 10       	if (r1 != 1) goto 20 <ble_f_seek+0x20 : 1e182ca >			  ## ble_ll_ch_update.c:78:0
 1e182b6:    01 f6 08 01       	r1 = [r0 + 264]			  ## ble_ll_ch_update.c:83:24
 1e182ba:    12 09             	r2 += r1			  ## ble_ll_ch_update.c:83:24
 1e182bc:    21 70             	r1 = 2
 1e182be:    01 18             	goto 2 <ble_f_seek+0x18 : 1e182c2 >
 1e182c0:    11 70             	r1 = 1
 1e182c2:    12 f6 08 01       	[r0 + 264] = r2
 1e182c6:    11 f9 21 00       	b[r0 + 33] = r1
 1e182ca:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:88:5
 1e182cc:    20 00             	rts			  ## ble_ll_ch_update.c:88:5


ble_f_read:
 1e182ce:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:92:0
 1e182d0:    24 08             	r4 = r2			  ## ble_ll_ch_update.c:92:0
 1e182d2:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:92:0
 1e182d8:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:92:0
 1e182da:    65 fc 08 01       	r5 = r6 + 264			  ## ble_ll_ch_update.c:92:0
 1e182de:    48 6a             	b[r5 + 4] = r0			  ## ble_ll_ch_update.c:92:0
 1e182e0:    2c 4a             	[r5 + 8] = r4			  ## ble_ll_ch_update.c:96:25
 1e182e2:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:96:25
 1e182e4:    38 4a             	[r5 + 12] = r0			  ## ble_ll_ch_update.c:97:22
 1e182e6:    49 4a             	[r5 + 16] = r1			  ## ble_ll_ch_update.c:98:22
 1e182e8:    03 4a             	r3 = [r5 + 0]			  ## ble_ll_ch_update.c:100:64
 1e182ea:    02 f9 21 60       	r2 = b[r6 + 33] (u)			  ## ble_ll_ch_update.c:44:5
 1e182ee:    40 70             	r0 = 4			  ## ble_ll_ch_update.c:44:5
 1e182f0:    41 08             	r1 = r4			  ## ble_ll_ch_update.c:44:5
 1e182f2:    bf f3 f1 ee       	call -8734 <ll_update_send_data_handle : 1e160d8 >			  ## ble_ll_ch_update.c:44:5
 1e182f6:    40 6a             	r0 = b[r5 + 4] (u)
 1e182f8:    c5 ff ff ff 00 00 	r5 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e182fe:    00 f3 0f 00       	if ((r0 & 1) == 0) goto 30 <ble_f_read+0x52 : 1e18320 >			  ## ble_ll_ch_update.c:102:5
 1e18302:    01 f6 1c 61       	r1 = [r6 + 284]			  ## ble_ll_ch_update.c:103:13
 1e18306:    16 22             	if (r1 == 0) goto 44 <ble_f_read+0x66 : 1e18334 >			  ## ble_ll_ch_update.c:103:13
 1e18308:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:104:13
 1e1830a:    81 00             	call r1			  ## ble_ll_ch_update.c:104:13
 1e1830c:    00 f6 14 61       	r0 = [r6 + 276]			  ## ble_ll_ch_update.c:107:63
 1e18310:    04 f2 10 10       	if (r4 != r0) goto 32 <ble_f_read+0x66 : 1e18334 >			  ## ble_ll_ch_update.c:107:63
 1e18314:    00 f9 0c 61       	r0 = b[r6 + 268] (u)
 1e18318:    11 fd 01 09       	r1 = r0 ^ 1			  ## ble_ll_ch_update.c:107:44
 1e1831c:    f0 33             	if (r1 != 0) goto -32 <ble_f_read+0x30 : 1e182fe >			  ## ble_ll_ch_update.c:107:44
 1e1831e:    0a 18             	goto 20 <ble_f_read+0x66 : 1e18334 >			  ## ble_ll_ch_update.c:107:44
 1e18320:    00 f6 14 61       	r0 = [r6 + 276]			  ## ble_ll_ch_update.c:113:17
 1e18324:    40 f2 06 10       	if (r0 != r4) goto 12 <ble_f_read+0x66 : 1e18334 >			  ## ble_ll_ch_update.c:113:17
 1e18328:    00 f6 08 61       	r0 = [r6 + 264]			  ## ble_ll_ch_update.c:114:24
 1e1832c:    40 09             	r0 += r4			  ## ble_ll_ch_update.c:114:24
 1e1832e:    10 f6 08 61       	[r6 + 264] = r0			  ## ble_ll_ch_update.c:114:24
 1e18332:    45 08             	r5 = r4			  ## ble_ll_ch_update.c:114:24
 1e18334:    50 08             	r0 = r5			  ## ble_ll_ch_update.c:120:1
 1e18336:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:120:1


ble_f_open:
 1e18338:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:123:0
 1e1833a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:131:18
 1e18340:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:131:18
 1e18342:    11 f6 08 01       	[r0 + 264] = r1			  ## ble_ll_ch_update.c:130:20
 1e18346:    11 70             	r1 = 1			  ## ble_ll_ch_update.c:130:20
 1e18348:    11 f9 21 00       	b[r0 + 33] = r1			  ## ble_ll_ch_update.c:131:18
 1e1834c:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:44:5
 1e1834e:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:44:5
 1e18350:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:44:5
 1e18352:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:44:5
 1e18354:    bf f3 c0 ee       	call -8832 <ll_update_send_data_handle : 1e160d8 >			  ## ble_ll_ch_update.c:44:5
 1e18358:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:134:5
 1e1835a:    30 00             	pc = [sp++]			  ## ble_ll_ch_update.c:134:5


ble_f_send_update_len:
 1e1835c:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:138:0
 1e1835e:    13 08             	r3 = r1			  ## ble_ll_ch_update.c:138:0
 1e18360:    05 20             	if (r0 == 0) goto 10 <ble_f_send_update_len+0x10 : 1e1836c >			  ## ble_ll_ch_update.c:138:0
 1e18362:    20 70             	r0 = 2			  ## ble_ll_ch_update.c:44:5
 1e18364:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:44:5
 1e18366:    02 71             	r2 = 16			  ## ble_ll_ch_update.c:44:5
 1e18368:    bf f3 b6 ee       	call -8852 <ll_update_send_data_handle : 1e160d8 >			  ## ble_ll_ch_update.c:44:5
 1e1836c:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:149:5
 1e1836e:    30 00             	pc = [sp++]			  ## ble_ll_ch_update.c:149:5


ble_f_stop:
 1e18370:    74 01             	[--sp] = {rets, r4}			  ## ble_ll_ch_update.c:153:0
 1e18372:    01 08             	r1 = r0			  ## ble_ll_ch_update.c:153:0
 1e18374:    11 e0 03 00       	if (r1 == 1) goto 6 <ble_f_stop+0xE : 1e1837e >			  ## ble_ll_ch_update.c:156:9
 1e18378:    0a 32             	if (r1 != 0) goto 20 <ble_f_stop+0x1E : 1e1838e >
 1e1837a:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:44:5
 1e1837c:    01 18             	goto 2 <ble_f_stop+0x10 : 1e18380 >			  ## ble_ll_ch_update.c:44:5
 1e1837e:    50 70             	r0 = 5			  ## ble_ll_ch_update.c:44:5
 1e18380:    01 70             	r1 = 0
 1e18382:    02 70             	r2 = 0
 1e18384:    03 70             	r3 = 0
 1e18386:    bf f3 a7 ee       	call -8882 <ll_update_send_data_handle : 1e160d8 >
 1e1838a:    14 70             	r4 = 1
 1e1838c:    06 18             	goto 12 <ble_f_stop+0x2A : 1e1839a >
 1e1838e:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:44:5
 1e18390:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:44:5
 1e18392:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:44:5
 1e18394:    04 70             	r4 = 0			  ## ble_ll_ch_update.c:44:5
 1e18396:    bf f3 9f ee       	call -8898 <ll_update_send_data_handle : 1e160d8 >			  ## ble_ll_ch_update.c:44:5
 1e1839a:    40 08             	r0 = r4			  ## ble_ll_ch_update.c:166:1
 1e1839c:    54 01             	{pc, r4} = [sp++]			  ## ble_ll_ch_update.c:166:1


ble_test_update_exit:
 1e1839e:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:235:0
 1e183a0:    ff f3 02 e0       	goto -16380 <ble_rx_update_handle_register : 1e143a8 >			  ## ble_ll_ch_update.c:243:5


ble_test_update_init:
 1e183a4:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:209:0
 1e183aa:    10 f6 20 21       	[r2 + 288] = r0			  ## ble_ll_ch_update.c:195:30
 1e183ae:    11 f6 1c 21       	[r2 + 284] = r1			  ## ble_ll_ch_update.c:196:29
 1e183b2:    c0 ff bc 83 e1 01 	r0 = 31556540 <ble_updata_handle : 1e183bc >			  ## ble_ll_ch_update.c:215:5
 1e183b8:    ff f3 f6 df       	goto -16404 <ble_rx_update_handle_register : 1e143a8 >			  ## ble_ll_ch_update.c:215:5


ble_updata_handle:
 1e183bc:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:175:0
 1e183be:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## ble_ll_ch_update.c:175:0
 1e183c4:    00 f6 18 41       	r0 = [r4 + 280]			  ## ble_ll_ch_update.c:176:17
 1e183c8:    1d 20             	if (r0 == 0) goto 58 <ble_updata_handle+0x48 : 1e18404 >
 1e183ca:    03 f9 0c 41       	r3 = b[r4 + 268] (u)
 1e183ce:    1a 26             	if (r3 == 0) goto 52 <ble_updata_handle+0x48 : 1e18404 >
 1e183d0:    03 f6 14 41       	r3 = [r4 + 276]			  ## ble_ll_ch_update.c:177:44
 1e183d4:    05 f6 10 41       	r5 = [r4 + 272]			  ## ble_ll_ch_update.c:177:21
 1e183d8:    86 b6             	r6 = r3 + r2			  ## ble_ll_ch_update.c:177:53
 1e183da:    65 f2 02 20       	if (r5 >= r6) goto 4 <ble_updata_handle+0x26 : 1e183e2 >			  ## ble_ll_ch_update.c:177:53
 1e183de:    36 08             	r6 = r3			  ## ble_ll_ch_update.c:182:44
 1e183e0:    05 18             	goto 10 <ble_updata_handle+0x30 : 1e183ec >			  ## ble_ll_ch_update.c:182:44
 1e183e2:    30 09             	r0 += r3			  ## ble_ll_ch_update.c:178:37
 1e183e4:    97 f3 7e 75       	call 3074812 <memcpy : 106ee4 >			  ## ble_ll_ch_update.c:178:13
 1e183e8:    16 f6 14 41       	[r4 + 276] = r6			  ## ble_ll_ch_update.c:179:30
 1e183ec:    65 f2 0a 10       	if (r5 != r6) goto 20 <ble_updata_handle+0x48 : 1e18404 >
 1e183f0:    40 fc 0c 01       	r0 = r4 + 268
 1e183f4:    06 f4 02 09       	[r0 + 24] |= 2			  ## ble_ll_ch_update.c:50:24
 1e183f8:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:50:24
 1e183fa:    09 60             	b[r0 + 0] = r1			  ## ble_ll_ch_update.c:50:24
 1e183fc:    51 40             	r1 = [r0 + 20]			  ## ble_ll_ch_update.c:185:17
 1e183fe:    02 22             	if (r1 == 0) goto 4 <ble_updata_handle+0x48 : 1e18404 >			  ## ble_ll_ch_update.c:185:17
 1e18400:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:186:17
 1e18402:    81 00             	call r1			  ## ble_ll_ch_update.c:186:17
 1e18404:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:191:1


update_thread_resume:
 1e18406:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update_main.c:51:0
 1e1840c:    00 f6 28 01       	r0 = [r0 + 296]			  ## update_main.c:53:18
 1e18410:    d7 f3 fc 74       	goto 3074552 <os_sem_post : 106e0c >			  ## update_main.c:53:5


update_thread_sleep:
 1e18414:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## update_main.c:45:0
 1e1841a:    00 f6 28 01       	r0 = [r0 + 296]			  ## update_main.c:47:25
 1e1841e:    01 fb f4 01       	r1 = 500 <BTCTLER_CONTROLLER_BSS_SIZE+0x34 : 1f4 >			  ## update_main.c:47:12
 1e18422:    d7 f3 f1 74       	goto 3074530 <os_sem_pend : 106e08 >			  ## update_main.c:47:12


loader_info_record_write:
 1e18426:    78 01             	[--sp] = {rets, r8-r4}			  ## download_loop.c:1165:0
 1e18428:    24 08             	r4 = r2			  ## download_loop.c:1165:0
 1e1842a:    15 08             	r5 = r1			  ## download_loop.c:1165:0
 1e1842c:    07 08             	r7 = r0			  ## download_loop.c:1165:0
 1e1842e:    50 08             	r0 = r5			  ## download_loop.c:1174:16
 1e18430:    41 08             	r1 = r4			  ## download_loop.c:1174:16
 1e18432:    72 08             	r2 = r7			  ## download_loop.c:1174:16
 1e18434:    bf f3 21 47       	call -94654 <norflash_write : 1e0127a >			  ## download_loop.c:1174:16
 1e18438:    d6 7f             	r6 = 253			  ## download_loop.c:1174:16
 1e1843a:    04 f2 19 10       	if (r4 != r0) goto 50 <loader_info_record_write+0x4A : 1e18470 >
 1e1843e:    40 08             	r0 = r4			  ## download_loop.c:1180:20
 1e18440:    bf f3 ae 9a       	call -51876 <malloc : 1e0b9a0 >			  ## download_loop.c:1180:20
 1e18444:    08 08             	r8 = r0			  ## download_loop.c:1180:20
 1e18446:    13 20             	if (r0 == 0) goto 38 <loader_info_record_write+0x48 : 1e1846e >
 1e18448:    41 08             	r1 = r4			  ## download_loop.c:1183:20
 1e1844a:    72 08             	r2 = r7			  ## download_loop.c:1183:20
 1e1844c:    bf f3 72 45       	call -95516 <norflash_read : 1e00f34 >			  ## download_loop.c:1183:20
 1e18450:    c6 7f             	r6 = 252			  ## download_loop.c:1183:20
 1e18452:    04 f2 08 10       	if (r4 != r0) goto 16 <loader_info_record_write+0x40 : 1e18466 >			  ## download_loop.c:1183:20
 1e18456:    50 08             	r0 = r5			  ## download_loop.c:1185:22
 1e18458:    81 08             	r1 = r8			  ## download_loop.c:1185:22
 1e1845a:    42 08             	r2 = r4			  ## download_loop.c:1185:22
 1e1845c:    97 f3 46 75       	call 3074700 <memcmp : 106eec >			  ## download_loop.c:1185:22
 1e18460:    f6 07             	r6 = -1			  ## download_loop.c:1185:17
 1e18462:    01 30             	if (r0 != 0) goto 2 <loader_info_record_write+0x40 : 1e18466 >			  ## download_loop.c:1185:17
 1e18464:    06 70             	r6 = 0			  ## download_loop.c:1185:17
 1e18466:    80 08             	r0 = r8			  ## download_loop.c:1196:9
 1e18468:    bf f3 9f 9a       	call -51906 <free : 1e0b9aa >			  ## download_loop.c:1196:9
 1e1846c:    01 18             	goto 2 <loader_info_record_write+0x4A : 1e18470 >			  ## download_loop.c:1196:9
 1e1846e:    e6 7f             	r6 = 254
 1e18470:    80 05             	r0 = r6.b0 (u)			  ## download_loop.c:1202:5
 1e18472:    58 01             	{pc, r8-r4} = [sp++]			  ## download_loop.c:1202:5


part_update_encrypt_key_check:
 1e18474:    77 01             	[--sp] = {rets, r7-r4}			  ## download_loop.c:1490:0
 1e18476:    fe 0b             	sp += -4			  ## download_loop.c:1490:0
 1e18478:    04 08             	r4 = r0			  ## download_loop.c:1490:0
 1e1847a:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/audio_build_release/SDK/lib/driver/cpu/bd19/efuse.c:9:22
 1e18480:    c1 ff 74 31 00 00 	r1 = 12660 <update_bss_start : 3174 >			  ## download_loop.c:1496:50
 1e18486:    01 42             	r1 = [r1 + 0]			  ## download_loop.c:1496:50
 1e18488:    c6 ff c0 23 00 00 	r6 = 9152 <cur_ch : 23c0 >			  ## download_loop.c:1498:5
 1e1848e:    03 f6 2c 61       	r3 = [r6 + 300]			  ## download_loop.c:1498:5
 1e18492:    e5 50             	r5 = h[r0 + 28] (u)			  ## download_loop.c:1501:5
 1e18494:    07 42             	r7 = [r1 + 0]			  ## download_loop.c:1496:58
 1e18496:    22 48             	r2 = [r4 + 8]			  ## download_loop.c:1498:61
 1e18498:    33 46             	r3 = [r3 + 12]			  ## download_loop.c:1498:18
 1e1849a:    00 70             	r0 = 0			  ## download_loop.c:1498:5
 1e1849c:    01 70             	r1 = 0			  ## download_loop.c:1498:5
 1e1849e:    83 00             	call r3			  ## download_loop.c:1498:5
 1e184a0:    00 f6 2c 61       	r0 = [r6 + 300]			  ## download_loop.c:1499:5
 1e184a4:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1499:18
 1e184a6:    76 fc 00 02       	r6 = r7 + 512			  ## download_loop.c:1499:18
 1e184aa:    00 70             	r0 = 0			  ## download_loop.c:1499:5
 1e184ac:    02 72             	r2 = 32			  ## download_loop.c:1499:5
 1e184ae:    07 72             	r7 = 32			  ## download_loop.c:1499:5
 1e184b0:    61 08             	r1 = r6			  ## download_loop.c:1499:5
 1e184b2:    83 00             	call r3			  ## download_loop.c:1499:5
 1e184b4:    23 48             	r3 = [r4 + 8]			  ## download_loop.c:1501:107
 1e184b6:    02 72             	r2 = 32			  ## download_loop.c:1501:5
 1e184b8:    0f 02             	[sp] = r7			  ## download_loop.c:1501:5
 1e184ba:    50 08             	r0 = r5			  ## download_loop.c:1501:5
 1e184bc:    61 08             	r1 = r6			  ## download_loop.c:1501:5
 1e184be:    bf f3 f2 f7       	call -4124 <decode_data_by_user_key : 1e174a6 >			  ## download_loop.c:1501:5
 1e184c2:    20 9c             	r0 = r6 + 2			  ## download_loop.c:1503:49
 1e184c4:    e1 71             	r1 = 30			  ## download_loop.c:307:12
 1e184c6:    bf f3 19 45       	call -95694 <CRC16 : 1e00efc >			  ## download_loop.c:307:12
 1e184ca:    02 5c             	r2 = h[r6 + 0] (u)			  ## download_loop.c:1504:34
 1e184cc:    01 08             	r1 = r0			  ## download_loop.c:307:12
 1e184ce:    f0 07             	r0 = -1			  ## download_loop.c:1504:9
 1e184d0:    21 f2 01 10       	if (r1 != r2) goto 2 <part_update_encrypt_key_check+0x62 : 1e184d6 >			  ## download_loop.c:1504:9
 1e184d4:    00 70             	r0 = 0			  ## download_loop.c:1504:9
 1e184d6:    02 0a             	sp += 4
 1e184d8:    57 01             	{pc, r7-r4} = [sp++]			  ## download_loop.c:1512:5


update_code_end:
 1e184da:    7f 01             	[--sp] = {rets, r15-r4}			  ## clock.c:629:0
 1e184dc:    f2 0b             	sp += -28			  ## clock.c:629:0
 1e184de:    05 70             	r5 = 0			  ## clock.c:629:0
 1e184e0:    1d 02             	[sp+4] = r5			  ## clock.c:638:9
 1e184e2:    c3 ff 80 84 1e 00 	r3 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:642:39
 1e184e8:    c3 0e             	r3 = r0 * r3			  ## clock.c:642:39
 1e184ea:    94 70             	r4 = 9			  ## clock.c:642:39
 1e184ec:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:642:39
 1e184f0:    2c 02             	[sp+8] = r4			  ## clock.c:642:37
 1e184f2:    74 70             	r4 = 7			  ## clock.c:643:39
 1e184f4:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:643:39
 1e184f8:    3c 02             	[sp+12] = r4			  ## clock.c:643:37
 1e184fa:    c4 ff 80 1a 06 00 	r4 = 400000 <text_size+0x48F34 : 61a80 >			  ## clock.c:644:39
 1e18500:    04 0f             	r4 = r0 * r4			  ## clock.c:644:39
 1e18502:    4c 02             	[sp+16] = r4			  ## clock.c:644:37
 1e18504:    34 70             	r4 = 3			  ## clock.c:645:39
 1e18506:    c0 fe 40 33       	r3 = r3 / r4 (u)			  ## clock.c:645:39
 1e1850a:    5b 02             	[sp+20] = r3			  ## clock.c:645:37
 1e1850c:    c3 ff 40 42 0f 00 	r3 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## clock.c:642:39
 1e18512:    c3 0e             	r3 = r0 * r3			  ## clock.c:642:39
 1e18514:    6b 02             	[sp+24] = r3			  ## clock.c:646:37
 1e18516:    c3 ff 32 f2 e0 01 	r3 = 31519282 <bluetooth_base_uuid+0x228 : 1e0f232 >			  ## clock.c:646:37
 1e1851c:    cf ff 36 f2 e0 01 	r15 = 31519286 <bluetooth_base_uuid+0x22C : 1e0f236 >			  ## clock.c:646:37
 1e18522:    cc ff dc 31 00 00 	r12 = 12764 <hdl.30 : 31dc >			  ## clock.c:646:37
 1e18528:    cd ff e0 31 00 00 	r13 = 12768 <hdl.31 : 31e0 >			  ## clock.c:646:37
 1e1852e:    cb ff e2 31 00 00 	r11 = 12770 <hdl.32 : 31e2 >			  ## clock.c:646:37
 1e18534:    12 24             	if (r2 == 0) goto 36 <update_code_end+0x80 : 1e1855a >			  ## clock.c:646:37
 1e18536:    00 f9 00 d0       	r0 = b[r13 + 0] (u)			  ## clock.c:690:52
 1e1853a:    01 f9 00 c0       	r1 = b[r12 + 0] (u)			  ## clock.c:690:22
 1e1853e:    02 f9 00 b0       	r2 = b[r11 + 0] (u)			  ## clock.c:690:79
 1e18542:    00 fa 00 03       	r0 = b[r0+r3] (u)			  ## clock.c:690:52
 1e18546:    43 a0             	r3 = sp + 4			  ## clock.c:690:52
 1e18548:    a1 f6 00 31       	r1 = [r3+r1<<2]			  ## clock.c:690:22
 1e1854c:    02 fa 00 2f       	r2 = b[r2+r15] (u)			  ## clock.c:690:79
 1e18550:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## clock.c:690:50
 1e18554:    c0 fe 20 20       	r2 = r0 / r2 (u)			  ## clock.c:690:77
 1e18558:    43 18             	goto 134 <update_code_end+0x106 : 1e185e0 >
 1e1855a:    c4 ff d8 31 00 00 	r4 = 12760 <hdl.29 : 31d8 >
 1e18560:    ca ff a0 31 00 00 	r10 = 12704 <hdl.5 : 31a0 >
 1e18566:    0e 70             	r14 = 0
 1e18568:    03 18             	goto 6 <update_code_end+0x96 : 1e18570 >
 1e1856a:    42 a0             	r2 = sp + 4
 1e1856c:    a5 f6 00 2e       	r5 = [r2+r14<<2]
 1e18570:    07 70             	r7 = 0
 1e18572:    0d 02             	[sp] = r5
 1e18574:    02 fa 00 73       	r2 = b[r7+r3] (u)
 1e18578:    c0 fe 20 35       	r3 = r5 / r2 (u)
 1e1857c:    06 70             	r6 = 0
 1e1857e:    05 70             	r5 = 0
 1e18580:    02 fa 00 5f       	r2 = b[r5+r15] (u)			  ## clock.c:656:65
 1e18584:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## clock.c:656:63
 1e18588:    68 b4             	r8 = r2 - r1			  ## clock.c:658:43
 1e1858a:    08 e0 10 b0       	ifs (r8 < 0) goto 32 <update_code_end+0xD4 : 1e185ae >
 1e1858e:    08 e0 1d 00       	if (r8 == 0) goto 58 <update_code_end+0xF2 : 1e185cc >			  ## clock.c:665:25
 1e18592:    09 f6 00 40       	r9 = [r4 + 0]			  ## clock.c:677:33
 1e18596:    89 f2 0a 90       	if (r9 <= r8) goto 20 <update_code_end+0xD4 : 1e185ae >			  ## clock.c:677:33
 1e1859a:    18 f6 00 40       	[r4 + 0] = r8			  ## clock.c:678:42
 1e1859e:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:679:40
 1e185a2:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:680:40
 1e185a6:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:681:40
 1e185aa:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:683:48
 1e185ae:    15 80             	r5 += 1			  ## clock.c:655:56
 1e185b0:    16 80             	r6 += 1			  ## clock.c:655:31
 1e185b2:    45 e0 e5 3f       	if (r5 < 4) goto -54 <update_code_end+0xA6 : 1e18580 >			  ## clock.c:655:31
 1e185b6:    17 80             	r7 += 1			  ## clock.c:654:52
 1e185b8:    05 02             	r5 = [sp]			  ## clock.c:654:52
 1e185ba:    c3 ff 32 f2 e0 01 	r3 = 31519282 <bluetooth_base_uuid+0x228 : 1e0f232 >			  ## clock.c:654:52
 1e185c0:    47 e0 d8 3f       	if (r7 < 4) goto -80 <update_code_end+0x9A : 1e18574 >			  ## clock.c:654:52
 1e185c4:    1e 80             	r14 += 1			  ## clock.c:653:51
 1e185c6:    5e e0 d0 9f       	if (r14 <= 5) goto -96 <update_code_end+0x90 : 1e1856a >			  ## clock.c:653:51
 1e185ca:    0a 18             	goto 20 <update_code_end+0x106 : 1e185e0 >			  ## clock.c:653:51
 1e185cc:    c0 f4 00 49       	[r4 + 0] = 0			  ## clock.c:667:42
 1e185d0:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:668:40
 1e185d4:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:669:40
 1e185d8:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:670:40
 1e185dc:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:671:48
 1e185e0:    20 08             	r0 = r2			  ## clock.c:696:1
 1e185e2:    0e 0a             	sp += 28			  ## clock.c:696:1
 1e185e4:    5f 01             	{pc, r15-r4} = [sp++]			  ## clock.c:696:1


__hw_hsb_upper_bound:
 1e185e6:    34 00             	[--sp] = rets			  ## clock.c:799:0
 1e185e8:    c1 ff d8 31 00 00 	r1 = 12760 <hdl.29 : 31d8 >			  ## clock.c:800:22
 1e185ee:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:800:22
 1e185f2:    01 08             	r1 = r0			  ## clock.c:800:22
 1e185f4:    00 7c             	r0 = 192			  ## clock.c:811:5
 1e185f6:    02 70             	r2 = 0			  ## clock.c:811:5
 1e185f8:    70 17             	call -288 <update_code_end : 1e184da >			  ## clock.c:811:5
 1e185fa:    c0 ff a0 31 00 00 	r0 = 12704 <hdl.5 : 31a0 >			  ## clock.c:814:45
 1e18600:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:814:12
 1e18602:    01 70             	r1 = 0			  ## clock.c:814:12
 1e18604:    12 70             	r2 = 1			  ## clock.c:814:12
 1e18606:    88 01             	{rets} = [sp++]			  ## clock.c:814:12
 1e18608:    68 1f             	goto -304 <update_code_end : 1e184da >			  ## clock.c:814:12


voltage_by_freq_pre:
 1e1860a:    c2 ff b4 0f 00 00 	r2 = 4020 <sys_clock_limit+0x4 : fb4 >			  ## clock.c:1098:0
 1e18610:    01 70             	r1 = 0			  ## clock.c:1098:0
 1e18612:    43 f6 14 20       	r3 = [r2 ++= 20]			  ## clock.c:1109:26
 1e18616:    03 f2 03 20       	if (r3 >= r0) goto 6 <voltage_by_freq_pre+0x16 : 1e18620 >			  ## clock.c:1109:26
 1e1861a:    11 80             	r1 += 1			  ## clock.c:1108:33
 1e1861c:    61 e0 f9 bf       	ifs (r1 < 6) goto -14 <voltage_by_freq_pre+0x8 : 1e18612 >
 1e18620:    50 70             	r0 = 5			  ## clock.c:1114:21
 1e18622:    61 e0 01 00       	if (r1 == 6) goto 2 <voltage_by_freq_pre+0x1E : 1e18628 >
 1e18626:    10 08             	r0 = r1			  ## clock.c:1114:21
 1e18628:    c1 ff c8 31 00 00 	r1 = 12744 <hdl.23 : 31c8 >			  ## clock.c:1114:19
 1e1862e:    08 62             	b[r1 + 0] = r0			  ## clock.c:1114:19
 1e18630:    20 00             	rts			  ## clock.c:1115:1


pll_clock_by_all_limit:
 1e18632:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1061:0
 1e18634:    c1 ff c8 31 00 00 	r1 = 12744 <hdl.23 : 31c8 >			  ## clock.c:1062:49
 1e1863a:    02 62             	r2 = b[r1 + 0] (u)			  ## clock.c:1062:25
 1e1863c:    01 fe 14 29       	r1 = r2 * 20			  ## clock.c:1062:25
 1e18640:    c3 ff b0 0f 00 00 	r3 = 4016 <sys_clock_limit : fb0 >			  ## clock.c:1062:25
 1e18646:    81 f6 00 13       	r1 = [r1+r3]			  ## clock.c:1062:25
 1e1864a:    04 08             	r4 = r0
 1e1864c:    f5 07             	r5 = -1
 1e1864e:    41 f2 14 30       	if (r1 < r4) goto 40 <pll_clock_by_all_limit+0x48 : 1e1867a >
 1e18652:    40 71             	r0 = 20			  ## clock.c:1064:25
 1e18654:    80 fe 00 32       	r3 += r2 * r0			  ## clock.c:1064:25
 1e18658:    10 46             	r0 = [r3 + 4]			  ## clock.c:1064:25
 1e1865a:    40 f2 0e 30       	if (r0 < r4) goto 28 <pll_clock_by_all_limit+0x48 : 1e1867a >
 1e1865e:    c0 fe 40 01       	r0 = r1 / r4 (u)			  ## clock.c:1077:35
 1e18662:    06 04             	r6 = r0.b0 (u)			  ## clock.c:1079:9
 1e18664:    26 e0 08 30       	if (r6 < 2) goto 16 <pll_clock_by_all_limit+0x46 : 1e18678 >
 1e18668:    35 0f             	r5 = r6 * r4			  ## clock.c:1082:36
 1e1866a:    50 08             	r0 = r5			  ## clock.c:1085:32
 1e1866c:    bc 17             	call -136 <__hw_hsb_upper_bound : 1e185e6 >			  ## clock.c:1085:32
 1e1866e:    05 f2 04 00       	if (r5 == r0) goto 8 <pll_clock_by_all_limit+0x48 : 1e1867a >
 1e18672:    f6 8f             	r6 += -1			  ## clock.c:1080:37
 1e18674:    26 e0 f8 af       	ifs (r6 >= 2) goto -16 <pll_clock_by_all_limit+0x36 : 1e18668 >
 1e18678:    45 08             	r5 = r4
 1e1867a:    50 08             	r0 = r5			  ## clock.c:1095:1
 1e1867c:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1095:1


__hw_pll_run_pre:
 1e1867e:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:818:0
 1e18680:    d4 0b             	sp += -88			  ## clock.c:818:0
 1e18682:    c1 ff d8 31 00 00 	r1 = 12760 <hdl.29 : 31d8 >			  ## clock.c:821:22
 1e18688:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:821:22
 1e1868c:    01 08             	r1 = r0			  ## clock.c:821:22
 1e1868e:    00 7c             	r0 = 192			  ## clock.c:831:5
 1e18690:    02 70             	r2 = 0			  ## clock.c:831:5
 1e18692:    06 70             	r6 = 0			  ## clock.c:831:5
 1e18694:    22 17             	call -444 <update_code_end : 1e184da >			  ## clock.c:831:5
 1e18696:    c0 ff dc 31 00 00 	r0 = 12764 <hdl.30 : 31dc >			  ## clock.c:833:37
 1e1869c:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:833:37
 1e1869e:    c1 ff bc 31 00 00 	r1 = 12732 <hdl.0.373 : 31bc >			  ## clock.c:833:27
 1e186a4:    c2 ff e0 31 00 00 	r2 = 12768 <hdl.31 : 31e0 >			  ## clock.c:835:35
 1e186aa:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:835:35
 1e186ac:    08 62             	b[r1 + 0] = r0			  ## clock.c:833:27
 1e186ae:    c0 ff e2 31 00 00 	r0 = 12770 <hdl.32 : 31e2 >			  ## clock.c:835:56
 1e186b4:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:835:56
 1e186b6:    91 c0             	r1 = r2 << 2			  ## clock.c:835:42
 1e186b8:    c2 ff a0 31 00 00 	r2 = 12704 <hdl.5 : 31a0 >			  ## clock.c:837:34
 1e186be:    04 64             	r4 = b[r2 + 0] (u)			  ## clock.c:837:34
 1e186c0:    10 09             	r0 += r1			  ## clock.c:835:46
 1e186c2:    c1 ff c0 31 00 00 	r1 = 12736 <hdl.1.374 : 31c0 >			  ## clock.c:835:25
 1e186c8:    08 62             	b[r1 + 0] = r0			  ## clock.c:835:25
 1e186ca:    05 a0             	r5 = sp + 0			  ## clock.c:835:25
 1e186cc:    01 70             	r1 = 0			  ## clock.c:601:9
 1e186ce:    42 74             	r2 = 68			  ## clock.c:601:9
 1e186d0:    50 08             	r0 = r5			  ## clock.c:601:9
 1e186d2:    97 f3 0d 74       	call 3074074 <memset : 106ef0 >			  ## clock.c:601:9
 1e186d6:    c0 ff 80 84 1e 00 	r0 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:604:36
 1e186dc:    20 0e             	r0 = r4 * r0			  ## clock.c:604:36
 1e186de:    91 70             	r1 = 9			  ## clock.c:604:36
 1e186e0:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:604:36
 1e186e4:    19 02             	[sp+4] = r1			  ## clock.c:604:34
 1e186e6:    71 70             	r1 = 7			  ## clock.c:605:36
 1e186e8:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:605:36
 1e186ec:    29 02             	[sp+8] = r1			  ## clock.c:605:34
 1e186ee:    c1 ff 80 1a 06 00 	r1 = 400000 <text_size+0x48F34 : 61a80 >			  ## clock.c:606:36
 1e186f4:    61 0e             	r1 = r4 * r1			  ## clock.c:606:36
 1e186f6:    39 02             	[sp+12] = r1			  ## clock.c:606:34
 1e186f8:    31 70             	r1 = 3			  ## clock.c:607:36
 1e186fa:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:607:36
 1e186fe:    49 02             	[sp+16] = r1			  ## clock.c:607:34
 1e18700:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## clock.c:604:36
 1e18706:    61 0e             	r1 = r4 * r1			  ## clock.c:604:36
 1e18708:    59 02             	[sp+20] = r1			  ## clock.c:608:34
 1e1870a:    21 71             	r1 = 18			  ## clock.c:610:71
 1e1870c:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:610:71
 1e18710:    19 03             	[sp+68] = r1			  ## clock.c:610:34
 1e18712:    e1 70             	r1 = 14			  ## clock.c:611:71
 1e18714:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:611:71
 1e18718:    29 03             	[sp+72] = r1			  ## clock.c:611:34
 1e1871a:    c1 ff 40 0d 03 00 	r1 = 200000 <text_size+0x181F4 : 30d40 >			  ## clock.c:612:71
 1e18720:    61 0e             	r1 = r4 * r1			  ## clock.c:612:71
 1e18722:    39 03             	[sp+76] = r1			  ## clock.c:612:34
 1e18724:    61 70             	r1 = 6			  ## clock.c:613:71
 1e18726:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:613:71
 1e1872a:    48 03             	[sp+80] = r0			  ## clock.c:613:34
 1e1872c:    c0 ff 20 a1 07 00 	r0 = 500000 <text_size+0x615D4 : 7a120 >			  ## clock.c:614:71
 1e18732:    20 0e             	r0 = r4 * r0			  ## clock.c:614:71
 1e18734:    58 03             	[sp+84] = r0			  ## clock.c:614:34
 1e18736:    c0 ff 00 d8 b8 05 	r0 = 96000000 <uECC_vli_cmp_unsafe+0x1A86804 : 1b8d800 >			  ## clock.c:614:34
 1e1873c:    01 70             	r1 = 0			  ## clock.c:614:34
 1e1873e:    42 f6 04 50       	r2 = [r5 ++= 4]			  ## clock.c:617:32
 1e18742:    02 f2 05 00       	if (r2 == r0) goto 10 <__hw_pll_run_pre+0xD2 : 1e18750 >			  ## clock.c:617:32
 1e18746:    11 80             	r1 += 1			  ## clock.c:616:50
 1e18748:    16 80             	r6 += 1			  ## clock.c:616:23
 1e1874a:    71 e1 f8 3f       	if (r1 < 23) goto -16 <__hw_pll_run_pre+0xC0 : 1e1873e >			  ## clock.c:616:23
 1e1874e:    f6 7f             	r6 = 255
 1e18750:    c0 ff e4 31 00 00 	r0 = 12772 <hdl.3 : 31e4 >
 1e18756:    0e 60             	b[r0 + 0] = r6
 1e18758:    01 70             	r1 = 0			  ## clock.c:841:12
 1e1875a:    12 70             	r2 = 1			  ## clock.c:841:12
 1e1875c:    40 08             	r0 = r4			  ## clock.c:841:12
 1e1875e:    bd 16             	call -646 <update_code_end : 1e184da >			  ## clock.c:841:12
 1e18760:    2c 0a             	sp += 88			  ## clock.c:841:12
 1e18762:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:841:5


__hw_clk_limit:
 1e18764:    74 01             	[--sp] = {rets, r4}			  ## clock.c:392:0
 1e18766:    03 70             	r3 = 0			  ## clock.c:392:0
 1e18768:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:396:19
 1e1876a:    14 80             	r4 += 1			  ## clock.c:397:13
 1e1876c:    c0 fe 40 40       	r4 = r0 / r4 (u)			  ## clock.c:397:13
 1e18770:    14 f2 04 90       	if (r4 <= r1) goto 8 <__hw_clk_limit+0x18 : 1e1877c >			  ## clock.c:397:13
 1e18774:    13 80             	r3 += 1			  ## clock.c:396:38
 1e18776:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:396:38
 1e18778:    24 f2 f6 9f       	if (r4 <= r2) goto -20 <__hw_clk_limit+0x4 : 1e18768 >			  ## clock.c:396:38
 1e1877c:    c0 04             	r0 = r3.b0 (u)			  ## clock.c:402:5
 1e1877e:    54 01             	{pc, r4} = [sp++]			  ## clock.c:402:5


clock_all_limit_pre:
 1e18780:    77 01             	[--sp] = {rets, r7-r4}			  ## clock.c:446:0
 1e18782:    15 08             	r5 = r1			  ## clock.c:446:0
 1e18784:    04 08             	r4 = r0			  ## clock.c:446:0
 1e18786:    02 3a             	if (r5 != 0) goto 4 <clock_all_limit_pre+0xC : 1e1878c >			  ## clock.c:446:0
 1e18788:    8f f3 45 56       	call 2010250 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
 1e1878c:    c0 ff c8 31 00 00 	r0 = 12744 <hdl.23 : 31c8 >			  ## clock.c:407:62
 1e18792:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:407:38
 1e18794:    41 71             	r1 = 20			  ## clock.c:407:38
 1e18796:    c6 ff b0 0f 00 00 	r6 = 4016 <sys_clock_limit : fb0 >			  ## clock.c:433:38
 1e1879c:    80 fe 10 60       	r6 += r0 * r1			  ## clock.c:407:38
 1e187a0:    01 4c             	r1 = [r6 + 0]			  ## clock.c:407:38
 1e187a2:    72 70             	r2 = 7			  ## clock.c:407:12
 1e187a4:    40 08             	r0 = r4			  ## clock.c:407:12
 1e187a6:    de 17             	call -68 <__hw_clk_limit : 1e18764 >			  ## clock.c:407:12
 1e187a8:    10 80             	r0 += 1			  ## clock.c:453:23
 1e187aa:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:453:23
 1e187ae:    c0 ff 40 42 0f 00 	r0 = 1000000 <text_size+0xDB6F4 : f4240 >			  ## clock.c:438:35
 1e187b4:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:438:35
 1e187b8:    00 fe 1e 09       	r0 = r0 * 30			  ## clock.c:438:22
 1e187bc:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0x10 : 3e8 >			  ## clock.c:438:47
 1e187c0:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:438:47
 1e187c4:    c2 ff b0 31 00 00 	r2 = 12720 <hdl.19 : 31b0 >			  ## clock.c:455:24
 1e187ca:    31 4c             	r1 = [r6 + 12]			  ## clock.c:433:38
 1e187cc:    08 64             	b[r2 + 0] = r0			  ## clock.c:455:24
 1e187ce:    c0 ff cc 31 00 00 	r0 = 12748 <hdl.13 : 31cc >			  ## clock.c:453:21
 1e187d4:    0c 40             	[r0 + 0] = r4			  ## clock.c:453:21
 1e187d6:    f2 7f             	r2 = 255			  ## clock.c:433:12
 1e187d8:    40 08             	r0 = r4			  ## clock.c:433:12
 1e187da:    c4 17             	call -120 <__hw_clk_limit : 1e18764 >			  ## clock.c:433:12
 1e187dc:    c1 ff ac 31 00 00 	r1 = 12716 <hdl.18 : 31ac >			  ## clock.c:458:21
 1e187e2:    08 62             	b[r1 + 0] = r0			  ## clock.c:458:21
 1e187e4:    c0 fe 50 14       	r1 = r4 / r5 (u)			  ## clock.c:472:27
 1e187e8:    10 fc ff 00       	r0 = r1 + 255			  ## clock.c:474:13
 1e187ec:    05 70             	r5 = 0			  ## clock.c:473:9
 1e187ee:    60 ff ff 19 01 00 	if ((r1 & 255) == 0) goto 2 <clock_all_limit_pre+0x76 : 1e187f6 >
 1e187f4:    05 08             	r5 = r0			  ## clock.c:473:9
 1e187f6:    11 4c             	r1 = [r6 + 4]			  ## clock.c:412:38
 1e187f8:    47 05             	r7 = r5.b0 (u)			  ## clock.c:473:9
 1e187fa:    40 08             	r0 = r4			  ## clock.c:412:12
 1e187fc:    b3 17             	call -154 <__hw_clk_limit : 1e18764 >			  ## clock.c:412:12
 1e187fe:    07 f2 01 80       	if (r7 > r0) goto 2 <clock_all_limit_pre+0x84 : 1e18804 >			  ## clock.c:412:12
 1e18802:    05 08             	r5 = r0			  ## clock.c:476:11
 1e18804:    40 05             	r0 = r5.b0 (u)
 1e18806:    c1 ff b4 31 00 00 	r1 = 12724 <hdl.14 : 31b4 >			  ## clock.c:477:21
 1e1880c:    08 52             	h[r1 + 0] = r0			  ## clock.c:477:21
 1e1880e:    10 80             	r0 += 1			  ## clock.c:478:23
 1e18810:    21 4c             	r1 = [r6 + 8]			  ## clock.c:417:38
 1e18812:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:478:23
 1e18816:    c0 ff d0 31 00 00 	r0 = 12752 <hdl.15 : 31d0 >			  ## clock.c:478:21
 1e1881c:    0c 40             	[r0 + 0] = r4			  ## clock.c:478:21
 1e1881e:    72 70             	r2 = 7			  ## clock.c:417:12
 1e18820:    40 08             	r0 = r4			  ## clock.c:417:12
 1e18822:    a0 17             	call -192 <__hw_clk_limit : 1e18764 >			  ## clock.c:417:12
 1e18824:    c1 ff b8 31 00 00 	r1 = 12728 <hdl.16 : 31b8 >			  ## clock.c:482:21
 1e1882a:    08 62             	b[r1 + 0] = r0			  ## clock.c:482:21
 1e1882c:    10 80             	r0 += 1			  ## clock.c:483:23
 1e1882e:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:483:23
 1e18832:    c1 ff d4 31 00 00 	r1 = 12756 <hdl.17 : 31d4 >			  ## clock.c:483:21
 1e18838:    08 42             	[r1 + 0] = r0			  ## clock.c:483:21
 1e1883a:    57 01             	{pc, r7-r4} = [sp++]			  ## clock.c:489:1


voltage_by_freq_post:
 1e1883c:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1271:0
 1e1883e:    c0 ff c4 31 00 00 	r0 = 12740 <hdl.24 : 31c4 >			  ## clock.c:1271:0
 1e18844:    02 60             	r2 = b[r0 + 0] (u)			  ## clock.c:1271:0
 1e18846:    c0 ff 96 18 1a 00 	r0 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## clock.c:1271:0
 1e1884c:    51 60             	r1 = b[r0 + 5] (u)			  ## clock.c:1271:0
 1e1884e:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## clock.c:1271:0
 1e18852:    21 24             	if (r2 == 0) goto 66 <voltage_by_freq_post+0x5A : 1e18896 >			  ## clock.c:1272:9
 1e18854:    c2 ff c8 31 00 00 	r2 = 12744 <hdl.23 : 31c8 >			  ## clock.c:1273:9
 1e1885a:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1273:9
 1e1885c:    03 fe 03 39       	r3 = r3 * 3			  ## clock.c:1273:9
 1e18860:    c4 ff 8c 0f 00 00 	r4 = 3980 <update_data_start : f8c >			  ## clock.c:1274:9
 1e18866:    03 fa 00 34       	r3 = b[r3+r4] (u)			  ## clock.c:1273:9
 1e1886a:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1273:9
 1e1886e:    51 b6             	r1 |= r3			  ## clock.c:1273:9
 1e18870:    59 60             	b[r0 + 5] = r1			  ## clock.c:1273:9
 1e18872:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1274:9
 1e18874:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1274:9
 1e18876:    35 70             	r5 = 3			  ## clock.c:1274:9
 1e18878:    46 08             	r6 = r4			  ## clock.c:1274:9
 1e1887a:    80 fe 50 63       	r6 += r3 * r5			  ## clock.c:1274:9
 1e1887e:    13 6c             	r3 = b[r6 + 1] (u)			  ## clock.c:1274:9
 1e18880:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1274:9
 1e18884:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1274:9
 1e18888:    51 b6             	r1 |= r3			  ## clock.c:1274:9
 1e1888a:    69 60             	b[r0 + 6] = r1			  ## clock.c:1274:9
 1e1888c:    01 64             	r1 = b[r2 + 0] (u)			  ## clock.c:1275:9
 1e1888e:    80 fe 50 41       	r4 += r1 * r5			  ## clock.c:1275:9
 1e18892:    21 98             	r1 = r4 + 2			  ## clock.c:1275:9
 1e18894:    08 18             	goto 16 <voltage_by_freq_post+0x6A : 1e188a6 >			  ## clock.c:1275:9
 1e18896:    59 60             	b[r0 + 5] = r1			  ## clock.c:1277:9
 1e18898:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1278:9
 1e1889a:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1278:9
 1e1889e:    69 60             	b[r0 + 6] = r1			  ## clock.c:1278:9
 1e188a0:    c1 ff 9e 0f 00 00 	r1 = 3998 <sysvdd_vdc13_table : f9e >			  ## clock.c:1278:9
 1e188a6:    02 60             	r2 = b[r0 + 0] (u)
 1e188a8:    01 62             	r1 = b[r1 + 0] (u)
 1e188aa:    22 fd f8 29       	r2 = r2 & 248
 1e188ae:    21 fd 07 19       	r1 = r1 & 7
 1e188b2:    51 b4             	r1 |= r2
 1e188b4:    09 60             	b[r0 + 0] = r1
 1e188b6:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1281:1


__hw_pll_all_oe:
 1e188b8:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:730:0
 1e188ba:    c0 ff 0c 47 1e 00 	r0 = 1984268 <uECC_vli_cmp_unsafe+0xDD710 : 1e470c >			  ## clock.c:730:0
 1e188c0:    00 f4 02 0a       	[r0 + 0] |= 512			  ## clock.c:731:5
 1e188c4:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:732:5
 1e188c8:    05 fc 00 b9       	r5 = r0 + -18176
 1e188cc:    11 4a             	r1 = [r5 + 4]			  ## clock.c:740:13
 1e188ce:    21 fd 07 19       	r1 = r1 & 7			  ## clock.c:740:13
 1e188d2:    12 fc ff ff       	r2 = r1 + -1			  ## clock.c:740:5
 1e188d6:    01 70             	r1 = 0			  ## clock.c:740:5
 1e188d8:    32 e0 04 80       	if (r2 > 3) goto 8 <.GJTIE187_0_0_+0x2 : 1e188e4 >			  ## clock.c:740:5
 1e188dc:    a2 00             	tbb [r2]


.GJTIS187_0_0_:
 1e188de:    02     < 2 : 0x2 >
 1e188df:    05     < 5 : 0x5 >
 1e188e0:    09     < 9 : 0x9 >
 1e188e1:    0c     < 12 : 0xC >
 1e188e2:    11 70             	r1 = 1
 1e188e4:    04 70             	r4 = 0
 1e188e6:    08 18             	goto 16 <.GJTIE187_0_0_+0x16 : 1e188f8 >
 1e188e8:    12 70             	r2 = 1
 1e188ea:    04 70             	r4 = 0
 1e188ec:    03 70             	r3 = 0
 1e188ee:    06 18             	goto 12 <.GJTIE187_0_0_+0x1A : 1e188fc >
 1e188f0:    13 70             	r3 = 1
 1e188f2:    04 70             	r4 = 0
 1e188f4:    02 18             	goto 4 <.GJTIE187_0_0_+0x18 : 1e188fa >
 1e188f6:    14 70             	r4 = 1
 1e188f8:    03 70             	r3 = 0
 1e188fa:    02 70             	r2 = 0
 1e188fc:    05 4a             	r5 = [r5 + 0]			  ## clock.c:760:13
 1e188fe:    85 fd 20 55       	r5 = uextra(r5, p:4, l:5)			  ## clock.c:760:13
 1e18902:    f5 8f             	r5 += -1			  ## clock.c:760:5
 1e18904:    35 e1 12 80       	if (r5 > 19) goto 36 <.GJTIE187_1_1_+0xE : 1e1892c >			  ## clock.c:760:5
 1e18908:    a5 00             	tbb [r5]


.GJTIS187_1_1_:
 1e1890a:    0a     < 10 : 0xA >
 1e1890b:    0c     < 12 : 0xC >
 1e1890c:    0e     < 14 : 0xE >
 1e1890d:    10     < 16 : 0x10 >
 1e1890e:    11     < 17 : 0x11 >
 1e1890f:    11     < 17 : 0x11 >
 1e18910:    11     < 17 : 0x11 >
 1e18911:    11     < 17 : 0x11 >
 1e18912:    11     < 17 : 0x11 >
 1e18913:    11     < 17 : 0x11 >
 1e18914:    11     < 17 : 0x11 >
 1e18915:    11     < 17 : 0x11 >
 1e18916:    11     < 17 : 0x11 >
 1e18917:    11     < 17 : 0x11 >
 1e18918:    11     < 17 : 0x11 >
 1e18919:    11     < 17 : 0x11 >
 1e1891a:    0a     < 10 : 0xA >
 1e1891b:    0c     < 12 : 0xC >
 1e1891c:    0e     < 14 : 0xE >
 1e1891d:    10     < 16 : 0x10 >
 1e1891e:    11 70             	r1 = 1
 1e18920:    05 18             	goto 10 <.GJTIE187_1_1_+0xE : 1e1892c >
 1e18922:    12 70             	r2 = 1
 1e18924:    03 18             	goto 6 <.GJTIE187_1_1_+0xE : 1e1892c >
 1e18926:    13 70             	r3 = 1
 1e18928:    01 18             	goto 2 <.GJTIE187_1_1_+0xE : 1e1892c >
 1e1892a:    14 70             	r4 = 1
 1e1892c:    05 40             	r5 = [r0 + 0]			  ## clock.c:785:5
 1e1892e:    f5 b0             	r5 &= 4294967293			  ## clock.c:785:5
 1e18930:    c1 fd 08 54       	r5 <= insert(r4, p:1, l:1)			  ## clock.c:785:5
 1e18934:    0d 40             	[r0 + 0] = r5			  ## clock.c:785:5
 1e18936:    04 40             	r4 = [r0 + 0]			  ## clock.c:786:5
 1e18938:    74 b1             	r4 &= 4294967291			  ## clock.c:786:5
 1e1893a:    c1 fd 10 43       	r4 <= insert(r3, p:2, l:1)			  ## clock.c:786:5
 1e1893e:    0c 40             	[r0 + 0] = r4			  ## clock.c:786:5
 1e18940:    03 40             	r3 = [r0 + 0]			  ## clock.c:787:5
 1e18942:    f3 b1             	r3 &= 4294967287			  ## clock.c:787:5
 1e18944:    c1 fd 18 32       	r3 <= insert(r2, p:3, l:1)			  ## clock.c:787:5
 1e18948:    0b 40             	[r0 + 0] = r3			  ## clock.c:787:5
 1e1894a:    02 40             	r2 = [r0 + 0]			  ## clock.c:788:5
 1e1894c:    72 b2             	r2 &= 4294967279			  ## clock.c:788:5
 1e1894e:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## clock.c:788:5
 1e18952:    0a 40             	[r0 + 0] = r2			  ## clock.c:788:5
 1e18954:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:789:1


clock_all_limit_post:
 1e18956:    34 00             	[--sp] = rets			  ## clock.c:587:0
 1e18958:    c0 ff b0 31 00 00 	r0 = 12720 <hdl.19 : 31b0 >			  ## clock.c:591:51
 1e1895e:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:591:9
 1e18960:    c0 ff ac 31 00 00 	r0 = 12716 <hdl.18 : 31ac >			  ## clock.c:591:34
 1e18966:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:591:9
 1e18968:    8f f3 29 59       	call 2011730 <__hw_spi_clk_div : 3bbe >			  ## clock.c:591:9
 1e1896c:    c0 ff 08 00 1e 00 	r0 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## clock.c:591:9
 1e18972:    01 40             	r1 = [r0 + 0]			  ## clock.c:592:9
 1e18974:    c2 ff b4 31 00 00 	r2 = 12724 <hdl.14 : 31b4 >			  ## clock.c:592:9
 1e1897a:    02 54             	r2 = h[r2 + 0] (u)			  ## clock.c:592:9
 1e1897c:    c8 fd 00 12       	r1 <= insert(r2, p:0, l:8)			  ## clock.c:592:9
 1e18980:    09 40             	[r0 + 0] = r1			  ## clock.c:592:9
 1e18982:    01 40             	r1 = [r0 + 0]			  ## clock.c:593:9
 1e18984:    c2 ff b8 31 00 00 	r2 = 12728 <hdl.16 : 31b8 >			  ## clock.c:593:9
 1e1898a:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:593:9
 1e1898c:    31 fd 07 1a       	r1 = r1 & 4294965503			  ## clock.c:593:9
 1e18990:    22 fd 07 29       	r2 = r2 & 7			  ## clock.c:593:9
 1e18994:    c3 fd 40 12       	r1 <= insert(r2, p:8, l:3)			  ## clock.c:593:9
 1e18998:    09 40             	[r0 + 0] = r1			  ## clock.c:593:9
 1e1899a:    30 00             	pc = [sp++]			  ## clock.c:596:1


clk_set:
 1e1899c:    78 01             	[--sp] = {rets, r8-r4}			  ## clock.c:2273:0
 1e1899e:    c1 ff fc f0 e0 01 	r1 = 31518972 <bluetooth_base_uuid+0xF2 : 1e0f0fc >			  ## clock.c:2285:10
 1e189a4:    97 f3 a6 72       	call 3073356 <strcmp : 106ef4 >			  ## clock.c:2285:10
 1e189a8:    66 30             	if (r0 != 0) goto 204 <clk_set+0xDA : 1e18a76 >			  ## clock.c:2285:10
 1e189aa:    c8 ff e8 31 00 00 	r8 = 12776 <clk_set.last_clk : 31e8 >
 1e189b0:    00 f9 00 80       	r0 = b[r8 + 0] (u)
 1e189b4:    60 30             	if (r0 != 0) goto 192 <clk_set+0xDA : 1e18a76 >
 1e189b6:    c6 ff 84 f2 e0 01 	r6 = 31519364 <storage_device_end : 1e0f284 >
 1e189bc:    c7 ff 64 f2 e0 01 	r7 = 31519332 <clock_uart : 1e0f264 >
 1e189c2:    67 f2 06 20       	if (r7 >= r6) goto 12 <clk_set+0x36 : 1e189d2 >
 1e189c6:    74 08             	r4 = r7
 1e189c8:    40 f6 08 40       	r0 = [r4 ++= 8]			  ## clock.c:1519:12
 1e189cc:    80 00             	call r0			  ## clock.c:1519:9
 1e189ce:    64 f2 fb 3f       	if (r4 < r6) goto -10 <clk_set+0x2C : 1e189c8 >
 1e189d2:    c5 ff a8 31 00 00 	r5 = 12712 <hdl.2.372 : 31a8 >
 1e189d8:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1522:17
 1e189da:    43 20             	if (r0 == 0) goto 134 <clk_set+0xC6 : 1e18a62 >			  ## clock.c:1522:17
 1e189dc:    c0 ff 00 6c dc 02 	r0 = 48000000 <uECC_vli_cmp_unsafe+0xCBFC04 : dc6c00 >			  ## clock.c:1364:17
 1e189e2:    01 16             	call -1022 <__hw_hsb_upper_bound : 1e185e6 >			  ## clock.c:1364:17
 1e189e4:    04 08             	r4 = r0			  ## clock.c:1364:17
 1e189e6:    f4 ef 3c 00       	if (r4 == -1) goto 120 <clk_set+0xC6 : 1e18a62 >
 1e189ea:    0f 16             	call -994 <voltage_by_freq_pre : 1e1860a >			  ## clock.c:1370:5
 1e189ec:    40 08             	r0 = r4			  ## clock.c:1374:27
 1e189ee:    21 16             	call -958 <pll_clock_by_all_limit : 1e18632 >			  ## clock.c:1374:27
 1e189f0:    08 4a             	[r5 + 0] = r0			  ## clock.c:1374:25
 1e189f2:    f0 ef 36 00       	if (r0 == -1) goto 108 <clk_set+0xC6 : 1e18a62 >			  ## clock.c:1374:25
 1e189f6:    43 16             	call -890 <__hw_pll_run_pre : 1e1867e >			  ## clock.c:1382:27
 1e189f8:    08 4a             	[r5 + 0] = r0			  ## clock.c:1382:25
 1e189fa:    f0 ef 32 00       	if (r0 == -1) goto 100 <clk_set+0xC6 : 1e18a62 >			  ## clock.c:1382:25
 1e189fe:    41 08             	r1 = r4			  ## clock.c:1388:5
 1e18a00:    bf 16             	call -642 <clock_all_limit_pre : 1e18780 >			  ## clock.c:1388:5
 1e18a02:    97 f3 cb 71       	call 3072918 <local_irq_disable : 106d9c >			  ## clock.c:1390:5
 1e18a06:    08 00             	csync			  ## clock.c:1390:5
 1e18a08:    c4 ff 0c 00 1e 00 	r4 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## clock.c:1390:5
 1e18a0e:    00 48             	r0 = [r4 + 0]			  ## clock.c:1392:5
 1e18a10:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1392:5
 1e18a14:    08 48             	[r4 + 0] = r0			  ## clock.c:1392:5
 1e18a16:    10 48             	r0 = [r4 + 4]			  ## clock.c:1400:5
 1e18a18:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1400:5
 1e18a1c:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1400:5
 1e18a20:    18 48             	[r4 + 4] = r0			  ## clock.c:1400:5
 1e18a22:    08 00             	csync			  ## clock.c:1400:5
 1e18a24:    0b 17             	call -490 <voltage_by_freq_post : 1e1883c >			  ## clock.c:1402:5
 1e18a26:    00 4a             	r0 = [r5 + 0]			  ## clock.c:959:17
 1e18a28:    f0 ef 11 00       	if (r0 == -1) goto 34 <clk_set+0xB2 : 1e18a4e >			  ## clock.c:959:17
 1e18a2c:    10 48             	r0 = [r4 + 4]			  ## clock.c:963:5
 1e18a2e:    c1 ff bc 31 00 00 	r1 = 12732 <hdl.0.373 : 31bc >			  ## clock.c:963:5
 1e18a34:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:963:5
 1e18a36:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:963:5
 1e18a3a:    18 48             	[r4 + 4] = r0			  ## clock.c:963:5
 1e18a3c:    10 48             	r0 = [r4 + 4]			  ## clock.c:964:5
 1e18a3e:    c1 ff c0 31 00 00 	r1 = 12736 <hdl.1.374 : 31c0 >			  ## clock.c:964:5
 1e18a44:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:964:5
 1e18a46:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:964:5
 1e18a4a:    18 48             	[r4 + 4] = r0			  ## clock.c:964:5
 1e18a4c:    35 17             	call -406 <__hw_pll_all_oe : 1e188b8 >			  ## clock.c:966:5
 1e18a4e:    83 17             	call -250 <clock_all_limit_post : 1e18956 >			  ## clock.c:1406:5
 1e18a50:    10 48             	r0 = [r4 + 4]			  ## clock.c:1408:5
 1e18a52:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1408:5
 1e18a56:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1408:5
 1e18a5a:    18 48             	[r4 + 4] = r0			  ## clock.c:1408:5
 1e18a5c:    08 00             	csync			  ## clock.c:1408:5
 1e18a5e:    97 f3 9b 71       	call 3072822 <local_irq_enable : 106d98 >			  ## clock.c:1410:5
 1e18a62:    67 f2 05 20       	if (r7 >= r6) goto 10 <clk_set+0xD4 : 1e18a70 >
 1e18a66:    10 4e             	r0 = [r7 + 4]			  ## clock.c:1527:12
 1e18a68:    80 00             	call r0			  ## clock.c:1527:9
 1e18a6a:    87 80             	r7 += 8			  ## clock.c:1526:5
 1e18a6c:    67 f2 fb 3f       	if (r7 < r6) goto -10 <clk_set+0xCA : 1e18a66 >
 1e18a70:    10 70             	r0 = 1
 1e18a72:    10 f9 00 80       	b[r8 + 0] = r0
 1e18a76:    58 01             	{pc, r8-r4} = [sp++]


clk_voltage_init:
 1e18a78:    c0 ff c4 31 00 00 	r0 = 12740 <hdl.24 : 31c4 >			  ## clock.c:2422:0
 1e18a7e:    11 70             	r1 = 1			  ## clock.c:2422:0
 1e18a80:    09 60             	b[r0 + 0] = r1			  ## clock.c:2422:0
 1e18a82:    20 00             	rts			  ## clock.c:2430:1


clk_early_init:
 1e18a84:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:2359:0
 1e18a86:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## clock.c:1567:22
 1e18a8c:    00 40             	r0 = [r0 + 0]			  ## clock.c:1567:22
 1e18a8e:    00 d2             	r0 = r0 >> 8			  ## clock.c:1567:36
 1e18a90:    71 90             	r1 = r0 + 7			  ## clock.c:1570:5
 1e18a92:    83 fd 08 01       	r0 = uextra(r1, p:1, l:3)			  ## clock.c:1570:5
 1e18a96:    d9 fd 18 01       	r0 <= insert(r1, p:3, l:25)			  ## clock.c:1570:5
 1e18a9a:    a4 fd 00 10       	r1 = sextra(r0, p:0, l:4)			  ## clock.c:1570:5
 1e18a9e:    01 e0 14 b0       	ifs (r1 < 0) goto 40 <clk_early_init+0x46 : 1e18aca >			  ## clock.c:1570:5
 1e18aa2:    20 fd 0f 09       	r0 = r0 & 15
 1e18aa6:    11 70             	r1 = 1
 1e18aa8:    f8 fd 00 01       	r0 = r1 << r0
 1e18aac:    60 ff e1 09 0c 00 	if ((r0 & 225) == 0) goto 24 <clk_early_init+0x46 : 1e18aca >
 1e18ab2:    00 70             	r0 = 0
 1e18ab4:    c1 ff b0 0f 00 00 	r1 = 4016 <sys_clock_limit : fb0 >
 1e18aba:    c2 ff 80 f0 fa 02 	r2 = 50000000 <uECC_vli_cmp_unsafe+0xEA8084 : faf080 >
 1e18ac0:    43 b0             	r3 = r0 + r1			  ## clock.c:1603:47
 1e18ac2:    40 81             	r0 += 20			  ## clock.c:1602:26
 1e18ac4:    3a 46             	[r3 + 12] = r2			  ## clock.c:1603:47
 1e18ac6:    80 e7 fb 1f       	if (r0 != 120) goto -10 <clk_early_init+0x3C : 1e18ac0 >			  ## clock.c:1603:47
 1e18aca:    c0 ff 9c 31 00 00 	r0 = 12700 <hdl.27 : 319c >			  ## clock.c:1614:30
 1e18ad0:    c0 f4 00 09       	[r0 + 0] = 0			  ## clock.c:1614:30
 1e18ad4:    c5 ff 0c 00 1e 00 	r5 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >
 1e18ada:    00 4a             	r0 = [r5 + 0]			  ## clock.c:982:9
 1e18adc:    30 fd 0e 09       	r0 = r0 & 4294967281			  ## clock.c:982:9
 1e18ae0:    08 4a             	[r5 + 0] = r0			  ## clock.c:982:9
 1e18ae2:    c0 ff a4 31 00 00 	r0 = 12708 <hdl.11 : 31a4 >			  ## clock.c:982:9
 1e18ae8:    11 70             	r1 = 1			  ## clock.c:982:9
 1e18aea:    09 60             	b[r0 + 0] = r1			  ## clock.c:982:9
 1e18aec:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## clock.c:1287:16
 1e18af2:    79 15             	call -1294 <__hw_hsb_upper_bound : 1e185e6 >			  ## clock.c:1287:16
 1e18af4:    04 08             	r4 = r0			  ## clock.c:1287:16
 1e18af6:    c6 ff a8 31 00 00 	r6 = 12712 <hdl.2.372 : 31a8 >
 1e18afc:    f4 ef 0c 00       	if (r4 == -1) goto 24 <clk_early_init+0x94 : 1e18b18 >
 1e18b00:    84 15             	call -1272 <voltage_by_freq_pre : 1e1860a >			  ## clock.c:1293:5
 1e18b02:    40 08             	r0 = r4			  ## clock.c:1297:27
 1e18b04:    96 15             	call -1236 <pll_clock_by_all_limit : 1e18632 >			  ## clock.c:1297:27
 1e18b06:    08 4c             	[r6 + 0] = r0			  ## clock.c:1297:25
 1e18b08:    f0 ef 06 00       	if (r0 == -1) goto 12 <clk_early_init+0x94 : 1e18b18 >			  ## clock.c:1297:25
 1e18b0c:    b8 15             	call -1168 <__hw_pll_run_pre : 1e1867e >			  ## clock.c:1305:27
 1e18b0e:    08 4c             	[r6 + 0] = r0			  ## clock.c:1305:25
 1e18b10:    f0 ef 02 00       	if (r0 == -1) goto 4 <clk_early_init+0x94 : 1e18b18 >			  ## clock.c:1305:25
 1e18b14:    41 08             	r1 = r4			  ## clock.c:1311:5
 1e18b16:    34 16             	call -920 <clock_all_limit_pre : 1e18780 >			  ## clock.c:1311:5
 1e18b18:    97 f3 40 71       	call 3072640 <local_irq_disable : 106d9c >			  ## clock.c:1473:5
 1e18b1c:    08 00             	csync			  ## clock.c:1473:5
 1e18b1e:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1475:5
 1e18b20:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1475:5
 1e18b24:    08 4a             	[r5 + 0] = r0			  ## clock.c:1475:5
 1e18b26:    00 f4 01 59       	[r5 + 0] |= 1			  ## clock.c:340:5
 1e18b2a:    40 76             	r0 = 100			  ## clock.c:341:5
 1e18b2c:    8f f3 4b 5b       	call 2012822 <delay : 41c6 >			  ## clock.c:341:5
 1e18b30:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1480:5
 1e18b32:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1480:5
 1e18b36:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1480:5
 1e18b3a:    18 4a             	[r5 + 4] = r0			  ## clock.c:1480:5
 1e18b3c:    08 00             	csync			  ## clock.c:1480:5
 1e18b3e:    7e 16             	call -772 <voltage_by_freq_post : 1e1883c >			  ## clock.c:1482:5
 1e18b40:    54 fc f4 46       	r4 = r5 + 18164			  ## clock.c:1482:5
 1e18b44:    40 48             	r0 = [r4 + 16]			  ## clock.c:1330:9
 1e18b46:    30 fd 60 09       	r0 = r0 & 4294967199			  ## clock.c:1330:9
 1e18b4a:    48 48             	[r4 + 16] = r0			  ## clock.c:1330:9
 1e18b4c:    00 48             	r0 = [r4 + 0]			  ## clock.c:852:5
 1e18b4e:    30 fd 18 09       	r0 = r0 & 4294967271			  ## clock.c:852:5
 1e18b52:    90 b1             	r0 |= 8			  ## clock.c:852:5
 1e18b54:    08 48             	[r4 + 0] = r0			  ## clock.c:852:5
 1e18b56:    00 48             	r0 = [r4 + 0]			  ## clock.c:853:5
 1e18b58:    30 fd e0 09       	r0 = r0 & 4294967071			  ## clock.c:853:5
 1e18b5c:    90 b3             	r0 |= 128			  ## clock.c:853:5
 1e18b5e:    08 48             	[r4 + 0] = r0			  ## clock.c:853:5
 1e18b60:    00 48             	r0 = [r4 + 0]			  ## clock.c:854:5
 1e18b62:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:854:5
 1e18b66:    00 fd 05 0a       	r0 = r0 | 1280			  ## clock.c:854:5
 1e18b6a:    08 48             	[r4 + 0] = r0			  ## clock.c:854:5
 1e18b6c:    00 48             	r0 = [r4 + 0]			  ## clock.c:856:5
 1e18b6e:    70 ba             	r0 &= 4293918719			  ## clock.c:856:5
 1e18b70:    08 48             	[r4 + 0] = r0			  ## clock.c:856:5
 1e18b72:    00 48             	r0 = [r4 + 0]			  ## clock.c:857:5
 1e18b74:    30 fd 60 02       	r0 = r0 & 4294852607			  ## clock.c:857:5
 1e18b78:    10 b8             	r0 |= 65536			  ## clock.c:857:5
 1e18b7a:    08 48             	[r4 + 0] = r0			  ## clock.c:857:5
 1e18b7c:    00 48             	r0 = [r4 + 0]			  ## clock.c:858:5
 1e18b7e:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## clock.c:858:5
 1e18b82:    90 b9             	r0 |= 524288			  ## clock.c:858:5
 1e18b84:    08 48             	[r4 + 0] = r0			  ## clock.c:858:5
 1e18b86:    00 48             	r0 = [r4 + 0]			  ## clock.c:859:5
 1e18b88:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## clock.c:859:5
 1e18b8c:    00 fd 18 0a       	r0 = r0 | 6144			  ## clock.c:859:5
 1e18b90:    08 48             	[r4 + 0] = r0			  ## clock.c:859:5
 1e18b92:    00 48             	r0 = [r4 + 0]			  ## clock.c:371:5
 1e18b94:    70 b0             	r0 &= 4294967294			  ## clock.c:371:5
 1e18b96:    08 48             	[r4 + 0] = r0			  ## clock.c:371:5
 1e18b98:    00 48             	r0 = [r4 + 0]			  ## clock.c:372:5
 1e18b9a:    f0 b0             	r0 &= 4294967293			  ## clock.c:372:5
 1e18b9c:    08 48             	[r4 + 0] = r0			  ## clock.c:372:5
 1e18b9e:    10 48             	r0 = [r4 + 4]			  ## clock.c:372:5
 1e18ba0:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:372:5
 1e18ba4:    90 b5             	r0 |= 2048			  ## clock.c:372:5
 1e18ba6:    18 48             	[r4 + 4] = r0			  ## clock.c:372:5
 1e18ba8:    10 48             	r0 = [r4 + 4]			  ## clock.c:873:5
 1e18baa:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## clock.c:873:5
 1e18bae:    18 48             	[r4 + 4] = r0			  ## clock.c:873:5
 1e18bb0:    20 48             	r0 = [r4 + 8]			  ## clock.c:874:5
 1e18bb2:    c1 ff a0 31 00 00 	r1 = 12704 <hdl.5 : 31a0 >			  ## clock.c:874:5
 1e18bb8:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:874:5
 1e18bba:    c2 70             	r2 = 12			  ## clock.c:874:5
 1e18bbc:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## clock.c:874:5
 1e18bc0:    11 fc fe 0f       	r1 = r1 + 4094			  ## clock.c:874:5
 1e18bc4:    cc fd 00 01       	r0 <= insert(r1, p:0, l:12)			  ## clock.c:874:5
 1e18bc8:    28 48             	[r4 + 8] = r0			  ## clock.c:874:5
 1e18bca:    00 4c             	r0 = [r6 + 0]			  ## clock.c:701:17
 1e18bcc:    f0 ef 23 00       	if (r0 == -1) goto 70 <clk_early_init+0x192 : 1e18c16 >			  ## clock.c:701:17
 1e18bd0:    10 4a             	r0 = [r5 + 4]			  ## clock.c:705:5
 1e18bd2:    c1 ff bc 31 00 00 	r1 = 12732 <hdl.0.373 : 31bc >			  ## clock.c:705:5
 1e18bd8:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:705:5
 1e18bda:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:705:5
 1e18bde:    18 4a             	[r5 + 4] = r0			  ## clock.c:705:5
 1e18be0:    10 4a             	r0 = [r5 + 4]			  ## clock.c:706:5
 1e18be2:    c1 ff c0 31 00 00 	r1 = 12736 <hdl.1.374 : 31c0 >			  ## clock.c:706:5
 1e18be8:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:706:5
 1e18bea:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:706:5
 1e18bee:    18 4a             	[r5 + 4] = r0			  ## clock.c:706:5
 1e18bf0:    00 4a             	r0 = [r5 + 0]			  ## clock.c:720:5
 1e18bf2:    70 b5             	r0 &= 4294966271			  ## clock.c:720:5
 1e18bf4:    08 4a             	[r5 + 0] = r0			  ## clock.c:720:5
 1e18bf6:    00 4a             	r0 = [r5 + 0]			  ## clock.c:722:5
 1e18bf8:    f0 b4             	r0 &= 4294966783			  ## clock.c:722:5
 1e18bfa:    08 4a             	[r5 + 0] = r0			  ## clock.c:722:5
 1e18bfc:    00 4a             	r0 = [r5 + 0]			  ## clock.c:723:5
 1e18bfe:    c1 ff e4 31 00 00 	r1 = 12772 <hdl.3 : 31e4 >			  ## clock.c:723:5
 1e18c04:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:723:5
 1e18c06:    02 fb 0f fe       	r2 = -497 <bank_code_load_addr+0x1E53EB : 1fffe0f >			  ## clock.c:723:5
 1e18c0a:    50 b5             	r0 &= r2			  ## clock.c:723:5
 1e18c0c:    21 fd 1f 19       	r1 = r1 & 31			  ## clock.c:723:5
 1e18c10:    c5 fd 20 01       	r0 <= insert(r1, p:4, l:5)			  ## clock.c:723:5
 1e18c14:    08 4a             	[r5 + 0] = r0			  ## clock.c:723:5
 1e18c16:    50 16             	call -864 <__hw_pll_all_oe : 1e188b8 >			  ## clock.c:881:5
 1e18c18:    00 f4 01 49       	[r4 + 0] |= 1			  ## clock.c:362:5
 1e18c1c:    10 70             	r0 = 1			  ## clock.c:363:5
 1e18c1e:    8f f3 d2 5a       	call 2012580 <delay : 41c6 >			  ## clock.c:363:5
 1e18c22:    00 f4 02 49       	[r4 + 0] |= 2			  ## clock.c:364:5
 1e18c26:    40 71             	r0 = 20			  ## clock.c:365:5
 1e18c28:    8f f3 cd 5a       	call 2012570 <delay : 41c6 >			  ## clock.c:365:5
 1e18c2c:    94 16             	call -728 <clock_all_limit_post : 1e18956 >			  ## clock.c:1356:5
 1e18c2e:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1358:5
 1e18c30:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1358:5
 1e18c34:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1358:5
 1e18c38:    18 4a             	[r5 + 4] = r0			  ## clock.c:1358:5
 1e18c3a:    08 00             	csync			  ## clock.c:1358:5
 1e18c3c:    97 f3 ac 70       	call 3072344 <local_irq_enable : 106d98 >			  ## clock.c:1507:5
 1e18c40:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1652:5
 1e18c42:    30 fd 03 0a       	r0 = r0 & 4294966527			  ## clock.c:1652:5
 1e18c46:    28 4a             	[r5 + 8] = r0			  ## clock.c:1652:5
 1e18c48:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1654:5
 1e18c4a:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:1654:5
 1e18c4e:    28 4a             	[r5 + 8] = r0			  ## clock.c:1654:5
 1e18c50:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1657:5
 1e18c52:    f0 b5             	r0 &= 4294965247			  ## clock.c:1657:5
 1e18c54:    18 4a             	[r5 + 4] = r0			  ## clock.c:1657:5
 1e18c56:    c0 ff 17 18 1a 00 	r0 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## clock.c:1657:5
 1e18c5c:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:2367:5
 1e18c5e:    71 b0             	r1 &= 4294967294			  ## clock.c:2367:5
 1e18c60:    09 60             	b[r0 + 0] = r1			  ## clock.c:2367:5
 1e18c62:    40 fc 14 0d       	r0 = r4 + 3348			  ## clock.c:2369:20
 1e18c66:    00 f4 0f 09       	[r0 + 0] |= 15			  ## clock.c:2369:20
 1e18c6a:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:2369:20

Disassembly of section .mmu_tlb:
report_mmu_tlb_begin:
       0:    00 00 00 00     "\0\0\0\0"
       4:    00 00 00 00     "\0\0\0\0"
       8:    00 00 00 00     "\0\0\0\0"
       c:    00 00 00 00     "\0\0\0\0"
      10:    00 00 00 00     "\0\0\0\0"
      14:    00 00 00 00     "\0\0\0\0"
      18:    00 00 00 00     "\0\0\0\0"
      1c:    00 00 00 00     "\0\0\0\0"
      20:    00 00 00 00     "\0\0\0\0"
      24:    00 00 00 00     "\0\0\0\0"
      28:    00 00 00 00     "\0\0\0\0"
      2c:    00 00 00 00     "\0\0\0\0"
      30:    00 00 00 00     "\0\0\0\0"
      34:    00 00 00 00     "\0\0\0\0"
      38:    00 00 00 00     "\0\0\0\0"
      3c:    00 00 00 00     "\0\0\0\0"
      40:    00 00 00 00     "\0\0\0\0"
      44:    00 00 00 00     "\0\0\0\0"
      48:    00 00 00 00     "\0\0\0\0"
      4c:    00 00 00 00     "\0\0\0\0"
      50:    00 00 00 00     "\0\0\0\0"
      54:    00 00 00 00     "\0\0\0\0"
      58:    00 00 00 00     "\0\0\0\0"
      5c:    00 00 00 00     "\0\0\0\0"
      60:    00 00 00 00     "\0\0\0\0"
      64:    00 00 00 00     "\0\0\0\0"
      68:    00 00 00 00     "\0\0\0\0"
      6c:    00 00 00 00     "\0\0\0\0"
      70:    00 00 00 00     "\0\0\0\0"
      74:    00 00 00 00     "\0\0\0\0"
      78:    00 00 00 00     "\0\0\0\0"
      7c:    00 00 00 00     "\0\0\0\0"
      80:    00 00 00 00     "\0\0\0\0"
      84:    00 00 00 00     "\0\0\0\0"
      88:    00 00 00 00     "\0\0\0\0"
      8c:    00 00 00 00     "\0\0\0\0"
      90:    00 00 00 00     "\0\0\0\0"
      94:    00 00 00 00     "\0\0\0\0"
      98:    00 00 00 00     "\0\0\0\0"
      9c:    00 00 00 00     "\0\0\0\0"
      a0:    00 00 00 00     "\0\0\0\0"
      a4:    00 00 00 00     "\0\0\0\0"
      a8:    00 00 00 00     "\0\0\0\0"
      ac:    00 00 00 00     "\0\0\0\0"
      b0:    00 00 00 00     "\0\0\0\0"
      b4:    00 00 00 00     "\0\0\0\0"
      b8:    00 00 00 00     "\0\0\0\0"
      bc:    00 00 00 00     "\0\0\0\0"
      c0:    00 00 00 00     "\0\0\0\0"
      c4:    00 00 00 00     "\0\0\0\0"
      c8:    00 00 00 00     "\0\0\0\0"
      cc:    00 00 00 00     "\0\0\0\0"
      d0:    00 00 00 00     "\0\0\0\0"
      d4:    00 00 00 00     "\0\0\0\0"
      d8:    00 00 00 00     "\0\0\0\0"
      dc:    00 00 00 00     "\0\0\0\0"
      e0:    00 00 00 00     "\0\0\0\0"
      e4:    00 00 00 00     "\0\0\0\0"
      e8:    00 00 00 00     "\0\0\0\0"
      ec:    00 00 00 00     "\0\0\0\0"
      f0:    00 00 00 00     "\0\0\0\0"
      f4:    00 00 00 00     "\0\0\0\0"
      f8:    00 00 00 00     "\0\0\0\0"
      fc:    00 00 00 00     "\0\0\0\0"
     100:    00 00 00 00     "\0\0\0\0"
     104:    00 00 00 00     "\0\0\0\0"
     108:    00 00 00 00     "\0\0\0\0"
     10c:    00 00 00 00     "\0\0\0\0"
     110:    00 00 00 00     "\0\0\0\0"
     114:    00 00 00 00     "\0\0\0\0"
     118:    00 00 00 00     "\0\0\0\0"
     11c:    00 00 00 00     "\0\0\0\0"
     120:    00 00 00 00     "\0\0\0\0"
     124:    00 00 00 00     "\0\0\0\0"
     128:    00 00 00 00     "\0\0\0\0"
     12c:    00 00 00 00     "\0\0\0\0"
     130:    00 00 00 00     "\0\0\0\0"
     134:    00 00 00 00     "\0\0\0\0"
     138:    00 00 00 00     "\0\0\0\0"
     13c:    00 00 00 00     "\0\0\0\0"
     140:    00 00 00 00     "\0\0\0\0"
     144:    00 00 00 00     "\0\0\0\0"
     148:    00 00 00 00     "\0\0\0\0"
     14c:    00 00 00 00     "\0\0\0\0"
     150:    00 00 00 00     "\0\0\0\0"
     154:    00 00 00 00     "\0\0\0\0"
     158:    00 00 00 00     "\0\0\0\0"
     15c:    00 00 00 00     "\0\0\0\0"
     160:    00 00 00 00     "\0\0\0\0"
     164:    00 00 00 00     "\0\0\0\0"
     168:    00 00 00 00     "\0\0\0\0"
     16c:    00 00 00 00     "\0\0\0\0"
     170:    00 00 00 00     "\0\0\0\0"
     174:    00 00 00 00     "\0\0\0\0"
     178:    00 00 00 00     "\0\0\0\0"
     17c:    00 00 00 00     "\0\0\0\0"
     180:    00 00 00 00     "\0\0\0\0"
     184:    00 00 00 00     "\0\0\0\0"
     188:    00 00 00 00     "\0\0\0\0"
     18c:    00 00 00 00     "\0\0\0\0"
     190:    00 00 00 00     "\0\0\0\0"
     194:    00 00 00 00     "\0\0\0\0"
     198:    00 00 00 00     "\0\0\0\0"
     19c:    00 00 00 00     "\0\0\0\0"
     1a0:    00 00 00 00     "\0\0\0\0"
     1a4:    00 00 00 00     "\0\0\0\0"
     1a8:    00 00 00 00     "\0\0\0\0"
     1ac:    00 00 00 00     "\0\0\0\0"
     1b0:    00 00 00 00     "\0\0\0\0"
     1b4:    00 00 00 00     "\0\0\0\0"
     1b8:    00 00 00 00     "\0\0\0\0"
     1bc:    00 00 00 00     "\0\0\0\0"
     1c0:    00 00 00 00     "\0\0\0\0"
     1c4:    00 00 00 00     "\0\0\0\0"
     1c8:    00 00 00 00     "\0\0\0\0"
     1cc:    00 00 00 00     "\0\0\0\0"
     1d0:    00 00 00 00     "\0\0\0\0"
     1d4:    00 00 00 00     "\0\0\0\0"
     1d8:    00 00 00 00     "\0\0\0\0"
     1dc:    00 00 00 00     "\0\0\0\0"
     1e0:    00 00 00 00     "\0\0\0\0"
     1e4:    00 00 00 00     "\0\0\0\0"
     1e8:    00 00 00 00     "\0\0\0\0"
     1ec:    00 00 00 00     "\0\0\0\0"
     1f0:    00 00 00 00     "\0\0\0\0"
     1f4:    00 00 00 00     "\0\0\0\0"
     1f8:    00 00 00 00     "\0\0\0\0"
     1fc:    00 00 00 00     "\0\0\0\0"
     200:    00 00 00 00     "\0\0\0\0"
     204:    00 00 00 00     "\0\0\0\0"
     208:    00 00 00 00     "\0\0\0\0"
     20c:    00 00 00 00     "\0\0\0\0"
     210:    00 00 00 00     "\0\0\0\0"
     214:    00 00 00 00     "\0\0\0\0"
     218:    00 00 00 00     "\0\0\0\0"
     21c:    00 00 00 00     "\0\0\0\0"
     220:    00 00 00 00     "\0\0\0\0"
     224:    00 00 00 00     "\0\0\0\0"
     228:    00 00 00 00     "\0\0\0\0"
     22c:    00 00 00 00     "\0\0\0\0"
     230:    00 00 00 00     "\0\0\0\0"
     234:    00 00 00 00     "\0\0\0\0"
     238:    00 00 00 00     "\0\0\0\0"
     23c:    00 00 00 00     "\0\0\0\0"
     240:    00 00 00 00     "\0\0\0\0"
     244:    00 00 00 00     "\0\0\0\0"
     248:    00 00 00 00     "\0\0\0\0"
     24c:    00 00 00 00     "\0\0\0\0"
     250:    00 00 00 00     "\0\0\0\0"
     254:    00 00 00 00     "\0\0\0\0"
     258:    00 00 00 00     "\0\0\0\0"
     25c:    00 00 00 00     "\0\0\0\0"
     260:    00 00 00 00     "\0\0\0\0"
     264:    00 00 00 00     "\0\0\0\0"
     268:    00 00 00 00     "\0\0\0\0"
     26c:    00 00 00 00     "\0\0\0\0"
     270:    00 00 00 00     "\0\0\0\0"
     274:    00 00 00 00     "\0\0\0\0"
     278:    00 00 00 00     "\0\0\0\0"
     27c:    00 00 00 00     "\0\0\0\0"
     280:    00 00 00 00     "\0\0\0\0"
     284:    00 00 00 00     "\0\0\0\0"
     288:    00 00 00 00     "\0\0\0\0"
     28c:    00 00 00 00     "\0\0\0\0"
     290:    00 00 00 00     "\0\0\0\0"
     294:    00 00 00 00     "\0\0\0\0"
     298:    00 00 00 00     "\0\0\0\0"
     29c:    00 00 00 00     "\0\0\0\0"
     2a0:    00 00 00 00     "\0\0\0\0"
     2a4:    00 00 00 00     "\0\0\0\0"
     2a8:    00 00 00 00     "\0\0\0\0"
     2ac:    00 00 00 00     "\0\0\0\0"
     2b0:    00 00 00 00     "\0\0\0\0"
     2b4:    00 00 00 00     "\0\0\0\0"
     2b8:    00 00 00 00     "\0\0\0\0"
     2bc:    00 00 00 00     "\0\0\0\0"
     2c0:    00 00 00 00     "\0\0\0\0"
     2c4:    00 00 00 00     "\0\0\0\0"
     2c8:    00 00 00 00     "\0\0\0\0"
     2cc:    00 00 00 00     "\0\0\0\0"
     2d0:    00 00 00 00     "\0\0\0\0"
     2d4:    00 00 00 00     "\0\0\0\0"
     2d8:    00 00 00 00     "\0\0\0\0"
     2dc:    00 00 00 00     "\0\0\0\0"
     2e0:    00 00 00 00     "\0\0\0\0"
     2e4:    00 00 00 00     "\0\0\0\0"
     2e8:    00 00 00 00     "\0\0\0\0"
     2ec:    00 00 00 00     "\0\0\0\0"
     2f0:    00 00 00 00     "\0\0\0\0"
     2f4:    00 00 00 00     "\0\0\0\0"
     2f8:    00 00 00 00     "\0\0\0\0"
     2fc:    00 00 00 00     "\0\0\0\0"
     300:    00 00 00 00     "\0\0\0\0"
     304:    00 00 00 00     "\0\0\0\0"
     308:    00 00 00 00     "\0\0\0\0"
     30c:    00 00 00 00     "\0\0\0\0"
     310:    00 00 00 00     "\0\0\0\0"
     314:    00 00 00 00     "\0\0\0\0"
     318:    00 00 00 00     "\0\0\0\0"
     31c:    00 00 00 00     "\0\0\0\0"
     320:    00 00 00 00     "\0\0\0\0"
     324:    00 00 00 00     "\0\0\0\0"
     328:    00 00 00 00     "\0\0\0\0"
     32c:    00 00 00 00     "\0\0\0\0"
     330:    00 00 00 00     "\0\0\0\0"
     334:    00 00 00 00     "\0\0\0\0"
     338:    00 00 00 00     "\0\0\0\0"
     33c:    00 00 00 00     "\0\0\0\0"
     340:    00 00 00 00     "\0\0\0\0"
     344:    00 00 00 00     "\0\0\0\0"
     348:    00 00 00 00     "\0\0\0\0"
     34c:    00 00 00 00     "\0\0\0\0"
     350:    00 00 00 00     "\0\0\0\0"
     354:    00 00 00 00     "\0\0\0\0"
     358:    00 00 00 00     "\0\0\0\0"
     35c:    00 00 00 00     "\0\0\0\0"
     360:    00 00 00 00     "\0\0\0\0"
     364:    00 00 00 00     "\0\0\0\0"
     368:    00 00 00 00     "\0\0\0\0"
     36c:    00 00 00 00     "\0\0\0\0"
     370:    00 00 00 00     "\0\0\0\0"
     374:    00 00 00 00     "\0\0\0\0"
     378:    00 00 00 00     "\0\0\0\0"
     37c:    00 00 00 00     "\0\0\0\0"
     380:    00 00 00 00     "\0\0\0\0"
     384:    00 00 00 00     "\0\0\0\0"
     388:    00 00 00 00     "\0\0\0\0"
     38c:    00 00 00 00     "\0\0\0\0"
     390:    00 00 00 00     "\0\0\0\0"
     394:    00 00 00 00     "\0\0\0\0"
     398:    00 00 00 00     "\0\0\0\0"
     39c:    00 00 00 00     "\0\0\0\0"
     3a0:    00 00 00 00     "\0\0\0\0"
     3a4:    00 00 00 00     "\0\0\0\0"
     3a8:    00 00 00 00     "\0\0\0\0"
     3ac:    00 00 00 00     "\0\0\0\0"
     3b0:    00 00 00 00     "\0\0\0\0"
     3b4:    00 00 00 00     "\0\0\0\0"
     3b8:    00 00 00 00     "\0\0\0\0"
     3bc:    00 00 00 00     "\0\0\0\0"
     3c0:    00 00 00 00     "\0\0\0\0"
     3c4:    00 00 00 00     "\0\0\0\0"
     3c8:    00 00 00 00     "\0\0\0\0"
     3cc:    00 00 00 00     "\0\0\0\0"
     3d0:    00 00 00 00     "\0\0\0\0"
     3d4:    00 00 00 00     "\0\0\0\0"
     3d8:    00 00 00 00     "\0\0\0\0"
     3dc:    00 00 00 00     "\0\0\0\0"
     3e0:    00 00 00 00     "\0\0\0\0"
     3e4:    00 00 00 00     "\0\0\0\0"
     3e8:    00 00 00 00     "\0\0\0\0"
     3ec:    00 00 00 00     "\0\0\0\0"
     3f0:    00 00 00 00     "\0\0\0\0"
     3f4:    00 00 00 00     "\0\0\0\0"
     3f8:    00 00 00 00     "\0\0\0\0"
     3fc:    00 00 00 00     "\0\0\0\0"
     400:    00 00 00 00     "\0\0\0\0"
     404:    00 00 00 00     "\0\0\0\0"
     408:    00 00 00 00     "\0\0\0\0"
     40c:    00 00 00 00     "\0\0\0\0"
     410:    00 00 00 00     "\0\0\0\0"
     414:    00 00 00 00     "\0\0\0\0"
     418:    00 00 00 00     "\0\0\0\0"
     41c:    00 00 00 00     "\0\0\0\0"
     420:    00 00 00 00     "\0\0\0\0"
     424:    00 00 00 00     "\0\0\0\0"
     428:    00 00 00 00     "\0\0\0\0"
     42c:    00 00 00 00     "\0\0\0\0"
     430:    00 00 00 00     "\0\0\0\0"
     434:    00 00 00 00     "\0\0\0\0"
     438:    00 00 00 00     "\0\0\0\0"
     43c:    00 00 00 00     "\0\0\0\0"
     440:    00 00 00 00     "\0\0\0\0"
     444:    00 00 00 00     "\0\0\0\0"
     448:    00 00 00 00     "\0\0\0\0"
     44c:    00 00 00 00     "\0\0\0\0"
     450:    00 00 00 00     "\0\0\0\0"
     454:    00 00 00 00     "\0\0\0\0"
     458:    00 00 00 00     "\0\0\0\0"
     45c:    00 00 00 00     "\0\0\0\0"
     460:    00 00 00 00     "\0\0\0\0"
     464:    00 00 00 00     "\0\0\0\0"
     468:    00 00 00 00     "\0\0\0\0"
     46c:    00 00 00 00     "\0\0\0\0"
     470:    00 00 00 00     "\0\0\0\0"
     474:    00 00 00 00     "\0\0\0\0"
     478:    00 00 00 00     "\0\0\0\0"
     47c:    00 00 00 00     "\0\0\0\0"
     480:    00 00 00 00     "\0\0\0\0"
     484:    00 00 00 00     "\0\0\0\0"
     488:    00 00 00 00     "\0\0\0\0"
     48c:    00 00 00 00     "\0\0\0\0"
     490:    00 00 00 00     "\0\0\0\0"
     494:    00 00 00 00     "\0\0\0\0"
     498:    00 00 00 00     "\0\0\0\0"
     49c:    00 00 00 00     "\0\0\0\0"
     4a0:    00 00 00 00     "\0\0\0\0"
     4a4:    00 00 00 00     "\0\0\0\0"
     4a8:    00 00 00 00     "\0\0\0\0"
     4ac:    00 00 00 00     "\0\0\0\0"
     4b0:    00 00 00 00     "\0\0\0\0"
     4b4:    00 00 00 00     "\0\0\0\0"
     4b8:    00 00 00 00     "\0\0\0\0"
     4bc:    00 00 00 00     "\0\0\0\0"
     4c0:    00 00 00 00     "\0\0\0\0"
     4c4:    00 00 00 00     "\0\0\0\0"
     4c8:    00 00 00 00     "\0\0\0\0"
     4cc:    00 00 00 00     "\0\0\0\0"
     4d0:    00 00 00 00     "\0\0\0\0"
     4d4:    00 00 00 00     "\0\0\0\0"
     4d8:    00 00 00 00     "\0\0\0\0"
     4dc:    00 00 00 00     "\0\0\0\0"
     4e0:    00 00 00 00     "\0\0\0\0"
     4e4:    00 00 00 00     "\0\0\0\0"
     4e8:    00 00 00 00     "\0\0\0\0"
     4ec:    00 00 00 00     "\0\0\0\0"
     4f0:    00 00 00 00     "\0\0\0\0"
     4f4:    00 00 00 00     "\0\0\0\0"
     4f8:    00 00 00 00     "\0\0\0\0"
     4fc:    00 00 00 00     "\0\0\0\0"
     500:    00 00 00 00     "\0\0\0\0"
     504:    00 00 00 00     "\0\0\0\0"
     508:    00 00 00 00     "\0\0\0\0"
     50c:    00 00 00 00     "\0\0\0\0"
     510:    00 00 00 00     "\0\0\0\0"
     514:    00 00 00 00     "\0\0\0\0"
     518:    00 00 00 00     "\0\0\0\0"
     51c:    00 00 00 00     "\0\0\0\0"
     520:    00 00 00 00     "\0\0\0\0"
     524:    00 00 00 00     "\0\0\0\0"
     528:    00 00 00 00     "\0\0\0\0"
     52c:    00 00 00 00     "\0\0\0\0"
     530:    00 00 00 00     "\0\0\0\0"
     534:    00 00 00 00     "\0\0\0\0"
     538:    00 00 00 00     "\0\0\0\0"
     53c:    00 00 00 00     "\0\0\0\0"
     540:    00 00 00 00     "\0\0\0\0"
     544:    00 00 00 00     "\0\0\0\0"
     548:    00 00 00 00     "\0\0\0\0"
     54c:    00 00 00 00     "\0\0\0\0"
     550:    00 00 00 00     "\0\0\0\0"
     554:    00 00 00 00     "\0\0\0\0"
     558:    00 00 00 00     "\0\0\0\0"
     55c:    00 00 00 00     "\0\0\0\0"
     560:    00 00 00 00     "\0\0\0\0"
     564:    00 00 00 00     "\0\0\0\0"
     568:    00 00 00 00     "\0\0\0\0"
     56c:    00 00 00 00     "\0\0\0\0"
     570:    00 00 00 00     "\0\0\0\0"
     574:    00 00 00 00     "\0\0\0\0"
     578:    00 00 00 00     "\0\0\0\0"
     57c:    00 00 00 00     "\0\0\0\0"
     580:    00 00 00 00     "\0\0\0\0"
     584:    00 00 00 00     "\0\0\0\0"
     588:    00 00 00 00     "\0\0\0\0"
     58c:    00 00 00 00     "\0\0\0\0"
     590:    00 00 00 00     "\0\0\0\0"
     594:    00 00 00 00     "\0\0\0\0"
     598:    00 00 00 00     "\0\0\0\0"
     59c:    00 00 00 00     "\0\0\0\0"
     5a0:    00 00 00 00     "\0\0\0\0"
     5a4:    00 00 00 00     "\0\0\0\0"
     5a8:    00 00 00 00     "\0\0\0\0"
     5ac:    00 00 00 00     "\0\0\0\0"
     5b0:    00 00 00 00     "\0\0\0\0"
     5b4:    00 00 00 00     "\0\0\0\0"
     5b8:    00 00 00 00     "\0\0\0\0"
     5bc:    00 00 00 00     "\0\0\0\0"
     5c0:    00 00 00 00     "\0\0\0\0"
     5c4:    00 00 00 00     "\0\0\0\0"
     5c8:    00 00 00 00     "\0\0\0\0"
     5cc:    00 00 00 00     "\0\0\0\0"
     5d0:    00 00 00 00     "\0\0\0\0"
     5d4:    00 00 00 00     "\0\0\0\0"
     5d8:    00 00 00 00     "\0\0\0\0"
     5dc:    00 00 00 00     "\0\0\0\0"
     5e0:    00 00 00 00     "\0\0\0\0"
     5e4:    00 00 00 00     "\0\0\0\0"
     5e8:    00 00 00 00     "\0\0\0\0"
     5ec:    00 00 00 00     "\0\0\0\0"
     5f0:    00 00 00 00     "\0\0\0\0"
     5f4:    00 00 00 00     "\0\0\0\0"
     5f8:    00 00 00 00     "\0\0\0\0"
     5fc:    00 00 00 00     "\0\0\0\0"
     600:    00 00 00 00     "\0\0\0\0"
     604:    00 00 00 00     "\0\0\0\0"
     608:    00 00 00 00     "\0\0\0\0"
     60c:    00 00 00 00     "\0\0\0\0"
     610:    00 00 00 00     "\0\0\0\0"
     614:    00 00 00 00     "\0\0\0\0"
     618:    00 00 00 00     "\0\0\0\0"
     61c:    00 00 00 00     "\0\0\0\0"
     620:    00 00 00 00     "\0\0\0\0"
     624:    00 00 00 00     "\0\0\0\0"
     628:    00 00 00 00     "\0\0\0\0"
     62c:    00 00 00 00     "\0\0\0\0"
     630:    00 00 00 00     "\0\0\0\0"
     634:    00 00 00 00     "\0\0\0\0"
     638:    00 00 00 00     "\0\0\0\0"
     63c:    00 00 00 00     "\0\0\0\0"
     640:    00 00 00 00     "\0\0\0\0"
     644:    00 00 00 00     "\0\0\0\0"
     648:    00 00 00 00     "\0\0\0\0"
     64c:    00 00 00 00     "\0\0\0\0"
     650:    00 00 00 00     "\0\0\0\0"
     654:    00 00 00 00     "\0\0\0\0"
     658:    00 00 00 00     "\0\0\0\0"
     65c:    00 00 00 00     "\0\0\0\0"
     660:    00 00 00 00     "\0\0\0\0"
     664:    00 00 00 00     "\0\0\0\0"
     668:    00 00 00 00     "\0\0\0\0"
     66c:    00 00 00 00     "\0\0\0\0"
     670:    00 00 00 00     "\0\0\0\0"
     674:    00 00 00 00     "\0\0\0\0"
     678:    00 00 00 00     "\0\0\0\0"
     67c:    00 00 00 00     "\0\0\0\0"
     680:    00 00 00 00     "\0\0\0\0"
     684:    00 00 00 00     "\0\0\0\0"
     688:    00 00 00 00     "\0\0\0\0"
     68c:    00 00 00 00     "\0\0\0\0"
     690:    00 00 00 00     "\0\0\0\0"
     694:    00 00 00 00     "\0\0\0\0"
     698:    00 00 00 00     "\0\0\0\0"
     69c:    00 00 00 00     "\0\0\0\0"
     6a0:    00 00 00 00     "\0\0\0\0"
     6a4:    00 00 00 00     "\0\0\0\0"
     6a8:    00 00 00 00     "\0\0\0\0"
     6ac:    00 00 00 00     "\0\0\0\0"
     6b0:    00 00 00 00     "\0\0\0\0"
     6b4:    00 00 00 00     "\0\0\0\0"
     6b8:    00 00 00 00     "\0\0\0\0"
     6bc:    00 00 00 00     "\0\0\0\0"
     6c0:    00 00 00 00     "\0\0\0\0"
     6c4:    00 00 00 00     "\0\0\0\0"
     6c8:    00 00 00 00     "\0\0\0\0"
     6cc:    00 00 00 00     "\0\0\0\0"
     6d0:    00 00 00 00     "\0\0\0\0"
     6d4:    00 00 00 00     "\0\0\0\0"
     6d8:    00 00 00 00     "\0\0\0\0"
     6dc:    00 00 00 00     "\0\0\0\0"
     6e0:    00 00 00 00     "\0\0\0\0"
     6e4:    00 00 00 00     "\0\0\0\0"
     6e8:    00 00 00 00     "\0\0\0\0"
     6ec:    00 00 00 00     "\0\0\0\0"
     6f0:    00 00 00 00     "\0\0\0\0"
     6f4:    00 00 00 00     "\0\0\0\0"
     6f8:    00 00 00 00     "\0\0\0\0"
     6fc:    00 00 00 00     "\0\0\0\0"
     700:    00 00 00 00     "\0\0\0\0"
     704:    00 00 00 00     "\0\0\0\0"
     708:    00 00 00 00     "\0\0\0\0"
     70c:    00 00 00 00     "\0\0\0\0"
     710:    00 00 00 00     "\0\0\0\0"
     714:    00 00 00 00     "\0\0\0\0"
     718:    00 00 00 00     "\0\0\0\0"
     71c:    00 00 00 00     "\0\0\0\0"
     720:    00 00 00 00     "\0\0\0\0"
     724:    00 00 00 00     "\0\0\0\0"
     728:    00 00 00 00     "\0\0\0\0"
     72c:    00 00 00 00     "\0\0\0\0"
     730:    00 00 00 00     "\0\0\0\0"
     734:    00 00 00 00     "\0\0\0\0"
     738:    00 00 00 00     "\0\0\0\0"
     73c:    00 00 00 00     "\0\0\0\0"
     740:    00 00 00 00     "\0\0\0\0"
     744:    00 00 00 00     "\0\0\0\0"
     748:    00 00 00 00     "\0\0\0\0"
     74c:    00 00 00 00     "\0\0\0\0"
     750:    00 00 00 00     "\0\0\0\0"
     754:    00 00 00 00     "\0\0\0\0"
     758:    00 00 00 00     "\0\0\0\0"
     75c:    00 00 00 00     "\0\0\0\0"
     760:    00 00 00 00     "\0\0\0\0"
     764:    00 00 00 00     "\0\0\0\0"
     768:    00 00 00 00     "\0\0\0\0"
     76c:    00 00 00 00     "\0\0\0\0"
     770:    00 00 00 00     "\0\0\0\0"
     774:    00 00 00 00     "\0\0\0\0"
     778:    00 00 00 00     "\0\0\0\0"
     77c:    00 00 00 00     "\0\0\0\0"
     780:    00 00 00 00     "\0\0\0\0"
     784:    00 00 00 00     "\0\0\0\0"
     788:    00 00 00 00     "\0\0\0\0"
     78c:    00 00 00 00     "\0\0\0\0"
     790:    00 00 00 00     "\0\0\0\0"
     794:    00 00 00 00     "\0\0\0\0"
     798:    00 00 00 00     "\0\0\0\0"
     79c:    00 00 00 00     "\0\0\0\0"
     7a0:    00 00 00 00     "\0\0\0\0"
     7a4:    00 00 00 00     "\0\0\0\0"
     7a8:    00 00 00 00     "\0\0\0\0"
     7ac:    00 00 00 00     "\0\0\0\0"
     7b0:    00 00 00 00     "\0\0\0\0"
     7b4:    00 00 00 00     "\0\0\0\0"
     7b8:    00 00 00 00     "\0\0\0\0"
     7bc:    00 00 00 00     "\0\0\0\0"
     7c0:    00 00 00 00     "\0\0\0\0"
     7c4:    00 00 00 00     "\0\0\0\0"
     7c8:    00 00 00 00     "\0\0\0\0"
     7cc:    00 00 00 00     "\0\0\0\0"
     7d0:    00 00 00 00     "\0\0\0\0"
     7d4:    00 00 00 00     "\0\0\0\0"
     7d8:    00 00 00 00     "\0\0\0\0"
     7dc:    00 00 00 00     "\0\0\0\0"
     7e0:    00 00 00 00     "\0\0\0\0"
     7e4:    00 00 00 00     "\0\0\0\0"
     7e8:    00 00 00 00     "\0\0\0\0"
     7ec:    00 00 00 00     "\0\0\0\0"
     7f0:    00 00 00 00     "\0\0\0\0"
     7f4:    00 00 00 00     "\0\0\0\0"
     7f8:    00 00 00 00     "\0\0\0\0"
     7fc:    00 00 00 00     "\0\0\0\0"
Disassembly of section .boot_info:
report_boot_info_begin:
     800:    00 00 00 00     "\0\0\0\0"
     804:    00 00 00 00     "\0\0\0\0"
     808:    00 00 00 00     "\0\0\0\0"
     80c:    00 00 00 00     "\0\0\0\0"
     810:    00 00 00 00     "\0\0\0\0"
     814:    00 00 00 00     "\0\0\0\0"
     818:    00 00 00 00     "\0\0\0\0"
     81c:    00 00 00 00     "\0\0\0\0"
     820:    00 00 00 00     "\0\0\0\0"
     824:    00 00 00 00     "\0\0\0\0"
     828:    00 00 00 00     "\0\0\0\0"
     82c:    00 00 00 00     "\0\0\0\0"
     830:    00 00 00 00     "\0\0\0\0"
     834:    00 00 00 00     "\0\0\0\0"
     838:    00 00 00 00     "\0\0\0\0"
     83c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .data:
set_charge_mA.charge_mA_old:
     840:    ff 00 00 00     "\x0f\0\0\0"

update_charge_ui.var:
     844:    01 00 00 00     "\x01\0\0\0"

old_battery_level:
     848:    09 00           "\t\0"

charge_data:
     84a:    01 00 06 03     "\x01\0\x06\x03"
     84e:    0a 01 03 01     "\n\x01\x03\x01"
     852:    64 00 32 00     "d\02\0"
     856:    dc 00 00 00     "\x0c\0\0\0"

port0:
     85a:    01 01 00 04     "\x01\x01\0\x04"
     85e:    32              "2"

port2:
     85f:    01 01 00 04     "\x01\x01\0\x04"
     863:    17              "\x07"

port3:
     864:    01 01 00 04     "\x01\x01\0\x04"
     868:    15              "\x05"

charge_port:
     869:    00 00 00 07     "\0\0\0\x07"
     86d:    35              "5"

vbat_port:
     86e:    00 02 01 07     "\0\x02\x01\x07"
     872:    37              "7"

ldoin_port:
     873:    00 02 01 07     "\0\x02\x01\x07"
     877:    38              "8"

head:
     878:    78 08 00 00     "x\b\0\0"
     87c:    78 08 00 00     "x\b\0\0"

handl:
     880:    00 00 00 01     "\0\0\0\x01"
     884:    00 00 01 00     "\0\0\x01\0"
     888:    40 9c 00 00     "@\x0c\0\0"
     88c:    00 00 00 00     "\0\0\0\0"
     890:    00 00 00 00     "\0\0\0\0"
     894:    00 00 00 00     "\0\0\0\0"
     898:    00 00 00 00     "\0\0\0\0"
     89c:    00 00 00 00     "\0\0\0\0"
     8a0:    00 00 00 00     "\0\0\0\0"

head.1197:
     8a4:    a4 08 00 00     "\x04\b\0\0"
     8a8:    a4 08 00 00     "\x04\b\0\0"

jiffies:
     8ac:    0a 00 00 00     "\n\0\0\0"

timer_head:
     8b0:    b0 08 00 00     "\x00\b\0\0"
     8b4:    b0 08 00 00     "\x00\b\0\0"

puk:
     8b8:    98 36 6c f3     "\x086l\x03"
     8bc:    00 00 00 00     "\0\0\0\0"

CURRENT_TTMER_DOWN_SECONDS:
     8c0:    3c 00 00 00     "<\0\0\0"

TARGET_TTMER_DOWN_SECONDS:
     8c4:    3c 00 00 00     "<\0\0\0"

CURRENT_NUM_DOWN_TOTAL:
     8c8:    e8 03 00 00     "\x08\x03\0\0"

TARGET_NUM_DOWN_TOTAL:
     8cc:    e8 03 00 00     "\x08\x03\0\0"

lp_winsize:
     8d0:    e0 01 a0 00     "\x00\x01\x00\0"
     8d4:    64 00 8c 00     "d\0\x0c\0"
     8d8:    00 00 00 00     "\0\0\0\0"

adkey_scan_para:
     8dc:    0a 00 00 00     "\n\0\0\0"
     8e0:    ff 00 00 02     "\x0f\0\0\x02"
     8e4:    4b 5a 00 00     "KZ\0\0"
     8e8:    00 14 00 01     "\0\x04\0\x01"
     8ec:    98 09 e0 01     "\x08\t\x00\x01"

gap_device_name:
     8f0:    6a 6c 5f 62     "jl_b"
     8f4:    6c 65 5f 74     "le_t"
     8f8:    65 73 74 00     "est\0"
     8fc:    00 00 00 00     "\0\0\0\0"
     900:    00 00 00 00     "\0\0\0\0"
     904:    00 00 00 00     "\0\0\0\0"
     908:    00 00 00 00     "\0\0\0\0"
     90c:    00              "\0"

bt_cfg:
     90d:    4a 4c 5f 61     "JL_a"
     911:    70 70 5f 64     "pp_d"
     915:    65 62 75 67     "ebug"
     919:    00 00 00 00     "\0\0\0\0"
     91d:    00 00 00 00     "\0\0\0\0"
     921:    00 00 00 00     "\0\0\0\0"
     925:    00 00 00 00     "\0\0\0\0"
     929:    00 00 00 00     "\0\0\0\0"
     92d:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     931:    ff ff 0a 19     "\x0f\x0f\n\x09"
     935:    07 88 66 ff     "\x07\x08f\x0f"
     939:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     93d:    ff 00 00        "\x0f\0\0"

data_magic:
     940:    00 00 00 00     "\0\0\0\0"
     944:    00 00 00 00     "\0\0\0\0"
     948:    00 00 00 00     "\0\0\0\0"
     94c:    00 00 00 00     "\0\0\0\0"
     950:    00 00 00 00     "\0\0\0\0"
     954:    00 00 00 00     "\0\0\0\0"
     958:    00 00 00 00     "\0\0\0\0"
     95c:    00 00 00 00     "\0\0\0\0"
     960:    00 00 00 00     "\0\0\0\0"
     964:    00 00 00 00     "\0\0\0\0"
     968:    00 00 00 00     "\0\0\0\0"
     96c:    00 00 00 00     "\0\0\0\0"
     970:    00 00 00 00     "\0\0\0\0"
     974:    00 00 00 00     "\0\0\0\0"
     978:    00 00 00 00     "\0\0\0\0"
     97c:    00 00 00 00     "\0\0\0\0"

is_btstack_lowpower_active:
     980:    00 00 00 00     "\0\0\0\0"

stack_run_loop_head:
     984:    00 00 00 00     "\0\0\0\0"

le_att_mtu_size:
     988:    00 00 00 00     "\0\0\0\0"

gap_request_connection_parameter_update.le_con_param_update_identifier:
     98c:    01              "\x01"

temp_link_key_flag:
     98d:    00 00 00        "\0\0\0"

stack_configs_app:
     990:    04 04 24 00     "\x04\x04$\0"
     994:    40 1f 40 1f     "@\x0f@\x0f"
     998:    00 00 00 00     "\0\0\0\0"
     99c:    00 00 3c 35     "\0\0<5"
     9a0:    00 11 08 04     "\0\x01\b\x04"
     9a4:    23 01 46 1e     "#\x01F\x0e"
     9a8:    0a 00 00 00     "\n\0\0\0"
     9ac:    00 00 00 00     "\0\0\0\0"

disable_sco_timer:
     9b0:    00 00           "\0\0"

BTSTACK_LE_HOST_MESH_DATA_START:
     9b2:    00 00           "\0\0"

system_data_start:
     9b4:    05 00 00 00     "\x05\0\0\0"
     9b8:    02 00 00 00     "\x02\0\0\0"
     9bc:    00 00 00 00     "\0\0\0\0"
     9c0:    54 f0 e0 01     "T\x00\x00\x01"
     9c4:    00 00 00 00     "\0\0\0\0"
     9c8:    00 00 00 00     "\0\0\0\0"
     9cc:    00 00 00 00     "\0\0\0\0"
     9d0:    9c ea e0 01     "\x0c\x0a\x00\x01"

app_spple:
     9d4:    05 00 00 00     "\x05\0\0\0"
     9d8:    01 00 00 00     "\x01\0\0\0"
     9dc:    00 00 00 00     "\0\0\0\0"
     9e0:    82 f0 e0 01     "\x02\x00\x00\x01"
     9e4:    00 00 00 00     "\0\0\0\0"
     9e8:    00 00 00 00     "\0\0\0\0"
     9ec:    00 00 00 00     "\0\0\0\0"
     9f0:    1c eb e0 01     "\x0c\x0b\x00\x01"

system_data_end:
     9f4:    00 00 ff ff     "\0\0\x0f\x0f"
     9f8:    00 00 00 00     "\0\0\0\0"
     9fc:    00 00 00 00     "\0\0\0\0"
     a00:    00 00 00 00     "\0\0\0\0"
     a04:    00 00 00 00     "\0\0\0\0"
     a08:    00 00 00 00     "\0\0\0\0"
     a0c:    00 00 00 00     "\0\0\0\0"
     a10:    00 00 00 00     "\0\0\0\0"
     a14:    00 00 00 00     "\0\0\0\0"
     a18:    00 00 00 00     "\0\0\0\0"
     a1c:    00 00 00 00     "\0\0\0\0"
     a20:    00 00 00 00     "\0\0\0\0"
     a24:    00 00 00 00     "\0\0\0\0"
     a28:    00 00 00 00     "\0\0\0\0"
     a2c:    00 00 00 00     "\0\0\0\0"
     a30:    00 00 00 00     "\0\0\0\0"
     a34:    00 00 00 00     "\0\0\0\0"
     a38:    00 00 00 00     "\0\0\0\0"
     a3c:    00 00 00 00     "\0\0\0\0"
     a40:    00 00 00 00     "\0\0\0\0"
     a44:    00 00 00 00     "\0\0\0\0"
     a48:    00 00 00 00     "\0\0\0\0"
     a4c:    00 00 00 00     "\0\0\0\0"
     a50:    00 00 00 00     "\0\0\0\0"
     a54:    00 00 00 00     "\0\0\0\0"
     a58:    00 00 00 00     "\0\0\0\0"
     a5c:    00 00 00 00     "\0\0\0\0"
     a60:    00 00 00 00     "\0\0\0\0"
     a64:    00 00 00 00     "\0\0\0\0"
     a68:    00 00 00 00     "\0\0\0\0"
     a6c:    00 00 00 00     "\0\0\0\0"
     a70:    00 00 00 00     "\0\0\0\0"
     a74:    00 00 00 00     "\0\0\0\0"
     a78:    00 00 00 00     "\0\0\0\0"
     a7c:    00 00 00 00     "\0\0\0\0"
     a80:    00 00 00 00     "\0\0\0\0"
     a84:    00 00 00 00     "\0\0\0\0"
     a88:    00 00 00 00     "\0\0\0\0"
     a8c:    00 00 00 00     "\0\0\0\0"
     a90:    00 00 00 00     "\0\0\0\0"
     a94:    00 00 00 00     "\0\0\0\0"
     a98:    00 00 00 00     "\0\0\0\0"
     a9c:    00 00 00 00     "\0\0\0\0"
     aa0:    00 00 00 00     "\0\0\0\0"
     aa4:    00 00 00 00     "\0\0\0\0"
     aa8:    00 00 00 00     "\0\0\0\0"
     aac:    00 00 00 00     "\0\0\0\0"
     ab0:    00 00 00 00     "\0\0\0\0"
     ab4:    00 00 00 00     "\0\0\0\0"
     ab8:    00 00 00 00     "\0\0\0\0"
     abc:    00 00 00 00     "\0\0\0\0"
     ac0:    00 00 00 00     "\0\0\0\0"
     ac4:    00 00 00 00     "\0\0\0\0"
     ac8:    00 00 00 00     "\0\0\0\0"
     acc:    00 00 00 00     "\0\0\0\0"
     ad0:    00 00 00 00     "\0\0\0\0"
     ad4:    00 00 00 00     "\0\0\0\0"
     ad8:    00 00 00 00     "\0\0\0\0"
     adc:    00 00 00 00     "\0\0\0\0"
     ae0:    00 00 00 00     "\0\0\0\0"
     ae4:    00 00 00 00     "\0\0\0\0"
     ae8:    00 00 00 00     "\0\0\0\0"
     aec:    00 00 00 00     "\0\0\0\0"
     af0:    00 00 00 00     "\0\0\0\0"
     af4:    00 00 00 00     "\0\0\0\0"
     af8:    00 00 00 00     "\0\0\0\0"
     afc:    00 00 00 00     "\0\0\0\0"
     b00:    00 00 00 00     "\0\0\0\0"
     b04:    00 00 00 00     "\0\0\0\0"
     b08:    00 00 00 00     "\0\0\0\0"
     b0c:    00 00 00 00     "\0\0\0\0"
     b10:    00 00 00 00     "\0\0\0\0"
     b14:    00 00 00 00     "\0\0\0\0"
     b18:    00 00 00 00     "\0\0\0\0"
     b1c:    00 00 00 00     "\0\0\0\0"
     b20:    00 00 00 00     "\0\0\0\0"
     b24:    00 00 00 00     "\0\0\0\0"
     b28:    00 00 00 00     "\0\0\0\0"
     b2c:    00 00 00 00     "\0\0\0\0"
     b30:    00 00 00 00     "\0\0\0\0"
     b34:    00 00 00 00     "\0\0\0\0"
     b38:    00 00 00 00     "\0\0\0\0"
     b3c:    00 00 00 00     "\0\0\0\0"
     b40:    00 00 00 00     "\0\0\0\0"
     b44:    00 00 00 00     "\0\0\0\0"
     b48:    00 00 00 00     "\0\0\0\0"
     b4c:    00 00 00 00     "\0\0\0\0"
     b50:    00 00 00 00     "\0\0\0\0"
     b54:    00 00 00 00     "\0\0\0\0"
     b58:    00 00 00 00     "\0\0\0\0"
     b5c:    00 00 00 00     "\0\0\0\0"
     b60:    00 00 00 00     "\0\0\0\0"
     b64:    00 00 00 00     "\0\0\0\0"
     b68:    00 00 00 00     "\0\0\0\0"
     b6c:    00 00 00 00     "\0\0\0\0"
     b70:    00 00 00 00     "\0\0\0\0"
     b74:    00 00 00 00     "\0\0\0\0"
     b78:    00 00 00 00     "\0\0\0\0"
     b7c:    00 00 00 00     "\0\0\0\0"
     b80:    00 00 00 00     "\0\0\0\0"
     b84:    00 00 00 00     "\0\0\0\0"
     b88:    00 00 00 00     "\0\0\0\0"
     b8c:    00 00 00 00     "\0\0\0\0"
     b90:    00 00 00 00     "\0\0\0\0"
     b94:    00 00 00 00     "\0\0\0\0"
     b98:    00 00 00 00     "\0\0\0\0"
     b9c:    00 00 00 00     "\0\0\0\0"
     ba0:    00 00 00 00     "\0\0\0\0"
     ba4:    00 00 00 00     "\0\0\0\0"
     ba8:    00 00 00 00     "\0\0\0\0"
     bac:    00 00 00 00     "\0\0\0\0"
     bb0:    00 00 00 00     "\0\0\0\0"
     bb4:    00 00 00 00     "\0\0\0\0"
     bb8:    00 00 00 00     "\0\0\0\0"
     bbc:    00 00 00 00     "\0\0\0\0"
     bc0:    00 00 00 00     "\0\0\0\0"
     bc4:    00 00 00 00     "\0\0\0\0"
     bc8:    00 00 00 00     "\0\0\0\0"
     bcc:    00 00 00 00     "\0\0\0\0"
     bd0:    00 00 00 00     "\0\0\0\0"
     bd4:    00 00 00 00     "\0\0\0\0"
     bd8:    00 00 00 00     "\0\0\0\0"
     bdc:    00 00 00 00     "\0\0\0\0"
     be0:    00 00 00 00     "\0\0\0\0"
     be4:    00 00 00 00     "\0\0\0\0"
     be8:    00 00 00 00     "\0\0\0\0"
     bec:    00 00 00 00     "\0\0\0\0"
     bf0:    00 00 00 00     "\0\0\0\0"
     bf4:    00 00 00 00     "\0\0\0\0"
     bf8:    00 00 00 00     "\0\0\0\0"
     bfc:    00 00 00 00     "\0\0\0\0"
     c00:    00 00 00 00     "\0\0\0\0"
     c04:    00 00 00 00     "\0\0\0\0"
     c08:    00 00 00 00     "\0\0\0\0"
     c0c:    00 00 00 00     "\0\0\0\0"
     c10:    00 00 00 00     "\0\0\0\0"
     c14:    00 00 00 00     "\0\0\0\0"
     c18:    00 00 00 00     "\0\0\0\0"
     c1c:    00 00 00 00     "\0\0\0\0"
     c20:    00 00 00 00     "\0\0\0\0"
     c24:    00 00 00 00     "\0\0\0\0"
     c28:    00 00 00 00     "\0\0\0\0"
     c2c:    00 00 00 00     "\0\0\0\0"
     c30:    00 00 00 00     "\0\0\0\0"
     c34:    00 00 00 00     "\0\0\0\0"
     c38:    00 00 00 00     "\0\0\0\0"
     c3c:    00 00 00 00     "\0\0\0\0"
     c40:    00 00 00 00     "\0\0\0\0"
     c44:    00 00 00 00     "\0\0\0\0"
     c48:    00 00 00 00     "\0\0\0\0"
     c4c:    00 00 00 00     "\0\0\0\0"
     c50:    00 00 00 00     "\0\0\0\0"
     c54:    00 00 00 00     "\0\0\0\0"
     c58:    00 00 00 00     "\0\0\0\0"
     c5c:    00 00 00 00     "\0\0\0\0"
     c60:    00 00 00 00     "\0\0\0\0"
     c64:    00 00 00 00     "\0\0\0\0"
     c68:    00 00 00 00     "\0\0\0\0"
     c6c:    00 00 00 00     "\0\0\0\0"
     c70:    00 00 00 00     "\0\0\0\0"
     c74:    00 00 00 00     "\0\0\0\0"
     c78:    00 00 00 00     "\0\0\0\0"
     c7c:    00 00 00 00     "\0\0\0\0"
     c80:    00 00 00 00     "\0\0\0\0"
     c84:    00 00 00 00     "\0\0\0\0"
     c88:    00 00 00 00     "\0\0\0\0"
     c8c:    00 00 00 00     "\0\0\0\0"
     c90:    00 00 00 00     "\0\0\0\0"
     c94:    00 00 00 00     "\0\0\0\0"
     c98:    00 00 00 00     "\0\0\0\0"
     c9c:    00 00 00 00     "\0\0\0\0"
     ca0:    00 00 00 00     "\0\0\0\0"
     ca4:    00 00 00 00     "\0\0\0\0"
     ca8:    00 00 00 00     "\0\0\0\0"
     cac:    00 00 00 00     "\0\0\0\0"
     cb0:    00 00 00 00     "\0\0\0\0"
     cb4:    00 00 00 00     "\0\0\0\0"
     cb8:    00 00 00 00     "\0\0\0\0"
     cbc:    00 00 00 00     "\0\0\0\0"
     cc0:    00 00 00 00     "\0\0\0\0"
     cc4:    00 00 00 00     "\0\0\0\0"
     cc8:    00 00 00 00     "\0\0\0\0"
     ccc:    00 00 00 00     "\0\0\0\0"
     cd0:    00 00 00 00     "\0\0\0\0"
     cd4:    00 00 00 00     "\0\0\0\0"
     cd8:    00 00 00 00     "\0\0\0\0"
     cdc:    00 00 00 00     "\0\0\0\0"
     ce0:    00 00 00 00     "\0\0\0\0"
     ce4:    00 00 00 00     "\0\0\0\0"
     ce8:    00 00 00 00     "\0\0\0\0"
     cec:    00 00 00 00     "\0\0\0\0"
     cf0:    00 00 00 00     "\0\0\0\0"
     cf4:    00 00 00 00     "\0\0\0\0"
     cf8:    00 00 00 00     "\0\0\0\0"
     cfc:    00 00 00 00     "\0\0\0\0"
     d00:    00 00 00 00     "\0\0\0\0"
     d04:    00 00 00 00     "\0\0\0\0"
     d08:    00 00 00 00     "\0\0\0\0"
     d0c:    00 00 00 00     "\0\0\0\0"
     d10:    00 00 00 00     "\0\0\0\0"
     d14:    00 00 00 00     "\0\0\0\0"
     d18:    00 00 00 00     "\0\0\0\0"
     d1c:    00 00 00 00     "\0\0\0\0"
     d20:    00 00 00 00     "\0\0\0\0"
     d24:    00 00 00 00     "\0\0\0\0"
     d28:    00 00 00 00     "\0\0\0\0"
     d2c:    00 00 00 00     "\0\0\0\0"
     d30:    00 00 00 00     "\0\0\0\0"
     d34:    00 00 00 00     "\0\0\0\0"
     d38:    00 00 00 00     "\0\0\0\0"
     d3c:    00 00 00 00     "\0\0\0\0"
     d40:    00 00 00 00     "\0\0\0\0"
     d44:    00 00 00 00     "\0\0\0\0"
     d48:    00 00 00 00     "\0\0\0\0"
     d4c:    00 00 00 00     "\0\0\0\0"
     d50:    00 00 00 00     "\0\0\0\0"
     d54:    00 00 00 00     "\0\0\0\0"
     d58:    00 00 00 00     "\0\0\0\0"
     d5c:    00 00 00 00     "\0\0\0\0"
     d60:    00 00 00 00     "\0\0\0\0"
     d64:    00 00 00 00     "\0\0\0\0"
     d68:    00 00 00 00     "\0\0\0\0"
     d6c:    00 00 00 00     "\0\0\0\0"
     d70:    00 00 00 00     "\0\0\0\0"
     d74:    00 00 00 00     "\0\0\0\0"
     d78:    00 00 00 00     "\0\0\0\0"
     d7c:    00 00 00 00     "\0\0\0\0"
     d80:    00 00 00 00     "\0\0\0\0"
     d84:    00 00 00 00     "\0\0\0\0"
     d88:    00 00 00 00     "\0\0\0\0"
     d8c:    00 00 00 00     "\0\0\0\0"
     d90:    00 00 00 00     "\0\0\0\0"
     d94:    00 00 00 00     "\0\0\0\0"
     d98:    00 00 00 00     "\0\0\0\0"
     d9c:    00 00 00 00     "\0\0\0\0"
     da0:    00 00 00 00     "\0\0\0\0"
     da4:    00 00 00 00     "\0\0\0\0"
     da8:    00 00 00 00     "\0\0\0\0"
     dac:    00 00 00 00     "\0\0\0\0"
     db0:    00 00 00 00     "\0\0\0\0"
     db4:    00 00 00 00     "\0\0\0\0"
     db8:    00 00 00 00     "\0\0\0\0"
     dbc:    00 00 00 00     "\0\0\0\0"
     dc0:    00 00 00 00     "\0\0\0\0"
     dc4:    00 00 00 00     "\0\0\0\0"
     dc8:    00 00 00 00     "\0\0\0\0"
     dcc:    00 00 00 00     "\0\0\0\0"
     dd0:    00 00 00 00     "\0\0\0\0"
     dd4:    00 00 00 00     "\0\0\0\0"
     dd8:    00 00 00 00     "\0\0\0\0"
     ddc:    00 00 00 00     "\0\0\0\0"
     de0:    00 00 00 00     "\0\0\0\0"
     de4:    00 00 00 00     "\0\0\0\0"
     de8:    00 00 00 00     "\0\0\0\0"
     dec:    00 00 00 00     "\0\0\0\0"
     df0:    00 00 00 00     "\0\0\0\0"

bt_testbox_update_msg_handle:
     df4:    00 00 00 00     "\0\0\0\0"

bt_task_thread:
     df8:    00 00 00 00     "\0\0\0\0"
     dfc:    00 00 00 00     "\0\0\0\0"
     e00:    64 1b e1 01     "d\x0b\x01\x01"
     e04:    68 1b e1 01     "h\x0b\x01\x01"
     e08:    6c 1b e1 01     "l\x0b\x01\x01"
     e0c:    70 1b e1 01     "p\x0b\x01\x01"

hci_param:
     e10:    00 00 00 00     "\0\0\0\0"
     e14:    00 00 00 00     "\0\0\0\0"
     e18:    0a 00 20 31     "\n\0 1"
     e1c:    0a 00 bb 22     "\n\0\x0b""
     e20:    d6 05 ff ff     "\x06\x05\x0f\x0f"
     e24:    ff 03 80 ff     "\x0f\x03\x00\x0f"
     e28:    ff ff 3f ff     "\x0f\x0f?\x0f"
     e2c:    ff 1f f2 0f     "\x0f\x0f\x02\x0f"
     e30:    e8 fe 3f f7     "\x08\x0e?\x07"
     e34:    8d ff 1c 00     "\x0d\x0f\x0c\0"
     e38:    00 00 7d f7     "\0\0}\x07"
     e3c:    ff ff 7f 00     "\x0f\x0f\x0f\0"
     e40:    00 00 00 00     "\0\0\0\0"
     e44:    00 00 00 00     "\0\0\0\0"
     e48:    00 00 00 00     "\0\0\0\0"
     e4c:    00 00 00 00     "\0\0\0\0"
     e50:    00 00 00 00     "\0\0\0\0"
     e54:    00 00 00 00     "\0\0\0\0"
     e58:    00 00 00 00     "\0\0\0\0"
     e5c:    00 00 00 00     "\0\0\0\0"
     e60:    00 00 00 00     "\0\0\0\0"
     e64:    00 00 00 00     "\0\0\0\0"
     e68:    00 00 00 00     "\0\0\0\0"
     e6c:    00 00 00 00     "\0\0\0\0"
     e70:    00 00 00 00     "\0\0\0\0"
     e74:    00 00 00 00     "\0\0\0\0"
     e78:    00 00 00 00     "\0\0\0\0"
     e7c:    00 00 00 00     "\0\0\0\0"
     e80:    00 00 00 57     "\0\0\0W"
     e84:    74 78 a2 5a     "tx\x02Z"
     e88:    ab bf fe 8d     "\x0b\x0f\x0e\x0d"
     e8c:    fa c8 2d 79     "\x0a\x08-y"
     e90:    83 00 00 00     "\x03\0\0\0"
     e94:    00 00 00 00     "\0\0\0\0"
     e98:    00 00 00 00     "\0\0\0\0"
     e9c:    00 00 00 00     "\0\0\0\0"
     ea0:    00 00 45 00     "\0\0E\0"
     ea4:    00 00 00 00     "\0\0\0\0"
     ea8:    00 00 00 00     "\0\0\0\0"
     eac:    00 00 00 00     "\0\0\0\0"

adv_hdl:
     eb0:    00 00 00 00     "\0\0\0\0"

le_data_length.6:
     eb4:    00 00 00 00     "\0\0\0\0"

le_data_length.7:
     eb8:    00 00 00 00     "\0\0\0\0"

le_param:
     ebc:    00 00 00 00     "\0\0\0\0"
     ec0:    00 00 00 00     "\0\0\0\0"
     ec4:    01 02 03 04     "\x01\x02\x03\x04"
     ec8:    05 06 00 00     "\x05\x06\0\0"
     ecc:    00 00 00 00     "\0\0\0\0"
     ed0:    00 00 00 00     "\0\0\0\0"
     ed4:    00 00 00 00     "\0\0\0\0"
     ed8:    00 00 00 00     "\0\0\0\0"
     edc:    00 00 00 00     "\0\0\0\0"
     ee0:    00 00 00 00     "\0\0\0\0"
     ee4:    00 00 06 0f     "\0\0\x06\x0f"
     ee8:    00 09 61 00     "\0\ta\0"
     eec:    00 00 08 00     "\0\0\b\0"
     ef0:    78 00 72 07     "x\0r\x07"
     ef4:    ff ff ff 1f     "\x0f\x0f\x0f\x0f"
     ef8:    00 00 00 00     "\0\0\0\0"
     efc:    00 00 00 00     "\0\0\0\0"
     f00:    00 00 00 00     "\0\0\0\0"
     f04:    01 00 00 00     "\x01\0\0\0"
     f08:    00 00 00 00     "\0\0\0\0"
     f0c:    00 00 00 00     "\0\0\0\0"
     f10:    00 00 00 00     "\0\0\0\0"
     f14:    00 00 00 00     "\0\0\0\0"
     f18:    00 00 00 00     "\0\0\0\0"
     f1c:    00 00 00 00     "\0\0\0\0"
     f20:    00 00 00 00     "\0\0\0\0"
     f24:    00 00 00 00     "\0\0\0\0"
     f28:    00 00 00 00     "\0\0\0\0"
     f2c:    00 00 00 00     "\0\0\0\0"
     f30:    00 00 00 00     "\0\0\0\0"
     f34:    00 00 00 00     "\0\0\0\0"
     f38:    00 00 00 00     "\0\0\0\0"
     f3c:    00 00 00 00     "\0\0\0\0"
     f40:    00 00 00 00     "\0\0\0\0"
     f44:    00 00 00 00     "\0\0\0\0"
     f48:    00 00 00 00     "\0\0\0\0"
     f4c:    00 00 00 00     "\0\0\0\0"
     f50:    00 00 00 19     "\0\0\0\x09"
     f54:    00 00 00 00     "\0\0\0\0"
     f58:    00 00 00 00     "\0\0\0\0"
     f5c:    00 01 00 00     "\0\x01\0\0"
     f60:    00 00 00 00     "\0\0\0\0"
     f64:    00 00 00 00     "\0\0\0\0"

config_hci_ll_param.0:
     f68:    00 00 00 00     "\0\0\0\0"

g_ble_fp:
     f6c:    00 00 00 00     "\0\0\0\0"

rx_update_handle:
     f70:    00 00 00 00     "\0\0\0\0"

ble_slot_schedule.credits:
     f74:    00 00 00 00     "\0\0\0\0"

ble_window_autozoom.widen:
     f78:    00 00 00 00     "\0\0\0\0"

ble_finetimecnt_poweroff_sfr:
     f7c:    00 00 00 00     "\0\0\0\0"

update_conn:
     f80:    00 00 00 00     "\0\0\0\0"

bt_res_updata_flag:
     f84:    00 00 00 00     "\0\0\0\0"

uboot_revic_handle:
     f88:    00 00 00 00     "\0\0\0\0"

update_data_start:
     f8c:    05 08 06 05     "\x05\b\x06\x05"
     f90:    08 06 06 08     "\b\x06\x06\b"
     f94:    06 07 08 06     "\x06\x07\b\x06"
     f98:    0b 0c 07 0f     "\x0b\x0c\x07\x0f"
     f9c:    0f 07           "\x0f\x07"

sysvdd_vdc13_table:
     f9e:    06 06 06 06     "\x06\x06\x06\x06"
     fa2:    06 06 06 06     "\x06\x06\x06\x06"
     fa6:    06 06 06 07     "\x06\x06\x06\x07"
     faa:    07 07 07 07     "\x07\x07\x07\x07"
     fae:    00 00           "\0\0"

sys_clock_limit:
     fb0:    00 6c dc 02     "\0l\x0c\x02"
     fb4:    00 36 6e 01     "\06n\x01"
     fb8:    00 1b b7 00     "\0\x0b\x07\0"
     fbc:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fc0:    00 36 6e 01     "\06n\x01"
     fc4:    00 90 d0 03     "\0\x00\x00\x03"
     fc8:    00 48 e8 01     "\0H\x08\x01"
     fcc:    80 a8 12 01     "\x00\x08\x02\x01"
     fd0:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fd4:    00 36 6e 01     "\06n\x01"
     fd8:    00 6c dc 02     "\0l\x0c\x02"
     fdc:    00 6c dc 02     "\0l\x0c\x02"
     fe0:    00 36 6e 01     "\06n\x01"
     fe4:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fe8:    00 36 6e 01     "\06n\x01"
     fec:    00 90 d0 03     "\0\x00\x00\x03"
     ff0:    00 90 d0 03     "\0\x00\x00\x03"
     ff4:    00 48 e8 01     "\0H\x08\x01"
     ff8:    80 f0 fa 02     "\x00\x00\x0a\x02"
     ffc:    00 36 6e 01     "\06n\x01"
    1000:    00 d8 b8 05     "\0\x08\x08\x05"
    1004:    00 d8 b8 05     "\0\x08\x08\x05"
    1008:    00 6c dc 02     "\0l\x0c\x02"
    100c:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1010:    00 36 6e 01     "\06n\x01"
    1014:    00 20 a1 07     "\0 \x01\x07"
    1018:    00 20 a1 07     "\0 \x01\x07"
    101c:    00 b4 c4 04     "\0\x04\x04\x04"
    1020:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1024:    00 36 6e 01     "\06n\x01"

driver_data_end:
    1028:    00 00 00 00     "\0\0\0\0"
    102c:    00 00 00 00     "\0\0\0\0"
    1030:    00 00 00 00     "\0\0\0\0"
    1034:    00 00 00 00     "\0\0\0\0"
    1038:    00 00 00 00     "\0\0\0\0"
    103c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .irq_stack:
stack_magic:
    1040:    00 00 00 00     "\0\0\0\0"
    1044:    00 00 00 00     "\0\0\0\0"
    1048:    00 00 00 00     "\0\0\0\0"
    104c:    00 00 00 00     "\0\0\0\0"

_cpu0_sstack_begin:
    1050:    00 00 00 00     "\0\0\0\0"
    1054:    00 00 00 00     "\0\0\0\0"
    1058:    00 00 00 00     "\0\0\0\0"
    105c:    00 00 00 00     "\0\0\0\0"
    1060:    00 00 00 00     "\0\0\0\0"
    1064:    00 00 00 00     "\0\0\0\0"
    1068:    00 00 00 00     "\0\0\0\0"
    106c:    00 00 00 00     "\0\0\0\0"
    1070:    00 00 00 00     "\0\0\0\0"
    1074:    00 00 00 00     "\0\0\0\0"
    1078:    00 00 00 00     "\0\0\0\0"
    107c:    00 00 00 00     "\0\0\0\0"
    1080:    00 00 00 00     "\0\0\0\0"
    1084:    00 00 00 00     "\0\0\0\0"
    1088:    00 00 00 00     "\0\0\0\0"
    108c:    00 00 00 00     "\0\0\0\0"
    1090:    00 00 00 00     "\0\0\0\0"
    1094:    00 00 00 00     "\0\0\0\0"
    1098:    00 00 00 00     "\0\0\0\0"
    109c:    00 00 00 00     "\0\0\0\0"
    10a0:    00 00 00 00     "\0\0\0\0"
    10a4:    00 00 00 00     "\0\0\0\0"
    10a8:    00 00 00 00     "\0\0\0\0"
    10ac:    00 00 00 00     "\0\0\0\0"
    10b0:    00 00 00 00     "\0\0\0\0"
    10b4:    00 00 00 00     "\0\0\0\0"
    10b8:    00 00 00 00     "\0\0\0\0"
    10bc:    00 00 00 00     "\0\0\0\0"
    10c0:    00 00 00 00     "\0\0\0\0"
    10c4:    00 00 00 00     "\0\0\0\0"
    10c8:    00 00 00 00     "\0\0\0\0"
    10cc:    00 00 00 00     "\0\0\0\0"
    10d0:    00 00 00 00     "\0\0\0\0"
    10d4:    00 00 00 00     "\0\0\0\0"
    10d8:    00 00 00 00     "\0\0\0\0"
    10dc:    00 00 00 00     "\0\0\0\0"
    10e0:    00 00 00 00     "\0\0\0\0"
    10e4:    00 00 00 00     "\0\0\0\0"
    10e8:    00 00 00 00     "\0\0\0\0"
    10ec:    00 00 00 00     "\0\0\0\0"
    10f0:    00 00 00 00     "\0\0\0\0"
    10f4:    00 00 00 00     "\0\0\0\0"
    10f8:    00 00 00 00     "\0\0\0\0"
    10fc:    00 00 00 00     "\0\0\0\0"
    1100:    00 00 00 00     "\0\0\0\0"
    1104:    00 00 00 00     "\0\0\0\0"
    1108:    00 00 00 00     "\0\0\0\0"
    110c:    00 00 00 00     "\0\0\0\0"
    1110:    00 00 00 00     "\0\0\0\0"
    1114:    00 00 00 00     "\0\0\0\0"
    1118:    00 00 00 00     "\0\0\0\0"
    111c:    00 00 00 00     "\0\0\0\0"
    1120:    00 00 00 00     "\0\0\0\0"
    1124:    00 00 00 00     "\0\0\0\0"
    1128:    00 00 00 00     "\0\0\0\0"
    112c:    00 00 00 00     "\0\0\0\0"
    1130:    00 00 00 00     "\0\0\0\0"
    1134:    00 00 00 00     "\0\0\0\0"
    1138:    00 00 00 00     "\0\0\0\0"
    113c:    00 00 00 00     "\0\0\0\0"
    1140:    00 00 00 00     "\0\0\0\0"
    1144:    00 00 00 00     "\0\0\0\0"
    1148:    00 00 00 00     "\0\0\0\0"
    114c:    00 00 00 00     "\0\0\0\0"
    1150:    00 00 00 00     "\0\0\0\0"
    1154:    00 00 00 00     "\0\0\0\0"
    1158:    00 00 00 00     "\0\0\0\0"
    115c:    00 00 00 00     "\0\0\0\0"
    1160:    00 00 00 00     "\0\0\0\0"
    1164:    00 00 00 00     "\0\0\0\0"
    1168:    00 00 00 00     "\0\0\0\0"
    116c:    00 00 00 00     "\0\0\0\0"
    1170:    00 00 00 00     "\0\0\0\0"
    1174:    00 00 00 00     "\0\0\0\0"
    1178:    00 00 00 00     "\0\0\0\0"
    117c:    00 00 00 00     "\0\0\0\0"
    1180:    00 00 00 00     "\0\0\0\0"
    1184:    00 00 00 00     "\0\0\0\0"
    1188:    00 00 00 00     "\0\0\0\0"
    118c:    00 00 00 00     "\0\0\0\0"
    1190:    00 00 00 00     "\0\0\0\0"
    1194:    00 00 00 00     "\0\0\0\0"
    1198:    00 00 00 00     "\0\0\0\0"
    119c:    00 00 00 00     "\0\0\0\0"
    11a0:    00 00 00 00     "\0\0\0\0"
    11a4:    00 00 00 00     "\0\0\0\0"
    11a8:    00 00 00 00     "\0\0\0\0"
    11ac:    00 00 00 00     "\0\0\0\0"
    11b0:    00 00 00 00     "\0\0\0\0"
    11b4:    00 00 00 00     "\0\0\0\0"
    11b8:    00 00 00 00     "\0\0\0\0"
    11bc:    00 00 00 00     "\0\0\0\0"
    11c0:    00 00 00 00     "\0\0\0\0"
    11c4:    00 00 00 00     "\0\0\0\0"
    11c8:    00 00 00 00     "\0\0\0\0"
    11cc:    00 00 00 00     "\0\0\0\0"
    11d0:    00 00 00 00     "\0\0\0\0"
    11d4:    00 00 00 00     "\0\0\0\0"
    11d8:    00 00 00 00     "\0\0\0\0"
    11dc:    00 00 00 00     "\0\0\0\0"
    11e0:    00 00 00 00     "\0\0\0\0"
    11e4:    00 00 00 00     "\0\0\0\0"
    11e8:    00 00 00 00     "\0\0\0\0"
    11ec:    00 00 00 00     "\0\0\0\0"
    11f0:    00 00 00 00     "\0\0\0\0"
    11f4:    00 00 00 00     "\0\0\0\0"
    11f8:    00 00 00 00     "\0\0\0\0"
    11fc:    00 00 00 00     "\0\0\0\0"
    1200:    00 00 00 00     "\0\0\0\0"
    1204:    00 00 00 00     "\0\0\0\0"
    1208:    00 00 00 00     "\0\0\0\0"
    120c:    00 00 00 00     "\0\0\0\0"
    1210:    00 00 00 00     "\0\0\0\0"
    1214:    00 00 00 00     "\0\0\0\0"
    1218:    00 00 00 00     "\0\0\0\0"
    121c:    00 00 00 00     "\0\0\0\0"
    1220:    00 00 00 00     "\0\0\0\0"
    1224:    00 00 00 00     "\0\0\0\0"
    1228:    00 00 00 00     "\0\0\0\0"
    122c:    00 00 00 00     "\0\0\0\0"
    1230:    00 00 00 00     "\0\0\0\0"
    1234:    00 00 00 00     "\0\0\0\0"
    1238:    00 00 00 00     "\0\0\0\0"
    123c:    00 00 00 00     "\0\0\0\0"
    1240:    00 00 00 00     "\0\0\0\0"
    1244:    00 00 00 00     "\0\0\0\0"
    1248:    00 00 00 00     "\0\0\0\0"
    124c:    00 00 00 00     "\0\0\0\0"
    1250:    00 00 00 00     "\0\0\0\0"
    1254:    00 00 00 00     "\0\0\0\0"
    1258:    00 00 00 00     "\0\0\0\0"
    125c:    00 00 00 00     "\0\0\0\0"
    1260:    00 00 00 00     "\0\0\0\0"
    1264:    00 00 00 00     "\0\0\0\0"
    1268:    00 00 00 00     "\0\0\0\0"
    126c:    00 00 00 00     "\0\0\0\0"
    1270:    00 00 00 00     "\0\0\0\0"
    1274:    00 00 00 00     "\0\0\0\0"
    1278:    00 00 00 00     "\0\0\0\0"
    127c:    00 00 00 00     "\0\0\0\0"
    1280:    00 00 00 00     "\0\0\0\0"
    1284:    00 00 00 00     "\0\0\0\0"
    1288:    00 00 00 00     "\0\0\0\0"
    128c:    00 00 00 00     "\0\0\0\0"
    1290:    00 00 00 00     "\0\0\0\0"
    1294:    00 00 00 00     "\0\0\0\0"
    1298:    00 00 00 00     "\0\0\0\0"
    129c:    00 00 00 00     "\0\0\0\0"
    12a0:    00 00 00 00     "\0\0\0\0"
    12a4:    00 00 00 00     "\0\0\0\0"
    12a8:    00 00 00 00     "\0\0\0\0"
    12ac:    00 00 00 00     "\0\0\0\0"
    12b0:    00 00 00 00     "\0\0\0\0"
    12b4:    00 00 00 00     "\0\0\0\0"
    12b8:    00 00 00 00     "\0\0\0\0"
    12bc:    00 00 00 00     "\0\0\0\0"
    12c0:    00 00 00 00     "\0\0\0\0"
    12c4:    00 00 00 00     "\0\0\0\0"
    12c8:    00 00 00 00     "\0\0\0\0"
    12cc:    00 00 00 00     "\0\0\0\0"
    12d0:    00 00 00 00     "\0\0\0\0"
    12d4:    00 00 00 00     "\0\0\0\0"
    12d8:    00 00 00 00     "\0\0\0\0"
    12dc:    00 00 00 00     "\0\0\0\0"
    12e0:    00 00 00 00     "\0\0\0\0"
    12e4:    00 00 00 00     "\0\0\0\0"
    12e8:    00 00 00 00     "\0\0\0\0"
    12ec:    00 00 00 00     "\0\0\0\0"
    12f0:    00 00 00 00     "\0\0\0\0"
    12f4:    00 00 00 00     "\0\0\0\0"
    12f8:    00 00 00 00     "\0\0\0\0"
    12fc:    00 00 00 00     "\0\0\0\0"
    1300:    00 00 00 00     "\0\0\0\0"
    1304:    00 00 00 00     "\0\0\0\0"
    1308:    00 00 00 00     "\0\0\0\0"
    130c:    00 00 00 00     "\0\0\0\0"
    1310:    00 00 00 00     "\0\0\0\0"
    1314:    00 00 00 00     "\0\0\0\0"
    1318:    00 00 00 00     "\0\0\0\0"
    131c:    00 00 00 00     "\0\0\0\0"
    1320:    00 00 00 00     "\0\0\0\0"
    1324:    00 00 00 00     "\0\0\0\0"
    1328:    00 00 00 00     "\0\0\0\0"
    132c:    00 00 00 00     "\0\0\0\0"
    1330:    00 00 00 00     "\0\0\0\0"
    1334:    00 00 00 00     "\0\0\0\0"
    1338:    00 00 00 00     "\0\0\0\0"
    133c:    00 00 00 00     "\0\0\0\0"
    1340:    00 00 00 00     "\0\0\0\0"
    1344:    00 00 00 00     "\0\0\0\0"
    1348:    00 00 00 00     "\0\0\0\0"
    134c:    00 00 00 00     "\0\0\0\0"
    1350:    00 00 00 00     "\0\0\0\0"
    1354:    00 00 00 00     "\0\0\0\0"
    1358:    00 00 00 00     "\0\0\0\0"
    135c:    00 00 00 00     "\0\0\0\0"
    1360:    00 00 00 00     "\0\0\0\0"
    1364:    00 00 00 00     "\0\0\0\0"
    1368:    00 00 00 00     "\0\0\0\0"
    136c:    00 00 00 00     "\0\0\0\0"
    1370:    00 00 00 00     "\0\0\0\0"
    1374:    00 00 00 00     "\0\0\0\0"
    1378:    00 00 00 00     "\0\0\0\0"
    137c:    00 00 00 00     "\0\0\0\0"
    1380:    00 00 00 00     "\0\0\0\0"
    1384:    00 00 00 00     "\0\0\0\0"
    1388:    00 00 00 00     "\0\0\0\0"
    138c:    00 00 00 00     "\0\0\0\0"
    1390:    00 00 00 00     "\0\0\0\0"
    1394:    00 00 00 00     "\0\0\0\0"
    1398:    00 00 00 00     "\0\0\0\0"
    139c:    00 00 00 00     "\0\0\0\0"
    13a0:    00 00 00 00     "\0\0\0\0"
    13a4:    00 00 00 00     "\0\0\0\0"
    13a8:    00 00 00 00     "\0\0\0\0"
    13ac:    00 00 00 00     "\0\0\0\0"
    13b0:    00 00 00 00     "\0\0\0\0"
    13b4:    00 00 00 00     "\0\0\0\0"
    13b8:    00 00 00 00     "\0\0\0\0"
    13bc:    00 00 00 00     "\0\0\0\0"
    13c0:    00 00 00 00     "\0\0\0\0"
    13c4:    00 00 00 00     "\0\0\0\0"
    13c8:    00 00 00 00     "\0\0\0\0"
    13cc:    00 00 00 00     "\0\0\0\0"
    13d0:    00 00 00 00     "\0\0\0\0"
    13d4:    00 00 00 00     "\0\0\0\0"
    13d8:    00 00 00 00     "\0\0\0\0"
    13dc:    00 00 00 00     "\0\0\0\0"
    13e0:    00 00 00 00     "\0\0\0\0"
    13e4:    00 00 00 00     "\0\0\0\0"
    13e8:    00 00 00 00     "\0\0\0\0"
    13ec:    00 00 00 00     "\0\0\0\0"
    13f0:    00 00 00 00     "\0\0\0\0"
    13f4:    00 00 00 00     "\0\0\0\0"
    13f8:    00 00 00 00     "\0\0\0\0"
    13fc:    00 00 00 00     "\0\0\0\0"
    1400:    00 00 00 00     "\0\0\0\0"
    1404:    00 00 00 00     "\0\0\0\0"
    1408:    00 00 00 00     "\0\0\0\0"
    140c:    00 00 00 00     "\0\0\0\0"
    1410:    00 00 00 00     "\0\0\0\0"
    1414:    00 00 00 00     "\0\0\0\0"
    1418:    00 00 00 00     "\0\0\0\0"
    141c:    00 00 00 00     "\0\0\0\0"
    1420:    00 00 00 00     "\0\0\0\0"
    1424:    00 00 00 00     "\0\0\0\0"
    1428:    00 00 00 00     "\0\0\0\0"
    142c:    00 00 00 00     "\0\0\0\0"
    1430:    00 00 00 00     "\0\0\0\0"
    1434:    00 00 00 00     "\0\0\0\0"
    1438:    00 00 00 00     "\0\0\0\0"
    143c:    00 00 00 00     "\0\0\0\0"
    1440:    00 00 00 00     "\0\0\0\0"
    1444:    00 00 00 00     "\0\0\0\0"
    1448:    00 00 00 00     "\0\0\0\0"
    144c:    00 00 00 00     "\0\0\0\0"
    1450:    00 00 00 00     "\0\0\0\0"
    1454:    00 00 00 00     "\0\0\0\0"
    1458:    00 00 00 00     "\0\0\0\0"
    145c:    00 00 00 00     "\0\0\0\0"
    1460:    00 00 00 00     "\0\0\0\0"
    1464:    00 00 00 00     "\0\0\0\0"
    1468:    00 00 00 00     "\0\0\0\0"
    146c:    00 00 00 00     "\0\0\0\0"
    1470:    00 00 00 00     "\0\0\0\0"
    1474:    00 00 00 00     "\0\0\0\0"
    1478:    00 00 00 00     "\0\0\0\0"
    147c:    00 00 00 00     "\0\0\0\0"
    1480:    00 00 00 00     "\0\0\0\0"
    1484:    00 00 00 00     "\0\0\0\0"
    1488:    00 00 00 00     "\0\0\0\0"
    148c:    00 00 00 00     "\0\0\0\0"
    1490:    00 00 00 00     "\0\0\0\0"
    1494:    00 00 00 00     "\0\0\0\0"
    1498:    00 00 00 00     "\0\0\0\0"
    149c:    00 00 00 00     "\0\0\0\0"
    14a0:    00 00 00 00     "\0\0\0\0"
    14a4:    00 00 00 00     "\0\0\0\0"
    14a8:    00 00 00 00     "\0\0\0\0"
    14ac:    00 00 00 00     "\0\0\0\0"
    14b0:    00 00 00 00     "\0\0\0\0"
    14b4:    00 00 00 00     "\0\0\0\0"
    14b8:    00 00 00 00     "\0\0\0\0"
    14bc:    00 00 00 00     "\0\0\0\0"
    14c0:    00 00 00 00     "\0\0\0\0"
    14c4:    00 00 00 00     "\0\0\0\0"
    14c8:    00 00 00 00     "\0\0\0\0"
    14cc:    00 00 00 00     "\0\0\0\0"
    14d0:    00 00 00 00     "\0\0\0\0"
    14d4:    00 00 00 00     "\0\0\0\0"
    14d8:    00 00 00 00     "\0\0\0\0"
    14dc:    00 00 00 00     "\0\0\0\0"
    14e0:    00 00 00 00     "\0\0\0\0"
    14e4:    00 00 00 00     "\0\0\0\0"
    14e8:    00 00 00 00     "\0\0\0\0"
    14ec:    00 00 00 00     "\0\0\0\0"
    14f0:    00 00 00 00     "\0\0\0\0"
    14f4:    00 00 00 00     "\0\0\0\0"
    14f8:    00 00 00 00     "\0\0\0\0"
    14fc:    00 00 00 00     "\0\0\0\0"
    1500:    00 00 00 00     "\0\0\0\0"
    1504:    00 00 00 00     "\0\0\0\0"
    1508:    00 00 00 00     "\0\0\0\0"
    150c:    00 00 00 00     "\0\0\0\0"
    1510:    00 00 00 00     "\0\0\0\0"
    1514:    00 00 00 00     "\0\0\0\0"
    1518:    00 00 00 00     "\0\0\0\0"
    151c:    00 00 00 00     "\0\0\0\0"
    1520:    00 00 00 00     "\0\0\0\0"
    1524:    00 00 00 00     "\0\0\0\0"
    1528:    00 00 00 00     "\0\0\0\0"
    152c:    00 00 00 00     "\0\0\0\0"
    1530:    00 00 00 00     "\0\0\0\0"
    1534:    00 00 00 00     "\0\0\0\0"
    1538:    00 00 00 00     "\0\0\0\0"
    153c:    00 00 00 00     "\0\0\0\0"
    1540:    00 00 00 00     "\0\0\0\0"
    1544:    00 00 00 00     "\0\0\0\0"
    1548:    00 00 00 00     "\0\0\0\0"
    154c:    00 00 00 00     "\0\0\0\0"
    1550:    00 00 00 00     "\0\0\0\0"
    1554:    00 00 00 00     "\0\0\0\0"
    1558:    00 00 00 00     "\0\0\0\0"
    155c:    00 00 00 00     "\0\0\0\0"
    1560:    00 00 00 00     "\0\0\0\0"
    1564:    00 00 00 00     "\0\0\0\0"
    1568:    00 00 00 00     "\0\0\0\0"
    156c:    00 00 00 00     "\0\0\0\0"
    1570:    00 00 00 00     "\0\0\0\0"
    1574:    00 00 00 00     "\0\0\0\0"
    1578:    00 00 00 00     "\0\0\0\0"
    157c:    00 00 00 00     "\0\0\0\0"
    1580:    00 00 00 00     "\0\0\0\0"
    1584:    00 00 00 00     "\0\0\0\0"
    1588:    00 00 00 00     "\0\0\0\0"
    158c:    00 00 00 00     "\0\0\0\0"
    1590:    00 00 00 00     "\0\0\0\0"
    1594:    00 00 00 00     "\0\0\0\0"
    1598:    00 00 00 00     "\0\0\0\0"
    159c:    00 00 00 00     "\0\0\0\0"
    15a0:    00 00 00 00     "\0\0\0\0"
    15a4:    00 00 00 00     "\0\0\0\0"
    15a8:    00 00 00 00     "\0\0\0\0"
    15ac:    00 00 00 00     "\0\0\0\0"
    15b0:    00 00 00 00     "\0\0\0\0"
    15b4:    00 00 00 00     "\0\0\0\0"
    15b8:    00 00 00 00     "\0\0\0\0"
    15bc:    00 00 00 00     "\0\0\0\0"
    15c0:    00 00 00 00     "\0\0\0\0"
    15c4:    00 00 00 00     "\0\0\0\0"
    15c8:    00 00 00 00     "\0\0\0\0"
    15cc:    00 00 00 00     "\0\0\0\0"
    15d0:    00 00 00 00     "\0\0\0\0"
    15d4:    00 00 00 00     "\0\0\0\0"
    15d8:    00 00 00 00     "\0\0\0\0"
    15dc:    00 00 00 00     "\0\0\0\0"
    15e0:    00 00 00 00     "\0\0\0\0"
    15e4:    00 00 00 00     "\0\0\0\0"
    15e8:    00 00 00 00     "\0\0\0\0"
    15ec:    00 00 00 00     "\0\0\0\0"
    15f0:    00 00 00 00     "\0\0\0\0"
    15f4:    00 00 00 00     "\0\0\0\0"
    15f8:    00 00 00 00     "\0\0\0\0"
    15fc:    00 00 00 00     "\0\0\0\0"
    1600:    00 00 00 00     "\0\0\0\0"
    1604:    00 00 00 00     "\0\0\0\0"
    1608:    00 00 00 00     "\0\0\0\0"
    160c:    00 00 00 00     "\0\0\0\0"
    1610:    00 00 00 00     "\0\0\0\0"
    1614:    00 00 00 00     "\0\0\0\0"
    1618:    00 00 00 00     "\0\0\0\0"
    161c:    00 00 00 00     "\0\0\0\0"
    1620:    00 00 00 00     "\0\0\0\0"
    1624:    00 00 00 00     "\0\0\0\0"
    1628:    00 00 00 00     "\0\0\0\0"
    162c:    00 00 00 00     "\0\0\0\0"
    1630:    00 00 00 00     "\0\0\0\0"
    1634:    00 00 00 00     "\0\0\0\0"
    1638:    00 00 00 00     "\0\0\0\0"
    163c:    00 00 00 00     "\0\0\0\0"
    1640:    00 00 00 00     "\0\0\0\0"
    1644:    00 00 00 00     "\0\0\0\0"
    1648:    00 00 00 00     "\0\0\0\0"
    164c:    00 00 00 00     "\0\0\0\0"
    1650:    00 00 00 00     "\0\0\0\0"
    1654:    00 00 00 00     "\0\0\0\0"
    1658:    00 00 00 00     "\0\0\0\0"
    165c:    00 00 00 00     "\0\0\0\0"
    1660:    00 00 00 00     "\0\0\0\0"
    1664:    00 00 00 00     "\0\0\0\0"
    1668:    00 00 00 00     "\0\0\0\0"
    166c:    00 00 00 00     "\0\0\0\0"
    1670:    00 00 00 00     "\0\0\0\0"
    1674:    00 00 00 00     "\0\0\0\0"
    1678:    00 00 00 00     "\0\0\0\0"
    167c:    00 00 00 00     "\0\0\0\0"
    1680:    00 00 00 00     "\0\0\0\0"
    1684:    00 00 00 00     "\0\0\0\0"
    1688:    00 00 00 00     "\0\0\0\0"
    168c:    00 00 00 00     "\0\0\0\0"
    1690:    00 00 00 00     "\0\0\0\0"
    1694:    00 00 00 00     "\0\0\0\0"
    1698:    00 00 00 00     "\0\0\0\0"
    169c:    00 00 00 00     "\0\0\0\0"
    16a0:    00 00 00 00     "\0\0\0\0"
    16a4:    00 00 00 00     "\0\0\0\0"
    16a8:    00 00 00 00     "\0\0\0\0"
    16ac:    00 00 00 00     "\0\0\0\0"
    16b0:    00 00 00 00     "\0\0\0\0"
    16b4:    00 00 00 00     "\0\0\0\0"
    16b8:    00 00 00 00     "\0\0\0\0"
    16bc:    00 00 00 00     "\0\0\0\0"
    16c0:    00 00 00 00     "\0\0\0\0"
    16c4:    00 00 00 00     "\0\0\0\0"
    16c8:    00 00 00 00     "\0\0\0\0"
    16cc:    00 00 00 00     "\0\0\0\0"
    16d0:    00 00 00 00     "\0\0\0\0"
    16d4:    00 00 00 00     "\0\0\0\0"
    16d8:    00 00 00 00     "\0\0\0\0"
    16dc:    00 00 00 00     "\0\0\0\0"
    16e0:    00 00 00 00     "\0\0\0\0"
    16e4:    00 00 00 00     "\0\0\0\0"
    16e8:    00 00 00 00     "\0\0\0\0"
    16ec:    00 00 00 00     "\0\0\0\0"
    16f0:    00 00 00 00     "\0\0\0\0"
    16f4:    00 00 00 00     "\0\0\0\0"
    16f8:    00 00 00 00     "\0\0\0\0"
    16fc:    00 00 00 00     "\0\0\0\0"
    1700:    00 00 00 00     "\0\0\0\0"
    1704:    00 00 00 00     "\0\0\0\0"
    1708:    00 00 00 00     "\0\0\0\0"
    170c:    00 00 00 00     "\0\0\0\0"
    1710:    00 00 00 00     "\0\0\0\0"
    1714:    00 00 00 00     "\0\0\0\0"
    1718:    00 00 00 00     "\0\0\0\0"
    171c:    00 00 00 00     "\0\0\0\0"
    1720:    00 00 00 00     "\0\0\0\0"
    1724:    00 00 00 00     "\0\0\0\0"
    1728:    00 00 00 00     "\0\0\0\0"
    172c:    00 00 00 00     "\0\0\0\0"
    1730:    00 00 00 00     "\0\0\0\0"
    1734:    00 00 00 00     "\0\0\0\0"
    1738:    00 00 00 00     "\0\0\0\0"
    173c:    00 00 00 00     "\0\0\0\0"
    1740:    00 00 00 00     "\0\0\0\0"
    1744:    00 00 00 00     "\0\0\0\0"
    1748:    00 00 00 00     "\0\0\0\0"
    174c:    00 00 00 00     "\0\0\0\0"
    1750:    00 00 00 00     "\0\0\0\0"
    1754:    00 00 00 00     "\0\0\0\0"
    1758:    00 00 00 00     "\0\0\0\0"
    175c:    00 00 00 00     "\0\0\0\0"
    1760:    00 00 00 00     "\0\0\0\0"
    1764:    00 00 00 00     "\0\0\0\0"
    1768:    00 00 00 00     "\0\0\0\0"
    176c:    00 00 00 00     "\0\0\0\0"
    1770:    00 00 00 00     "\0\0\0\0"
    1774:    00 00 00 00     "\0\0\0\0"
    1778:    00 00 00 00     "\0\0\0\0"
    177c:    00 00 00 00     "\0\0\0\0"
    1780:    00 00 00 00     "\0\0\0\0"
    1784:    00 00 00 00     "\0\0\0\0"
    1788:    00 00 00 00     "\0\0\0\0"
    178c:    00 00 00 00     "\0\0\0\0"
    1790:    00 00 00 00     "\0\0\0\0"
    1794:    00 00 00 00     "\0\0\0\0"
    1798:    00 00 00 00     "\0\0\0\0"
    179c:    00 00 00 00     "\0\0\0\0"
    17a0:    00 00 00 00     "\0\0\0\0"
    17a4:    00 00 00 00     "\0\0\0\0"
    17a8:    00 00 00 00     "\0\0\0\0"
    17ac:    00 00 00 00     "\0\0\0\0"
    17b0:    00 00 00 00     "\0\0\0\0"
    17b4:    00 00 00 00     "\0\0\0\0"
    17b8:    00 00 00 00     "\0\0\0\0"
    17bc:    00 00 00 00     "\0\0\0\0"
    17c0:    00 00 00 00     "\0\0\0\0"
    17c4:    00 00 00 00     "\0\0\0\0"
    17c8:    00 00 00 00     "\0\0\0\0"
    17cc:    00 00 00 00     "\0\0\0\0"
    17d0:    00 00 00 00     "\0\0\0\0"
    17d4:    00 00 00 00     "\0\0\0\0"
    17d8:    00 00 00 00     "\0\0\0\0"
    17dc:    00 00 00 00     "\0\0\0\0"
    17e0:    00 00 00 00     "\0\0\0\0"
    17e4:    00 00 00 00     "\0\0\0\0"
    17e8:    00 00 00 00     "\0\0\0\0"
    17ec:    00 00 00 00     "\0\0\0\0"
    17f0:    00 00 00 00     "\0\0\0\0"
    17f4:    00 00 00 00     "\0\0\0\0"
    17f8:    00 00 00 00     "\0\0\0\0"
    17fc:    00 00 00 00     "\0\0\0\0"
    1800:    00 00 00 00     "\0\0\0\0"
    1804:    00 00 00 00     "\0\0\0\0"
    1808:    00 00 00 00     "\0\0\0\0"
    180c:    00 00 00 00     "\0\0\0\0"
    1810:    00 00 00 00     "\0\0\0\0"
    1814:    00 00 00 00     "\0\0\0\0"
    1818:    00 00 00 00     "\0\0\0\0"
    181c:    00 00 00 00     "\0\0\0\0"
    1820:    00 00 00 00     "\0\0\0\0"
    1824:    00 00 00 00     "\0\0\0\0"
    1828:    00 00 00 00     "\0\0\0\0"
    182c:    00 00 00 00     "\0\0\0\0"
    1830:    00 00 00 00     "\0\0\0\0"
    1834:    00 00 00 00     "\0\0\0\0"
    1838:    00 00 00 00     "\0\0\0\0"
    183c:    00 00 00 00     "\0\0\0\0"
    1840:    00 00 00 00     "\0\0\0\0"
    1844:    00 00 00 00     "\0\0\0\0"
    1848:    00 00 00 00     "\0\0\0\0"
    184c:    00 00 00 00     "\0\0\0\0"

stack_magic0:
    1850:    00 00 00 00     "\0\0\0\0"
    1854:    00 00 00 00     "\0\0\0\0"
    1858:    00 00 00 00     "\0\0\0\0"
    185c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .bss:
report_bss_begin:

hci_event_callback_registration:

le_stack_pool:

l2cap_stack:

le_l2cap_event_packet_handler:

hci_event_callback_registration.1439:

l2cap_fixed_channels:

__user_info:

att_s_hdl:

profile_l2cap_hdl:

btstack_stack:

profile_le_pool_hdl:

btstack_global_info:

att_global_info:

gatt_client_global_info:

system_bss_start:

is_key_active:

ble_work_state:

att_ram_buffer:

led8888_scan_t:

is_idle_active:

__errno.err:

mutex:

charge_mode:

power_wakeup_param:

lrc.4:

lrc.2:

mutex.1037:

start_app.app_msg_type:

highCurrentTCB:

sys_low_power:

event:

timer_pool:

bin_cfg:

btif_cfg:

prev_half_msec:

link:

acl_tx_bulk_sem:

hdl.0:

cur_ch:

charge_flag:

connection_update_cnt:

gap_device_name_len:

ota_status:

DISPLAY_DATA_BUFFER.0:

led8888_scan.cnt:

DISPLAY_DATA_BUFFER.4:

DISPLAY_DATA_BUFFER.1:

DISPLAY_DATA_BUFFER.2:

DISPLAY_DATA_BUFFER.3:

cur_battery_level:

vbat_check.unit_cnt:

vbat_check.low_off_cnt:

vbat_check.low_warn_cnt:

vbat_check.charge_ccvol_v_cnt:

vbat_check.low_power_cnt:

vbat_check.low_voice_cnt:

vbat_check.power_normal_cnt:

cur_bat_st:

vbat_check.charge_online_flag:

skip_mode:

app_key_event_handler.goto_poweroff_flag:

p2m_ie:

flash_ie_bak:

flash_ie_bakh:

flash_pu_bak:

flash_pd_bak:

flash_out_bak:

flash_dir_bak:

sys_low_power_request:

sfc_is_busy:

bt_seek_type:

bt_seek_type.5996:

g_update_err_code:

lc_sector_align_mode:

_adc_res:

ldo5v_detect.ldo5v_on_cnt:

ldo5v_detect.ldo5v_off_cnt:

ldo5v_detect.ldo5v_keep_cnt:

charge_full_detect.charge_full_cnt:

con_handle:

charge_ui_timer_id:

bat_val:

battery_full_value:

countdown_stop_vibrate_id:

countdown_timer_id:

countdown_timer_display_id:

countdown_start_vibrate_id:

g_auto_shutdown_timer:

Hall_timer_id:

global_id:

g_bt_read_len:

adc_scan.adc_sample_flag:

__this:

adv_ctrl_en:

ble_update_ready_jump_flag:

lowpower_timer:

vbat_slow_timer:

vbat_fast_timer:

vbat_check.low_voice_first_flag:

is_app_active:

CURRENT_SKIP_NUM:

skip_num_start:

can_enter_lp:

valid_circle:

buzzer_ctrl.init:

uart_sfr.0:

uart_sfr.1:

tmr_sfr.0:

tmr_sfr.1:

tmr_sfr.2:

timer1_isr.cnt1:

hdl.5.506:

usr_jiffies:

delay_cnt:

hdl.4:

hdl.0.510:

hdl.6:

sys_div_bak:

reset_source_value:

port_edge_wakeup_callback:

aport_edge_wakeup_callback:

lrc.0:

lrc.6:

lrc.3:

lrc.5:

memory_init.init:

last_otcb:

last_tcb:

compensation:

tick_cnt:

pxEnd:

xMinimumEverFreeBytesRemaining:

xFreeBytesRemaining:

hdl.0.5056:

hdl.2.5057:

bt_file_offset:

bt_read_buf:

lmp_ch_update_sleep_hdl:

lmp_ch_update_resume_hdl:

bt_file_offset.5995:

ble_update_ctrl.0:

ble_update_ctrl.2:

ble_update_ctrl.1:

ble_update_ctrl.3:

ble_ch_update_sleep_hdl:

ble_ch_update_resume_hdl:

bt_res_update_flag:

p_update_param:

p_update_op:

lc_boot_offset:

vm_poweroff_sfc_info.0:

vm_poweroff_sfc_info.1:

edr_remote_address:

bt_mac_addr_for_testbox:

xStart:

succ_report:

nor_sdfile_hdl:

burn_code:

usr_timer_head:

vbat_value_array:

vbg_value_array:

charge_var:

norflash_dev:

_sdfile_handl:

adv_data:

scan_rsp_data:

app_var:

flash_info:

sys_timer_sem:

sfc_norflash_mutex:

pmu_voltage:

lrc.7:

adc_queue:

stack_mem:

vm_obj:

btctler_bss_start:

tws_bulk_pool_end:

lnav_flag:

ldo_trim_res:

rf_pwr_off_info_p:

ble_pwr_off_store:

h4_transport:

__h4_send_packet:

hdl.4768:

hci_cmd_tmp_buff:

ll_hdl:

pEvent_buf_static:

ll_error_code:

adv_param:

adv_data.3045:

scan_resp_data:

bb_hdl:

bredr_link_v:

lmp_acl_link:

update_bss_start:

curr_loader_file_head:

update_bss_end:

hdl.27:

hdl.5:

hdl.11:

hdl.2.372:

hdl.18:

hdl.19:

hdl.14:

hdl.16:

hdl.0.373:

hdl.1.374:

hdl.24:

hdl.23:

hdl.13:

hdl.15:

hdl.17:

hdl.29:

hdl.30:

hdl.31:

hdl.32:

hdl.3:

clk_set.last_clk:

clock_poweroff_sfc_info.0:

driver_bss_end:

CurrentTCB:
Disassembly of section .data_code:
report_data_code_begin:
    3200:    75 01             	[--sp] = {rets, r5, r4}			  ## task.c:32:0
    3202:    88 f3 cb 1d       	call 1063830 <local_irq_disable : 106d9c >			  ## task.c:35:5
    3206:    88 f3 d5 1d       	call 1063850 <os_current_task_rom : 106db4 >			  ## task.c:37:23
    320a:    04 08             	r4 = r0			  ## task.c:37:23
    320c:    c5 ff a4 ea e0 01 	r5 = 31517348 <task_info_table : 1e0eaa4 >
    3212:    c0 ff 37 f1 e0 01 	r0 = 31519031 <bluetooth_base_uuid+0x12D : 1e0f137 >
    3218:    41 08             	r1 = r4			  ## task.c:40:14
    321a:    88 f3 6b 1e       	call 1064150 <strcmp : 106ef4 >			  ## task.c:40:14
    321e:    06 20             	if (r0 == 0) goto 12 <report_data_code_begin+0x2C : 322c >			  ## task.c:40:14
    3220:    30 4a             	r0 = [r5 + 12]			  ## task.c:39:34
    3222:    c5 80             	r5 += 12			  ## task.c:39:49
    3224:    f9 31             	if (r0 != 0) goto -14 <report_data_code_begin+0x18 : 3218 >			  ## task.c:39:49
    3226:    88 f3 b7 1d       	call 1063790 <local_irq_enable : 106d98 >			  ## task.c:46:5
    322a:    03 18             	goto 6 <report_data_code_begin+0x32 : 3232 >			  ## task.c:46:5
    322c:    88 f3 b4 1d       	call 1063784 <local_irq_enable : 106d98 >			  ## task.c:41:13
    3230:    04 4a             	r4 = [r5 + 0]			  ## task.c:42:23
    3232:    40 08             	r0 = r4			  ## task.c:49:1
    3234:    55 01             	{pc, r5, r4} = [sp++]			  ## task.c:49:1


jiffies_half_msec:
    3236:    77 01             	[--sp] = {rets, r7-r4}			  ## common.c:10:0
    3238:    c1 ff ac 08 00 00 	r1 = 2220 <jiffies : 8ac >			  ## common.c:10:0
    323e:    00 42             	r0 = [r1 + 0]			  ## common.c:11:24
    3240:    c2 ff f0 e0 1b 00 	r2 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## common.c:11:24
    3246:    03 44             	r3 = [r2 + 0]			  ## common.c:12:23
    3248:    12 44             	r2 = [r2 + 4]			  ## common.c:12:39
    324a:    03 fe 14 39       	r3 = r3 * 20			  ## common.c:12:32
    324e:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## common.c:12:37
    3252:    34 fd f8 0c       	r4 = r0 & 134217727			  ## common.c:11:32
    3256:    c3 ff 1c 23 00 00 	r3 = 8988 <prev_half_msec : 231c >			  ## common.c:11:32
    325c:    00 46             	r0 = [r3 + 0]			  ## common.c:14:17
    325e:    46 71             	r6 = 20			  ## common.c:11:50
    3260:    25 08             	r5 = r2			  ## common.c:14:11
    3262:    80 fe 60 54       	r5 += r4 * r6			  ## common.c:14:11
    3266:    16 70             	r6 = 1			  ## common.c:14:11
    3268:    17 70             	r7 = 1			  ## common.c:15:13
    326a:    05 f2 01 b0       	ifs (r5 < r0) goto 2 <jiffies_half_msec+0x3A : 3270 >			  ## common.c:15:13
    326e:    07 70             	r7 = 0			  ## common.c:15:13
    3270:    05 f2 01 30       	if (r5 < r0) goto 2 <jiffies_half_msec+0x40 : 3276 >
    3274:    06 70             	r6 = 0			  ## common.c:14:15
    3276:    56 bf             	r6 &= r7			  ## common.c:14:9
    3278:    04 fe 14 49       	r4 = r4 * 20			  ## common.c:11:50
    327c:    16 e0 08 10       	if (r6 != 1) goto 16 <jiffies_half_msec+0x5A : 3290 >
    3280:    45 81             	r5 += 20			  ## common.c:16:18
    3282:    05 f2 04 a0       	ifs (r5 >= r0) goto 8 <jiffies_half_msec+0x58 : 328e >			  ## common.c:16:18
    3286:    02 42             	r2 = [r1 + 0]			  ## common.c:19:24
    3288:    12 80             	r2 += 1			  ## common.c:19:24
    328a:    0a 42             	[r1 + 0] = r2			  ## common.c:19:24
    328c:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1
    328e:    44 81             	r4 += 20			  ## common.c:17:19
    3290:    80 b8             	r0 = r4 + r2			  ## common.c:24:24
    3292:    08 46             	[r3 + 0] = r0			  ## common.c:24:20
    3294:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1


jiffies_msec:
    3296:    34 00             	[--sp] = rets			  ## common.c:31:0
    3298:    ce 17             	call -100 <jiffies_half_msec : 3236 >			  ## common.c:32:12
    329a:    40 d0             	r0 = r0 >> 1			  ## common.c:32:32
    329c:    30 00             	pc = [sp++]			  ## common.c:32:5


pcTaskName:
    329e:    80 80             	r0 += 8			  ## port_overwrite.c:108:0
    32a0:    20 00             	rts			  ## port_overwrite.c:109:5


vCreateTaskStack:
    32a2:    77 01             	[--sp] = {rets, r7-r4}			  ## port_overwrite.c:127:0
    32a4:    12 08             	r2 = r1			  ## port_overwrite.c:127:0
    32a6:    03 08             	r3 = r0			  ## port_overwrite.c:127:0
    32a8:    32 f2 42 00       	if (r2 == r3) goto 132 <vCreateTaskStack+0x8E : 3330 >			  ## port_overwrite.c:127:0
    32ac:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## port_overwrite.c:135:14
    32b2:    13 f6 d4 00       	[r0 + 212] = r3			  ## port_overwrite.c:134:15
    32b6:    12 f6 d8 00       	[r0 + 216] = r2			  ## port_overwrite.c:135:14
    32ba:    00 47             	r0 = [r3 + 64]			  ## port_overwrite.c:103:21
    32bc:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:103:21
    32be:    05 fc 80 00       	r5 = r0 + 128			  ## port_overwrite.c:136:49
    32c2:    51 f2 03 20       	if (r1 >= r5) goto 6 <vCreateTaskStack+0x2A : 32cc >
    32c6:    b0 f3 44 44       	call -2062200 <cpu_reset.1068 : 1e0bb52 >			  ## port_overwrite.c:139:5
    32ca:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:139:5
    32cc:    03 45             	r3 = [r2 + 64]			  ## port_overwrite.c:103:21
    32ce:    00 44             	r0 = [r2 + 0]
    32d0:    34 fc 80 00       	r4 = r3 + 128			  ## port_overwrite.c:142:49
    32d4:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## port_overwrite.c:140:29
    32d8:    40 f2 03 20       	if (r0 >= r4) goto 6 <vCreateTaskStack+0x40 : 32e2 >
    32dc:    b0 f3 39 44       	call -2062222 <cpu_reset.1068 : 1e0bb52 >			  ## port_overwrite.c:144:5
    32e0:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:144:5
    32e2:    01 4a             	r1 = [r5 + 0]			  ## port_overwrite.c:149:9
    32e4:    67 b7             	r7 = r3 - r5			  ## port_overwrite.c:140:87
    32e6:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## port_overwrite.c:145:29
    32ea:    26 b1             	r6 = r0 - r4			  ## port_overwrite.c:145:87
    32ec:    20 ff 5a 1f 02 00 	if (r1 == 1515870810) goto 4 <vCreateTaskStack+0x54 : 32f6 >
    32f2:    b0 f3 2e 44       	call -2062244 <cpu_reset.1068 : 1e0bb52 >			  ## port_overwrite.c:150:9
    32f6:    a1 bf             	r1 = r7 - r6			  ## port_overwrite.c:165:26
    32f8:    11 e0 07 b0       	ifs (r1 < 1) goto 14 <vCreateTaskStack+0x68 : 330a >			  ## port_overwrite.c:167:9
    32fc:    80 bb             	r0 = r5 + r6			  ## port_overwrite.c:170:34
    32fe:    88 f3 eb 1d       	call 1063894 <vfree_v2 : 106ed8 >			  ## port_overwrite.c:170:9
    3302:    40 08             	r0 = r4			  ## port_overwrite.c:173:9
    3304:    51 08             	r1 = r5			  ## port_overwrite.c:173:9
    3306:    62 08             	r2 = r6			  ## port_overwrite.c:173:9
    3308:    0a 18             	goto 20 <vCreateTaskStack+0x7C : 331e >			  ## port_overwrite.c:173:9
    330a:    f1 ef 05 c0       	ifs (r1 > -1) goto 10 <vCreateTaskStack+0x76 : 3318 >
    330e:    c0 b9             	r0 = r4 + r7			  ## port_overwrite.c:178:36
    3310:    61 fb 00 19       	r1 = 0 - r1			  ## port_overwrite.c:178:52
    3314:    88 f3 de 1d       	call 1063868 <vmalloc_v2 : 106ed4 >			  ## port_overwrite.c:178:9
    3318:    40 08             	r0 = r4
    331a:    51 08             	r1 = r5
    331c:    72 08             	r2 = r7
    331e:    88 f3 dd 1d       	call 1063866 <vcopy_ : 106edc >
    3322:    56 e0 05 30       	if (r6 < 5) goto 10 <vCreateTaskStack+0x8E : 3330 >
    3326:    a0 75             	r0 = 90			  ## port_overwrite.c:193:9
    3328:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:193:9
    332a:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:193:9
    332c:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:193:9
    332e:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:193:9
    3330:    57 01             	{pc, r7-r4} = [sp++]			  ## port_overwrite.c:197:1


pvPortSwitch:
    3332:    c0 ff 50 21 00 00 	r0 = 8528 <highCurrentTCB : 2150 >			  ## port_overwrite.c:213:0
    3338:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:218:32
    333a:    c1 ff f0 31 00 00 	r1 = 12784 <CurrentTCB : 31f0 >			  ## port_overwrite.c:217:32
    3340:    02 42             	r2 = [r1 + 0]			  ## port_overwrite.c:217:32
    3342:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:218:23
    3344:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:217:23
    3346:    ad 1f             	goto -166 <vCreateTaskStack : 32a2 >			  ## port_overwrite.c:220:5


uxTaskStack:
    3348:    00 41             	r0 = [r0 + 64]			  ## port_overwrite.c:102:0
    334a:    20 00             	rts			  ## port_overwrite.c:103:5


vAppSoftwareInterruptISR:
    334c:    18 00             	cli			  ## port_overwrite.c:498:0
    334e:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_overwrite.c:499:5
    3352:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:499:5
    3358:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:499:5
    335a:    f1 b1             	r1 &= 4294967287			  ## port_overwrite.c:499:5
    335c:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:499:5
    335e:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_overwrite.c:499:5
    3362:    3c 00             	sp = usp			  ## port_overwrite.c:499:5
    3364:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## port_overwrite.c:499:5
    3368:    e9 01             	[--sp] = {psr, rets, reti}			  ## port_overwrite.c:499:5
    336a:    c1 ff f0 31 00 00 	r1 = 12784 <CurrentTCB : 31f0 >			  ## port_overwrite.c:499:5
    3370:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:499:5
    3372:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:499:5
    3374:    28 fb 00 0e       	r0 = sp			  ## port_overwrite.c:499:5
    3378:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:499:5
    337a:    3d 00             	sp = ssp			  ## port_overwrite.c:499:5
    337c:    da 17             	call -76 <pvPortSwitch : 3332 >			  ## port_overwrite.c:499:5
    337e:    88 f3 8b 1d       	call 1063702 <OS_ClrPending : 106e98 >			  ## port_overwrite.c:499:5
    3382:    c0 ff 50 21 00 00 	r0 = 8528 <highCurrentTCB : 2150 >			  ## port_overwrite.c:499:5
    3388:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:499:5
    338a:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:499:5
    338c:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:499:5
    338e:    29 fb 00 0e       	sp = r0			  ## port_overwrite.c:499:5
    3392:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_overwrite.c:499:5
    3394:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_overwrite.c:499:5
    3398:    3e 00             	usp = sp			  ## port_overwrite.c:499:5
    339a:    3d 00             	sp = ssp			  ## port_overwrite.c:499:5
    339c:    78 f3 01 00       	[--sp] = {r0}			  ## port_overwrite.c:499:5
    33a0:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:499:5
    33a6:    00 f4 08 09       	[r0 + 0] |= 8			  ## port_overwrite.c:499:5
    33aa:    70 f3 01 00       	{r0} = [sp++]			  ## port_overwrite.c:499:5
    33ae:    1c 00             	sti			  ## port_overwrite.c:499:5
    33b0:    22 00             	rti			  ## port_overwrite.c:499:5
    33b2:    20 00             	rts			  ## port_overwrite.c:543:1


vAppPortStartFirstTask:
    33b4:    18 00             	cli			  ## port_asm_mmu.S:12:0
    33b6:    c0 ff f0 31 00 00 	r0 = 12784 <CurrentTCB : 31f0 >			  ## port_asm_mmu.S:13:0
    33bc:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:14:0
    33be:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:15:0
    33c0:    b0 f3 ee 43       	call -2062372 <vFillingTaskStack : 1e0bba0 >			  ## port_asm_mmu.S:16:0
    33c4:    c0 ff f0 31 00 00 	r0 = 12784 <CurrentTCB : 31f0 >			  ## port_asm_mmu.S:17:0
    33ca:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:18:0
    33cc:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:19:0
    33ce:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:20:0
    33d0:    29 fb 00 0e       	sp = r0			  ## port_asm_mmu.S:21:0
    33d4:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_asm_mmu.S:22:0
    33d6:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_asm_mmu.S:23:0
    33da:    1c 00             	sti			  ## port_asm_mmu.S:24:0
    33dc:    22 00             	rti			  ## port_asm_mmu.S:25:0


begin_of_data:
    33de:    e0 01             	[--sp] = {psr}			  ## port_asm_mmu.S:39:0
    33e0:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_asm_mmu.S:40:0
    33e4:    c0 ff ac 08 00 00 	r0 = 2220 <jiffies : 8ac >			  ## port_asm_mmu.S:41:0
    33ea:    01 40             	r1 = [r0 + 0]			  ## port_asm_mmu.S:42:0
    33ec:    11 80             	r1 += 1			  ## port_asm_mmu.S:43:0
    33ee:    09 40             	[r0 + 0] = r1			  ## port_asm_mmu.S:44:0
    33f0:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_asm_mmu.S:45:0
    33f4:    a0 01             	{psr} = [sp++]			  ## port_asm_mmu.S:46:0
    33f6:    c8 f3 51 1d       	goto 1063586 <vTickISR : 106e9c >			  ## port_asm_mmu.S:47:0
    33fa:    00 00             	nop
    33fc:    00 00             	nop
    33fe:    00 00             	nop


delay_nus:
    3400:    c1 ff c0 47 00 00 	r1 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:170:0
    3406:    01 f9 45 10       	r1 = b[r1 + 69] (u)			  ## power_hw.c:172:16
    340a:    08 0e             	r0 = r1 * r0			  ## power_hw.c:172:14
    340c:    03 20             	if (r0 == 0) goto 6 <delay_nus+0x14 : 3414 >
    340e:    f0 8f             	r0 += -1			  ## power_hw.c:163:13
    3410:    00 00             	nop			  ## power_hw.c:164:9
    3412:    fd 31             	if (r0 != 0) goto -6 <delay_nus+0xE : 340e >			  ## power_hw.c:164:9
    3414:    20 00             	rts			  ## power_hw.c:173:1


p33_soft_reset:
    3416:    c0 ff a0 18 1a 00 	r0 = 1710240 <uECC_vli_cmp_unsafe+0x9A8A4 : 1a18a0 >			  ## power_hw.c:1609:0
    341c:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1610:5
    341e:    11 b2             	r1 |= 16			  ## power_hw.c:1610:5
    3420:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1610:5
    3422:    20 00             	rts			  ## power_hw.c:1611:1


enter_spi_code:
    3424:    34 00             	[--sp] = rets			  ## vm_sfc.c:258:0
    3426:    88 f3 b9 1c       	call 1063282 <local_irq_disable : 106d9c >			  ## vm_sfc.c:260:5
    342a:    08 00             	csync			  ## vm_sfc.c:260:5
    342c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3432:    11 70             	r1 = 1			  ## vm_sfc.c:222:17
    3434:    f9 61             	b[r0 + 31] = r1			  ## vm_sfc.c:222:17
    3436:    10 70             	r0 = 1			  ## vm_sfc.c:264:5
    3438:    88 f3 74 1d       	call 1063656 <sfc_suspend : 106f24 >			  ## vm_sfc.c:264:5
    343c:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:266:29
    3442:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:266:29
    3444:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    344a:    c0 f4 43 09       	[r0 + 0] = 67			  ## vm_sfc.c:287:22
    344e:    c1 f4 47 09       	[r0 + 4] = 71			  ## vm_sfc.c:288:22
    3452:    c2 f4 4b 09       	[r0 + 8] = 75			  ## vm_sfc.c:289:22
    3456:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:289:22
    345a:    c0 f4 16 09       	[r0 + 0] = 22			  ## vm_sfc.c:290:26
    345e:    c1 f4 17 09       	[r0 + 4] = 23			  ## vm_sfc.c:291:26
    3462:    30 00             	pc = [sp++]			  ## vm_sfc.c:301:1


spi_writebyte:
    3464:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:73:0
    346a:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:74:18
    346e:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:75:18
    3470:    72 b6             	r2 &= 4294963199			  ## vm_sfc.c:75:18
    3472:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:75:18
    3474:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:76:18
    3476:    08 00             	csync			  ## vm_sfc.c:65:5
    3478:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:66:23
    347a:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:66:12
    347c:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte+0x14 : 3478 >			  ## vm_sfc.c:66:5
    3480:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:67:18
    3484:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:78:18
    3486:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:78:18
    3488:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:78:18
    348a:    20 00             	rts			  ## vm_sfc.c:79:1


norflash_send_addr:
    348c:    34 00             	[--sp] = rets			  ## vm_sfc.c:350:0
    348e:    03 08             	r3 = r0			  ## vm_sfc.c:350:0
    3490:    88 fd 80 03       	r0 = uextra(r3, p:16, l:8)			  ## vm_sfc.c:351:5
    3494:    e7 17             	call -50 <spi_writebyte : 3464 >			  ## vm_sfc.c:351:5
    3496:    88 fd 40 03       	r0 = uextra(r3, p:8, l:8)			  ## vm_sfc.c:352:5
    349a:    e4 17             	call -56 <spi_writebyte : 3464 >			  ## vm_sfc.c:352:5
    349c:    c0 04             	r0 = r3.b0 (u)			  ## vm_sfc.c:353:5
    349e:    88 01             	{rets} = [sp++]			  ## vm_sfc.c:353:5
    34a0:    e1 1f             	goto -62 <spi_writebyte : 3464 >			  ## vm_sfc.c:353:5


spi_readbyte_dma:
    34a2:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:105:0
    34a8:    c2 f4 ff 09       	[r0 + 8] = 255			  ## vm_sfc.c:108:18
    34ac:    08 00             	csync			  ## vm_sfc.c:65:5
    34ae:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:66:23
    34b0:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:66:12
    34b2:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_readbyte_dma+0xC : 34ae >			  ## vm_sfc.c:66:5
    34b6:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:67:18
    34ba:    20 40             	r0 = [r0 + 8]			  ## vm_sfc.c:110:25
    34bc:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:112:5
    34be:    20 00             	rts			  ## vm_sfc.c:112:5


spi_read_dma:
    34c0:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:156:0
    34c2:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:157:29
    34c8:    02 44             	r2 = [r2 + 0]			  ## vm_sfc.c:157:29
    34ca:    c4 ff 00 1c 1e 00 	r4 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:157:29
    34d0:    00 f4 10 4a       	[r4 + 0] |= 4096			  ## vm_sfc.c:164:18
    34d4:    84 fd 40 52       	r5 = uextra(r2, p:8, l:4)			  ## vm_sfc.c:166:5
    34d8:    12 08             	r2 = r1
    34da:    03 08             	r3 = r0
    34dc:    95 e0 12 80       	if (r5 > 9) goto 36 <spi_read_dma+0x44 : 3504 >
    34e0:    10 70             	r0 = 1
    34e2:    f8 fd 50 10       	r1 = r0 << r5
    34e6:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    34ea:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >
    34ee:    51 f1 06 00       	if ((r1 & r5) != 0) goto 12 <spi_read_dma+0x3E : 34fe >
    34f2:    00 fb a8 02       	r0 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    34f6:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <spi_read_dma+0x44 : 3504 >
    34fa:    00 fb 00 08       	r0 = 2048 <report_mmu_tlb_size : 800 >
    34fe:    01 48             	r1 = [r4 + 0]
    3500:    50 b2             	r0 |= r1
    3502:    08 48             	[r4 + 0] = r0
    3504:    06 24             	if (r2 == 0) goto 12 <spi_read_dma+0x52 : 3512 >
    3506:    cd 17             	call -102 <spi_readbyte_dma : 34a2 >			  ## vm_sfc.c:185:16
    3508:    f2 8f             	r2 += -1			  ## vm_sfc.c:184:15
    350a:    a1 04             	r1 = r2.l (u)			  ## vm_sfc.c:184:5
    350c:    90 f9 01 30       	b[r3 ++= 1] = r0			  ## vm_sfc.c:185:14
    3510:    fa 33             	if (r1 != 0) goto -12 <spi_read_dma+0x46 : 3506 >
    3512:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:189:18
    3514:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:189:18
    3518:    00 70             	r0 = 0			  ## vm_sfc.c:190:5
    351a:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:189:18
    351c:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:190:5


spi_readbyte:
    351e:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:90:0
    3524:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:93:18
    3528:    00 f4 10 1a       	[r1 + 0] |= 4096			  ## vm_sfc.c:94:18
    352c:    c2 f4 ff 19       	[r1 + 8] = 255			  ## vm_sfc.c:95:18
    3530:    08 00             	csync			  ## vm_sfc.c:65:5
    3532:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:66:23
    3534:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:66:12
    3536:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_readbyte+0x14 : 3532 >			  ## vm_sfc.c:66:5
    353a:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:67:18
    353e:    20 42             	r0 = [r1 + 8]			  ## vm_sfc.c:97:25
    3540:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:98:18
    3542:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:98:18
    3544:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:100:5
    3546:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:98:18
    3548:    20 00             	rts			  ## vm_sfc.c:100:5


spi_write_dma:
    354a:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:117:0
    354c:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:118:29
    3552:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:118:29
    3554:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:118:29
    355a:    04 44             	r4 = [r2 + 0]			  ## vm_sfc.c:125:18
    355c:    74 b6             	r4 &= 4294963199			  ## vm_sfc.c:125:18
    355e:    84 fd 40 33       	r3 = uextra(r3, p:8, l:4)			  ## vm_sfc.c:127:5
    3562:    0c 44             	[r2 + 0] = r4			  ## vm_sfc.c:125:18
    3564:    93 e0 15 80       	if (r3 > 9) goto 42 <spi_write_dma+0x48 : 3592 >			  ## vm_sfc.c:125:18
    3568:    14 70             	r4 = 1
    356a:    c4 0c             	r4 <<= r3
    356c:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    3570:    03 fb 00 04       	r3 = 1024 <BTCTLER_LE_RAM_TOTAL+0x28 : 400 >
    3574:    54 f1 0a 00       	if ((r4 & r5) != 0) goto 20 <spi_write_dma+0x42 : 358c >
    3578:    03 fb a8 02       	r3 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    357c:    34 f0 09 00       	if ((r4 & r3) == 0) goto 18 <spi_write_dma+0x48 : 3592 >
    3580:    03 fb 00 08       	r3 = 2048 <report_mmu_tlb_size : 800 >
    3584:    03 18             	goto 6 <spi_write_dma+0x42 : 358c >
    3586:    f1 8f             	r1 += -1			  ## vm_sfc.c:145:15
    3588:    03 fb 00 40       	r3 = 16384 <low_power_system_down+0x194 : 4000 >
    358c:    04 44             	r4 = [r2 + 0]
    358e:    53 b8             	r3 |= r4
    3590:    0b 44             	[r2 + 0] = r3
    3592:    63 04             	r3 = r1.l (u)			  ## vm_sfc.c:145:5
    3594:    09 26             	if (r3 == 0) goto 18 <spi_write_dma+0x5E : 35a8 >			  ## vm_sfc.c:145:5
    3596:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## vm_sfc.c:84:20
    359a:    2b 44             	[r2 + 8] = r3			  ## vm_sfc.c:84:18
    359c:    08 00             	csync			  ## vm_sfc.c:65:5
    359e:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:66:23
    35a0:    f3 04             	r3 = r3.l (s)			  ## vm_sfc.c:66:12
    35a2:    f3 ef fc cf       	ifs (r3 > -1) goto -8 <spi_write_dma+0x54 : 359e >			  ## vm_sfc.c:66:5
    35a6:    ef 1f             	goto -34 <spi_write_dma+0x3C : 3586 >			  ## vm_sfc.c:66:5
    35a8:    00 44             	r0 = [r2 + 0]			  ## vm_sfc.c:149:18
    35aa:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:149:18
    35ae:    00 70             	r0 = 0			  ## vm_sfc.c:151:5
    35b0:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:149:18
    35b2:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:151:5


__norflash_read:
    35b4:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:408:0
    35b6:    de 0b             	sp += -68			  ## vm_sfc.c:408:0
    35b8:    c4 ff 00 02 1f 00 	r4 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:409:29
    35be:    07 48             	r7 = [r4 + 0]			  ## vm_sfc.c:409:29
    35c0:    a4 fd 40 57       	r5 = sextra(r7, p:8, l:4)			  ## vm_sfc.c:417:5
    35c4:    24 08             	r4 = r2			  ## vm_sfc.c:417:5
    35c6:    16 08             	r6 = r1
    35c8:    09 08             	r9 = r0
    35ca:    05 e0 25 b0       	ifs (r5 < 0) goto 74 <.GJTIE86_0_0_+0x2C : 3618 >
    35ce:    84 fd 40 07       	r0 = uextra(r7, p:8, l:4)
    35d2:    41 c0             	r1 = r0 << 1
    35d4:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    35da:    b1 00             	tbh [r1]


.GJTIL86_0_0_:
    35dc:    08 00     < 8 : 0x8 >
    35de:    20 00     < 32 : 0x20 >
    35e0:    37 00     < 55 : 0x37 >
    35e2:    50 00     < 80 : 0x50 >
    35e4:    69 00     < 105 : 0x69 >
    35e6:    8b 00     < 139 : 0x8B >
    35e8:    b1 00     < 177 : 0xB1 >
    35ea:    d4 00     < 212 : 0xD4 >
    35ec:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    35ee:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    35f0:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    35f2:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    35f4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    35f6:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    35f8:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    35fa:    1d 02             	[sp+4] = r5
    35fc:    30 70             	r0 = 3			  ## vm_sfc.c:420:9
    35fe:    32 17             	call -412 <spi_writebyte : 3464 >			  ## vm_sfc.c:420:9
    3600:    60 08             	r0 = r6			  ## vm_sfc.c:421:9
    3602:    44 17             	call -376 <norflash_send_addr : 348c >			  ## vm_sfc.c:421:9
    3604:    90 08             	r0 = r9			  ## vm_sfc.c:422:9
    3606:    41 08             	r1 = r4			  ## vm_sfc.c:422:9
    3608:    5b 17             	call -330 <spi_read_dma : 34c0 >			  ## vm_sfc.c:422:9
    360a:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    360c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    360e:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3610:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3614:    3d 02             	[sp+12] = r5
    3616:    de 18             	goto 444 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    3618:    f4 07             	r4 = -1
    361a:    dc 18             	goto 440 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    361c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    361e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3620:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3622:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3624:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3626:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3628:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    362a:    4d 02             	[sp+16] = r5
    362c:    b0 70             	r0 = 11			  ## vm_sfc.c:428:9
    362e:    1a 17             	call -460 <spi_writebyte : 3464 >			  ## vm_sfc.c:428:9
    3630:    60 08             	r0 = r6			  ## vm_sfc.c:429:9
    3632:    2c 17             	call -424 <norflash_send_addr : 348c >			  ## vm_sfc.c:429:9
    3634:    74 17             	call -280 <spi_readbyte : 351e >			  ## vm_sfc.c:430:9
    3636:    90 08             	r0 = r9			  ## vm_sfc.c:431:9
    3638:    41 08             	r1 = r4			  ## vm_sfc.c:431:9
    363a:    42 17             	call -380 <spi_read_dma : 34c0 >			  ## vm_sfc.c:431:9
    363c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    363e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3640:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3642:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3646:    5d 02             	[sp+20] = r5
    3648:    c5 18             	goto 394 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    364a:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    364c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    364e:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3650:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3652:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3654:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3656:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    3658:    cd 02             	[sp+48] = r5
    365a:    b0 73             	r0 = 59			  ## vm_sfc.c:464:9
    365c:    03 17             	call -506 <spi_writebyte : 3464 >			  ## vm_sfc.c:464:9
    365e:    60 08             	r0 = r6			  ## vm_sfc.c:465:9
    3660:    15 17             	call -470 <norflash_send_addr : 348c >			  ## vm_sfc.c:465:9
    3662:    00 a0             	r0 = sp + 0
    3664:    21 70             	r1 = 2			  ## vm_sfc.c:466:9
    3666:    2c 17             	call -424 <spi_read_dma : 34c0 >			  ## vm_sfc.c:466:9
    3668:    90 08             	r0 = r9			  ## vm_sfc.c:467:9
    366a:    41 08             	r1 = r4			  ## vm_sfc.c:467:9
    366c:    29 17             	call -430 <spi_read_dma : 34c0 >			  ## vm_sfc.c:467:9
    366e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3670:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3672:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3674:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3678:    fd 02             	[sp+60] = r5
    367a:    ac 18             	goto 344 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    367c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    367e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3680:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3682:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3684:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3686:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3688:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    368a:    0d 03             	[sp+64] = r5
    368c:    b0 76             	r0 = 107			  ## vm_sfc.c:474:9
    368e:    ea 16             	call -556 <spi_writebyte : 3464 >			  ## vm_sfc.c:474:9
    3690:    60 08             	r0 = r6			  ## vm_sfc.c:475:9
    3692:    fc 16             	call -520 <norflash_send_addr : 348c >			  ## vm_sfc.c:475:9
    3694:    00 a0             	r0 = sp + 0
    3696:    41 70             	r1 = 4			  ## vm_sfc.c:476:9
    3698:    13 17             	call -474 <spi_read_dma : 34c0 >			  ## vm_sfc.c:476:9
    369a:    90 08             	r0 = r9			  ## vm_sfc.c:477:9
    369c:    41 08             	r1 = r4			  ## vm_sfc.c:477:9
    369e:    10 17             	call -480 <spi_read_dma : 34c0 >			  ## vm_sfc.c:477:9
    36a0:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36a2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36a4:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36a6:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    36aa:    ed 02             	[sp+56] = r5
    36ac:    93 18             	goto 294 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    36ae:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:436:38
    36b0:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:436:26
    36b4:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:437:38
    36b6:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:437:26
    36ba:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:438:26
    36be:    00 70             	r0 = 0			  ## vm_sfc.c:439:26
    36c0:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:439:26
    36c4:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36c6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36c8:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36ca:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    36cc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    36ce:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    36d0:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    36d2:    6d 02             	[sp+24] = r5
    36d4:    b0 7b             	r0 = 187			  ## vm_sfc.c:441:9
    36d6:    c6 16             	call -628 <spi_writebyte : 3464 >			  ## vm_sfc.c:441:9
    36d8:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:441:9
    36da:    41 70             	r1 = 4			  ## vm_sfc.c:442:9
    36dc:    36 17             	call -404 <spi_write_dma : 354a >			  ## vm_sfc.c:442:9
    36de:    90 08             	r0 = r9			  ## vm_sfc.c:443:9
    36e0:    41 08             	r1 = r4			  ## vm_sfc.c:443:9
    36e2:    ee 16             	call -548 <spi_read_dma : 34c0 >			  ## vm_sfc.c:443:9
    36e4:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    36e6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    36e8:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    36ea:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    36ee:    9d 02             	[sp+36] = r5
    36f0:    71 18             	goto 226 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    36f2:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:482:38
    36f4:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:482:26
    36f8:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:483:38
    36fa:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:483:26
    36fe:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:484:26
    3702:    00 70             	r0 = 0			  ## vm_sfc.c:485:26
    3704:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:485:26
    3708:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    370a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    370c:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    370e:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    3710:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3712:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3714:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    3716:    dd 02             	[sp+52] = r5
    3718:    b0 7e             	r0 = 235			  ## vm_sfc.c:488:9
    371a:    a4 16             	call -696 <spi_writebyte : 3464 >			  ## vm_sfc.c:488:9
    371c:    06 a0             	r6 = sp + 0			  ## vm_sfc.c:488:9
    371e:    41 70             	r1 = 4			  ## vm_sfc.c:489:9
    3720:    60 08             	r0 = r6			  ## vm_sfc.c:489:9
    3722:    13 17             	call -474 <spi_write_dma : 354a >			  ## vm_sfc.c:489:9
    3724:    21 70             	r1 = 2			  ## vm_sfc.c:490:9
    3726:    60 08             	r0 = r6			  ## vm_sfc.c:490:9
    3728:    cb 16             	call -618 <spi_read_dma : 34c0 >			  ## vm_sfc.c:490:9
    372a:    90 08             	r0 = r9			  ## vm_sfc.c:491:9
    372c:    41 08             	r1 = r4			  ## vm_sfc.c:491:9
    372e:    c8 16             	call -624 <spi_read_dma : 34c0 >			  ## vm_sfc.c:491:9
    3730:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3732:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3734:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    3736:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    373a:    8d 02             	[sp+32] = r5
    373c:    4b 18             	goto 150 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    373e:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:448:38
    3740:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:448:26
    3744:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:449:38
    3746:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:449:26
    374a:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:450:26
    374e:    00 7a             	r0 = 160			  ## vm_sfc.c:451:26
    3750:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:451:26
    3754:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3756:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3758:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    375a:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    375c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    375e:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    3760:    a6 70             	r6 = 10			  ## vm_sfc.c:58:53
    3762:    ae 02             	[sp+40] = r6
    3764:    02 26             	if (r3 == 0) goto 4 <.GJTIE86_0_0_+0x17E : 376a >
    3766:    b0 7b             	r0 = 187			  ## vm_sfc.c:454:13
    3768:    7d 16             	call -774 <spi_writebyte : 3464 >			  ## vm_sfc.c:454:13
    376a:    00 a0             	r0 = sp + 0
    376c:    41 70             	r1 = 4			  ## vm_sfc.c:456:9
    376e:    ed 16             	call -550 <spi_write_dma : 354a >			  ## vm_sfc.c:456:9
    3770:    90 08             	r0 = r9			  ## vm_sfc.c:457:9
    3772:    41 08             	r1 = r4			  ## vm_sfc.c:457:9
    3774:    a5 16             	call -694 <spi_read_dma : 34c0 >			  ## vm_sfc.c:457:9
    3776:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    3778:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    377a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    377c:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    3780:    be 02             	[sp+44] = r6
    3782:    28 18             	goto 80 <.GJTIE86_0_0_+0x1E8 : 37d4 >
    3784:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:496:38
    3786:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:496:26
    378a:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:497:38
    378c:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:497:26
    3790:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:498:26
    3794:    00 7a             	r0 = 160			  ## vm_sfc.c:499:26
    3796:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:499:26
    379a:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    379c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    379e:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    37a0:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:57:19
    37a2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    37a4:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:58:53
    37a6:    a8 70             	r8 = 10			  ## vm_sfc.c:58:53
    37a8:    18 f5 1c 00       	[sp+28] = r8
    37ac:    02 26             	if (r3 == 0) goto 4 <.GJTIE86_0_0_+0x1C6 : 37b2 >
    37ae:    b0 7e             	r0 = 235			  ## vm_sfc.c:502:13
    37b0:    59 16             	call -846 <spi_writebyte : 3464 >			  ## vm_sfc.c:502:13
    37b2:    06 a0             	r6 = sp + 0
    37b4:    41 70             	r1 = 4			  ## vm_sfc.c:504:9
    37b6:    60 08             	r0 = r6			  ## vm_sfc.c:504:9
    37b8:    c8 16             	call -624 <spi_write_dma : 354a >			  ## vm_sfc.c:504:9
    37ba:    21 70             	r1 = 2			  ## vm_sfc.c:505:9
    37bc:    60 08             	r0 = r6			  ## vm_sfc.c:505:9
    37be:    80 16             	call -768 <spi_read_dma : 34c0 >			  ## vm_sfc.c:505:9
    37c0:    90 08             	r0 = r9			  ## vm_sfc.c:506:9
    37c2:    41 08             	r1 = r4			  ## vm_sfc.c:506:9
    37c4:    7d 16             	call -774 <spi_read_dma : 34c0 >			  ## vm_sfc.c:506:9
    37c6:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:57:19
    37c8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    37ca:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:57:19
    37cc:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:57:19
    37d0:    18 f5 08 00       	[sp+8] = r8
    37d4:    40 08             	r0 = r4			  ## vm_sfc.c:514:1
    37d6:    22 0a             	sp += 68			  ## vm_sfc.c:514:1
    37d8:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:514:1


_norflash_read:
    37da:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:546:0
    37dc:    24 08             	r4 = r2			  ## vm_sfc.c:546:0
    37de:    15 08             	r5 = r1			  ## vm_sfc.c:546:0
    37e0:    06 08             	r6 = r0			  ## vm_sfc.c:546:0
    37e2:    20 16             	call -960 <enter_spi_code : 3424 >			  ## vm_sfc.c:548:5
    37e4:    22 05             	r2 = r4.l (u)			  ## vm_sfc.c:550:5
    37e6:    03 70             	r3 = 0			  ## vm_sfc.c:550:5
    37e8:    07 70             	r7 = 0			  ## vm_sfc.c:550:5
    37ea:    60 08             	r0 = r6			  ## vm_sfc.c:550:5
    37ec:    51 08             	r1 = r5			  ## vm_sfc.c:550:5
    37ee:    e2 16             	call -572 <__norflash_read : 35b4 >			  ## vm_sfc.c:550:5
    37f0:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    37f2:    88 f3 99 1b       	call 1062706 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    37f6:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    37fc:    ff 61             	b[r0 + 31] = r7			  ## vm_sfc.c:222:17
    37fe:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    3804:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3806:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    380c:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:322:22
    380e:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:323:22
    3810:    2f 40             	[r0 + 8] = r7			  ## vm_sfc.c:324:22
    3812:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3816:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:325:26
    3818:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:326:26
    381a:    88 f3 bd 1a       	call 1062266 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    381e:    40 08             	r0 = r4			  ## vm_sfc.c:553:5
    3820:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:553:5


flash_addr2cpu_addr:
    3822:    c1 ff b0 25 00 00 	r1 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:198:0
    3828:    02 f6 98 10       	r2 = [r1 + 152]			  ## vm_sfc.c:200:30
    382c:    01 f6 9c 10       	r1 = [r1 + 156]			  ## vm_sfc.c:202:27
    3830:    a0 b0             	r0 = r0 - r2			  ## vm_sfc.c:200:12
    3832:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3834:    20 00             	rts			  ## vm_sfc.c:202:5


exit_continue_mode:
    3836:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:519:0
    3838:    f8 0b             	sp += -16			  ## vm_sfc.c:519:0
    383a:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:520:29
    3840:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:520:29
    3842:    84 fd 40 10       	r1 = uextra(r0, p:8, l:4)			  ## vm_sfc.c:523:9
    3846:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:523:9
    384c:    61 e0 14 00       	if (r1 == 6) goto 40 <exit_continue_mode+0x42 : 3878 >			  ## vm_sfc.c:523:9
    3850:    00 70             	r0 = 0
    3852:    71 e0 24 10       	if (r1 != 7) goto 72 <exit_continue_mode+0x68 : 389e >
    3856:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    3858:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    385a:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    385c:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    385e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3860:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    3862:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    3864:    0c 02             	[sp] = r4
    3866:    f0 7f             	r0 = 255			  ## vm_sfc.c:525:9
    3868:    fd 15             	call -1030 <spi_writebyte : 3464 >			  ## vm_sfc.c:525:9
    386a:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    386c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    386e:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    3870:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    3874:    2c 02             	[sp+8] = r4
    3876:    12 18             	goto 36 <exit_continue_mode+0x66 : 389c >
    3878:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    387a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    387c:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    387e:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    3880:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3882:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    3884:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    3886:    3c 02             	[sp+12] = r4
    3888:    f0 7f             	r0 = 255			  ## vm_sfc.c:530:9
    388a:    ec 15             	call -1064 <spi_writebyte : 3464 >			  ## vm_sfc.c:530:9
    388c:    f0 7f             	r0 = 255			  ## vm_sfc.c:531:9
    388e:    ea 15             	call -1068 <spi_writebyte : 3464 >			  ## vm_sfc.c:531:9
    3890:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    3892:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3894:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    3896:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    389a:    1c 02             	[sp+4] = r4
    389c:    10 70             	r0 = 1
    389e:    08 0a             	sp += 16
    38a0:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:535:5


read_flash_id:
    38a2:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:784:0
    38a4:    f6 0b             	sp += -20			  ## vm_sfc.c:784:0
    38a6:    be 15             	call -1156 <enter_spi_code : 3424 >			  ## vm_sfc.c:785:5
    38a8:    c6 17             	call -116 <exit_continue_mode : 3836 >			  ## vm_sfc.c:786:21
    38aa:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:786:21
    38b0:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:57:19
    38b2:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    38b4:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:57:19
    38b6:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:57:19
    38b8:    03 08             	r3 = r0			  ## vm_sfc.c:786:21
    38ba:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:58:53
    38be:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:58:53
    38c0:    a0 70             	r0 = 10			  ## vm_sfc.c:58:53
    38c2:    08 02             	[sp] = r0
    38c4:    f0 79             	r0 = 159			  ## vm_sfc.c:790:5
    38c6:    ce 15             	call -1124 <spi_writebyte : 3464 >			  ## vm_sfc.c:790:5
    38c8:    c4 ff b0 25 00 00 	r4 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:790:5
    38ce:    06 70             	r6 = 0			  ## vm_sfc.c:790:5
    38d0:    16 f6 84 40       	[r4 + 132] = r6			  ## vm_sfc.c:791:25
    38d4:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:793:34
    38d6:    23 16             	call -954 <spi_readbyte : 351e >			  ## vm_sfc.c:793:36
    38d8:    10 f9 68 70       	b[r7 + 104] = r0			  ## vm_sfc.c:793:34
    38dc:    01 f6 84 40       	r1 = [r4 + 132]			  ## vm_sfc.c:794:29
    38e0:    50 b2             	r0 |= r1			  ## vm_sfc.c:794:29
    38e2:    00 c2             	r0 = r0 << 8			  ## vm_sfc.c:795:29
    38e4:    16 80             	r6 += 1			  ## vm_sfc.c:792:25
    38e6:    10 f6 84 40       	[r4 + 132] = r0			  ## vm_sfc.c:795:29
    38ea:    36 e0 f3 1f       	if (r6 != 3) goto -26 <read_flash_id+0x32 : 38d4 >			  ## vm_sfc.c:792:5
    38ee:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    38f0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    38f2:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    38f4:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:57:19
    38f8:    a0 70             	r0 = 10			  ## vm_sfc.c:57:19
    38fa:    18 02             	[sp+4] = r0
    38fc:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:57:19
    38fe:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    3900:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:57:19
    3902:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:57:19
    3904:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:58:53
    3906:    09 4a             	[r5 + 0] = r1			  ## vm_sfc.c:58:53
    3908:    28 02             	[sp+8] = r0
    390a:    b0 74             	r0 = 75			  ## vm_sfc.c:803:5
    390c:    ab 15             	call -1194 <spi_writebyte : 3464 >			  ## vm_sfc.c:803:5
    390e:    00 70             	r0 = 0			  ## vm_sfc.c:804:5
    3910:    06 70             	r6 = 0			  ## vm_sfc.c:804:5
    3912:    a8 15             	call -1200 <spi_writebyte : 3464 >			  ## vm_sfc.c:804:5
    3914:    00 70             	r0 = 0			  ## vm_sfc.c:805:5
    3916:    a6 15             	call -1204 <spi_writebyte : 3464 >			  ## vm_sfc.c:805:5
    3918:    00 70             	r0 = 0			  ## vm_sfc.c:806:5
    391a:    a4 15             	call -1208 <spi_writebyte : 3464 >			  ## vm_sfc.c:806:5
    391c:    00 70             	r0 = 0			  ## vm_sfc.c:807:5
    391e:    a2 15             	call -1212 <spi_writebyte : 3464 >			  ## vm_sfc.c:807:5
    3920:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:809:34
    3922:    fd 15             	call -1030 <spi_readbyte : 351e >			  ## vm_sfc.c:809:36
    3924:    16 80             	r6 += 1			  ## vm_sfc.c:808:19
    3926:    10 f9 6b 70       	b[r7 + 107] = r0			  ## vm_sfc.c:809:34
    392a:    06 e1 f9 1f       	if (r6 != 16) goto -14 <read_flash_id+0x7E : 3920 >			  ## vm_sfc.c:808:5
    392e:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    3930:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3932:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    3934:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:57:19
    3938:    a0 70             	r0 = 10			  ## vm_sfc.c:57:19
    393a:    48 02             	[sp+16] = r0
    393c:    05 26             	if (r3 == 0) goto 10 <read_flash_id+0xA6 : 3948 >
    393e:    c0 a0             	r0 = sp + 12
    3940:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    3942:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    3944:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    3946:    36 16             	call -916 <__norflash_read : 35b4 >			  ## vm_sfc.c:541:5
    3948:    00 f6 84 40       	r0 = [r4 + 132]			  ## vm_sfc.c:816:25
    394c:    00 d2             	r0 = r0 >> 8			  ## vm_sfc.c:816:25
    394e:    10 f6 84 40       	[r4 + 132] = r0			  ## vm_sfc.c:816:25
    3952:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3954:    88 f3 e8 1a       	call 1062352 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3958:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    395e:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    3960:    f9 61             	b[r0 + 31] = r1			  ## vm_sfc.c:222:17
    3962:    40 fb af 5a       	r0 = r5 + 44800			  ## vm_sfc.c:310:29
    3966:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3968:    50 fc 50 03       	r0 = r5 + 848
    396c:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    396e:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    3970:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    3972:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3976:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    3978:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    397a:    88 f3 0d 1a       	call 1061914 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    397e:    0a 0a             	sp += 20			  ## vm_sfc.c:335:5
    3980:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:818:1


norflash_write_enable:
    3982:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:340:0
    3984:    fc 0b             	sp += -8			  ## vm_sfc.c:340:0
    3986:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:340:0
    398c:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    398e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3990:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    3992:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    3994:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3996:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    3998:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    399a:    0c 02             	[sp] = r4
    399c:    60 70             	r0 = 6			  ## vm_sfc.c:343:5
    399e:    62 15             	call -1340 <spi_writebyte : 3464 >			  ## vm_sfc.c:343:5
    39a0:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    39a2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    39a4:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    39a6:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    39aa:    1c 02             	[sp+4] = r4
    39ac:    04 0a             	sp += 8
    39ae:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:346:1


norflash_wait_ok:
    39b0:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:384:0
    39b2:    fc 0b             	sp += -8			  ## vm_sfc.c:384:0
    39b4:    c3 ff 20 a1 07 00 	r3 = 500000 <text_size+0x615D4 : 7a120 >			  ## vm_sfc.c:384:0
    39ba:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:384:0
    39c0:    a5 70             	r5 = 10			  ## vm_sfc.c:384:0
    39c2:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:57:19
    39c4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    39c6:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:57:19
    39c8:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:57:19
    39ca:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    39cc:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:58:53
    39ce:    0d 02             	[sp] = r5
    39d0:    50 70             	r0 = 5			  ## vm_sfc.c:390:9
    39d2:    48 15             	call -1392 <spi_writebyte : 3464 >			  ## vm_sfc.c:390:9
    39d4:    a4 15             	call -1208 <spi_readbyte : 351e >			  ## vm_sfc.c:391:19
    39d6:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:57:19
    39d8:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    39da:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:57:19
    39dc:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:57:19
    39e0:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:394:13
    39e4:    23 b6             	r3 = r3 - r0			  ## vm_sfc.c:394:13
    39e6:    1d 02             	[sp+4] = r5
    39e8:    01 26             	if (r3 == 0) goto 2 <norflash_wait_ok+0x3C : 39ec >
    39ea:    eb 31             	if (r0 != 0) goto -42 <norflash_wait_ok+0x12 : 39c2 >
    39ec:    04 0a             	sp += 8
    39ee:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:404:1


norflash_erase:
    39f0:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm_sfc.c:712:0
    39f2:    fa 0b             	sp += -12			  ## vm_sfc.c:712:0
    39f4:    f5 07             	r5 = -1			  ## vm_sfc.c:712:0
    39f6:    00 ff c8 00 0a 00 	if (r0 == 200) goto 20 <norflash_erase+0x20 : 3a10 >			  ## vm_sfc.c:712:0
    39fc:    00 ff cc 00 0b 00 	if (r0 == 204) goto 22 <norflash_erase+0x28 : 3a18 >			  ## vm_sfc.c:712:0
    3a02:    01 ff c9 00 5b 00 	if (r0 != 201) goto 182 <norflash_erase+0xCE : 3abe >			  ## vm_sfc.c:712:0
    3a08:    88 7d             	r8 = 216			  ## vm_sfc.c:712:0
    3a0a:    20 fb 01 4b       	r4 = 65536			  ## vm_sfc.c:712:0
    3a0e:    07 18             	goto 14 <norflash_erase+0x2E : 3a1e >			  ## vm_sfc.c:712:0
    3a10:    08 72             	r8 = 32			  ## vm_sfc.c:712:0
    3a12:    04 fb 00 10       	r4 = 4096 <sys_clock_limit+0x50 : 1000 >			  ## vm_sfc.c:712:0
    3a16:    03 18             	goto 6 <norflash_erase+0x2E : 3a1e >			  ## vm_sfc.c:712:0
    3a18:    18 78             	r8 = 129			  ## vm_sfc.c:712:0
    3a1a:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:712:0
    3a1e:    c6 ff b0 25 00 00 	r6 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:712:0
    3a24:    00 f6 80 60       	r0 = [r6 + 128]			  ## vm_sfc.c:732:35
    3a28:    62 fb 00 49       	r2 = 0 - r4			  ## vm_sfc.c:729:13
    3a2c:    e2 fd 10 72       	r7 = r2 & r1			  ## vm_sfc.c:729:10
    3a30:    50 b5             	r0 &= r2			  ## vm_sfc.c:732:50
    3a32:    07 f2 44 00       	if (r7 == r0) goto 136 <norflash_erase+0xCE : 3abe >
    3a36:    f6 14             	call -1556 <enter_spi_code : 3424 >			  ## vm_sfc.c:750:5
    3a38:    fe 16             	call -516 <exit_continue_mode : 3836 >			  ## vm_sfc.c:751:21
    3a3a:    09 08             	r9 = r0			  ## vm_sfc.c:751:21
    3a3c:    a2 17             	call -188 <norflash_write_enable : 3982 >			  ## vm_sfc.c:753:5
    3a3e:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3a44:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    3a46:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3a48:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    3a4a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:57:19
    3a4c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3a4e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:58:53
    3a50:    aa 70             	r10 = 10			  ## vm_sfc.c:58:53
    3a52:    1a f5 00 00       	[sp] = r10
    3a56:    80 08             	r0 = r8			  ## vm_sfc.c:756:5
    3a58:    05 15             	call -1526 <spi_writebyte : 3464 >			  ## vm_sfc.c:756:5
    3a5a:    70 08             	r0 = r7			  ## vm_sfc.c:757:5
    3a5c:    17 15             	call -1490 <norflash_send_addr : 348c >			  ## vm_sfc.c:757:5
    3a5e:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:57:19
    3a60:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3a62:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:57:19
    3a64:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:57:19
    3a68:    1a f5 04 00       	[sp+4] = r10
    3a6c:    00 f6 98 60       	r0 = [r6 + 152]			  ## vm_sfc.c:200:30
    3a70:    01 f6 9c 60       	r1 = [r6 + 156]			  ## vm_sfc.c:202:27
    3a74:    20 be             	r0 = r7 - r0			  ## vm_sfc.c:200:12
    3a76:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3a78:    41 08             	r1 = r4			  ## vm_sfc.c:762:5
    3a7a:    88 f3 57 1a       	call 1062062 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:762:5
    3a7e:    98 17             	call -208 <norflash_wait_ok : 39b0 >			  ## vm_sfc.c:763:5
    3a80:    09 e0 05 00       	if (r9 == 0) goto 10 <norflash_erase+0x9E : 3a8e >			  ## vm_sfc.c:763:5
    3a84:    80 a0             	r0 = sp + 8
    3a86:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    3a88:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    3a8a:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    3a8c:    93 15             	call -1242 <__norflash_read : 35b4 >			  ## vm_sfc.c:541:5
    3a8e:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3a90:    88 f3 4a 1a       	call 1062036 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3a94:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3a9a:    05 70             	r5 = 0			  ## vm_sfc.c:222:17
    3a9c:    fd 61             	b[r0 + 31] = r5			  ## vm_sfc.c:222:17
    3a9e:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    3aa4:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3aa6:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3aac:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:322:22
    3aae:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:323:22
    3ab0:    2d 40             	[r0 + 8] = r5			  ## vm_sfc.c:324:22
    3ab2:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3ab6:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:325:26
    3ab8:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:326:26
    3aba:    88 f3 6d 19       	call 1061594 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    3abe:    50 08             	r0 = r5			  ## vm_sfc.c:772:1
    3ac0:    06 0a             	sp += 12			  ## vm_sfc.c:772:1
    3ac2:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm_sfc.c:772:1


flushinv_dcache_api:
    3ac4:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:776:0
    3ac6:    14 08             	r4 = r1			  ## vm_sfc.c:776:0
    3ac8:    05 08             	r5 = r0			  ## vm_sfc.c:776:0
    3aca:    ac 14             	call -1704 <enter_spi_code : 3424 >			  ## vm_sfc.c:777:5
    3acc:    c0 ff b0 25 00 00 	r0 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:202:27
    3ad2:    01 f6 98 00       	r1 = [r0 + 152]			  ## vm_sfc.c:200:30
    3ad6:    00 f6 9c 00       	r0 = [r0 + 156]			  ## vm_sfc.c:202:27
    3ada:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:200:12
    3adc:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3ade:    41 08             	r1 = r4			  ## vm_sfc.c:778:5
    3ae0:    88 f3 24 1a       	call 1061960 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:778:5
    3ae4:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3ae6:    88 f3 1f 1a       	call 1061950 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3aea:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3af0:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    3af2:    f9 61             	b[r0 + 31] = r1			  ## vm_sfc.c:222:17
    3af4:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    3afa:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3afc:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3b02:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    3b04:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    3b06:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    3b08:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3b0c:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    3b0e:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    3b10:    15 01             	{rets, r5, r4} = [sp++]			  ## vm_sfc.c:335:5
    3b12:    c8 f3 41 19       	goto 1061506 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5


_norflash_write:
    3b16:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:638:0
    3b18:    fa 0b             	sp += -12			  ## vm_sfc.c:638:0
    3b1a:    24 08             	r4 = r2			  ## vm_sfc.c:638:0
    3b1c:    15 08             	r5 = r1			  ## vm_sfc.c:638:0
    3b1e:    07 08             	r7 = r0			  ## vm_sfc.c:638:0
    3b20:    4b 28             	if (r4 == 0) goto 150 <_norflash_write+0xA2 : 3bb8 >			  ## vm_sfc.c:638:0
    3b22:    80 14             	call -1792 <enter_spi_code : 3424 >			  ## vm_sfc.c:644:5
    3b24:    88 16             	call -752 <exit_continue_mode : 3836 >			  ## vm_sfc.c:645:21
    3b26:    08 08             	r8 = r0			  ## vm_sfc.c:645:21
    3b28:    2c 17             	call -424 <norflash_write_enable : 3982 >			  ## vm_sfc.c:647:5
    3b2a:    c6 ff 00 53 1e 00 	r6 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3b30:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:57:19
    3b32:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3b34:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:57:19
    3b36:    00 4c             	r0 = [r6 + 0]			  ## vm_sfc.c:57:19
    3b38:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    3b3a:    08 4c             	[r6 + 0] = r0			  ## vm_sfc.c:58:53
    3b3c:    a0 70             	r0 = 10			  ## vm_sfc.c:58:53
    3b3e:    08 02             	[sp] = r0
    3b40:    20 70             	r0 = 2			  ## vm_sfc.c:651:5
    3b42:    90 14             	call -1760 <spi_writebyte : 3464 >			  ## vm_sfc.c:651:5
    3b44:    50 08             	r0 = r5			  ## vm_sfc.c:653:5
    3b46:    a2 14             	call -1724 <norflash_send_addr : 348c >			  ## vm_sfc.c:653:5
    3b48:    03 70             	r3 = 0			  ## vm_sfc.c:653:5
    3b4a:    00 fa 00 73       	r0 = b[r7+r3] (u)			  ## vm_sfc.c:657:9
    3b4e:    8a 14             	call -1772 <spi_writebyte : 3464 >			  ## vm_sfc.c:657:9
    3b50:    13 80             	r3 += 1			  ## vm_sfc.c:656:5
    3b52:    34 f2 fa 1f       	if (r4 != r3) goto -12 <_norflash_write+0x34 : 3b4a >			  ## vm_sfc.c:656:5
    3b56:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:57:19
    3b58:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    3b5a:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:57:19
    3b5c:    00 f4 08 69       	[r6 + 0] |= 8			  ## vm_sfc.c:57:19
    3b60:    a0 70             	r0 = 10			  ## vm_sfc.c:57:19
    3b62:    18 02             	[sp+4] = r0
    3b64:    c0 ff b0 25 00 00 	r0 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:202:27
    3b6a:    01 f6 98 00       	r1 = [r0 + 152]			  ## vm_sfc.c:200:30
    3b6e:    00 f6 9c 00       	r0 = [r0 + 156]			  ## vm_sfc.c:202:27
    3b72:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:200:12
    3b74:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    3b76:    41 08             	r1 = r4			  ## vm_sfc.c:662:5
    3b78:    88 f3 d8 19       	call 1061808 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:662:5
    3b7c:    19 17             	call -462 <norflash_wait_ok : 39b0 >			  ## vm_sfc.c:663:5
    3b7e:    08 e0 05 00       	if (r8 == 0) goto 10 <_norflash_write+0x76 : 3b8c >			  ## vm_sfc.c:663:5
    3b82:    80 a0             	r0 = sp + 8
    3b84:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    3b86:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    3b88:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    3b8a:    14 15             	call -1496 <__norflash_read : 35b4 >			  ## vm_sfc.c:541:5
    3b8c:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    3b8e:    88 f3 cb 19       	call 1061782 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    3b92:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    3b98:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    3b9a:    f9 61             	b[r0 + 31] = r1			  ## vm_sfc.c:222:17
    3b9c:    40 fb af 6a       	r0 = r6 + 44800			  ## vm_sfc.c:310:29
    3ba0:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    3ba2:    60 fc 50 03       	r0 = r6 + 848
    3ba6:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    3ba8:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    3baa:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    3bac:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    3bb0:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    3bb2:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    3bb4:    88 f3 f0 18       	call 1061344 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    3bb8:    00 70             	r0 = 0			  ## vm_sfc.c:671:1
    3bba:    06 0a             	sp += 12			  ## vm_sfc.c:671:1
    3bbc:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:671:1


__hw_spi_clk_div:
    3bbe:    75 01             	[--sp] = {rets, r5, r4}			  ## clock.c:211:0
    3bc0:    15 08             	r5 = r1			  ## clock.c:211:0
    3bc2:    04 08             	r4 = r0			  ## clock.c:211:0
    3bc4:    88 f3 ea 18       	call 1061332 <local_irq_disable : 106d9c >			  ## clock.c:212:5
    3bc8:    08 00             	csync			  ## clock.c:212:5
    3bca:    08 00             	csync			  ## clock.c:213:5
    3bcc:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >
    3bd2:    01 40             	r1 = [r0 + 0]			  ## clock.c:213:5
    3bd4:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x14 : 3bd2 >			  ## clock.c:213:5
    3bd8:    08 00             	csync			  ## clock.c:214:5
    3bda:    40 fb df 0a       	r0 = r0 + 57088			  ## clock.c:214:5
    3bde:    01 40             	r1 = [r0 + 0]			  ## clock.c:214:5
    3be0:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x20 : 3bde >			  ## clock.c:214:5
    3be4:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3bea:    01 40             	r1 = [r0 + 0]			  ## clock.c:215:20
    3bec:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <__hw_spi_clk_div+0x2C : 3bea >			  ## clock.c:215:5
    3bf0:    01 40             	r1 = [r0 + 0]			  ## clock.c:216:17
    3bf2:    71 b0             	r1 &= 4294967294			  ## clock.c:216:17
    3bf4:    09 40             	[r0 + 0] = r1			  ## clock.c:216:17
    3bf6:    1c 40             	[r0 + 4] = r4			  ## clock.c:217:18
    3bf8:    01 40             	r1 = [r0 + 0]			  ## clock.c:218:5
    3bfa:    22 fd 0f 59       	r2 = r5 & 15			  ## clock.c:218:5
    3bfe:    31 fd f0 1b       	r1 = r1 & 4279238655			  ## clock.c:218:5
    3c02:    c4 fd a0 12       	r1 <= insert(r2, p:20, l:4)			  ## clock.c:218:5
    3c06:    09 40             	[r0 + 0] = r1			  ## clock.c:218:5
    3c08:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:219:17
    3c0c:    c0 ff ec 31 00 00 	r0 = 12780 <clock_poweroff_sfc_info.0 : 31ec >			  ## clock.c:220:38
    3c12:    0c 50             	h[r0 + 0] = r4			  ## clock.c:220:38
    3c14:    15 01             	{rets, r5, r4} = [sp++]			  ## clock.c:221:5
    3c16:    c8 f3 bf 18       	goto 1061246 <local_irq_enable : 106d98 >			  ## clock.c:221:5


delay_p11_tmr1_lrc:
    3c1a:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## power_hw.c:198:0
    3c20:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:199:21
    3c24:    c1 ff ac 0f 1a 00 	r1 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:202:20
    3c2a:    01 62             	r1 = b[r1 + 0] (u)			  ## power_hw.c:202:20
    3c2c:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## power_hw.c:202:18
    3c30:    21 70             	r1 = 2			  ## power_hw.c:202:18
    3c32:    22 e0 01 80       	if (r2 > 2) goto 2 <delay_p11_tmr1_lrc+0x1E : 3c38 >			  ## power_hw.c:202:18
    3c36:    22 70             	r2 = 2			  ## power_hw.c:204:9
    3c38:    13 d2             	r3 = r2 >> 8			  ## power_hw.c:208:21
    3c3a:    c0 ff e1 1f 1a 00 	r0 = 1712097 <uECC_vli_cmp_unsafe+0x9AFE5 : 1a1fe1 >			  ## power_hw.c:208:21
    3c40:    4b 60             	b[r0 + 4] = r3			  ## power_hw.c:208:19
    3c42:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:209:19
    3c44:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:211:19
    3c46:    81 75             	r1 = 88			  ## power_hw.c:212:19
    3c48:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:212:19
    3c4a:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:213:19
    3c4c:    11 b0             	r1 |= 1			  ## power_hw.c:213:19
    3c4e:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:213:19
    3c50:    21 60             	r1 = b[r0 + 2] (u)			  ## power_hw.c:214:19
    3c52:    11 b2             	r1 |= 16			  ## power_hw.c:214:19
    3c54:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:214:19
    3c56:    20 fb 1e 1b       	r1 = 1966080			  ## power_hw.c:216:23
    3c5a:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:216:23
    3c5e:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## power_hw.c:218:14
    3c62:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <delay_p11_tmr1_lrc+0x44 : 3c5e >			  ## power_hw.c:218:5
    3c66:    01 75             	r1 = 80			  ## power_hw.c:219:19
    3c68:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:219:19
    3c6a:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:220:19
    3c6c:    20 00             	rts			  ## power_hw.c:221:1


close_flash:
    3c6e:    74 01             	[--sp] = {rets, r4}			  ## pmu_analog.c:891:0
    3c70:    08 00             	csync			  ## pmu_analog.c:892:5
    3c72:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## pmu_analog.c:892:5
    3c78:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:892:5
    3c7a:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0xA : 3c78 >			  ## pmu_analog.c:892:5
    3c7e:    08 00             	csync			  ## pmu_analog.c:893:5
    3c80:    40 fb df 0a       	r0 = r0 + 57088			  ## pmu_analog.c:893:5
    3c84:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:893:5
    3c86:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0x16 : 3c84 >			  ## pmu_analog.c:893:5
    3c8a:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3c90:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:895:20
    3c92:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <close_flash+0x22 : 3c90 >			  ## pmu_analog.c:895:5
    3c96:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:897:17
    3c98:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:897:17
    3c9a:    09 40             	[r0 + 0] = r1			  ## pmu_analog.c:897:17
    3c9c:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## pmu_analog.c:897:17
    3ca2:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:236:37
    3ca4:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:236:37
    3ca6:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:236:37
    3ca8:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:237:37
    3caa:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:237:37
    3cac:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:237:37
    3cae:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:238:37
    3cb0:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:238:37
    3cb2:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:238:37
    3cb4:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:239:37
    3cb6:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:239:37
    3cb8:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:239:37
    3cba:    02 f4 01 49       	[r4 + 8] |= 1			  ## pmu_analog.c:240:37
    3cbe:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:243:37
    3cc0:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:243:37
    3cc2:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:243:37
    3cc4:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:244:37
    3cc6:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:244:37
    3cc8:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:244:37
    3cca:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:245:37
    3ccc:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:245:37
    3cce:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:245:37
    3cd0:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:246:37
    3cd2:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:246:37
    3cd4:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:246:37
    3cd6:    02 f4 02 49       	[r4 + 8] |= 2			  ## pmu_analog.c:247:37
    3cda:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:250:37
    3cdc:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:250:37
    3cde:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:250:37
    3ce0:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:251:37
    3ce2:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:251:37
    3ce4:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:251:37
    3ce6:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:252:37
    3ce8:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:252:37
    3cea:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:252:37
    3cec:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:253:37
    3cee:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:253:37
    3cf0:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:253:37
    3cf2:    02 f4 04 49       	[r4 + 8] |= 4			  ## pmu_analog.c:254:37
    3cf6:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:267:37
    3cf8:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:267:37
    3cfa:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:267:37
    3cfc:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:268:37
    3cfe:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:268:37
    3d00:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:268:37
    3d02:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:269:37
    3d04:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:269:37
    3d06:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:269:37
    3d08:    04 f4 08 49       	[r4 + 16] |= 8			  ## pmu_analog.c:270:37
    3d0c:    02 f4 08 49       	[r4 + 8] |= 8			  ## pmu_analog.c:271:37
    3d10:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:177:35
    3d12:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:177:35
    3d14:    08 48             	[r4 + 0] = r0			  ## pmu_analog.c:177:35
    3d16:    20 48             	r0 = [r4 + 8]			  ## pmu_analog.c:178:35
    3d18:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:178:35
    3d1a:    28 48             	[r4 + 8] = r0			  ## pmu_analog.c:178:35
    3d1c:    40 76             	r0 = 100			  ## pmu_analog.c:179:5
    3d1e:    7d 17             	call -262 <delay_p11_tmr1_lrc : 3c1a >			  ## pmu_analog.c:179:5
    3d20:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:181:34
    3d22:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:181:34
    3d24:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:181:34
    3d26:    02 f4 10 49       	[r4 + 8] |= 16			  ## pmu_analog.c:183:35
    3d2a:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:184:34
    3d2c:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:184:34
    3d2e:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:184:34
    3d30:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:185:34
    3d32:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:185:34
    3d34:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:185:34
    3d36:    54 01             	{pc, r4} = [sp++]			  ## pmu_analog.c:902:1


power_set_soft_poweroff_advance:
    3d38:    c0 ff ac 0f 1a 00 	r0 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:1312:0
    3d3e:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1316:53
    3d40:    c2 ff a0 86 01 00 	r2 = 100000 <_IRQ_MEM_ADDR+0x87A0 : 186a0 >			  ## power_hw.c:1316:51
    3d46:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## power_hw.c:1316:51
    3d4a:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## power_hw.c:1316:22
    3d50:    61 b4             	r1 = r2 - r1			  ## power_hw.c:1316:22
    3d52:    0a d2             	r2 = r1 >> 8			  ## power_hw.c:1317:25
    3d54:    2a 60             	b[r0 + 2] = r2			  ## power_hw.c:1317:19
    3d56:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:1318:19
    3d58:    af f3 37 f0       	call -2105234 <power_set_soft_poweroff_prepare : 1e01dca >			  ## power_hw.c:1323:5
    3d5c:    88 17             	call -240 <close_flash : 3c6e >			  ## power_hw.c:1325:5
    3d5e:    10 70             	r0 = 1			  ## power_hw.c:1325:5
    3d60:    c1 ff d0 18 1a 00 	r1 = 1710288 <uECC_vli_cmp_unsafe+0x9A8D4 : 1a18d0 >			  ## power_hw.c:1325:5
    3d66:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## power_hw.c:1325:5
    3d6c:    03 70             	r3 = 0			  ## power_hw.c:1325:5
    3d6e:    84 70             	r4 = 8			  ## power_hw.c:1325:5
    3d70:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:1330:22
    3d72:    18 62             	b[r1 + 1] = r0			  ## power_hw.c:1331:22
    3d74:    28 62             	b[r1 + 2] = r0			  ## power_hw.c:1332:22
    3d76:    38 62             	b[r1 + 3] = r0			  ## power_hw.c:1333:22
    3d78:    48 62             	b[r1 + 4] = r0			  ## power_hw.c:1334:22
    3d7a:    7b 65             	b[r2 + 23] = r3			  ## power_hw.c:1336:9
    3d7c:    14 f9 21 17       	b[r1 + 1825] = r4			  ## power_hw.c:1336:9
    3d80:    14 f9 2a 17       	b[r1 + 1834] = r4			  ## power_hw.c:1336:9
    3d84:    02 00             	idle			  ## power_hw.c:1338:9
    3d86:    f4 1f             	goto -24 <power_set_soft_poweroff_advance+0x38 : 3d70 >			  ## power_hw.c:1327:5


power_set_soft_poweroff_legacy:
    3d88:    04 08             	r4 = r0			  ## power_hw.c:1244:0
    3d8a:    20 70             	r0 = 2			  ## power_hw.c:1245:5
    3d8c:    af f3 d1 e3       	call -2111582 <power_set_mode : 1e00532 >			  ## power_hw.c:1245:5
    3d90:    af f3 1b f0       	call -2105290 <power_set_soft_poweroff_prepare : 1e01dca >			  ## power_hw.c:1248:5
    3d94:    6c 17             	call -296 <close_flash : 3c6e >			  ## power_hw.c:1252:5
    3d96:    02 70             	r2 = 0			  ## power_hw.c:1255:17
    3d98:    c0 ff 11 18 1a 00 	r0 = 1710097 <uECC_vli_cmp_unsafe+0x9A815 : 1a1811 >			  ## power_hw.c:1255:17
    3d9e:    5a 60             	b[r0 + 5] = r2			  ## power_hw.c:1255:17
    3da0:    09 fc 81 00       	r9 = r0 + 129			  ## power_hw.c:1255:17
    3da4:    03 f9 00 90       	r3 = b[r9 + 0] (u)			  ## power_hw.c:1258:5
    3da8:    f3 b1             	r3 &= 4294967287			  ## power_hw.c:1258:5
    3daa:    13 f9 00 90       	b[r9 + 0] = r3			  ## power_hw.c:1258:5
    3dae:    03 60             	r3 = b[r0 + 0] (u)			  ## power_hw.c:1259:5
    3db0:    73 b0             	r3 &= 4294967294			  ## power_hw.c:1259:5
    3db2:    0b 60             	b[r0 + 0] = r3			  ## power_hw.c:1259:5
    3db4:    2a 60             	b[r0 + 2] = r2			  ## power_hw.c:1262:17
    3db6:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:1263:17
    3db8:    02 fc 31 00       	r2 = r0 + 49			  ## power_hw.c:1263:17
    3dbc:    14 e0 07 10       	if (r4 != 1) goto 14 <power_set_soft_poweroff_legacy+0x46 : 3dce >			  ## power_hw.c:1263:17
    3dc0:    03 f9 0b 90       	r3 = b[r9 + 11] (u)			  ## power_hw.c:1267:9
    3dc4:    13 b3             	r3 |= 64			  ## power_hw.c:1267:9
    3dc6:    13 f9 0b 90       	b[r9 + 11] = r3			  ## power_hw.c:1267:9
    3dca:    43 70             	r3 = 4			  ## power_hw.c:1268:20
    3dcc:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1268:20
    3dce:    13 70             	r3 = 1
    3dd0:    04 fc bf 00       	r4 = r0 + 191
    3dd4:    88 7a             	r8 = 168
    3dd6:    f6 7f             	r6 = 255
    3dd8:    0a fc 56 00       	r10 = r0 + 86
    3ddc:    15 70             	r5 = 1
    3dde:    13 f9 12 90       	b[r9 + 18] = r3			  ## power_hw.c:1276:21
    3de2:    0b 68             	b[r4 + 0] = r3			  ## power_hw.c:1277:22
    3de4:    1b 68             	b[r4 + 1] = r3			  ## power_hw.c:1278:22
    3de6:    2b 68             	b[r4 + 2] = r3			  ## power_hw.c:1279:22
    3de8:    3b 68             	b[r4 + 3] = r3			  ## power_hw.c:1280:22
    3dea:    4b 68             	b[r4 + 4] = r3			  ## power_hw.c:1281:22
    3dec:    61 60             	r1 = b[r0 + 6] (u)			  ## power_hw.c:1283:21
    3dee:    71 b1             	r1 &= 4294967291			  ## power_hw.c:1283:21
    3df0:    69 60             	b[r0 + 6] = r1			  ## power_hw.c:1283:21
    3df2:    18 f9 00 20       	b[r2 + 0] = r8			  ## power_hw.c:1286:20
    3df6:    6e 65             	b[r2 + 22] = r6			  ## power_hw.c:1289:23
    3df8:    7e 65             	b[r2 + 23] = r6			  ## power_hw.c:1290:23
    3dfa:    16 f9 00 a0       	b[r10 + 0] = r6			  ## power_hw.c:1291:25
    3dfe:    16 f9 01 a0       	b[r10 + 1] = r6			  ## power_hw.c:1292:25
    3e02:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1293:21
    3e04:    11 b3             	r1 |= 64			  ## power_hw.c:1293:21
    3e06:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1293:21
    3e08:    71 64             	r1 = b[r2 + 7] (u)			  ## power_hw.c:1294:21
    3e0a:    11 b3             	r1 |= 64			  ## power_hw.c:1294:21
    3e0c:    47 05             	r7 = r5.b0 (u)			  ## power_hw.c:1300:32
    3e0e:    79 64             	b[r2 + 7] = r1			  ## power_hw.c:1294:21
    3e10:    57 e6 05 30       	if (r7 < 101) goto 10 <power_set_soft_poweroff_legacy+0x96 : 3e1e >			  ## power_hw.c:1294:21
    3e14:    01 f9 0e 90       	r1 = b[r9 + 14] (u)			  ## power_hw.c:1301:13
    3e18:    11 b2             	r1 |= 16			  ## power_hw.c:1301:13
    3e1a:    11 f9 0e 90       	b[r9 + 14] = r1			  ## power_hw.c:1301:13
    3e1e:    15 80             	r5 += 1			  ## power_hw.c:1249:8
    3e20:    de 1f             	goto -68 <power_set_soft_poweroff_legacy+0x56 : 3dde >			  ## power_hw.c:1249:8


clock_enter_deepsleep:
    3e22:    20 00             	rts			  ## clock.c:2483:0


clock_exit_deepsleep:
    3e24:    c0 ff ec 31 00 00 	r0 = 12780 <clock_poweroff_sfc_info.0 : 31ec >			  ## clock.c:2487:0
    3e2a:    00 50             	r0 = h[r0 + 0] (u)			  ## clock.c:2488:20
    3e2c:    c1 ff 04 02 1f 00 	r1 = 2032132 <uECC_vli_cmp_unsafe+0xE9208 : 1f0204 >			  ## clock.c:2488:18
    3e32:    08 42             	[r1 + 0] = r0			  ## clock.c:2488:18
    3e34:    20 00             	rts			  ## clock.c:2489:1


tmr_exit_deepsleep:
    3e36:    c0 ff 48 24 00 00 	r0 = 9288 <tmr_sfr.0 : 2448 >			  ## timer.c:264:0
    3e3c:    01 40             	r1 = [r0 + 0]			  ## timer.c:265:22
    3e3e:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:265:22
    3e44:    19 44             	[r2 + 4] = r1			  ## timer.c:265:20
    3e46:    11 40             	r1 = [r0 + 4]			  ## timer.c:266:22
    3e48:    29 44             	[r2 + 8] = r1			  ## timer.c:266:20
    3e4a:    20 40             	r0 = [r0 + 8]			  ## timer.c:267:22
    3e4c:    08 44             	[r2 + 0] = r0			  ## timer.c:267:20
    3e4e:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## timer.c:268:20
    3e52:    c2 ff 14 2f e0 01 	r2 = 31469332 <timer1_isr : 1e02f14 >			  ## timer.c:269:5
    3e58:    50 70             	r0 = 5			  ## timer.c:269:5
    3e5a:    11 70             	r1 = 1			  ## timer.c:269:5
    3e5c:    f0 f3 57 3e       	goto -2065234 <request_irq : 1e0bb0e >			  ## timer.c:269:5


__get_lrc_hz:
    3e60:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## lrc_hw.c:56:0
    3e66:    00 f6 c4 00       	r0 = [r0 + 196]			  ## lrc_hw.c:59:20
    3e6a:    20 00             	rts			  ## lrc_hw.c:59:5


low_power_system_down:
    3e6c:    7f 01             	[--sp] = {rets, r15-r4}			  ## power_hw.c:910:0
    3e6e:    cb ff 20 19 1e 00 	r11 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## power_hw.c:910:0
    3e74:    02 f6 00 b0       	r2 = [r11 + 0]			  ## power_hw.c:913:20
    3e78:    08 00             	csync			  ## pmu_analog.c:300:5
    3e7a:    c4 ff c0 23 00 00 	r4 = 9152 <cur_ch : 23c0 >			  ## pmu_analog.c:300:5
    3e80:    c1 ff 00 05 1b 00 	r1 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## pmu_analog.c:300:5
    3e86:    40 fb df 1a       	r0 = r1 + 57088			  ## pmu_analog.c:300:5
    3e8a:    bd fc e0 39       	r13 = r11 + 14816			  ## pmu_analog.c:300:5
    3e8e:    4e fb af da       	r14 = r13 + 44800			  ## pmu_analog.c:300:5
    3e92:    20 f3 51 20       	if ((r2 & 1) != 0) goto 162 <low_power_system_down+0xCC : 3f38 >			  ## pmu_analog.c:300:5
    3e96:    02 42             	r2 = [r1 + 0]			  ## pmu_analog.c:300:5
    3e98:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <low_power_system_down+0x2A : 3e96 >			  ## pmu_analog.c:300:5
    3e9c:    08 00             	csync			  ## pmu_analog.c:301:5
    3e9e:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:301:5
    3ea0:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0x32 : 3e9e >			  ## pmu_analog.c:301:5
    3ea4:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:303:20
    3ea8:    00 e0 fc bf       	ifs (r0 < 0) goto -8 <low_power_system_down+0x38 : 3ea4 >			  ## pmu_analog.c:303:5
    3eac:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:305:17
    3eb0:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:305:17
    3eb2:    10 f6 00 e0       	[r14 + 0] = r0			  ## pmu_analog.c:305:17
    3eb6:    08 00             	csync			  ## pmu_analog.c:307:5
    3eb8:    00 f6 0c d0       	r0 = [r13 + 12]			  ## pmu_analog.c:310:31
    3ebc:    88 69             	b[r4 + 24] = r0			  ## pmu_analog.c:310:19
    3ebe:    00 f6 20 d0       	r0 = [r13 + 32]			  ## pmu_analog.c:311:31
    3ec2:    98 69             	b[r4 + 25] = r0			  ## pmu_analog.c:311:19
    3ec4:    00 f6 10 d0       	r0 = [r13 + 16]			  ## pmu_analog.c:312:31
    3ec8:    a8 69             	b[r4 + 26] = r0			  ## pmu_analog.c:312:19
    3eca:    00 f6 14 d0       	r0 = [r13 + 20]			  ## pmu_analog.c:313:31
    3ece:    b8 69             	b[r4 + 27] = r0			  ## pmu_analog.c:313:19
    3ed0:    00 f6 00 d0       	r0 = [r13 + 0]			  ## pmu_analog.c:314:31
    3ed4:    c8 69             	b[r4 + 28] = r0			  ## pmu_analog.c:314:19
    3ed6:    00 f6 08 d0       	r0 = [r13 + 8]			  ## pmu_analog.c:315:31
    3eda:    d8 69             	b[r4 + 29] = r0			  ## pmu_analog.c:315:19
    3edc:    00 f6 10 d0       	r0 = [r13 + 16]			  ## pmu_analog.c:317:5
    3ee0:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:317:5
    3ee4:    10 f6 10 d0       	[r13 + 16] = r0			  ## pmu_analog.c:317:5
    3ee8:    00 f6 14 d0       	r0 = [r13 + 20]			  ## pmu_analog.c:318:5
    3eec:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:318:5
    3ef0:    10 f6 14 d0       	[r13 + 20] = r0			  ## pmu_analog.c:318:5
    3ef4:    00 f6 00 d0       	r0 = [r13 + 0]			  ## pmu_analog.c:319:5
    3ef8:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:319:5
    3efc:    90 b1             	r0 |= 8			  ## pmu_analog.c:319:5
    3efe:    10 f6 00 d0       	[r13 + 0] = r0			  ## pmu_analog.c:319:5
    3f02:    00 f6 08 d0       	r0 = [r13 + 8]			  ## pmu_analog.c:320:5
    3f06:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:320:5
    3f0a:    00 fd 07 09       	r0 = r0 | 7			  ## pmu_analog.c:320:5
    3f0e:    10 f6 08 d0       	[r13 + 8] = r0			  ## pmu_analog.c:320:5
    3f12:    00 f6 00 d0       	r0 = [r13 + 0]			  ## pmu_analog.c:321:5
    3f16:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:321:5
    3f1a:    10 f6 00 d0       	[r13 + 0] = r0			  ## pmu_analog.c:321:5
    3f1e:    00 f6 0c d0       	r0 = [r13 + 12]			  ## pmu_analog.c:322:5
    3f22:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:322:5
    3f26:    10 f6 0c d0       	[r13 + 12] = r0			  ## pmu_analog.c:322:5
    3f2a:    00 f6 20 d0       	r0 = [r13 + 32]			  ## pmu_analog.c:323:5
    3f2e:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:323:5
    3f32:    10 f6 20 d0       	[r13 + 32] = r0			  ## pmu_analog.c:323:5
    3f36:    0b 18             	goto 22 <low_power_system_down+0xE2 : 3f4e >			  ## pmu_analog.c:323:5
    3f38:    02 42             	r2 = [r1 + 0]			  ## power_hw.c:916:9
    3f3a:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <low_power_system_down+0xCC : 3f38 >			  ## power_hw.c:916:9
    3f3e:    08 00             	csync			  ## power_hw.c:917:9
    3f40:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:917:9
    3f42:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0xD4 : 3f40 >			  ## power_hw.c:917:9
    3f46:    00 f6 00 e0       	r0 = [r14 + 0]			  ## power_hw.c:918:24
    3f4a:    00 e0 fc bf       	ifs (r0 < 0) goto -8 <low_power_system_down+0xDA : 3f46 >			  ## power_hw.c:918:24
    3f4e:    c0 ff d2 1f 1a 00 	r0 = 1712082 <uECC_vli_cmp_unsafe+0x9AFD6 : 1a1fd2 >
    3f54:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:921:27
    3f56:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:921:49
    3f58:    21 fd 20 19       	r1 = r1 & 32			  ## power_hw.c:921:27
    3f5c:    20 fd 80 09       	r0 = r0 & 128			  ## power_hw.c:921:49
    3f60:    50 b2             	r0 |= r1			  ## power_hw.c:921:47
    3f62:    ca ff c0 47 00 00 	r10 = 18368 <nvbss_begin : 47c0 >			  ## power_hw.c:921:47
    3f68:    10 f9 31 a0       	b[r10 + 49] = r0			  ## power_hw.c:921:25
    3f6c:    20 fb 1e 5b       	r5 = 1966080			  ## power_hw.c:921:25
    3f70:    00 f4 08 59       	[r5 + 0] |= 8			  ## power_hw.c:924:23
    3f74:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:824:17
    3f78:    cf ff 76 0f 1a 00 	r15 = 1707894 <uECC_vli_cmp_unsafe+0x99F7A : 1a0f76 >			  ## power_hw.c:824:17
    3f7e:    f8 fc 55 00       	r8 = r15 + 85			  ## power_hw.c:824:17
    3f82:    86 fc 26 10       	r6 = r8 + 4134			  ## power_hw.c:824:17
    3f86:    10 e0 1b 10       	if (r0 != 1) goto 54 <low_power_system_down+0x154 : 3fc0 >			  ## power_hw.c:824:9
    3f8a:    00 6c             	r0 = b[r6 + 0] (u)			  ## power_hw.c:825:18
    3f8c:    78 69             	b[r4 + 23] = r0			  ## power_hw.c:825:16
    3f8e:    10 70             	r0 = 1			  ## power_hw.c:826:24
    3f90:    08 6c             	b[r6 + 0] = r0			  ## power_hw.c:826:24
    3f92:    88 f3 03 17       	call 1060358 <local_irq_disable : 106d9c >			  ## power_hw.c:829:9
    3f96:    20 70             	r0 = 2			  ## power_hw.c:829:9
    3f98:    10 f9 00 80       	b[r8 + 0] = r0			  ## power_hw.c:829:9
    3f9c:    00 72             	r0 = 32			  ## power_hw.c:829:9
    3f9e:    98 6c             	b[r6 + 9] = r0			  ## power_hw.c:829:9
    3fa0:    00 f4 04 59       	[r5 + 0] |= 4			  ## power_hw.c:829:9
    3fa4:    08 00             	csync			  ## power_hw.c:829:9
    3fa6:    30 6c             	r0 = b[r6 + 3] (u)			  ## power_hw.c:829:9
    3fa8:    06 f3 fc 0f       	if ((r0 & 64) == 0) goto -8 <low_power_system_down+0x138 : 3fa4 >			  ## power_hw.c:829:9
    3fac:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:829:9
    3fb0:    20 e0 f8 1f       	if (r0 != 2) goto -16 <low_power_system_down+0x138 : 3fa4 >			  ## power_hw.c:829:9
    3fb4:    49 08             	r9 = r4
    3fb6:    00 74             	r0 = 64			  ## power_hw.c:829:9
    3fb8:    28 6c             	b[r6 + 2] = r0			  ## power_hw.c:829:9
    3fba:    88 f3 ed 16       	call 1060314 <local_irq_enable : 106d98 >			  ## power_hw.c:829:9
    3fbe:    09 18             	goto 18 <low_power_system_down+0x166 : 3fd2 >			  ## power_hw.c:829:9
    3fc0:    70 6c             	r0 = b[r6 + 7] (u)			  ## power_hw.c:835:9
    3fc2:    10 b1             	r0 |= 4			  ## power_hw.c:835:9
    3fc4:    78 6c             	b[r6 + 7] = r0			  ## power_hw.c:835:9
    3fc6:    00 6c             	r0 = b[r6 + 0] (u)			  ## power_hw.c:838:9
    3fc8:    49 08             	r9 = r4			  ## power_hw.c:838:9
    3fca:    78 69             	b[r4 + 23] = r0			  ## power_hw.c:838:9
    3fcc:    10 70             	r0 = 1			  ## power_hw.c:838:9
    3fce:    08 6c             	b[r6 + 0] = r0			  ## power_hw.c:838:9
    3fd0:    98 6c             	b[r6 + 9] = r0			  ## power_hw.c:838:9
    3fd2:    08 00             	csync			  ## power_hw.c:843:5
    3fd4:    00 f4 04 59       	[r5 + 0] |= 4			  ## power_hw.c:845:23
    3fd8:    08 00             	csync			  ## power_hw.c:846:5
    3fda:    f0 7f             	r0 = 255			  ## power_hw.c:846:5
    3fdc:    61 fc 8f ff       	r1 = r6 + -113			  ## power_hw.c:846:5
    3fe0:    e2 7e             	r2 = 238			  ## power_hw.c:846:5
    3fe2:    b3 7a             	r3 = 171			  ## power_hw.c:846:5
    3fe4:    e7 70             	r7 = 14			  ## power_hw.c:846:5
    3fe6:    54 75             	r4 = 85			  ## power_hw.c:846:5
    3fe8:    55 fc 04 3e       	r5 = r5 + 15876			  ## power_hw.c:846:5
    3fec:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:936:20
    3fee:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:937:20
    3ff0:    0b 62             	b[r1 + 0] = r3			  ## power_hw.c:938:20
    3ff2:    0f 62             	b[r1 + 0] = r7			  ## power_hw.c:939:20
    3ff4:    0c 62             	b[r1 + 0] = r4			  ## power_hw.c:940:20
    3ff6:    0c f6 00 50       	r12 = [r5 + 0]			  ## power_hw.c:941:15
    3ffa:    00 f3 f7 cf       	if ((r12 & 1) == 0) goto -18 <low_power_system_down+0x180 : 3fec >			  ## power_hw.c:941:5
    3ffe:    30 6c             	r0 = b[r6 + 3] (u)			  ## power_hw.c:952:5
    4000:    00 f3 fd 0f       	if ((r0 & 1) == 0) goto -6 <low_power_system_down+0x192 : 3ffe >			  ## power_hw.c:952:5
    4004:    17 70             	r7 = 1
    4006:    2f 6c             	b[r6 + 2] = r7			  ## power_hw.c:952:5
    4008:    80 70             	r0 = 8			  ## power_hw.c:952:5
    400a:    08 6c             	b[r6 + 0] = r0			  ## power_hw.c:952:5
    400c:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:955:17
    4010:    95 08             	r5 = r9			  ## power_hw.c:955:17
    4012:    20 fb 1e 9b       	r9 = 1966080			  ## power_hw.c:955:17
    4016:    10 e0 14 10       	if (r0 != 1) goto 40 <low_power_system_down+0x1D6 : 4042 >			  ## power_hw.c:955:17
    401a:    88 f3 bf 16       	call 1060222 <local_irq_disable : 106d9c >			  ## power_hw.c:957:9
    401e:    17 f9 00 80       	b[r8 + 0] = r7			  ## power_hw.c:957:9
    4022:    00 72             	r0 = 32			  ## power_hw.c:957:9
    4024:    98 6c             	b[r6 + 9] = r0			  ## power_hw.c:957:9
    4026:    00 f4 04 99       	[r9 + 0] |= 4			  ## power_hw.c:957:9
    402a:    08 00             	csync			  ## power_hw.c:957:9
    402c:    30 6c             	r0 = b[r6 + 3] (u)			  ## power_hw.c:957:9
    402e:    06 f3 fc 0f       	if ((r0 & 64) == 0) goto -8 <low_power_system_down+0x1BE : 402a >			  ## power_hw.c:957:9
    4032:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:957:9
    4036:    10 e0 f8 1f       	if (r0 != 1) goto -16 <low_power_system_down+0x1BE : 402a >			  ## power_hw.c:957:9
    403a:    00 74             	r0 = 64			  ## power_hw.c:957:9
    403c:    28 6c             	b[r6 + 2] = r0			  ## power_hw.c:957:9
    403e:    88 f3 ab 16       	call 1060182 <local_irq_enable : 106d98 >			  ## power_hw.c:957:9
    4042:    00 f6 00 b0       	r0 = [r11 + 0]			  ## power_hw.c:961:20
    4046:    20 f3 2b 00       	if ((r0 & 1) != 0) goto 86 <low_power_system_down+0x234 : 40a0 >			  ## power_hw.c:961:20
    404a:    00 f6 1c d0       	r0 = [r13 + 28]			  ## pmu_analog.c:277:20
    404e:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:277:20
    4050:    10 f6 1c d0       	[r13 + 28] = r0			  ## pmu_analog.c:277:20
    4054:    00 f6 18 d0       	r0 = [r13 + 24]			  ## pmu_analog.c:278:20
    4058:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:278:20
    405a:    10 f6 18 d0       	[r13 + 24] = r0			  ## pmu_analog.c:278:20
    405e:    c0 6b             	r0 = b[r5 + 28] (u)			  ## pmu_analog.c:280:22
    4060:    10 f6 00 d0       	[r13 + 0] = r0			  ## pmu_analog.c:280:20
    4064:    d0 6b             	r0 = b[r5 + 29] (u)			  ## pmu_analog.c:281:22
    4066:    10 f6 08 d0       	[r13 + 8] = r0			  ## pmu_analog.c:281:20
    406a:    a0 6b             	r0 = b[r5 + 26] (u)			  ## pmu_analog.c:282:22
    406c:    10 f6 10 d0       	[r13 + 16] = r0			  ## pmu_analog.c:282:20
    4070:    b0 6b             	r0 = b[r5 + 27] (u)			  ## pmu_analog.c:283:22
    4072:    10 f6 14 d0       	[r13 + 20] = r0			  ## pmu_analog.c:283:20
    4076:    80 6b             	r0 = b[r5 + 24] (u)			  ## pmu_analog.c:284:22
    4078:    10 f6 0c d0       	[r13 + 12] = r0			  ## pmu_analog.c:284:20
    407c:    90 6b             	r0 = b[r5 + 25] (u)			  ## pmu_analog.c:285:22
    407e:    10 f6 20 d0       	[r13 + 32] = r0			  ## pmu_analog.c:285:20
    4082:    60 07             	r0 = -10
    4084:    10 80             	r0 += 1			  ## power_hw.c:163:5
    4086:    00 00             	nop			  ## power_hw.c:164:9
    4088:    fd 31             	if (r0 != 0) goto -6 <low_power_system_down+0x218 : 4084 >			  ## power_hw.c:163:5
    408a:    06 f4 10 d9       	[r13 + 24] |= 16			  ## pmu_analog.c:288:20
    408e:    60 07             	r0 = -10
    4090:    10 80             	r0 += 1			  ## power_hw.c:163:5
    4092:    00 00             	nop			  ## power_hw.c:164:9
    4094:    fd 31             	if (r0 != 0) goto -6 <low_power_system_down+0x224 : 4090 >			  ## power_hw.c:163:5
    4096:    07 f4 10 d9       	[r13 + 28] |= 16			  ## pmu_analog.c:290:20
    409a:    00 f4 01 e9       	[r14 + 0] |= 1			  ## pmu_analog.c:344:17
    409e:    08 00             	csync			  ## pmu_analog.c:346:5
    40a0:    60 fc a4 f8       	r0 = r6 + -1884
    40a4:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:968:5
    40a6:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:968:5
    40aa:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:968:5
    40ac:    00 f6 00 b0       	r0 = [r11 + 0]			  ## pmu_analog.c:778:19
    40b0:    20 f3 5d 00       	if ((r0 & 1) != 0) goto 186 <low_power_system_down+0x302 : 416e >			  ## pmu_analog.c:778:19
    40b4:    00 f4 01 b9       	[r11 + 0] |= 1			  ## pmu_analog.c:779:27
    40b8:    04 f6 48 a1       	r4 = [r10 + 328]			  ## pmu_analog.c:781:57
    40bc:    08 f6 00 b0       	r8 = [r11 + 0]			  ## xosc_fsck.c:362:28
    40c0:    00 f6 00 b0       	r0 = [r11 + 0]			  ## xosc_fsck.c:363:5
    40c4:    01 fb c0 07       	r1 = 1984 <DRIVER_CODE_TOTAL+0x2E : 7c0 >			  ## xosc_fsck.c:363:5
    40c8:    50 b2             	r0 |= r1			  ## xosc_fsck.c:363:5
    40ca:    10 f6 00 b0       	[r11 + 0] = r0			  ## xosc_fsck.c:363:5
    40ce:    06 f6 04 b0       	r6 = [r11 + 4]			  ## xosc_fsck.c:370:28
    40d2:    01 f4 10 bb       	[r11 + 4] |= 1048576			  ## xosc_fsck.c:371:5
    40d6:    00 f6 00 b0       	r0 = [r11 + 0]			  ## xosc_fsck.c:373:22
    40da:    00 f6 00 b0       	r0 = [r11 + 0]			  ## xosc_fsck.c:375:5
    40de:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## xosc_fsck.c:375:5
    40e2:    90 b1             	r0 |= 8			  ## xosc_fsck.c:375:5
    40e4:    10 f6 00 b0       	[r11 + 0] = r0			  ## xosc_fsck.c:375:5
    40e8:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:377:15
    40ec:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:378:15
    40f0:    01 f4 08 ba       	[r11 + 4] |= 2048			  ## xosc_fsck.c:380:5
    40f4:    01 f4 08 b9       	[r11 + 4] |= 8			  ## xosc_fsck.c:382:5
    40f8:    27 fd 07 09       	r7 = r0 & 7			  ## xosc_fsck.c:385:9
    40fc:    77 e0 03 00       	if (r7 == 7) goto 6 <low_power_system_down+0x29A : 4106 >			  ## xosc_fsck.c:385:9
    4100:    03 3e             	if (r7 != 0) goto 6 <low_power_system_down+0x29C : 4108 >
    4102:    17 70             	r7 = 1
    4104:    01 18             	goto 2 <low_power_system_down+0x29C : 4108 >
    4106:    67 70             	r7 = 6
    4108:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:397:5
    410c:    71 9e             	r1 = r7 + 7			  ## xosc_fsck.c:397:5
    410e:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:397:5
    4110:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:397:5
    4114:    11 f6 04 b0       	[r11 + 4] = r1			  ## xosc_fsck.c:397:5
    4118:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:398:5
    411c:    7e 15             	call -1284 <delay_p11_tmr1_lrc : 3c1a >			  ## xosc_fsck.c:398:5
    411e:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:399:5
    4122:    30 fd 07 09       	r0 = r0 & 4294967288			  ## xosc_fsck.c:399:5
    4126:    50 be             	r0 |= r7			  ## xosc_fsck.c:399:5
    4128:    10 f6 04 b0       	[r11 + 4] = r0			  ## xosc_fsck.c:399:5
    412c:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:400:5
    4130:    74 15             	call -1304 <delay_p11_tmr1_lrc : 3c1a >			  ## xosc_fsck.c:400:5
    4132:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:401:5
    4136:    11 9e             	r1 = r7 + 1			  ## xosc_fsck.c:401:5
    4138:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:401:5
    413a:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:401:5
    413e:    11 f6 04 b0       	[r11 + 4] = r1			  ## xosc_fsck.c:401:5
    4142:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:402:5
    4146:    69 15             	call -1326 <delay_p11_tmr1_lrc : 3c1a >			  ## xosc_fsck.c:402:5
    4148:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:406:5
    414c:    f0 b5             	r0 &= 4294965247			  ## xosc_fsck.c:406:5
    414e:    10 f6 04 b0       	[r11 + 4] = r0			  ## xosc_fsck.c:406:5
    4152:    00 f6 04 b0       	r0 = [r11 + 4]			  ## xosc_fsck.c:408:5
    4156:    f0 b1             	r0 &= 4294967287			  ## xosc_fsck.c:408:5
    4158:    10 f6 04 b0       	[r11 + 4] = r0			  ## xosc_fsck.c:408:5
    415c:    80 7c             	r0 = 200			  ## xosc_fsck.c:409:5
    415e:    5d 15             	call -1350 <delay_p11_tmr1_lrc : 3c1a >			  ## xosc_fsck.c:409:5
    4160:    16 f6 04 b0       	[r11 + 4] = r6			  ## xosc_fsck.c:414:22
    4164:    02 28             	if (r4 == 0) goto 4 <low_power_system_down+0x2FE : 416a >			  ## xosc_fsck.c:414:22
    4166:    20 05             	r0 = r4.l (u)			  ## xosc_fsck.c:432:9
    4168:    58 15             	call -1360 <delay_p11_tmr1_lrc : 3c1a >			  ## xosc_fsck.c:432:9
    416a:    18 f6 00 b0       	[r11 + 0] = r8			  ## xosc_fsck.c:436:22
    416e:    94 fc 00 47       	r4 = r9 + 18176
    4172:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:784:20
    4174:    20 f3 0a 00       	if ((r0 & 1) != 0) goto 20 <low_power_system_down+0x320 : 418c >			  ## pmu_analog.c:784:20
    4178:    00 f4 02 bc       	[r11 + 0] |= 33554432			  ## pmu_analog.c:785:26
    417c:    00 f4 01 49       	[r4 + 0] |= 1			  ## pmu_analog.c:786:28
    4180:    a0 70             	r0 = 10			  ## pmu_analog.c:788:9
    4182:    4b 15             	call -1386 <delay_p11_tmr1_lrc : 3c1a >			  ## pmu_analog.c:788:9
    4184:    00 f4 02 49       	[r4 + 0] |= 2			  ## pmu_analog.c:789:28
    4188:    80 7c             	r0 = 200			  ## pmu_analog.c:791:9
    418a:    47 15             	call -1394 <delay_p11_tmr1_lrc : 3c1a >			  ## pmu_analog.c:791:9
    418c:    00 f6 b0 50       	r0 = [r5 + 176]			  ## pmu_analog.c:797:25
    4190:    10 f6 08 90       	[r9 + 8] = r0			  ## pmu_analog.c:797:23
    4194:    00 f6 10 90       	r0 = [r9 + 16]			  ## pmu_analog.c:798:5
    4198:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## pmu_analog.c:798:5
    419c:    00 fd 06 0a       	r0 = r0 | 1536			  ## pmu_analog.c:798:5
    41a0:    10 f6 10 90       	[r9 + 16] = r0			  ## pmu_analog.c:798:5
    41a4:    08 00             	csync			  ## pmu_analog.c:799:5
    41a6:    c4 ff a0 ef e0 01 	r4 = 31518624 <flash_powerup_ok_flash : 1e0efa0 >			  ## pmu_analog.c:799:5
    41ac:    c5 ff 80 44 00 00 	r5 = 17536 <flash_powerup_ok_ram : 4480 >			  ## pmu_analog.c:799:5
    41b2:    01 72             	r1 = 32			  ## power_hw.c:975:9
    41b4:    40 08             	r0 = r4			  ## power_hw.c:975:9
    41b6:    88 f3 b9 16       	call 1060210 <sfc_drop_cache : 106f2c >			  ## power_hw.c:975:9
    41ba:    40 08             	r0 = r4			  ## power_hw.c:976:14
    41bc:    51 08             	r1 = r5			  ## power_hw.c:976:14
    41be:    88 f3 99 16       	call 1060146 <strcmp : 106ef4 >			  ## power_hw.c:976:14
    41c2:    f7 31             	if (r0 != 0) goto -18 <low_power_system_down+0x346 : 41b2 >			  ## power_hw.c:976:5
    41c4:    5f 01             	{pc, r15-r4} = [sp++]			  ## power_hw.c:980:1


delay:
    41c6:    03 20             	if (r0 == 0) goto 6 <delay+0x8 : 41ce >			  ## uart.c:22:0
    41c8:    f0 8f             	r0 += -1			  ## uart.c:23:15
    41ca:    00 00             	nop			  ## uart.c:24:9
    41cc:    fd 31             	if (r0 != 0) goto -6 <delay+0x2 : 41c8 >			  ## uart.c:24:9
    41ce:    20 00             	rts			  ## uart.c:26:1


cpu_addr2flash_addr:
    41d0:    c1 ff b0 25 00 00 	r1 = 9648 <adv_data : 25b0 >			  ## vm_sfc.c:207:0
    41d6:    02 f6 98 10       	r2 = [r1 + 152]			  ## vm_sfc.c:210:27
    41da:    01 f6 9c 10       	r1 = [r1 + 156]			  ## vm_sfc.c:210:68
    41de:    20 09             	r0 += r2			  ## vm_sfc.c:210:51
    41e0:    60 b0             	r0 = r0 - r1			  ## vm_sfc.c:210:41
    41e2:    20 00             	rts			  ## vm_sfc.c:210:5


enter_continue_mode:
    41e4:    34 00             	[--sp] = rets			  ## vm_sfc.c:539:0
    41e6:    fe 0b             	sp += -4			  ## vm_sfc.c:539:0
    41e8:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:539:0
    41ea:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    41ec:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    41ee:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    41f0:    bf f3 e0 f9       	call -3136 <__norflash_read : 35b4 >			  ## vm_sfc.c:541:5
    41f4:    02 0a             	sp += 4			  ## vm_sfc.c:541:5
    41f6:    30 00             	pc = [sp++]			  ## vm_sfc.c:542:1


exit_spi_code:
    41f8:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:305:0
    41fa:    04 08             	r4 = r0			  ## vm_sfc.c:305:0
    41fc:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    41fe:    88 f3 93 16       	call 1060134 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    4202:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    4208:    fc 61             	b[r0 + 31] = r4			  ## vm_sfc.c:222:17
    420a:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:310:29
    4210:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    4212:    00 70             	r0 = 0			  ## vm_sfc.c:310:29
    4214:    c1 ff 50 56 1e 00 	r1 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    421a:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:322:22
    421c:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:323:22
    421e:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:324:22
    4220:    11 fc f4 00       	r1 = r1 + 244			  ## vm_sfc.c:324:22
    4224:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:325:26
    4226:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:326:26
    4228:    14 01             	{rets, r4} = [sp++]			  ## vm_sfc.c:335:5
    422a:    c8 f3 b5 15       	goto 1059690 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5


load_spi_code2cache:
    422e:    20 00             	rts			  ## vm_sfc.c:235:0


norflash_entry_sleep:
    4230:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:827:0
    4232:    fa 0b             	sp += -12			  ## vm_sfc.c:827:0
    4234:    bf f3 f6 f8       	call -3604 <enter_spi_code : 3424 >			  ## vm_sfc.c:828:5
    4238:    bf f3 fd fa       	call -2566 <exit_continue_mode : 3836 >			  ## vm_sfc.c:829:21
    423c:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:829:21
    4242:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:57:19
    4244:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    4246:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:57:19
    4248:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:57:19
    424a:    03 08             	r3 = r0			  ## vm_sfc.c:829:21
    424c:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:58:53
    4250:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:58:53
    4252:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    4254:    0d 02             	[sp] = r5
    4256:    90 7b             	r0 = 185			  ## vm_sfc.c:832:5
    4258:    bf f3 04 f9       	call -3576 <spi_writebyte : 3464 >			  ## vm_sfc.c:832:5
    425c:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:57:19
    425e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    4260:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:57:19
    4262:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:57:19
    4266:    1d 02             	[sp+4] = r5
    4268:    06 26             	if (r3 == 0) goto 12 <norflash_entry_sleep+0x46 : 4276 >
    426a:    80 a0             	r0 = sp + 8
    426c:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    426e:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    4270:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    4272:    bf f3 9f f9       	call -3266 <__norflash_read : 35b4 >			  ## vm_sfc.c:541:5
    4276:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    4278:    88 f3 56 16       	call 1060012 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    427c:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    4282:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    4284:    f9 61             	b[r0 + 31] = r1			  ## vm_sfc.c:222:17
    4286:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:310:29
    428a:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    428c:    40 fc 50 03       	r0 = r4 + 848
    4290:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    4292:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    4294:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    4296:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    429a:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    429c:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    429e:    88 f3 7b 15       	call 1059574 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    42a2:    06 0a             	sp += 12			  ## vm_sfc.c:335:5
    42a4:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:839:1


norflash_exit_sleep:
    42a6:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:842:0
    42a8:    fa 0b             	sp += -12			  ## vm_sfc.c:842:0
    42aa:    bf f3 bb f8       	call -3722 <enter_spi_code : 3424 >			  ## vm_sfc.c:843:5
    42ae:    bf f3 c2 fa       	call -2684 <exit_continue_mode : 3836 >			  ## vm_sfc.c:844:21
    42b2:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:844:21
    42b8:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:57:19
    42ba:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    42bc:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:57:19
    42be:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:57:19
    42c0:    03 08             	r3 = r0			  ## vm_sfc.c:844:21
    42c2:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:58:53
    42c6:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:58:53
    42c8:    a5 70             	r5 = 10			  ## vm_sfc.c:58:53
    42ca:    0d 02             	[sp] = r5
    42cc:    b0 7a             	r0 = 171			  ## vm_sfc.c:846:5
    42ce:    bf f3 c9 f8       	call -3694 <spi_writebyte : 3464 >			  ## vm_sfc.c:846:5
    42d2:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:57:19
    42d4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    42d6:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:57:19
    42d8:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:57:19
    42dc:    1d 02             	[sp+4] = r5
    42de:    06 26             	if (r3 == 0) goto 12 <norflash_exit_sleep+0x46 : 42ec >
    42e0:    80 a0             	r0 = sp + 8
    42e2:    01 70             	r1 = 0			  ## vm_sfc.c:541:5
    42e4:    12 70             	r2 = 1			  ## vm_sfc.c:541:5
    42e6:    13 70             	r3 = 1			  ## vm_sfc.c:541:5
    42e8:    bf f3 64 f9       	call -3384 <__norflash_read : 35b4 >			  ## vm_sfc.c:541:5
    42ec:    10 70             	r0 = 1			  ## vm_sfc.c:306:5
    42ee:    88 f3 1b 16       	call 1059894 <sfc_resume : 106f28 >			  ## vm_sfc.c:306:5
    42f2:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:222:17
    42f8:    01 70             	r1 = 0			  ## vm_sfc.c:222:17
    42fa:    f9 61             	b[r0 + 31] = r1			  ## vm_sfc.c:222:17
    42fc:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:310:29
    4300:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:310:29
    4302:    40 fc 50 03       	r0 = r4 + 848
    4306:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:322:22
    4308:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:323:22
    430a:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:324:22
    430c:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:324:22
    4310:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:325:26
    4312:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:326:26
    4314:    88 f3 40 15       	call 1059456 <local_irq_enable : 106d98 >			  ## vm_sfc.c:335:5
    4318:    06 0a             	sp += 12			  ## vm_sfc.c:335:5
    431a:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:852:1


norflash_is_busy:
    431c:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:358:0
    431e:    fc 0b             	sp += -8			  ## vm_sfc.c:358:0
    4320:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:358:0
    4326:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4328:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    432a:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    432c:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    432e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    4330:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    4332:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    4334:    0c 02             	[sp] = r4
    4336:    50 70             	r0 = 5			  ## vm_sfc.c:360:5
    4338:    bf f3 94 f8       	call -3800 <spi_writebyte : 3464 >			  ## vm_sfc.c:360:5
    433c:    bf f3 ef f8       	call -3618 <spi_readbyte : 351e >			  ## vm_sfc.c:361:14
    4340:    21 46             	r1 = [r3 + 8]			  ## vm_sfc.c:57:19
    4342:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:57:19
    4344:    29 46             	[r3 + 8] = r1			  ## vm_sfc.c:57:19
    4346:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    434a:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:363:15
    434e:    1c 02             	[sp+4] = r4			  ## vm_sfc.c:363:15
    4350:    04 0a             	sp += 8			  ## vm_sfc.c:363:15
    4352:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:363:5


norflash_resume:
    4354:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:376:0
    4356:    fc 0b             	sp += -8			  ## vm_sfc.c:376:0
    4358:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:376:0
    435e:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4360:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    4362:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    4364:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    4366:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    4368:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    436a:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    436c:    0c 02             	[sp] = r4
    436e:    a0 77             	r0 = 122			  ## vm_sfc.c:378:5
    4370:    bf f3 78 f8       	call -3856 <spi_writebyte : 3464 >			  ## vm_sfc.c:378:5
    4374:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4376:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    4378:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    437a:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    437e:    1c 02             	[sp+4] = r4
    4380:    04 0a             	sp += 8
    4382:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:380:1


norflash_suspend:
    4384:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:368:0
    4386:    fc 0b             	sp += -8			  ## vm_sfc.c:368:0
    4388:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:368:0
    438e:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    4390:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    4392:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    4394:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:57:19
    4396:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:58:53
    4398:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:58:53
    439a:    a4 70             	r4 = 10			  ## vm_sfc.c:58:53
    439c:    0c 02             	[sp] = r4
    439e:    50 77             	r0 = 117			  ## vm_sfc.c:370:5
    43a0:    bf f3 60 f8       	call -3904 <spi_writebyte : 3464 >			  ## vm_sfc.c:370:5
    43a4:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:57:19
    43a6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:57:19
    43a8:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:57:19
    43aa:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:57:19
    43ae:    1c 02             	[sp+4] = r4
    43b0:    04 0a             	sp += 8
    43b2:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:372:1


sfc_nop_delay:
    43b4:    fe 0b             	sp += -4			  ## vm_sfc.c:48:0
    43b6:    08 02             	[sp] = r0			  ## vm_sfc.c:48:0
    43b8:    02 0a             	sp += 4			  ## vm_sfc.c:48:0
    43ba:    20 00             	rts			  ## vm_sfc.c:52:1


spi_cs:
    43bc:    fe 0b             	sp += -4			  ## vm_sfc.c:56:0
    43be:    c1 ff 00 53 1e 00 	r1 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:56:0
    43c4:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:57:19
    43c6:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:57:19
    43c8:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:57:19
    43ca:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:57:19
    43cc:    03 fd 08 29       	r3 = r2 | 8			  ## vm_sfc.c:58:25
    43d0:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:58:53
    43d2:    01 20             	if (r0 == 0) goto 2 <spi_cs+0x1A : 43d6 >			  ## vm_sfc.c:58:53
    43d4:    32 08             	r2 = r3			  ## vm_sfc.c:58:5
    43d6:    0a 42             	[r1 + 0] = r2
    43d8:    a0 70             	r0 = 10
    43da:    08 02             	[sp] = r0
    43dc:    02 0a             	sp += 4
    43de:    20 00             	rts			  ## vm_sfc.c:60:1


spi_wait_ok:
    43e0:    08 00             	csync			  ## vm_sfc.c:64:0
    43e2:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:65:5
    43e8:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:66:23
    43ea:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:66:12
    43ec:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_wait_ok+0x8 : 43e8 >			  ## vm_sfc.c:66:5
    43f0:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:67:18
    43f4:    20 00             	rts			  ## vm_sfc.c:69:1


spi_writebyte_dma:
    43f6:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:83:0
    43fc:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:84:18
    43fe:    08 00             	csync			  ## vm_sfc.c:65:5
    4400:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:66:23
    4402:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:66:12
    4404:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte_dma+0xA : 4400 >			  ## vm_sfc.c:66:5
    4408:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:67:18
    440c:    20 00             	rts			  ## vm_sfc.c:86:1


vm_enter_deepsleep:
    440e:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:955:0
    4414:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:956:46
    4416:    c2 ff c0 23 00 00 	r2 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:957:35
    441c:    11 f6 34 21       	[r2 + 308] = r1			  ## vm_sfc.c:956:35
    4420:    00 f6 00 01       	r0 = [r0 + 256]			  ## vm_sfc.c:957:46
    4424:    10 f6 38 21       	[r2 + 312] = r0			  ## vm_sfc.c:957:35
    4428:    20 00             	rts			  ## vm_sfc.c:958:1


vm_exit_deepsleep:
    442a:    c0 ff c0 23 00 00 	r0 = 9152 <cur_ch : 23c0 >			  ## vm_sfc.c:962:0
    4430:    01 f6 34 01       	r1 = [r0 + 308]			  ## vm_sfc.c:963:41
    4434:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:963:41
    443a:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:963:18
    443c:    00 f6 38 01       	r0 = [r0 + 312]			  ## vm_sfc.c:964:41
    4440:    21 fc 00 01       	r1 = r2 + 256			  ## vm_sfc.c:964:41
    4444:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:964:18
    4446:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## vm_sfc.c:965:18
    444a:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:966:18
    444e:    c0 ff 3c 26 00 00 	r0 = 9788 <flash_info+0x24 : 263c >			  ## vm_sfc.c:966:18
    4454:    31 40             	r1 = [r0 + 12]			  ## vm_sfc.c:200:30
    4456:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:967:60
    4458:    40 40             	r0 = [r0 + 16]			  ## vm_sfc.c:202:27
    445a:    61 b4             	r1 = r2 - r1			  ## vm_sfc.c:200:12
    445c:    10 09             	r0 += r1			  ## vm_sfc.c:202:36
    445e:    c1 ff 1c 02 1f 00 	r1 = 2032156 <uECC_vli_cmp_unsafe+0xE9220 : 1f021c >			  ## vm_sfc.c:202:36
    4464:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:967:24
    4466:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1E55DB : 1ffffff >			  ## vm_sfc.c:968:24
    446c:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:968:24
    446e:    20 00             	rts			  ## vm_sfc.c:970:1
    4470:    00 00             	nop
    4472:    00 00             	nop
    4474:    00 00             	nop
    4476:    00 00             	nop
    4478:    00 00             	nop
    447a:    00 00             	nop
    447c:    00 00             	nop
    447e:    00 00             	nop


flash_powerup_ok_ram:
    4480:    66 6c             	r6 = b[r6 + 6] (u)
    4482:    61 73             	r1 = 54
    4484:    68 5f             	h[r7 + 44] = r0
    4486:    70 6f             	r0 = b[r7 + 23] (u)
    4488:    77 65             	r7 = b[r2 + 23] (u)
    448a:    72 75             	r2 = 87
    448c:    70 5f             	r0 = h[r7 + 46] (u)
    448e:    6f 6b             	b[r5 + 22] = r7
    4490:    00 00             	nop
    4492:    00 00             	nop
    4494:    00 00             	nop
    4496:    00 00             	nop
    4498:    00 00             	nop
    449a:    00 00             	nop
    449c:    00 00             	nop
    449e:    00 00             	nop


exception_irq_handler:
    44a0:    7e f3 2f 38       	[--sp] = {ssp, usp, icfg, psr, rets, retx, rete, reti}			  ## startup.S:157:0
    44a4:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## startup.S:158:0
    44a8:    28 fb 00 0e       	r0 = sp			  ## startup.S:160:0
    44ac:    af f3 85 f5       	call -2102518 <exception_analyze : 1e02fba >			  ## startup.S:161:0
    44b0:    ff 1f             	goto -2 <exception_irq_handler+0x10 : 44b0 >			  ## startup.S:164:0
    44b2:    00 00             	nop


lmp_conn_for_link:
    44b4:    c2 ff 94 30 00 00 	r2 = 12436 <lmp_acl_link : 3094 >			  ## lmp.c:449:0
    44ba:    01 08             	r1 = r0			  ## lmp.c:449:0
    44bc:    20 08             	r0 = r2			  ## lmp.c:449:0
    44be:    03 f6 c4 00       	r3 = [r0 + 196]			  ## lmp.c:453:19
    44c2:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_link+0x20 : 44d4 >			  ## lmp.c:453:19
    44c6:    00 fc e0 00       	r0 = r0 + 224			  ## lmp.c:452:5
    44ca:    23 fc e0 00       	r3 = r2 + 224
    44ce:    30 f2 f6 3f       	if (r0 < r3) goto -20 <lmp_conn_for_link+0xA : 44be >
    44d2:    00 70             	r0 = 0
    44d4:    20 00             	rts			  ## lmp.c:458:1


lmp_conn_for_address:
    44d6:    77 01             	[--sp] = {rets, r7-r4}			  ## lmp.c:386:0
    44d8:    05 08             	r5 = r0			  ## lmp.c:386:0
    44da:    88 f3 5f 14       	call 1059006 <local_irq_disable : 106d9c >			  ## lmp.c:389:5
    44de:    c6 ff 94 30 00 00 	r6 = 12436 <lmp_acl_link : 3094 >
    44e4:    64 08             	r4 = r6
    44e6:    47 fc a8 00       	r7 = r4 + 168
    44ea:    00 5e             	r0 = h[r7 + 0] (u)			  ## lmp.c:391:26
    44ec:    0a 20             	if (r0 == 0) goto 20 <lmp_conn_for_address+0x2C : 4502 >			  ## lmp.c:391:26
    44ee:    70 4e             	r0 = [r7 + 28]			  ## lmp.c:391:42
    44f0:    08 20             	if (r0 == 0) goto 16 <lmp_conn_for_address+0x2C : 4502 >			  ## lmp.c:391:42
    44f2:    11 2a             	if (r5 == 0) goto 34 <lmp_conn_for_address+0x40 : 4516 >
    44f4:    00 fc a3 00       	r0 = r0 + 163			  ## lmp.c:396:25
    44f8:    62 70             	r2 = 6			  ## lmp.c:396:18
    44fa:    51 08             	r1 = r5			  ## lmp.c:396:18
    44fc:    88 f3 f6 14       	call 1059308 <memcmp : 106eec >			  ## lmp.c:396:18
    4500:    0a 20             	if (r0 == 0) goto 20 <lmp_conn_for_address+0x40 : 4516 >			  ## lmp.c:396:18
    4502:    74 fc 38 00       	r4 = r7 + 56			  ## lmp.c:390:5
    4506:    60 fc e0 00       	r0 = r6 + 224
    450a:    04 f2 ec 3f       	if (r4 < r0) goto -40 <lmp_conn_for_address+0x10 : 44e6 >
    450e:    88 f3 43 14       	call 1058950 <local_irq_enable : 106d98 >			  ## lmp.c:402:5
    4512:    04 70             	r4 = 0			  ## lmp.c:402:5
    4514:    02 18             	goto 4 <lmp_conn_for_address+0x44 : 451a >
    4516:    88 f3 3f 14       	call 1058942 <local_irq_enable : 106d98 >
    451a:    40 08             	r0 = r4			  ## lmp.c:404:1
    451c:    57 01             	{pc, r7-r4} = [sp++]			  ## lmp.c:404:1
    451e:    00 00             	nop


connection_tx_handler:
    4520:    7f 01             	[--sp] = {rets, r15-r4}			  ## bredr_link.c:2415:0
    4522:    f2 0b             	sp += -28			  ## bredr_link.c:2415:0
    4524:    04 08             	r4 = r0			  ## bredr_link.c:2415:0
    4526:    47 fc a0 00       	r7 = r4 + 160			  ## bredr_link.c:2415:0
    452a:    b0 4e             	r0 = [r7 + 44]			  ## bredr_link.c:2419:36
    452c:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_link.c:2421:8
    4532:    91 f5 1a 00       	h[sp+26] = r1			  ## bredr_link.c:2421:8
    4536:    49 99             	r9 = r4 + 20			  ## bredr_link.c:2421:8
    4538:    01 f9 18 90       	r1 = b[r9 + 24] (u)			  ## bredr_link.c:2423:13
    453c:    20 f3 35 11       	if ((r1 & 1) != 0) goto 618 <connection_tx_handler+0x28A : 47aa >			  ## bredr_link.c:2423:13
    4540:    11 b0             	r1 |= 1			  ## bredr_link.c:2426:23
    4542:    11 f9 18 90       	b[r9 + 24] = r1			  ## bredr_link.c:2426:23
    4546:    a1 a1             	r1 = sp + 26			  ## bredr_link.c:2426:23
    4548:    b0 f3 e3 93       	call -2021434 <bredr_frame_get_empty_txbuf_index : 1e16d12 >			  ## bredr_link.c:2428:5
    454c:    90 fc 0d 00       	r0 = r9 + 13
    4550:    28 02             	[sp+8] = r0
    4552:    70 fc 40 00       	r0 = r7 + 64
    4556:    38 02             	[sp+12] = r0
    4558:    7b fc 38 00       	r11 = r7 + 56
    455c:    7a fc 50 00       	r10 = r7 + 80
    4560:    0f 70             	r15 = 0
    4562:    08 70             	r8 = 0
    4564:    5c 02             	[sp+20] = r4
    4566:    19 f5 10 00       	[sp+16] = r9
    456a:    a0 a1             	r0 = sp + 26
    456c:    05 fa 00 0f       	r5 = b[r0+r15] (u)			  ## bredr_link.c:2465:17
    4570:    00 ff ff 50 12 01 	if (r5 == 255) goto 548 <connection_tx_handler+0x27A : 479a >
    4576:    a8 c0             	r0 = r5 << 2			  ## bredr_link.c:2469:19
    4578:    80 fb 00 da       	r13 = r10 + r0			  ## bredr_link.c:2469:19
    457c:    06 f6 00 d0       	r6 = [r13 + 0]			  ## bredr_link.c:2469:19
    4580:    51 2c             	if (r6 == 0) goto 162 <connection_tx_handler+0x104 : 4624 >
    4582:    10 70             	r0 = 1			  ## bredr_link.c:2470:47
    4584:    01 2a             	if (r5 == 0) goto 2 <connection_tx_handler+0x68 : 4588 >			  ## bredr_link.c:2470:47
    4586:    00 70             	r0 = 0			  ## bredr_link.c:2470:47
    4588:    a0 f6 00 a0       	r0 = [r10+r0<<2]			  ## bredr_link.c:2470:35
    458c:    06 f2 4a 00       	if (r6 == r0) goto 148 <connection_tx_handler+0x104 : 4624 >			  ## bredr_link.c:2470:35
    4590:    50 5c             	r0 = h[r6 + 10] (u)			  ## bredr_link.c:2475:54
    4592:    61 5c             	r1 = h[r6 + 12] (u)			  ## bredr_link.c:2475:35
    4594:    01 f2 46 10       	if (r1 != r0) goto 140 <connection_tx_handler+0x104 : 4624 >			  ## bredr_link.c:2475:35
    4598:    00 70             	r0 = 0			  ## bredr_link.c:2477:32
    459a:    10 f6 00 d0       	[r13 + 0] = r0			  ## bredr_link.c:2477:32
    459e:    60 6c             	r0 = b[r6 + 6] (u)			  ## bredr_link.c:2479:26
    45a0:    30 e0 0c 10       	if (r0 != 3) goto 24 <connection_tx_handler+0x9C : 45bc >			  ## bredr_link.c:2479:26
    45a4:    c0 6d             	r0 = b[r6 + 28] (u)			  ## bredr_link.c:2480:30
    45a6:    e0 ef 09 30       	if (r0 < 254) goto 18 <connection_tx_handler+0x9C : 45bc >			  ## bredr_link.c:2480:30
    45aa:    d0 6d             	r0 = b[r6 + 29] (u)			  ## bredr_link.c:2482:25
    45ac:    10 e0 06 10       	if (r0 != 1) goto 12 <connection_tx_handler+0x9C : 45bc >			  ## bredr_link.c:2482:25
    45b0:    f0 6d             	r0 = b[r6 + 31] (u)			  ## bredr_link.c:2483:29
    45b2:    b0 e0 03 10       	if (r0 != 11) goto 6 <connection_tx_handler+0x9C : 45bc >			  ## bredr_link.c:2483:29
    45b6:    b0 4e             	r0 = [r7 + 44]
    45b8:    b0 f3 df 93       	call -2021442 <link_conn_set_ptt : 1e16d7a >			  ## bredr_link.c:2484:29
    45bc:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2490:26
    45be:    41 fc 40 00       	r1 = r4 + 64			  ## bredr_link.c:2490:26
    45c2:    00 f3 04 00       	if ((r0 & 1) == 0) goto 8 <connection_tx_handler+0xAE : 45ce >			  ## bredr_link.c:2490:26
    45c6:    a0 63             	r0 = b[r1 + 26] (u)			  ## bredr_link.c:2491:44
    45c8:    70 b1             	r0 &= 4294967291			  ## bredr_link.c:2491:44
    45ca:    a8 63             	b[r1 + 26] = r0			  ## bredr_link.c:2491:44
    45cc:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2491:44
    45ce:    02 f3 04 00       	if ((r0 & 4) == 0) goto 8 <connection_tx_handler+0xBA : 45da >
    45d2:    10 62             	r0 = b[r1 + 1] (u)			  ## bredr_link.c:2495:33
    45d4:    10 b1             	r0 |= 4			  ## bredr_link.c:2495:33
    45d6:    18 62             	b[r1 + 1] = r0			  ## bredr_link.c:2495:33
    45d8:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2495:33
    45da:    12 6c             	r2 = b[r6 + 1] (u)			  ## bredr_link.c:2503:26
    45dc:    02 f3 08 20       	if ((r2 & 4) == 0) goto 16 <connection_tx_handler+0xD0 : 45f0 >			  ## bredr_link.c:2503:26
    45e0:    b0 4e             	r0 = [r7 + 44]
    45e2:    81 fd 08 12       	r1 = uextra(r2, p:1, l:1)			  ## bredr_link.c:2504:43
    45e6:    22 fd 01 29       	r2 = r2 & 1			  ## bredr_link.c:2504:17
    45ea:    b0 f3 ca 93       	call -2021484 <link_conn_set_encrypt : 1e16d82 >			  ## bredr_link.c:2504:17
    45ee:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2504:17
    45f0:    04 f3 08 00       	if ((r0 & 16) == 0) goto 16 <connection_tx_handler+0xE4 : 4604 >
    45f4:    02 f9 00 41       	r2 = b[r4 + 256] (u)			  ## bredr_link.c:2510:17
    45f8:    01 f6 e0 42       	r1 = [r4 + 736]			  ## bredr_link.c:2510:48
    45fc:    40 08             	r0 = r4			  ## bredr_link.c:2510:17
    45fe:    23 02             	r3 = [sp+8]			  ## bredr_link.c:2510:17
    4600:    b0 f3 45 95       	call -2020726 <bredr_link_set_afh : 1e1708e >			  ## bredr_link.c:2510:17
    4604:    40 6c             	r0 = b[r6 + 4] (u)			  ## bredr_link.c:2513:26
    4606:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0xEA : 460a >			  ## bredr_link.c:2513:26
    4608:    18 6e             	b[r7 + 1] = r0			  ## bredr_link.c:2514:35
    460a:    32 6c             	r2 = b[r6 + 3] (u)			  ## bredr_link.c:2517:26
    460c:    08 24             	if (r2 == 0) goto 16 <connection_tx_handler+0xFE : 461e >			  ## bredr_link.c:2517:26
    460e:    00 f9 18 90       	r0 = b[r9 + 24] (u)			  ## bredr_link.c:2518:26
    4612:    22 f3 04 00       	if ((r0 & 4) != 0) goto 8 <connection_tx_handler+0xFE : 461e >			  ## bredr_link.c:2518:26
    4616:    11 70             	r1 = 1			  ## bredr_link.c:2519:21
    4618:    40 08             	r0 = r4			  ## bredr_link.c:2519:21
    461a:    b0 f3 75 69       	call -2043158 <bredr_link_event : 1e11908 >			  ## bredr_link.c:2519:21
    461e:    60 08             	r0 = r6			  ## bredr_link.c:2526:13
    4620:    b0 f3 74 02       	call -2095896 <bredr_tx_bulk_free : 1e04b0c >			  ## bredr_link.c:2526:13
    4624:    0e 70             	r14 = 0
    4626:    08 e0 02 10       	if (r8 != 0) goto 4 <connection_tx_handler+0x10E : 462e >
    462a:    0f e0 b3 10       	if (r15 != 0) goto 358 <connection_tx_handler+0x274 : 4794 >
    462e:    b0 08             	r0 = r11			  ## bredr_link.c:2530:18
    4630:    b0 f3 92 02       	call -2095836 <bredr_tx_bulk_pop : 1e04b58 >			  ## bredr_link.c:2530:18
    4634:    9d 20             	if (r0 == 0) goto 314 <connection_tx_handler+0x250 : 4770 >
    4636:    0e 08             	r14 = r0
    4638:    00 60             	r0 = b[r0 + 0] (u)			  ## bredr_link.c:2336:13
    463a:    0c f6 2c 70       	r12 = [r7 + 44]			  ## bredr_link.c:2334:36
    463e:    02 f3 07 00       	if ((r0 & 4) == 0) goto 14 <connection_tx_handler+0x130 : 4650 >
    4642:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## bredr_link.c:2337:35
    4646:    22 fd 01 09       	r2 = r0 & 1			  ## bredr_link.c:2337:9
    464a:    c0 08             	r0 = r12			  ## bredr_link.c:2337:9
    464c:    b0 f3 99 93       	call -2021582 <link_conn_set_encrypt : 1e16d82 >			  ## bredr_link.c:2337:9
    4650:    02 f9 02 e0       	r2 = b[r14 + 2] (u)			  ## bredr_link.c:2341:13
    4654:    04 24             	if (r2 == 0) goto 8 <connection_tx_handler+0x13E : 465e >			  ## bredr_link.c:2341:13
    4656:    11 70             	r1 = 1			  ## bredr_link.c:2349:13
    4658:    40 08             	r0 = r4			  ## bredr_link.c:2349:13
    465a:    b0 f3 55 69       	call -2043222 <bredr_link_event : 1e11908 >			  ## bredr_link.c:2349:13
    465e:    00 f9 06 e0       	r0 = b[r14 + 6] (u)
    4662:    01 fc ff ff       	r1 = r0 + -1			  ## bredr_link.c:2353:9
    4666:    21 e0 5b 20       	if (r1 >= 2) goto 182 <connection_tx_handler+0x200 : 4720 >			  ## bredr_link.c:2353:9
    466a:    b6 08             	r6 = r11
    466c:    08 f7 0c e0       	r8 = h[r14 + 12] (u)			  ## bredr_link.c:2364:25
    4670:    70 08             	r0 = r7			  ## bredr_link.c:2364:25
    4672:    07 f7 0a e0       	r7 = h[r14 + 10] (u)			  ## bredr_link.c:2364:15
    4676:    0b f7 16 c0       	r11 = h[r12 + 22] (u)			  ## bredr_frame.h:140:22
    467a:    91 08             	r1 = r9			  ## bredr_frame.h:140:22
    467c:    09 08             	r9 = r0			  ## bredr_frame.h:140:22
    467e:    12 60             	r2 = b[r0 + 1] (u)			  ## bredr_frame.h:140:22
    4680:    83 63             	r3 = b[r1 + 24] (u)			  ## bredr_link.c:2366:62
    4682:    02 34             	if (r2 != 0) goto 4 <connection_tx_handler+0x168 : 4688 >			  ## bredr_link.c:2366:62
    4684:    bf f3 c7 f6       	call -4722 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
    4688:    34 70             	r4 = 3
    468a:    c1 ff ec 6b e1 01 	r1 = 31550444 <packet_2M_table : 1e16bec >
    4690:    23 f3 0c b0       	if ((r11 & 8) != 0) goto 24 <connection_tx_handler+0x18C : 46ac >
    4694:    20 fd 04 39       	r0 = r3 & 4			  ## bredr_link.c:2366:62
    4698:    c1 ff a4 6b e1 01 	r1 = 31550372 <packet_1M_table : 1e16ba4 >			  ## bredr_link.c:2366:62
    469e:    03 20             	if (r0 == 0) goto 6 <connection_tx_handler+0x186 : 46a6 >			  ## bredr_link.c:2366:62
    46a0:    c1 ff d4 6b e1 01 	r1 = 31550420 <packet_1M_table_tws : 1e16bd4 >
    46a6:    64 70             	r4 = 6
    46a8:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0x18C : 46ac >
    46aa:    34 70             	r4 = 3
    46ac:    90 fb 80 07       	r0 = r7 - r8			  ## bredr_link.c:2364:23
    46b0:    03 70             	r3 = 0
    46b2:    17 08             	r7 = r1
    46b4:    6b 08             	r11 = r6
    46b6:    36 5e             	r6 = h[r7 + 6] (u)			  ## bredr_link.c:2283:13
    46b8:    26 f2 07 80       	if (r6 > r2) goto 14 <connection_tx_handler+0x1AA : 46ca >			  ## bredr_link.c:2283:13
    46bc:    06 5e             	r6 = h[r7 + 0] (u)			  ## bredr_link.c:2287:20
    46be:    06 f2 08 a0       	ifs (r6 >= r0) goto 16 <connection_tx_handler+0x1B2 : 46d2 >			  ## bredr_link.c:2287:20
    46c2:    13 80             	r3 += 1			  ## bredr_link.c:2282:31
    46c4:    87 80             	r7 += 8			  ## bredr_link.c:2282:19
    46c6:    43 f2 f6 3f       	if (r3 < r4) goto -20 <connection_tx_handler+0x196 : 46b6 >			  ## bredr_link.c:2282:19
    46ca:    da c0             	r2 = r3 << 3			  ## bredr_link.c:2292:24
    46cc:    21 09             	r1 += r2			  ## bredr_link.c:2292:12
    46ce:    17 fc f8 ff       	r7 = r1 + -8			  ## bredr_link.c:2292:12
    46d2:    13 5e             	r3 = h[r7 + 2] (u)			  ## bredr_link.c:2367:19
    46d4:    02 f9 06 e0       	r2 = b[r14 + 6] (u)			  ## bredr_link.c:2371:17
    46d8:    01 f7 0c e0       	r1 = h[r14 + 12] (u)			  ## bredr_link.c:2377:53
    46dc:    24 5e             	r4 = h[r7 + 4] (u)			  ## bredr_link.c:2378:31
    46de:    1c 02             	[sp+4] = r4			  ## bredr_link.c:2377:9
    46e0:    24 70             	r4 = 2			  ## bredr_link.c:2377:9
    46e2:    01 22             	if (r1 == 0) goto 2 <connection_tx_handler+0x1C6 : 46e6 >			  ## bredr_link.c:2377:9
    46e4:    14 70             	r4 = 1			  ## bredr_link.c:2371:13
    46e6:    97 08             	r7 = r9
    46e8:    22 e0 01 00       	if (r2 == 2) goto 2 <connection_tx_handler+0x1CE : 46ee >
    46ec:    14 70             	r4 = 1			  ## bredr_link.c:2371:13
    46ee:    0c 02             	[sp] = r4			  ## bredr_link.c:2377:9
    46f0:    09 f5 10 00       	r9 = [sp+16]			  ## bredr_link.c:2377:9
    46f4:    30 f2 01 c0       	ifs (r0 > r3) goto 2 <connection_tx_handler+0x1DA : 46fa >			  ## bredr_link.c:2377:9
    46f8:    03 08             	r3 = r0			  ## bredr_link.c:2367:13
    46fa:    80 fb 10 0e       	r0 = r14 + r1			  ## bredr_link.c:2377:51
    46fe:    c2 91             	r2 = r0 + 28			  ## bredr_link.c:2377:51
    4700:    c0 08             	r0 = r12			  ## bredr_link.c:2377:9
    4702:    51 08             	r1 = r5			  ## bredr_link.c:2377:9
    4704:    b0 f3 1c 95       	call -2020808 <__write_reg_txinfo : 1e17140 >			  ## bredr_link.c:2377:9
    4708:    00 f7 0c e0       	r0 = h[r14 + 12] (u)			  ## bredr_link.c:2380:20
    470c:    30 09             	r0 += r3			  ## bredr_link.c:2380:20
    470e:    10 f7 0c e0       	h[r14 + 12] = r0			  ## bredr_link.c:2380:20
    4712:    01 f7 0a e0       	r1 = h[r14 + 10] (u)			  ## bredr_link.c:2381:31
    4716:    20 04             	r0 = r0.l (u)			  ## bredr_link.c:2380:20
    4718:    54 02             	r4 = [sp+20]			  ## bredr_link.c:2380:20
    471a:    01 f2 1c 00       	if (r1 == r0) goto 56 <connection_tx_handler+0x236 : 4756 >
    471e:    32 18             	goto 100 <connection_tx_handler+0x264 : 4784 >
    4720:    30 e0 2e 10       	if (r0 != 3) goto 92 <connection_tx_handler+0x260 : 4780 >
    4724:    01 f9 18 90       	r1 = b[r9 + 24] (u)			  ## bredr_link.c:2354:17
    4728:    30 70             	r0 = 3			  ## bredr_link.c:2354:17
    472a:    02 f3 04 10       	if ((r1 & 4) == 0) goto 8 <connection_tx_handler+0x216 : 4736 >			  ## bredr_link.c:2354:17
    472e:    bf f3 72 f6       	call -4892 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
    4732:    00 f9 06 e0       	r0 = b[r14 + 6] (u)			  ## cpu.h:148:5
    4736:    03 f7 0a e0       	r3 = h[r14 + 10] (u)			  ## bredr_link.c:2357:52
    473a:    01 f9 07 e0       	r1 = b[r14 + 7] (u)			  ## bredr_link.c:2358:31
    473e:    19 02             	[sp+4] = r1			  ## bredr_link.c:2357:9
    4740:    e2 fc 1c 00       	r2 = r14 + 28			  ## bredr_link.c:2357:42
    4744:    08 02             	[sp] = r0			  ## bredr_link.c:2357:9
    4746:    c0 08             	r0 = r12			  ## bredr_link.c:2357:9
    4748:    51 08             	r1 = r5			  ## bredr_link.c:2357:9
    474a:    b0 f3 f9 94       	call -2020878 <__write_reg_txinfo : 1e17140 >			  ## bredr_link.c:2357:9
    474e:    00 f7 0a e0       	r0 = h[r14 + 10] (u)			  ## bredr_link.c:2359:26
    4752:    10 f7 0c e0       	h[r14 + 12] = r0			  ## bredr_link.c:2359:20
    4756:    00 f6 10 e0       	r0 = [r14 + 16]
    475a:    01 f6 14 e0       	r1 = [r14 + 20]
    475e:    19 40             	[r0 + 4] = r1
    4760:    08 42             	[r1 + 0] = r0
    4762:    e0 fc 10 00       	r0 = r14 + 16
    4766:    10 f6 10 e0       	[r14 + 16] = r0
    476a:    10 f6 14 e0       	[r14 + 20] = r0
    476e:    0a 18             	goto 20 <connection_tx_handler+0x264 : 4784 >
    4770:    00 f9 03 90       	r0 = b[r9 + 3] (u)			  ## bredr_link.c:2536:32
    4774:    0f 20             	if (r0 == 0) goto 30 <connection_tx_handler+0x274 : 4794 >
    4776:    30 02             	r0 = [sp+12]			  ## bredr_link.c:2533:26
    4778:    b0 f3 ee 01       	call -2096164 <bredr_tx_bulk_pop : 1e04b58 >			  ## bredr_link.c:2533:26
    477c:    5c 31             	if (r0 != 0) goto -328 <connection_tx_handler+0x116 : 4636 >
    477e:    0a 18             	goto 20 <connection_tx_handler+0x274 : 4794 >
    4780:    bf f3 49 f6       	call -4974 <p33_soft_reset : 3416 >			  ## cpu.h:148:5
    4784:    88 f3 0a 13       	call 1058324 <local_irq_disable : 106d9c >			  ## bredr_link.c:2391:5
    4788:    c0 08             	r0 = r12			  ## bredr_link.c:2395:5
    478a:    51 08             	r1 = r5			  ## bredr_link.c:2395:5
    478c:    b0 f3 f7 94       	call -2020882 <__clean_reg_txempty : 1e1717e >			  ## bredr_link.c:2395:5
    4790:    88 f3 02 13       	call 1058308 <local_irq_enable : 106d98 >			  ## bredr_link.c:2396:5
    4794:    1e f6 00 d0       	[r13 + 0] = r14			  ## bredr_link.c:2548:28
    4798:    e8 08             	r8 = r14			  ## bredr_link.c:2548:28
    479a:    1f 80             	r15 += 1			  ## bredr_link.c:2464:25
    479c:    2f e0 e5 1e       	if (r15 != 2) goto -566 <connection_tx_handler+0x4A : 456a >
    47a0:    00 f9 18 90       	r0 = b[r9 + 24] (u)
    47a4:    70 b0             	r0 &= 4294967294
    47a6:    10 f9 18 90       	b[r9 + 24] = r0
    47aa:    0e 0a             	sp += 28
    47ac:    5f 01             	{pc, r15-r4} = [sp++]			  ## bredr_link.c:2552:1
    47ae:    00 00             	nop


tws_sync_call_end:
    47b0:    44 32             	if (r1 != 0) goto 136 <nvbss_begin+0x7A : 483a >
    47b2:    41 43             	r1 = [r1 + 80]
    47b4:    2a 6b             	b[r5 + 18] = r2
    47b6:    e1 01             	[--sp] = {psr, reti}

Disassembly of section .nv_bss:
nvbss_begin:
    47c0:    00 00 00 00     "\0\0\0\0"
    47c4:    00 00 00 00     "\0\0\0\0"
    47c8:    00 00 00 00     "\0\0\0\0"
    47cc:    00 00 00 00     "\0\0\0\0"
    47d0:    00 00 00 00     "\0\0\0\0"
    47d4:    00 00 00 00     "\0\0\0\0"
    47d8:    00 00 00 00     "\0\0\0\0"
    47dc:    00 00 00 00     "\0\0\0\0"
    47e0:    00 00 00 00     "\0\0\0\0"
    47e4:    00 00 00 00     "\0\0\0\0"
    47e8:    00 00 00 00     "\0\0\0\0"
    47ec:    00 00 00 00     "\0\0\0\0"
    47f0:    00 00 00 00     "\0\0\0\0"
    47f4:    00 00 00 00     "\0\0\0\0"
    47f8:    00 00 00 00     "\0\0\0\0"
    47fc:    00 00 00 00     "\0\0\0\0"
    4800:    00 00 00 00     "\0\0\0\0"
    4804:    00 00 00 00     "\0\0\0\0"
    4808:    00 00 00 00     "\0\0\0\0"
    480c:    00 00 00 00     "\0\0\0\0"
    4810:    00 00 00 00     "\0\0\0\0"
    4814:    00 00 00 00     "\0\0\0\0"
    4818:    00 00 00 00     "\0\0\0\0"
    481c:    00 00 00 00     "\0\0\0\0"
    4820:    00 00 00 00     "\0\0\0\0"
    4824:    00 00 00 00     "\0\0\0\0"
    4828:    00 00 00 00     "\0\0\0\0"
    482c:    00 00 00 00     "\0\0\0\0"
    4830:    00 00 00 00     "\0\0\0\0"
    4834:    00 00 00 00     "\0\0\0\0"
    4838:    00 00 00 00     "\0\0\0\0"
    483c:    00 00 00 00     "\0\0\0\0"
    4840:    00 00 00 00     "\0\0\0\0"
    4844:    00 00 00 00     "\0\0\0\0"
    4848:    00 00 00 00     "\0\0\0\0"
    484c:    00 00 00 00     "\0\0\0\0"
    4850:    00 00 00 00     "\0\0\0\0"
    4854:    00 00 00 00     "\0\0\0\0"
    4858:    00 00 00 00     "\0\0\0\0"
    485c:    00 00 00 00     "\0\0\0\0"
    4860:    00 00 00 00     "\0\0\0\0"
    4864:    00 00 00 00     "\0\0\0\0"
    4868:    00 00 00 00     "\0\0\0\0"
    486c:    00 00 00 00     "\0\0\0\0"
    4870:    00 00 00 00     "\0\0\0\0"
    4874:    00 00 00 00     "\0\0\0\0"
    4878:    00 00 00 00     "\0\0\0\0"
    487c:    00 00 00 00     "\0\0\0\0"
    4880:    00 00 00 00     "\0\0\0\0"
    4884:    00 00 00 00     "\0\0\0\0"
    4888:    00 00 00 00     "\0\0\0\0"
    488c:    00 00 00 00     "\0\0\0\0"
    4890:    00 00 00 00     "\0\0\0\0"
    4894:    00 00 00 00     "\0\0\0\0"
    4898:    00 00 00 00     "\0\0\0\0"
    489c:    00 00 00 00     "\0\0\0\0"
    48a0:    00 00 00 00     "\0\0\0\0"
    48a4:    00 00 00 00     "\0\0\0\0"
    48a8:    00 00 00 00     "\0\0\0\0"
    48ac:    00 00 00 00     "\0\0\0\0"
    48b0:    00 00 00 00     "\0\0\0\0"
    48b4:    00 00 00 00     "\0\0\0\0"
    48b8:    00 00 00 00     "\0\0\0\0"
    48bc:    00 00 00 00     "\0\0\0\0"
    48c0:    00 00 00 00     "\0\0\0\0"
    48c4:    00 00 00 00     "\0\0\0\0"
    48c8:    00 00 00 00     "\0\0\0\0"
    48cc:    00 00 00 00     "\0\0\0\0"
    48d0:    00 00 00 00     "\0\0\0\0"
    48d4:    00 00 00 00     "\0\0\0\0"
    48d8:    00 00 00 00     "\0\0\0\0"
    48dc:    00 00 00 00     "\0\0\0\0"
    48e0:    00 00 00 00     "\0\0\0\0"
    48e4:    00 00 00 00     "\0\0\0\0"
    48e8:    00 00 00 00     "\0\0\0\0"
    48ec:    00 00 00 00     "\0\0\0\0"
    48f0:    00 00 00 00     "\0\0\0\0"
    48f4:    00 00 00 00     "\0\0\0\0"
    48f8:    00 00 00 00     "\0\0\0\0"
    48fc:    00 00 00 00     "\0\0\0\0"
    4900:    00 00 00 00     "\0\0\0\0"
    4904:    00 00 00 00     "\0\0\0\0"
    4908:    00 00 00 00     "\0\0\0\0"
    490c:    00 00 00 00     "\0\0\0\0"
    4910:    00 00 00 00     "\0\0\0\0"
    4914:    00 00 00 00     "\0\0\0\0"
    4918:    00 00 00 00     "\0\0\0\0"
    491c:    00 00 00 00     "\0\0\0\0"
    4920:    00 00 00 00     "\0\0\0\0"
Disassembly of section .ram0_empty0:
.ram0_empty0:
Disassembly of section .debug_str:
.debug_str:
Disassembly of section .debug_loc:
.debug_loc:
Disassembly of section .debug_abbrev:
.debug_abbrev:
Disassembly of section .debug_info:
.debug_info:
Disassembly of section .debug_ranges:
.debug_ranges:
Disassembly of section .debug_macinfo:
.debug_macinfo:
Disassembly of section .debug_pubnames:
.debug_pubnames:
Disassembly of section .debug_pubtypes:
.debug_pubtypes:
Disassembly of section .debug_frame:
.debug_frame:
Disassembly of section .debug_line:
.debug_line:
Disassembly of section .debug_aranges:
.debug_aranges:
Disassembly of section .shstrtab:
.shstrtab:
Disassembly of section .symtab:
.symtab:
Disassembly of section .strtab:
.strtab:
